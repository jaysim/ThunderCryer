   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ustime.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.get_us_time,"ax",%progbits
  19              		.align	1
  20              		.global	get_us_time
  21              		.thumb
  22              		.thumb_func
  24              	get_us_time:
  25              	.LFB110:
  26              		.file 1 "../ustime.c"
   1:../ustime.c   **** #include "ustime.h"
   2:../ustime.c   **** #include <FreeRTOS.h>
   3:../ustime.c   **** #include "stm32f4xx.h"
   4:../ustime.c   **** 
   5:../ustime.c   **** /**
   6:../ustime.c   ****  * Get time count in microseconds.
   7:../ustime.c   ****  *
   8:../ustime.c   ****  * \note
   9:../ustime.c   ****  *   this function must be called at least
  10:../ustime.c   ****  *   once every 65ms to work correctly.
  11:../ustime.c   ****  *
  12:../ustime.c   ****  */
  13:../ustime.c   **** uint64_t get_us_time()
  14:../ustime.c   **** {
  27              		.loc 1 14 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 4, -8
  15:../ustime.c   ****     static uint16_t t0;
  16:../ustime.c   ****     static uint64_t tickcount;
  17:../ustime.c   **** 
  18:../ustime.c   ****     vPortEnterCritical();
  36              		.loc 1 18 0
  37 0002 FFF7FEFF 		bl	vPortEnterCritical
  19:../ustime.c   **** 
  20:../ustime.c   ****     int t = TIM7->CNT;
  21:../ustime.c   ****     if (t < t0)
  38              		.loc 1 21 0
  39 0006 0B4C     		ldr	r4, .L3
  20:../ustime.c   ****     int t = TIM7->CNT;
  40              		.loc 1 20 0
  41 0008 0B4B     		ldr	r3, .L3+4
  42 000a 596A     		ldr	r1, [r3, #36]
  43              	.LVL0:
  44              		.loc 1 21 0
  45 000c 2388     		ldrh	r3, [r4, #0]
  46 000e 9942     		cmp	r1, r3
  22:../ustime.c   ****         t += 0x10000;
  47              		.loc 1 22 0
  48 0010 B8BF     		it	lt
  49 0012 01F58031 		addlt	r1, r1, #65536
  50              	.LVL1:
  23:../ustime.c   **** 
  24:../ustime.c   ****     tickcount += t - t0;
  51              		.loc 1 24 0
  52 0016 C81A     		subs	r0, r1, r3
  53 0018 D4E90223 		ldrd	r2, [r4, #8]
  54 001c 1218     		adds	r2, r2, r0
  55 001e 43EBE073 		adc	r3, r3, r0, asr #31
  25:../ustime.c   ****     t0 = t;
  56              		.loc 1 25 0
  57 0022 2180     		strh	r1, [r4, #0]	@ movhi
  24:../ustime.c   ****     tickcount += t - t0;
  58              		.loc 1 24 0
  59 0024 C4E90223 		strd	r2, [r4, #8]
  26:../ustime.c   **** 
  27:../ustime.c   ****     vPortExitCritical();
  60              		.loc 1 27 0
  61 0028 FFF7FEFF 		bl	vPortExitCritical
  62              	.LVL2:
  28:../ustime.c   **** 
  29:../ustime.c   ****     return tickcount;
  63              		.loc 1 29 0
  64 002c A068     		ldr	r0, [r4, #8]
  65 002e E168     		ldr	r1, [r4, #12]
  30:../ustime.c   **** }
  66              		.loc 1 30 0
  67 0030 10BD     		pop	{r4, pc}
  68              	.L4:
  69 0032 00BF     		.align	2
  70              	.L3:
  71 0034 00000000 		.word	.LANCHOR0
  72 0038 00140040 		.word	1073746944
  73              		.cfi_endproc
  74              	.LFE110:
  76              		.section	.text.delay_us,"ax",%progbits
  77              		.align	1
  78              		.global	delay_us
  79              		.thumb
  80              		.thumb_func
  82              	delay_us:
  83              	.LFB111:
  31:../ustime.c   **** 
  32:../ustime.c   **** 
  33:../ustime.c   **** /**
  34:../ustime.c   ****  * Perform a microsecond delay
  35:../ustime.c   ****  *
  36:../ustime.c   ****  * \param  us  number of microseconds to wait.
  37:../ustime.c   ****  * \note   The actual delay will last between us and (us-1) microseconds.
  38:../ustime.c   ****  *         To wait _at_least_ 1 us, you should use delay_us(2).
  39:../ustime.c   ****  */
  40:../ustime.c   **** void delay_us(unsigned long us)
  41:../ustime.c   **** {
  84              		.loc 1 41 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              	.LVL3:
  89 0000 10B5     		push	{r4, lr}
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 14, -4
  93              		.cfi_offset 4, -8
  42:../ustime.c   ****     uint16_t  t0 = TIM7->CNT;
  94              		.loc 1 42 0
  95 0002 084B     		ldr	r3, .L9
  96 0004 5A6A     		ldr	r2, [r3, #36]
  97              	.LBB2:
  43:../ustime.c   ****     for (;;) {
  44:../ustime.c   ****         int  t = TIM7->CNT;
  98              		.loc 1 44 0
  99 0006 1946     		mov	r1, r3
 100              	.LBE2:
  42:../ustime.c   ****     uint16_t  t0 = TIM7->CNT;
 101              		.loc 1 42 0
 102 0008 92B2     		uxth	r2, r2
 103              	.LVL4:
 104              	.L8:
 105              	.LBB3:
 106              		.loc 1 44 0
 107 000a 4B6A     		ldr	r3, [r1, #36]
 108              	.LVL5:
  45:../ustime.c   ****         if (t < t0)
 109              		.loc 1 45 0
 110 000c 9342     		cmp	r3, r2
  46:../ustime.c   ****             t += 0x10000;
 111              		.loc 1 46 0
 112 000e B8BF     		it	lt
 113 0010 03F58033 		addlt	r3, r3, #65536
 114              	.LVL6:
  47:../ustime.c   **** 
  48:../ustime.c   ****         if (us < t - t0)
 115              		.loc 1 48 0
 116 0014 9C1A     		subs	r4, r3, r2
 117 0016 A042     		cmp	r0, r4
 118 0018 03D3     		bcc	.L5
  49:../ustime.c   ****             return;
  50:../ustime.c   **** 
  51:../ustime.c   ****         us -= t - t0;
 119              		.loc 1 51 0
 120 001a D21A     		subs	r2, r2, r3
 121              	.LVL7:
 122 001c 8018     		adds	r0, r0, r2
 123              	.LVL8:
  52:../ustime.c   ****         t0  = t;
 124              		.loc 1 52 0
 125 001e 9AB2     		uxth	r2, r3
 126              	.LVL9:
 127              	.LBE3:
  53:../ustime.c   ****     }
 128              		.loc 1 53 0
 129 0020 F3E7     		b	.L8
 130              	.L5:
 131 0022 10BD     		pop	{r4, pc}
 132              	.L10:
 133              		.align	2
 134              	.L9:
 135 0024 00140040 		.word	1073746944
 136              		.cfi_endproc
 137              	.LFE111:
 139              		.section	.text.delay_ms,"ax",%progbits
 140              		.align	1
 141              		.global	delay_ms
 142              		.thumb
 143              		.thumb_func
 145              	delay_ms:
 146              	.LFB112:
  54:../ustime.c   **** }
  55:../ustime.c   **** 
  56:../ustime.c   **** 
  57:../ustime.c   **** /**
  58:../ustime.c   ****  * Perform a millisecond delay
  59:../ustime.c   ****  *
  60:../ustime.c   ****  * \param  ms  number of milliseconds to wait.
  61:../ustime.c   ****  */
  62:../ustime.c   **** void delay_ms(unsigned long ms)
  63:../ustime.c   **** {
 147              		.loc 1 63 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL10:
  64:../ustime.c   ****     delay_us(ms * 1000);
 153              		.loc 1 64 0
 154 0000 4FF47A73 		mov	r3, #1000
 155 0004 5843     		muls	r0, r3, r0
 156              	.LVL11:
  65:../ustime.c   **** }
 157              		.loc 1 65 0
  64:../ustime.c   ****     delay_us(ms * 1000);
 158              		.loc 1 64 0
 159 0006 FFF7FEBF 		b	delay_us
 160              		.cfi_endproc
 161              	.LFE112:
 163              		.section	.text.init_us_timer,"ax",%progbits
 164              		.align	1
 165              		.global	init_us_timer
 166              		.thumb
 167              		.thumb_func
 169              	init_us_timer:
 170              	.LFB113:
  66:../ustime.c   **** 
  67:../ustime.c   **** 
  68:../ustime.c   **** /**
  69:../ustime.c   ****  * Set up TIM7 as a 16bit, microsecond-timer.
  70:../ustime.c   ****  *
  71:../ustime.c   ****  */
  72:../ustime.c   **** void init_us_timer()
  73:../ustime.c   **** {
 171              		.loc 1 73 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 16
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 24
 178              		.cfi_offset 14, -4
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 3, -12
 181              		.cfi_offset 2, -16
 182              		.cfi_offset 1, -20
 183              		.cfi_offset 0, -24
  74:../ustime.c   ****     RCC_ClocksTypeDef RCC_Clocks;
  75:../ustime.c   ****     RCC_GetClocksFreq(&RCC_Clocks);
 184              		.loc 1 75 0
 185 0002 6846     		mov	r0, sp
 186 0004 FFF7FEFF 		bl	RCC_GetClocksFreq
  76:../ustime.c   **** 
  77:../ustime.c   ****     RCC->APB1ENR |= RCC_APB1Periph_TIM7;
 187              		.loc 1 77 0
 188 0008 094B     		ldr	r3, .L13
 189 000a 1A6C     		ldr	r2, [r3, #64]
 190 000c 42F02002 		orr	r2, r2, #32
 191 0010 1A64     		str	r2, [r3, #64]
  78:../ustime.c   ****     TIM7->PSC = (RCC_Clocks.PCLK2_Frequency / 1000000) - 1;
 192              		.loc 1 78 0
 193 0012 039A     		ldr	r2, [sp, #12]
 194 0014 074B     		ldr	r3, .L13+4
 195 0016 B2FBF3F2 		udiv	r2, r2, r3
 196 001a 013A     		subs	r2, r2, #1
 197 001c 064B     		ldr	r3, .L13+8
 198 001e 92B2     		uxth	r2, r2
 199 0020 1A85     		strh	r2, [r3, #40]	@ movhi
  79:../ustime.c   ****     TIM7->ARR = 0xFFFF;
 200              		.loc 1 79 0
 201 0022 4FF6FF72 		movw	r2, #65535
 202 0026 DA62     		str	r2, [r3, #44]
  80:../ustime.c   ****     TIM7->CR1 = TIM_CR1_CEN;
 203              		.loc 1 80 0
 204 0028 0122     		movs	r2, #1
 205 002a 1A80     		strh	r2, [r3, #0]	@ movhi
  81:../ustime.c   **** }
 206              		.loc 1 81 0
 207 002c 05B0     		add	sp, sp, #20
 208 002e 00BD     		pop	{pc}
 209              	.L14:
 210              		.align	2
 211              	.L13:
 212 0030 00380240 		.word	1073887232
 213 0034 40420F00 		.word	1000000
 214 0038 00140040 		.word	1073746944
 215              		.cfi_endproc
 216              	.LFE113:
 218              		.bss
 219              		.align	3
 220              		.set	.LANCHOR0,. + 0
 223              	t0.4537:
 224 0000 0000     		.space	2
 225 0002 00000000 		.space	6
 225      0000
 228              	tickcount.4538:
 229 0008 00000000 		.space	8
 229      00000000 
 230              		.text
 231              	.Letext0:
 232              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 233              		.file 3 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4x
 234              		.file 4 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_
 235              		.file 5 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ustime.c
  C:\Temp\ccLLs6Z4.s:19     .text.get_us_time:00000000 $t
  C:\Temp\ccLLs6Z4.s:24     .text.get_us_time:00000000 get_us_time
  C:\Temp\ccLLs6Z4.s:71     .text.get_us_time:00000034 $d
  C:\Temp\ccLLs6Z4.s:77     .text.delay_us:00000000 $t
  C:\Temp\ccLLs6Z4.s:82     .text.delay_us:00000000 delay_us
  C:\Temp\ccLLs6Z4.s:135    .text.delay_us:00000024 $d
  C:\Temp\ccLLs6Z4.s:140    .text.delay_ms:00000000 $t
  C:\Temp\ccLLs6Z4.s:145    .text.delay_ms:00000000 delay_ms
  C:\Temp\ccLLs6Z4.s:164    .text.init_us_timer:00000000 $t
  C:\Temp\ccLLs6Z4.s:169    .text.init_us_timer:00000000 init_us_timer
  C:\Temp\ccLLs6Z4.s:212    .text.init_us_timer:00000030 $d
  C:\Temp\ccLLs6Z4.s:219    .bss:00000000 $d
  C:\Temp\ccLLs6Z4.s:223    .bss:00000000 t0.4537
  C:\Temp\ccLLs6Z4.s:228    .bss:00000008 tickcount.4538
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
RCC_GetClocksFreq
