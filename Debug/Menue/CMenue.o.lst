   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CMenue.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZNK5CTask7IsValidEv,"axG",%progbits,_ZNK5CTask7IsValidEv,comdat
  19              		.align	2
  20              		.weak	_ZNK5CTask7IsValidEv
  21              		.thumb
  22              		.thumb_func
  24              	_ZNK5CTask7IsValidEv:
  25              	.LFB132:
  26              		.file 1 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS_EC\\Source/CTask.h"
   1:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** /**
   2:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @file CTask.h
   3:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @class CTask
   4:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @ingroup FreeRTOS_Wrapper
   5:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
   6:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * The CTask class wraps a native FreeRTOS task handle (xTaskHandle). To create a task instance
   7:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * an object of this class and then call its CTask::Create method like showed in the following samp
   8:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * \code
   9:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * CTask g_aTask // global task declaration.
  10:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  11:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * void main()
  12:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * {
  13:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * 	g_aTask.Create(task_control_func, "Led2", configMINIMAL_STACK_SIZE, mainFLASH_TASK_PRIORITY);
  14:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  15:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * 	CFreeRTOS::StartScheduler();
  16:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * }
  17:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * \endcode
  18:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  19:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * Usually the application subclass this class to create an application specific task object.
  20:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * See the CHelloWorld class for an example.
  21:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  22:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * \sa <a href="http://www.freertos.org/taskandcr.html">task documentation</a> in the FreeRTOS web 
  23:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  24:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @date Jul 5, 2010
  25:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @author Stefano Oliveri (STF12.net)
  26:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *         E-Mail: software@stf12.net
  27:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  */
  28:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  29:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #ifndef CTASK_H_
  30:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #define CTASK_H_
  31:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  32:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #include "FreeRTOS.h"
  33:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #include "task.h"
  34:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #include "IFreeRTOSProtocol.h"
  35:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  36:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** class CTask: public IFreeRTOSObj {
  37:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  38:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  39:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Specifies the native FreeRTOS handle managed by an instance of this class.
  40:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  41:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	xTaskHandle m_handleTask;
  42:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  43:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** public:
  44:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  45:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * The default constructor. It initializes the object without attaching it to a native FreeRTOS ha
  46:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Call the Create method to allocate a task handle and attach it to the object.
  47:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  48:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	CTask();
  49:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  50:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  51:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Create a CTask instance and attach it to a valid handle.
  52:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 *
  53:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * @param handleTask a valid task handle.
  54:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  55:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	CTask(xTaskHandle handleTask);
  56:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  57:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  58:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Delete the native FreeRTOS task.
  59:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  60:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	virtual ~CTask();
  61:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  62:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  63:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Retrieve the native FreeRTOS task handle attached to this object.
  64:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 *
  65:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * @return the native FreeRTOS task handle attached to this object.
  66:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  67:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	inline operator xTaskHandle() const { return m_handleTask; }
  68:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  69:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	// FreeRTOS API Wrappers
  70:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  71:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  72:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Create a FreeRTOS task and attach its handle to the receiver object.
  73:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 *
  74:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/a00125.html">xTaskCreate</a> FreeRTOS API function.
  75:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  76:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	portBASE_TYPE Create(pdTASK_CODE pvTaskCode, const portCHAR * const pcName, unsigned portSHORT usS
  77:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  78:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  79:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Create a Memory Protection Unit (MPU) restricted task and attach its handle to the receiver obj
  80:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 *
  81:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/xTaskCreateRestricted.html">xTaskCreateRestricted</a> Free
  82:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  83:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	portBASE_TYPE CreateRestricted(xTaskParameters *pxTaskDefinition);
  84:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  85:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  86:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/a00126.html">vTaskDelete</a>  FreeRTOS API function.
  87:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  88:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	void Delete();
  89:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  90:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  91:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/a00127.html">vTaskDelay</a>  FreeRTOS API function.
  92:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  93:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	inline static void Delay(portTickType xTicksToDelay);
  94:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  95:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  96:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/vtaskdelayuntil.html">vTaskDelayUntil</a>  FreeRTOS API fu
  97:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  98:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void DelayUntil(portTickType *pxPreviousWakeTime, portTickType xTimeIncrement);
  99:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 100:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 101:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskYIELD">taskYIELD</a>  FreeRTOS API func
 102:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 103:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void Yeld() { taskYIELD(); }
 104:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 105:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 106:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskENTER_CRITICAL">taskENTER_CRITICAL</a> 
 107:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 108:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void EnterCritical() { taskENTER_CRITICAL(); }
 109:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 110:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 111:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskEXIT_CRITICAL">taskEXIT_CRITICAL</a>  F
 112:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 113:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void ExitCritical() { taskEXIT_CRITICAL(); }
 114:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 115:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 116:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskDISABLE_INTERRUPTS">taskDISABLE_INTERRU
 117:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 118:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void DisableInterrupt() { taskDISABLE_INTERRUPTS(); }
 119:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 120:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 121:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskENABLE_INTERRUPTS">taskENABLE_INTERRUPT
 122:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 123:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void EnableInterrupt() { taskENABLE_INTERRUPTS(); }
 124:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 125:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 126:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#xTaskGetCurrentTaskHandle">xTaskGetCurrentT
 127:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 128:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static xTaskHandle GetCurrentTaskHandle();
 129:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 130:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 131:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#xTaskGetTickCount">xTaskGetTickCount</a>  F
 132:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 133:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static portTickType GetTickCount();
 134:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 135:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 136:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#xTaskGetSchedulerState">xTaskGetSchedulerSt
 137:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 138:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static portBASE_TYPE GetSchedulerState();
 139:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 140:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 141:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#usTaskGetNumberOfTasks">uxTaskGetNumberOfTa
 142:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 143:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static unsigned portBASE_TYPE GetNumberOfTasks();
 144:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 145:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 146:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#vTaskList">vTaskList</a>  FreeRTOS API func
 147:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 148:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void GetTaskList(portCHAR *pcWriteBuffer);
 149:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 150:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 151:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#vTaskGetRunTimeStats">vTaskGetRunTimeStats<
 152:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 153:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void GetRunTimeStats(portCHAR *pcWriteBuffer);
 154:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 155:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 156:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00128.html">uxTaskPriorityGet</a>  FreeRTOS API functi
 157:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 158:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline unsigned portBASE_TYPE PriorityGet() const;
 159:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 160:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 161:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00129.html">vTaskPrioritySet</a>  FreeRTOS API functio
 162:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 163:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void PrioritySet(unsigned portBASE_TYPE uxNewPriority);
 164:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 165:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 166:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00130.html">vTaskSuspend</a>  FreeRTOS API function.
 167:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 168:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void Suspend();
 169:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 170:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 171:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00131.html">vTaskResume</a>  FreeRTOS API function.
 172:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 173:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void Resume();
 174:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 175:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 176:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/taskresumefromisr.html">xTaskResumeFromISR</a>  FreeRTO
 177:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 178:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline portBASE_TYPE ResumeFromISR();
 179:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 180:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 181:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/vTaskSetApplicationTag.html">vTaskSetApplicationTaskTag
 182:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 183:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void SetApplicationTag(pdTASK_HOOK_CODE pxTagValue);
 184:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 185:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 186:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/xTaskCallApplicationTaskHook.html">xTaskCallApplication
 187:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 188:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline portBASE_TYPE CallApplicationTaskHook(void *pvParameter);
 189:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 190:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 191:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/vTaskAllocateMPURegions.html">vTaskAllocateMPURegions</
 192:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 193:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void AllocateMPURegions(const xMemoryRegion * const xRegions);
 194:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 195:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     // FreeRTOS class extension.
 196:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	inline bool IsValid() const;
 197:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	void Attach(xGenericHandle handle);
 198:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	inline xGenericHandle Detach();
 199:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** };
 200:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 201:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** // inline method
 202:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** ////////////////
 203:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 204:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 205:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::Delay(portTickType xTicksToDelay) {
 206:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskDelay == 1 )
 207:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskDelay(xTicksToDelay);
 208:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 209:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 210:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 211:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 212:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::DelayUntil(portTickType *pxPreviousWakeTime, portTickType xTimeIncrement) {
 213:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskDelayUntil == 1 )
 214:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskDelayUntil(pxPreviousWakeTime, xTimeIncrement);
 215:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 216:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 217:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 218:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 219:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** xTaskHandle CTask::GetCurrentTaskHandle() {
 220:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskGetCurrentTaskHandle();
 221:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 222:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 223:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 224:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** portTickType CTask::GetTickCount() {
 225:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskGetTickCount();
 226:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 227:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 228:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 229:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** portBASE_TYPE CTask::GetSchedulerState() {
 230:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_xTaskGetSchedulerState == 1 )
 231:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskGetSchedulerState();
 232:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #else
 233:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return 0;
 234:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 235:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 236:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 237:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 238:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** unsigned portBASE_TYPE CTask::GetNumberOfTasks() {
 239:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return uxTaskGetNumberOfTasks();
 240:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 241:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 242:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 243:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::GetTaskList(portCHAR *pcWriteBuffer) {
 244:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( configUSE_TRACE_FACILITY == 1 )
 245:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskList((signed portCHAR*)pcWriteBuffer);
 246:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 247:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 248:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 249:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 250:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::GetRunTimeStats(portCHAR *pcWriteBuffer) {
 251:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if (configGENERATE_RUN_TIME_STATS == 1)
 252:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskGetRunTimeStats((signed portCHAR*)pcWriteBuffer);
 253:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 254:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 255:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 256:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 257:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** unsigned portBASE_TYPE CTask::PriorityGet() const {
 258:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
 259:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return uxTaskPriorityGet(m_handleTask);
 260:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #else
 261:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return -1;
 262:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 263:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 264:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 265:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 266:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::PrioritySet(unsigned portBASE_TYPE uxNewPriority) {
 267:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskPrioritySet == 1 )
 268:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskPrioritySet(m_handleTask, uxNewPriority);
 269:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 270:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 271:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 272:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 273:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::Suspend() {
 274:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskSuspend == 1 )
 275:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskSuspend(m_handleTask);
 276:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 277:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 278:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 279:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 280:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::Resume() {
 281:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskSuspend == 1 )
 282:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskResume(m_handleTask);
 283:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 284:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 285:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 286:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 287:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** portBASE_TYPE CTask::ResumeFromISR() {
 288:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
 289:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskResumeFromISR(m_handleTask);
 290:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #else
 291:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return pdFALSE;
 292:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 293:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 294:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 295:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 296:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::SetApplicationTag(pdTASK_HOOK_CODE pxTagValue) {
 297:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 298:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskSetApplicationTaskTag(m_handleTask, pxTagValue);
 299:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 300:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 301:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 302:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 303:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** portBASE_TYPE CTask::CallApplicationTaskHook(void *pvParameter) {
 304:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 305:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskCallApplicationTaskHook(m_handleTask, pvParameter);
 306:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #else
 307:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return 0;
 308:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 309:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 310:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 311:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 312:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::AllocateMPURegions(const xMemoryRegion * const xRegions) {
 313:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( portUSING_MPU_WRAPPERS == 1 )
 314:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskAllocateMPURegions(m_handleTask, xRegions);
 315:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 316:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 317:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 318:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 319:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** bool CTask::IsValid() const{
  27              		.loc 1 319 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 320:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return m_handleTask != NULL;
  43              		.loc 1 320 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 5B68     		ldr	r3, [r3, #4]
  46 000c 002B     		cmp	r3, #0
  47 000e 0CBF     		ite	eq
  48 0010 0023     		moveq	r3, #0
  49 0012 0123     		movne	r3, #1
  50 0014 DBB2     		uxtb	r3, r3
 321:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
  51              		.loc 1 321 0
  52 0016 1846     		mov	r0, r3
  53 0018 07F10C07 		add	r7, r7, #12
  54 001c BD46     		mov	sp, r7
  55 001e 80BC     		pop	{r7}
  56 0020 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE132:
  60 0022 00BF     		.section	.text._ZN5CTask6DetachEv,"axG",%progbits,_ZN5CTask6DetachEv,comdat
  61              		.align	2
  62              		.weak	_ZN5CTask6DetachEv
  63              		.thumb
  64              		.thumb_func
  66              	_ZN5CTask6DetachEv:
  67              	.LFB133:
 322:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 323:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 324:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** xGenericHandle CTask::Detach() {
  68              		.loc 1 324 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 16
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 85B0     		sub	sp, sp, #20
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 24
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI5:
  82              		.cfi_def_cfa_register 7
  83 0006 7860     		str	r0, [r7, #4]
  84              	.LBB2:
 325:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	xTaskHandle res = m_handleTask;
  85              		.loc 1 325 0
  86 0008 7B68     		ldr	r3, [r7, #4]
  87 000a 5B68     		ldr	r3, [r3, #4]
  88 000c FB60     		str	r3, [r7, #12]
 326:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	m_handleTask = NULL;
  89              		.loc 1 326 0
  90 000e 7B68     		ldr	r3, [r7, #4]
  91 0010 4FF00002 		mov	r2, #0
  92 0014 5A60     		str	r2, [r3, #4]
 327:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return res;
  93              		.loc 1 327 0
  94 0016 FB68     		ldr	r3, [r7, #12]
  95              	.LBE2:
 328:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
  96              		.loc 1 328 0
  97 0018 1846     		mov	r0, r3
  98 001a 07F11407 		add	r7, r7, #20
  99 001e BD46     		mov	sp, r7
 100 0020 80BC     		pop	{r7}
 101 0022 7047     		bx	lr
 102              		.cfi_endproc
 103              	.LFE133:
 105              		.section	.text._ZN12AManagedTask8OnCreateEPKctm,"axG",%progbits,_ZN12AManagedTask8OnCreateEPKctm,c
 106              		.align	2
 107              		.weak	_ZN12AManagedTask8OnCreateEPKctm
 108              		.thumb
 109              		.thumb_func
 111              	_ZN12AManagedTask8OnCreateEPKctm:
 112              	.LFB135:
 113              		.file 2 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS_EC\\Source/AManagedTask.h"
   1:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** /**
   2:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @file AManagedTask.h
   3:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @class AManagedTask
   4:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *
   5:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * This class extend the CTask in order to provide a more structured and simple to use framework fo
   6:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * FreeRTOS programming. All AManagedTask derived objects are grouped in linked list. Please note t
   7:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * this data structure can be modified in a next release. The framework manage these task objects
   8:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * by calling their methods during the application life cycle.
   9:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *
  10:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * The application extend this abstract class to create a managed task and provide its control loop
  11:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * \code
  12:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * class CMyPipe: public AManagedTask
  13:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * {
  14:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *   // Task private variables.
  15:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *
  16:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * public:
  17:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *   void Run() {  task control loop  };
  18:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * }
  19:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * \endcode
  20:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *
  21:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @date Aug 3, 2010
  22:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @author Stefano Oliveri
  23:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *         E-Mail: software@stf12.net
  24:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  */
  25:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  26:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** /**
  27:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @defgroup FreeRTOS_Managed FreeRTOS Managed Class Extension
  28:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @ingroup FreeRTOS_CPP_EXT
  29:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * The FreeRTOS Managed Class Extension are a set of class that provide a structured and
  30:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * managed framework to develop a FreeRTOS application.
  31:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @{
  32:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  */
  33:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  34:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** #ifndef AMANAGEDTASK_H_
  35:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** #define AMANAGEDTASK_H_
  36:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  37:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** #include "CTask.h"
  38:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  39:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** class AManagedTask: public CTask {
  40:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	friend class CFreeRTOS;
  41:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  42:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  43:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Specifies the head of the linked list used to group all application managed task.
  44:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  45:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	static AManagedTask *s_pManagedTaskListHead;
  46:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  47:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  48:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Specifies the next managed task in the list or NULL if this is the last managed task.
  49:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  50:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	AManagedTask *m_pNextManagedTask;
  51:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  52:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** public:
  53:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  54:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  55:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Default constructor.
  56:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  57:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	AManagedTask();
  58:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  59:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  60:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Destructor.
  61:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  62:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	virtual ~AManagedTask();
  63:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  64:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  65:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Create the FreeRTOS task attached to this object.
  66:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  67:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param pcName name of the task. Need only for debug purpose.
  68:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param usStackDepth size in word of the task stack.
  69:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param uxPriority task priority. Valid value ar between taskIDLE_PRIORITY and configMAX_PRIORIT
  70:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  71:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @sa CTask::Create
  72:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  73:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	portBASE_TYPE Create(const portCHAR * const pcName, unsigned portSHORT usStackDepth, unsigned port
  74:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  75:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  76:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * The framework calls this function before the scheduler start. The default implementation simply
  77:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Override this method to perform task specific hardware initialization that does not use FreeRTO
  78:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  79:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @return true if success, false otherwise.
  80:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  81:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	virtual bool HardwareInit() { return true; }
  82:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  83:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  84:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Task control loop.
  85:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  86:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	virtual void Run() =0;
  87:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  88:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  89:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * The framework calls this function before the task is created to give a chance to a managed task
  90:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * own initialization code and stop the task creation process if needed.
  91:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  92:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param pcName specifies the task name.
  93:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param usStackDepth specifies the task stack depth.
  94:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param uxPriority specifies the task priority.
  95:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  96:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @return pdTRUE if success, pdFALSE otherwise. If the method return pdFALSE the task creation pr
  97:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * is stopped and no FreeRTOS resource are allocated.
  98:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  99:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	virtual portBASE_TYPE OnCreate(const portCHAR * const pcName, unsigned portSHORT usStackDepth, uns
 114              		.loc 2 99 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 16
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119 0000 80B4     		push	{r7}
 120              	.LCFI6:
 121              		.cfi_def_cfa_offset 4
 122              		.cfi_offset 7, -4
 123 0002 85B0     		sub	sp, sp, #20
 124              	.LCFI7:
 125              		.cfi_def_cfa_offset 24
 126 0004 00AF     		add	r7, sp, #0
 127              	.LCFI8:
 128              		.cfi_def_cfa_register 7
 129 0006 F860     		str	r0, [r7, #12]
 130 0008 B960     		str	r1, [r7, #8]
 131 000a 3B60     		str	r3, [r7, #0]
 132 000c 1346     		mov	r3, r2	@ movhi
 133 000e FB80     		strh	r3, [r7, #6]	@ movhi
 134              		.loc 2 99 0
 135 0010 4FF00103 		mov	r3, #1
 136 0014 1846     		mov	r0, r3
 137 0016 07F11407 		add	r7, r7, #20
 138 001a BD46     		mov	sp, r7
 139 001c 80BC     		pop	{r7}
 140 001e 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE135:
 144              		.section	.text._ZN6CMenueC2EP11CGraphicLCD,"ax",%progbits
 145              		.align	2
 146              		.global	_ZN6CMenueC2EP11CGraphicLCD
 147              		.thumb
 148              		.thumb_func
 150              	_ZN6CMenueC2EP11CGraphicLCD:
 151              	.LFB137:
 152              		.file 3 "../Menue/CMenue.cpp"
   1:../Menue/CMenue.cpp **** /**
   2:../Menue/CMenue.cpp ****   ******************************************************************************
   3:../Menue/CMenue.cpp ****   * @file      	CMenue.cpp
   4:../Menue/CMenue.cpp ****   * @author    	Tecnologic86
   5:../Menue/CMenue.cpp ****   * @version   	V0.0.0
   6:../Menue/CMenue.cpp ****   * @date      	18.02.12
   7:../Menue/CMenue.cpp ****   * @brief		Class for Menu displayed on GraphicsLCD
   8:../Menue/CMenue.cpp ****   ******************************************************************************
   9:../Menue/CMenue.cpp ****   */
  10:../Menue/CMenue.cpp **** 
  11:../Menue/CMenue.cpp **** /* Includes ------------------------------------------------------------------*/
  12:../Menue/CMenue.cpp **** #include "CMenue.h"
  13:../Menue/CMenue.cpp **** #include "CT6963CDriver.h"
  14:../Menue/CMenue.cpp **** #include "SansSerif12.h"
  15:../Menue/CMenue.cpp **** #include "SansSerif26.h"
  16:../Menue/CMenue.cpp **** #include <cstdio>
  17:../Menue/CMenue.cpp **** /* Private typedef -----------------------------------------------------------*/
  18:../Menue/CMenue.cpp **** /* Private define ------------------------------------------------------------*/
  19:../Menue/CMenue.cpp **** /* Private macro -------------------------------------------------------------*/
  20:../Menue/CMenue.cpp **** /* Private variables ---------------------------------------------------------*/
  21:../Menue/CMenue.cpp **** /* Private function prototypes -----------------------------------------------*/
  22:../Menue/CMenue.cpp **** /* Private functions ---------------------------------------------------------*/
  23:../Menue/CMenue.cpp **** 
  24:../Menue/CMenue.cpp **** 
  25:../Menue/CMenue.cpp **** CMenue::CMenue(CGraphicLCD *display) : glcd(display){
 153              		.loc 3 25 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157 0000 80B5     		push	{r7, lr}
 158              	.LCFI9:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 14, -4
 161              		.cfi_offset 7, -8
 162 0002 82B0     		sub	sp, sp, #8
 163              	.LCFI10:
 164              		.cfi_def_cfa_offset 16
 165 0004 00AF     		add	r7, sp, #0
 166              	.LCFI11:
 167              		.cfi_def_cfa_register 7
 168 0006 7860     		str	r0, [r7, #4]
 169 0008 3960     		str	r1, [r7, #0]
 170              	.LBB3:
 171              		.loc 3 25 0
 172 000a 7B68     		ldr	r3, [r7, #4]
 173 000c 1846     		mov	r0, r3
 174 000e FFF7FEFF 		bl	_ZN12AManagedTaskC2Ev
 175 0012 7B68     		ldr	r3, [r7, #4]
 176 0014 054A     		ldr	r2, .L6
 177 0016 1A60     		str	r2, [r3, #0]
 178 0018 7B68     		ldr	r3, [r7, #4]
 179 001a 3A68     		ldr	r2, [r7, #0]
 180 001c DA60     		str	r2, [r3, #12]
 181              	.LBE3:
  26:../Menue/CMenue.cpp **** }
 182              		.loc 3 26 0
 183 001e 7B68     		ldr	r3, [r7, #4]
 184 0020 1846     		mov	r0, r3
 185 0022 07F10807 		add	r7, r7, #8
 186 0026 BD46     		mov	sp, r7
 187 0028 80BD     		pop	{r7, pc}
 188              	.L7:
 189 002a 00BF     		.align	2
 190              	.L6:
 191 002c 08000000 		.word	_ZTV6CMenue+8
 192              		.cfi_endproc
 193              	.LFE137:
 195              		.section	.text._ZN6CMenueD2Ev,"ax",%progbits
 196              		.align	2
 197              		.global	_ZN6CMenueD2Ev
 198              		.thumb
 199              		.thumb_func
 201              	_ZN6CMenueD2Ev:
 202              	.LFB140:
  27:../Menue/CMenue.cpp **** 
  28:../Menue/CMenue.cpp **** CMenue::~CMenue() {
 203              		.loc 3 28 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 8
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              	.LCFI12:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 14, -4
 211              		.cfi_offset 7, -8
 212 0002 82B0     		sub	sp, sp, #8
 213              	.LCFI13:
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              	.LCFI14:
 217              		.cfi_def_cfa_register 7
 218 0006 7860     		str	r0, [r7, #4]
 219              	.LBB4:
 220              		.loc 3 28 0
 221 0008 7B68     		ldr	r3, [r7, #4]
 222 000a 0A4A     		ldr	r2, .L11
 223 000c 1A60     		str	r2, [r3, #0]
  29:../Menue/CMenue.cpp **** 	// TODO Auto-generated destructor stub
  30:../Menue/CMenue.cpp **** }
 224              		.loc 3 30 0
 225 000e 7868     		ldr	r0, [r7, #4]
 226 0010 FFF7FEFF 		bl	_ZN12AManagedTaskD2Ev
 227              	.LBE4:
 228 0014 4FF00003 		mov	r3, #0
 229 0018 03F00103 		and	r3, r3, #1
 230 001c DBB2     		uxtb	r3, r3
 231 001e 002B     		cmp	r3, #0
 232 0020 02D0     		beq	.L10
 233              		.loc 3 30 0 is_stmt 0 discriminator 2
 234 0022 7868     		ldr	r0, [r7, #4]
 235 0024 FFF7FEFF 		bl	_ZdlPv
 236              	.L10:
 237              		.loc 3 30 0 discriminator 3
 238 0028 7B68     		ldr	r3, [r7, #4]
 239 002a 1846     		mov	r0, r3
 240 002c 07F10807 		add	r7, r7, #8
 241 0030 BD46     		mov	sp, r7
 242 0032 80BD     		pop	{r7, pc}
 243              	.L12:
 244              		.align	2
 245              	.L11:
 246 0034 08000000 		.word	_ZTV6CMenue+8
 247              		.cfi_endproc
 248              	.LFE140:
 250              		.section	.text._ZN6CMenueD0Ev,"ax",%progbits
 251              		.align	2
 252              		.global	_ZN6CMenueD0Ev
 253              		.thumb
 254              		.thumb_func
 256              	_ZN6CMenueD0Ev:
 257              	.LFB142:
  28:../Menue/CMenue.cpp **** CMenue::~CMenue() {
 258              		.loc 3 28 0 is_stmt 1
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 8
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262 0000 80B5     		push	{r7, lr}
 263              	.LCFI15:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 14, -4
 266              		.cfi_offset 7, -8
 267 0002 82B0     		sub	sp, sp, #8
 268              	.LCFI16:
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              	.LCFI17:
 272              		.cfi_def_cfa_register 7
 273 0006 7860     		str	r0, [r7, #4]
 274              		.loc 3 30 0
 275 0008 7868     		ldr	r0, [r7, #4]
 276 000a FFF7FEFF 		bl	_ZN6CMenueD1Ev
 277 000e 7868     		ldr	r0, [r7, #4]
 278 0010 FFF7FEFF 		bl	_ZdlPv
 279 0014 7B68     		ldr	r3, [r7, #4]
 280 0016 1846     		mov	r0, r3
 281 0018 07F10807 		add	r7, r7, #8
 282 001c BD46     		mov	sp, r7
 283 001e 80BD     		pop	{r7, pc}
 284              		.cfi_endproc
 285              	.LFE142:
 287              		.section	.text._ZN6CMenue12HardwareInitEv,"ax",%progbits
 288              		.align	2
 289              		.global	_ZN6CMenue12HardwareInitEv
 290              		.thumb
 291              		.thumb_func
 293              	_ZN6CMenue12HardwareInitEv:
 294              	.LFB143:
  31:../Menue/CMenue.cpp **** 
  32:../Menue/CMenue.cpp **** /**
  33:../Menue/CMenue.cpp ****   * @brief  HardwareInit called before Scheduler starts
  34:../Menue/CMenue.cpp ****   * @param  None
  35:../Menue/CMenue.cpp ****   * @retval true on success
  36:../Menue/CMenue.cpp ****   */
  37:../Menue/CMenue.cpp **** bool CMenue::HardwareInit(void){
 295              		.loc 3 37 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 8
 298              		@ frame_needed = 1, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300 0000 80B4     		push	{r7}
 301              	.LCFI18:
 302              		.cfi_def_cfa_offset 4
 303              		.cfi_offset 7, -4
 304 0002 83B0     		sub	sp, sp, #12
 305              	.LCFI19:
 306              		.cfi_def_cfa_offset 16
 307 0004 00AF     		add	r7, sp, #0
 308              	.LCFI20:
 309              		.cfi_def_cfa_register 7
 310 0006 7860     		str	r0, [r7, #4]
  38:../Menue/CMenue.cpp **** 
  39:../Menue/CMenue.cpp **** 	return true;
 311              		.loc 3 39 0
 312 0008 4FF00103 		mov	r3, #1
  40:../Menue/CMenue.cpp **** }
 313              		.loc 3 40 0
 314 000c 1846     		mov	r0, r3
 315 000e 07F10C07 		add	r7, r7, #12
 316 0012 BD46     		mov	sp, r7
 317 0014 80BC     		pop	{r7}
 318 0016 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE143:
 322              		.section	.rodata
 323              		.align	2
 324              	.LC0:
 325 0000 496E7472 		.ascii	"Introducing Project:\000"
 325      6F647563 
 325      696E6720 
 325      50726F6A 
 325      6563743A 
 326 0015 000000   		.align	2
 327              	.LC1:
 328 0018 5468756E 		.ascii	"ThunderCryer\000"
 328      64657243 
 328      72796572 
 328      00
 329 0025 000000   		.align	2
 330              	.LC2:
 331 0028 32313A31 		.ascii	"21:14\000"
 331      3400
 332 002e 0000     		.align	2
 333              	.LC3:
 334 0030 46722E20 		.ascii	"Fr. 24.02.12\000"
 334      32342E30 
 334      322E3132 
 334      00
 335 003d 000000   		.align	2
 336              	.LC4:
 337 0040 44657665 		.ascii	"Development in progress\000"
 337      6C6F706D 
 337      656E7420 
 337      696E2070 
 337      726F6772 
 338              		.align	2
 339              	.LC5:
 340 0058 25303275 		.ascii	"%02u\000"
 340      00
 341 005d 000000   		.section	.text._ZN6CMenue3RunEv,"ax",%progbits
 342              		.align	2
 343              		.global	_ZN6CMenue3RunEv
 344              		.thumb
 345              		.thumb_func
 347              	_ZN6CMenue3RunEv:
 348              	.LFB144:
  41:../Menue/CMenue.cpp **** 
  42:../Menue/CMenue.cpp **** 
  43:../Menue/CMenue.cpp **** /**
  44:../Menue/CMenue.cpp ****   * @brief  task function for Menu
  45:../Menue/CMenue.cpp ****   * @param  None
  46:../Menue/CMenue.cpp ****   * @retval None
  47:../Menue/CMenue.cpp ****   */
  48:../Menue/CMenue.cpp **** void CMenue::Run(void){
 349              		.loc 3 48 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 16
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353 0000 90B5     		push	{r4, r7, lr}
 354              	.LCFI21:
 355              		.cfi_def_cfa_offset 12
 356              		.cfi_offset 14, -4
 357              		.cfi_offset 7, -8
 358              		.cfi_offset 4, -12
 359 0002 87B0     		sub	sp, sp, #28
 360              	.LCFI22:
 361              		.cfi_def_cfa_offset 40
 362 0004 02AF     		add	r7, sp, #8
 363              	.LCFI23:
 364              		.cfi_def_cfa 7, 32
 365 0006 7860     		str	r0, [r7, #4]
 366              	.LBB5:
  49:../Menue/CMenue.cpp **** 	char buffer[4];
  50:../Menue/CMenue.cpp **** 	int x = 0;
 367              		.loc 3 50 0
 368 0008 4FF00003 		mov	r3, #0
 369 000c FB60     		str	r3, [r7, #12]
  51:../Menue/CMenue.cpp **** 
  52:../Menue/CMenue.cpp **** 	glcd->Init();
 370              		.loc 3 52 0
 371 000e 7B68     		ldr	r3, [r7, #4]
 372 0010 DB68     		ldr	r3, [r3, #12]
 373 0012 1B68     		ldr	r3, [r3, #0]
 374 0014 03F12003 		add	r3, r3, #32
 375 0018 1B68     		ldr	r3, [r3, #0]
 376 001a 7A68     		ldr	r2, [r7, #4]
 377 001c D268     		ldr	r2, [r2, #12]
 378 001e 1046     		mov	r0, r2
 379 0020 9847     		blx	r3
  53:../Menue/CMenue.cpp **** 	glcd->Inverse(true);
 380              		.loc 3 53 0
 381 0022 7B68     		ldr	r3, [r7, #4]
 382 0024 DB68     		ldr	r3, [r3, #12]
 383 0026 1846     		mov	r0, r3
 384 0028 4FF00101 		mov	r1, #1
 385 002c FFF7FEFF 		bl	_ZN11CGraphicLCD7InverseEb
  54:../Menue/CMenue.cpp **** 	glcd->Clear();
 386              		.loc 3 54 0
 387 0030 7B68     		ldr	r3, [r7, #4]
 388 0032 DB68     		ldr	r3, [r3, #12]
 389 0034 1B68     		ldr	r3, [r3, #0]
 390 0036 1B68     		ldr	r3, [r3, #0]
 391 0038 7A68     		ldr	r2, [r7, #4]
 392 003a D268     		ldr	r2, [r2, #12]
 393 003c 1046     		mov	r0, r2
 394 003e 9847     		blx	r3
  55:../Menue/CMenue.cpp **** 
  56:../Menue/CMenue.cpp **** 
  57:../Menue/CMenue.cpp **** 	vTaskDelay(500/portTICK_RATE_MS);
 395              		.loc 3 57 0
 396 0040 4FF03200 		mov	r0, #50
 397 0044 FFF7FEFF 		bl	vTaskDelay
  58:../Menue/CMenue.cpp **** 	glcd->WriteString("Introducing Project:",c_FontSansSerif12,5,5);
 398              		.loc 3 58 0
 399 0048 7B68     		ldr	r3, [r7, #4]
 400 004a DB68     		ldr	r3, [r3, #12]
 401 004c 1B68     		ldr	r3, [r3, #0]
 402 004e 03F11803 		add	r3, r3, #24
 403 0052 1C68     		ldr	r4, [r3, #0]
 404 0054 7B68     		ldr	r3, [r7, #4]
 405 0056 DB68     		ldr	r3, [r3, #12]
 406 0058 4FF00502 		mov	r2, #5
 407 005c 0092     		str	r2, [sp, #0]
 408 005e 1846     		mov	r0, r3
 409 0060 40F20001 		movw	r1, #:lower16:.LC0
 410 0064 C0F20001 		movt	r1, #:upper16:.LC0
 411 0068 40F20002 		movw	r2, #:lower16:c_FontSansSerif12
 412 006c C0F20002 		movt	r2, #:upper16:c_FontSansSerif12
 413 0070 4FF00503 		mov	r3, #5
 414 0074 A047     		blx	r4
  59:../Menue/CMenue.cpp **** 
  60:../Menue/CMenue.cpp **** 	vTaskDelay(1000/portTICK_RATE_MS);
 415              		.loc 3 60 0
 416 0076 4FF06400 		mov	r0, #100
 417 007a FFF7FEFF 		bl	vTaskDelay
  61:../Menue/CMenue.cpp **** 	glcd->WriteString("ThunderCryer",c_FontSansSerif26,3,35);
 418              		.loc 3 61 0
 419 007e 7B68     		ldr	r3, [r7, #4]
 420 0080 DB68     		ldr	r3, [r3, #12]
 421 0082 1B68     		ldr	r3, [r3, #0]
 422 0084 03F11803 		add	r3, r3, #24
 423 0088 1C68     		ldr	r4, [r3, #0]
 424 008a 7B68     		ldr	r3, [r7, #4]
 425 008c DB68     		ldr	r3, [r3, #12]
 426 008e 4FF02302 		mov	r2, #35
 427 0092 0092     		str	r2, [sp, #0]
 428 0094 1846     		mov	r0, r3
 429 0096 40F20001 		movw	r1, #:lower16:.LC1
 430 009a C0F20001 		movt	r1, #:upper16:.LC1
 431 009e 40F20002 		movw	r2, #:lower16:c_FontSansSerif26
 432 00a2 C0F20002 		movt	r2, #:upper16:c_FontSansSerif26
 433 00a6 4FF00303 		mov	r3, #3
 434 00aa A047     		blx	r4
  62:../Menue/CMenue.cpp **** 
  63:../Menue/CMenue.cpp **** 	vTaskDelay(10000/portTICK_RATE_MS);
 435              		.loc 3 63 0
 436 00ac 4FF47A70 		mov	r0, #1000
 437 00b0 FFF7FEFF 		bl	vTaskDelay
  64:../Menue/CMenue.cpp **** 	glcd->Clear();
 438              		.loc 3 64 0
 439 00b4 7B68     		ldr	r3, [r7, #4]
 440 00b6 DB68     		ldr	r3, [r3, #12]
 441 00b8 1B68     		ldr	r3, [r3, #0]
 442 00ba 1B68     		ldr	r3, [r3, #0]
 443 00bc 7A68     		ldr	r2, [r7, #4]
 444 00be D268     		ldr	r2, [r2, #12]
 445 00c0 1046     		mov	r0, r2
 446 00c2 9847     		blx	r3
  65:../Menue/CMenue.cpp **** 	glcd->Window(2,2,100,60);
 447              		.loc 3 65 0
 448 00c4 7B68     		ldr	r3, [r7, #4]
 449 00c6 DB68     		ldr	r3, [r3, #12]
 450 00c8 1B68     		ldr	r3, [r3, #0]
 451 00ca 03F10803 		add	r3, r3, #8
 452 00ce 1C68     		ldr	r4, [r3, #0]
 453 00d0 7B68     		ldr	r3, [r7, #4]
 454 00d2 DB68     		ldr	r3, [r3, #12]
 455 00d4 4FF03C02 		mov	r2, #60
 456 00d8 0092     		str	r2, [sp, #0]
 457 00da 1846     		mov	r0, r3
 458 00dc 4FF00201 		mov	r1, #2
 459 00e0 4FF00202 		mov	r2, #2
 460 00e4 4FF06403 		mov	r3, #100
 461 00e8 A047     		blx	r4
  66:../Menue/CMenue.cpp **** 	glcd->WriteString("21:14",c_FontSansSerif26,5,5);
 462              		.loc 3 66 0
 463 00ea 7B68     		ldr	r3, [r7, #4]
 464 00ec DB68     		ldr	r3, [r3, #12]
 465 00ee 1B68     		ldr	r3, [r3, #0]
 466 00f0 03F11803 		add	r3, r3, #24
 467 00f4 1C68     		ldr	r4, [r3, #0]
 468 00f6 7B68     		ldr	r3, [r7, #4]
 469 00f8 DB68     		ldr	r3, [r3, #12]
 470 00fa 4FF00502 		mov	r2, #5
 471 00fe 0092     		str	r2, [sp, #0]
 472 0100 1846     		mov	r0, r3
 473 0102 40F20001 		movw	r1, #:lower16:.LC2
 474 0106 C0F20001 		movt	r1, #:upper16:.LC2
 475 010a 40F20002 		movw	r2, #:lower16:c_FontSansSerif26
 476 010e C0F20002 		movt	r2, #:upper16:c_FontSansSerif26
 477 0112 4FF00503 		mov	r3, #5
 478 0116 A047     		blx	r4
  67:../Menue/CMenue.cpp **** 	glcd->WriteString("Fr. 24.02.12",c_FontNative,5,40);
 479              		.loc 3 67 0
 480 0118 7B68     		ldr	r3, [r7, #4]
 481 011a DB68     		ldr	r3, [r3, #12]
 482 011c 1B68     		ldr	r3, [r3, #0]
 483 011e 03F11803 		add	r3, r3, #24
 484 0122 1C68     		ldr	r4, [r3, #0]
 485 0124 7B68     		ldr	r3, [r7, #4]
 486 0126 DB68     		ldr	r3, [r3, #12]
 487 0128 4FF02802 		mov	r2, #40
 488 012c 0092     		str	r2, [sp, #0]
 489 012e 1846     		mov	r0, r3
 490 0130 40F20001 		movw	r1, #:lower16:.LC3
 491 0134 C0F20001 		movt	r1, #:upper16:.LC3
 492 0138 40F20002 		movw	r2, #:lower16:_ZL12c_FontNative
 493 013c C0F20002 		movt	r2, #:upper16:_ZL12c_FontNative
 494 0140 4FF00503 		mov	r3, #5
 495 0144 A047     		blx	r4
  68:../Menue/CMenue.cpp **** 
  69:../Menue/CMenue.cpp **** 	glcd->WriteString("Development in progress",c_FontNative,1,120);
 496              		.loc 3 69 0
 497 0146 7B68     		ldr	r3, [r7, #4]
 498 0148 DB68     		ldr	r3, [r3, #12]
 499 014a 1B68     		ldr	r3, [r3, #0]
 500 014c 03F11803 		add	r3, r3, #24
 501 0150 1C68     		ldr	r4, [r3, #0]
 502 0152 7B68     		ldr	r3, [r7, #4]
 503 0154 DB68     		ldr	r3, [r3, #12]
 504 0156 4FF07802 		mov	r2, #120
 505 015a 0092     		str	r2, [sp, #0]
 506 015c 1846     		mov	r0, r3
 507 015e 40F20001 		movw	r1, #:lower16:.LC4
 508 0162 C0F20001 		movt	r1, #:upper16:.LC4
 509 0166 40F20002 		movw	r2, #:lower16:_ZL12c_FontNative
 510 016a C0F20002 		movt	r2, #:upper16:_ZL12c_FontNative
 511 016e 4FF00103 		mov	r3, #1
 512 0172 A047     		blx	r4
 513              	.L19:
  70:../Menue/CMenue.cpp **** 
  71:../Menue/CMenue.cpp **** 	while(1){
  72:../Menue/CMenue.cpp **** 		if(x<60) {
 514              		.loc 3 72 0
 515 0174 FB68     		ldr	r3, [r7, #12]
 516 0176 3B2B     		cmp	r3, #59
 517 0178 3BDC     		bgt	.L17
  73:../Menue/CMenue.cpp **** 			sprintf(buffer,"%02u",x);
 518              		.loc 3 73 0
 519 017a 07F10803 		add	r3, r7, #8
 520 017e 1846     		mov	r0, r3
 521 0180 40F20001 		movw	r1, #:lower16:.LC5
 522 0184 C0F20001 		movt	r1, #:upper16:.LC5
 523 0188 FA68     		ldr	r2, [r7, #12]
 524 018a FFF7FEFF 		bl	sprintf
  74:../Menue/CMenue.cpp **** 			glcd->SectorClear(75,7,20,20);
 525              		.loc 3 74 0
 526 018e 7B68     		ldr	r3, [r7, #4]
 527 0190 DB68     		ldr	r3, [r3, #12]
 528 0192 1B68     		ldr	r3, [r3, #0]
 529 0194 03F11003 		add	r3, r3, #16
 530 0198 1C68     		ldr	r4, [r3, #0]
 531 019a 7B68     		ldr	r3, [r7, #4]
 532 019c DB68     		ldr	r3, [r3, #12]
 533 019e 4FF01402 		mov	r2, #20
 534 01a2 0092     		str	r2, [sp, #0]
 535 01a4 1846     		mov	r0, r3
 536 01a6 4FF04B01 		mov	r1, #75
 537 01aa 4FF00702 		mov	r2, #7
 538 01ae 4FF01403 		mov	r3, #20
 539 01b2 A047     		blx	r4
  75:../Menue/CMenue.cpp **** 			glcd->WriteString(buffer,c_FontSansSerif12,75,7);
 540              		.loc 3 75 0
 541 01b4 7B68     		ldr	r3, [r7, #4]
 542 01b6 DB68     		ldr	r3, [r3, #12]
 543 01b8 1B68     		ldr	r3, [r3, #0]
 544 01ba 03F11803 		add	r3, r3, #24
 545 01be 1C68     		ldr	r4, [r3, #0]
 546 01c0 7B68     		ldr	r3, [r7, #4]
 547 01c2 DA68     		ldr	r2, [r3, #12]
 548 01c4 07F10803 		add	r3, r7, #8
 549 01c8 4FF00701 		mov	r1, #7
 550 01cc 0091     		str	r1, [sp, #0]
 551 01ce 1046     		mov	r0, r2
 552 01d0 1946     		mov	r1, r3
 553 01d2 40F20002 		movw	r2, #:lower16:c_FontSansSerif12
 554 01d6 C0F20002 		movt	r2, #:upper16:c_FontSansSerif12
 555 01da 4FF04B03 		mov	r3, #75
 556 01de A047     		blx	r4
  76:../Menue/CMenue.cpp **** 			x++;
 557              		.loc 3 76 0
 558 01e0 FB68     		ldr	r3, [r7, #12]
 559 01e2 03F10103 		add	r3, r3, #1
 560 01e6 FB60     		str	r3, [r7, #12]
  77:../Menue/CMenue.cpp **** 			vTaskDelay(1000/portTICK_RATE_MS);
 561              		.loc 3 77 0
 562 01e8 4FF06400 		mov	r0, #100
 563 01ec FFF7FEFF 		bl	vTaskDelay
  71:../Menue/CMenue.cpp **** 	while(1){
 564              		.loc 3 71 0
 565 01f0 C0E7     		b	.L19
 566              	.L17:
  78:../Menue/CMenue.cpp **** 		} else
  79:../Menue/CMenue.cpp **** 			x = 0;
 567              		.loc 3 79 0
 568 01f2 4FF00003 		mov	r3, #0
 569 01f6 FB60     		str	r3, [r7, #12]
  71:../Menue/CMenue.cpp **** 	while(1){
 570              		.loc 3 71 0
 571 01f8 BCE7     		b	.L19
 572              	.LBE5:
 573              		.cfi_endproc
 574              	.LFE144:
 576              		.global	_ZTV6CMenue
 577 01fa 00BF     		.section	.rodata._ZTV6CMenue,"a",%progbits
 578              		.align	3
 581              	_ZTV6CMenue:
 582 0000 00000000 		.word	0
 583 0004 00000000 		.word	0
 584 0008 00000000 		.word	_ZNK5CTask7IsValidEv
 585 000c 00000000 		.word	_ZN5CTask6AttachEPv
 586 0010 00000000 		.word	_ZN5CTask6DetachEv
 587 0014 00000000 		.word	_ZN6CMenueD1Ev
 588 0018 00000000 		.word	_ZN6CMenueD0Ev
 589 001c 00000000 		.word	_ZN6CMenue12HardwareInitEv
 590 0020 00000000 		.word	_ZN6CMenue3RunEv
 591 0024 00000000 		.word	_ZN12AManagedTask8OnCreateEPKctm
 592              		.section	.rodata._ZL12c_FontNative,"a",%progbits
 593              		.align	2
 596              	_ZL12c_FontNative:
 597 0000 00000000 		.space	24
 597      00000000 
 597      00000000 
 597      00000000 
 597      00000000 
 598              		.global	_ZN6CMenueC1EP11CGraphicLCD
 599              		.thumb_set _ZN6CMenueC1EP11CGraphicLCD,_ZN6CMenueC2EP11CGraphicLCD
 600              		.global	_ZN6CMenueD1Ev
 601              		.thumb_set _ZN6CMenueD1Ev,_ZN6CMenueD2Ev
 602              		.text
 603              	.Letext0:
 604              		.file 4 "e:\\elektronik\\toolchain\\yagarto\\bin\\../lib/gcc/arm-none-eabi/4.6.2/include/stddef.h"
 605              		.file 5 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 606              		.file 6 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/../../Source/portable
 607              		.file 7 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/task.h"
 608              		.file 8 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS_EC\\Source/IFreeRTOSProtocol.h"
 609              		.file 9 "E:\\Desktop\\thundercyer-the-alarm-clock\\GraphicLCD/CGraphicLCD.h"
 610              		.file 10 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/sys/lock.h"
 611              		.file 11 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/sys/_types.h"
 612              		.file 12 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/sys/reent.h"
 613              		.file 13 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdio.h"
 614              		.file 14 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/include/c++/4.6.2/cstdio"
 615              		.file 15 "../Menue/CMenue.h"
 616              		.file 16 "E:\\Desktop\\thundercyer-the-alarm-clock\\GraphicLCD/CT6963CDriver.h"
 617              		.file 17 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
 618              		.file 18 "E:\\Desktop\\thundercyer-the-alarm-clock\\GraphicLCD/SansSerif12.h"
 619              		.file 19 "E:\\Desktop\\thundercyer-the-alarm-clock\\GraphicLCD/SansSerif26.h"
 620              		.file 20 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 CMenue.cpp
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:19     .text._ZNK5CTask7IsValidEv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:24     .text._ZNK5CTask7IsValidEv:00000000 _ZNK5CTask7IsValidEv
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:61     .text._ZN5CTask6DetachEv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:66     .text._ZN5CTask6DetachEv:00000000 _ZN5CTask6DetachEv
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:106    .text._ZN12AManagedTask8OnCreateEPKctm:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:111    .text._ZN12AManagedTask8OnCreateEPKctm:00000000 _ZN12AManagedTask8OnCreateEPKctm
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:145    .text._ZN6CMenueC2EP11CGraphicLCD:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:150    .text._ZN6CMenueC2EP11CGraphicLCD:00000000 _ZN6CMenueC2EP11CGraphicLCD
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:191    .text._ZN6CMenueC2EP11CGraphicLCD:0000002c $d
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:581    .rodata._ZTV6CMenue:00000000 _ZTV6CMenue
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:196    .text._ZN6CMenueD2Ev:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:201    .text._ZN6CMenueD2Ev:00000000 _ZN6CMenueD2Ev
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:246    .text._ZN6CMenueD2Ev:00000034 $d
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:251    .text._ZN6CMenueD0Ev:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:256    .text._ZN6CMenueD0Ev:00000000 _ZN6CMenueD0Ev
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:201    .text._ZN6CMenueD2Ev:00000000 _ZN6CMenueD1Ev
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:288    .text._ZN6CMenue12HardwareInitEv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:293    .text._ZN6CMenue12HardwareInitEv:00000000 _ZN6CMenue12HardwareInitEv
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:323    .rodata:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:324    .rodata:00000000 .LC0
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:327    .rodata:00000018 .LC1
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:330    .rodata:00000028 .LC2
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:333    .rodata:00000030 .LC3
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:336    .rodata:00000040 .LC4
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:339    .rodata:00000058 .LC5
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:342    .text._ZN6CMenue3RunEv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:347    .text._ZN6CMenue3RunEv:00000000 _ZN6CMenue3RunEv
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:596    .rodata._ZL12c_FontNative:00000000 _ZL12c_FontNative
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:578    .rodata._ZTV6CMenue:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:593    .rodata._ZL12c_FontNative:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccBIJnNM.s:150    .text._ZN6CMenueC2EP11CGraphicLCD:00000000 _ZN6CMenueC1EP11CGraphicLCD
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN12AManagedTaskC2Ev
_ZN12AManagedTaskD2Ev
_ZdlPv
_ZN11CGraphicLCD7InverseEb
vTaskDelay
c_FontSansSerif12
c_FontSansSerif26
sprintf
_ZN5CTask6AttachEPv
