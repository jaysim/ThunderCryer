   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"CMenue.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZNK5CTask7IsValidEv,"axG",%progbits,_ZNK5CTask7IsValidEv,comdat
  20              		.align	2
  21              		.weak	_ZNK5CTask7IsValidEv
  22              		.thumb
  23              		.thumb_func
  25              	_ZNK5CTask7IsValidEv:
  26              	.LFB132:
  27              		.file 1 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\FreeRTOS_EC\\Source/CTask.h"
   1:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** /**
   2:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @file CTask.h
   3:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @class CTask
   4:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @ingroup FreeRTOS_Wrapper
   5:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
   6:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * The CTask class wraps a native FreeRTOS task handle (xTaskHandle). To create a task instance
   7:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * an object of this class and then call its CTask::Create method like showed in the following samp
   8:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * \code
   9:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * CTask g_aTask // global task declaration.
  10:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  11:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * void main()
  12:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * {
  13:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * 	g_aTask.Create(task_control_func, "Led2", configMINIMAL_STACK_SIZE, mainFLASH_TASK_PRIORITY);
  14:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  15:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * 	CFreeRTOS::StartScheduler();
  16:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * }
  17:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * \endcode
  18:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  19:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * Usually the application subclass this class to create an application specific task object.
  20:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * See the CHelloWorld class for an example.
  21:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  22:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * \sa <a href="http://www.freertos.org/taskandcr.html">task documentation</a> in the FreeRTOS web 
  23:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *
  24:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @date Jul 5, 2010
  25:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  * @author Stefano Oliveri (STF12.net)
  26:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  *         E-Mail: software@stf12.net
  27:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****  */
  28:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  29:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #ifndef CTASK_H_
  30:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #define CTASK_H_
  31:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  32:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #include "FreeRTOS.h"
  33:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #include "task.h"
  34:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #include "IFreeRTOSProtocol.h"
  35:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  36:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** class CTask: public IFreeRTOSObj {
  37:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  38:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  39:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Specifies the native FreeRTOS handle managed by an instance of this class.
  40:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  41:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	xTaskHandle m_handleTask;
  42:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  43:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** public:
  44:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  45:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * The default constructor. It initializes the object without attaching it to a native FreeRTOS ha
  46:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Call the Create method to allocate a task handle and attach it to the object.
  47:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  48:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	CTask();
  49:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  50:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  51:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Create a CTask instance and attach it to a valid handle.
  52:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 *
  53:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * @param handleTask a valid task handle.
  54:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  55:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	CTask(xTaskHandle handleTask);
  56:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  57:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  58:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Delete the native FreeRTOS task.
  59:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  60:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	virtual ~CTask();
  61:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  62:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  63:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Retrieve the native FreeRTOS task handle attached to this object.
  64:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 *
  65:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * @return the native FreeRTOS task handle attached to this object.
  66:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  67:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	inline operator xTaskHandle() const { return m_handleTask; }
  68:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  69:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	// FreeRTOS API Wrappers
  70:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  71:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  72:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Create a FreeRTOS task and attach its handle to the receiver object.
  73:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 *
  74:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/a00125.html">xTaskCreate</a> FreeRTOS API function.
  75:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  76:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	portBASE_TYPE Create(pdTASK_CODE pvTaskCode, const portCHAR * const pcName, unsigned portSHORT usS
  77:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  78:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  79:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * Create a Memory Protection Unit (MPU) restricted task and attach its handle to the receiver obj
  80:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 *
  81:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/xTaskCreateRestricted.html">xTaskCreateRestricted</a> Free
  82:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  83:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	portBASE_TYPE CreateRestricted(xTaskParameters *pxTaskDefinition);
  84:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  85:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  86:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/a00126.html">vTaskDelete</a>  FreeRTOS API function.
  87:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  88:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	void Delete();
  89:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  90:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  91:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/a00127.html">vTaskDelay</a>  FreeRTOS API function.
  92:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  93:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	inline static void Delay(portTickType xTicksToDelay);
  94:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
  95:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	/**
  96:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 * \sa <a href="http://www.freertos.org/vtaskdelayuntil.html">vTaskDelayUntil</a>  FreeRTOS API fu
  97:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	 */
  98:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void DelayUntil(portTickType *pxPreviousWakeTime, portTickType xTimeIncrement);
  99:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 100:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 101:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskYIELD">taskYIELD</a>  FreeRTOS API func
 102:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 103:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void Yeld() { taskYIELD(); }
 104:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 105:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 106:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskENTER_CRITICAL">taskENTER_CRITICAL</a> 
 107:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 108:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void EnterCritical() { taskENTER_CRITICAL(); }
 109:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 110:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 111:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskEXIT_CRITICAL">taskEXIT_CRITICAL</a>  F
 112:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 113:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void ExitCritical() { taskEXIT_CRITICAL(); }
 114:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 115:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 116:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskDISABLE_INTERRUPTS">taskDISABLE_INTERRU
 117:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 118:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void DisableInterrupt() { taskDISABLE_INTERRUPTS(); }
 119:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 120:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 121:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00020.html#taskENABLE_INTERRUPTS">taskENABLE_INTERRUPT
 122:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 123:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void EnableInterrupt() { taskENABLE_INTERRUPTS(); }
 124:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 125:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 126:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#xTaskGetCurrentTaskHandle">xTaskGetCurrentT
 127:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 128:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static xTaskHandle GetCurrentTaskHandle();
 129:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 130:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 131:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#xTaskGetTickCount">xTaskGetTickCount</a>  F
 132:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 133:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static portTickType GetTickCount();
 134:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 135:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 136:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#xTaskGetSchedulerState">xTaskGetSchedulerSt
 137:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 138:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static portBASE_TYPE GetSchedulerState();
 139:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 140:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 141:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#usTaskGetNumberOfTasks">uxTaskGetNumberOfTa
 142:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 143:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static unsigned portBASE_TYPE GetNumberOfTasks();
 144:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 145:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 146:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#vTaskList">vTaskList</a>  FreeRTOS API func
 147:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 148:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void GetTaskList(portCHAR *pcWriteBuffer);
 149:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 150:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 151:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00021.html#vTaskGetRunTimeStats">vTaskGetRunTimeStats<
 152:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 153:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline static void GetRunTimeStats(portCHAR *pcWriteBuffer);
 154:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 155:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 156:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00128.html">uxTaskPriorityGet</a>  FreeRTOS API functi
 157:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 158:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline unsigned portBASE_TYPE PriorityGet() const;
 159:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 160:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 161:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00129.html">vTaskPrioritySet</a>  FreeRTOS API functio
 162:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 163:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void PrioritySet(unsigned portBASE_TYPE uxNewPriority);
 164:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 165:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 166:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00130.html">vTaskSuspend</a>  FreeRTOS API function.
 167:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 168:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void Suspend();
 169:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 170:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 171:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/a00131.html">vTaskResume</a>  FreeRTOS API function.
 172:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 173:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void Resume();
 174:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 175:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 176:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/taskresumefromisr.html">xTaskResumeFromISR</a>  FreeRTO
 177:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 178:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline portBASE_TYPE ResumeFromISR();
 179:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 180:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 181:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/vTaskSetApplicationTag.html">vTaskSetApplicationTaskTag
 182:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 183:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void SetApplicationTag(pdTASK_HOOK_CODE pxTagValue);
 184:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 185:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 186:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/xTaskCallApplicationTaskHook.html">xTaskCallApplication
 187:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 188:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline portBASE_TYPE CallApplicationTaskHook(void *pvParameter);
 189:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 190:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     /**
 191:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      * \sa <a href="http://www.freertos.org/vTaskAllocateMPURegions.html">vTaskAllocateMPURegions</
 192:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****      */
 193:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     inline void AllocateMPURegions(const xMemoryRegion * const xRegions);
 194:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 195:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h ****     // FreeRTOS class extension.
 196:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	inline bool IsValid() const;
 197:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	void Attach(xGenericHandle handle);
 198:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	inline xGenericHandle Detach();
 199:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** };
 200:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 201:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** // inline method
 202:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** ////////////////
 203:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 204:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 205:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::Delay(portTickType xTicksToDelay) {
 206:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskDelay == 1 )
 207:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskDelay(xTicksToDelay);
 208:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 209:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 210:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 211:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 212:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::DelayUntil(portTickType *pxPreviousWakeTime, portTickType xTimeIncrement) {
 213:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskDelayUntil == 1 )
 214:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskDelayUntil(pxPreviousWakeTime, xTimeIncrement);
 215:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 216:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 217:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 218:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 219:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** xTaskHandle CTask::GetCurrentTaskHandle() {
 220:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskGetCurrentTaskHandle();
 221:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 222:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 223:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 224:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** portTickType CTask::GetTickCount() {
 225:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskGetTickCount();
 226:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 227:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 228:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 229:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** portBASE_TYPE CTask::GetSchedulerState() {
 230:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_xTaskGetSchedulerState == 1 )
 231:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskGetSchedulerState();
 232:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #else
 233:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return 0;
 234:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 235:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 236:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 237:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 238:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** unsigned portBASE_TYPE CTask::GetNumberOfTasks() {
 239:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return uxTaskGetNumberOfTasks();
 240:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 241:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 242:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 243:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::GetTaskList(portCHAR *pcWriteBuffer) {
 244:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( configUSE_TRACE_FACILITY == 1 )
 245:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskList((signed portCHAR*)pcWriteBuffer);
 246:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 247:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 248:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 249:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 250:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::GetRunTimeStats(portCHAR *pcWriteBuffer) {
 251:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if (configGENERATE_RUN_TIME_STATS == 1)
 252:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskGetRunTimeStats((signed portCHAR*)pcWriteBuffer);
 253:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 254:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 255:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 256:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 257:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** unsigned portBASE_TYPE CTask::PriorityGet() const {
 258:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
 259:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return uxTaskPriorityGet(m_handleTask);
 260:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #else
 261:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return -1;
 262:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 263:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 264:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 265:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 266:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::PrioritySet(unsigned portBASE_TYPE uxNewPriority) {
 267:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskPrioritySet == 1 )
 268:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskPrioritySet(m_handleTask, uxNewPriority);
 269:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 270:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 271:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 272:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 273:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::Suspend() {
 274:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskSuspend == 1 )
 275:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskSuspend(m_handleTask);
 276:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 277:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 278:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 279:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 280:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::Resume() {
 281:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( INCLUDE_vTaskSuspend == 1 )
 282:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskResume(m_handleTask);
 283:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 284:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 285:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 286:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 287:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** portBASE_TYPE CTask::ResumeFromISR() {
 288:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
 289:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskResumeFromISR(m_handleTask);
 290:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #else
 291:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return pdFALSE;
 292:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 293:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 294:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 295:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 296:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::SetApplicationTag(pdTASK_HOOK_CODE pxTagValue) {
 297:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 298:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskSetApplicationTaskTag(m_handleTask, pxTagValue);
 299:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 300:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 301:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 302:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 303:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** portBASE_TYPE CTask::CallApplicationTaskHook(void *pvParameter) {
 304:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 305:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return xTaskCallApplicationTaskHook(m_handleTask, pvParameter);
 306:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #else
 307:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return 0;
 308:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 309:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 310:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 311:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 312:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** void CTask::AllocateMPURegions(const xMemoryRegion * const xRegions) {
 313:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #if ( portUSING_MPU_WRAPPERS == 1 )
 314:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	vTaskAllocateMPURegions(m_handleTask, xRegions);
 315:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** #endif
 316:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
 317:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 318:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 319:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** bool CTask::IsValid() const{
  28              		.loc 1 319 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 320:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return m_handleTask != NULL;
  44              		.loc 1 320 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 5B68     		ldr	r3, [r3, #4]
  47 000c 002B     		cmp	r3, #0
  48 000e 0CBF     		ite	eq
  49 0010 0023     		moveq	r3, #0
  50 0012 0123     		movne	r3, #1
  51 0014 DBB2     		uxtb	r3, r3
 321:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
  52              		.loc 1 321 0
  53 0016 1846     		mov	r0, r3
  54 0018 07F10C07 		add	r7, r7, #12
  55 001c BD46     		mov	sp, r7
  56 001e 80BC     		pop	{r7}
  57 0020 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE132:
  61 0022 00BF     		.section	.text._ZN5CTask6DetachEv,"axG",%progbits,_ZN5CTask6DetachEv,comdat
  62              		.align	2
  63              		.weak	_ZN5CTask6DetachEv
  64              		.thumb
  65              		.thumb_func
  67              	_ZN5CTask6DetachEv:
  68              	.LFB133:
 322:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 
 323:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** inline
 324:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** xGenericHandle CTask::Detach() {
  69              		.loc 1 324 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 16
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74 0000 80B4     		push	{r7}
  75              	.LCFI3:
  76              		.cfi_def_cfa_offset 4
  77              		.cfi_offset 7, -4
  78 0002 85B0     		sub	sp, sp, #20
  79              	.LCFI4:
  80              		.cfi_def_cfa_offset 24
  81 0004 00AF     		add	r7, sp, #0
  82              	.LCFI5:
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
  85              	.LBB2:
 325:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	xTaskHandle res = m_handleTask;
  86              		.loc 1 325 0
  87 0008 7B68     		ldr	r3, [r7, #4]
  88 000a 5B68     		ldr	r3, [r3, #4]
  89 000c FB60     		str	r3, [r7, #12]
 326:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	m_handleTask = NULL;
  90              		.loc 1 326 0
  91 000e 7B68     		ldr	r3, [r7, #4]
  92 0010 4FF00002 		mov	r2, #0
  93 0014 5A60     		str	r2, [r3, #4]
 327:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** 	return res;
  94              		.loc 1 327 0
  95 0016 FB68     		ldr	r3, [r7, #12]
  96              	.LBE2:
 328:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CTask.h **** }
  97              		.loc 1 328 0
  98 0018 1846     		mov	r0, r3
  99 001a 07F11407 		add	r7, r7, #20
 100 001e BD46     		mov	sp, r7
 101 0020 80BC     		pop	{r7}
 102 0022 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE133:
 106              		.section	.text._ZN12AManagedTask8OnCreateEPKctm,"axG",%progbits,_ZN12AManagedTask8OnCreateEPKctm,c
 107              		.align	2
 108              		.weak	_ZN12AManagedTask8OnCreateEPKctm
 109              		.thumb
 110              		.thumb_func
 112              	_ZN12AManagedTask8OnCreateEPKctm:
 113              	.LFB135:
 114              		.file 2 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\FreeRTOS_EC\\Source/AManagedTask.h
   1:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** /**
   2:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @file AManagedTask.h
   3:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @class AManagedTask
   4:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *
   5:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * This class extend the CTask in order to provide a more structured and simple to use framework fo
   6:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * FreeRTOS programming. All AManagedTask derived objects are grouped in linked list. Please note t
   7:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * this data structure can be modified in a next release. The framework manage these task objects
   8:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * by calling their methods during the application life cycle.
   9:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *
  10:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * The application extend this abstract class to create a managed task and provide its control loop
  11:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * \code
  12:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * class CMyPipe: public AManagedTask
  13:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * {
  14:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *   // Task private variables.
  15:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *
  16:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * public:
  17:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *   void Run() {  task control loop  };
  18:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * }
  19:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * \endcode
  20:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *
  21:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @date Aug 3, 2010
  22:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @author Stefano Oliveri
  23:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  *         E-Mail: software@stf12.net
  24:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  */
  25:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  26:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** /**
  27:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @defgroup FreeRTOS_Managed FreeRTOS Managed Class Extension
  28:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @ingroup FreeRTOS_CPP_EXT
  29:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * The FreeRTOS Managed Class Extension are a set of class that provide a structured and
  30:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * managed framework to develop a FreeRTOS application.
  31:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  * @{
  32:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h ****  */
  33:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  34:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** #ifndef AMANAGEDTASK_H_
  35:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** #define AMANAGEDTASK_H_
  36:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  37:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** #include "CTask.h"
  38:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  39:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** class AManagedTask: public CTask {
  40:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	friend class CFreeRTOS;
  41:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  42:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  43:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Specifies the head of the linked list used to group all application managed task.
  44:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  45:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	static AManagedTask *s_pManagedTaskListHead;
  46:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  47:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  48:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Specifies the next managed task in the list or NULL if this is the last managed task.
  49:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  50:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	AManagedTask *m_pNextManagedTask;
  51:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  52:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** public:
  53:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  54:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  55:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Default constructor.
  56:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  57:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	AManagedTask();
  58:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  59:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  60:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Destructor.
  61:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  62:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	virtual ~AManagedTask();
  63:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  64:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  65:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Create the FreeRTOS task attached to this object.
  66:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  67:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param pcName name of the task. Need only for debug purpose.
  68:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param usStackDepth size in word of the task stack.
  69:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param uxPriority task priority. Valid value ar between taskIDLE_PRIORITY and configMAX_PRIORIT
  70:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  71:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @sa CTask::Create
  72:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  73:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	portBASE_TYPE Create(const portCHAR * const pcName, unsigned portSHORT usStackDepth, unsigned port
  74:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  75:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  76:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * The framework calls this function before the scheduler start. The default implementation simply
  77:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Override this method to perform task specific hardware initialization that does not use FreeRTO
  78:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  79:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @return true if success, false otherwise.
  80:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  81:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	virtual bool HardwareInit() { return true; }
  82:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  83:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  84:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * Task control loop.
  85:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  86:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	virtual void Run() =0;
  87:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 
  88:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	/**
  89:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * The framework calls this function before the task is created to give a chance to a managed task
  90:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * own initialization code and stop the task creation process if needed.
  91:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  92:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param pcName specifies the task name.
  93:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param usStackDepth specifies the task stack depth.
  94:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @param uxPriority specifies the task priority.
  95:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 *
  96:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * @return pdTRUE if success, pdFALSE otherwise. If the method return pdFALSE the task creation pr
  97:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 * is stopped and no FreeRTOS resource are allocated.
  98:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	 */
  99:D:\Elektronik\Projekte\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\AManagedTask.h **** 	virtual portBASE_TYPE OnCreate(const portCHAR * const pcName, unsigned portSHORT usStackDepth, uns
 115              		.loc 2 99 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 16
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120 0000 80B4     		push	{r7}
 121              	.LCFI6:
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 7, -4
 124 0002 85B0     		sub	sp, sp, #20
 125              	.LCFI7:
 126              		.cfi_def_cfa_offset 24
 127 0004 00AF     		add	r7, sp, #0
 128              	.LCFI8:
 129              		.cfi_def_cfa_register 7
 130 0006 F860     		str	r0, [r7, #12]
 131 0008 B960     		str	r1, [r7, #8]
 132 000a 3B60     		str	r3, [r7, #0]
 133 000c 1346     		mov	r3, r2	@ movhi
 134 000e FB80     		strh	r3, [r7, #6]	@ movhi
 135              		.loc 2 99 0
 136 0010 4FF00103 		mov	r3, #1
 137 0014 1846     		mov	r0, r3
 138 0016 07F11407 		add	r7, r7, #20
 139 001a BD46     		mov	sp, r7
 140 001c 80BC     		pop	{r7}
 141 001e 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE135:
 145              		.text
 146              		.align	2
 147              		.global	_ZN6CMenueC2EP11CGraphicLCD
 148              		.thumb
 149              		.thumb_func
 151              	_ZN6CMenueC2EP11CGraphicLCD:
 152              	.LFB137:
 153              		.file 3 "../Menue/CMenue.cpp"
   1:../Menue/CMenue.cpp **** /**
   2:../Menue/CMenue.cpp ****   ******************************************************************************
   3:../Menue/CMenue.cpp ****   * @file      	CMenue.cpp
   4:../Menue/CMenue.cpp ****   * @author    	Tecnologic86
   5:../Menue/CMenue.cpp ****   * @version   	V0.0.0
   6:../Menue/CMenue.cpp ****   * @date      	18.02.12
   7:../Menue/CMenue.cpp ****   * @brief		Class for Menu displayed on GraphicsLCD
   8:../Menue/CMenue.cpp ****   ******************************************************************************
   9:../Menue/CMenue.cpp ****   */
  10:../Menue/CMenue.cpp **** 
  11:../Menue/CMenue.cpp **** /* Includes ------------------------------------------------------------------*/
  12:../Menue/CMenue.cpp **** #include "CMenue.h"
  13:../Menue/CMenue.cpp **** #include "CT6963CDriver.h"
  14:../Menue/CMenue.cpp **** #include "SansSerif12.h"
  15:../Menue/CMenue.cpp **** #include "SansSerif26.h"
  16:../Menue/CMenue.cpp **** #include <cstdio>
  17:../Menue/CMenue.cpp **** /* Private typedef -----------------------------------------------------------*/
  18:../Menue/CMenue.cpp **** /* Private define ------------------------------------------------------------*/
  19:../Menue/CMenue.cpp **** /* Private macro -------------------------------------------------------------*/
  20:../Menue/CMenue.cpp **** /* Private variables ---------------------------------------------------------*/
  21:../Menue/CMenue.cpp **** /* Private function prototypes -----------------------------------------------*/
  22:../Menue/CMenue.cpp **** /* Private functions ---------------------------------------------------------*/
  23:../Menue/CMenue.cpp **** 
  24:../Menue/CMenue.cpp **** 
  25:../Menue/CMenue.cpp **** CMenue::CMenue(CGraphicLCD *display) : glcd(display){
 154              		.loc 3 25 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 8
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              	.LCFI9:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 14, -4
 162              		.cfi_offset 7, -8
 163 0002 82B0     		sub	sp, sp, #8
 164              	.LCFI10:
 165              		.cfi_def_cfa_offset 16
 166 0004 00AF     		add	r7, sp, #0
 167              	.LCFI11:
 168              		.cfi_def_cfa_register 7
 169 0006 7860     		str	r0, [r7, #4]
 170 0008 3960     		str	r1, [r7, #0]
 171              	.LBB3:
 172              		.loc 3 25 0
 173 000a 7B68     		ldr	r3, [r7, #4]
 174 000c 1846     		mov	r0, r3
 175 000e FFF7FEFF 		bl	_ZN12AManagedTaskC2Ev
 176 0012 7B68     		ldr	r3, [r7, #4]
 177 0014 054A     		ldr	r2, .L6
 178 0016 1A60     		str	r2, [r3, #0]
 179 0018 7B68     		ldr	r3, [r7, #4]
 180 001a 3A68     		ldr	r2, [r7, #0]
 181 001c DA60     		str	r2, [r3, #12]
 182              	.LBE3:
  26:../Menue/CMenue.cpp **** }
 183              		.loc 3 26 0
 184 001e 7B68     		ldr	r3, [r7, #4]
 185 0020 1846     		mov	r0, r3
 186 0022 07F10807 		add	r7, r7, #8
 187 0026 BD46     		mov	sp, r7
 188 0028 80BD     		pop	{r7, pc}
 189              	.L7:
 190 002a 00BF     		.align	2
 191              	.L6:
 192 002c 08000000 		.word	_ZTV6CMenue+8
 193              		.cfi_endproc
 194              	.LFE137:
 196              		.align	2
 197              		.global	_ZN6CMenueD2Ev
 198              		.thumb
 199              		.thumb_func
 201              	_ZN6CMenueD2Ev:
 202              	.LFB140:
  27:../Menue/CMenue.cpp **** 
  28:../Menue/CMenue.cpp **** CMenue::~CMenue() {
 203              		.loc 3 28 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 8
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0030 80B5     		push	{r7, lr}
 208              	.LCFI12:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 14, -4
 211              		.cfi_offset 7, -8
 212 0032 82B0     		sub	sp, sp, #8
 213              	.LCFI13:
 214              		.cfi_def_cfa_offset 16
 215 0034 00AF     		add	r7, sp, #0
 216              	.LCFI14:
 217              		.cfi_def_cfa_register 7
 218 0036 7860     		str	r0, [r7, #4]
 219              	.LBB4:
 220              		.loc 3 28 0
 221 0038 7B68     		ldr	r3, [r7, #4]
 222 003a 0A4A     		ldr	r2, .L11
 223 003c 1A60     		str	r2, [r3, #0]
  29:../Menue/CMenue.cpp **** 	// TODO Auto-generated destructor stub
  30:../Menue/CMenue.cpp **** }
 224              		.loc 3 30 0
 225 003e 7868     		ldr	r0, [r7, #4]
 226 0040 FFF7FEFF 		bl	_ZN12AManagedTaskD2Ev
 227              	.LBE4:
 228 0044 4FF00003 		mov	r3, #0
 229 0048 03F00103 		and	r3, r3, #1
 230 004c DBB2     		uxtb	r3, r3
 231 004e 002B     		cmp	r3, #0
 232 0050 02D0     		beq	.L10
 233              		.loc 3 30 0 is_stmt 0 discriminator 2
 234 0052 7868     		ldr	r0, [r7, #4]
 235 0054 FFF7FEFF 		bl	_ZdlPv
 236              	.L10:
 237              		.loc 3 30 0 discriminator 3
 238 0058 7B68     		ldr	r3, [r7, #4]
 239 005a 1846     		mov	r0, r3
 240 005c 07F10807 		add	r7, r7, #8
 241 0060 BD46     		mov	sp, r7
 242 0062 80BD     		pop	{r7, pc}
 243              	.L12:
 244              		.align	2
 245              	.L11:
 246 0064 08000000 		.word	_ZTV6CMenue+8
 247              		.cfi_endproc
 248              	.LFE140:
 250              		.align	2
 251              		.global	_ZN6CMenueD0Ev
 252              		.thumb
 253              		.thumb_func
 255              	_ZN6CMenueD0Ev:
 256              	.LFB142:
  28:../Menue/CMenue.cpp **** CMenue::~CMenue() {
 257              		.loc 3 28 0 is_stmt 1
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0068 80B5     		push	{r7, lr}
 262              	.LCFI15:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 14, -4
 265              		.cfi_offset 7, -8
 266 006a 82B0     		sub	sp, sp, #8
 267              	.LCFI16:
 268              		.cfi_def_cfa_offset 16
 269 006c 00AF     		add	r7, sp, #0
 270              	.LCFI17:
 271              		.cfi_def_cfa_register 7
 272 006e 7860     		str	r0, [r7, #4]
 273              		.loc 3 30 0
 274 0070 7868     		ldr	r0, [r7, #4]
 275 0072 FFF7FEFF 		bl	_ZN6CMenueD1Ev
 276 0076 7868     		ldr	r0, [r7, #4]
 277 0078 FFF7FEFF 		bl	_ZdlPv
 278 007c 7B68     		ldr	r3, [r7, #4]
 279 007e 1846     		mov	r0, r3
 280 0080 07F10807 		add	r7, r7, #8
 281 0084 BD46     		mov	sp, r7
 282 0086 80BD     		pop	{r7, pc}
 283              		.cfi_endproc
 284              	.LFE142:
 286              		.align	2
 287              		.global	_ZN6CMenue12HardwareInitEv
 288              		.thumb
 289              		.thumb_func
 291              	_ZN6CMenue12HardwareInitEv:
 292              	.LFB143:
  31:../Menue/CMenue.cpp **** 
  32:../Menue/CMenue.cpp **** /**
  33:../Menue/CMenue.cpp ****   * @brief  HardwareInit called before Scheduler starts
  34:../Menue/CMenue.cpp ****   * @param  None
  35:../Menue/CMenue.cpp ****   * @retval true on success
  36:../Menue/CMenue.cpp ****   */
  37:../Menue/CMenue.cpp **** bool CMenue::HardwareInit(void){
 293              		.loc 3 37 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 8
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298 0088 80B4     		push	{r7}
 299              	.LCFI18:
 300              		.cfi_def_cfa_offset 4
 301              		.cfi_offset 7, -4
 302 008a 83B0     		sub	sp, sp, #12
 303              	.LCFI19:
 304              		.cfi_def_cfa_offset 16
 305 008c 00AF     		add	r7, sp, #0
 306              	.LCFI20:
 307              		.cfi_def_cfa_register 7
 308 008e 7860     		str	r0, [r7, #4]
  38:../Menue/CMenue.cpp **** 
  39:../Menue/CMenue.cpp **** 	return true;
 309              		.loc 3 39 0
 310 0090 4FF00103 		mov	r3, #1
  40:../Menue/CMenue.cpp **** }
 311              		.loc 3 40 0
 312 0094 1846     		mov	r0, r3
 313 0096 07F10C07 		add	r7, r7, #12
 314 009a BD46     		mov	sp, r7
 315 009c 80BC     		pop	{r7}
 316 009e 7047     		bx	lr
 317              		.cfi_endproc
 318              	.LFE143:
 320              		.section	.rodata
 321              		.align	2
 322              	.LC0:
 323 0000 496E7472 		.ascii	"Introducing Project:\000"
 323      6F647563 
 323      696E6720 
 323      50726F6A 
 323      6563743A 
 324 0015 000000   		.align	2
 325              	.LC1:
 326 0018 5468756E 		.ascii	"ThunderCryer\000"
 326      64657243 
 326      72796572 
 326      00
 327 0025 000000   		.align	2
 328              	.LC2:
 329 0028 32313A31 		.ascii	"21:14\000"
 329      3400
 330 002e 0000     		.align	2
 331              	.LC3:
 332 0030 46722E20 		.ascii	"Fr. 24.02.12\000"
 332      32342E30 
 332      322E3132 
 332      00
 333 003d 000000   		.align	2
 334              	.LC4:
 335 0040 44657665 		.ascii	"Development in progress\000"
 335      6C6F706D 
 335      656E7420 
 335      696E2070 
 335      726F6772 
 336              		.align	2
 337              	.LC5:
 338 0058 25303275 		.ascii	"%02u\000"
 338      00
 339 005d 000000   		.text
 340              		.align	2
 341              		.global	_ZN6CMenue3RunEv
 342              		.thumb
 343              		.thumb_func
 345              	_ZN6CMenue3RunEv:
 346              	.LFB144:
  41:../Menue/CMenue.cpp **** 
  42:../Menue/CMenue.cpp **** 
  43:../Menue/CMenue.cpp **** /**
  44:../Menue/CMenue.cpp ****   * @brief  task function for Menu
  45:../Menue/CMenue.cpp ****   * @param  None
  46:../Menue/CMenue.cpp ****   * @retval None
  47:../Menue/CMenue.cpp ****   */
  48:../Menue/CMenue.cpp **** void CMenue::Run(void){
 347              		.loc 3 48 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 16
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 00a0 90B5     		push	{r4, r7, lr}
 352              	.LCFI21:
 353              		.cfi_def_cfa_offset 12
 354              		.cfi_offset 14, -4
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 4, -12
 357 00a2 87B0     		sub	sp, sp, #28
 358              	.LCFI22:
 359              		.cfi_def_cfa_offset 40
 360 00a4 02AF     		add	r7, sp, #8
 361              	.LCFI23:
 362              		.cfi_def_cfa 7, 32
 363 00a6 7860     		str	r0, [r7, #4]
 364              	.LBB5:
  49:../Menue/CMenue.cpp **** 	char buffer[4];
  50:../Menue/CMenue.cpp **** 	int x = 0;
 365              		.loc 3 50 0
 366 00a8 4FF00003 		mov	r3, #0
 367 00ac FB60     		str	r3, [r7, #12]
  51:../Menue/CMenue.cpp **** 
  52:../Menue/CMenue.cpp **** 	glcd->Init();
 368              		.loc 3 52 0
 369 00ae 7B68     		ldr	r3, [r7, #4]
 370 00b0 DB68     		ldr	r3, [r3, #12]
 371 00b2 1B68     		ldr	r3, [r3, #0]
 372 00b4 03F12003 		add	r3, r3, #32
 373 00b8 1B68     		ldr	r3, [r3, #0]
 374 00ba 7A68     		ldr	r2, [r7, #4]
 375 00bc D268     		ldr	r2, [r2, #12]
 376 00be 1046     		mov	r0, r2
 377 00c0 9847     		blx	r3
  53:../Menue/CMenue.cpp **** 	glcd->Inverse(true);
 378              		.loc 3 53 0
 379 00c2 7B68     		ldr	r3, [r7, #4]
 380 00c4 DB68     		ldr	r3, [r3, #12]
 381 00c6 1846     		mov	r0, r3
 382 00c8 4FF00101 		mov	r1, #1
 383 00cc FFF7FEFF 		bl	_ZN11CGraphicLCD7InverseEb
  54:../Menue/CMenue.cpp **** 	glcd->Clear();
 384              		.loc 3 54 0
 385 00d0 7B68     		ldr	r3, [r7, #4]
 386 00d2 DB68     		ldr	r3, [r3, #12]
 387 00d4 1B68     		ldr	r3, [r3, #0]
 388 00d6 1B68     		ldr	r3, [r3, #0]
 389 00d8 7A68     		ldr	r2, [r7, #4]
 390 00da D268     		ldr	r2, [r2, #12]
 391 00dc 1046     		mov	r0, r2
 392 00de 9847     		blx	r3
  55:../Menue/CMenue.cpp **** 
  56:../Menue/CMenue.cpp **** 
  57:../Menue/CMenue.cpp **** 	vTaskDelay(500/portTICK_RATE_MS);
 393              		.loc 3 57 0
 394 00e0 4FF03200 		mov	r0, #50
 395 00e4 FFF7FEFF 		bl	vTaskDelay
  58:../Menue/CMenue.cpp **** 	glcd->WriteString("Introducing Project:",c_FontSansSerif12,5,5);
 396              		.loc 3 58 0
 397 00e8 7B68     		ldr	r3, [r7, #4]
 398 00ea DB68     		ldr	r3, [r3, #12]
 399 00ec 1B68     		ldr	r3, [r3, #0]
 400 00ee 03F11803 		add	r3, r3, #24
 401 00f2 1C68     		ldr	r4, [r3, #0]
 402 00f4 7B68     		ldr	r3, [r7, #4]
 403 00f6 DB68     		ldr	r3, [r3, #12]
 404 00f8 4FF00502 		mov	r2, #5
 405 00fc 0092     		str	r2, [sp, #0]
 406 00fe 1846     		mov	r0, r3
 407 0100 40F20001 		movw	r1, #:lower16:.LC0
 408 0104 C0F20001 		movt	r1, #:upper16:.LC0
 409 0108 40F20002 		movw	r2, #:lower16:c_FontSansSerif12
 410 010c C0F20002 		movt	r2, #:upper16:c_FontSansSerif12
 411 0110 4FF00503 		mov	r3, #5
 412 0114 A047     		blx	r4
  59:../Menue/CMenue.cpp **** 
  60:../Menue/CMenue.cpp **** 	vTaskDelay(1000/portTICK_RATE_MS);
 413              		.loc 3 60 0
 414 0116 4FF06400 		mov	r0, #100
 415 011a FFF7FEFF 		bl	vTaskDelay
  61:../Menue/CMenue.cpp **** 	glcd->WriteString("ThunderCryer",c_FontSansSerif26,3,35);
 416              		.loc 3 61 0
 417 011e 7B68     		ldr	r3, [r7, #4]
 418 0120 DB68     		ldr	r3, [r3, #12]
 419 0122 1B68     		ldr	r3, [r3, #0]
 420 0124 03F11803 		add	r3, r3, #24
 421 0128 1C68     		ldr	r4, [r3, #0]
 422 012a 7B68     		ldr	r3, [r7, #4]
 423 012c DB68     		ldr	r3, [r3, #12]
 424 012e 4FF02302 		mov	r2, #35
 425 0132 0092     		str	r2, [sp, #0]
 426 0134 1846     		mov	r0, r3
 427 0136 40F20001 		movw	r1, #:lower16:.LC1
 428 013a C0F20001 		movt	r1, #:upper16:.LC1
 429 013e 40F20002 		movw	r2, #:lower16:c_FontSansSerif26
 430 0142 C0F20002 		movt	r2, #:upper16:c_FontSansSerif26
 431 0146 4FF00303 		mov	r3, #3
 432 014a A047     		blx	r4
  62:../Menue/CMenue.cpp **** 
  63:../Menue/CMenue.cpp **** 	vTaskDelay(10000/portTICK_RATE_MS);
 433              		.loc 3 63 0
 434 014c 4FF47A70 		mov	r0, #1000
 435 0150 FFF7FEFF 		bl	vTaskDelay
  64:../Menue/CMenue.cpp **** 	glcd->Clear();
 436              		.loc 3 64 0
 437 0154 7B68     		ldr	r3, [r7, #4]
 438 0156 DB68     		ldr	r3, [r3, #12]
 439 0158 1B68     		ldr	r3, [r3, #0]
 440 015a 1B68     		ldr	r3, [r3, #0]
 441 015c 7A68     		ldr	r2, [r7, #4]
 442 015e D268     		ldr	r2, [r2, #12]
 443 0160 1046     		mov	r0, r2
 444 0162 9847     		blx	r3
  65:../Menue/CMenue.cpp **** 	glcd->Window(2,2,100,60);
 445              		.loc 3 65 0
 446 0164 7B68     		ldr	r3, [r7, #4]
 447 0166 DB68     		ldr	r3, [r3, #12]
 448 0168 1B68     		ldr	r3, [r3, #0]
 449 016a 03F10803 		add	r3, r3, #8
 450 016e 1C68     		ldr	r4, [r3, #0]
 451 0170 7B68     		ldr	r3, [r7, #4]
 452 0172 DB68     		ldr	r3, [r3, #12]
 453 0174 4FF03C02 		mov	r2, #60
 454 0178 0092     		str	r2, [sp, #0]
 455 017a 1846     		mov	r0, r3
 456 017c 4FF00201 		mov	r1, #2
 457 0180 4FF00202 		mov	r2, #2
 458 0184 4FF06403 		mov	r3, #100
 459 0188 A047     		blx	r4
  66:../Menue/CMenue.cpp **** 	glcd->WriteString("21:14",c_FontSansSerif26,5,5);
 460              		.loc 3 66 0
 461 018a 7B68     		ldr	r3, [r7, #4]
 462 018c DB68     		ldr	r3, [r3, #12]
 463 018e 1B68     		ldr	r3, [r3, #0]
 464 0190 03F11803 		add	r3, r3, #24
 465 0194 1C68     		ldr	r4, [r3, #0]
 466 0196 7B68     		ldr	r3, [r7, #4]
 467 0198 DB68     		ldr	r3, [r3, #12]
 468 019a 4FF00502 		mov	r2, #5
 469 019e 0092     		str	r2, [sp, #0]
 470 01a0 1846     		mov	r0, r3
 471 01a2 40F20001 		movw	r1, #:lower16:.LC2
 472 01a6 C0F20001 		movt	r1, #:upper16:.LC2
 473 01aa 40F20002 		movw	r2, #:lower16:c_FontSansSerif26
 474 01ae C0F20002 		movt	r2, #:upper16:c_FontSansSerif26
 475 01b2 4FF00503 		mov	r3, #5
 476 01b6 A047     		blx	r4
  67:../Menue/CMenue.cpp **** 	glcd->WriteString("Fr. 24.02.12",c_FontNative,5,40);
 477              		.loc 3 67 0
 478 01b8 7B68     		ldr	r3, [r7, #4]
 479 01ba DB68     		ldr	r3, [r3, #12]
 480 01bc 1B68     		ldr	r3, [r3, #0]
 481 01be 03F11803 		add	r3, r3, #24
 482 01c2 1C68     		ldr	r4, [r3, #0]
 483 01c4 7B68     		ldr	r3, [r7, #4]
 484 01c6 DB68     		ldr	r3, [r3, #12]
 485 01c8 4FF02802 		mov	r2, #40
 486 01cc 0092     		str	r2, [sp, #0]
 487 01ce 1846     		mov	r0, r3
 488 01d0 40F20001 		movw	r1, #:lower16:.LC3
 489 01d4 C0F20001 		movt	r1, #:upper16:.LC3
 490 01d8 40F20002 		movw	r2, #:lower16:_ZL12c_FontNative
 491 01dc C0F20002 		movt	r2, #:upper16:_ZL12c_FontNative
 492 01e0 4FF00503 		mov	r3, #5
 493 01e4 A047     		blx	r4
  68:../Menue/CMenue.cpp **** 
  69:../Menue/CMenue.cpp **** 	glcd->WriteString("Development in progress",c_FontNative,1,120);
 494              		.loc 3 69 0
 495 01e6 7B68     		ldr	r3, [r7, #4]
 496 01e8 DB68     		ldr	r3, [r3, #12]
 497 01ea 1B68     		ldr	r3, [r3, #0]
 498 01ec 03F11803 		add	r3, r3, #24
 499 01f0 1C68     		ldr	r4, [r3, #0]
 500 01f2 7B68     		ldr	r3, [r7, #4]
 501 01f4 DB68     		ldr	r3, [r3, #12]
 502 01f6 4FF07802 		mov	r2, #120
 503 01fa 0092     		str	r2, [sp, #0]
 504 01fc 1846     		mov	r0, r3
 505 01fe 40F20001 		movw	r1, #:lower16:.LC4
 506 0202 C0F20001 		movt	r1, #:upper16:.LC4
 507 0206 40F20002 		movw	r2, #:lower16:_ZL12c_FontNative
 508 020a C0F20002 		movt	r2, #:upper16:_ZL12c_FontNative
 509 020e 4FF00103 		mov	r3, #1
 510 0212 A047     		blx	r4
 511              	.L19:
  70:../Menue/CMenue.cpp **** 
  71:../Menue/CMenue.cpp **** 	while(1){
  72:../Menue/CMenue.cpp **** 		if(x<60) {
 512              		.loc 3 72 0
 513 0214 FB68     		ldr	r3, [r7, #12]
 514 0216 3B2B     		cmp	r3, #59
 515 0218 3BDC     		bgt	.L17
  73:../Menue/CMenue.cpp **** 			sprintf(buffer,"%02u",x);
 516              		.loc 3 73 0
 517 021a 07F10803 		add	r3, r7, #8
 518 021e 1846     		mov	r0, r3
 519 0220 40F20001 		movw	r1, #:lower16:.LC5
 520 0224 C0F20001 		movt	r1, #:upper16:.LC5
 521 0228 FA68     		ldr	r2, [r7, #12]
 522 022a FFF7FEFF 		bl	sprintf
  74:../Menue/CMenue.cpp **** 			glcd->SectorClear(75,7,20,20);
 523              		.loc 3 74 0
 524 022e 7B68     		ldr	r3, [r7, #4]
 525 0230 DB68     		ldr	r3, [r3, #12]
 526 0232 1B68     		ldr	r3, [r3, #0]
 527 0234 03F11003 		add	r3, r3, #16
 528 0238 1C68     		ldr	r4, [r3, #0]
 529 023a 7B68     		ldr	r3, [r7, #4]
 530 023c DB68     		ldr	r3, [r3, #12]
 531 023e 4FF01402 		mov	r2, #20
 532 0242 0092     		str	r2, [sp, #0]
 533 0244 1846     		mov	r0, r3
 534 0246 4FF04B01 		mov	r1, #75
 535 024a 4FF00702 		mov	r2, #7
 536 024e 4FF01403 		mov	r3, #20
 537 0252 A047     		blx	r4
  75:../Menue/CMenue.cpp **** 			glcd->WriteString(buffer,c_FontSansSerif12,75,7);
 538              		.loc 3 75 0
 539 0254 7B68     		ldr	r3, [r7, #4]
 540 0256 DB68     		ldr	r3, [r3, #12]
 541 0258 1B68     		ldr	r3, [r3, #0]
 542 025a 03F11803 		add	r3, r3, #24
 543 025e 1C68     		ldr	r4, [r3, #0]
 544 0260 7B68     		ldr	r3, [r7, #4]
 545 0262 DA68     		ldr	r2, [r3, #12]
 546 0264 07F10803 		add	r3, r7, #8
 547 0268 4FF00701 		mov	r1, #7
 548 026c 0091     		str	r1, [sp, #0]
 549 026e 1046     		mov	r0, r2
 550 0270 1946     		mov	r1, r3
 551 0272 40F20002 		movw	r2, #:lower16:c_FontSansSerif12
 552 0276 C0F20002 		movt	r2, #:upper16:c_FontSansSerif12
 553 027a 4FF04B03 		mov	r3, #75
 554 027e A047     		blx	r4
  76:../Menue/CMenue.cpp **** 			x++;
 555              		.loc 3 76 0
 556 0280 FB68     		ldr	r3, [r7, #12]
 557 0282 03F10103 		add	r3, r3, #1
 558 0286 FB60     		str	r3, [r7, #12]
  77:../Menue/CMenue.cpp **** 			vTaskDelay(1000/portTICK_RATE_MS);
 559              		.loc 3 77 0
 560 0288 4FF06400 		mov	r0, #100
 561 028c FFF7FEFF 		bl	vTaskDelay
  71:../Menue/CMenue.cpp **** 	while(1){
 562              		.loc 3 71 0
 563 0290 C0E7     		b	.L19
 564              	.L17:
  78:../Menue/CMenue.cpp **** 		} else
  79:../Menue/CMenue.cpp **** 			x = 0;
 565              		.loc 3 79 0
 566 0292 4FF00003 		mov	r3, #0
 567 0296 FB60     		str	r3, [r7, #12]
  71:../Menue/CMenue.cpp **** 	while(1){
 568              		.loc 3 71 0
 569 0298 BCE7     		b	.L19
 570              	.LBE5:
 571              		.cfi_endproc
 572              	.LFE144:
 574              		.global	_ZTV6CMenue
 575              		.section	.rodata._ZTV6CMenue,"a",%progbits
 576              		.align	3
 579              	_ZTV6CMenue:
 580 0000 00000000 		.word	0
 581 0004 00000000 		.word	0
 582 0008 00000000 		.word	_ZNK5CTask7IsValidEv
 583 000c 00000000 		.word	_ZN5CTask6AttachEPv
 584 0010 00000000 		.word	_ZN5CTask6DetachEv
 585 0014 00000000 		.word	_ZN6CMenueD1Ev
 586 0018 00000000 		.word	_ZN6CMenueD0Ev
 587 001c 00000000 		.word	_ZN6CMenue12HardwareInitEv
 588 0020 00000000 		.word	_ZN6CMenue3RunEv
 589 0024 00000000 		.word	_ZN12AManagedTask8OnCreateEPKctm
 590              		.section	.rodata._ZL12c_FontNative,"a",%progbits
 591              		.align	2
 594              	_ZL12c_FontNative:
 595 0000 00000000 		.space	24
 595      00000000 
 595      00000000 
 595      00000000 
 595      00000000 
 596              		.global	_ZN6CMenueC1EP11CGraphicLCD
 597              		.thumb_set _ZN6CMenueC1EP11CGraphicLCD,_ZN6CMenueC2EP11CGraphicLCD
 598              		.global	_ZN6CMenueD1Ev
 599              		.thumb_set _ZN6CMenueD1Ev,_ZN6CMenueD2Ev
 600              		.text
 601              	.Letext0:
 602              		.file 4 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 603              		.file 5 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 604              		.file 6 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/../../So
 605              		.file 7 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/task.h"
 606              		.file 8 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\FreeRTOS_EC\\Source/IFreeRTOSProto
 607              		.file 9 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\GraphicLCD/CGraphicLCD.h"
 608              		.file 10 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../li
 609              		.file 11 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../li
 610              		.file 12 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../li
 611              		.file 13 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../li
 612              		.file 14 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../li
 613              		.file 15 "../Menue/CMenue.h"
 614              		.file 16 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\GraphicLCD/CT6963CDriver.h"
 615              		.file 17 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
 616              		.file 18 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\GraphicLCD/SansSerif12.h"
 617              		.file 19 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\GraphicLCD/SansSerif26.h"
 618              		.file 20 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 CMenue.cpp
  C:\TEMP\cckWTGdK.s:20     .text._ZNK5CTask7IsValidEv:00000000 $t
  C:\TEMP\cckWTGdK.s:25     .text._ZNK5CTask7IsValidEv:00000000 _ZNK5CTask7IsValidEv
  C:\TEMP\cckWTGdK.s:62     .text._ZN5CTask6DetachEv:00000000 $t
  C:\TEMP\cckWTGdK.s:67     .text._ZN5CTask6DetachEv:00000000 _ZN5CTask6DetachEv
  C:\TEMP\cckWTGdK.s:107    .text._ZN12AManagedTask8OnCreateEPKctm:00000000 $t
  C:\TEMP\cckWTGdK.s:112    .text._ZN12AManagedTask8OnCreateEPKctm:00000000 _ZN12AManagedTask8OnCreateEPKctm
  C:\TEMP\cckWTGdK.s:146    .text:00000000 $t
  C:\TEMP\cckWTGdK.s:151    .text:00000000 _ZN6CMenueC2EP11CGraphicLCD
  C:\TEMP\cckWTGdK.s:192    .text:0000002c $d
  C:\TEMP\cckWTGdK.s:579    .rodata._ZTV6CMenue:00000000 _ZTV6CMenue
  C:\TEMP\cckWTGdK.s:196    .text:00000030 $t
  C:\TEMP\cckWTGdK.s:201    .text:00000030 _ZN6CMenueD2Ev
  C:\TEMP\cckWTGdK.s:246    .text:00000064 $d
  C:\TEMP\cckWTGdK.s:250    .text:00000068 $t
  C:\TEMP\cckWTGdK.s:255    .text:00000068 _ZN6CMenueD0Ev
  C:\TEMP\cckWTGdK.s:201    .text:00000030 _ZN6CMenueD1Ev
  C:\TEMP\cckWTGdK.s:291    .text:00000088 _ZN6CMenue12HardwareInitEv
  C:\TEMP\cckWTGdK.s:321    .rodata:00000000 $d
  C:\TEMP\cckWTGdK.s:322    .rodata:00000000 .LC0
  C:\TEMP\cckWTGdK.s:325    .rodata:00000018 .LC1
  C:\TEMP\cckWTGdK.s:328    .rodata:00000028 .LC2
  C:\TEMP\cckWTGdK.s:331    .rodata:00000030 .LC3
  C:\TEMP\cckWTGdK.s:334    .rodata:00000040 .LC4
  C:\TEMP\cckWTGdK.s:337    .rodata:00000058 .LC5
  C:\TEMP\cckWTGdK.s:345    .text:000000a0 _ZN6CMenue3RunEv
  C:\TEMP\cckWTGdK.s:594    .rodata._ZL12c_FontNative:00000000 _ZL12c_FontNative
  C:\TEMP\cckWTGdK.s:576    .rodata._ZTV6CMenue:00000000 $d
  C:\TEMP\cckWTGdK.s:591    .rodata._ZL12c_FontNative:00000000 $d
  C:\TEMP\cckWTGdK.s:151    .text:00000000 _ZN6CMenueC1EP11CGraphicLCD
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN12AManagedTaskC2Ev
_ZN12AManagedTaskD2Ev
_ZdlPv
_ZN11CGraphicLCD7InverseEb
vTaskDelay
c_FontSansSerif12
c_FontSansSerif26
sprintf
_ZN5CTask6AttachEPv
