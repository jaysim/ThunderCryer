   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CQueue.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZNK6CQueue7IsValidEv,"axG",%progbits,_ZNK6CQueue7IsValidEv,comdat
  19              		.align	2
  20              		.weak	_ZNK6CQueue7IsValidEv
  21              		.thumb
  22              		.thumb_func
  24              	_ZNK6CQueue7IsValidEv:
  25              	.LFB122:
  26              		.file 1 "../FreeRTOS_EC/Source/CQueue.h"
   1:../FreeRTOS_EC/Source/CQueue.h **** /**
   2:../FreeRTOS_EC/Source/CQueue.h ****  * @file CQueue.h
   3:../FreeRTOS_EC/Source/CQueue.h ****  * @class CQueue
   4:../FreeRTOS_EC/Source/CQueue.h ****  * @ingroup FreeRTOS_Wrapper
   5:../FreeRTOS_EC/Source/CQueue.h ****  *
   6:../FreeRTOS_EC/Source/CQueue.h ****  * The CQueue class wraps a native FreeRTOS queue handle (xQueueHandle).
   7:../FreeRTOS_EC/Source/CQueue.h ****  * To create a queue instance an object of this class and then call its CQueue::Create method
   8:../FreeRTOS_EC/Source/CQueue.h ****  * like showed in the following sample:
   9:../FreeRTOS_EC/Source/CQueue.h ****  * \code
  10:../FreeRTOS_EC/Source/CQueue.h ****  * CQueue g_aQueue // global task declaration.
  11:../FreeRTOS_EC/Source/CQueue.h ****  *
  12:../FreeRTOS_EC/Source/CQueue.h ****  * void taskControlFunc(void *pParams)
  13:../FreeRTOS_EC/Source/CQueue.h ****  * {
  14:../FreeRTOS_EC/Source/CQueue.h ****  * 	unsigned char *Message;
  15:../FreeRTOS_EC/Source/CQueue.h ****  * 	g_aQueue.Create(nQueueSize, sizeof(queueItemT));
  16:../FreeRTOS_EC/Source/CQueue.h ****  *
  17:../FreeRTOS_EC/Source/CQueue.h ****  * 	for (;;) {
  18:../FreeRTOS_EC/Source/CQueue.h ****  * 		g_aQueue.Receive(&Message, portMAX_DELAY ) != pdTRUE)
  19:../FreeRTOS_EC/Source/CQueue.h ****  * 		// do something
  20:../FreeRTOS_EC/Source/CQueue.h ****  * }
  21:../FreeRTOS_EC/Source/CQueue.h ****  * \endcode
  22:../FreeRTOS_EC/Source/CQueue.h ****  *
  23:../FreeRTOS_EC/Source/CQueue.h ****  * See the CLcdTask for an example.
  24:../FreeRTOS_EC/Source/CQueue.h ****  *
  25:../FreeRTOS_EC/Source/CQueue.h ****  * \sa <a href="http://www.freertos.org/Inter-Task-Communication.html">queue documentation</a> in t
  26:../FreeRTOS_EC/Source/CQueue.h ****  *
  27:../FreeRTOS_EC/Source/CQueue.h ****  * @date Jul 12, 2010
  28:../FreeRTOS_EC/Source/CQueue.h ****  * @author Stefano Oliveri (STF12.net)
  29:../FreeRTOS_EC/Source/CQueue.h ****  *         E-Mail: software@stf12.net
  30:../FreeRTOS_EC/Source/CQueue.h ****  */
  31:../FreeRTOS_EC/Source/CQueue.h **** 
  32:../FreeRTOS_EC/Source/CQueue.h **** 
  33:../FreeRTOS_EC/Source/CQueue.h **** #ifndef CQUEUE_H_
  34:../FreeRTOS_EC/Source/CQueue.h **** #define CQUEUE_H_
  35:../FreeRTOS_EC/Source/CQueue.h **** 
  36:../FreeRTOS_EC/Source/CQueue.h **** #include <assert.h>
  37:../FreeRTOS_EC/Source/CQueue.h **** 
  38:../FreeRTOS_EC/Source/CQueue.h **** #include "FreeRTOS.h"
  39:../FreeRTOS_EC/Source/CQueue.h **** #include "queue.h"
  40:../FreeRTOS_EC/Source/CQueue.h **** #include "IFreeRTOSProtocol.h"
  41:../FreeRTOS_EC/Source/CQueue.h **** 
  42:../FreeRTOS_EC/Source/CQueue.h **** 
  43:../FreeRTOS_EC/Source/CQueue.h **** class CQueue: public IFreeRTOSObj {
  44:../FreeRTOS_EC/Source/CQueue.h **** 	/**
  45:../FreeRTOS_EC/Source/CQueue.h **** 	 * Specifies the native FreeRTOS handle managed by an instance of this class.
  46:../FreeRTOS_EC/Source/CQueue.h **** 	 */
  47:../FreeRTOS_EC/Source/CQueue.h **** 	xQueueHandle m_handleQueue;
  48:../FreeRTOS_EC/Source/CQueue.h **** 
  49:../FreeRTOS_EC/Source/CQueue.h **** public:
  50:../FreeRTOS_EC/Source/CQueue.h **** 	/**
  51:../FreeRTOS_EC/Source/CQueue.h **** 	 * The default constructor. It initializes the object without attaching it to a native FreeRTOS ha
  52:../FreeRTOS_EC/Source/CQueue.h **** 	 * Call the Create method to allocate a queue handle and attach it to the object.
  53:../FreeRTOS_EC/Source/CQueue.h **** 	 */
  54:../FreeRTOS_EC/Source/CQueue.h **** 	CQueue();
  55:../FreeRTOS_EC/Source/CQueue.h **** 
  56:../FreeRTOS_EC/Source/CQueue.h **** 	/**
  57:../FreeRTOS_EC/Source/CQueue.h **** 	 * Create a CQueue instance and attach it to a valid handle.
  58:../FreeRTOS_EC/Source/CQueue.h **** 	 *
  59:../FreeRTOS_EC/Source/CQueue.h **** 	 * @param handleQueue a valid queue handle.
  60:../FreeRTOS_EC/Source/CQueue.h **** 	 */
  61:../FreeRTOS_EC/Source/CQueue.h **** 	CQueue(xQueueHandle handleQueue);
  62:../FreeRTOS_EC/Source/CQueue.h **** 
  63:../FreeRTOS_EC/Source/CQueue.h **** 	/**
  64:../FreeRTOS_EC/Source/CQueue.h **** 	 * Delete the native FreeRTOS queue.
  65:../FreeRTOS_EC/Source/CQueue.h **** 	 */
  66:../FreeRTOS_EC/Source/CQueue.h **** 	virtual ~CQueue();
  67:../FreeRTOS_EC/Source/CQueue.h **** 
  68:../FreeRTOS_EC/Source/CQueue.h **** 	/**
  69:../FreeRTOS_EC/Source/CQueue.h **** 	 * Retrieve the native FreeRTOS queue handle attached to this object.
  70:../FreeRTOS_EC/Source/CQueue.h **** 	 *
  71:../FreeRTOS_EC/Source/CQueue.h **** 	 * @return the native FreeRTOS queue handle attached to this object.
  72:../FreeRTOS_EC/Source/CQueue.h **** 	 */
  73:../FreeRTOS_EC/Source/CQueue.h **** 	inline operator xQueueHandle() const { return m_handleQueue; }
  74:../FreeRTOS_EC/Source/CQueue.h **** 
  75:../FreeRTOS_EC/Source/CQueue.h **** 	inline bool IsValid() const;
  76:../FreeRTOS_EC/Source/CQueue.h **** 	void Attach(xGenericHandle handle);
  77:../FreeRTOS_EC/Source/CQueue.h **** 	inline xGenericHandle Detach();
  78:../FreeRTOS_EC/Source/CQueue.h **** 
  79:../FreeRTOS_EC/Source/CQueue.h **** 	// FreeRTOS API Wrappers
  80:../FreeRTOS_EC/Source/CQueue.h **** 
  81:../FreeRTOS_EC/Source/CQueue.h **** 	/**
  82:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/a00116.html">xQueueCreate</a> FreeRTOS API function.
  83:../FreeRTOS_EC/Source/CQueue.h **** 	 */
  84:../FreeRTOS_EC/Source/CQueue.h **** 	CQueue &Create(unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize);
  85:../FreeRTOS_EC/Source/CQueue.h **** 
  86:../FreeRTOS_EC/Source/CQueue.h **** 	/**
  87:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/a00018.html#vQueueDelete">vQueueDelete</a> FreeRTOS API fu
  88:../FreeRTOS_EC/Source/CQueue.h **** 	 */
  89:../FreeRTOS_EC/Source/CQueue.h **** 	void Delete();
  90:../FreeRTOS_EC/Source/CQueue.h **** 
  91:../FreeRTOS_EC/Source/CQueue.h **** 	/**
  92:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/a00018.html#ucQueueMessagesWaiting">uxQueueMessagesWaiting
  93:../FreeRTOS_EC/Source/CQueue.h **** 	 */
  94:../FreeRTOS_EC/Source/CQueue.h **** 	inline unsigned portBASE_TYPE MessagesWaiting();
  95:../FreeRTOS_EC/Source/CQueue.h **** 
  96:../FreeRTOS_EC/Source/CQueue.h **** 	/**
  97:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/a00117.html">xQueueSend</a> FreeRTOS API function.
  98:../FreeRTOS_EC/Source/CQueue.h **** 	 */
  99:../FreeRTOS_EC/Source/CQueue.h **** 	inline portBASE_TYPE Send(const void * pvItemToQueue, portTickType xTicksToWait);
 100:../FreeRTOS_EC/Source/CQueue.h **** 
 101:../FreeRTOS_EC/Source/CQueue.h **** 	/**
 102:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/xQueueSendToBack.html">SendToBack</a> FreeRTOS API functio
 103:../FreeRTOS_EC/Source/CQueue.h **** 	 */
 104:../FreeRTOS_EC/Source/CQueue.h **** 	inline portBASE_TYPE SendToBack(const void * pvItemToQueue, portTickType xTicksToWait);
 105:../FreeRTOS_EC/Source/CQueue.h **** 
 106:../FreeRTOS_EC/Source/CQueue.h **** 	/**
 107:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/xQueueSendToFront.html">xQueueSendToFront</a> FreeRTOS API
 108:../FreeRTOS_EC/Source/CQueue.h **** 	 */
 109:../FreeRTOS_EC/Source/CQueue.h **** 	inline portBASE_TYPE SendToFront(const void * pvItemToQueue, portTickType xTicksToWait);
 110:../FreeRTOS_EC/Source/CQueue.h **** 
 111:../FreeRTOS_EC/Source/CQueue.h **** 	/**
 112:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/a00118.html">xQueueReceive</a> FreeRTOS API function.
 113:../FreeRTOS_EC/Source/CQueue.h **** 	 */
 114:../FreeRTOS_EC/Source/CQueue.h **** 	inline portBASE_TYPE Receive(void *pvBuffer, portTickType xTicksToWait);
 115:../FreeRTOS_EC/Source/CQueue.h **** 
 116:../FreeRTOS_EC/Source/CQueue.h **** 	/**
 117:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/xQueuePeek.html">xQueuePeek</a> FreeRTOS API function.
 118:../FreeRTOS_EC/Source/CQueue.h **** 	 */
 119:../FreeRTOS_EC/Source/CQueue.h **** 	inline portBASE_TYPE Peek(void *pvBuffer, portTickType xTicksToWait);
 120:../FreeRTOS_EC/Source/CQueue.h **** 
 121:../FreeRTOS_EC/Source/CQueue.h **** 	/**
 122:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/a00119.html">xQueueSendFromISR</a> FreeRTOS API function.
 123:../FreeRTOS_EC/Source/CQueue.h **** 	 */
 124:../FreeRTOS_EC/Source/CQueue.h **** 	inline portBASE_TYPE SendFromISR(const void * pvItemToQueue, portBASE_TYPE *pxHigherPriorityTaskWo
 125:../FreeRTOS_EC/Source/CQueue.h **** 
 126:../FreeRTOS_EC/Source/CQueue.h **** 	/**
 127:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/xQueueSendToBackFromISR.html">xQueueSendToBackFromISR</a> 
 128:../FreeRTOS_EC/Source/CQueue.h **** 	 */
 129:../FreeRTOS_EC/Source/CQueue.h **** 	inline portBASE_TYPE SendToBackFromISR(const void * pvItemToQueue, portBASE_TYPE *pxHigherPriority
 130:../FreeRTOS_EC/Source/CQueue.h **** 
 131:../FreeRTOS_EC/Source/CQueue.h **** 	/**
 132:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/xQueueSendToFrontFromISR.html">xQueueSendToFrontFromISR</a
 133:../FreeRTOS_EC/Source/CQueue.h **** 	 */
 134:../FreeRTOS_EC/Source/CQueue.h **** 	inline portBASE_TYPE SendToFrontFromISR(const void * pvItemToQueue, portBASE_TYPE *pxHigherPriorit
 135:../FreeRTOS_EC/Source/CQueue.h **** 
 136:../FreeRTOS_EC/Source/CQueue.h **** 	/**
 137:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/a00120.html">xQueueReceiveFromISR</a> FreeRTOS API functio
 138:../FreeRTOS_EC/Source/CQueue.h **** 	 */
 139:../FreeRTOS_EC/Source/CQueue.h **** 	inline portBASE_TYPE ReceiveFromISR(void *pvBuffer, portBASE_TYPE *pxTaskWoken);
 140:../FreeRTOS_EC/Source/CQueue.h **** 
 141:../FreeRTOS_EC/Source/CQueue.h **** 	/**
 142:../FreeRTOS_EC/Source/CQueue.h **** 	 * \sa <a href="http://www.freertos.org/vQueueAddToRegistry.html">vQueueAddToRegistry</a> FreeRTOS
 143:../FreeRTOS_EC/Source/CQueue.h **** 	 */
 144:../FreeRTOS_EC/Source/CQueue.h **** 	inline void AddToRegistry(signed portCHAR *pcQueueName);
 145:../FreeRTOS_EC/Source/CQueue.h **** 
 146:../FreeRTOS_EC/Source/CQueue.h **** };
 147:../FreeRTOS_EC/Source/CQueue.h **** 
 148:../FreeRTOS_EC/Source/CQueue.h **** // inline method implementation
 149:../FreeRTOS_EC/Source/CQueue.h **** 
 150:../FreeRTOS_EC/Source/CQueue.h **** inline
 151:../FreeRTOS_EC/Source/CQueue.h **** portBASE_TYPE CQueue::Send(const void * pvItemToQueue, portTickType xTicksToWait) {
 152:../FreeRTOS_EC/Source/CQueue.h **** 	return xQueueSend(m_handleQueue, pvItemToQueue, xTicksToWait);
 153:../FreeRTOS_EC/Source/CQueue.h **** }
 154:../FreeRTOS_EC/Source/CQueue.h **** 
 155:../FreeRTOS_EC/Source/CQueue.h **** inline
 156:../FreeRTOS_EC/Source/CQueue.h **** portBASE_TYPE CQueue::SendFromISR(const void * pvItemToQueue, portBASE_TYPE *pxHigherPriorityTaskWo
 157:../FreeRTOS_EC/Source/CQueue.h **** 	return xQueueSendFromISR(m_handleQueue, pvItemToQueue, pxHigherPriorityTaskWoken);
 158:../FreeRTOS_EC/Source/CQueue.h **** }
 159:../FreeRTOS_EC/Source/CQueue.h **** 
 160:../FreeRTOS_EC/Source/CQueue.h **** inline
 161:../FreeRTOS_EC/Source/CQueue.h **** unsigned portBASE_TYPE CQueue::MessagesWaiting() {
 162:../FreeRTOS_EC/Source/CQueue.h **** 	assert(IsValid());
 163:../FreeRTOS_EC/Source/CQueue.h **** 
 164:../FreeRTOS_EC/Source/CQueue.h **** 	return uxQueueMessagesWaiting(m_handleQueue);
 165:../FreeRTOS_EC/Source/CQueue.h **** }
 166:../FreeRTOS_EC/Source/CQueue.h **** 
 167:../FreeRTOS_EC/Source/CQueue.h **** inline
 168:../FreeRTOS_EC/Source/CQueue.h **** portBASE_TYPE CQueue::SendToBack(const void * pvItemToQueue, portTickType xTicksToWait) {
 169:../FreeRTOS_EC/Source/CQueue.h **** 	assert(IsValid());
 170:../FreeRTOS_EC/Source/CQueue.h **** 
 171:../FreeRTOS_EC/Source/CQueue.h **** 	return xQueueSendToBack(m_handleQueue, pvItemToQueue, xTicksToWait);
 172:../FreeRTOS_EC/Source/CQueue.h **** }
 173:../FreeRTOS_EC/Source/CQueue.h **** 
 174:../FreeRTOS_EC/Source/CQueue.h **** inline
 175:../FreeRTOS_EC/Source/CQueue.h **** portBASE_TYPE CQueue::SendToFront(const void * pvItemToQueue, portTickType xTicksToWait) {
 176:../FreeRTOS_EC/Source/CQueue.h **** 	assert(IsValid());
 177:../FreeRTOS_EC/Source/CQueue.h **** 
 178:../FreeRTOS_EC/Source/CQueue.h **** 	return xQueueSendToFront(m_handleQueue, pvItemToQueue, xTicksToWait);
 179:../FreeRTOS_EC/Source/CQueue.h **** }
 180:../FreeRTOS_EC/Source/CQueue.h **** 
 181:../FreeRTOS_EC/Source/CQueue.h **** inline
 182:../FreeRTOS_EC/Source/CQueue.h **** portBASE_TYPE CQueue::Receive(void *pvBuffer, portTickType xTicksToWait) {
 183:../FreeRTOS_EC/Source/CQueue.h **** 	assert(IsValid());
 184:../FreeRTOS_EC/Source/CQueue.h **** 
 185:../FreeRTOS_EC/Source/CQueue.h **** 	return xQueueReceive(m_handleQueue, pvBuffer, xTicksToWait);
 186:../FreeRTOS_EC/Source/CQueue.h **** }
 187:../FreeRTOS_EC/Source/CQueue.h **** 
 188:../FreeRTOS_EC/Source/CQueue.h **** inline
 189:../FreeRTOS_EC/Source/CQueue.h **** portBASE_TYPE CQueue::Peek(void *pvBuffer, portTickType xTicksToWait) {
 190:../FreeRTOS_EC/Source/CQueue.h **** 	assert(IsValid());
 191:../FreeRTOS_EC/Source/CQueue.h **** 
 192:../FreeRTOS_EC/Source/CQueue.h **** 	return xQueuePeek(m_handleQueue, pvBuffer, xTicksToWait);
 193:../FreeRTOS_EC/Source/CQueue.h **** }
 194:../FreeRTOS_EC/Source/CQueue.h **** 
 195:../FreeRTOS_EC/Source/CQueue.h **** inline
 196:../FreeRTOS_EC/Source/CQueue.h **** portBASE_TYPE CQueue::SendToBackFromISR(const void * pvItemToQueue, portBASE_TYPE *pxHigherPriority
 197:../FreeRTOS_EC/Source/CQueue.h **** 	assert(IsValid());
 198:../FreeRTOS_EC/Source/CQueue.h **** 
 199:../FreeRTOS_EC/Source/CQueue.h **** 	return xQueueSendToBackFromISR(m_handleQueue, pvItemToQueue, pxHigherPriorityTaskWoken);
 200:../FreeRTOS_EC/Source/CQueue.h **** }
 201:../FreeRTOS_EC/Source/CQueue.h **** 
 202:../FreeRTOS_EC/Source/CQueue.h **** inline
 203:../FreeRTOS_EC/Source/CQueue.h **** portBASE_TYPE CQueue::SendToFrontFromISR(const void * pvItemToQueue, portBASE_TYPE *pxHigherPriorit
 204:../FreeRTOS_EC/Source/CQueue.h **** 	assert(IsValid());
 205:../FreeRTOS_EC/Source/CQueue.h **** 
 206:../FreeRTOS_EC/Source/CQueue.h **** 	return xQueueSendToFrontFromISR(m_handleQueue, pvItemToQueue, pxHigherPriorityTaskWoken);
 207:../FreeRTOS_EC/Source/CQueue.h **** }
 208:../FreeRTOS_EC/Source/CQueue.h **** 
 209:../FreeRTOS_EC/Source/CQueue.h **** inline
 210:../FreeRTOS_EC/Source/CQueue.h **** portBASE_TYPE CQueue::ReceiveFromISR(void *pvBuffer, portBASE_TYPE *pxTaskWoken) {
 211:../FreeRTOS_EC/Source/CQueue.h **** 	assert(IsValid());
 212:../FreeRTOS_EC/Source/CQueue.h **** 
 213:../FreeRTOS_EC/Source/CQueue.h **** 	return xQueueReceiveFromISR(m_handleQueue, pvBuffer, pxTaskWoken);
 214:../FreeRTOS_EC/Source/CQueue.h **** }
 215:../FreeRTOS_EC/Source/CQueue.h **** 
 216:../FreeRTOS_EC/Source/CQueue.h **** inline
 217:../FreeRTOS_EC/Source/CQueue.h **** void CQueue::AddToRegistry(signed portCHAR *pcQueueName) {
 218:../FreeRTOS_EC/Source/CQueue.h **** #if (configQUEUE_REGISTRY_SIZE > 0)
 219:../FreeRTOS_EC/Source/CQueue.h **** 	assert(IsValid());
 220:../FreeRTOS_EC/Source/CQueue.h **** 
 221:../FreeRTOS_EC/Source/CQueue.h **** 	vQueueAddToRegistry(m_handleQueue, pcQueueName);
 222:../FreeRTOS_EC/Source/CQueue.h **** #endif
 223:../FreeRTOS_EC/Source/CQueue.h **** }
 224:../FreeRTOS_EC/Source/CQueue.h **** 
 225:../FreeRTOS_EC/Source/CQueue.h **** inline
 226:../FreeRTOS_EC/Source/CQueue.h **** bool CQueue::IsValid() const{
  27              		.loc 1 226 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 227:../FreeRTOS_EC/Source/CQueue.h **** 	return m_handleQueue != NULL;
  43              		.loc 1 227 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 5B68     		ldr	r3, [r3, #4]
  46 000c 002B     		cmp	r3, #0
  47 000e 0CBF     		ite	eq
  48 0010 0023     		moveq	r3, #0
  49 0012 0123     		movne	r3, #1
  50 0014 DBB2     		uxtb	r3, r3
 228:../FreeRTOS_EC/Source/CQueue.h **** }
  51              		.loc 1 228 0
  52 0016 1846     		mov	r0, r3
  53 0018 07F10C07 		add	r7, r7, #12
  54 001c BD46     		mov	sp, r7
  55 001e 80BC     		pop	{r7}
  56 0020 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE122:
  60 0022 00BF     		.section	.text._ZN6CQueue6DetachEv,"axG",%progbits,_ZN6CQueue6DetachEv,comdat
  61              		.align	2
  62              		.weak	_ZN6CQueue6DetachEv
  63              		.thumb
  64              		.thumb_func
  66              	_ZN6CQueue6DetachEv:
  67              	.LFB123:
 229:../FreeRTOS_EC/Source/CQueue.h **** 
 230:../FreeRTOS_EC/Source/CQueue.h **** inline
 231:../FreeRTOS_EC/Source/CQueue.h **** xGenericHandle CQueue::Detach() {
  68              		.loc 1 231 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 16
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72              		@ link register save eliminated.
  73 0000 80B4     		push	{r7}
  74              	.LCFI3:
  75              		.cfi_def_cfa_offset 4
  76              		.cfi_offset 7, -4
  77 0002 85B0     		sub	sp, sp, #20
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 24
  80 0004 00AF     		add	r7, sp, #0
  81              	.LCFI5:
  82              		.cfi_def_cfa_register 7
  83 0006 7860     		str	r0, [r7, #4]
  84              	.LBB2:
 232:../FreeRTOS_EC/Source/CQueue.h **** 	xQueueHandle res = m_handleQueue;
  85              		.loc 1 232 0
  86 0008 7B68     		ldr	r3, [r7, #4]
  87 000a 5B68     		ldr	r3, [r3, #4]
  88 000c FB60     		str	r3, [r7, #12]
 233:../FreeRTOS_EC/Source/CQueue.h **** 	m_handleQueue = NULL;
  89              		.loc 1 233 0
  90 000e 7B68     		ldr	r3, [r7, #4]
  91 0010 4FF00002 		mov	r2, #0
  92 0014 5A60     		str	r2, [r3, #4]
 234:../FreeRTOS_EC/Source/CQueue.h **** 	return res;
  93              		.loc 1 234 0
  94 0016 FB68     		ldr	r3, [r7, #12]
  95              	.LBE2:
 235:../FreeRTOS_EC/Source/CQueue.h **** }
  96              		.loc 1 235 0
  97 0018 1846     		mov	r0, r3
  98 001a 07F11407 		add	r7, r7, #20
  99 001e BD46     		mov	sp, r7
 100 0020 80BC     		pop	{r7}
 101 0022 7047     		bx	lr
 102              		.cfi_endproc
 103              	.LFE123:
 105              		.section	.text._ZN12IFreeRTOSObjC2Ev,"axG",%progbits,_ZN12IFreeRTOSObjC5Ev,comdat
 106              		.align	2
 107              		.weak	_ZN12IFreeRTOSObjC2Ev
 108              		.thumb
 109              		.thumb_func
 111              	_ZN12IFreeRTOSObjC2Ev:
 112              	.LFB126:
 113              		.file 2 "../FreeRTOS_EC/Source/IFreeRTOSProtocol.h"
   1:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h **** /**
   2:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * @file IFreeRTOSProtocol.h
   3:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * @class IFreeRTOSObj
   4:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * @ingroup FreeRTOS_Wrapper
   5:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  *
   6:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * This interface provide the basic behavior for all class in the FreeRTOS Wrapper layer. All objec
   7:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * must be able to manage the owned native FreeRTOS handle. When the handle is created  it is attac
   8:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * From this moment the object owns the handle. When the object is disposed the handle is deleted a
   9:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * are freed. It is possible to keep the underling native FreeRTOS handle alive by detaching it bef
  10:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * object is disposed.
  11:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  *
  12:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  *
  13:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * @date Aug 5, 2010
  14:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  * @author Stefano Oliveri (STF12.net)
  15:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  *         E-Mail: software@stf12.net
  16:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h ****  */
  17:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h **** 
  18:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h **** 
  19:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h **** #ifndef IFREERTOSPROTOCOL_H_
  20:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h **** #define IFREERTOSPROTOCOL_H_
  21:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h **** 
  22:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h **** typedef void *xGenericHandle;
  23:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h **** 
  24:../FreeRTOS_EC/Source/IFreeRTOSProtocol.h **** class IFreeRTOSObj {
 114              		.loc 2 24 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 8
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119 0000 80B4     		push	{r7}
 120              	.LCFI6:
 121              		.cfi_def_cfa_offset 4
 122              		.cfi_offset 7, -4
 123 0002 83B0     		sub	sp, sp, #12
 124              	.LCFI7:
 125              		.cfi_def_cfa_offset 16
 126 0004 00AF     		add	r7, sp, #0
 127              	.LCFI8:
 128              		.cfi_def_cfa_register 7
 129 0006 7860     		str	r0, [r7, #4]
 130              	.LBB3:
 131              		.loc 2 24 0
 132 0008 7B68     		ldr	r3, [r7, #4]
 133 000a 044A     		ldr	r2, .L5
 134 000c 1A60     		str	r2, [r3, #0]
 135              	.LBE3:
 136 000e 7B68     		ldr	r3, [r7, #4]
 137 0010 1846     		mov	r0, r3
 138 0012 07F10C07 		add	r7, r7, #12
 139 0016 BD46     		mov	sp, r7
 140 0018 80BC     		pop	{r7}
 141 001a 7047     		bx	lr
 142              	.L6:
 143              		.align	2
 144              	.L5:
 145 001c 08000000 		.word	_ZTV12IFreeRTOSObj+8
 146              		.cfi_endproc
 147              	.LFE126:
 149              		.section	.text._ZN6CQueueC2Ev,"ax",%progbits
 150              		.align	2
 151              		.global	_ZN6CQueueC2Ev
 152              		.thumb
 153              		.thumb_func
 155              	_ZN6CQueueC2Ev:
 156              	.LFB128:
 157              		.file 3 "../FreeRTOS_EC/Source/CQueue.cpp"
   1:../FreeRTOS_EC/Source/CQueue.cpp **** /**
   2:../FreeRTOS_EC/Source/CQueue.cpp ****  * CQueue.cpp
   3:../FreeRTOS_EC/Source/CQueue.cpp ****  *
   4:../FreeRTOS_EC/Source/CQueue.cpp ****  *  Created on: Jul 12, 2010
   5:../FreeRTOS_EC/Source/CQueue.cpp ****  *      Author: Stefano Oliveri (STF12.net)
   6:../FreeRTOS_EC/Source/CQueue.cpp ****  *      E-Mail: software@stf12.net
   7:../FreeRTOS_EC/Source/CQueue.cpp ****  */
   8:../FreeRTOS_EC/Source/CQueue.cpp **** 
   9:../FreeRTOS_EC/Source/CQueue.cpp **** #include "CQueue.h"
  10:../FreeRTOS_EC/Source/CQueue.cpp **** 
  11:../FreeRTOS_EC/Source/CQueue.cpp **** 
  12:../FreeRTOS_EC/Source/CQueue.cpp **** CQueue::CQueue() {
 158              		.loc 3 12 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 8
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162 0000 80B5     		push	{r7, lr}
 163              	.LCFI9:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 14, -4
 166              		.cfi_offset 7, -8
 167 0002 82B0     		sub	sp, sp, #8
 168              	.LCFI10:
 169              		.cfi_def_cfa_offset 16
 170 0004 00AF     		add	r7, sp, #0
 171              	.LCFI11:
 172              		.cfi_def_cfa_register 7
 173 0006 7860     		str	r0, [r7, #4]
 174              	.LBB4:
 175              		.loc 3 12 0
 176 0008 7B68     		ldr	r3, [r7, #4]
 177 000a 1846     		mov	r0, r3
 178 000c FFF7FEFF 		bl	_ZN12IFreeRTOSObjC2Ev
 179 0010 7B68     		ldr	r3, [r7, #4]
 180 0012 064A     		ldr	r2, .L9
 181 0014 1A60     		str	r2, [r3, #0]
  13:../FreeRTOS_EC/Source/CQueue.cpp **** 	m_handleQueue = NULL;
 182              		.loc 3 13 0
 183 0016 7B68     		ldr	r3, [r7, #4]
 184 0018 4FF00002 		mov	r2, #0
 185 001c 5A60     		str	r2, [r3, #4]
 186              	.LBE4:
  14:../FreeRTOS_EC/Source/CQueue.cpp **** }
 187              		.loc 3 14 0
 188 001e 7B68     		ldr	r3, [r7, #4]
 189 0020 1846     		mov	r0, r3
 190 0022 07F10807 		add	r7, r7, #8
 191 0026 BD46     		mov	sp, r7
 192 0028 80BD     		pop	{r7, pc}
 193              	.L10:
 194 002a 00BF     		.align	2
 195              	.L9:
 196 002c 08000000 		.word	_ZTV6CQueue+8
 197              		.cfi_endproc
 198              	.LFE128:
 200              		.section	.text._ZN6CQueueD2Ev,"ax",%progbits
 201              		.align	2
 202              		.global	_ZN6CQueueD2Ev
 203              		.thumb
 204              		.thumb_func
 206              	_ZN6CQueueD2Ev:
 207              	.LFB131:
  15:../FreeRTOS_EC/Source/CQueue.cpp **** 
  16:../FreeRTOS_EC/Source/CQueue.cpp **** CQueue::~CQueue() {
 208              		.loc 3 16 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 8
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212 0000 80B5     		push	{r7, lr}
 213              	.LCFI12:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 14, -4
 216              		.cfi_offset 7, -8
 217 0002 82B0     		sub	sp, sp, #8
 218              	.LCFI13:
 219              		.cfi_def_cfa_offset 16
 220 0004 00AF     		add	r7, sp, #0
 221              	.LCFI14:
 222              		.cfi_def_cfa_register 7
 223 0006 7860     		str	r0, [r7, #4]
 224              	.LBB5:
 225              		.loc 3 16 0
 226 0008 7B68     		ldr	r3, [r7, #4]
 227 000a 0D4A     		ldr	r2, .L14
 228 000c 1A60     		str	r2, [r3, #0]
  17:../FreeRTOS_EC/Source/CQueue.cpp **** 	if (IsValid())
 229              		.loc 3 17 0
 230 000e 7868     		ldr	r0, [r7, #4]
 231 0010 FFF7FEFF 		bl	_ZNK6CQueue7IsValidEv
 232 0014 0346     		mov	r3, r0
 233 0016 002B     		cmp	r3, #0
 234 0018 02D0     		beq	.L12
  18:../FreeRTOS_EC/Source/CQueue.cpp **** 		Delete();
 235              		.loc 3 18 0
 236 001a 7868     		ldr	r0, [r7, #4]
 237 001c FFF7FEFF 		bl	_ZN6CQueue6DeleteEv
 238              	.L12:
 239              	.LBE5:
  19:../FreeRTOS_EC/Source/CQueue.cpp **** }
 240              		.loc 3 19 0
 241 0020 4FF00003 		mov	r3, #0
 242 0024 03F00103 		and	r3, r3, #1
 243 0028 DBB2     		uxtb	r3, r3
 244 002a 002B     		cmp	r3, #0
 245 002c 02D0     		beq	.L13
 246              		.loc 3 19 0 is_stmt 0 discriminator 1
 247 002e 7868     		ldr	r0, [r7, #4]
 248 0030 FFF7FEFF 		bl	_ZdlPv
 249              	.L13:
 250              		.loc 3 19 0 discriminator 2
 251 0034 7B68     		ldr	r3, [r7, #4]
 252 0036 1846     		mov	r0, r3
 253 0038 07F10807 		add	r7, r7, #8
 254 003c BD46     		mov	sp, r7
 255 003e 80BD     		pop	{r7, pc}
 256              	.L15:
 257              		.align	2
 258              	.L14:
 259 0040 08000000 		.word	_ZTV6CQueue+8
 260              		.cfi_endproc
 261              	.LFE131:
 263              		.section	.text._ZN6CQueueD0Ev,"ax",%progbits
 264              		.align	2
 265              		.global	_ZN6CQueueD0Ev
 266              		.thumb
 267              		.thumb_func
 269              	_ZN6CQueueD0Ev:
 270              	.LFB133:
  16:../FreeRTOS_EC/Source/CQueue.cpp **** CQueue::~CQueue() {
 271              		.loc 3 16 0 is_stmt 1
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275 0000 80B5     		push	{r7, lr}
 276              	.LCFI15:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 14, -4
 279              		.cfi_offset 7, -8
 280 0002 82B0     		sub	sp, sp, #8
 281              	.LCFI16:
 282              		.cfi_def_cfa_offset 16
 283 0004 00AF     		add	r7, sp, #0
 284              	.LCFI17:
 285              		.cfi_def_cfa_register 7
 286 0006 7860     		str	r0, [r7, #4]
 287              		.loc 3 19 0
 288 0008 7868     		ldr	r0, [r7, #4]
 289 000a FFF7FEFF 		bl	_ZN6CQueueD1Ev
 290 000e 7868     		ldr	r0, [r7, #4]
 291 0010 FFF7FEFF 		bl	_ZdlPv
 292 0014 7B68     		ldr	r3, [r7, #4]
 293 0016 1846     		mov	r0, r3
 294 0018 07F10807 		add	r7, r7, #8
 295 001c BD46     		mov	sp, r7
 296 001e 80BD     		pop	{r7, pc}
 297              		.cfi_endproc
 298              	.LFE133:
 300              		.section	.text._ZN6CQueueC2EPv,"ax",%progbits
 301              		.align	2
 302              		.global	_ZN6CQueueC2EPv
 303              		.thumb
 304              		.thumb_func
 306              	_ZN6CQueueC2EPv:
 307              	.LFB135:
  20:../FreeRTOS_EC/Source/CQueue.cpp **** 
  21:../FreeRTOS_EC/Source/CQueue.cpp **** CQueue::CQueue(xQueueHandle handleQueue) {
 308              		.loc 3 21 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              	.LCFI18:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 14, -4
 316              		.cfi_offset 7, -8
 317 0002 82B0     		sub	sp, sp, #8
 318              	.LCFI19:
 319              		.cfi_def_cfa_offset 16
 320 0004 00AF     		add	r7, sp, #0
 321              	.LCFI20:
 322              		.cfi_def_cfa_register 7
 323 0006 7860     		str	r0, [r7, #4]
 324 0008 3960     		str	r1, [r7, #0]
 325              	.LBB6:
 326              		.loc 3 21 0
 327 000a 7B68     		ldr	r3, [r7, #4]
 328 000c 1846     		mov	r0, r3
 329 000e FFF7FEFF 		bl	_ZN12IFreeRTOSObjC2Ev
 330 0012 7B68     		ldr	r3, [r7, #4]
 331 0014 054A     		ldr	r2, .L20
 332 0016 1A60     		str	r2, [r3, #0]
  22:../FreeRTOS_EC/Source/CQueue.cpp **** 	Attach(handleQueue);
 333              		.loc 3 22 0
 334 0018 7868     		ldr	r0, [r7, #4]
 335 001a 3968     		ldr	r1, [r7, #0]
 336 001c FFF7FEFF 		bl	_ZN6CQueue6AttachEPv
 337              	.LBE6:
  23:../FreeRTOS_EC/Source/CQueue.cpp **** }
 338              		.loc 3 23 0
 339 0020 7B68     		ldr	r3, [r7, #4]
 340 0022 1846     		mov	r0, r3
 341 0024 07F10807 		add	r7, r7, #8
 342 0028 BD46     		mov	sp, r7
 343 002a 80BD     		pop	{r7, pc}
 344              	.L21:
 345              		.align	2
 346              	.L20:
 347 002c 08000000 		.word	_ZTV6CQueue+8
 348              		.cfi_endproc
 349              	.LFE135:
 351              		.section	.rodata
 352              		.align	2
 353              	.LC0:
 354 0000 2E2E2F46 		.ascii	"../FreeRTOS_EC/Source/CQueue.cpp\000"
 354      72656552 
 354      544F535F 
 354      45432F53 
 354      6F757263 
 355 0021 000000   		.align	2
 356              	.LC1:
 357 0024 21497356 		.ascii	"!IsValid()\000"
 357      616C6964 
 357      282900
 358              		.section	.text._ZN6CQueue6CreateEmm,"ax",%progbits
 359              		.align	2
 360              		.global	_ZN6CQueue6CreateEmm
 361              		.thumb
 362              		.thumb_func
 364              	_ZN6CQueue6CreateEmm:
 365              	.LFB137:
  24:../FreeRTOS_EC/Source/CQueue.cpp **** 
  25:../FreeRTOS_EC/Source/CQueue.cpp **** CQueue &CQueue::Create(unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize) {
 366              		.loc 3 25 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 24
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370 0000 80B5     		push	{r7, lr}
 371              	.LCFI21:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 14, -4
 374              		.cfi_offset 7, -8
 375 0002 86B0     		sub	sp, sp, #24
 376              	.LCFI22:
 377              		.cfi_def_cfa_offset 32
 378 0004 00AF     		add	r7, sp, #0
 379              	.LCFI23:
 380              		.cfi_def_cfa_register 7
 381 0006 F860     		str	r0, [r7, #12]
 382 0008 B960     		str	r1, [r7, #8]
 383 000a 7A60     		str	r2, [r7, #4]
 384              	.LBB7:
  26:../FreeRTOS_EC/Source/CQueue.cpp **** 	assert(!IsValid());
 385              		.loc 3 26 0
 386 000c FB68     		ldr	r3, [r7, #12]
 387 000e 1B68     		ldr	r3, [r3, #0]
 388 0010 1B68     		ldr	r3, [r3, #0]
 389 0012 F868     		ldr	r0, [r7, #12]
 390 0014 9847     		blx	r3
 391 0016 0346     		mov	r3, r0
 392 0018 002B     		cmp	r3, #0
 393 001a 0FD0     		beq	.L23
 394              		.loc 3 26 0 is_stmt 0 discriminator 1
 395 001c 40F20000 		movw	r0, #:lower16:.LC0
 396 0020 C0F20000 		movt	r0, #:upper16:.LC0
 397 0024 4FF01A01 		mov	r1, #26
 398 0028 40F20002 		movw	r2, #:lower16:_ZZN6CQueue6CreateEmmE19__PRETTY_FUNCTION__
 399 002c C0F20002 		movt	r2, #:upper16:_ZZN6CQueue6CreateEmmE19__PRETTY_FUNCTION__
 400 0030 40F20003 		movw	r3, #:lower16:.LC1
 401 0034 C0F20003 		movt	r3, #:upper16:.LC1
 402 0038 FFF7FEFF 		bl	__assert_func
 403              	.L23:
  27:../FreeRTOS_EC/Source/CQueue.cpp **** 
  28:../FreeRTOS_EC/Source/CQueue.cpp **** 	xQueueHandle handle;
  29:../FreeRTOS_EC/Source/CQueue.cpp **** 
  30:../FreeRTOS_EC/Source/CQueue.cpp **** 	handle = xQueueCreate(uxQueueLength, uxItemSize);
 404              		.loc 3 30 0 is_stmt 1
 405 003c B868     		ldr	r0, [r7, #8]
 406 003e 7968     		ldr	r1, [r7, #4]
 407 0040 FFF7FEFF 		bl	xQueueCreate
 408 0044 0346     		mov	r3, r0
 409 0046 7B61     		str	r3, [r7, #20]
  31:../FreeRTOS_EC/Source/CQueue.cpp **** 	if (handle != NULL)
 410              		.loc 3 31 0
 411 0048 7B69     		ldr	r3, [r7, #20]
 412 004a 002B     		cmp	r3, #0
 413 004c 07D0     		beq	.L24
  32:../FreeRTOS_EC/Source/CQueue.cpp **** 		Attach(handle);
 414              		.loc 3 32 0
 415 004e FB68     		ldr	r3, [r7, #12]
 416 0050 1B68     		ldr	r3, [r3, #0]
 417 0052 03F10403 		add	r3, r3, #4
 418 0056 1B68     		ldr	r3, [r3, #0]
 419 0058 F868     		ldr	r0, [r7, #12]
 420 005a 7969     		ldr	r1, [r7, #20]
 421 005c 9847     		blx	r3
 422              	.L24:
  33:../FreeRTOS_EC/Source/CQueue.cpp **** 
  34:../FreeRTOS_EC/Source/CQueue.cpp **** 	return *this;
 423              		.loc 3 34 0
 424 005e FB68     		ldr	r3, [r7, #12]
 425              	.LBE7:
  35:../FreeRTOS_EC/Source/CQueue.cpp **** }
 426              		.loc 3 35 0
 427 0060 1846     		mov	r0, r3
 428 0062 07F11807 		add	r7, r7, #24
 429 0066 BD46     		mov	sp, r7
 430 0068 80BD     		pop	{r7, pc}
 431              		.cfi_endproc
 432              	.LFE137:
 434 006a 00BF     		.section	.rodata
 435 002f 00       		.align	2
 436              	.LC2:
 437 0030 68616E64 		.ascii	"handle != NULL\000"
 437      6C652021 
 437      3D204E55 
 437      4C4C00
 438 003f 00       		.section	.text._ZN6CQueue6AttachEPv,"ax",%progbits
 439              		.align	2
 440              		.global	_ZN6CQueue6AttachEPv
 441              		.thumb
 442              		.thumb_func
 444              	_ZN6CQueue6AttachEPv:
 445              	.LFB138:
  36:../FreeRTOS_EC/Source/CQueue.cpp **** 
  37:../FreeRTOS_EC/Source/CQueue.cpp **** void CQueue::Attach(xGenericHandle handle) {
 446              		.loc 3 37 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450 0000 80B5     		push	{r7, lr}
 451              	.LCFI24:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 14, -4
 454              		.cfi_offset 7, -8
 455 0002 82B0     		sub	sp, sp, #8
 456              	.LCFI25:
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              	.LCFI26:
 460              		.cfi_def_cfa_register 7
 461 0006 7860     		str	r0, [r7, #4]
 462 0008 3960     		str	r1, [r7, #0]
 463              	.LBB8:
  38:../FreeRTOS_EC/Source/CQueue.cpp **** 	assert(handle != NULL);
 464              		.loc 3 38 0
 465 000a 3B68     		ldr	r3, [r7, #0]
 466 000c 002B     		cmp	r3, #0
 467 000e 0FD1     		bne	.L26
 468              		.loc 3 38 0 is_stmt 0 discriminator 1
 469 0010 40F20000 		movw	r0, #:lower16:.LC0
 470 0014 C0F20000 		movt	r0, #:upper16:.LC0
 471 0018 4FF02601 		mov	r1, #38
 472 001c 40F20002 		movw	r2, #:lower16:_ZZN6CQueue6AttachEPvE19__PRETTY_FUNCTION__
 473 0020 C0F20002 		movt	r2, #:upper16:_ZZN6CQueue6AttachEPvE19__PRETTY_FUNCTION__
 474 0024 40F20003 		movw	r3, #:lower16:.LC2
 475 0028 C0F20003 		movt	r3, #:upper16:.LC2
 476 002c FFF7FEFF 		bl	__assert_func
 477              	.L26:
  39:../FreeRTOS_EC/Source/CQueue.cpp **** 
  40:../FreeRTOS_EC/Source/CQueue.cpp **** 	if (IsValid())
 478              		.loc 3 40 0 is_stmt 1
 479 0030 7B68     		ldr	r3, [r7, #4]
 480 0032 1B68     		ldr	r3, [r3, #0]
 481 0034 1B68     		ldr	r3, [r3, #0]
 482 0036 7868     		ldr	r0, [r7, #4]
 483 0038 9847     		blx	r3
 484 003a 0346     		mov	r3, r0
 485 003c 002B     		cmp	r3, #0
 486 003e 02D0     		beq	.L27
  41:../FreeRTOS_EC/Source/CQueue.cpp **** 		Delete();
 487              		.loc 3 41 0
 488 0040 7868     		ldr	r0, [r7, #4]
 489 0042 FFF7FEFF 		bl	_ZN6CQueue6DeleteEv
 490              	.L27:
  42:../FreeRTOS_EC/Source/CQueue.cpp **** 
  43:../FreeRTOS_EC/Source/CQueue.cpp **** 	m_handleQueue = handle;
 491              		.loc 3 43 0
 492 0046 7B68     		ldr	r3, [r7, #4]
 493 0048 3A68     		ldr	r2, [r7, #0]
 494 004a 5A60     		str	r2, [r3, #4]
 495              	.LBE8:
  44:../FreeRTOS_EC/Source/CQueue.cpp **** }
 496              		.loc 3 44 0
 497 004c 07F10807 		add	r7, r7, #8
 498 0050 BD46     		mov	sp, r7
 499 0052 80BD     		pop	{r7, pc}
 500              		.cfi_endproc
 501              	.LFE138:
 503              		.section	.text._ZN6CQueue6DeleteEv,"ax",%progbits
 504              		.align	2
 505              		.global	_ZN6CQueue6DeleteEv
 506              		.thumb
 507              		.thumb_func
 509              	_ZN6CQueue6DeleteEv:
 510              	.LFB139:
  45:../FreeRTOS_EC/Source/CQueue.cpp **** 
  46:../FreeRTOS_EC/Source/CQueue.cpp **** void CQueue::Delete() {
 511              		.loc 3 46 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 8
 514              		@ frame_needed = 1, uses_anonymous_args = 0
 515 0000 80B5     		push	{r7, lr}
 516              	.LCFI27:
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 14, -4
 519              		.cfi_offset 7, -8
 520 0002 82B0     		sub	sp, sp, #8
 521              	.LCFI28:
 522              		.cfi_def_cfa_offset 16
 523 0004 00AF     		add	r7, sp, #0
 524              	.LCFI29:
 525              		.cfi_def_cfa_register 7
 526 0006 7860     		str	r0, [r7, #4]
  47:../FreeRTOS_EC/Source/CQueue.cpp **** 	if (m_handleQueue != NULL) {
 527              		.loc 3 47 0
 528 0008 7B68     		ldr	r3, [r7, #4]
 529 000a 5B68     		ldr	r3, [r3, #4]
 530 000c 002B     		cmp	r3, #0
 531 000e 08D0     		beq	.L28
  48:../FreeRTOS_EC/Source/CQueue.cpp **** 		vQueueDelete(m_handleQueue);
 532              		.loc 3 48 0
 533 0010 7B68     		ldr	r3, [r7, #4]
 534 0012 5B68     		ldr	r3, [r3, #4]
 535 0014 1846     		mov	r0, r3
 536 0016 FFF7FEFF 		bl	vQueueDelete
  49:../FreeRTOS_EC/Source/CQueue.cpp **** 		m_handleQueue = NULL;
 537              		.loc 3 49 0
 538 001a 7B68     		ldr	r3, [r7, #4]
 539 001c 4FF00002 		mov	r2, #0
 540 0020 5A60     		str	r2, [r3, #4]
 541              	.L28:
  50:../FreeRTOS_EC/Source/CQueue.cpp **** 	}
  51:../FreeRTOS_EC/Source/CQueue.cpp **** }
 542              		.loc 3 51 0
 543 0022 07F10807 		add	r7, r7, #8
 544 0026 BD46     		mov	sp, r7
 545 0028 80BD     		pop	{r7, pc}
 546              		.cfi_endproc
 547              	.LFE139:
 549              		.global	_ZTV6CQueue
 550 002a 00BF     		.section	.rodata._ZTV6CQueue,"a",%progbits
 551              		.align	3
 554              	_ZTV6CQueue:
 555 0000 00000000 		.word	0
 556 0004 00000000 		.word	0
 557 0008 00000000 		.word	_ZNK6CQueue7IsValidEv
 558 000c 00000000 		.word	_ZN6CQueue6AttachEPv
 559 0010 00000000 		.word	_ZN6CQueue6DetachEv
 560 0014 00000000 		.word	_ZN6CQueueD1Ev
 561 0018 00000000 		.word	_ZN6CQueueD0Ev
 562              		.weak	_ZTV12IFreeRTOSObj
 563 001c 00000000 		.section	.rodata._ZTV12IFreeRTOSObj,"aG",%progbits,_ZTV12IFreeRTOSObj,comdat
 564              		.align	3
 567              	_ZTV12IFreeRTOSObj:
 568 0000 00000000 		.word	0
 569 0004 00000000 		.word	0
 570 0008 00000000 		.word	__cxa_pure_virtual
 571 000c 00000000 		.word	__cxa_pure_virtual
 572 0010 00000000 		.word	__cxa_pure_virtual
 573 0014 00000000 		.section	.rodata._ZZN6CQueue6AttachEPvE19__PRETTY_FUNCTION__,"a",%progbits
 574              		.align	2
 577              	_ZZN6CQueue6AttachEPvE19__PRETTY_FUNCTION__:
 578 0000 76697274 		.ascii	"virtual void CQueue::Attach(xGenericHandle)\000"
 578      75616C20 
 578      766F6964 
 578      20435175 
 578      6575653A 
 579              		.section	.rodata._ZZN6CQueue6CreateEmmE19__PRETTY_FUNCTION__,"a",%progbits
 580              		.align	2
 583              	_ZZN6CQueue6CreateEmmE19__PRETTY_FUNCTION__:
 584 0000 43517565 		.ascii	"CQueue& CQueue::Create(long unsigned int, long unsi"
 584      75652620 
 584      43517565 
 584      75653A3A 
 584      43726561 
 585 0033 676E6564 		.ascii	"gned int)\000"
 585      20696E74 
 585      2900
 586              		.weak	_ZN12IFreeRTOSObjC1Ev
 587              		.thumb_set _ZN12IFreeRTOSObjC1Ev,_ZN12IFreeRTOSObjC2Ev
 588              		.global	_ZN6CQueueC1Ev
 589              		.thumb_set _ZN6CQueueC1Ev,_ZN6CQueueC2Ev
 590              		.global	_ZN6CQueueD1Ev
 591              		.thumb_set _ZN6CQueueD1Ev,_ZN6CQueueD2Ev
 592              		.global	_ZN6CQueueC1EPv
 593              		.thumb_set _ZN6CQueueC1EPv,_ZN6CQueueC2EPv
 594 003d 000000   		.text
 595              	.Letext0:
 596              		.file 4 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 597              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/../../Source/portable
 598              		.file 6 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/queue.h"
 599              		.file 7 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CQueue.cpp
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:19     .text._ZNK6CQueue7IsValidEv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:24     .text._ZNK6CQueue7IsValidEv:00000000 _ZNK6CQueue7IsValidEv
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:61     .text._ZN6CQueue6DetachEv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:66     .text._ZN6CQueue6DetachEv:00000000 _ZN6CQueue6DetachEv
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:106    .text._ZN12IFreeRTOSObjC2Ev:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:111    .text._ZN12IFreeRTOSObjC2Ev:00000000 _ZN12IFreeRTOSObjC2Ev
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:145    .text._ZN12IFreeRTOSObjC2Ev:0000001c $d
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:567    .rodata._ZTV12IFreeRTOSObj:00000000 _ZTV12IFreeRTOSObj
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:150    .text._ZN6CQueueC2Ev:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:155    .text._ZN6CQueueC2Ev:00000000 _ZN6CQueueC2Ev
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:196    .text._ZN6CQueueC2Ev:0000002c $d
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:554    .rodata._ZTV6CQueue:00000000 _ZTV6CQueue
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:201    .text._ZN6CQueueD2Ev:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:206    .text._ZN6CQueueD2Ev:00000000 _ZN6CQueueD2Ev
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:509    .text._ZN6CQueue6DeleteEv:00000000 _ZN6CQueue6DeleteEv
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:259    .text._ZN6CQueueD2Ev:00000040 $d
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:264    .text._ZN6CQueueD0Ev:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:269    .text._ZN6CQueueD0Ev:00000000 _ZN6CQueueD0Ev
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:206    .text._ZN6CQueueD2Ev:00000000 _ZN6CQueueD1Ev
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:301    .text._ZN6CQueueC2EPv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:306    .text._ZN6CQueueC2EPv:00000000 _ZN6CQueueC2EPv
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:444    .text._ZN6CQueue6AttachEPv:00000000 _ZN6CQueue6AttachEPv
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:347    .text._ZN6CQueueC2EPv:0000002c $d
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:352    .rodata:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:353    .rodata:00000000 .LC0
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:356    .rodata:00000024 .LC1
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:359    .text._ZN6CQueue6CreateEmm:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:364    .text._ZN6CQueue6CreateEmm:00000000 _ZN6CQueue6CreateEmm
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:583    .rodata._ZZN6CQueue6CreateEmmE19__PRETTY_FUNCTION__:00000000 _ZZN6CQueue6CreateEmmE19__PRETTY_FUNCTION__
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:436    .rodata:00000030 .LC2
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:439    .text._ZN6CQueue6AttachEPv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:577    .rodata._ZZN6CQueue6AttachEPvE19__PRETTY_FUNCTION__:00000000 _ZZN6CQueue6AttachEPvE19__PRETTY_FUNCTION__
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:504    .text._ZN6CQueue6DeleteEv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:551    .rodata._ZTV6CQueue:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:564    .rodata._ZTV12IFreeRTOSObj:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:574    .rodata._ZZN6CQueue6AttachEPvE19__PRETTY_FUNCTION__:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:580    .rodata._ZZN6CQueue6CreateEmmE19__PRETTY_FUNCTION__:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:111    .text._ZN12IFreeRTOSObjC2Ev:00000000 _ZN12IFreeRTOSObjC1Ev
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:155    .text._ZN6CQueueC2Ev:00000000 _ZN6CQueueC1Ev
C:\Users\Alex\AppData\Local\Temp\ccGdujNA.s:306    .text._ZN6CQueueC2EPv:00000000 _ZN6CQueueC1EPv
                     .debug_frame:00000010 $d
                           .group:00000000 _ZN12IFreeRTOSObjC5Ev

UNDEFINED SYMBOLS
_ZdlPv
__assert_func
xQueueCreate
vQueueDelete
__cxa_pure_virtual
