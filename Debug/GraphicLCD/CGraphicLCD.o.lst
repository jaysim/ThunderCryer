   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CGraphicLCD.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	_ZN11CGraphicLCDC2Ev
  20              		.thumb
  21              		.thumb_func
  23              	_ZN11CGraphicLCDC2Ev:
  24              	.LFB1:
  25              		.file 1 "../GraphicLCD/CGraphicLCD.cpp"
   1:../GraphicLCD/CGraphicLCD.cpp **** /**
   2:../GraphicLCD/CGraphicLCD.cpp ****   ******************************************************************************
   3:../GraphicLCD/CGraphicLCD.cpp ****   * @file      	CGraphicLCD.cpp
   4:../GraphicLCD/CGraphicLCD.cpp ****   * @author    	Tecnologic86
   5:../GraphicLCD/CGraphicLCD.cpp ****   * @version   	V0.0.0
   6:../GraphicLCD/CGraphicLCD.cpp ****   * @date      	17.02.12
   7:../GraphicLCD/CGraphicLCD.cpp ****   * @brief		T6963C Graphics LCD driver Class
   8:../GraphicLCD/CGraphicLCD.cpp ****   ******************************************************************************
   9:../GraphicLCD/CGraphicLCD.cpp ****   */
  10:../GraphicLCD/CGraphicLCD.cpp **** 
  11:../GraphicLCD/CGraphicLCD.cpp **** /* Includes ------------------------------------------------------------------*/
  12:../GraphicLCD/CGraphicLCD.cpp **** #include "CGraphicLCD.h"
  13:../GraphicLCD/CGraphicLCD.cpp **** /* Private typedef -----------------------------------------------------------*/
  14:../GraphicLCD/CGraphicLCD.cpp **** /* Private define ------------------------------------------------------------*/
  15:../GraphicLCD/CGraphicLCD.cpp **** /* Private macro -------------------------------------------------------------*/
  16:../GraphicLCD/CGraphicLCD.cpp **** /* Private variables ---------------------------------------------------------*/
  17:../GraphicLCD/CGraphicLCD.cpp **** /* Private function prototypes -----------------------------------------------*/
  18:../GraphicLCD/CGraphicLCD.cpp **** /* Private functions ---------------------------------------------------------*/
  19:../GraphicLCD/CGraphicLCD.cpp **** 
  20:../GraphicLCD/CGraphicLCD.cpp **** CGraphicLCD::CGraphicLCD() {
  26              		.loc 1 20 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  42              	.LBB2:
  43              		.loc 1 20 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 064A     		ldr	r2, .L3
  46 000c 1A60     		str	r2, [r3, #0]
  21:../GraphicLCD/CGraphicLCD.cpp **** 	bInverse=false;
  47              		.loc 1 21 0
  48 000e 7B68     		ldr	r3, [r7, #4]
  49 0010 4FF00002 		mov	r2, #0
  50 0014 1A71     		strb	r2, [r3, #4]
  51              	.LBE2:
  22:../GraphicLCD/CGraphicLCD.cpp **** }
  52              		.loc 1 22 0
  53 0016 7B68     		ldr	r3, [r7, #4]
  54 0018 1846     		mov	r0, r3
  55 001a 07F10C07 		add	r7, r7, #12
  56 001e BD46     		mov	sp, r7
  57 0020 80BC     		pop	{r7}
  58 0022 7047     		bx	lr
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 0024 08000000 		.word	_ZTV11CGraphicLCD+8
  63              		.cfi_endproc
  64              	.LFE1:
  66              		.align	2
  67              		.global	_ZN11CGraphicLCDC2Eb
  68              		.thumb
  69              		.thumb_func
  71              	_ZN11CGraphicLCDC2Eb:
  72              	.LFB4:
  23:../GraphicLCD/CGraphicLCD.cpp **** 
  24:../GraphicLCD/CGraphicLCD.cpp **** CGraphicLCD::CGraphicLCD(bool inverse) {
  73              		.loc 1 24 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 8
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78 0028 80B4     		push	{r7}
  79              	.LCFI3:
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 7, -4
  82 002a 83B0     		sub	sp, sp, #12
  83              	.LCFI4:
  84              		.cfi_def_cfa_offset 16
  85 002c 00AF     		add	r7, sp, #0
  86              	.LCFI5:
  87              		.cfi_def_cfa_register 7
  88 002e 7860     		str	r0, [r7, #4]
  89 0030 0B46     		mov	r3, r1
  90 0032 FB70     		strb	r3, [r7, #3]
  91              	.LBB3:
  92              		.loc 1 24 0
  93 0034 7B68     		ldr	r3, [r7, #4]
  94 0036 064A     		ldr	r2, .L7
  95 0038 1A60     		str	r2, [r3, #0]
  25:../GraphicLCD/CGraphicLCD.cpp **** 	bInverse=inverse;
  96              		.loc 1 25 0
  97 003a 7B68     		ldr	r3, [r7, #4]
  98 003c FA78     		ldrb	r2, [r7, #3]
  99 003e 1A71     		strb	r2, [r3, #4]
 100              	.LBE3:
  26:../GraphicLCD/CGraphicLCD.cpp **** }
 101              		.loc 1 26 0
 102 0040 7B68     		ldr	r3, [r7, #4]
 103 0042 1846     		mov	r0, r3
 104 0044 07F10C07 		add	r7, r7, #12
 105 0048 BD46     		mov	sp, r7
 106 004a 80BC     		pop	{r7}
 107 004c 7047     		bx	lr
 108              	.L8:
 109 004e 00BF     		.align	2
 110              	.L7:
 111 0050 08000000 		.word	_ZTV11CGraphicLCD+8
 112              		.cfi_endproc
 113              	.LFE4:
 115              		.align	2
 116              		.global	_ZN11CGraphicLCDD2Ev
 117              		.thumb
 118              		.thumb_func
 120              	_ZN11CGraphicLCDD2Ev:
 121              	.LFB7:
  27:../GraphicLCD/CGraphicLCD.cpp **** 
  28:../GraphicLCD/CGraphicLCD.cpp **** CGraphicLCD::~CGraphicLCD() {
 122              		.loc 1 28 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 8
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0054 80B5     		push	{r7, lr}
 127              	.LCFI6:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 14, -4
 130              		.cfi_offset 7, -8
 131 0056 82B0     		sub	sp, sp, #8
 132              	.LCFI7:
 133              		.cfi_def_cfa_offset 16
 134 0058 00AF     		add	r7, sp, #0
 135              	.LCFI8:
 136              		.cfi_def_cfa_register 7
 137 005a 7860     		str	r0, [r7, #4]
 138              	.LBB4:
 139              		.loc 1 28 0
 140 005c 7B68     		ldr	r3, [r7, #4]
 141 005e 094A     		ldr	r2, .L12
 142 0060 1A60     		str	r2, [r3, #0]
 143              	.LBE4:
  29:../GraphicLCD/CGraphicLCD.cpp **** 	// TODO Auto-generated destructor stub
  30:../GraphicLCD/CGraphicLCD.cpp **** }
 144              		.loc 1 30 0
 145 0062 4FF00003 		mov	r3, #0
 146 0066 03F00103 		and	r3, r3, #1
 147 006a DBB2     		uxtb	r3, r3
 148 006c 002B     		cmp	r3, #0
 149 006e 02D0     		beq	.L11
 150              		.loc 1 30 0 is_stmt 0 discriminator 1
 151 0070 7868     		ldr	r0, [r7, #4]
 152 0072 FFF7FEFF 		bl	_ZdlPv
 153              	.L11:
 154              		.loc 1 30 0 discriminator 2
 155 0076 7B68     		ldr	r3, [r7, #4]
 156 0078 1846     		mov	r0, r3
 157 007a 07F10807 		add	r7, r7, #8
 158 007e BD46     		mov	sp, r7
 159 0080 80BD     		pop	{r7, pc}
 160              	.L13:
 161 0082 00BF     		.align	2
 162              	.L12:
 163 0084 08000000 		.word	_ZTV11CGraphicLCD+8
 164              		.cfi_endproc
 165              	.LFE7:
 167              		.align	2
 168              		.global	_ZN11CGraphicLCDD0Ev
 169              		.thumb
 170              		.thumb_func
 172              	_ZN11CGraphicLCDD0Ev:
 173              	.LFB9:
  28:../GraphicLCD/CGraphicLCD.cpp **** CGraphicLCD::~CGraphicLCD() {
 174              		.loc 1 28 0 is_stmt 1
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 8
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0088 80B5     		push	{r7, lr}
 179              	.LCFI9:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 14, -4
 182              		.cfi_offset 7, -8
 183 008a 82B0     		sub	sp, sp, #8
 184              	.LCFI10:
 185              		.cfi_def_cfa_offset 16
 186 008c 00AF     		add	r7, sp, #0
 187              	.LCFI11:
 188              		.cfi_def_cfa_register 7
 189 008e 7860     		str	r0, [r7, #4]
 190              		.loc 1 30 0
 191 0090 7868     		ldr	r0, [r7, #4]
 192 0092 FFF7FEFF 		bl	_ZN11CGraphicLCDD1Ev
 193 0096 7868     		ldr	r0, [r7, #4]
 194 0098 FFF7FEFF 		bl	_ZdlPv
 195 009c 7B68     		ldr	r3, [r7, #4]
 196 009e 1846     		mov	r0, r3
 197 00a0 07F10807 		add	r7, r7, #8
 198 00a4 BD46     		mov	sp, r7
 199 00a6 80BD     		pop	{r7, pc}
 200              		.cfi_endproc
 201              	.LFE9:
 203              		.align	2
 204              		.global	_ZN11CGraphicLCD7InverseEv
 205              		.thumb
 206              		.thumb_func
 208              	_ZN11CGraphicLCD7InverseEv:
 209              	.LFB10:
  31:../GraphicLCD/CGraphicLCD.cpp **** 
  32:../GraphicLCD/CGraphicLCD.cpp **** /**
  33:../GraphicLCD/CGraphicLCD.cpp ****   * @brief gives inverted draw status
  34:../GraphicLCD/CGraphicLCD.cpp ****   * @param  None
  35:../GraphicLCD/CGraphicLCD.cpp ****   * @retval true on inverse mode
  36:../GraphicLCD/CGraphicLCD.cpp ****   */
  37:../GraphicLCD/CGraphicLCD.cpp **** bool CGraphicLCD::Inverse(){
 210              		.loc 1 37 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215 00a8 80B4     		push	{r7}
 216              	.LCFI12:
 217              		.cfi_def_cfa_offset 4
 218              		.cfi_offset 7, -4
 219 00aa 83B0     		sub	sp, sp, #12
 220              	.LCFI13:
 221              		.cfi_def_cfa_offset 16
 222 00ac 00AF     		add	r7, sp, #0
 223              	.LCFI14:
 224              		.cfi_def_cfa_register 7
 225 00ae 7860     		str	r0, [r7, #4]
  38:../GraphicLCD/CGraphicLCD.cpp **** 	return bInverse;
 226              		.loc 1 38 0
 227 00b0 7B68     		ldr	r3, [r7, #4]
 228 00b2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  39:../GraphicLCD/CGraphicLCD.cpp **** }
 229              		.loc 1 39 0
 230 00b4 1846     		mov	r0, r3
 231 00b6 07F10C07 		add	r7, r7, #12
 232 00ba BD46     		mov	sp, r7
 233 00bc 80BC     		pop	{r7}
 234 00be 7047     		bx	lr
 235              		.cfi_endproc
 236              	.LFE10:
 238              		.align	2
 239              		.global	_ZN11CGraphicLCD7InverseEb
 240              		.thumb
 241              		.thumb_func
 243              	_ZN11CGraphicLCD7InverseEb:
 244              	.LFB11:
  40:../GraphicLCD/CGraphicLCD.cpp **** 
  41:../GraphicLCD/CGraphicLCD.cpp **** /**
  42:../GraphicLCD/CGraphicLCD.cpp ****   * @brief  sets inverted draw mode
  43:../GraphicLCD/CGraphicLCD.cpp ****   * @param  ture for inverted draw mode
  44:../GraphicLCD/CGraphicLCD.cpp ****   * @retval None
  45:../GraphicLCD/CGraphicLCD.cpp ****   */
  46:../GraphicLCD/CGraphicLCD.cpp **** void CGraphicLCD::Inverse(bool inverse){
 245              		.loc 1 46 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 00c0 80B4     		push	{r7}
 251              	.LCFI15:
 252              		.cfi_def_cfa_offset 4
 253              		.cfi_offset 7, -4
 254 00c2 83B0     		sub	sp, sp, #12
 255              	.LCFI16:
 256              		.cfi_def_cfa_offset 16
 257 00c4 00AF     		add	r7, sp, #0
 258              	.LCFI17:
 259              		.cfi_def_cfa_register 7
 260 00c6 7860     		str	r0, [r7, #4]
 261 00c8 0B46     		mov	r3, r1
 262 00ca FB70     		strb	r3, [r7, #3]
  47:../GraphicLCD/CGraphicLCD.cpp **** 	bInverse = inverse;
 263              		.loc 1 47 0
 264 00cc 7B68     		ldr	r3, [r7, #4]
 265 00ce FA78     		ldrb	r2, [r7, #3]
 266 00d0 1A71     		strb	r2, [r3, #4]
  48:../GraphicLCD/CGraphicLCD.cpp **** }
 267              		.loc 1 48 0
 268 00d2 07F10C07 		add	r7, r7, #12
 269 00d6 BD46     		mov	sp, r7
 270 00d8 80BC     		pop	{r7}
 271 00da 7047     		bx	lr
 272              		.cfi_endproc
 273              	.LFE11:
 275              		.global	_ZTV11CGraphicLCD
 276              		.section	.rodata._ZTV11CGraphicLCD,"a",%progbits
 277              		.align	3
 280              	_ZTV11CGraphicLCD:
 281 0000 00000000 		.word	0
 282 0004 00000000 		.word	0
 283 0008 00000000 		.word	__cxa_pure_virtual
 284 000c 00000000 		.word	__cxa_pure_virtual
 285 0010 00000000 		.word	__cxa_pure_virtual
 286 0014 00000000 		.word	__cxa_pure_virtual
 287 0018 00000000 		.word	__cxa_pure_virtual
 288 001c 00000000 		.word	__cxa_pure_virtual
 289 0020 00000000 		.word	__cxa_pure_virtual
 290 0024 00000000 		.word	__cxa_pure_virtual
 291 0028 00000000 		.word	__cxa_pure_virtual
 292 002c 00000000 		.word	_ZN11CGraphicLCDD1Ev
 293 0030 00000000 		.word	_ZN11CGraphicLCDD0Ev
 294              		.global	_ZN11CGraphicLCDC1Ev
 295              		.thumb_set _ZN11CGraphicLCDC1Ev,_ZN11CGraphicLCDC2Ev
 296              		.global	_ZN11CGraphicLCDC1Eb
 297              		.thumb_set _ZN11CGraphicLCDC1Eb,_ZN11CGraphicLCDC2Eb
 298              		.global	_ZN11CGraphicLCDD1Ev
 299              		.thumb_set _ZN11CGraphicLCDD1Ev,_ZN11CGraphicLCDD2Ev
 300 0034 00000000 		.text
 301              	.Letext0:
 302              		.file 2 "../GraphicLCD/CGraphicLCD.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CGraphicLCD.cpp
  C:\Temp\ccnFPc1L.s:18     .text:00000000 $t
  C:\Temp\ccnFPc1L.s:23     .text:00000000 _ZN11CGraphicLCDC2Ev
  C:\Temp\ccnFPc1L.s:62     .text:00000024 $d
  C:\Temp\ccnFPc1L.s:280    .rodata._ZTV11CGraphicLCD:00000000 _ZTV11CGraphicLCD
  C:\Temp\ccnFPc1L.s:66     .text:00000028 $t
  C:\Temp\ccnFPc1L.s:71     .text:00000028 _ZN11CGraphicLCDC2Eb
  C:\Temp\ccnFPc1L.s:111    .text:00000050 $d
  C:\Temp\ccnFPc1L.s:115    .text:00000054 $t
  C:\Temp\ccnFPc1L.s:120    .text:00000054 _ZN11CGraphicLCDD2Ev
  C:\Temp\ccnFPc1L.s:163    .text:00000084 $d
  C:\Temp\ccnFPc1L.s:167    .text:00000088 $t
  C:\Temp\ccnFPc1L.s:172    .text:00000088 _ZN11CGraphicLCDD0Ev
  C:\Temp\ccnFPc1L.s:120    .text:00000054 _ZN11CGraphicLCDD1Ev
  C:\Temp\ccnFPc1L.s:208    .text:000000a8 _ZN11CGraphicLCD7InverseEv
  C:\Temp\ccnFPc1L.s:243    .text:000000c0 _ZN11CGraphicLCD7InverseEb
  C:\Temp\ccnFPc1L.s:277    .rodata._ZTV11CGraphicLCD:00000000 $d
  C:\Temp\ccnFPc1L.s:23     .text:00000000 _ZN11CGraphicLCDC1Ev
  C:\Temp\ccnFPc1L.s:71     .text:00000028 _ZN11CGraphicLCDC1Eb
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZdlPv
__cxa_pure_virtual
