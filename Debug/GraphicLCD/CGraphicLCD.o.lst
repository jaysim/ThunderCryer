   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"CGraphicLCD.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	_ZN11CGraphicLCDC2Ev
  21              		.thumb
  22              		.thumb_func
  24              	_ZN11CGraphicLCDC2Ev:
  25              	.LFB1:
  26              		.file 1 "../GraphicLCD/CGraphicLCD.cpp"
   1:../GraphicLCD/CGraphicLCD.cpp **** /**
   2:../GraphicLCD/CGraphicLCD.cpp ****   ******************************************************************************
   3:../GraphicLCD/CGraphicLCD.cpp ****   * @file      	CGraphicLCD.cpp
   4:../GraphicLCD/CGraphicLCD.cpp ****   * @author    	Tecnologic86
   5:../GraphicLCD/CGraphicLCD.cpp ****   * @version   	V0.0.0
   6:../GraphicLCD/CGraphicLCD.cpp ****   * @date      	17.02.12
   7:../GraphicLCD/CGraphicLCD.cpp ****   * @brief		T6963C Graphics LCD driver Class
   8:../GraphicLCD/CGraphicLCD.cpp ****   ******************************************************************************
   9:../GraphicLCD/CGraphicLCD.cpp ****   */
  10:../GraphicLCD/CGraphicLCD.cpp **** 
  11:../GraphicLCD/CGraphicLCD.cpp **** /* Includes ------------------------------------------------------------------*/
  12:../GraphicLCD/CGraphicLCD.cpp **** #include "CGraphicLCD.h"
  13:../GraphicLCD/CGraphicLCD.cpp **** /* Private typedef -----------------------------------------------------------*/
  14:../GraphicLCD/CGraphicLCD.cpp **** /* Private define ------------------------------------------------------------*/
  15:../GraphicLCD/CGraphicLCD.cpp **** /* Private macro -------------------------------------------------------------*/
  16:../GraphicLCD/CGraphicLCD.cpp **** /* Private variables ---------------------------------------------------------*/
  17:../GraphicLCD/CGraphicLCD.cpp **** /* Private function prototypes -----------------------------------------------*/
  18:../GraphicLCD/CGraphicLCD.cpp **** /* Private functions ---------------------------------------------------------*/
  19:../GraphicLCD/CGraphicLCD.cpp **** 
  20:../GraphicLCD/CGraphicLCD.cpp **** CGraphicLCD::CGraphicLCD() {
  27              		.loc 1 20 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43              	.LBB2:
  44              		.loc 1 20 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 064A     		ldr	r2, .L3
  47 000c 1A60     		str	r2, [r3, #0]
  21:../GraphicLCD/CGraphicLCD.cpp **** 	bInverse=false;
  48              		.loc 1 21 0
  49 000e 7B68     		ldr	r3, [r7, #4]
  50 0010 4FF00002 		mov	r2, #0
  51 0014 1A71     		strb	r2, [r3, #4]
  52              	.LBE2:
  22:../GraphicLCD/CGraphicLCD.cpp **** }
  53              		.loc 1 22 0
  54 0016 7B68     		ldr	r3, [r7, #4]
  55 0018 1846     		mov	r0, r3
  56 001a 07F10C07 		add	r7, r7, #12
  57 001e BD46     		mov	sp, r7
  58 0020 80BC     		pop	{r7}
  59 0022 7047     		bx	lr
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 0024 08000000 		.word	_ZTV11CGraphicLCD+8
  64              		.cfi_endproc
  65              	.LFE1:
  67              		.align	2
  68              		.global	_ZN11CGraphicLCDC2Eb
  69              		.thumb
  70              		.thumb_func
  72              	_ZN11CGraphicLCDC2Eb:
  73              	.LFB4:
  23:../GraphicLCD/CGraphicLCD.cpp **** 
  24:../GraphicLCD/CGraphicLCD.cpp **** CGraphicLCD::CGraphicLCD(bool inverse) {
  74              		.loc 1 24 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0028 80B4     		push	{r7}
  80              	.LCFI3:
  81              		.cfi_def_cfa_offset 4
  82              		.cfi_offset 7, -4
  83 002a 83B0     		sub	sp, sp, #12
  84              	.LCFI4:
  85              		.cfi_def_cfa_offset 16
  86 002c 00AF     		add	r7, sp, #0
  87              	.LCFI5:
  88              		.cfi_def_cfa_register 7
  89 002e 7860     		str	r0, [r7, #4]
  90 0030 0B46     		mov	r3, r1
  91 0032 FB70     		strb	r3, [r7, #3]
  92              	.LBB3:
  93              		.loc 1 24 0
  94 0034 7B68     		ldr	r3, [r7, #4]
  95 0036 064A     		ldr	r2, .L7
  96 0038 1A60     		str	r2, [r3, #0]
  25:../GraphicLCD/CGraphicLCD.cpp **** 	bInverse=inverse;
  97              		.loc 1 25 0
  98 003a 7B68     		ldr	r3, [r7, #4]
  99 003c FA78     		ldrb	r2, [r7, #3]
 100 003e 1A71     		strb	r2, [r3, #4]
 101              	.LBE3:
  26:../GraphicLCD/CGraphicLCD.cpp **** }
 102              		.loc 1 26 0
 103 0040 7B68     		ldr	r3, [r7, #4]
 104 0042 1846     		mov	r0, r3
 105 0044 07F10C07 		add	r7, r7, #12
 106 0048 BD46     		mov	sp, r7
 107 004a 80BC     		pop	{r7}
 108 004c 7047     		bx	lr
 109              	.L8:
 110 004e 00BF     		.align	2
 111              	.L7:
 112 0050 08000000 		.word	_ZTV11CGraphicLCD+8
 113              		.cfi_endproc
 114              	.LFE4:
 116              		.align	2
 117              		.global	_ZN11CGraphicLCDD2Ev
 118              		.thumb
 119              		.thumb_func
 121              	_ZN11CGraphicLCDD2Ev:
 122              	.LFB7:
  27:../GraphicLCD/CGraphicLCD.cpp **** 
  28:../GraphicLCD/CGraphicLCD.cpp **** CGraphicLCD::~CGraphicLCD() {
 123              		.loc 1 28 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 8
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0054 80B5     		push	{r7, lr}
 128              	.LCFI6:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 14, -4
 131              		.cfi_offset 7, -8
 132 0056 82B0     		sub	sp, sp, #8
 133              	.LCFI7:
 134              		.cfi_def_cfa_offset 16
 135 0058 00AF     		add	r7, sp, #0
 136              	.LCFI8:
 137              		.cfi_def_cfa_register 7
 138 005a 7860     		str	r0, [r7, #4]
 139              	.LBB4:
 140              		.loc 1 28 0
 141 005c 7B68     		ldr	r3, [r7, #4]
 142 005e 094A     		ldr	r2, .L12
 143 0060 1A60     		str	r2, [r3, #0]
 144              	.LBE4:
  29:../GraphicLCD/CGraphicLCD.cpp **** 	// TODO Auto-generated destructor stub
  30:../GraphicLCD/CGraphicLCD.cpp **** }
 145              		.loc 1 30 0
 146 0062 4FF00003 		mov	r3, #0
 147 0066 03F00103 		and	r3, r3, #1
 148 006a DBB2     		uxtb	r3, r3
 149 006c 002B     		cmp	r3, #0
 150 006e 02D0     		beq	.L11
 151              		.loc 1 30 0 is_stmt 0 discriminator 1
 152 0070 7868     		ldr	r0, [r7, #4]
 153 0072 FFF7FEFF 		bl	_ZdlPv
 154              	.L11:
 155              		.loc 1 30 0 discriminator 2
 156 0076 7B68     		ldr	r3, [r7, #4]
 157 0078 1846     		mov	r0, r3
 158 007a 07F10807 		add	r7, r7, #8
 159 007e BD46     		mov	sp, r7
 160 0080 80BD     		pop	{r7, pc}
 161              	.L13:
 162 0082 00BF     		.align	2
 163              	.L12:
 164 0084 08000000 		.word	_ZTV11CGraphicLCD+8
 165              		.cfi_endproc
 166              	.LFE7:
 168              		.align	2
 169              		.global	_ZN11CGraphicLCDD0Ev
 170              		.thumb
 171              		.thumb_func
 173              	_ZN11CGraphicLCDD0Ev:
 174              	.LFB9:
  28:../GraphicLCD/CGraphicLCD.cpp **** CGraphicLCD::~CGraphicLCD() {
 175              		.loc 1 28 0 is_stmt 1
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0088 80B5     		push	{r7, lr}
 180              	.LCFI9:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 14, -4
 183              		.cfi_offset 7, -8
 184 008a 82B0     		sub	sp, sp, #8
 185              	.LCFI10:
 186              		.cfi_def_cfa_offset 16
 187 008c 00AF     		add	r7, sp, #0
 188              	.LCFI11:
 189              		.cfi_def_cfa_register 7
 190 008e 7860     		str	r0, [r7, #4]
 191              		.loc 1 30 0
 192 0090 7868     		ldr	r0, [r7, #4]
 193 0092 FFF7FEFF 		bl	_ZN11CGraphicLCDD1Ev
 194 0096 7868     		ldr	r0, [r7, #4]
 195 0098 FFF7FEFF 		bl	_ZdlPv
 196 009c 7B68     		ldr	r3, [r7, #4]
 197 009e 1846     		mov	r0, r3
 198 00a0 07F10807 		add	r7, r7, #8
 199 00a4 BD46     		mov	sp, r7
 200 00a6 80BD     		pop	{r7, pc}
 201              		.cfi_endproc
 202              	.LFE9:
 204              		.align	2
 205              		.global	_ZN11CGraphicLCD7InverseEv
 206              		.thumb
 207              		.thumb_func
 209              	_ZN11CGraphicLCD7InverseEv:
 210              	.LFB10:
  31:../GraphicLCD/CGraphicLCD.cpp **** 
  32:../GraphicLCD/CGraphicLCD.cpp **** /**
  33:../GraphicLCD/CGraphicLCD.cpp ****   * @brief gives inverted draw status
  34:../GraphicLCD/CGraphicLCD.cpp ****   * @param  None
  35:../GraphicLCD/CGraphicLCD.cpp ****   * @retval true on inverse mode
  36:../GraphicLCD/CGraphicLCD.cpp ****   */
  37:../GraphicLCD/CGraphicLCD.cpp **** bool CGraphicLCD::Inverse(){
 211              		.loc 1 37 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 8
 214              		@ frame_needed = 1, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216 00a8 80B4     		push	{r7}
 217              	.LCFI12:
 218              		.cfi_def_cfa_offset 4
 219              		.cfi_offset 7, -4
 220 00aa 83B0     		sub	sp, sp, #12
 221              	.LCFI13:
 222              		.cfi_def_cfa_offset 16
 223 00ac 00AF     		add	r7, sp, #0
 224              	.LCFI14:
 225              		.cfi_def_cfa_register 7
 226 00ae 7860     		str	r0, [r7, #4]
  38:../GraphicLCD/CGraphicLCD.cpp **** 	return bInverse;
 227              		.loc 1 38 0
 228 00b0 7B68     		ldr	r3, [r7, #4]
 229 00b2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  39:../GraphicLCD/CGraphicLCD.cpp **** }
 230              		.loc 1 39 0
 231 00b4 1846     		mov	r0, r3
 232 00b6 07F10C07 		add	r7, r7, #12
 233 00ba BD46     		mov	sp, r7
 234 00bc 80BC     		pop	{r7}
 235 00be 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE10:
 239              		.align	2
 240              		.global	_ZN11CGraphicLCD7InverseEb
 241              		.thumb
 242              		.thumb_func
 244              	_ZN11CGraphicLCD7InverseEb:
 245              	.LFB11:
  40:../GraphicLCD/CGraphicLCD.cpp **** 
  41:../GraphicLCD/CGraphicLCD.cpp **** /**
  42:../GraphicLCD/CGraphicLCD.cpp ****   * @brief  sets inverted draw mode
  43:../GraphicLCD/CGraphicLCD.cpp ****   * @param  ture for inverted draw mode
  44:../GraphicLCD/CGraphicLCD.cpp ****   * @retval None
  45:../GraphicLCD/CGraphicLCD.cpp ****   */
  46:../GraphicLCD/CGraphicLCD.cpp **** void CGraphicLCD::Inverse(bool inverse){
 246              		.loc 1 46 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 8
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251 00c0 80B4     		push	{r7}
 252              	.LCFI15:
 253              		.cfi_def_cfa_offset 4
 254              		.cfi_offset 7, -4
 255 00c2 83B0     		sub	sp, sp, #12
 256              	.LCFI16:
 257              		.cfi_def_cfa_offset 16
 258 00c4 00AF     		add	r7, sp, #0
 259              	.LCFI17:
 260              		.cfi_def_cfa_register 7
 261 00c6 7860     		str	r0, [r7, #4]
 262 00c8 0B46     		mov	r3, r1
 263 00ca FB70     		strb	r3, [r7, #3]
  47:../GraphicLCD/CGraphicLCD.cpp **** 	bInverse = inverse;
 264              		.loc 1 47 0
 265 00cc 7B68     		ldr	r3, [r7, #4]
 266 00ce FA78     		ldrb	r2, [r7, #3]
 267 00d0 1A71     		strb	r2, [r3, #4]
  48:../GraphicLCD/CGraphicLCD.cpp **** }
 268              		.loc 1 48 0
 269 00d2 07F10C07 		add	r7, r7, #12
 270 00d6 BD46     		mov	sp, r7
 271 00d8 80BC     		pop	{r7}
 272 00da 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE11:
 276              		.global	_ZTV11CGraphicLCD
 277              		.section	.rodata._ZTV11CGraphicLCD,"a",%progbits
 278              		.align	3
 281              	_ZTV11CGraphicLCD:
 282 0000 00000000 		.word	0
 283 0004 00000000 		.word	0
 284 0008 00000000 		.word	__cxa_pure_virtual
 285 000c 00000000 		.word	__cxa_pure_virtual
 286 0010 00000000 		.word	__cxa_pure_virtual
 287 0014 00000000 		.word	__cxa_pure_virtual
 288 0018 00000000 		.word	__cxa_pure_virtual
 289 001c 00000000 		.word	__cxa_pure_virtual
 290 0020 00000000 		.word	__cxa_pure_virtual
 291 0024 00000000 		.word	__cxa_pure_virtual
 292 0028 00000000 		.word	__cxa_pure_virtual
 293 002c 00000000 		.word	_ZN11CGraphicLCDD1Ev
 294 0030 00000000 		.word	_ZN11CGraphicLCDD0Ev
 295              		.global	_ZN11CGraphicLCDC1Ev
 296              		.thumb_set _ZN11CGraphicLCDC1Ev,_ZN11CGraphicLCDC2Ev
 297              		.global	_ZN11CGraphicLCDC1Eb
 298              		.thumb_set _ZN11CGraphicLCDC1Eb,_ZN11CGraphicLCDC2Eb
 299              		.global	_ZN11CGraphicLCDD1Ev
 300              		.thumb_set _ZN11CGraphicLCDD1Ev,_ZN11CGraphicLCDD2Ev
 301 0034 00000000 		.text
 302              	.Letext0:
 303              		.file 2 "../GraphicLCD/CGraphicLCD.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CGraphicLCD.cpp
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:19     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:24     .text:00000000 _ZN11CGraphicLCDC2Ev
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:63     .text:00000024 $d
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:281    .rodata._ZTV11CGraphicLCD:00000000 _ZTV11CGraphicLCD
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:67     .text:00000028 $t
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:72     .text:00000028 _ZN11CGraphicLCDC2Eb
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:112    .text:00000050 $d
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:116    .text:00000054 $t
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:121    .text:00000054 _ZN11CGraphicLCDD2Ev
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:164    .text:00000084 $d
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:168    .text:00000088 $t
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:173    .text:00000088 _ZN11CGraphicLCDD0Ev
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:121    .text:00000054 _ZN11CGraphicLCDD1Ev
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:209    .text:000000a8 _ZN11CGraphicLCD7InverseEv
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:244    .text:000000c0 _ZN11CGraphicLCD7InverseEb
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:278    .rodata._ZTV11CGraphicLCD:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:24     .text:00000000 _ZN11CGraphicLCDC1Ev
C:\Users\Alex\AppData\Local\Temp\ccVXaUyf.s:72     .text:00000028 _ZN11CGraphicLCDC1Eb
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZdlPv
__cxa_pure_virtual
