   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._ZN9CFreeRTOS14StartSchedulerEv,"axG",%progbits,_ZN9CFreeRTOS14StartSchedulerEv,com
  20              		.align	2
  21              		.weak	_ZN9CFreeRTOS14StartSchedulerEv
  22              		.thumb
  23              		.thumb_func
  25              	_ZN9CFreeRTOS14StartSchedulerEv:
  26              	.LFB110:
  27              		.file 1 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS_EC\\Source/CFreeRTOS.h"
   1:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** /**
   2:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @file CFreeRTOS.h
   3:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @class CFreeRTOS
   4:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  *
   5:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * This class provide an interface for the <a href="http://www.freertos.org/a00020.html">Kernek Con
   6:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * Moreover provide a method used by the FreeRTOS Extension Layer to initialize the hardware resour
   7:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * All methods are static and inline.
   8:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  *
   9:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @date Jul 14, 2010
  10:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @author Stefano Oliveri (STF12.net)
  11:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  *         E-Mail: software@stf12.net
  12:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  */
  13:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  14:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** /**
  15:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @defgroup FreeRTOS_CPP_EXT FreeRTOS Class Extension
  16:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * This set of C++ class aim to provide an Object Oriented framework to program a FreeRTOS applicat
  17:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @{
  18:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  */
  19:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  20:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** /**
  21:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @defgroup FreeRTOS_Wrapper FreeRTOS Wrapper Class
  22:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @ingroup FreeRTOS_CPP_EXT
  23:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * The FreeRTOS Wrapper Layer provides a set of class that are able to attach to and manage a FreeR
  24:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * native handle.
  25:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @{
  26:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  */
  27:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  28:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** #ifndef CFREERTOS_H_
  29:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** #define CFREERTOS_H_
  30:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  31:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** #include "FreeRTOS.h"
  32:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** #include "task.h"
  33:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  34:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** class CFreeRTOS {
  35:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** public:
  36:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	/**
  37:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 * Default constructor. Not used.
  38:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 */
  39:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	CFreeRTOS();
  40:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  41:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	/**
  42:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 * Destructor. Not used.
  43:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 */
  44:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	~CFreeRTOS();
  45:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  46:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	/**
  47:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 * \sa <a href="http://www.freertos.org/a00132.html">vTaskStartScheduler</a> FreeRTOS API function
  48:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 */
  49:E:\Desktop\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	static void StartScheduler() { vTaskStartScheduler(); }
  28              		.loc 1 49 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 7, -8
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  40              		.loc 1 49 0
  41 0004 FFF7FEFF 		bl	vTaskStartScheduler
  42 0008 80BD     		pop	{r7, pc}
  43              		.cfi_endproc
  44              	.LFE110:
  46              		.global	g_LedTast
  47 000a 00BF     		.section	.bss.g_LedTast,"aw",%nobits
  48              		.align	2
  51              	g_LedTast:
  52 0000 00000000 		.space	20
  52      00000000 
  52      00000000 
  52      00000000 
  52      00000000 
  53              		.global	g_Display
  54              		.section	.bss.g_Display,"aw",%nobits
  55              		.align	2
  58              	g_Display:
  59 0000 00000000 		.space	8
  59      00000000 
  60              		.global	g_Menue
  61              		.section	.bss.g_Menue,"aw",%nobits
  62              		.align	2
  65              	g_Menue:
  66 0000 00000000 		.space	16
  66      00000000 
  66      00000000 
  66      00000000 
  67              		.global	g_FileHandler
  68              		.section	.bss.g_FileHandler,"aw",%nobits
  69              		.align	2
  72              	g_FileHandler:
  73 0000 00000000 		.space	708
  73      00000000 
  73      00000000 
  73      00000000 
  73      00000000 
  74              		.global	g_MSC
  75              		.section	.bss.g_MSC,"aw",%nobits
  76              		.align	2
  79              	g_MSC:
  80 0000 00000000 		.space	12
  80      00000000 
  80      00000000 
  81              		.section	.rodata
  82              		.align	2
  83              	.LC0:
  84 0000 4C656420 		.ascii	"Led Heartbeat\000"
  84      48656172 
  84      74626561 
  84      7400
  85 000e 0000     		.align	2
  86              	.LC1:
  87 0010 55534220 		.ascii	"USB Massstorage\000"
  87      4D617373 
  87      73746F72 
  87      61676500 
  88              		.align	2
  89              	.LC2:
  90 0020 46696C65 		.ascii	"FileHandler\000"
  90      48616E64 
  90      6C657200 
  91              		.text
  92              		.align	2
  93              		.global	main
  94              		.thumb
  95              		.thumb_func
  97              	main:
  98              	.LFB141:
  99              		.file 2 "../main.cpp"
   1:../main.cpp   **** /**
   2:../main.cpp   ****   ******************************************************************************
   3:../main.cpp   ****   * @file      	main.cpp
   4:../main.cpp   ****   * @author    	Tecnologic86
   5:../main.cpp   ****   * @version   	V0.0.0
   6:../main.cpp   ****   * @date      	14.02.12
   7:../main.cpp   ****   * @brief		main program file for Project: ThunderCryer
   8:../main.cpp   ****   ******************************************************************************
   9:../main.cpp   ****   */
  10:../main.cpp   **** 
  11:../main.cpp   **** /* Includes ------------------------------------------------------------------*/
  12:../main.cpp   **** #include "CFreeRTOS.h"
  13:../main.cpp   **** #include "CTask.h"
  14:../main.cpp   **** #include "ustime.h"
  15:../main.cpp   **** #include "CLedHeartBeatSTM32F4Disc.h"
  16:../main.cpp   **** #include "CMenue.h"
  17:../main.cpp   **** #include "CT6963GPIOInterface.h"
  18:../main.cpp   **** #include "CUSBMassStorage.h"
  19:../main.cpp   **** #include "CFileHandler.h"
  20:../main.cpp   **** #include "stm32f4xx_conf.h"
  21:../main.cpp   **** #include "stm32f4xx.h"
  22:../main.cpp   **** 
  23:../main.cpp   **** /* Private typedef -----------------------------------------------------------*/
  24:../main.cpp   **** /* Private define ------------------------------------------------------------*/
  25:../main.cpp   **** /* Private macro -------------------------------------------------------------*/
  26:../main.cpp   **** /* Private variables ---------------------------------------------------------*/
  27:../main.cpp   **** CLedHeartBeatSTM32F4Disc g_LedTast(200/portTICK_RATE_MS);
  28:../main.cpp   **** CT6963_GPIO_Interface g_Display;
  29:../main.cpp   **** CMenue	g_Menue(&g_Display);
  30:../main.cpp   **** CFileHandler g_FileHandler;
  31:../main.cpp   **** CUSB_MassStorage g_MSC;
  32:../main.cpp   **** 
  33:../main.cpp   **** /* Private function prototypes -----------------------------------------------*/
  34:../main.cpp   **** extern "C" {
  35:../main.cpp   **** 	void vApplicationTickHook( void );
  36:../main.cpp   **** 	void vApplicationIdleHook( void );
  37:../main.cpp   **** 	void vApplicationMallocFailedHook( void );
  38:../main.cpp   **** 	void vApplicationStackOverflowHook( xTaskHandle *pxTask, signed char *pcTaskName );
  39:../main.cpp   **** } // extern "C"
  40:../main.cpp   **** /* Private functions ---------------------------------------------------------*/
  41:../main.cpp   **** 
  42:../main.cpp   **** 
  43:../main.cpp   **** 
  44:../main.cpp   **** /**
  45:../main.cpp   ****   * @brief  main function
  46:../main.cpp   ****   * @param  None
  47:../main.cpp   ****   * @retval None
  48:../main.cpp   ****   */
  49:../main.cpp   **** int main(void){
 100              		.loc 2 49 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 8
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 80B5     		push	{r7, lr}
 105              	.LCFI2:
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 14, -4
 108              		.cfi_offset 7, -8
 109 0002 82B0     		sub	sp, sp, #8
 110              	.LCFI3:
 111              		.cfi_def_cfa_offset 16
 112 0004 00AF     		add	r7, sp, #0
 113              	.LCFI4:
 114              		.cfi_def_cfa_register 7
 115              	.LBB2:
  50:../main.cpp   **** 	unsigned int u;
  51:../main.cpp   **** 
  52:../main.cpp   **** 	/**
  53:../main.cpp   **** 	 * create Led Heartbeat task with minimal stack size and priority
  54:../main.cpp   **** 	 * 1 higher than idle task
  55:../main.cpp   **** 	 */
  56:../main.cpp   **** 	g_LedTast.Create("Led Heartbeat",configMINIMAL_STACK_SIZE,tskIDLE_PRIORITY+3);
 116              		.loc 2 56 0
 117 0006 40F20000 		movw	r0, #:lower16:g_LedTast
 118 000a C0F20000 		movt	r0, #:upper16:g_LedTast
 119 000e 40F20001 		movw	r1, #:lower16:.LC0
 120 0012 C0F20001 		movt	r1, #:upper16:.LC0
 121 0016 4FF48072 		mov	r2, #256
 122 001a 4FF00303 		mov	r3, #3
 123 001e FFF7FEFF 		bl	_ZN12AManagedTask6CreateEPKctm
  57:../main.cpp   **** 	g_MSC.Create("USB Massstorage", configMINIMAL_STACK_SIZE * 10, tskIDLE_PRIORITY +1);
 124              		.loc 2 57 0
 125 0022 40F20000 		movw	r0, #:lower16:g_MSC
 126 0026 C0F20000 		movt	r0, #:upper16:g_MSC
 127 002a 40F20001 		movw	r1, #:lower16:.LC1
 128 002e C0F20001 		movt	r1, #:upper16:.LC1
 129 0032 4FF42062 		mov	r2, #2560
 130 0036 4FF00103 		mov	r3, #1
 131 003a FFF7FEFF 		bl	_ZN12AManagedTask6CreateEPKctm
  58:../main.cpp   **** 	//g_Menue.Create("Menue",configMINIMAL_STACK_SIZE * 2,tskIDLE_PRIORITY+3);
  59:../main.cpp   **** 	g_FileHandler.Create("FileHandler",configMINIMAL_STACK_SIZE * 20,tskIDLE_PRIORITY+1);
 132              		.loc 2 59 0
 133 003e 40F20000 		movw	r0, #:lower16:g_FileHandler
 134 0042 C0F20000 		movt	r0, #:upper16:g_FileHandler
 135 0046 40F20001 		movw	r1, #:lower16:.LC2
 136 004a C0F20001 		movt	r1, #:upper16:.LC2
 137 004e 4FF4A052 		mov	r2, #5120
 138 0052 4FF00103 		mov	r3, #1
 139 0056 FFF7FEFF 		bl	_ZN12AManagedTask6CreateEPKctm
  60:../main.cpp   **** 
  61:../main.cpp   **** 	/**
  62:../main.cpp   **** 	 * Initialize the hardware for all Tasks and
  63:../main.cpp   **** 	 * then FreeRTOS takes control of execution
  64:../main.cpp   **** 	 */
  65:../main.cpp   **** 	CFreeRTOS::InitHardwareForManagedTasks();
 140              		.loc 2 65 0
 141 005a FFF7FEFF 		bl	_ZN9CFreeRTOS27InitHardwareForManagedTasksEv
  66:../main.cpp   **** 	CFreeRTOS::StartScheduler();
 142              		.loc 2 66 0
 143 005e FFF7FEFF 		bl	_ZN9CFreeRTOS14StartSchedulerEv
 144              	.L3:
  67:../main.cpp   **** 
  68:../main.cpp   **** 	while(1){
  69:../main.cpp   **** 		u++;
 145              		.loc 2 69 0 discriminator 1
 146 0062 7B68     		ldr	r3, [r7, #4]
 147 0064 03F10103 		add	r3, r3, #1
 148 0068 7B60     		str	r3, [r7, #4]
  68:../main.cpp   **** 	while(1){
 149              		.loc 2 68 0 discriminator 1
 150 006a FAE7     		b	.L3
 151              	.LBE2:
 152              		.cfi_endproc
 153              	.LFE141:
 155              		.align	2
 156              		.global	vApplicationTickHook
 157              		.thumb
 158              		.thumb_func
 160              	vApplicationTickHook:
 161              	.LFB142:
  70:../main.cpp   **** 	}
  71:../main.cpp   **** 
  72:../main.cpp   **** 	return 0;
  73:../main.cpp   **** 
  74:../main.cpp   **** }
  75:../main.cpp   **** 
  76:../main.cpp   **** extern "C" {
  77:../main.cpp   **** 
  78:../main.cpp   **** 	// This FreeRTOS callback function gets called once per tick (default = 1000Hz).
  79:../main.cpp   **** 	// ----------------------------------------------------------------------------
  80:../main.cpp   **** 	void vApplicationTickHook( void ) {
 162              		.loc 2 80 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 006c 80B4     		push	{r7}
 168              	.LCFI5:
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 7, -4
 171 006e 00AF     		add	r7, sp, #0
 172              	.LCFI6:
 173              		.cfi_def_cfa_register 7
  81:../main.cpp   **** 
  82:../main.cpp   **** 	}
 174              		.loc 2 82 0
 175 0070 BD46     		mov	sp, r7
 176 0072 80BC     		pop	{r7}
 177 0074 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE142:
 181 0076 00BF     		.align	2
 182              		.global	vApplicationIdleHook
 183              		.thumb
 184              		.thumb_func
 186              	vApplicationIdleHook:
 187              	.LFB143:
  83:../main.cpp   **** 
  84:../main.cpp   **** 	// This FreeRTOS call-back function gets when no other task is ready to execute.
  85:../main.cpp   **** 	// On a completely unloaded system this is getting called at over 2.5MHz!
  86:../main.cpp   **** 	// ----------------------------------------------------------------------------
  87:../main.cpp   **** 	void vApplicationIdleHook( void ) {
 188              		.loc 2 87 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193 0078 80B4     		push	{r7}
 194              	.LCFI7:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 7, -4
 197 007a 00AF     		add	r7, sp, #0
 198              	.LCFI8:
 199              		.cfi_def_cfa_register 7
  88:../main.cpp   **** 
  89:../main.cpp   **** 	}
 200              		.loc 2 89 0
 201 007c BD46     		mov	sp, r7
 202 007e 80BC     		pop	{r7}
 203 0080 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE143:
 207 0082 00BF     		.align	2
 208              		.global	vApplicationMallocFailedHook
 209              		.thumb
 210              		.thumb_func
 212              	vApplicationMallocFailedHook:
 213              	.LFB144:
  90:../main.cpp   **** 
  91:../main.cpp   **** 	// A required FreeRTOS function.
  92:../main.cpp   **** 	// ----------------------------------------------------------------------------
  93:../main.cpp   **** 	void vApplicationMallocFailedHook( void ) {
 214              		.loc 2 93 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219 0084 80B4     		push	{r7}
 220              	.LCFI9:
 221              		.cfi_def_cfa_offset 4
 222              		.cfi_offset 7, -4
 223 0086 00AF     		add	r7, sp, #0
 224              	.LCFI10:
 225              		.cfi_def_cfa_register 7
  94:../main.cpp   **** 		configASSERT( 0 );  // Latch on any failure / error.
  95:../main.cpp   **** 	}
 226              		.loc 2 95 0
 227 0088 BD46     		mov	sp, r7
 228 008a 80BC     		pop	{r7}
 229 008c 7047     		bx	lr
 230              		.cfi_endproc
 231              	.LFE144:
 233 008e 00BF     		.align	2
 234              		.global	vApplicationStackOverflowHook
 235              		.thumb
 236              		.thumb_func
 238              	vApplicationStackOverflowHook:
 239              	.LFB145:
  96:../main.cpp   **** 
  97:../main.cpp   **** 	// A required FreeRTOS function. gets called on stack overflow
  98:../main.cpp   **** 	// ----------------------------------------------------------------------------
  99:../main.cpp   **** 	void vApplicationStackOverflowHook( xTaskHandle *pxTask, signed char *pcTaskName ){
 240              		.loc 2 99 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 245 0090 80B4     		push	{r7}
 246              	.LCFI11:
 247              		.cfi_def_cfa_offset 4
 248              		.cfi_offset 7, -4
 249 0092 83B0     		sub	sp, sp, #12
 250              	.LCFI12:
 251              		.cfi_def_cfa_offset 16
 252 0094 00AF     		add	r7, sp, #0
 253              	.LCFI13:
 254              		.cfi_def_cfa_register 7
 255 0096 7860     		str	r0, [r7, #4]
 256 0098 3960     		str	r1, [r7, #0]
 257              	.L8:
 100:../main.cpp   **** 		/* TODO, implement your code here */
 101:../main.cpp   **** 		while(1);
 258              		.loc 2 101 0 discriminator 1
 259 009a FEE7     		b	.L8
 260              		.cfi_endproc
 261              	.LFE145:
 263              		.align	2
 264              		.thumb
 265              		.thumb_func
 267              	_Z41__static_initialization_and_destruction_0ii:
 268              	.LFB146:
 102:../main.cpp   **** 	}
 103:../main.cpp   **** } // extern "C"
 104:../main.cpp   **** 
 105:../main.cpp   **** }//Somewhere is a { open i think i left one #ifdef __cplusplus  closing brance
 269              		.loc 2 105 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 009c 80B5     		push	{r7, lr}
 274              	.LCFI14:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 14, -4
 277              		.cfi_offset 7, -8
 278 009e 82B0     		sub	sp, sp, #8
 279              	.LCFI15:
 280              		.cfi_def_cfa_offset 16
 281 00a0 00AF     		add	r7, sp, #0
 282              	.LCFI16:
 283              		.cfi_def_cfa_register 7
 284 00a2 7860     		str	r0, [r7, #4]
 285 00a4 3960     		str	r1, [r7, #0]
 286              		.loc 2 105 0
 287 00a6 7B68     		ldr	r3, [r7, #4]
 288 00a8 012B     		cmp	r3, #1
 289 00aa 73D1     		bne	.L9
 290              		.loc 2 105 0 is_stmt 0 discriminator 1
 291 00ac 3A68     		ldr	r2, [r7, #0]
 292 00ae 4FF6FF73 		movw	r3, #65535
 293 00b2 9A42     		cmp	r2, r3
 294 00b4 6ED1     		bne	.L9
  27:../main.cpp   **** CLedHeartBeatSTM32F4Disc g_LedTast(200/portTICK_RATE_MS);
 295              		.loc 2 27 0 is_stmt 1
 296 00b6 40F20000 		movw	r0, #:lower16:g_LedTast
 297 00ba C0F20000 		movt	r0, #:upper16:g_LedTast
 298 00be 4FF01401 		mov	r1, #20
 299 00c2 FFF7FEFF 		bl	_ZN24CLedHeartBeatSTM32F4DiscC1Em
 300 00c6 40F20003 		movw	r3, #:lower16:_ZN24CLedHeartBeatSTM32F4DiscD1Ev
 301 00ca C0F20003 		movt	r3, #:upper16:_ZN24CLedHeartBeatSTM32F4DiscD1Ev
 302 00ce 40F20000 		movw	r0, #:lower16:g_LedTast
 303 00d2 C0F20000 		movt	r0, #:upper16:g_LedTast
 304 00d6 1946     		mov	r1, r3
 305 00d8 40F20002 		movw	r2, #:lower16:__dso_handle
 306 00dc C0F20002 		movt	r2, #:upper16:__dso_handle
 307 00e0 FFF7FEFF 		bl	__aeabi_atexit
  28:../main.cpp   **** CT6963_GPIO_Interface g_Display;
 308              		.loc 2 28 0
 309 00e4 40F20000 		movw	r0, #:lower16:g_Display
 310 00e8 C0F20000 		movt	r0, #:upper16:g_Display
 311 00ec FFF7FEFF 		bl	_ZN21CT6963_GPIO_InterfaceC1Ev
 312 00f0 40F20003 		movw	r3, #:lower16:_ZN21CT6963_GPIO_InterfaceD1Ev
 313 00f4 C0F20003 		movt	r3, #:upper16:_ZN21CT6963_GPIO_InterfaceD1Ev
 314 00f8 40F20000 		movw	r0, #:lower16:g_Display
 315 00fc C0F20000 		movt	r0, #:upper16:g_Display
 316 0100 1946     		mov	r1, r3
 317 0102 40F20002 		movw	r2, #:lower16:__dso_handle
 318 0106 C0F20002 		movt	r2, #:upper16:__dso_handle
 319 010a FFF7FEFF 		bl	__aeabi_atexit
  29:../main.cpp   **** CMenue	g_Menue(&g_Display);
 320              		.loc 2 29 0
 321 010e 40F20000 		movw	r0, #:lower16:g_Menue
 322 0112 C0F20000 		movt	r0, #:upper16:g_Menue
 323 0116 40F20001 		movw	r1, #:lower16:g_Display
 324 011a C0F20001 		movt	r1, #:upper16:g_Display
 325 011e FFF7FEFF 		bl	_ZN6CMenueC1EP11CGraphicLCD
 326 0122 40F20003 		movw	r3, #:lower16:_ZN6CMenueD1Ev
 327 0126 C0F20003 		movt	r3, #:upper16:_ZN6CMenueD1Ev
 328 012a 40F20000 		movw	r0, #:lower16:g_Menue
 329 012e C0F20000 		movt	r0, #:upper16:g_Menue
 330 0132 1946     		mov	r1, r3
 331 0134 40F20002 		movw	r2, #:lower16:__dso_handle
 332 0138 C0F20002 		movt	r2, #:upper16:__dso_handle
 333 013c FFF7FEFF 		bl	__aeabi_atexit
  30:../main.cpp   **** CFileHandler g_FileHandler;
 334              		.loc 2 30 0
 335 0140 40F20000 		movw	r0, #:lower16:g_FileHandler
 336 0144 C0F20000 		movt	r0, #:upper16:g_FileHandler
 337 0148 FFF7FEFF 		bl	_ZN12CFileHandlerC1Ev
 338 014c 40F20003 		movw	r3, #:lower16:_ZN12CFileHandlerD1Ev
 339 0150 C0F20003 		movt	r3, #:upper16:_ZN12CFileHandlerD1Ev
 340 0154 40F20000 		movw	r0, #:lower16:g_FileHandler
 341 0158 C0F20000 		movt	r0, #:upper16:g_FileHandler
 342 015c 1946     		mov	r1, r3
 343 015e 40F20002 		movw	r2, #:lower16:__dso_handle
 344 0162 C0F20002 		movt	r2, #:upper16:__dso_handle
 345 0166 FFF7FEFF 		bl	__aeabi_atexit
  31:../main.cpp   **** CUSB_MassStorage g_MSC;
 346              		.loc 2 31 0
 347 016a 40F20000 		movw	r0, #:lower16:g_MSC
 348 016e C0F20000 		movt	r0, #:upper16:g_MSC
 349 0172 FFF7FEFF 		bl	_ZN16CUSB_MassStorageC1Ev
 350 0176 40F20003 		movw	r3, #:lower16:_ZN16CUSB_MassStorageD1Ev
 351 017a C0F20003 		movt	r3, #:upper16:_ZN16CUSB_MassStorageD1Ev
 352 017e 40F20000 		movw	r0, #:lower16:g_MSC
 353 0182 C0F20000 		movt	r0, #:upper16:g_MSC
 354 0186 1946     		mov	r1, r3
 355 0188 40F20002 		movw	r2, #:lower16:__dso_handle
 356 018c C0F20002 		movt	r2, #:upper16:__dso_handle
 357 0190 FFF7FEFF 		bl	__aeabi_atexit
 358              	.L9:
 359              		.loc 2 105 0
 360 0194 07F10807 		add	r7, r7, #8
 361 0198 BD46     		mov	sp, r7
 362 019a 80BD     		pop	{r7, pc}
 363              		.cfi_endproc
 364              	.LFE146:
 366              		.section	.rodata._ZL12c_FontNative,"a",%progbits
 367              		.align	2
 370              	_ZL12c_FontNative:
 371 0000 00000000 		.space	24
 371      00000000 
 371      00000000 
 371      00000000 
 371      00000000 
 372              		.text
 373              		.align	2
 374              		.thumb
 375              		.thumb_func
 377              	_GLOBAL__sub_I_g_LedTast:
 378              	.LFB147:
 379              		.loc 2 105 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 019c 80B5     		push	{r7, lr}
 384              	.LCFI17:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 14, -4
 387              		.cfi_offset 7, -8
 388 019e 00AF     		add	r7, sp, #0
 389              	.LCFI18:
 390              		.cfi_def_cfa_register 7
 391              		.loc 2 105 0
 392 01a0 4FF00100 		mov	r0, #1
 393 01a4 4FF6FF71 		movw	r1, #65535
 394 01a8 FFF778FF 		bl	_Z41__static_initialization_and_destruction_0ii
 395 01ac 80BD     		pop	{r7, pc}
 396              		.cfi_endproc
 397              	.LFE147:
 399              		.section	.init_array,"aw",%init_array
 400              		.align	2
 401 0000 00000000 		.word	_GLOBAL__sub_I_g_LedTast(target1)
 402              		.text
 403              	.Letext0:
 404              		.file 3 "c:\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib/gcc/arm-none-eabi
 405              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/../../Source/portable
 406              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/task.h"
 407              		.file 6 "E:\\Desktop\\thundercyer-the-alarm-clock\\GraphicLCD/CGraphicLCD.h"
 408              		.file 7 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
 409              		.file 8 "E:\\Desktop\\thundercyer-the-alarm-clock\\GraphicLCD/CT6963CDriver.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:20     .text._ZN9CFreeRTOS14StartSchedulerEv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:25     .text._ZN9CFreeRTOS14StartSchedulerEv:00000000 _ZN9CFreeRTOS14StartSchedulerEv
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:51     .bss.g_LedTast:00000000 g_LedTast
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:48     .bss.g_LedTast:00000000 $d
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:58     .bss.g_Display:00000000 g_Display
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:55     .bss.g_Display:00000000 $d
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:65     .bss.g_Menue:00000000 g_Menue
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:62     .bss.g_Menue:00000000 $d
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:72     .bss.g_FileHandler:00000000 g_FileHandler
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:69     .bss.g_FileHandler:00000000 $d
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:79     .bss.g_MSC:00000000 g_MSC
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:76     .bss.g_MSC:00000000 $d
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:82     .rodata:00000000 $d
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:83     .rodata:00000000 .LC0
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:86     .rodata:00000010 .LC1
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:89     .rodata:00000020 .LC2
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:92     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:97     .text:00000000 main
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:160    .text:0000006c vApplicationTickHook
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:186    .text:00000078 vApplicationIdleHook
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:212    .text:00000084 vApplicationMallocFailedHook
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:238    .text:00000090 vApplicationStackOverflowHook
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:267    .text:0000009c _Z41__static_initialization_and_destruction_0ii
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:367    .rodata._ZL12c_FontNative:00000000 $d
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:370    .rodata._ZL12c_FontNative:00000000 _ZL12c_FontNative
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:377    .text:0000019c _GLOBAL__sub_I_g_LedTast
C:\Users\Alex\AppData\Local\Temp\cc9kIL4C.s:400    .init_array:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vTaskStartScheduler
_ZN12AManagedTask6CreateEPKctm
_ZN9CFreeRTOS27InitHardwareForManagedTasksEv
_ZN24CLedHeartBeatSTM32F4DiscC1Em
_ZN24CLedHeartBeatSTM32F4DiscD1Ev
__dso_handle
__aeabi_atexit
_ZN21CT6963_GPIO_InterfaceC1Ev
_ZN21CT6963_GPIO_InterfaceD1Ev
_ZN6CMenueC1EP11CGraphicLCD
_ZN6CMenueD1Ev
_ZN12CFileHandlerC1Ev
_ZN12CFileHandlerD1Ev
_ZN16CUSB_MassStorageC1Ev
_ZN16CUSB_MassStorageD1Ev
