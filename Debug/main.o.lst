   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN9CFreeRTOS14StartSchedulerEv,"axG",%progbits,_ZN9CFreeRTOS14StartSchedulerEv,com
  19              		.align	2
  20              		.weak	_ZN9CFreeRTOS14StartSchedulerEv
  21              		.thumb
  22              		.thumb_func
  24              	_ZN9CFreeRTOS14StartSchedulerEv:
  25              	.LFB110:
  26              		.file 1 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\FreeRTOS_EC\\Source/CFreeRTOS.h"
   1:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** /**
   2:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @file CFreeRTOS.h
   3:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @class CFreeRTOS
   4:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  *
   5:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * This class provide an interface for the <a href="http://www.freertos.org/a00020.html">Kernek Con
   6:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * Moreover provide a method used by the FreeRTOS Extension Layer to initialize the hardware resour
   7:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * All methods are static and inline.
   8:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  *
   9:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @date Jul 14, 2010
  10:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @author Stefano Oliveri (STF12.net)
  11:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  *         E-Mail: software@stf12.net
  12:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  */
  13:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  14:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** /**
  15:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @defgroup FreeRTOS_CPP_EXT FreeRTOS Class Extension
  16:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * This set of C++ class aim to provide an Object Oriented framework to program a FreeRTOS applicat
  17:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @{
  18:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  */
  19:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  20:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** /**
  21:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @defgroup FreeRTOS_Wrapper FreeRTOS Wrapper Class
  22:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @ingroup FreeRTOS_CPP_EXT
  23:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * The FreeRTOS Wrapper Layer provides a set of class that are able to attach to and manage a FreeR
  24:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * native handle.
  25:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  * @{
  26:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h ****  */
  27:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  28:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** #ifndef CFREERTOS_H_
  29:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** #define CFREERTOS_H_
  30:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  31:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** #include "FreeRTOS.h"
  32:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** #include "task.h"
  33:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  34:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** class CFreeRTOS {
  35:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** public:
  36:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	/**
  37:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 * Default constructor. Not used.
  38:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 */
  39:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	CFreeRTOS();
  40:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  41:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	/**
  42:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 * Destructor. Not used.
  43:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 */
  44:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	~CFreeRTOS();
  45:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 
  46:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	/**
  47:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 * \sa <a href="http://www.freertos.org/a00132.html">vTaskStartScheduler</a> FreeRTOS API function
  48:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	 */
  49:C:\Users\Alex\git\thundercyer-the-alarm-clock\FreeRTOS_EC\Source\CFreeRTOS.h **** 	static void StartScheduler() { vTaskStartScheduler(); }
  27              		.loc 1 49 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  39              		.loc 1 49 0
  40 0004 FFF7FEFF 		bl	vTaskStartScheduler
  41 0008 80BD     		pop	{r7, pc}
  42              		.cfi_endproc
  43              	.LFE110:
  45              		.global	g_LedTast
  46 000a 00BF     		.section	.bss.g_LedTast,"aw",%nobits
  47              		.align	2
  50              	g_LedTast:
  51 0000 00000000 		.space	20
  51      00000000 
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.global	g_Display
  53              		.section	.bss.g_Display,"aw",%nobits
  54              		.align	2
  57              	g_Display:
  58 0000 00000000 		.space	8
  58      00000000 
  59              		.global	g_Menue
  60              		.section	.bss.g_Menue,"aw",%nobits
  61              		.align	2
  64              	g_Menue:
  65 0000 00000000 		.space	16
  65      00000000 
  65      00000000 
  65      00000000 
  66              		.section	.rodata
  67              		.align	2
  68              	.LC0:
  69 0000 4C656420 		.ascii	"Led Heartbeat\000"
  69      48656172 
  69      74626561 
  69      7400
  70 000e 0000     		.align	2
  71              	.LC1:
  72 0010 4D656E75 		.ascii	"Menue\000"
  72      6500
  73 0016 0000     		.section	.text.main,"ax",%progbits
  74              		.align	2
  75              		.global	main
  76              		.thumb
  77              		.thumb_func
  79              	main:
  80              	.LFB140:
  81              		.file 2 "../main.cpp"
   1:../main.cpp   **** /**
   2:../main.cpp   ****   ******************************************************************************
   3:../main.cpp   ****   * @file      	main.cpp
   4:../main.cpp   ****   * @author    	Tecnologic86
   5:../main.cpp   ****   * @version   	V0.0.0
   6:../main.cpp   ****   * @date      	14.02.12
   7:../main.cpp   ****   * @brief		main program file for Project: ThunderCryer
   8:../main.cpp   ****   ******************************************************************************
   9:../main.cpp   ****   */
  10:../main.cpp   **** 
  11:../main.cpp   **** /* Includes ------------------------------------------------------------------*/
  12:../main.cpp   **** #include "CFreeRTOS.h"
  13:../main.cpp   **** #include "CTask.h"
  14:../main.cpp   **** #include "ustime.h"
  15:../main.cpp   **** #include "CLedHeartBeatSTM32F4Disc.h"
  16:../main.cpp   **** #include "CMenue.h"
  17:../main.cpp   **** #include "CT6963GPIOInterface.h"
  18:../main.cpp   **** #include "stm32f4xx_conf.h"
  19:../main.cpp   **** #include "stm32f4xx.h"
  20:../main.cpp   **** 
  21:../main.cpp   **** /* Private typedef -----------------------------------------------------------*/
  22:../main.cpp   **** /* Private define ------------------------------------------------------------*/
  23:../main.cpp   **** /* Private macro -------------------------------------------------------------*/
  24:../main.cpp   **** /* Private variables ---------------------------------------------------------*/
  25:../main.cpp   **** CLedHeartBeatSTM32F4Disc g_LedTast(500/portTICK_RATE_MS);
  26:../main.cpp   **** CT6963_GPIO_Interface g_Display;
  27:../main.cpp   **** CMenue	g_Menue(&g_Display);
  28:../main.cpp   **** /* Private function prototypes -----------------------------------------------*/
  29:../main.cpp   **** extern "C" {
  30:../main.cpp   **** 	void vApplicationTickHook( void );
  31:../main.cpp   **** 	void vApplicationIdleHook( void );
  32:../main.cpp   **** 	void vApplicationMallocFailedHook( void );
  33:../main.cpp   **** 	void vApplicationStackOverflowHook( xTaskHandle *pxTask, signed char *pcTaskName );
  34:../main.cpp   **** } // extern "C"
  35:../main.cpp   **** /* Private functions ---------------------------------------------------------*/
  36:../main.cpp   **** 
  37:../main.cpp   **** 
  38:../main.cpp   **** 
  39:../main.cpp   **** /**
  40:../main.cpp   ****   * @brief  main function
  41:../main.cpp   ****   * @param  None
  42:../main.cpp   ****   * @retval None
  43:../main.cpp   ****   */
  44:../main.cpp   **** int main(void){
  82              		.loc 2 44 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              	.LCFI2:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 14, -4
  90              		.cfi_offset 7, -8
  91 0002 82B0     		sub	sp, sp, #8
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 16
  94 0004 00AF     		add	r7, sp, #0
  95              	.LCFI4:
  96              		.cfi_def_cfa_register 7
  97              	.LBB2:
  45:../main.cpp   **** 	unsigned int u;
  46:../main.cpp   **** 
  47:../main.cpp   **** 	/**
  48:../main.cpp   **** 	 * create Led Heartbeat task with minimal stack size and priority
  49:../main.cpp   **** 	 * 1 higher than idle task
  50:../main.cpp   **** 	 */
  51:../main.cpp   **** 	g_LedTast.Create("Led Heartbeat",configMINIMAL_STACK_SIZE,tskIDLE_PRIORITY+2);
  98              		.loc 2 51 0
  99 0006 40F20000 		movw	r0, #:lower16:g_LedTast
 100 000a C0F20000 		movt	r0, #:upper16:g_LedTast
 101 000e 40F20001 		movw	r1, #:lower16:.LC0
 102 0012 C0F20001 		movt	r1, #:upper16:.LC0
 103 0016 4FF48072 		mov	r2, #256
 104 001a 4FF00203 		mov	r3, #2
 105 001e FFF7FEFF 		bl	_ZN12AManagedTask6CreateEPKctm
  52:../main.cpp   **** 	g_Menue.Create("Menue",configMINIMAL_STACK_SIZE * 2,tskIDLE_PRIORITY+1);
 106              		.loc 2 52 0
 107 0022 40F20000 		movw	r0, #:lower16:g_Menue
 108 0026 C0F20000 		movt	r0, #:upper16:g_Menue
 109 002a 40F20001 		movw	r1, #:lower16:.LC1
 110 002e C0F20001 		movt	r1, #:upper16:.LC1
 111 0032 4FF40072 		mov	r2, #512
 112 0036 4FF00103 		mov	r3, #1
 113 003a FFF7FEFF 		bl	_ZN12AManagedTask6CreateEPKctm
  53:../main.cpp   **** 	/**
  54:../main.cpp   **** 	 * Initialise the hardware for all Tasks and
  55:../main.cpp   **** 	 * then FreeRTOS takes control of execution
  56:../main.cpp   **** 	 */
  57:../main.cpp   **** 	CFreeRTOS::InitHardwareForManagedTasks();
 114              		.loc 2 57 0
 115 003e FFF7FEFF 		bl	_ZN9CFreeRTOS27InitHardwareForManagedTasksEv
  58:../main.cpp   **** 	CFreeRTOS::StartScheduler();
 116              		.loc 2 58 0
 117 0042 FFF7FEFF 		bl	_ZN9CFreeRTOS14StartSchedulerEv
 118              	.L3:
  59:../main.cpp   **** 
  60:../main.cpp   **** 	while(1){
  61:../main.cpp   **** 		u++;
 119              		.loc 2 61 0 discriminator 1
 120 0046 7B68     		ldr	r3, [r7, #4]
 121 0048 03F10103 		add	r3, r3, #1
 122 004c 7B60     		str	r3, [r7, #4]
  60:../main.cpp   **** 	while(1){
 123              		.loc 2 60 0 discriminator 1
 124 004e FAE7     		b	.L3
 125              	.LBE2:
 126              		.cfi_endproc
 127              	.LFE140:
 129              		.section	.text.vApplicationTickHook,"ax",%progbits
 130              		.align	2
 131              		.global	vApplicationTickHook
 132              		.thumb
 133              		.thumb_func
 135              	vApplicationTickHook:
 136              	.LFB141:
  62:../main.cpp   **** 	}
  63:../main.cpp   **** 
  64:../main.cpp   **** 	return 0;
  65:../main.cpp   **** 
  66:../main.cpp   **** }
  67:../main.cpp   **** 
  68:../main.cpp   **** extern "C" {
  69:../main.cpp   **** 
  70:../main.cpp   **** 	// This FreeRTOS callback function gets called once per tick (default = 1000Hz).
  71:../main.cpp   **** 	// ----------------------------------------------------------------------------
  72:../main.cpp   **** 	void vApplicationTickHook( void ) {
 137              		.loc 2 72 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142 0000 80B4     		push	{r7}
 143              	.LCFI5:
 144              		.cfi_def_cfa_offset 4
 145              		.cfi_offset 7, -4
 146 0002 00AF     		add	r7, sp, #0
 147              	.LCFI6:
 148              		.cfi_def_cfa_register 7
  73:../main.cpp   **** 
  74:../main.cpp   **** 	}
 149              		.loc 2 74 0
 150 0004 BD46     		mov	sp, r7
 151 0006 80BC     		pop	{r7}
 152 0008 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE141:
 156 000a 00BF     		.section	.text.vApplicationIdleHook,"ax",%progbits
 157              		.align	2
 158              		.global	vApplicationIdleHook
 159              		.thumb
 160              		.thumb_func
 162              	vApplicationIdleHook:
 163              	.LFB142:
  75:../main.cpp   **** 
  76:../main.cpp   **** 	// This FreeRTOS call-back function gets when no other task is ready to execute.
  77:../main.cpp   **** 	// On a completely unloaded system this is getting called at over 2.5MHz!
  78:../main.cpp   **** 	// ----------------------------------------------------------------------------
  79:../main.cpp   **** 	void vApplicationIdleHook( void ) {
 164              		.loc 2 79 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 169 0000 80B4     		push	{r7}
 170              	.LCFI7:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
 173 0002 00AF     		add	r7, sp, #0
 174              	.LCFI8:
 175              		.cfi_def_cfa_register 7
  80:../main.cpp   **** 
  81:../main.cpp   **** 	}
 176              		.loc 2 81 0
 177 0004 BD46     		mov	sp, r7
 178 0006 80BC     		pop	{r7}
 179 0008 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE142:
 183 000a 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 184              		.align	2
 185              		.global	vApplicationMallocFailedHook
 186              		.thumb
 187              		.thumb_func
 189              	vApplicationMallocFailedHook:
 190              	.LFB143:
  82:../main.cpp   **** 
  83:../main.cpp   **** 	// A required FreeRTOS function.
  84:../main.cpp   **** 	// ----------------------------------------------------------------------------
  85:../main.cpp   **** 	void vApplicationMallocFailedHook( void ) {
 191              		.loc 2 85 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196 0000 80B4     		push	{r7}
 197              	.LCFI9:
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 7, -4
 200 0002 00AF     		add	r7, sp, #0
 201              	.LCFI10:
 202              		.cfi_def_cfa_register 7
  86:../main.cpp   **** 		configASSERT( 0 );  // Latch on any failure / error.
  87:../main.cpp   **** 	}
 203              		.loc 2 87 0
 204 0004 BD46     		mov	sp, r7
 205 0006 80BC     		pop	{r7}
 206 0008 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE143:
 210 000a 00BF     		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 211              		.align	2
 212              		.global	vApplicationStackOverflowHook
 213              		.thumb
 214              		.thumb_func
 216              	vApplicationStackOverflowHook:
 217              	.LFB144:
  88:../main.cpp   **** 
  89:../main.cpp   **** 	// A required FreeRTOS function. gets called on stack overflow
  90:../main.cpp   **** 	// ----------------------------------------------------------------------------
  91:../main.cpp   **** 	void vApplicationStackOverflowHook( xTaskHandle *pxTask, signed char *pcTaskName ){
 218              		.loc 2 91 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0000 80B4     		push	{r7}
 224              	.LCFI11:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 7, -4
 227 0002 83B0     		sub	sp, sp, #12
 228              	.LCFI12:
 229              		.cfi_def_cfa_offset 16
 230 0004 00AF     		add	r7, sp, #0
 231              	.LCFI13:
 232              		.cfi_def_cfa_register 7
 233 0006 7860     		str	r0, [r7, #4]
 234 0008 3960     		str	r1, [r7, #0]
 235              	.L8:
  92:../main.cpp   **** 		/* TODO, implement your code here */
  93:../main.cpp   **** 		while(1);
 236              		.loc 2 93 0 discriminator 1
 237 000a FEE7     		b	.L8
 238              		.cfi_endproc
 239              	.LFE144:
 241              		.section	.text.EVAL_AUDIO_TransferComplete_CallBack,"ax",%progbits
 242              		.align	2
 243              		.global	EVAL_AUDIO_TransferComplete_CallBack
 244              		.thumb
 245              		.thumb_func
 247              	EVAL_AUDIO_TransferComplete_CallBack:
 248              	.LFB145:
  94:../main.cpp   **** 	}
  95:../main.cpp   **** 
  96:../main.cpp   **** 	/*
  97:../main.cpp   **** 	  * Callback used by stm32f4_discovery_audio_codec.c.
  98:../main.cpp   **** 	  * Refer to stm32f4_discovery_audio_codec.h for more info.
  99:../main.cpp   **** 	  */
 100:../main.cpp   **** 	void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size){
 249              		.loc 2 100 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0000 80B4     		push	{r7}
 255              	.LCFI14:
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0002 83B0     		sub	sp, sp, #12
 259              	.LCFI15:
 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              	.LCFI16:
 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
 265 0008 3960     		str	r1, [r7, #0]
 101:../main.cpp   **** 	   /* TODO, implement your code here */
 102:../main.cpp   **** 	   return;
 103:../main.cpp   **** 	}
 266              		.loc 2 103 0
 267 000a 07F10C07 		add	r7, r7, #12
 268 000e BD46     		mov	sp, r7
 269 0010 80BC     		pop	{r7}
 270 0012 7047     		bx	lr
 271              		.cfi_endproc
 272              	.LFE145:
 274              		.section	.text.EVAL_AUDIO_GetSampleCallBack,"ax",%progbits
 275              		.align	2
 276              		.global	EVAL_AUDIO_GetSampleCallBack
 277              		.thumb
 278              		.thumb_func
 280              	EVAL_AUDIO_GetSampleCallBack:
 281              	.LFB146:
 104:../main.cpp   **** 
 105:../main.cpp   **** 	/*
 106:../main.cpp   **** 	  * Callback used by stm324xg_eval_audio_codec.c.
 107:../main.cpp   **** 	  * Refer to stm324xg_eval_audio_codec.h for more info.
 108:../main.cpp   **** 	  */
 109:../main.cpp   **** 	uint16_t EVAL_AUDIO_GetSampleCallBack(void){
 282              		.loc 2 109 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              	.LCFI17:
 289              		.cfi_def_cfa_offset 4
 290              		.cfi_offset 7, -4
 291 0002 00AF     		add	r7, sp, #0
 292              	.LCFI18:
 293              		.cfi_def_cfa_register 7
 110:../main.cpp   **** 	   /* TODO, implement your code here */
 111:../main.cpp   **** 	   return -1;
 294              		.loc 2 111 0
 295 0004 4FF6FF73 		movw	r3, #65535
 112:../main.cpp   **** 	}
 296              		.loc 2 112 0
 297 0008 1846     		mov	r0, r3
 298 000a BD46     		mov	sp, r7
 299 000c 80BC     		pop	{r7}
 300 000e 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE146:
 304              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 305              		.align	2
 306              		.thumb
 307              		.thumb_func
 309              	_Z41__static_initialization_and_destruction_0ii:
 310              	.LFB147:
 113:../main.cpp   **** } // extern "C"
 311              		.loc 2 113 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 8
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315 0000 80B5     		push	{r7, lr}
 316              	.LCFI19:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 14, -4
 319              		.cfi_offset 7, -8
 320 0002 82B0     		sub	sp, sp, #8
 321              	.LCFI20:
 322              		.cfi_def_cfa_offset 16
 323 0004 00AF     		add	r7, sp, #0
 324              	.LCFI21:
 325              		.cfi_def_cfa_register 7
 326 0006 7860     		str	r0, [r7, #4]
 327 0008 3960     		str	r1, [r7, #0]
 328              		.loc 2 113 0
 329 000a 7B68     		ldr	r3, [r7, #4]
 330 000c 012B     		cmp	r3, #1
 331 000e 49D1     		bne	.L11
 332              		.loc 2 113 0 is_stmt 0 discriminator 1
 333 0010 3A68     		ldr	r2, [r7, #0]
 334 0012 4FF6FF73 		movw	r3, #65535
 335 0016 9A42     		cmp	r2, r3
 336 0018 44D1     		bne	.L11
  25:../main.cpp   **** CLedHeartBeatSTM32F4Disc g_LedTast(500/portTICK_RATE_MS);
 337              		.loc 2 25 0 is_stmt 1
 338 001a 40F20000 		movw	r0, #:lower16:g_LedTast
 339 001e C0F20000 		movt	r0, #:upper16:g_LedTast
 340 0022 4FF03201 		mov	r1, #50
 341 0026 FFF7FEFF 		bl	_ZN24CLedHeartBeatSTM32F4DiscC1Em
 342 002a 40F20003 		movw	r3, #:lower16:_ZN24CLedHeartBeatSTM32F4DiscD1Ev
 343 002e C0F20003 		movt	r3, #:upper16:_ZN24CLedHeartBeatSTM32F4DiscD1Ev
 344 0032 40F20000 		movw	r0, #:lower16:g_LedTast
 345 0036 C0F20000 		movt	r0, #:upper16:g_LedTast
 346 003a 1946     		mov	r1, r3
 347 003c 40F20002 		movw	r2, #:lower16:__dso_handle
 348 0040 C0F20002 		movt	r2, #:upper16:__dso_handle
 349 0044 FFF7FEFF 		bl	__aeabi_atexit
  26:../main.cpp   **** CT6963_GPIO_Interface g_Display;
 350              		.loc 2 26 0
 351 0048 40F20000 		movw	r0, #:lower16:g_Display
 352 004c C0F20000 		movt	r0, #:upper16:g_Display
 353 0050 FFF7FEFF 		bl	_ZN21CT6963_GPIO_InterfaceC1Ev
 354 0054 40F20003 		movw	r3, #:lower16:_ZN21CT6963_GPIO_InterfaceD1Ev
 355 0058 C0F20003 		movt	r3, #:upper16:_ZN21CT6963_GPIO_InterfaceD1Ev
 356 005c 40F20000 		movw	r0, #:lower16:g_Display
 357 0060 C0F20000 		movt	r0, #:upper16:g_Display
 358 0064 1946     		mov	r1, r3
 359 0066 40F20002 		movw	r2, #:lower16:__dso_handle
 360 006a C0F20002 		movt	r2, #:upper16:__dso_handle
 361 006e FFF7FEFF 		bl	__aeabi_atexit
  27:../main.cpp   **** CMenue	g_Menue(&g_Display);
 362              		.loc 2 27 0
 363 0072 40F20000 		movw	r0, #:lower16:g_Menue
 364 0076 C0F20000 		movt	r0, #:upper16:g_Menue
 365 007a 40F20001 		movw	r1, #:lower16:g_Display
 366 007e C0F20001 		movt	r1, #:upper16:g_Display
 367 0082 FFF7FEFF 		bl	_ZN6CMenueC1EP11CGraphicLCD
 368 0086 40F20003 		movw	r3, #:lower16:_ZN6CMenueD1Ev
 369 008a C0F20003 		movt	r3, #:upper16:_ZN6CMenueD1Ev
 370 008e 40F20000 		movw	r0, #:lower16:g_Menue
 371 0092 C0F20000 		movt	r0, #:upper16:g_Menue
 372 0096 1946     		mov	r1, r3
 373 0098 40F20002 		movw	r2, #:lower16:__dso_handle
 374 009c C0F20002 		movt	r2, #:upper16:__dso_handle
 375 00a0 FFF7FEFF 		bl	__aeabi_atexit
 376              	.L11:
 377              		.loc 2 113 0
 378 00a4 07F10807 		add	r7, r7, #8
 379 00a8 BD46     		mov	sp, r7
 380 00aa 80BD     		pop	{r7, pc}
 381              		.cfi_endproc
 382              	.LFE147:
 384              		.section	.rodata._ZL12c_FontNative,"a",%progbits
 385              		.align	2
 388              	_ZL12c_FontNative:
 389 0000 00000000 		.space	24
 389      00000000 
 389      00000000 
 389      00000000 
 389      00000000 
 390              		.section	.text._GLOBAL__sub_I_g_LedTast,"ax",%progbits
 391              		.align	2
 392              		.thumb
 393              		.thumb_func
 395              	_GLOBAL__sub_I_g_LedTast:
 396              	.LFB148:
 397              		.loc 2 113 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401 0000 80B5     		push	{r7, lr}
 402              	.LCFI22:
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 14, -4
 405              		.cfi_offset 7, -8
 406 0002 00AF     		add	r7, sp, #0
 407              	.LCFI23:
 408              		.cfi_def_cfa_register 7
 409              		.loc 2 113 0
 410 0004 4FF00100 		mov	r0, #1
 411 0008 4FF6FF71 		movw	r1, #65535
 412 000c FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 413 0010 80BD     		pop	{r7, pc}
 414              		.cfi_endproc
 415              	.LFE148:
 417 0012 00BF     		.section	.init_array,"aw",%init_array
 418              		.align	2
 419 0000 00000000 		.word	_GLOBAL__sub_I_g_LedTast(target1)
 420              		.text
 421              	.Letext0:
 422              		.file 3 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 423              		.file 4 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/../../Source
 424              		.file 5 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/task.h"
 425              		.file 6 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\GraphicLCD/CGraphicLCD.h"
 426              		.file 7 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
 427              		.file 8 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\GraphicLCD/CT6963CDriver.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:19     .text._ZN9CFreeRTOS14StartSchedulerEv:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:24     .text._ZN9CFreeRTOS14StartSchedulerEv:00000000 _ZN9CFreeRTOS14StartSchedulerEv
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:50     .bss.g_LedTast:00000000 g_LedTast
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:47     .bss.g_LedTast:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:57     .bss.g_Display:00000000 g_Display
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:54     .bss.g_Display:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:64     .bss.g_Menue:00000000 g_Menue
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:61     .bss.g_Menue:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:67     .rodata:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:68     .rodata:00000000 .LC0
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:71     .rodata:00000010 .LC1
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:74     .text.main:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:79     .text.main:00000000 main
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:130    .text.vApplicationTickHook:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:135    .text.vApplicationTickHook:00000000 vApplicationTickHook
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:157    .text.vApplicationIdleHook:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:162    .text.vApplicationIdleHook:00000000 vApplicationIdleHook
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:184    .text.vApplicationMallocFailedHook:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:189    .text.vApplicationMallocFailedHook:00000000 vApplicationMallocFailedHook
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:211    .text.vApplicationStackOverflowHook:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:216    .text.vApplicationStackOverflowHook:00000000 vApplicationStackOverflowHook
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:242    .text.EVAL_AUDIO_TransferComplete_CallBack:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:247    .text.EVAL_AUDIO_TransferComplete_CallBack:00000000 EVAL_AUDIO_TransferComplete_CallBack
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:275    .text.EVAL_AUDIO_GetSampleCallBack:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:280    .text.EVAL_AUDIO_GetSampleCallBack:00000000 EVAL_AUDIO_GetSampleCallBack
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:305    .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:309    .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:385    .rodata._ZL12c_FontNative:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:388    .rodata._ZL12c_FontNative:00000000 _ZL12c_FontNative
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:391    .text._GLOBAL__sub_I_g_LedTast:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:395    .text._GLOBAL__sub_I_g_LedTast:00000000 _GLOBAL__sub_I_g_LedTast
C:\Users\Alex\AppData\Local\Temp\ccZ7hhNw.s:418    .init_array:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vTaskStartScheduler
_ZN12AManagedTask6CreateEPKctm
_ZN9CFreeRTOS27InitHardwareForManagedTasksEv
_ZN24CLedHeartBeatSTM32F4DiscC1Em
_ZN24CLedHeartBeatSTM32F4DiscD1Ev
__dso_handle
__aeabi_atexit
_ZN21CT6963_GPIO_InterfaceC1Ev
_ZN21CT6963_GPIO_InterfaceD1Ev
_ZN6CMenueC1EP11CGraphicLCD
_ZN6CMenueD1Ev
