   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	g_LedTast
  19              		.section	.bss.g_LedTast,"aw",%nobits
  20              		.align	2
  23              	g_LedTast:
  24 0000 00000000 		.space	20
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.global	g_Display
  26              		.section	.bss.g_Display,"aw",%nobits
  27              		.align	2
  30              	g_Display:
  31 0000 00000000 		.space	8
  31      00000000 
  32              		.global	g_Menue
  33              		.section	.bss.g_Menue,"aw",%nobits
  34              		.align	2
  37              	g_Menue:
  38 0000 00000000 		.space	16
  38      00000000 
  38      00000000 
  38      00000000 
  39              		.global	g_FileHandler
  40              		.section	.bss.g_FileHandler,"aw",%nobits
  41              		.align	2
  44              	g_FileHandler:
  45 0000 00000000 		.space	1212
  45      00000000 
  45      00000000 
  45      00000000 
  45      00000000 
  46              		.section	.text.main,"ax",%progbits
  47              		.align	2
  48              		.global	main
  49              		.thumb
  50              		.thumb_func
  52              	main:
  53              	.LFB140:
  54              		.file 1 "../main.cpp"
   1:../main.cpp   **** /**
   2:../main.cpp   ****   ******************************************************************************
   3:../main.cpp   ****   * @file      	main.cpp
   4:../main.cpp   ****   * @author    	Tecnologic86
   5:../main.cpp   ****   * @version   	V0.0.0
   6:../main.cpp   ****   * @date      	14.02.12
   7:../main.cpp   ****   * @brief		main program file for Project: ThunderCryer
   8:../main.cpp   ****   ******************************************************************************
   9:../main.cpp   ****   */
  10:../main.cpp   **** 
  11:../main.cpp   **** /* Includes ------------------------------------------------------------------*/
  12:../main.cpp   **** #include "CFreeRTOS.h"
  13:../main.cpp   **** #include "CTask.h"
  14:../main.cpp   **** #include "ustime.h"
  15:../main.cpp   **** #include "CLedHeartBeatSTM32F4Disc.h"
  16:../main.cpp   **** #include "CMenue.h"
  17:../main.cpp   **** #include "CT6963GPIOInterface.h"
  18:../main.cpp   **** #include "CFileHandler.h"
  19:../main.cpp   **** #include "stm32f4xx_conf.h"
  20:../main.cpp   **** #include "stm32f4xx.h"
  21:../main.cpp   **** 
  22:../main.cpp   **** /* Private typedef -----------------------------------------------------------*/
  23:../main.cpp   **** /* Private define ------------------------------------------------------------*/
  24:../main.cpp   **** /* Private macro -------------------------------------------------------------*/
  25:../main.cpp   **** /* Private variables ---------------------------------------------------------*/
  26:../main.cpp   **** CLedHeartBeatSTM32F4Disc g_LedTast(500/portTICK_RATE_MS);
  27:../main.cpp   **** CT6963_GPIO_Interface g_Display;
  28:../main.cpp   **** CMenue	g_Menue(&g_Display);
  29:../main.cpp   **** CFileHandler g_FileHandler;
  30:../main.cpp   **** 
  31:../main.cpp   **** /* Private function prototypes -----------------------------------------------*/
  32:../main.cpp   **** extern "C" {
  33:../main.cpp   **** 	void vApplicationTickHook( void );
  34:../main.cpp   **** 	void vApplicationIdleHook( void );
  35:../main.cpp   **** 	void vApplicationMallocFailedHook( void );
  36:../main.cpp   **** 	void vApplicationStackOverflowHook( xTaskHandle *pxTask, signed char *pcTaskName );
  37:../main.cpp   **** } // extern "C"
  38:../main.cpp   **** /* Private functions ---------------------------------------------------------*/
  39:../main.cpp   **** 
  40:../main.cpp   **** 
  41:../main.cpp   **** 
  42:../main.cpp   **** /**
  43:../main.cpp   ****   * @brief  main function
  44:../main.cpp   ****   * @param  None
  45:../main.cpp   ****   * @retval None
  46:../main.cpp   ****   */
  47:../main.cpp   **** int main(void){
  55              		.loc 1 47 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 8
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 14, -4
  63              		.cfi_offset 7, -8
  64 0002 82B0     		sub	sp, sp, #8
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 16
  67 0004 00AF     		add	r7, sp, #0
  68              	.LCFI2:
  69              		.cfi_def_cfa_register 7
  70              	.LBB2:
  48:../main.cpp   **** 	unsigned int u;
  49:../main.cpp   **** 
  50:../main.cpp   **** 	/**
  51:../main.cpp   **** 	 * create Led Heartbeat task with minimal stack size and priority
  52:../main.cpp   **** 	 * 1 higher than idle task
  53:../main.cpp   **** 	 */
  54:../main.cpp   **** 	//g_LedTast.Create("Led Heartbeat",configMINIMAL_STACK_SIZE,tskIDLE_PRIORITY+5);
  55:../main.cpp   **** 	//g_Menue.Create("Menue",configMINIMAL_STACK_SIZE * 2,tskIDLE_PRIORITY+3);
  56:../main.cpp   **** 	//g_FileHandler.Create("FileHandler",configMINIMAL_STACK_SIZE * 10,tskIDLE_PRIORITY+1);
  57:../main.cpp   **** 
  58:../main.cpp   **** 	/**
  59:../main.cpp   **** 	 * Initialise the hardware for all Tasks and
  60:../main.cpp   **** 	 * then FreeRTOS takes control of execution
  61:../main.cpp   **** 	 */
  62:../main.cpp   **** 	//CFreeRTOS::InitHardwareForManagedTasks();
  63:../main.cpp   **** 	//CFreeRTOS::StartScheduler();
  64:../main.cpp   **** 
  65:../main.cpp   **** 	g_FileHandler.HardwareInit();
  71              		.loc 1 65 0
  72 0006 40F20000 		movw	r0, #:lower16:g_FileHandler
  73 000a C0F20000 		movt	r0, #:upper16:g_FileHandler
  74 000e FFF7FEFF 		bl	_ZN12CFileHandler12HardwareInitEv
  66:../main.cpp   **** 
  67:../main.cpp   **** 	g_FileHandler.Run();
  75              		.loc 1 67 0
  76 0012 40F20000 		movw	r0, #:lower16:g_FileHandler
  77 0016 C0F20000 		movt	r0, #:upper16:g_FileHandler
  78 001a FFF7FEFF 		bl	_ZN12CFileHandler3RunEv
  79              	.L2:
  68:../main.cpp   **** 
  69:../main.cpp   **** 
  70:../main.cpp   **** 	while(1){
  71:../main.cpp   **** 		u++;
  80              		.loc 1 71 0 discriminator 1
  81 001e 7B68     		ldr	r3, [r7, #4]
  82 0020 03F10103 		add	r3, r3, #1
  83 0024 7B60     		str	r3, [r7, #4]
  70:../main.cpp   **** 	while(1){
  84              		.loc 1 70 0 discriminator 1
  85 0026 FAE7     		b	.L2
  86              	.LBE2:
  87              		.cfi_endproc
  88              	.LFE140:
  90              		.section	.text.vApplicationTickHook,"ax",%progbits
  91              		.align	2
  92              		.global	vApplicationTickHook
  93              		.thumb
  94              		.thumb_func
  96              	vApplicationTickHook:
  97              	.LFB141:
  72:../main.cpp   **** 	}
  73:../main.cpp   **** 
  74:../main.cpp   **** 	return 0;
  75:../main.cpp   **** 
  76:../main.cpp   **** }
  77:../main.cpp   **** 
  78:../main.cpp   **** extern "C" {
  79:../main.cpp   **** 
  80:../main.cpp   **** 	// This FreeRTOS callback function gets called once per tick (default = 1000Hz).
  81:../main.cpp   **** 	// ----------------------------------------------------------------------------
  82:../main.cpp   **** 	void vApplicationTickHook( void ) {
  98              		.loc 1 82 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103 0000 80B4     		push	{r7}
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 4
 106              		.cfi_offset 7, -4
 107 0002 00AF     		add	r7, sp, #0
 108              	.LCFI4:
 109              		.cfi_def_cfa_register 7
  83:../main.cpp   **** 
  84:../main.cpp   **** 	}
 110              		.loc 1 84 0
 111 0004 BD46     		mov	sp, r7
 112 0006 80BC     		pop	{r7}
 113 0008 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE141:
 117 000a 00BF     		.section	.text.vApplicationIdleHook,"ax",%progbits
 118              		.align	2
 119              		.global	vApplicationIdleHook
 120              		.thumb
 121              		.thumb_func
 123              	vApplicationIdleHook:
 124              	.LFB142:
  85:../main.cpp   **** 
  86:../main.cpp   **** 	// This FreeRTOS call-back function gets when no other task is ready to execute.
  87:../main.cpp   **** 	// On a completely unloaded system this is getting called at over 2.5MHz!
  88:../main.cpp   **** 	// ----------------------------------------------------------------------------
  89:../main.cpp   **** 	void vApplicationIdleHook( void ) {
 125              		.loc 1 89 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 1, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130 0000 80B4     		push	{r7}
 131              	.LCFI5:
 132              		.cfi_def_cfa_offset 4
 133              		.cfi_offset 7, -4
 134 0002 00AF     		add	r7, sp, #0
 135              	.LCFI6:
 136              		.cfi_def_cfa_register 7
  90:../main.cpp   **** 
  91:../main.cpp   **** 	}
 137              		.loc 1 91 0
 138 0004 BD46     		mov	sp, r7
 139 0006 80BC     		pop	{r7}
 140 0008 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE142:
 144 000a 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 145              		.align	2
 146              		.global	vApplicationMallocFailedHook
 147              		.thumb
 148              		.thumb_func
 150              	vApplicationMallocFailedHook:
 151              	.LFB143:
  92:../main.cpp   **** 
  93:../main.cpp   **** 	// A required FreeRTOS function.
  94:../main.cpp   **** 	// ----------------------------------------------------------------------------
  95:../main.cpp   **** 	void vApplicationMallocFailedHook( void ) {
 152              		.loc 1 95 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157 0000 80B4     		push	{r7}
 158              	.LCFI7:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 00AF     		add	r7, sp, #0
 162              	.LCFI8:
 163              		.cfi_def_cfa_register 7
  96:../main.cpp   **** 		configASSERT( 0 );  // Latch on any failure / error.
  97:../main.cpp   **** 	}
 164              		.loc 1 97 0
 165 0004 BD46     		mov	sp, r7
 166 0006 80BC     		pop	{r7}
 167 0008 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE143:
 171 000a 00BF     		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 172              		.align	2
 173              		.global	vApplicationStackOverflowHook
 174              		.thumb
 175              		.thumb_func
 177              	vApplicationStackOverflowHook:
 178              	.LFB144:
  98:../main.cpp   **** 
  99:../main.cpp   **** 	// A required FreeRTOS function. gets called on stack overflow
 100:../main.cpp   **** 	// ----------------------------------------------------------------------------
 101:../main.cpp   **** 	void vApplicationStackOverflowHook( xTaskHandle *pxTask, signed char *pcTaskName ){
 179              		.loc 1 101 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 8
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 80B4     		push	{r7}
 185              	.LCFI9:
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 7, -4
 188 0002 83B0     		sub	sp, sp, #12
 189              	.LCFI10:
 190              		.cfi_def_cfa_offset 16
 191 0004 00AF     		add	r7, sp, #0
 192              	.LCFI11:
 193              		.cfi_def_cfa_register 7
 194 0006 7860     		str	r0, [r7, #4]
 195 0008 3960     		str	r1, [r7, #0]
 196              	.L7:
 102:../main.cpp   **** 		/* TODO, implement your code here */
 103:../main.cpp   **** 		while(1);
 197              		.loc 1 103 0 discriminator 1
 198 000a FEE7     		b	.L7
 199              		.cfi_endproc
 200              	.LFE144:
 202              		.section	.text.EVAL_AUDIO_GetSampleCallBack,"ax",%progbits
 203              		.align	2
 204              		.global	EVAL_AUDIO_GetSampleCallBack
 205              		.thumb
 206              		.thumb_func
 208              	EVAL_AUDIO_GetSampleCallBack:
 209              	.LFB145:
 104:../main.cpp   **** 	}
 105:../main.cpp   **** 
 106:../main.cpp   **** 	/* User Callbacks: user has to implement these functions in his code if
 107:../main.cpp   **** 	  they are needed. -----------------------------------------------------------*/
 108:../main.cpp   **** 
 109:../main.cpp   **** 	uint16_t EVAL_AUDIO_GetSampleCallBack(void){
 210              		.loc 1 109 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215 0000 80B4     		push	{r7}
 216              	.LCFI12:
 217              		.cfi_def_cfa_offset 4
 218              		.cfi_offset 7, -4
 219 0002 00AF     		add	r7, sp, #0
 220              	.LCFI13:
 221              		.cfi_def_cfa_register 7
 110:../main.cpp   **** 		return -1;
 222              		.loc 1 110 0
 223 0004 4FF6FF73 		movw	r3, #65535
 111:../main.cpp   **** 	}
 224              		.loc 1 111 0
 225 0008 1846     		mov	r0, r3
 226 000a BD46     		mov	sp, r7
 227 000c 80BC     		pop	{r7}
 228 000e 7047     		bx	lr
 229              		.cfi_endproc
 230              	.LFE145:
 232              		.section	.text.EVAL_AUDIO_TransferComplete_CallBack,"ax",%progbits
 233              		.align	2
 234              		.global	EVAL_AUDIO_TransferComplete_CallBack
 235              		.thumb
 236              		.thumb_func
 238              	EVAL_AUDIO_TransferComplete_CallBack:
 239              	.LFB146:
 112:../main.cpp   **** 
 113:../main.cpp   **** 	/* This function is called when the requested data has been completely transferred.
 114:../main.cpp   **** 	   In Normal mode (when  the define AUDIO_MAL_MODE_NORMAL is enabled) this function
 115:../main.cpp   **** 	   is called at the end of the whole audio file.
 116:../main.cpp   **** 	   In circular mode (when  the define AUDIO_MAL_MODE_CIRCULAR is enabled) this
 117:../main.cpp   **** 	   function is called at the end of the current buffer transmission. */
 118:../main.cpp   **** 	void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size){
 240              		.loc 1 118 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 245 0000 80B4     		push	{r7}
 246              	.LCFI14:
 247              		.cfi_def_cfa_offset 4
 248              		.cfi_offset 7, -4
 249 0002 83B0     		sub	sp, sp, #12
 250              	.LCFI15:
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              	.LCFI16:
 254              		.cfi_def_cfa_register 7
 255 0006 7860     		str	r0, [r7, #4]
 256 0008 3960     		str	r1, [r7, #0]
 119:../main.cpp   **** 
 120:../main.cpp   **** 	}
 257              		.loc 1 120 0
 258 000a 07F10C07 		add	r7, r7, #12
 259 000e BD46     		mov	sp, r7
 260 0010 80BC     		pop	{r7}
 261 0012 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE146:
 265              		.section	.text.EVAL_AUDIO_HalfTransfer_CallBack,"ax",%progbits
 266              		.align	2
 267              		.global	EVAL_AUDIO_HalfTransfer_CallBack
 268              		.thumb
 269              		.thumb_func
 271              	EVAL_AUDIO_HalfTransfer_CallBack:
 272              	.LFB147:
 121:../main.cpp   **** 
 122:../main.cpp   **** 	/* This function is called when half of the requested buffer has been transferred
 123:../main.cpp   **** 	   This callback is useful in Circular mode only (when AUDIO_MAL_MODE_CIRCULAR
 124:../main.cpp   **** 	   define is enabled)*/
 125:../main.cpp   **** 	void EVAL_AUDIO_HalfTransfer_CallBack(uint32_t pBuffer, uint32_t Size){
 273              		.loc 1 125 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278 0000 80B4     		push	{r7}
 279              	.LCFI17:
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 0002 83B0     		sub	sp, sp, #12
 283              	.LCFI18:
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              	.LCFI19:
 287              		.cfi_def_cfa_register 7
 288 0006 7860     		str	r0, [r7, #4]
 289 0008 3960     		str	r1, [r7, #0]
 126:../main.cpp   **** 
 127:../main.cpp   **** 	}
 290              		.loc 1 127 0
 291 000a 07F10C07 		add	r7, r7, #12
 292 000e BD46     		mov	sp, r7
 293 0010 80BC     		pop	{r7}
 294 0012 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE147:
 298              		.section	.text.EVAL_AUDIO_Error_CallBack,"ax",%progbits
 299              		.align	2
 300              		.global	EVAL_AUDIO_Error_CallBack
 301              		.thumb
 302              		.thumb_func
 304              	EVAL_AUDIO_Error_CallBack:
 305              	.LFB148:
 128:../main.cpp   **** 
 129:../main.cpp   **** 	/* This function is called when an Interrupt due to transfer error on or peripheral
 130:../main.cpp   **** 	   error occurs. */
 131:../main.cpp   **** 	void EVAL_AUDIO_Error_CallBack(void* pData){
 306              		.loc 1 131 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 8
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 311 0000 80B4     		push	{r7}
 312              	.LCFI20:
 313              		.cfi_def_cfa_offset 4
 314              		.cfi_offset 7, -4
 315 0002 83B0     		sub	sp, sp, #12
 316              	.LCFI21:
 317              		.cfi_def_cfa_offset 16
 318 0004 00AF     		add	r7, sp, #0
 319              	.LCFI22:
 320              		.cfi_def_cfa_register 7
 321 0006 7860     		str	r0, [r7, #4]
 132:../main.cpp   **** 
 133:../main.cpp   **** 	}
 322              		.loc 1 133 0
 323 0008 07F10C07 		add	r7, r7, #12
 324 000c BD46     		mov	sp, r7
 325 000e 80BC     		pop	{r7}
 326 0010 7047     		bx	lr
 327              		.cfi_endproc
 328              	.LFE148:
 330 0012 00BF     		.section	.text.Codec_TIMEOUT_UserCallback,"ax",%progbits
 331              		.align	2
 332              		.global	Codec_TIMEOUT_UserCallback
 333              		.thumb
 334              		.thumb_func
 336              	Codec_TIMEOUT_UserCallback:
 337              	.LFB149:
 134:../main.cpp   **** 
 135:../main.cpp   **** 	/* Codec_TIMEOUT_UserCallback() function is called whenever a timeout condition
 136:../main.cpp   **** 	   occurs during communication (waiting on an event that doesn't occur, bus
 137:../main.cpp   **** 	   errors, busy devices ...) on the Codec control interface (I2C).
 138:../main.cpp   **** 	   You can use the default timeout callback implementation by uncommenting the
 139:../main.cpp   **** 	   define USE_DEFAULT_TIMEOUT_CALLBACK in stm32f4_discovery_audio_codec.h file.
 140:../main.cpp   **** 	   Typically the user implementation of this callback should reset I2C peripheral
 141:../main.cpp   **** 	   and re-initialize communication or in worst case reset all the application. */
 142:../main.cpp   **** 	uint32_t Codec_TIMEOUT_UserCallback(void){
 338              		.loc 1 142 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343 0000 80B4     		push	{r7}
 344              	.LCFI23:
 345              		.cfi_def_cfa_offset 4
 346              		.cfi_offset 7, -4
 347 0002 00AF     		add	r7, sp, #0
 348              	.LCFI24:
 349              		.cfi_def_cfa_register 7
 143:../main.cpp   **** 		return -1;
 350              		.loc 1 143 0
 351 0004 4FF0FF33 		mov	r3, #-1
 144:../main.cpp   **** 	}
 352              		.loc 1 144 0
 353 0008 1846     		mov	r0, r3
 354 000a BD46     		mov	sp, r7
 355 000c 80BC     		pop	{r7}
 356 000e 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE149:
 360              		.section	.text.LIS302DL_TIMEOUT_UserCallback,"ax",%progbits
 361              		.align	2
 362              		.global	LIS302DL_TIMEOUT_UserCallback
 363              		.thumb
 364              		.thumb_func
 366              	LIS302DL_TIMEOUT_UserCallback:
 367              	.LFB150:
 145:../main.cpp   **** 
 146:../main.cpp   **** 	/* LIS302DL_TIMEOUT_UserCallback() function is called whenever a timeout condition
 147:../main.cpp   **** 	   occure during communication (waiting transmit data register empty flag(TXE)
 148:../main.cpp   **** 	   or waiting receive data register is not empty flag (RXNE)).
 149:../main.cpp   **** 	   You can use the default timeout callback implementation by uncommenting the
 150:../main.cpp   **** 	   define USE_DEFAULT_TIMEOUT_CALLBACK in stm32f4_discovery_lis302dl.h file.
 151:../main.cpp   **** 	   Typically the user implementation of this callback should reset MEMS peripheral
 152:../main.cpp   **** 	   and re-initialize communication or in worst case reset all the application. */
 153:../main.cpp   **** 	uint32_t LIS302DL_TIMEOUT_UserCallback(void){
 368              		.loc 1 153 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373 0000 80B4     		push	{r7}
 374              	.LCFI25:
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 0002 00AF     		add	r7, sp, #0
 378              	.LCFI26:
 379              		.cfi_def_cfa_register 7
 154:../main.cpp   **** 		return -1;
 380              		.loc 1 154 0
 381 0004 4FF0FF33 		mov	r3, #-1
 155:../main.cpp   **** 	}
 382              		.loc 1 155 0
 383 0008 1846     		mov	r0, r3
 384 000a BD46     		mov	sp, r7
 385 000c 80BC     		pop	{r7}
 386 000e 7047     		bx	lr
 387              		.cfi_endproc
 388              	.LFE150:
 390              		.section	.text._Z41__static_initialization_and_destruction_0ii,"ax",%progbits
 391              		.align	2
 392              		.thumb
 393              		.thumb_func
 395              	_Z41__static_initialization_and_destruction_0ii:
 396              	.LFB151:
 156:../main.cpp   **** } // extern "C"
 397              		.loc 1 156 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 8
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401 0000 80B5     		push	{r7, lr}
 402              	.LCFI27:
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 14, -4
 405              		.cfi_offset 7, -8
 406 0002 82B0     		sub	sp, sp, #8
 407              	.LCFI28:
 408              		.cfi_def_cfa_offset 16
 409 0004 00AF     		add	r7, sp, #0
 410              	.LCFI29:
 411              		.cfi_def_cfa_register 7
 412 0006 7860     		str	r0, [r7, #4]
 413 0008 3960     		str	r1, [r7, #0]
 414              		.loc 1 156 0
 415 000a 7B68     		ldr	r3, [r7, #4]
 416 000c 012B     		cmp	r3, #1
 417 000e 5ED1     		bne	.L14
 418              		.loc 1 156 0 is_stmt 0 discriminator 1
 419 0010 3A68     		ldr	r2, [r7, #0]
 420 0012 4FF6FF73 		movw	r3, #65535
 421 0016 9A42     		cmp	r2, r3
 422 0018 59D1     		bne	.L14
  26:../main.cpp   **** CLedHeartBeatSTM32F4Disc g_LedTast(500/portTICK_RATE_MS);
 423              		.loc 1 26 0 is_stmt 1
 424 001a 40F20000 		movw	r0, #:lower16:g_LedTast
 425 001e C0F20000 		movt	r0, #:upper16:g_LedTast
 426 0022 4FF03201 		mov	r1, #50
 427 0026 FFF7FEFF 		bl	_ZN24CLedHeartBeatSTM32F4DiscC1Em
 428 002a 40F20003 		movw	r3, #:lower16:_ZN24CLedHeartBeatSTM32F4DiscD1Ev
 429 002e C0F20003 		movt	r3, #:upper16:_ZN24CLedHeartBeatSTM32F4DiscD1Ev
 430 0032 40F20000 		movw	r0, #:lower16:g_LedTast
 431 0036 C0F20000 		movt	r0, #:upper16:g_LedTast
 432 003a 1946     		mov	r1, r3
 433 003c 40F20002 		movw	r2, #:lower16:__dso_handle
 434 0040 C0F20002 		movt	r2, #:upper16:__dso_handle
 435 0044 FFF7FEFF 		bl	__aeabi_atexit
  27:../main.cpp   **** CT6963_GPIO_Interface g_Display;
 436              		.loc 1 27 0
 437 0048 40F20000 		movw	r0, #:lower16:g_Display
 438 004c C0F20000 		movt	r0, #:upper16:g_Display
 439 0050 FFF7FEFF 		bl	_ZN21CT6963_GPIO_InterfaceC1Ev
 440 0054 40F20003 		movw	r3, #:lower16:_ZN21CT6963_GPIO_InterfaceD1Ev
 441 0058 C0F20003 		movt	r3, #:upper16:_ZN21CT6963_GPIO_InterfaceD1Ev
 442 005c 40F20000 		movw	r0, #:lower16:g_Display
 443 0060 C0F20000 		movt	r0, #:upper16:g_Display
 444 0064 1946     		mov	r1, r3
 445 0066 40F20002 		movw	r2, #:lower16:__dso_handle
 446 006a C0F20002 		movt	r2, #:upper16:__dso_handle
 447 006e FFF7FEFF 		bl	__aeabi_atexit
  28:../main.cpp   **** CMenue	g_Menue(&g_Display);
 448              		.loc 1 28 0
 449 0072 40F20000 		movw	r0, #:lower16:g_Menue
 450 0076 C0F20000 		movt	r0, #:upper16:g_Menue
 451 007a 40F20001 		movw	r1, #:lower16:g_Display
 452 007e C0F20001 		movt	r1, #:upper16:g_Display
 453 0082 FFF7FEFF 		bl	_ZN6CMenueC1EP11CGraphicLCD
 454 0086 40F20003 		movw	r3, #:lower16:_ZN6CMenueD1Ev
 455 008a C0F20003 		movt	r3, #:upper16:_ZN6CMenueD1Ev
 456 008e 40F20000 		movw	r0, #:lower16:g_Menue
 457 0092 C0F20000 		movt	r0, #:upper16:g_Menue
 458 0096 1946     		mov	r1, r3
 459 0098 40F20002 		movw	r2, #:lower16:__dso_handle
 460 009c C0F20002 		movt	r2, #:upper16:__dso_handle
 461 00a0 FFF7FEFF 		bl	__aeabi_atexit
  29:../main.cpp   **** CFileHandler g_FileHandler;
 462              		.loc 1 29 0
 463 00a4 40F20000 		movw	r0, #:lower16:g_FileHandler
 464 00a8 C0F20000 		movt	r0, #:upper16:g_FileHandler
 465 00ac FFF7FEFF 		bl	_ZN12CFileHandlerC1Ev
 466 00b0 40F20003 		movw	r3, #:lower16:_ZN12CFileHandlerD1Ev
 467 00b4 C0F20003 		movt	r3, #:upper16:_ZN12CFileHandlerD1Ev
 468 00b8 40F20000 		movw	r0, #:lower16:g_FileHandler
 469 00bc C0F20000 		movt	r0, #:upper16:g_FileHandler
 470 00c0 1946     		mov	r1, r3
 471 00c2 40F20002 		movw	r2, #:lower16:__dso_handle
 472 00c6 C0F20002 		movt	r2, #:upper16:__dso_handle
 473 00ca FFF7FEFF 		bl	__aeabi_atexit
 474              	.L14:
 475              		.loc 1 156 0
 476 00ce 07F10807 		add	r7, r7, #8
 477 00d2 BD46     		mov	sp, r7
 478 00d4 80BD     		pop	{r7, pc}
 479              		.cfi_endproc
 480              	.LFE151:
 482 00d6 00BF     		.section	.rodata._ZL12c_FontNative,"a",%progbits
 483              		.align	2
 486              	_ZL12c_FontNative:
 487 0000 00000000 		.space	24
 487      00000000 
 487      00000000 
 487      00000000 
 487      00000000 
 488              		.section	.text._GLOBAL__sub_I_g_LedTast,"ax",%progbits
 489              		.align	2
 490              		.thumb
 491              		.thumb_func
 493              	_GLOBAL__sub_I_g_LedTast:
 494              	.LFB152:
 495              		.loc 1 156 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 1, uses_anonymous_args = 0
 499 0000 80B5     		push	{r7, lr}
 500              	.LCFI30:
 501              		.cfi_def_cfa_offset 8
 502              		.cfi_offset 14, -4
 503              		.cfi_offset 7, -8
 504 0002 00AF     		add	r7, sp, #0
 505              	.LCFI31:
 506              		.cfi_def_cfa_register 7
 507              		.loc 1 156 0
 508 0004 4FF00100 		mov	r0, #1
 509 0008 4FF6FF71 		movw	r1, #65535
 510 000c FFF7FEFF 		bl	_Z41__static_initialization_and_destruction_0ii
 511 0010 80BD     		pop	{r7, pc}
 512              		.cfi_endproc
 513              	.LFE152:
 515 0012 00BF     		.section	.init_array,"aw",%init_array
 516              		.align	2
 517 0000 00000000 		.word	_GLOBAL__sub_I_g_LedTast(target1)
 518              		.text
 519              	.Letext0:
 520              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 521              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/../../Source/portable
 522              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\FreeRTOS\\Source\\include/task.h"
 523              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\GraphicLCD/CGraphicLCD.h"
 524              		.file 6 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
 525              		.file 7 "E:\\Desktop\\thundercyer-the-alarm-clock\\GraphicLCD/CT6963CDriver.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:23     .bss.g_LedTast:00000000 g_LedTast
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:20     .bss.g_LedTast:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:30     .bss.g_Display:00000000 g_Display
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:27     .bss.g_Display:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:37     .bss.g_Menue:00000000 g_Menue
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:34     .bss.g_Menue:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:44     .bss.g_FileHandler:00000000 g_FileHandler
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:41     .bss.g_FileHandler:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:47     .text.main:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:52     .text.main:00000000 main
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:91     .text.vApplicationTickHook:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:96     .text.vApplicationTickHook:00000000 vApplicationTickHook
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:118    .text.vApplicationIdleHook:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:123    .text.vApplicationIdleHook:00000000 vApplicationIdleHook
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:145    .text.vApplicationMallocFailedHook:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:150    .text.vApplicationMallocFailedHook:00000000 vApplicationMallocFailedHook
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:172    .text.vApplicationStackOverflowHook:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:177    .text.vApplicationStackOverflowHook:00000000 vApplicationStackOverflowHook
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:203    .text.EVAL_AUDIO_GetSampleCallBack:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:208    .text.EVAL_AUDIO_GetSampleCallBack:00000000 EVAL_AUDIO_GetSampleCallBack
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:233    .text.EVAL_AUDIO_TransferComplete_CallBack:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:238    .text.EVAL_AUDIO_TransferComplete_CallBack:00000000 EVAL_AUDIO_TransferComplete_CallBack
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:266    .text.EVAL_AUDIO_HalfTransfer_CallBack:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:271    .text.EVAL_AUDIO_HalfTransfer_CallBack:00000000 EVAL_AUDIO_HalfTransfer_CallBack
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:299    .text.EVAL_AUDIO_Error_CallBack:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:304    .text.EVAL_AUDIO_Error_CallBack:00000000 EVAL_AUDIO_Error_CallBack
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:331    .text.Codec_TIMEOUT_UserCallback:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:336    .text.Codec_TIMEOUT_UserCallback:00000000 Codec_TIMEOUT_UserCallback
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:361    .text.LIS302DL_TIMEOUT_UserCallback:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:366    .text.LIS302DL_TIMEOUT_UserCallback:00000000 LIS302DL_TIMEOUT_UserCallback
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:391    .text._Z41__static_initialization_and_destruction_0ii:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:395    .text._Z41__static_initialization_and_destruction_0ii:00000000 _Z41__static_initialization_and_destruction_0ii
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:483    .rodata._ZL12c_FontNative:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:486    .rodata._ZL12c_FontNative:00000000 _ZL12c_FontNative
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:489    .text._GLOBAL__sub_I_g_LedTast:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:493    .text._GLOBAL__sub_I_g_LedTast:00000000 _GLOBAL__sub_I_g_LedTast
C:\Users\Alex\AppData\Local\Temp\ccjdsD1W.s:516    .init_array:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN12CFileHandler12HardwareInitEv
_ZN12CFileHandler3RunEv
_ZN24CLedHeartBeatSTM32F4DiscC1Em
_ZN24CLedHeartBeatSTM32F4DiscD1Ev
__dso_handle
__aeabi_atexit
_ZN21CT6963_GPIO_InterfaceC1Ev
_ZN21CT6963_GPIO_InterfaceD1Ev
_ZN6CMenueC1EP11CGraphicLCD
_ZN6CMenueD1Ev
_ZN12CFileHandlerC1Ev
_ZN12CFileHandlerD1Ev
