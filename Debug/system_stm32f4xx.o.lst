   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"system_stm32f4xx.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SystemCoreClock
  19              		.section	.data.SystemCoreClock,"aw",%progbits
  20              		.align	2
  23              	SystemCoreClock:
  24 0000 007A030A 		.word	168000000
  25              		.global	AHBPrescTable
  26              		.section	.data.AHBPrescTable,"aw",%progbits
  27              		.align	2
  30              	AHBPrescTable:
  31 0000 00       		.byte	0
  32 0001 00       		.byte	0
  33 0002 00       		.byte	0
  34 0003 00       		.byte	0
  35 0004 00       		.byte	0
  36 0005 00       		.byte	0
  37 0006 00       		.byte	0
  38 0007 00       		.byte	0
  39 0008 01       		.byte	1
  40 0009 02       		.byte	2
  41 000a 03       		.byte	3
  42 000b 04       		.byte	4
  43 000c 06       		.byte	6
  44 000d 07       		.byte	7
  45 000e 08       		.byte	8
  46 000f 09       		.byte	9
  47              		.section	.text.SystemInit,"ax",%progbits
  48              		.align	2
  49              		.global	SystemInit
  50              		.thumb
  51              		.thumb_func
  53              	SystemInit:
  54              	.LFB110:
  55              		.file 1 "../system_stm32f4xx.c"
   1:../system_stm32f4xx.c **** /**
   2:../system_stm32f4xx.c ****   ******************************************************************************
   3:../system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../system_stm32f4xx.c ****   * @version V1.0.0
   6:../system_stm32f4xx.c ****   * @date    19-September-2011
   7:../system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../system_stm32f4xx.c ****   *          This file contains the system clock configuration for STM32F4xx devices,
   9:../system_stm32f4xx.c ****   *          and is generated by the clock configuration tool
  10:../system_stm32f4xx.c ****   *          stm32f4xx_Clock_Configuration_V1.0.0.xls
  11:../system_stm32f4xx.c ****   *             
  12:../system_stm32f4xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:../system_stm32f4xx.c ****   *     user application:
  14:../system_stm32f4xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../system_stm32f4xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../system_stm32f4xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:../system_stm32f4xx.c ****   *                      This function is called at startup just after reset and 
  18:../system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  19:../system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  20:../system_stm32f4xx.c ****   *
  21:../system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  23:../system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  24:../system_stm32f4xx.c ****   *                                     
  25:../system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  27:../system_stm32f4xx.c ****   *                                 during program execution.
  28:../system_stm32f4xx.c ****   *
  29:../system_stm32f4xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:../system_stm32f4xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  31:../system_stm32f4xx.c ****   *    configure the system clock before to branch to main program.
  32:../system_stm32f4xx.c ****   *
  33:../system_stm32f4xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../system_stm32f4xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:../system_stm32f4xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../system_stm32f4xx.c ****   *
  37:../system_stm32f4xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz, refer to "HSE_VALUE" define
  38:../system_stm32f4xx.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
  39:../system_stm32f4xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../system_stm32f4xx.c ****   *    value to your own configuration.
  41:../system_stm32f4xx.c ****   *
  42:../system_stm32f4xx.c ****   * 5. This file configures the system clock as follows:
  43:../system_stm32f4xx.c ****   *=============================================================================
  44:../system_stm32f4xx.c ****   *=============================================================================
  45:../system_stm32f4xx.c ****   *        Supported STM32F4xx device revision    | Rev A
  46:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  47:../system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
  48:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  49:../system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 168000000
  50:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  51:../system_stm32f4xx.c ****   *        HCLK(Hz)                               | 168000000
  52:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  53:../system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  54:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  55:../system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
  56:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  57:../system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
  58:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  59:../system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 8000000
  60:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  61:../system_stm32f4xx.c ****   *        PLL_M                                  | 8
  62:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  63:../system_stm32f4xx.c ****   *        PLL_N                                  | 336
  64:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  65:../system_stm32f4xx.c ****   *        PLL_P                                  | 2
  66:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  67:../system_stm32f4xx.c ****   *        PLL_Q                                  | 7
  68:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  69:../system_stm32f4xx.c ****   *        PLLI2S_N                               | 192
  70:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  71:../system_stm32f4xx.c ****   *        PLLI2S_R                               | 5
  72:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  73:../system_stm32f4xx.c ****   *        I2S input clock(Hz)                    | 38400000
  74:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  75:../system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
  76:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  77:../system_stm32f4xx.c ****   *        High Performance mode                  | Enabled
  78:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  79:../system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
  80:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  81:../system_stm32f4xx.c ****   *        Prefetch Buffer                        | OFF
  82:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  83:../system_stm32f4xx.c ****   *        Instruction cache                      | ON
  84:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  85:../system_stm32f4xx.c ****   *        Data cache                             | ON
  86:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  87:../system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Enabled
  88:../system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
  89:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  90:../system_stm32f4xx.c ****   *=============================================================================
  91:../system_stm32f4xx.c ****   ****************************************************************************** 
  92:../system_stm32f4xx.c ****   * @attention
  93:../system_stm32f4xx.c ****   *
  94:../system_stm32f4xx.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  95:../system_stm32f4xx.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  96:../system_stm32f4xx.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  97:../system_stm32f4xx.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  98:../system_stm32f4xx.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  99:../system_stm32f4xx.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 100:../system_stm32f4xx.c ****   *
 101:../system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 102:../system_stm32f4xx.c ****   ******************************************************************************
 103:../system_stm32f4xx.c ****   */
 104:../system_stm32f4xx.c **** 
 105:../system_stm32f4xx.c **** /** @addtogroup CMSIS
 106:../system_stm32f4xx.c ****   * @{
 107:../system_stm32f4xx.c ****   */
 108:../system_stm32f4xx.c **** 
 109:../system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
 110:../system_stm32f4xx.c ****   * @{
 111:../system_stm32f4xx.c ****   */  
 112:../system_stm32f4xx.c ****   
 113:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 114:../system_stm32f4xx.c ****   * @{
 115:../system_stm32f4xx.c ****   */
 116:../system_stm32f4xx.c **** 
 117:../system_stm32f4xx.c **** #include "stm32f4xx.h"
 118:../system_stm32f4xx.c **** 
 119:../system_stm32f4xx.c **** /**
 120:../system_stm32f4xx.c ****   * @}
 121:../system_stm32f4xx.c ****   */
 122:../system_stm32f4xx.c **** 
 123:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 124:../system_stm32f4xx.c ****   * @{
 125:../system_stm32f4xx.c ****   */
 126:../system_stm32f4xx.c **** 
 127:../system_stm32f4xx.c **** /**
 128:../system_stm32f4xx.c ****   * @}
 129:../system_stm32f4xx.c ****   */
 130:../system_stm32f4xx.c **** 
 131:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 132:../system_stm32f4xx.c ****   * @{
 133:../system_stm32f4xx.c ****   */
 134:../system_stm32f4xx.c **** 
 135:../system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 136:../system_stm32f4xx.c ****      on STM324xG_EVAL board as data memory  */
 137:../system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
 138:../system_stm32f4xx.c **** 
 139:../system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 140:../system_stm32f4xx.c ****      Internal SRAM. */
 141:../system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 142:../system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 143:../system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 144:../system_stm32f4xx.c **** 
 145:../system_stm32f4xx.c **** 
 146:../system_stm32f4xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 147:../system_stm32f4xx.c **** #define PLL_M      8
 148:../system_stm32f4xx.c **** #define PLL_N      336
 149:../system_stm32f4xx.c **** 
 150:../system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 151:../system_stm32f4xx.c **** #define PLL_P      2
 152:../system_stm32f4xx.c **** 
 153:../system_stm32f4xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 154:../system_stm32f4xx.c **** #define PLL_Q      7
 155:../system_stm32f4xx.c **** 
 156:../system_stm32f4xx.c **** /* PLLI2S_VCO = (HSE_VALUE Or HSI_VALUE / PLL_M) * PLLI2S_N
 157:../system_stm32f4xx.c ****    I2SCLK = PLLI2S_VCO / PLLI2S_R */
 158:../system_stm32f4xx.c **** #define PLLI2S_N   192
 159:../system_stm32f4xx.c **** #define PLLI2S_R   5
 160:../system_stm32f4xx.c **** 
 161:../system_stm32f4xx.c **** /**
 162:../system_stm32f4xx.c ****   * @}
 163:../system_stm32f4xx.c ****   */
 164:../system_stm32f4xx.c **** 
 165:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 166:../system_stm32f4xx.c ****   * @{
 167:../system_stm32f4xx.c ****   */
 168:../system_stm32f4xx.c **** 
 169:../system_stm32f4xx.c **** /**
 170:../system_stm32f4xx.c ****   * @}
 171:../system_stm32f4xx.c ****   */
 172:../system_stm32f4xx.c **** 
 173:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 174:../system_stm32f4xx.c ****   * @{
 175:../system_stm32f4xx.c ****   */
 176:../system_stm32f4xx.c **** 
 177:../system_stm32f4xx.c ****   uint32_t SystemCoreClock = 168000000;
 178:../system_stm32f4xx.c **** 
 179:../system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 180:../system_stm32f4xx.c **** 
 181:../system_stm32f4xx.c **** /**
 182:../system_stm32f4xx.c ****   * @}
 183:../system_stm32f4xx.c ****   */
 184:../system_stm32f4xx.c **** 
 185:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 186:../system_stm32f4xx.c ****   * @{
 187:../system_stm32f4xx.c ****   */
 188:../system_stm32f4xx.c **** 
 189:../system_stm32f4xx.c **** static void SetSysClock(void);
 190:../system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 191:../system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 192:../system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 193:../system_stm32f4xx.c **** 
 194:../system_stm32f4xx.c **** /**
 195:../system_stm32f4xx.c ****   * @}
 196:../system_stm32f4xx.c ****   */
 197:../system_stm32f4xx.c **** 
 198:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 199:../system_stm32f4xx.c ****   * @{
 200:../system_stm32f4xx.c ****   */
 201:../system_stm32f4xx.c **** 
 202:../system_stm32f4xx.c **** /**
 203:../system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 204:../system_stm32f4xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 205:../system_stm32f4xx.c ****   *         SystemFrequency variable.
 206:../system_stm32f4xx.c ****   * @param  None
 207:../system_stm32f4xx.c ****   * @retval None
 208:../system_stm32f4xx.c ****   */
 209:../system_stm32f4xx.c **** void SystemInit(void)
 210:../system_stm32f4xx.c **** {
  56              		.loc 1 210 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60 0000 80B5     		push	{r7, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 14, -4
  64              		.cfi_offset 7, -8
  65 0002 00AF     		add	r7, sp, #0
  66              	.LCFI1:
  67              		.cfi_def_cfa_register 7
 211:../system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 212:../system_stm32f4xx.c ****   /* Set HSION bit */
 213:../system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  68              		.loc 1 213 0
  69 0004 4FF46053 		mov	r3, #14336
  70 0008 C4F20203 		movt	r3, 16386
  71 000c 4FF46052 		mov	r2, #14336
  72 0010 C4F20202 		movt	r2, 16386
  73 0014 1268     		ldr	r2, [r2, #0]
  74 0016 42F00102 		orr	r2, r2, #1
  75 001a 1A60     		str	r2, [r3, #0]
 214:../system_stm32f4xx.c **** 
 215:../system_stm32f4xx.c ****   /* Reset CFGR register */
 216:../system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  76              		.loc 1 216 0
  77 001c 4FF46053 		mov	r3, #14336
  78 0020 C4F20203 		movt	r3, 16386
  79 0024 4FF00002 		mov	r2, #0
  80 0028 9A60     		str	r2, [r3, #8]
 217:../system_stm32f4xx.c **** 
 218:../system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 219:../system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  81              		.loc 1 219 0
  82 002a 4FF46053 		mov	r3, #14336
  83 002e C4F20203 		movt	r3, 16386
  84 0032 4FF46052 		mov	r2, #14336
  85 0036 C4F20202 		movt	r2, 16386
  86 003a 1268     		ldr	r2, [r2, #0]
  87 003c 22F08472 		bic	r2, r2, #17301504
  88 0040 22F48032 		bic	r2, r2, #65536
  89 0044 1A60     		str	r2, [r3, #0]
 220:../system_stm32f4xx.c **** 
 221:../system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 222:../system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  90              		.loc 1 222 0
  91 0046 4FF46053 		mov	r3, #14336
  92 004a C4F20203 		movt	r3, 16386
  93 004e 43F21002 		movw	r2, #12304
  94 0052 C2F20042 		movt	r2, 9216
  95 0056 5A60     		str	r2, [r3, #4]
 223:../system_stm32f4xx.c **** 
 224:../system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 225:../system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  96              		.loc 1 225 0
  97 0058 4FF46053 		mov	r3, #14336
  98 005c C4F20203 		movt	r3, 16386
  99 0060 4FF46052 		mov	r2, #14336
 100 0064 C4F20202 		movt	r2, 16386
 101 0068 1268     		ldr	r2, [r2, #0]
 102 006a 22F48022 		bic	r2, r2, #262144
 103 006e 1A60     		str	r2, [r3, #0]
 226:../system_stm32f4xx.c **** 
 227:../system_stm32f4xx.c ****   /* Disable all interrupts */
 228:../system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 104              		.loc 1 228 0
 105 0070 4FF46053 		mov	r3, #14336
 106 0074 C4F20203 		movt	r3, 16386
 107 0078 4FF00002 		mov	r2, #0
 108 007c DA60     		str	r2, [r3, #12]
 229:../system_stm32f4xx.c **** 
 230:../system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 231:../system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 232:../system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 233:../system_stm32f4xx.c ****          
 234:../system_stm32f4xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 235:../system_stm32f4xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 236:../system_stm32f4xx.c ****   SetSysClock();
 109              		.loc 1 236 0
 110 007e FFF7FEFF 		bl	SetSysClock
 237:../system_stm32f4xx.c **** 
 238:../system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 239:../system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 240:../system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 241:../system_stm32f4xx.c **** #else
 242:../system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 111              		.loc 1 242 0
 112 0082 4FF46D43 		mov	r3, #60672
 113 0086 CEF20003 		movt	r3, 57344
 114 008a 4FF00062 		mov	r2, #134217728
 115 008e 9A60     		str	r2, [r3, #8]
 243:../system_stm32f4xx.c **** #endif
 244:../system_stm32f4xx.c **** }
 116              		.loc 1 244 0
 117 0090 80BD     		pop	{r7, pc}
 118              		.cfi_endproc
 119              	.LFE110:
 121 0092 00BF     		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 122              		.align	2
 123              		.global	SystemCoreClockUpdate
 124              		.thumb
 125              		.thumb_func
 127              	SystemCoreClockUpdate:
 128              	.LFB111:
 245:../system_stm32f4xx.c **** 
 246:../system_stm32f4xx.c **** /**
 247:../system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 248:../system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 249:../system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 250:../system_stm32f4xx.c ****   *         other parameters.
 251:../system_stm32f4xx.c ****   *           
 252:../system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 253:../system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 254:../system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 255:../system_stm32f4xx.c ****   *     
 256:../system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 257:../system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 258:../system_stm32f4xx.c ****   *           constant and the selected clock source:
 259:../system_stm32f4xx.c ****   *             
 260:../system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 261:../system_stm32f4xx.c ****   *                                              
 262:../system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 263:../system_stm32f4xx.c ****   *                          
 264:../system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 265:../system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 266:../system_stm32f4xx.c ****   *         
 267:../system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 268:../system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 269:../system_stm32f4xx.c ****   *             in voltage and temperature.   
 270:../system_stm32f4xx.c ****   *    
 271:../system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 272:../system_stm32f4xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 273:../system_stm32f4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 274:../system_stm32f4xx.c ****   *              have wrong result.
 275:../system_stm32f4xx.c ****   *                
 276:../system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 277:../system_stm32f4xx.c ****   *           value for HSE crystal.
 278:../system_stm32f4xx.c ****   *     
 279:../system_stm32f4xx.c ****   * @param  None
 280:../system_stm32f4xx.c ****   * @retval None
 281:../system_stm32f4xx.c ****   */
 282:../system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 283:../system_stm32f4xx.c **** {
 129              		.loc 1 283 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 24
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0000 80B4     		push	{r7}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0002 87B0     		sub	sp, sp, #28
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 32
 141 0004 00AF     		add	r7, sp, #0
 142              	.LCFI4:
 143              		.cfi_def_cfa_register 7
 284:../system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 144              		.loc 1 284 0
 145 0006 4FF00003 		mov	r3, #0
 146 000a 3B61     		str	r3, [r7, #16]
 147 000c 4FF00003 		mov	r3, #0
 148 0010 7B61     		str	r3, [r7, #20]
 149 0012 4FF00203 		mov	r3, #2
 150 0016 FB60     		str	r3, [r7, #12]
 151 0018 4FF00003 		mov	r3, #0
 152 001c BB60     		str	r3, [r7, #8]
 153 001e 4FF00203 		mov	r3, #2
 154 0022 7B60     		str	r3, [r7, #4]
 285:../system_stm32f4xx.c ****   
 286:../system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 287:../system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 155              		.loc 1 287 0
 156 0024 4FF46053 		mov	r3, #14336
 157 0028 C4F20203 		movt	r3, 16386
 158 002c 9B68     		ldr	r3, [r3, #8]
 159 002e 03F00C03 		and	r3, r3, #12
 160 0032 3B61     		str	r3, [r7, #16]
 288:../system_stm32f4xx.c **** 
 289:../system_stm32f4xx.c ****   switch (tmp)
 161              		.loc 1 289 0
 162 0034 3B69     		ldr	r3, [r7, #16]
 163 0036 042B     		cmp	r3, #4
 164 0038 0DD0     		beq	.L5
 165 003a 082B     		cmp	r3, #8
 166 003c 15D0     		beq	.L6
 167 003e 002B     		cmp	r3, #0
 168 0040 6BD1     		bne	.L10
 169              	.L4:
 290:../system_stm32f4xx.c ****   {
 291:../system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 292:../system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 170              		.loc 1 292 0
 171 0042 40F20003 		movw	r3, #:lower16:SystemCoreClock
 172 0046 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 173 004a 4FF41052 		mov	r2, #9216
 174 004e C0F2F402 		movt	r2, 244
 175 0052 1A60     		str	r2, [r3, #0]
 293:../system_stm32f4xx.c ****       break;
 176              		.loc 1 293 0
 177 0054 6BE0     		b	.L7
 178              	.L5:
 294:../system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 295:../system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 179              		.loc 1 295 0
 180 0056 40F20003 		movw	r3, #:lower16:SystemCoreClock
 181 005a C0F20003 		movt	r3, #:upper16:SystemCoreClock
 182 005e 4FF49052 		mov	r2, #4608
 183 0062 C0F27A02 		movt	r2, 122
 184 0066 1A60     		str	r2, [r3, #0]
 296:../system_stm32f4xx.c ****       break;
 185              		.loc 1 296 0
 186 0068 61E0     		b	.L7
 187              	.L6:
 297:../system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 298:../system_stm32f4xx.c **** 
 299:../system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 300:../system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 301:../system_stm32f4xx.c ****          */    
 302:../system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 188              		.loc 1 302 0
 189 006a 4FF46053 		mov	r3, #14336
 190 006e C4F20203 		movt	r3, 16386
 191 0072 5B68     		ldr	r3, [r3, #4]
 192 0074 03F48003 		and	r3, r3, #4194304
 193 0078 4FEA9353 		lsr	r3, r3, #22
 194 007c BB60     		str	r3, [r7, #8]
 303:../system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 195              		.loc 1 303 0
 196 007e 4FF46053 		mov	r3, #14336
 197 0082 C4F20203 		movt	r3, 16386
 198 0086 5B68     		ldr	r3, [r3, #4]
 199 0088 03F03F03 		and	r3, r3, #63
 200 008c 7B60     		str	r3, [r7, #4]
 304:../system_stm32f4xx.c ****       
 305:../system_stm32f4xx.c ****       if (pllsource != 0)
 201              		.loc 1 305 0
 202 008e BB68     		ldr	r3, [r7, #8]
 203 0090 002B     		cmp	r3, #0
 204 0092 15D0     		beq	.L8
 306:../system_stm32f4xx.c ****       {
 307:../system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 308:../system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 205              		.loc 1 308 0
 206 0094 4FF49053 		mov	r3, #4608
 207 0098 C0F27A03 		movt	r3, 122
 208 009c 7A68     		ldr	r2, [r7, #4]
 209 009e B3FBF2F2 		udiv	r2, r3, r2
 210 00a2 4FF46053 		mov	r3, #14336
 211 00a6 C4F20203 		movt	r3, 16386
 212 00aa 5B68     		ldr	r3, [r3, #4]
 213 00ac 1946     		mov	r1, r3
 214 00ae 47F6C073 		movw	r3, #32704
 215 00b2 0B40     		ands	r3, r3, r1
 216 00b4 4FEA9313 		lsr	r3, r3, #6
 217 00b8 03FB02F3 		mul	r3, r3, r2
 218 00bc 7B61     		str	r3, [r7, #20]
 219 00be 14E0     		b	.L9
 220              	.L8:
 309:../system_stm32f4xx.c ****       }
 310:../system_stm32f4xx.c ****       else
 311:../system_stm32f4xx.c ****       {
 312:../system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 313:../system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 221              		.loc 1 313 0
 222 00c0 4FF41053 		mov	r3, #9216
 223 00c4 C0F2F403 		movt	r3, 244
 224 00c8 7A68     		ldr	r2, [r7, #4]
 225 00ca B3FBF2F2 		udiv	r2, r3, r2
 226 00ce 4FF46053 		mov	r3, #14336
 227 00d2 C4F20203 		movt	r3, 16386
 228 00d6 5B68     		ldr	r3, [r3, #4]
 229 00d8 1946     		mov	r1, r3
 230 00da 47F6C073 		movw	r3, #32704
 231 00de 0B40     		ands	r3, r3, r1
 232 00e0 4FEA9313 		lsr	r3, r3, #6
 233 00e4 03FB02F3 		mul	r3, r3, r2
 234 00e8 7B61     		str	r3, [r7, #20]
 235              	.L9:
 314:../system_stm32f4xx.c ****       }
 315:../system_stm32f4xx.c **** 
 316:../system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 236              		.loc 1 316 0
 237 00ea 4FF46053 		mov	r3, #14336
 238 00ee C4F20203 		movt	r3, 16386
 239 00f2 5B68     		ldr	r3, [r3, #4]
 240 00f4 03F44033 		and	r3, r3, #196608
 241 00f8 4FEA1343 		lsr	r3, r3, #16
 242 00fc 03F10103 		add	r3, r3, #1
 243 0100 4FEA4303 		lsl	r3, r3, #1
 244 0104 FB60     		str	r3, [r7, #12]
 317:../system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 245              		.loc 1 317 0
 246 0106 7A69     		ldr	r2, [r7, #20]
 247 0108 FB68     		ldr	r3, [r7, #12]
 248 010a B2FBF3F2 		udiv	r2, r2, r3
 249 010e 40F20003 		movw	r3, #:lower16:SystemCoreClock
 250 0112 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 251 0116 1A60     		str	r2, [r3, #0]
 318:../system_stm32f4xx.c ****       break;
 252              		.loc 1 318 0
 253 0118 09E0     		b	.L7
 254              	.L10:
 319:../system_stm32f4xx.c ****     default:
 320:../system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 255              		.loc 1 320 0
 256 011a 40F20003 		movw	r3, #:lower16:SystemCoreClock
 257 011e C0F20003 		movt	r3, #:upper16:SystemCoreClock
 258 0122 4FF41052 		mov	r2, #9216
 259 0126 C0F2F402 		movt	r2, 244
 260 012a 1A60     		str	r2, [r3, #0]
 321:../system_stm32f4xx.c ****       break;
 261              		.loc 1 321 0
 262 012c 00BF     		nop
 263              	.L7:
 322:../system_stm32f4xx.c ****   }
 323:../system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 324:../system_stm32f4xx.c ****   /* Get HCLK prescaler */
 325:../system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 264              		.loc 1 325 0
 265 012e 4FF46053 		mov	r3, #14336
 266 0132 C4F20203 		movt	r3, 16386
 267 0136 9B68     		ldr	r3, [r3, #8]
 268 0138 03F0F003 		and	r3, r3, #240
 269 013c 4FEA1312 		lsr	r2, r3, #4
 270 0140 40F20003 		movw	r3, #:lower16:AHBPrescTable
 271 0144 C0F20003 		movt	r3, #:upper16:AHBPrescTable
 272 0148 9B5C     		ldrb	r3, [r3, r2]
 273 014a DBB2     		uxtb	r3, r3
 274 014c 3B61     		str	r3, [r7, #16]
 326:../system_stm32f4xx.c ****   /* HCLK frequency */
 327:../system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 275              		.loc 1 327 0
 276 014e 40F20003 		movw	r3, #:lower16:SystemCoreClock
 277 0152 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 278 0156 1A68     		ldr	r2, [r3, #0]
 279 0158 3B69     		ldr	r3, [r7, #16]
 280 015a 22FA03F2 		lsr	r2, r2, r3
 281 015e 40F20003 		movw	r3, #:lower16:SystemCoreClock
 282 0162 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 283 0166 1A60     		str	r2, [r3, #0]
 328:../system_stm32f4xx.c **** }
 284              		.loc 1 328 0
 285 0168 07F11C07 		add	r7, r7, #28
 286 016c BD46     		mov	sp, r7
 287 016e 80BC     		pop	{r7}
 288 0170 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE111:
 292 0172 00BF     		.section	.text.SetSysClock,"ax",%progbits
 293              		.align	2
 294              		.thumb
 295              		.thumb_func
 297              	SetSysClock:
 298              	.LFB112:
 329:../system_stm32f4xx.c **** 
 330:../system_stm32f4xx.c **** /**
 331:../system_stm32f4xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 332:../system_stm32f4xx.c ****   *         AHB/APBx prescalers and Flash settings
 333:../system_stm32f4xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 334:../system_stm32f4xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 335:../system_stm32f4xx.c ****   * @param  None
 336:../system_stm32f4xx.c ****   * @retval None
 337:../system_stm32f4xx.c ****   */
 338:../system_stm32f4xx.c **** static void SetSysClock(void)
 339:../system_stm32f4xx.c **** {
 299              		.loc 1 339 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              	.LCFI5:
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0002 83B0     		sub	sp, sp, #12
 309              	.LCFI6:
 310              		.cfi_def_cfa_offset 16
 311 0004 00AF     		add	r7, sp, #0
 312              	.LCFI7:
 313              		.cfi_def_cfa_register 7
 340:../system_stm32f4xx.c **** /******************************************************************************/
 341:../system_stm32f4xx.c **** /*            PLL (clocked by HSE) used as System clock source                */
 342:../system_stm32f4xx.c **** /******************************************************************************/
 343:../system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 314              		.loc 1 343 0
 315 0006 4FF00003 		mov	r3, #0
 316 000a 7B60     		str	r3, [r7, #4]
 317 000c 4FF00003 		mov	r3, #0
 318 0010 3B60     		str	r3, [r7, #0]
 344:../system_stm32f4xx.c ****   
 345:../system_stm32f4xx.c ****   /* Enable HSE */
 346:../system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 319              		.loc 1 346 0
 320 0012 4FF46053 		mov	r3, #14336
 321 0016 C4F20203 		movt	r3, 16386
 322 001a 4FF46052 		mov	r2, #14336
 323 001e C4F20202 		movt	r2, 16386
 324 0022 1268     		ldr	r2, [r2, #0]
 325 0024 42F48032 		orr	r2, r2, #65536
 326 0028 1A60     		str	r2, [r3, #0]
 327              	.L13:
 347:../system_stm32f4xx.c ****  
 348:../system_stm32f4xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 349:../system_stm32f4xx.c ****   do
 350:../system_stm32f4xx.c ****   {
 351:../system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 328              		.loc 1 351 0 discriminator 1
 329 002a 4FF46053 		mov	r3, #14336
 330 002e C4F20203 		movt	r3, 16386
 331 0032 1B68     		ldr	r3, [r3, #0]
 332 0034 03F40033 		and	r3, r3, #131072
 333 0038 3B60     		str	r3, [r7, #0]
 352:../system_stm32f4xx.c ****     StartUpCounter++;
 334              		.loc 1 352 0 discriminator 1
 335 003a 7B68     		ldr	r3, [r7, #4]
 336 003c 03F10103 		add	r3, r3, #1
 337 0040 7B60     		str	r3, [r7, #4]
 353:../system_stm32f4xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 338              		.loc 1 353 0 discriminator 1
 339 0042 3B68     		ldr	r3, [r7, #0]
 340 0044 002B     		cmp	r3, #0
 341 0046 03D1     		bne	.L12
 342 0048 7B68     		ldr	r3, [r7, #4]
 343 004a B3F5A06F 		cmp	r3, #1280
 344 004e ECD1     		bne	.L13
 345              	.L12:
 354:../system_stm32f4xx.c **** 
 355:../system_stm32f4xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 346              		.loc 1 355 0
 347 0050 4FF46053 		mov	r3, #14336
 348 0054 C4F20203 		movt	r3, 16386
 349 0058 1B68     		ldr	r3, [r3, #0]
 350 005a 03F40033 		and	r3, r3, #131072
 351 005e 002B     		cmp	r3, #0
 352 0060 03D0     		beq	.L14
 356:../system_stm32f4xx.c ****   {
 357:../system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x01;
 353              		.loc 1 357 0
 354 0062 4FF00103 		mov	r3, #1
 355 0066 3B60     		str	r3, [r7, #0]
 356 0068 02E0     		b	.L15
 357              	.L14:
 358:../system_stm32f4xx.c ****   }
 359:../system_stm32f4xx.c ****   else
 360:../system_stm32f4xx.c ****   {
 361:../system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x00;
 358              		.loc 1 361 0
 359 006a 4FF00003 		mov	r3, #0
 360 006e 3B60     		str	r3, [r7, #0]
 361              	.L15:
 362:../system_stm32f4xx.c ****   }
 363:../system_stm32f4xx.c **** 
 364:../system_stm32f4xx.c ****   if (HSEStatus == (uint32_t)0x01)
 362              		.loc 1 364 0
 363 0070 3B68     		ldr	r3, [r7, #0]
 364 0072 012B     		cmp	r3, #1
 365 0074 40F08280 		bne	.L16
 365:../system_stm32f4xx.c ****   {
 366:../system_stm32f4xx.c ****     /* Enable high performance mode, System frequency up to 168 MHz */
 367:../system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 366              		.loc 1 367 0
 367 0078 4FF46053 		mov	r3, #14336
 368 007c C4F20203 		movt	r3, 16386
 369 0080 4FF46052 		mov	r2, #14336
 370 0084 C4F20202 		movt	r2, 16386
 371 0088 126C     		ldr	r2, [r2, #64]
 372 008a 42F08052 		orr	r2, r2, #268435456
 373 008e 1A64     		str	r2, [r3, #64]
 368:../system_stm32f4xx.c ****     PWR->CR |= PWR_CR_PMODE;  
 374              		.loc 1 368 0
 375 0090 4FF4E043 		mov	r3, #28672
 376 0094 C4F20003 		movt	r3, 16384
 377 0098 4FF4E042 		mov	r2, #28672
 378 009c C4F20002 		movt	r2, 16384
 379 00a0 1268     		ldr	r2, [r2, #0]
 380 00a2 42F48042 		orr	r2, r2, #16384
 381 00a6 1A60     		str	r2, [r3, #0]
 369:../system_stm32f4xx.c **** 
 370:../system_stm32f4xx.c ****     /* HCLK = SYSCLK / 1*/
 371:../system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 382              		.loc 1 371 0
 383 00a8 4FF46053 		mov	r3, #14336
 384 00ac C4F20203 		movt	r3, 16386
 385 00b0 4FF46052 		mov	r2, #14336
 386 00b4 C4F20202 		movt	r2, 16386
 387 00b8 9268     		ldr	r2, [r2, #8]
 388 00ba 9A60     		str	r2, [r3, #8]
 372:../system_stm32f4xx.c ****       
 373:../system_stm32f4xx.c ****     /* PCLK2 = HCLK / 2*/
 374:../system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 389              		.loc 1 374 0
 390 00bc 4FF46053 		mov	r3, #14336
 391 00c0 C4F20203 		movt	r3, 16386
 392 00c4 4FF46052 		mov	r2, #14336
 393 00c8 C4F20202 		movt	r2, 16386
 394 00cc 9268     		ldr	r2, [r2, #8]
 395 00ce 42F40042 		orr	r2, r2, #32768
 396 00d2 9A60     		str	r2, [r3, #8]
 375:../system_stm32f4xx.c ****     
 376:../system_stm32f4xx.c ****     /* PCLK1 = HCLK / 4*/
 377:../system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 397              		.loc 1 377 0
 398 00d4 4FF46053 		mov	r3, #14336
 399 00d8 C4F20203 		movt	r3, 16386
 400 00dc 4FF46052 		mov	r2, #14336
 401 00e0 C4F20202 		movt	r2, 16386
 402 00e4 9268     		ldr	r2, [r2, #8]
 403 00e6 42F4A052 		orr	r2, r2, #5120
 404 00ea 9A60     		str	r2, [r3, #8]
 378:../system_stm32f4xx.c **** 
 379:../system_stm32f4xx.c ****     /* Configure the main PLL */
 380:../system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 405              		.loc 1 380 0
 406 00ec 4FF46053 		mov	r3, #14336
 407 00f0 C4F20203 		movt	r3, 16386
 408 00f4 45F20842 		movw	r2, #21512
 409 00f8 C0F24072 		movt	r2, 1856
 410 00fc 5A60     		str	r2, [r3, #4]
 381:../system_stm32f4xx.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 382:../system_stm32f4xx.c **** 
 383:../system_stm32f4xx.c ****     /* Enable the main PLL */
 384:../system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 411              		.loc 1 384 0
 412 00fe 4FF46053 		mov	r3, #14336
 413 0102 C4F20203 		movt	r3, 16386
 414 0106 4FF46052 		mov	r2, #14336
 415 010a C4F20202 		movt	r2, 16386
 416 010e 1268     		ldr	r2, [r2, #0]
 417 0110 42F08072 		orr	r2, r2, #16777216
 418 0114 1A60     		str	r2, [r3, #0]
 385:../system_stm32f4xx.c **** 
 386:../system_stm32f4xx.c ****     /* Wait till the main PLL is ready */
 387:../system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 419              		.loc 1 387 0
 420 0116 00BF     		nop
 421              	.L17:
 422              		.loc 1 387 0 is_stmt 0 discriminator 1
 423 0118 4FF46053 		mov	r3, #14336
 424 011c C4F20203 		movt	r3, 16386
 425 0120 1B68     		ldr	r3, [r3, #0]
 426 0122 03F00073 		and	r3, r3, #33554432
 427 0126 002B     		cmp	r3, #0
 428 0128 F6D0     		beq	.L17
 388:../system_stm32f4xx.c ****     {
 389:../system_stm32f4xx.c ****     }
 390:../system_stm32f4xx.c ****    
 391:../system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 392:../system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 429              		.loc 1 392 0 is_stmt 1
 430 012a 4FF47053 		mov	r3, #15360
 431 012e C4F20203 		movt	r3, 16386
 432 0132 40F20562 		movw	r2, #1541
 433 0136 1A60     		str	r2, [r3, #0]
 393:../system_stm32f4xx.c **** 
 394:../system_stm32f4xx.c ****     /* Select the main PLL as system clock source */
 395:../system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 434              		.loc 1 395 0
 435 0138 4FF46053 		mov	r3, #14336
 436 013c C4F20203 		movt	r3, 16386
 437 0140 4FF46052 		mov	r2, #14336
 438 0144 C4F20202 		movt	r2, 16386
 439 0148 9268     		ldr	r2, [r2, #8]
 440 014a 22F00302 		bic	r2, r2, #3
 441 014e 9A60     		str	r2, [r3, #8]
 396:../system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 442              		.loc 1 396 0
 443 0150 4FF46053 		mov	r3, #14336
 444 0154 C4F20203 		movt	r3, 16386
 445 0158 4FF46052 		mov	r2, #14336
 446 015c C4F20202 		movt	r2, 16386
 447 0160 9268     		ldr	r2, [r2, #8]
 448 0162 42F00202 		orr	r2, r2, #2
 449 0166 9A60     		str	r2, [r3, #8]
 397:../system_stm32f4xx.c **** 
 398:../system_stm32f4xx.c ****     /* Wait till the main PLL is used as system clock source */
 399:../system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 450              		.loc 1 399 0
 451 0168 00BF     		nop
 452              	.L18:
 453              		.loc 1 399 0 is_stmt 0 discriminator 1
 454 016a 4FF46053 		mov	r3, #14336
 455 016e C4F20203 		movt	r3, 16386
 456 0172 9B68     		ldr	r3, [r3, #8]
 457 0174 03F00C03 		and	r3, r3, #12
 458 0178 082B     		cmp	r3, #8
 459 017a F6D1     		bne	.L18
 460              	.L16:
 400:../system_stm32f4xx.c ****     {
 401:../system_stm32f4xx.c ****     }
 402:../system_stm32f4xx.c ****   }
 403:../system_stm32f4xx.c ****   else
 404:../system_stm32f4xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 405:../system_stm32f4xx.c ****          configuration. User can add here some code to deal with this error */
 406:../system_stm32f4xx.c ****   }
 407:../system_stm32f4xx.c **** 
 408:../system_stm32f4xx.c **** /******************************************************************************/
 409:../system_stm32f4xx.c **** /*                        I2S clock configuration                             */
 410:../system_stm32f4xx.c **** /******************************************************************************/
 411:../system_stm32f4xx.c ****   /* PLLI2S clock used as I2S clock source */
 412:../system_stm32f4xx.c ****   RCC->CFGR &= ~RCC_CFGR_I2SSRC;
 461              		.loc 1 412 0 is_stmt 1
 462 017c 4FF46053 		mov	r3, #14336
 463 0180 C4F20203 		movt	r3, 16386
 464 0184 4FF46052 		mov	r2, #14336
 465 0188 C4F20202 		movt	r2, 16386
 466 018c 9268     		ldr	r2, [r2, #8]
 467 018e 22F40002 		bic	r2, r2, #8388608
 468 0192 9A60     		str	r2, [r3, #8]
 413:../system_stm32f4xx.c **** 
 414:../system_stm32f4xx.c ****   /* Configure PLLI2S */
 415:../system_stm32f4xx.c ****   RCC->PLLI2SCFGR = (PLLI2S_N << 6) | (PLLI2S_R << 28);
 469              		.loc 1 415 0
 470 0194 4FF46053 		mov	r3, #14336
 471 0198 C4F20203 		movt	r3, 16386
 472 019c 4FF44052 		mov	r2, #12288
 473 01a0 C5F20002 		movt	r2, 20480
 474 01a4 C3F88420 		str	r2, [r3, #132]
 416:../system_stm32f4xx.c **** 
 417:../system_stm32f4xx.c ****   /* Enable PLLI2S */
 418:../system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_PLLI2SON);
 475              		.loc 1 418 0
 476 01a8 4FF46053 		mov	r3, #14336
 477 01ac C4F20203 		movt	r3, 16386
 478 01b0 4FF46052 		mov	r2, #14336
 479 01b4 C4F20202 		movt	r2, 16386
 480 01b8 1268     		ldr	r2, [r2, #0]
 481 01ba 42F08062 		orr	r2, r2, #67108864
 482 01be 1A60     		str	r2, [r3, #0]
 419:../system_stm32f4xx.c **** 
 420:../system_stm32f4xx.c ****   /* Wait till PLLI2S is ready */
 421:../system_stm32f4xx.c ****   while((RCC->CR & RCC_CR_PLLI2SRDY) == 0)
 483              		.loc 1 421 0
 484 01c0 00BF     		nop
 485              	.L19:
 486              		.loc 1 421 0 is_stmt 0 discriminator 1
 487 01c2 4FF46053 		mov	r3, #14336
 488 01c6 C4F20203 		movt	r3, 16386
 489 01ca 1B68     		ldr	r3, [r3, #0]
 490 01cc 03F00063 		and	r3, r3, #134217728
 491 01d0 002B     		cmp	r3, #0
 492 01d2 F6D0     		beq	.L19
 422:../system_stm32f4xx.c ****   {
 423:../system_stm32f4xx.c ****   }
 424:../system_stm32f4xx.c **** }
 493              		.loc 1 424 0 is_stmt 1
 494 01d4 07F10C07 		add	r7, r7, #12
 495 01d8 BD46     		mov	sp, r7
 496 01da 80BC     		pop	{r7}
 497 01dc 7047     		bx	lr
 498              		.cfi_endproc
 499              	.LFE112:
 501 01de 00BF     		.text
 502              	.Letext0:
 503              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 504              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
 505              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 506              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/system_stm32f
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:23     .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:20     .data.SystemCoreClock:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:30     .data.AHBPrescTable:00000000 AHBPrescTable
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:27     .data.AHBPrescTable:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:48     .text.SystemInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:53     .text.SystemInit:00000000 SystemInit
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:297    .text.SetSysClock:00000000 SetSysClock
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:122    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:127    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\Alex\AppData\Local\Temp\ccSpHqek.s:293    .text.SetSysClock:00000000 $t
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
