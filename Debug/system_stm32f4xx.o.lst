   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"system_stm32f4xx.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SystemCoreClock
  19              		.data
  20              		.align	2
  23              	SystemCoreClock:
  24 0000 007A030A 		.word	168000000
  25              		.global	AHBPrescTable
  26              		.align	2
  29              	AHBPrescTable:
  30 0004 00       		.byte	0
  31 0005 00       		.byte	0
  32 0006 00       		.byte	0
  33 0007 00       		.byte	0
  34 0008 00       		.byte	0
  35 0009 00       		.byte	0
  36 000a 00       		.byte	0
  37 000b 00       		.byte	0
  38 000c 01       		.byte	1
  39 000d 02       		.byte	2
  40 000e 03       		.byte	3
  41 000f 04       		.byte	4
  42 0010 06       		.byte	6
  43 0011 07       		.byte	7
  44 0012 08       		.byte	8
  45 0013 09       		.byte	9
  46              		.text
  47              		.align	2
  48              		.global	SystemInit
  49              		.thumb
  50              		.thumb_func
  52              	SystemInit:
  53              	.LFB110:
  54              		.file 1 "../system_stm32f4xx.c"
   1:../system_stm32f4xx.c **** /**
   2:../system_stm32f4xx.c ****   ******************************************************************************
   3:../system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../system_stm32f4xx.c ****   * @version V1.0.0
   6:../system_stm32f4xx.c ****   * @date    19-September-2011
   7:../system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../system_stm32f4xx.c ****   *          This file contains the system clock configuration for STM32F4xx devices,
   9:../system_stm32f4xx.c ****   *          and is generated by the clock configuration tool
  10:../system_stm32f4xx.c ****   *          stm32f4xx_Clock_Configuration_V1.0.0.xls
  11:../system_stm32f4xx.c ****   *             
  12:../system_stm32f4xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:../system_stm32f4xx.c ****   *     user application:
  14:../system_stm32f4xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../system_stm32f4xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../system_stm32f4xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:../system_stm32f4xx.c ****   *                      This function is called at startup just after reset and 
  18:../system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  19:../system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  20:../system_stm32f4xx.c ****   *
  21:../system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  23:../system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  24:../system_stm32f4xx.c ****   *                                     
  25:../system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  27:../system_stm32f4xx.c ****   *                                 during program execution.
  28:../system_stm32f4xx.c ****   *
  29:../system_stm32f4xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:../system_stm32f4xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  31:../system_stm32f4xx.c ****   *    configure the system clock before to branch to main program.
  32:../system_stm32f4xx.c ****   *
  33:../system_stm32f4xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../system_stm32f4xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:../system_stm32f4xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../system_stm32f4xx.c ****   *
  37:../system_stm32f4xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz, refer to "HSE_VALUE" define
  38:../system_stm32f4xx.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
  39:../system_stm32f4xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../system_stm32f4xx.c ****   *    value to your own configuration.
  41:../system_stm32f4xx.c ****   *
  42:../system_stm32f4xx.c ****   * 5. This file configures the system clock as follows:
  43:../system_stm32f4xx.c ****   *=============================================================================
  44:../system_stm32f4xx.c ****   *=============================================================================
  45:../system_stm32f4xx.c ****   *        Supported STM32F4xx device revision    | Rev A
  46:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  47:../system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
  48:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  49:../system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 168000000
  50:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  51:../system_stm32f4xx.c ****   *        HCLK(Hz)                               | 168000000
  52:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  53:../system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  54:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  55:../system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
  56:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  57:../system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
  58:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  59:../system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 8000000
  60:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  61:../system_stm32f4xx.c ****   *        PLL_M                                  | 8
  62:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  63:../system_stm32f4xx.c ****   *        PLL_N                                  | 336
  64:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  65:../system_stm32f4xx.c ****   *        PLL_P                                  | 2
  66:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  67:../system_stm32f4xx.c ****   *        PLL_Q                                  | 7
  68:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  69:../system_stm32f4xx.c ****   *        PLLI2S_N                               | 192
  70:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  71:../system_stm32f4xx.c ****   *        PLLI2S_R                               | 5
  72:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  73:../system_stm32f4xx.c ****   *        I2S input clock(Hz)                    | 38400000
  74:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  75:../system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
  76:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  77:../system_stm32f4xx.c ****   *        High Performance mode                  | Enabled
  78:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  79:../system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
  80:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  81:../system_stm32f4xx.c ****   *        Prefetch Buffer                        | OFF
  82:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  83:../system_stm32f4xx.c ****   *        Instruction cache                      | ON
  84:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  85:../system_stm32f4xx.c ****   *        Data cache                             | ON
  86:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  87:../system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Enabled
  88:../system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
  89:../system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  90:../system_stm32f4xx.c ****   *=============================================================================
  91:../system_stm32f4xx.c ****   ****************************************************************************** 
  92:../system_stm32f4xx.c ****   * @attention
  93:../system_stm32f4xx.c ****   *
  94:../system_stm32f4xx.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  95:../system_stm32f4xx.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  96:../system_stm32f4xx.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  97:../system_stm32f4xx.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  98:../system_stm32f4xx.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  99:../system_stm32f4xx.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 100:../system_stm32f4xx.c ****   *
 101:../system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 102:../system_stm32f4xx.c ****   ******************************************************************************
 103:../system_stm32f4xx.c ****   */
 104:../system_stm32f4xx.c **** 
 105:../system_stm32f4xx.c **** /** @addtogroup CMSIS
 106:../system_stm32f4xx.c ****   * @{
 107:../system_stm32f4xx.c ****   */
 108:../system_stm32f4xx.c **** 
 109:../system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
 110:../system_stm32f4xx.c ****   * @{
 111:../system_stm32f4xx.c ****   */  
 112:../system_stm32f4xx.c ****   
 113:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 114:../system_stm32f4xx.c ****   * @{
 115:../system_stm32f4xx.c ****   */
 116:../system_stm32f4xx.c **** 
 117:../system_stm32f4xx.c **** #include "stm32f4xx.h"
 118:../system_stm32f4xx.c **** 
 119:../system_stm32f4xx.c **** /**
 120:../system_stm32f4xx.c ****   * @}
 121:../system_stm32f4xx.c ****   */
 122:../system_stm32f4xx.c **** 
 123:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 124:../system_stm32f4xx.c ****   * @{
 125:../system_stm32f4xx.c ****   */
 126:../system_stm32f4xx.c **** 
 127:../system_stm32f4xx.c **** /**
 128:../system_stm32f4xx.c ****   * @}
 129:../system_stm32f4xx.c ****   */
 130:../system_stm32f4xx.c **** 
 131:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 132:../system_stm32f4xx.c ****   * @{
 133:../system_stm32f4xx.c ****   */
 134:../system_stm32f4xx.c **** 
 135:../system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 136:../system_stm32f4xx.c ****      on STM324xG_EVAL board as data memory  */
 137:../system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
 138:../system_stm32f4xx.c **** 
 139:../system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 140:../system_stm32f4xx.c ****      Internal SRAM. */
 141:../system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 142:../system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 143:../system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 144:../system_stm32f4xx.c **** 
 145:../system_stm32f4xx.c **** 
 146:../system_stm32f4xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 147:../system_stm32f4xx.c **** #define PLL_M      8
 148:../system_stm32f4xx.c **** #define PLL_N      336
 149:../system_stm32f4xx.c **** 
 150:../system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 151:../system_stm32f4xx.c **** #define PLL_P      2
 152:../system_stm32f4xx.c **** 
 153:../system_stm32f4xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 154:../system_stm32f4xx.c **** #define PLL_Q      7
 155:../system_stm32f4xx.c **** 
 156:../system_stm32f4xx.c **** /* PLLI2S_VCO = (HSE_VALUE Or HSI_VALUE / PLL_M) * PLLI2S_N
 157:../system_stm32f4xx.c ****    I2SCLK = PLLI2S_VCO / PLLI2S_R */
 158:../system_stm32f4xx.c **** #define PLLI2S_N   192
 159:../system_stm32f4xx.c **** #define PLLI2S_R   5
 160:../system_stm32f4xx.c **** 
 161:../system_stm32f4xx.c **** /**
 162:../system_stm32f4xx.c ****   * @}
 163:../system_stm32f4xx.c ****   */
 164:../system_stm32f4xx.c **** 
 165:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 166:../system_stm32f4xx.c ****   * @{
 167:../system_stm32f4xx.c ****   */
 168:../system_stm32f4xx.c **** 
 169:../system_stm32f4xx.c **** /**
 170:../system_stm32f4xx.c ****   * @}
 171:../system_stm32f4xx.c ****   */
 172:../system_stm32f4xx.c **** 
 173:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 174:../system_stm32f4xx.c ****   * @{
 175:../system_stm32f4xx.c ****   */
 176:../system_stm32f4xx.c **** 
 177:../system_stm32f4xx.c ****   uint32_t SystemCoreClock = 168000000;
 178:../system_stm32f4xx.c **** 
 179:../system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 180:../system_stm32f4xx.c **** 
 181:../system_stm32f4xx.c **** /**
 182:../system_stm32f4xx.c ****   * @}
 183:../system_stm32f4xx.c ****   */
 184:../system_stm32f4xx.c **** 
 185:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 186:../system_stm32f4xx.c ****   * @{
 187:../system_stm32f4xx.c ****   */
 188:../system_stm32f4xx.c **** 
 189:../system_stm32f4xx.c **** static void SetSysClock(void);
 190:../system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 191:../system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 192:../system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 193:../system_stm32f4xx.c **** 
 194:../system_stm32f4xx.c **** /**
 195:../system_stm32f4xx.c ****   * @}
 196:../system_stm32f4xx.c ****   */
 197:../system_stm32f4xx.c **** 
 198:../system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 199:../system_stm32f4xx.c ****   * @{
 200:../system_stm32f4xx.c ****   */
 201:../system_stm32f4xx.c **** 
 202:../system_stm32f4xx.c **** /**
 203:../system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 204:../system_stm32f4xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 205:../system_stm32f4xx.c ****   *         SystemFrequency variable.
 206:../system_stm32f4xx.c ****   * @param  None
 207:../system_stm32f4xx.c ****   * @retval None
 208:../system_stm32f4xx.c ****   */
 209:../system_stm32f4xx.c **** void SystemInit(void)
 210:../system_stm32f4xx.c **** {
  55              		.loc 1 210 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 14, -4
  63              		.cfi_offset 7, -8
  64 0002 00AF     		add	r7, sp, #0
  65              	.LCFI1:
  66              		.cfi_def_cfa_register 7
 211:../system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 212:../system_stm32f4xx.c ****   /* Set HSION bit */
 213:../system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  67              		.loc 1 213 0
  68 0004 4FF46053 		mov	r3, #14336
  69 0008 C4F20203 		movt	r3, 16386
  70 000c 4FF46052 		mov	r2, #14336
  71 0010 C4F20202 		movt	r2, 16386
  72 0014 1268     		ldr	r2, [r2, #0]
  73 0016 42F00102 		orr	r2, r2, #1
  74 001a 1A60     		str	r2, [r3, #0]
 214:../system_stm32f4xx.c **** 
 215:../system_stm32f4xx.c ****   /* Reset CFGR register */
 216:../system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  75              		.loc 1 216 0
  76 001c 4FF46053 		mov	r3, #14336
  77 0020 C4F20203 		movt	r3, 16386
  78 0024 4FF00002 		mov	r2, #0
  79 0028 9A60     		str	r2, [r3, #8]
 217:../system_stm32f4xx.c **** 
 218:../system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 219:../system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  80              		.loc 1 219 0
  81 002a 4FF46053 		mov	r3, #14336
  82 002e C4F20203 		movt	r3, 16386
  83 0032 4FF46052 		mov	r2, #14336
  84 0036 C4F20202 		movt	r2, 16386
  85 003a 1268     		ldr	r2, [r2, #0]
  86 003c 22F08472 		bic	r2, r2, #17301504
  87 0040 22F48032 		bic	r2, r2, #65536
  88 0044 1A60     		str	r2, [r3, #0]
 220:../system_stm32f4xx.c **** 
 221:../system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 222:../system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  89              		.loc 1 222 0
  90 0046 4FF46053 		mov	r3, #14336
  91 004a C4F20203 		movt	r3, 16386
  92 004e 43F21002 		movw	r2, #12304
  93 0052 C2F20042 		movt	r2, 9216
  94 0056 5A60     		str	r2, [r3, #4]
 223:../system_stm32f4xx.c **** 
 224:../system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 225:../system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  95              		.loc 1 225 0
  96 0058 4FF46053 		mov	r3, #14336
  97 005c C4F20203 		movt	r3, 16386
  98 0060 4FF46052 		mov	r2, #14336
  99 0064 C4F20202 		movt	r2, 16386
 100 0068 1268     		ldr	r2, [r2, #0]
 101 006a 22F48022 		bic	r2, r2, #262144
 102 006e 1A60     		str	r2, [r3, #0]
 226:../system_stm32f4xx.c **** 
 227:../system_stm32f4xx.c ****   /* Disable all interrupts */
 228:../system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 103              		.loc 1 228 0
 104 0070 4FF46053 		mov	r3, #14336
 105 0074 C4F20203 		movt	r3, 16386
 106 0078 4FF00002 		mov	r2, #0
 107 007c DA60     		str	r2, [r3, #12]
 229:../system_stm32f4xx.c **** 
 230:../system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 231:../system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 232:../system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 233:../system_stm32f4xx.c ****          
 234:../system_stm32f4xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 235:../system_stm32f4xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 236:../system_stm32f4xx.c ****   SetSysClock();
 108              		.loc 1 236 0
 109 007e 00F0C3F8 		bl	SetSysClock
 237:../system_stm32f4xx.c **** 
 238:../system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 239:../system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 240:../system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 241:../system_stm32f4xx.c **** #else
 242:../system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 110              		.loc 1 242 0
 111 0082 4FF46D43 		mov	r3, #60672
 112 0086 CEF20003 		movt	r3, 57344
 113 008a 4FF00062 		mov	r2, #134217728
 114 008e 9A60     		str	r2, [r3, #8]
 243:../system_stm32f4xx.c **** #endif
 244:../system_stm32f4xx.c **** }
 115              		.loc 1 244 0
 116 0090 80BD     		pop	{r7, pc}
 117              		.cfi_endproc
 118              	.LFE110:
 120 0092 00BF     		.align	2
 121              		.global	SystemCoreClockUpdate
 122              		.thumb
 123              		.thumb_func
 125              	SystemCoreClockUpdate:
 126              	.LFB111:
 245:../system_stm32f4xx.c **** 
 246:../system_stm32f4xx.c **** /**
 247:../system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 248:../system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 249:../system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 250:../system_stm32f4xx.c ****   *         other parameters.
 251:../system_stm32f4xx.c ****   *           
 252:../system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 253:../system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 254:../system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 255:../system_stm32f4xx.c ****   *     
 256:../system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 257:../system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 258:../system_stm32f4xx.c ****   *           constant and the selected clock source:
 259:../system_stm32f4xx.c ****   *             
 260:../system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 261:../system_stm32f4xx.c ****   *                                              
 262:../system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 263:../system_stm32f4xx.c ****   *                          
 264:../system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 265:../system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 266:../system_stm32f4xx.c ****   *         
 267:../system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 268:../system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 269:../system_stm32f4xx.c ****   *             in voltage and temperature.   
 270:../system_stm32f4xx.c ****   *    
 271:../system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 272:../system_stm32f4xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 273:../system_stm32f4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 274:../system_stm32f4xx.c ****   *              have wrong result.
 275:../system_stm32f4xx.c ****   *                
 276:../system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 277:../system_stm32f4xx.c ****   *           value for HSE crystal.
 278:../system_stm32f4xx.c ****   *     
 279:../system_stm32f4xx.c ****   * @param  None
 280:../system_stm32f4xx.c ****   * @retval None
 281:../system_stm32f4xx.c ****   */
 282:../system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 283:../system_stm32f4xx.c **** {
 127              		.loc 1 283 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 24
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132 0094 80B4     		push	{r7}
 133              	.LCFI2:
 134              		.cfi_def_cfa_offset 4
 135              		.cfi_offset 7, -4
 136 0096 87B0     		sub	sp, sp, #28
 137              	.LCFI3:
 138              		.cfi_def_cfa_offset 32
 139 0098 00AF     		add	r7, sp, #0
 140              	.LCFI4:
 141              		.cfi_def_cfa_register 7
 284:../system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 142              		.loc 1 284 0
 143 009a 4FF00003 		mov	r3, #0
 144 009e 3B61     		str	r3, [r7, #16]
 145 00a0 4FF00003 		mov	r3, #0
 146 00a4 7B61     		str	r3, [r7, #20]
 147 00a6 4FF00203 		mov	r3, #2
 148 00aa FB60     		str	r3, [r7, #12]
 149 00ac 4FF00003 		mov	r3, #0
 150 00b0 BB60     		str	r3, [r7, #8]
 151 00b2 4FF00203 		mov	r3, #2
 152 00b6 7B60     		str	r3, [r7, #4]
 285:../system_stm32f4xx.c ****   
 286:../system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 287:../system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 153              		.loc 1 287 0
 154 00b8 4FF46053 		mov	r3, #14336
 155 00bc C4F20203 		movt	r3, 16386
 156 00c0 9B68     		ldr	r3, [r3, #8]
 157 00c2 03F00C03 		and	r3, r3, #12
 158 00c6 3B61     		str	r3, [r7, #16]
 288:../system_stm32f4xx.c **** 
 289:../system_stm32f4xx.c ****   switch (tmp)
 159              		.loc 1 289 0
 160 00c8 3B69     		ldr	r3, [r7, #16]
 161 00ca 042B     		cmp	r3, #4
 162 00cc 0DD0     		beq	.L5
 163 00ce 082B     		cmp	r3, #8
 164 00d0 15D0     		beq	.L6
 165 00d2 002B     		cmp	r3, #0
 166 00d4 6BD1     		bne	.L10
 167              	.L4:
 290:../system_stm32f4xx.c ****   {
 291:../system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 292:../system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 168              		.loc 1 292 0
 169 00d6 40F20003 		movw	r3, #:lower16:SystemCoreClock
 170 00da C0F20003 		movt	r3, #:upper16:SystemCoreClock
 171 00de 4FF41052 		mov	r2, #9216
 172 00e2 C0F2F402 		movt	r2, 244
 173 00e6 1A60     		str	r2, [r3, #0]
 293:../system_stm32f4xx.c ****       break;
 174              		.loc 1 293 0
 175 00e8 6BE0     		b	.L7
 176              	.L5:
 294:../system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 295:../system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 177              		.loc 1 295 0
 178 00ea 40F20003 		movw	r3, #:lower16:SystemCoreClock
 179 00ee C0F20003 		movt	r3, #:upper16:SystemCoreClock
 180 00f2 4FF49052 		mov	r2, #4608
 181 00f6 C0F27A02 		movt	r2, 122
 182 00fa 1A60     		str	r2, [r3, #0]
 296:../system_stm32f4xx.c ****       break;
 183              		.loc 1 296 0
 184 00fc 61E0     		b	.L7
 185              	.L6:
 297:../system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 298:../system_stm32f4xx.c **** 
 299:../system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 300:../system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 301:../system_stm32f4xx.c ****          */    
 302:../system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 186              		.loc 1 302 0
 187 00fe 4FF46053 		mov	r3, #14336
 188 0102 C4F20203 		movt	r3, 16386
 189 0106 5B68     		ldr	r3, [r3, #4]
 190 0108 03F48003 		and	r3, r3, #4194304
 191 010c 4FEA9353 		lsr	r3, r3, #22
 192 0110 BB60     		str	r3, [r7, #8]
 303:../system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 193              		.loc 1 303 0
 194 0112 4FF46053 		mov	r3, #14336
 195 0116 C4F20203 		movt	r3, 16386
 196 011a 5B68     		ldr	r3, [r3, #4]
 197 011c 03F03F03 		and	r3, r3, #63
 198 0120 7B60     		str	r3, [r7, #4]
 304:../system_stm32f4xx.c ****       
 305:../system_stm32f4xx.c ****       if (pllsource != 0)
 199              		.loc 1 305 0
 200 0122 BB68     		ldr	r3, [r7, #8]
 201 0124 002B     		cmp	r3, #0
 202 0126 15D0     		beq	.L8
 306:../system_stm32f4xx.c ****       {
 307:../system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 308:../system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 203              		.loc 1 308 0
 204 0128 4FF49053 		mov	r3, #4608
 205 012c C0F27A03 		movt	r3, 122
 206 0130 7A68     		ldr	r2, [r7, #4]
 207 0132 B3FBF2F2 		udiv	r2, r3, r2
 208 0136 4FF46053 		mov	r3, #14336
 209 013a C4F20203 		movt	r3, 16386
 210 013e 5B68     		ldr	r3, [r3, #4]
 211 0140 1946     		mov	r1, r3
 212 0142 47F6C073 		movw	r3, #32704
 213 0146 0B40     		ands	r3, r3, r1
 214 0148 4FEA9313 		lsr	r3, r3, #6
 215 014c 03FB02F3 		mul	r3, r3, r2
 216 0150 7B61     		str	r3, [r7, #20]
 217 0152 14E0     		b	.L9
 218              	.L8:
 309:../system_stm32f4xx.c ****       }
 310:../system_stm32f4xx.c ****       else
 311:../system_stm32f4xx.c ****       {
 312:../system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 313:../system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 219              		.loc 1 313 0
 220 0154 4FF41053 		mov	r3, #9216
 221 0158 C0F2F403 		movt	r3, 244
 222 015c 7A68     		ldr	r2, [r7, #4]
 223 015e B3FBF2F2 		udiv	r2, r3, r2
 224 0162 4FF46053 		mov	r3, #14336
 225 0166 C4F20203 		movt	r3, 16386
 226 016a 5B68     		ldr	r3, [r3, #4]
 227 016c 1946     		mov	r1, r3
 228 016e 47F6C073 		movw	r3, #32704
 229 0172 0B40     		ands	r3, r3, r1
 230 0174 4FEA9313 		lsr	r3, r3, #6
 231 0178 03FB02F3 		mul	r3, r3, r2
 232 017c 7B61     		str	r3, [r7, #20]
 233              	.L9:
 314:../system_stm32f4xx.c ****       }
 315:../system_stm32f4xx.c **** 
 316:../system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 234              		.loc 1 316 0
 235 017e 4FF46053 		mov	r3, #14336
 236 0182 C4F20203 		movt	r3, 16386
 237 0186 5B68     		ldr	r3, [r3, #4]
 238 0188 03F44033 		and	r3, r3, #196608
 239 018c 4FEA1343 		lsr	r3, r3, #16
 240 0190 03F10103 		add	r3, r3, #1
 241 0194 4FEA4303 		lsl	r3, r3, #1
 242 0198 FB60     		str	r3, [r7, #12]
 317:../system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 243              		.loc 1 317 0
 244 019a 7A69     		ldr	r2, [r7, #20]
 245 019c FB68     		ldr	r3, [r7, #12]
 246 019e B2FBF3F2 		udiv	r2, r2, r3
 247 01a2 40F20003 		movw	r3, #:lower16:SystemCoreClock
 248 01a6 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 249 01aa 1A60     		str	r2, [r3, #0]
 318:../system_stm32f4xx.c ****       break;
 250              		.loc 1 318 0
 251 01ac 09E0     		b	.L7
 252              	.L10:
 319:../system_stm32f4xx.c ****     default:
 320:../system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 253              		.loc 1 320 0
 254 01ae 40F20003 		movw	r3, #:lower16:SystemCoreClock
 255 01b2 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 256 01b6 4FF41052 		mov	r2, #9216
 257 01ba C0F2F402 		movt	r2, 244
 258 01be 1A60     		str	r2, [r3, #0]
 321:../system_stm32f4xx.c ****       break;
 259              		.loc 1 321 0
 260 01c0 00BF     		nop
 261              	.L7:
 322:../system_stm32f4xx.c ****   }
 323:../system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 324:../system_stm32f4xx.c ****   /* Get HCLK prescaler */
 325:../system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 262              		.loc 1 325 0
 263 01c2 4FF46053 		mov	r3, #14336
 264 01c6 C4F20203 		movt	r3, 16386
 265 01ca 9B68     		ldr	r3, [r3, #8]
 266 01cc 03F0F003 		and	r3, r3, #240
 267 01d0 4FEA1312 		lsr	r2, r3, #4
 268 01d4 40F20003 		movw	r3, #:lower16:AHBPrescTable
 269 01d8 C0F20003 		movt	r3, #:upper16:AHBPrescTable
 270 01dc 9B5C     		ldrb	r3, [r3, r2]
 271 01de DBB2     		uxtb	r3, r3
 272 01e0 3B61     		str	r3, [r7, #16]
 326:../system_stm32f4xx.c ****   /* HCLK frequency */
 327:../system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 273              		.loc 1 327 0
 274 01e2 40F20003 		movw	r3, #:lower16:SystemCoreClock
 275 01e6 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 276 01ea 1A68     		ldr	r2, [r3, #0]
 277 01ec 3B69     		ldr	r3, [r7, #16]
 278 01ee 22FA03F2 		lsr	r2, r2, r3
 279 01f2 40F20003 		movw	r3, #:lower16:SystemCoreClock
 280 01f6 C0F20003 		movt	r3, #:upper16:SystemCoreClock
 281 01fa 1A60     		str	r2, [r3, #0]
 328:../system_stm32f4xx.c **** }
 282              		.loc 1 328 0
 283 01fc 07F11C07 		add	r7, r7, #28
 284 0200 BD46     		mov	sp, r7
 285 0202 80BC     		pop	{r7}
 286 0204 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE111:
 290 0206 00BF     		.align	2
 291              		.thumb
 292              		.thumb_func
 294              	SetSysClock:
 295              	.LFB112:
 329:../system_stm32f4xx.c **** 
 330:../system_stm32f4xx.c **** /**
 331:../system_stm32f4xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 332:../system_stm32f4xx.c ****   *         AHB/APBx prescalers and Flash settings
 333:../system_stm32f4xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 334:../system_stm32f4xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 335:../system_stm32f4xx.c ****   * @param  None
 336:../system_stm32f4xx.c ****   * @retval None
 337:../system_stm32f4xx.c ****   */
 338:../system_stm32f4xx.c **** static void SetSysClock(void)
 339:../system_stm32f4xx.c **** {
 296              		.loc 1 339 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 8
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301 0208 80B4     		push	{r7}
 302              	.LCFI5:
 303              		.cfi_def_cfa_offset 4
 304              		.cfi_offset 7, -4
 305 020a 83B0     		sub	sp, sp, #12
 306              	.LCFI6:
 307              		.cfi_def_cfa_offset 16
 308 020c 00AF     		add	r7, sp, #0
 309              	.LCFI7:
 310              		.cfi_def_cfa_register 7
 340:../system_stm32f4xx.c **** /******************************************************************************/
 341:../system_stm32f4xx.c **** /*            PLL (clocked by HSE) used as System clock source                */
 342:../system_stm32f4xx.c **** /******************************************************************************/
 343:../system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 311              		.loc 1 343 0
 312 020e 4FF00003 		mov	r3, #0
 313 0212 7B60     		str	r3, [r7, #4]
 314 0214 4FF00003 		mov	r3, #0
 315 0218 3B60     		str	r3, [r7, #0]
 344:../system_stm32f4xx.c ****   
 345:../system_stm32f4xx.c ****   /* Enable HSE */
 346:../system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 316              		.loc 1 346 0
 317 021a 4FF46053 		mov	r3, #14336
 318 021e C4F20203 		movt	r3, 16386
 319 0222 4FF46052 		mov	r2, #14336
 320 0226 C4F20202 		movt	r2, 16386
 321 022a 1268     		ldr	r2, [r2, #0]
 322 022c 42F48032 		orr	r2, r2, #65536
 323 0230 1A60     		str	r2, [r3, #0]
 324              	.L13:
 347:../system_stm32f4xx.c ****  
 348:../system_stm32f4xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 349:../system_stm32f4xx.c ****   do
 350:../system_stm32f4xx.c ****   {
 351:../system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 325              		.loc 1 351 0 discriminator 1
 326 0232 4FF46053 		mov	r3, #14336
 327 0236 C4F20203 		movt	r3, 16386
 328 023a 1B68     		ldr	r3, [r3, #0]
 329 023c 03F40033 		and	r3, r3, #131072
 330 0240 3B60     		str	r3, [r7, #0]
 352:../system_stm32f4xx.c ****     StartUpCounter++;
 331              		.loc 1 352 0 discriminator 1
 332 0242 7B68     		ldr	r3, [r7, #4]
 333 0244 03F10103 		add	r3, r3, #1
 334 0248 7B60     		str	r3, [r7, #4]
 353:../system_stm32f4xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 335              		.loc 1 353 0 discriminator 1
 336 024a 3B68     		ldr	r3, [r7, #0]
 337 024c 002B     		cmp	r3, #0
 338 024e 03D1     		bne	.L12
 339 0250 7B68     		ldr	r3, [r7, #4]
 340 0252 B3F5A06F 		cmp	r3, #1280
 341 0256 ECD1     		bne	.L13
 342              	.L12:
 354:../system_stm32f4xx.c **** 
 355:../system_stm32f4xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 343              		.loc 1 355 0
 344 0258 4FF46053 		mov	r3, #14336
 345 025c C4F20203 		movt	r3, 16386
 346 0260 1B68     		ldr	r3, [r3, #0]
 347 0262 03F40033 		and	r3, r3, #131072
 348 0266 002B     		cmp	r3, #0
 349 0268 03D0     		beq	.L14
 356:../system_stm32f4xx.c ****   {
 357:../system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x01;
 350              		.loc 1 357 0
 351 026a 4FF00103 		mov	r3, #1
 352 026e 3B60     		str	r3, [r7, #0]
 353 0270 02E0     		b	.L15
 354              	.L14:
 358:../system_stm32f4xx.c ****   }
 359:../system_stm32f4xx.c ****   else
 360:../system_stm32f4xx.c ****   {
 361:../system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x00;
 355              		.loc 1 361 0
 356 0272 4FF00003 		mov	r3, #0
 357 0276 3B60     		str	r3, [r7, #0]
 358              	.L15:
 362:../system_stm32f4xx.c ****   }
 363:../system_stm32f4xx.c **** 
 364:../system_stm32f4xx.c ****   if (HSEStatus == (uint32_t)0x01)
 359              		.loc 1 364 0
 360 0278 3B68     		ldr	r3, [r7, #0]
 361 027a 012B     		cmp	r3, #1
 362 027c 40F08280 		bne	.L16
 365:../system_stm32f4xx.c ****   {
 366:../system_stm32f4xx.c ****     /* Enable high performance mode, System frequency up to 168 MHz */
 367:../system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 363              		.loc 1 367 0
 364 0280 4FF46053 		mov	r3, #14336
 365 0284 C4F20203 		movt	r3, 16386
 366 0288 4FF46052 		mov	r2, #14336
 367 028c C4F20202 		movt	r2, 16386
 368 0290 126C     		ldr	r2, [r2, #64]
 369 0292 42F08052 		orr	r2, r2, #268435456
 370 0296 1A64     		str	r2, [r3, #64]
 368:../system_stm32f4xx.c ****     PWR->CR |= PWR_CR_PMODE;  
 371              		.loc 1 368 0
 372 0298 4FF4E043 		mov	r3, #28672
 373 029c C4F20003 		movt	r3, 16384
 374 02a0 4FF4E042 		mov	r2, #28672
 375 02a4 C4F20002 		movt	r2, 16384
 376 02a8 1268     		ldr	r2, [r2, #0]
 377 02aa 42F48042 		orr	r2, r2, #16384
 378 02ae 1A60     		str	r2, [r3, #0]
 369:../system_stm32f4xx.c **** 
 370:../system_stm32f4xx.c ****     /* HCLK = SYSCLK / 1*/
 371:../system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 379              		.loc 1 371 0
 380 02b0 4FF46053 		mov	r3, #14336
 381 02b4 C4F20203 		movt	r3, 16386
 382 02b8 4FF46052 		mov	r2, #14336
 383 02bc C4F20202 		movt	r2, 16386
 384 02c0 9268     		ldr	r2, [r2, #8]
 385 02c2 9A60     		str	r2, [r3, #8]
 372:../system_stm32f4xx.c ****       
 373:../system_stm32f4xx.c ****     /* PCLK2 = HCLK / 2*/
 374:../system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 386              		.loc 1 374 0
 387 02c4 4FF46053 		mov	r3, #14336
 388 02c8 C4F20203 		movt	r3, 16386
 389 02cc 4FF46052 		mov	r2, #14336
 390 02d0 C4F20202 		movt	r2, 16386
 391 02d4 9268     		ldr	r2, [r2, #8]
 392 02d6 42F40042 		orr	r2, r2, #32768
 393 02da 9A60     		str	r2, [r3, #8]
 375:../system_stm32f4xx.c ****     
 376:../system_stm32f4xx.c ****     /* PCLK1 = HCLK / 4*/
 377:../system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 394              		.loc 1 377 0
 395 02dc 4FF46053 		mov	r3, #14336
 396 02e0 C4F20203 		movt	r3, 16386
 397 02e4 4FF46052 		mov	r2, #14336
 398 02e8 C4F20202 		movt	r2, 16386
 399 02ec 9268     		ldr	r2, [r2, #8]
 400 02ee 42F4A052 		orr	r2, r2, #5120
 401 02f2 9A60     		str	r2, [r3, #8]
 378:../system_stm32f4xx.c **** 
 379:../system_stm32f4xx.c ****     /* Configure the main PLL */
 380:../system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 402              		.loc 1 380 0
 403 02f4 4FF46053 		mov	r3, #14336
 404 02f8 C4F20203 		movt	r3, 16386
 405 02fc 45F20842 		movw	r2, #21512
 406 0300 C0F24072 		movt	r2, 1856
 407 0304 5A60     		str	r2, [r3, #4]
 381:../system_stm32f4xx.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 382:../system_stm32f4xx.c **** 
 383:../system_stm32f4xx.c ****     /* Enable the main PLL */
 384:../system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 408              		.loc 1 384 0
 409 0306 4FF46053 		mov	r3, #14336
 410 030a C4F20203 		movt	r3, 16386
 411 030e 4FF46052 		mov	r2, #14336
 412 0312 C4F20202 		movt	r2, 16386
 413 0316 1268     		ldr	r2, [r2, #0]
 414 0318 42F08072 		orr	r2, r2, #16777216
 415 031c 1A60     		str	r2, [r3, #0]
 385:../system_stm32f4xx.c **** 
 386:../system_stm32f4xx.c ****     /* Wait till the main PLL is ready */
 387:../system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 416              		.loc 1 387 0
 417 031e 00BF     		nop
 418              	.L17:
 419              		.loc 1 387 0 is_stmt 0 discriminator 1
 420 0320 4FF46053 		mov	r3, #14336
 421 0324 C4F20203 		movt	r3, 16386
 422 0328 1B68     		ldr	r3, [r3, #0]
 423 032a 03F00073 		and	r3, r3, #33554432
 424 032e 002B     		cmp	r3, #0
 425 0330 F6D0     		beq	.L17
 388:../system_stm32f4xx.c ****     {
 389:../system_stm32f4xx.c ****     }
 390:../system_stm32f4xx.c ****    
 391:../system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 392:../system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 426              		.loc 1 392 0 is_stmt 1
 427 0332 4FF47053 		mov	r3, #15360
 428 0336 C4F20203 		movt	r3, 16386
 429 033a 40F20562 		movw	r2, #1541
 430 033e 1A60     		str	r2, [r3, #0]
 393:../system_stm32f4xx.c **** 
 394:../system_stm32f4xx.c ****     /* Select the main PLL as system clock source */
 395:../system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 431              		.loc 1 395 0
 432 0340 4FF46053 		mov	r3, #14336
 433 0344 C4F20203 		movt	r3, 16386
 434 0348 4FF46052 		mov	r2, #14336
 435 034c C4F20202 		movt	r2, 16386
 436 0350 9268     		ldr	r2, [r2, #8]
 437 0352 22F00302 		bic	r2, r2, #3
 438 0356 9A60     		str	r2, [r3, #8]
 396:../system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 439              		.loc 1 396 0
 440 0358 4FF46053 		mov	r3, #14336
 441 035c C4F20203 		movt	r3, 16386
 442 0360 4FF46052 		mov	r2, #14336
 443 0364 C4F20202 		movt	r2, 16386
 444 0368 9268     		ldr	r2, [r2, #8]
 445 036a 42F00202 		orr	r2, r2, #2
 446 036e 9A60     		str	r2, [r3, #8]
 397:../system_stm32f4xx.c **** 
 398:../system_stm32f4xx.c ****     /* Wait till the main PLL is used as system clock source */
 399:../system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 447              		.loc 1 399 0
 448 0370 00BF     		nop
 449              	.L18:
 450              		.loc 1 399 0 is_stmt 0 discriminator 1
 451 0372 4FF46053 		mov	r3, #14336
 452 0376 C4F20203 		movt	r3, 16386
 453 037a 9B68     		ldr	r3, [r3, #8]
 454 037c 03F00C03 		and	r3, r3, #12
 455 0380 082B     		cmp	r3, #8
 456 0382 F6D1     		bne	.L18
 457              	.L16:
 400:../system_stm32f4xx.c ****     {
 401:../system_stm32f4xx.c ****     }
 402:../system_stm32f4xx.c ****   }
 403:../system_stm32f4xx.c ****   else
 404:../system_stm32f4xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 405:../system_stm32f4xx.c ****          configuration. User can add here some code to deal with this error */
 406:../system_stm32f4xx.c ****   }
 407:../system_stm32f4xx.c **** 
 408:../system_stm32f4xx.c **** /******************************************************************************/
 409:../system_stm32f4xx.c **** /*                        I2S clock configuration                             */
 410:../system_stm32f4xx.c **** /******************************************************************************/
 411:../system_stm32f4xx.c ****   /* PLLI2S clock used as I2S clock source */
 412:../system_stm32f4xx.c ****   RCC->CFGR &= ~RCC_CFGR_I2SSRC;
 458              		.loc 1 412 0 is_stmt 1
 459 0384 4FF46053 		mov	r3, #14336
 460 0388 C4F20203 		movt	r3, 16386
 461 038c 4FF46052 		mov	r2, #14336
 462 0390 C4F20202 		movt	r2, 16386
 463 0394 9268     		ldr	r2, [r2, #8]
 464 0396 22F40002 		bic	r2, r2, #8388608
 465 039a 9A60     		str	r2, [r3, #8]
 413:../system_stm32f4xx.c **** 
 414:../system_stm32f4xx.c ****   /* Configure PLLI2S */
 415:../system_stm32f4xx.c ****   RCC->PLLI2SCFGR = (PLLI2S_N << 6) | (PLLI2S_R << 28);
 466              		.loc 1 415 0
 467 039c 4FF46053 		mov	r3, #14336
 468 03a0 C4F20203 		movt	r3, 16386
 469 03a4 4FF44052 		mov	r2, #12288
 470 03a8 C5F20002 		movt	r2, 20480
 471 03ac C3F88420 		str	r2, [r3, #132]
 416:../system_stm32f4xx.c **** 
 417:../system_stm32f4xx.c ****   /* Enable PLLI2S */
 418:../system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_PLLI2SON);
 472              		.loc 1 418 0
 473 03b0 4FF46053 		mov	r3, #14336
 474 03b4 C4F20203 		movt	r3, 16386
 475 03b8 4FF46052 		mov	r2, #14336
 476 03bc C4F20202 		movt	r2, 16386
 477 03c0 1268     		ldr	r2, [r2, #0]
 478 03c2 42F08062 		orr	r2, r2, #67108864
 479 03c6 1A60     		str	r2, [r3, #0]
 419:../system_stm32f4xx.c **** 
 420:../system_stm32f4xx.c ****   /* Wait till PLLI2S is ready */
 421:../system_stm32f4xx.c ****   while((RCC->CR & RCC_CR_PLLI2SRDY) == 0)
 480              		.loc 1 421 0
 481 03c8 00BF     		nop
 482              	.L19:
 483              		.loc 1 421 0 is_stmt 0 discriminator 1
 484 03ca 4FF46053 		mov	r3, #14336
 485 03ce C4F20203 		movt	r3, 16386
 486 03d2 1B68     		ldr	r3, [r3, #0]
 487 03d4 03F00063 		and	r3, r3, #134217728
 488 03d8 002B     		cmp	r3, #0
 489 03da F6D0     		beq	.L19
 422:../system_stm32f4xx.c ****   {
 423:../system_stm32f4xx.c ****   }
 424:../system_stm32f4xx.c **** }
 490              		.loc 1 424 0 is_stmt 1
 491 03dc 07F10C07 		add	r7, r7, #12
 492 03e0 BD46     		mov	sp, r7
 493 03e2 80BC     		pop	{r7}
 494 03e4 7047     		bx	lr
 495              		.cfi_endproc
 496              	.LFE112:
 498              	.Letext0:
 499              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 500              		.file 3 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
 501              		.file 4 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm3
 502              		.file 5 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/syst
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
C:\Users\Alex\AppData\Local\Temp\ccYVJ5MG.s:23     .data:00000000 SystemCoreClock
C:\Users\Alex\AppData\Local\Temp\ccYVJ5MG.s:20     .data:00000000 $d
C:\Users\Alex\AppData\Local\Temp\ccYVJ5MG.s:29     .data:00000004 AHBPrescTable
C:\Users\Alex\AppData\Local\Temp\ccYVJ5MG.s:47     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccYVJ5MG.s:52     .text:00000000 SystemInit
C:\Users\Alex\AppData\Local\Temp\ccYVJ5MG.s:294    .text:00000208 SetSysClock
C:\Users\Alex\AppData\Local\Temp\ccYVJ5MG.s:125    .text:00000094 SystemCoreClockUpdate
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
