   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_hash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	HASH_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	HASH_DeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @file    stm32f4xx_hash.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          functionalities of the HASH / HMAC Processor (HASH) peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Initialization and Configuration functions
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Message Digest generation functions
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - context swapping functions   
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - DMA interface function       
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Interrupts and flags management       
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @verbatim
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                               
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ===================================================================      
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                                   How to use this driver
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ===================================================================
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HASH operation : 
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ----------------                   
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         1. Enable the HASH controller clock using 
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE) function.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         2. Initialise the HASH using HASH_Init() function. 
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         3 . Reset the HASH processor core, so that the HASH will be ready 
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to compute he message digest of a new message by using 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             HASH_Reset() function.
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         4. Enable the HASH controller using the HASH_Cmd() function. 
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         5. if using DMA for Data input transfer, Activate the DMA Request 
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            using HASH_DMACmd() function 
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                    
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         6. if DMA is not used for data transfer, use HASH_DataIn() function 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            to enter data to IN FIFO.
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         7. Configure the Number of valid bits in last word of the message 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            using HASH_SetLastWordValidBitsNbr() function.
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         8. if the message length is not an exact multiple of 512 bits, 
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            then the function HASH_StartDigest() must be called to 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            launch the computation of the final digest.     
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         9. Once computed, the digest can be read using HASH_GetDigest() 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            function.         
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                   
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *        10. To control HASH events you can use one of the following 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              two methods:
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               a- Check on HASH flags using the HASH_GetFlagStatus() function.  
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               b- Use HASH interrupts through the function HASH_ITConfig() at 
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  initialization phase and HASH_GetITStatus() function into 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  interrupt routines in hashing phase.
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          After checking on a flag you should clear it using HASH_ClearFlag()
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          function. And after checking on an interrupt event you should 
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          clear it using HASH_ClearITPendingBit() function.     
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                     
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *        11. Save and restore hash processor context using 
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            HASH_SaveContext() and HASH_RestoreContext() functions.     
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HMAC operation : 
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ----------------  
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          The HMAC algorithm is used for message authentication, by 
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          irreversibly binding the message being processed to a key chosen 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          by the user. 
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          For HMAC specifications, refer to "HMAC: keyed-hashing for message 
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          authentication, H. Krawczyk, M. Bellare, R. Canetti, February 1997"
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          Basically, the HMAC algorithm consists of two nested hash operations:
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HMAC(message) = Hash[((key | pad) XOR 0x5C) | Hash(((key | pad) XOR 0x36) | message)]
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          where:
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          - "pad" is a sequence of zeroes needed to extend the key to the 
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  length of the underlying hash function data block (that is 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  512 bits for both the SHA-1 and MD5 hash algorithms)
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          - "|"   represents the concatenation operator 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         To compute the HMAC, four different phases are required:
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                    
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         1.  Initialise the HASH using HASH_Init() function to do HMAC 
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             operation. 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         2.  The key (to be used for the inner hash function) is then given 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to the core. This operation follows the same mechanism as the 
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             one used to send the message in the hash operation (that is, 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             by HASH_DataIn() function and, finally, 
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             HASH_StartDigest() function.
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         3.  Once the last word has been entered and computation has started, 
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the hash processor elaborates the key. It is then ready to 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             accept the message text using the same mechanism as the one 
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             used to send the message in the hash operation.
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *       
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         4.  After the first hash round, the hash processor returns "ready" 
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to indicate that it is ready to receive the key to be used for 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the outer hash function (normally, this key is the same as the 
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             one used for the inner hash function). When the last word of 
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the key is entered and computation starts, the HMAC result is 
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             made available using HASH_GetDigest() function.
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @endverbatim
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @attention
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************  
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Includes ------------------------------------------------------------------*/
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** #include "stm32f4xx_hash.h"
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** #include "stm32f4xx_rcc.h"
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH 
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief HASH driver modules
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private typedef -----------------------------------------------------------*/
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private define ------------------------------------------------------------*/
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private macro -------------------------------------------------------------*/
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private variables ---------------------------------------------------------*/
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private function prototypes -----------------------------------------------*/
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private functions ---------------------------------------------------------*/ 
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Private_Functions
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group1 Initialization and Configuration functions
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief    Initialization and Configuration functions 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim    
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       Initialization and Configuration functions
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to 
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Initialize the HASH peripheral
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Configure the HASH Processor 
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - MD5/SHA1, 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH/HMAC, 
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - datatype 
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HMAC Key (if mode = HMAC)
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Reset the HASH Processor 
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Deinitializes the HASH peripheral registers to their default reset values
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DeInit(void)
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
  26              		.loc 1 172 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Enable HASH reset state */
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, ENABLE);
  38              		.loc 1 174 0
  39 0004 4FF02000 		mov	r0, #32
  40 0008 4FF00101 		mov	r1, #1
  41 000c FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Release HASH from reset state */
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, DISABLE);
  42              		.loc 1 176 0
  43 0010 4FF02000 		mov	r0, #32
  44 0014 4FF00001 		mov	r1, #0
  45 0018 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
  46              		.loc 1 177 0
  47 001c 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51 001e 00BF     		.align	2
  52              		.global	HASH_Init
  53              		.thumb
  54              		.thumb_func
  56              	HASH_Init:
  57              	.LFB111:
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Initializes the HASH peripheral according to the specified parameters
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         in the HASH_InitStruct structure.
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   the hash processor is reset when calling this function so that the
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         HASH will be ready to compute the message digest of a new message.
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         There is no need to call HASH_Reset() function.           
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct: pointer to a HASH_InitTypeDef structure that contains
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the configuration information for the HASH peripheral.
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The field HASH_HMACKeyType in HASH_InitTypeDef must be filled only 
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          if the algorithm mode is HMAC.       
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_Init(HASH_InitTypeDef* HASH_InitStruct)
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
  58              		.loc 1 192 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0020 80B4     		push	{r7}
  64              	.LCFI2:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0022 83B0     		sub	sp, sp, #12
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 16
  70 0024 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  73 0026 7860     		str	r0, [r7, #4]
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOSELECTION(HASH_InitStruct->HASH_AlgoSelection));
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_DATATYPE(HASH_InitStruct->HASH_DataType));
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOMODE(HASH_InitStruct->HASH_AlgoMode));
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Configure the Algorithm used, algorithm mode and the datatype */
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR &= ~ (HASH_CR_ALGO | HASH_CR_DATATYPE | HASH_CR_MODE);
  74              		.loc 1 199 0
  75 0028 4FF48063 		mov	r3, #1024
  76 002c C5F20603 		movt	r3, 20486
  77 0030 4FF48062 		mov	r2, #1024
  78 0034 C5F20602 		movt	r2, 20486
  79 0038 1268     		ldr	r2, [r2, #0]
  80 003a 22F0F002 		bic	r2, r2, #240
  81 003e 1A60     		str	r2, [r3, #0]
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  82              		.loc 1 200 0
  83 0040 4FF48063 		mov	r3, #1024
  84 0044 C5F20603 		movt	r3, 20486
  85 0048 4FF48062 		mov	r2, #1024
  86 004c C5F20602 		movt	r2, 20486
  87 0050 1268     		ldr	r2, [r2, #0]
  88 0052 1146     		mov	r1, r2
  89 0054 7A68     		ldr	r2, [r7, #4]
  90 0056 1068     		ldr	r0, [r2, #0]
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
  91              		.loc 1 201 0
  92 0058 7A68     		ldr	r2, [r7, #4]
  93 005a 9268     		ldr	r2, [r2, #8]
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  94              		.loc 1 200 0
  95 005c 1043     		orrs	r0, r0, r2
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_AlgoMode);
  96              		.loc 1 202 0
  97 005e 7A68     		ldr	r2, [r7, #4]
  98 0060 5268     		ldr	r2, [r2, #4]
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
  99              		.loc 1 201 0
 100 0062 0243     		orrs	r2, r2, r0
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
 101              		.loc 1 200 0
 102 0064 0A43     		orrs	r2, r2, r1
 103 0066 1A60     		str	r2, [r3, #0]
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* if algorithm mode is HMAC, set the Key */  
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if(HASH_InitStruct->HASH_AlgoMode == HASH_AlgoMode_HMAC) 
 104              		.loc 1 205 0
 105 0068 7B68     		ldr	r3, [r7, #4]
 106 006a 5B68     		ldr	r3, [r3, #4]
 107 006c 402B     		cmp	r3, #64
 108 006e 19D1     		bne	.L3
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     assert_param(IS_HASH_HMAC_KEYTYPE(HASH_InitStruct->HASH_HMACKeyType));
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_LKEY;
 109              		.loc 1 208 0
 110 0070 4FF48063 		mov	r3, #1024
 111 0074 C5F20603 		movt	r3, 20486
 112 0078 4FF48062 		mov	r2, #1024
 113 007c C5F20602 		movt	r2, 20486
 114 0080 1268     		ldr	r2, [r2, #0]
 115 0082 22F48032 		bic	r2, r2, #65536
 116 0086 1A60     		str	r2, [r3, #0]
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 117              		.loc 1 209 0
 118 0088 4FF48063 		mov	r3, #1024
 119 008c C5F20603 		movt	r3, 20486
 120 0090 4FF48062 		mov	r2, #1024
 121 0094 C5F20602 		movt	r2, 20486
 122 0098 1268     		ldr	r2, [r2, #0]
 123 009a 1146     		mov	r1, r2
 124 009c 7A68     		ldr	r2, [r7, #4]
 125 009e D268     		ldr	r2, [r2, #12]
 126 00a0 0A43     		orrs	r2, r2, r1
 127 00a2 1A60     		str	r2, [r3, #0]
 128              	.L3:
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core, so that the HASH will be ready to compute 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      the message digest of a new message */
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;  
 129              		.loc 1 214 0
 130 00a4 4FF48063 		mov	r3, #1024
 131 00a8 C5F20603 		movt	r3, 20486
 132 00ac 4FF48062 		mov	r2, #1024
 133 00b0 C5F20602 		movt	r2, 20486
 134 00b4 1268     		ldr	r2, [r2, #0]
 135 00b6 42F00402 		orr	r2, r2, #4
 136 00ba 1A60     		str	r2, [r3, #0]
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 137              		.loc 1 215 0
 138 00bc 07F10C07 		add	r7, r7, #12
 139 00c0 BD46     		mov	sp, r7
 140 00c2 80BC     		pop	{r7}
 141 00c4 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE111:
 145 00c6 00BF     		.align	2
 146              		.global	HASH_StructInit
 147              		.thumb
 148              		.thumb_func
 150              	HASH_StructInit:
 151              	.LFB112:
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Fills each HASH_InitStruct member with its default value.
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct : pointer to a HASH_InitTypeDef structure which will
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          be initialized.  
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @note  The default values set are : Processor mode is HASH, Algorithm selected is SHA1,
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          Data type selected is 32b and HMAC Key Type is short key.  
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct)
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 152              		.loc 1 226 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157 00c8 80B4     		push	{r7}
 158              	.LCFI5:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 00ca 83B0     		sub	sp, sp, #12
 162              	.LCFI6:
 163              		.cfi_def_cfa_offset 16
 164 00cc 00AF     		add	r7, sp, #0
 165              	.LCFI7:
 166              		.cfi_def_cfa_register 7
 167 00ce 7860     		str	r0, [r7, #4]
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoSelection member */
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 168              		.loc 1 228 0
 169 00d0 7B68     		ldr	r3, [r7, #4]
 170 00d2 4FF00002 		mov	r2, #0
 171 00d6 1A60     		str	r2, [r3, #0]
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoMode member */
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoMode = HASH_AlgoMode_HASH;
 172              		.loc 1 231 0
 173 00d8 7B68     		ldr	r3, [r7, #4]
 174 00da 4FF00002 		mov	r2, #0
 175 00de 5A60     		str	r2, [r3, #4]
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_DataType member */
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_DataType = HASH_DataType_32b;
 176              		.loc 1 234 0
 177 00e0 7B68     		ldr	r3, [r7, #4]
 178 00e2 4FF00002 		mov	r2, #0
 179 00e6 9A60     		str	r2, [r3, #8]
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_HMACKeyType member */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 180              		.loc 1 237 0
 181 00e8 7B68     		ldr	r3, [r7, #4]
 182 00ea 4FF00002 		mov	r2, #0
 183 00ee DA60     		str	r2, [r3, #12]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 184              		.loc 1 238 0
 185 00f0 07F10C07 		add	r7, r7, #12
 186 00f4 BD46     		mov	sp, r7
 187 00f6 80BC     		pop	{r7}
 188 00f8 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE112:
 192 00fa 00BF     		.align	2
 193              		.global	HASH_Reset
 194              		.thumb
 195              		.thumb_func
 197              	HASH_Reset:
 198              	.LFB113:
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Resets the HASH processor core, so that the HASH will be ready
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         to compute the message digest of a new message.
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   Calling this function will clear the HASH_SR_DCIS (Digest calculation 
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         completion interrupt status) bit corresponding to HASH_IT_DCI 
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         interrupt and HASH_FLAG_DCIS flag. 
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_Reset(void)
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 199              		.loc 1 250 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 00fc 80B4     		push	{r7}
 205              	.LCFI8:
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 7, -4
 208 00fe 00AF     		add	r7, sp, #0
 209              	.LCFI9:
 210              		.cfi_def_cfa_register 7
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core */
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;
 211              		.loc 1 252 0
 212 0100 4FF48063 		mov	r3, #1024
 213 0104 C5F20603 		movt	r3, 20486
 214 0108 4FF48062 		mov	r2, #1024
 215 010c C5F20602 		movt	r2, 20486
 216 0110 1268     		ldr	r2, [r2, #0]
 217 0112 42F00402 		orr	r2, r2, #4
 218 0116 1A60     		str	r2, [r3, #0]
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 219              		.loc 1 253 0
 220 0118 BD46     		mov	sp, r7
 221 011a 80BC     		pop	{r7}
 222 011c 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE113:
 226 011e 00BF     		.align	2
 227              		.global	HASH_SetLastWordValidBitsNbr
 228              		.thumb
 229              		.thumb_func
 231              	HASH_SetLastWordValidBitsNbr:
 232              	.LFB114:
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group2 Message Digest generation functions
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief    Message Digest generation functions
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim    
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       Message Digest generation functions
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing the generation of message digest: 
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Push data in the IN FIFO : using HASH_DataIn()
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Get the number of words set in IN FIFO, use HASH_GetInFIFOWordsNbr()  
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - set the last word valid bits number using HASH_SetLastWordValidBitsNbr() 
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - start digest calculation : using HASH_StartDigest()
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Get the Digest message : using HASH_GetDigest()
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Configure the Number of valid bits in last word of the message
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  ValidNumber: Number of valid bits in last word of the message.
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           This parameter must be a number between 0 and 0x1F.
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x00: All 32 bits of the last data written are valid
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x01: Only bit [0] of the last data written is valid
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x02: Only bits[1:0] of the last data written are valid
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x03: Only bits[2:0] of the last data written are valid
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - ...
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x1F: Only bits[30:0] of the last data written are valid    
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The Number of valid bits must be set before to start the message 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         digest competition (in Hash and HMAC) and key treatment(in HMAC).    
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_SetLastWordValidBitsNbr(uint16_t ValidNumber)
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 233              		.loc 1 292 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0120 80B4     		push	{r7}
 239              	.LCFI10:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0122 83B0     		sub	sp, sp, #12
 243              	.LCFI11:
 244              		.cfi_def_cfa_offset 16
 245 0124 00AF     		add	r7, sp, #0
 246              	.LCFI12:
 247              		.cfi_def_cfa_register 7
 248 0126 0346     		mov	r3, r0
 249 0128 FB80     		strh	r3, [r7, #6]	@ movhi
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_VALIDBITSNUMBER(ValidNumber));
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Configure the Number of valid bits in last word of the message */
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR &= ~(HASH_STR_NBW);
 250              		.loc 1 297 0
 251 012a 4FF48063 		mov	r3, #1024
 252 012e C5F20603 		movt	r3, 20486
 253 0132 4FF48062 		mov	r2, #1024
 254 0136 C5F20602 		movt	r2, 20486
 255 013a 9268     		ldr	r2, [r2, #8]
 256 013c 22F01F02 		bic	r2, r2, #31
 257 0140 9A60     		str	r2, [r3, #8]
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR |= ValidNumber;
 258              		.loc 1 298 0
 259 0142 4FF48063 		mov	r3, #1024
 260 0146 C5F20603 		movt	r3, 20486
 261 014a 4FF48062 		mov	r2, #1024
 262 014e C5F20602 		movt	r2, 20486
 263 0152 9268     		ldr	r2, [r2, #8]
 264 0154 1146     		mov	r1, r2
 265 0156 FA88     		ldrh	r2, [r7, #6]
 266 0158 0A43     		orrs	r2, r2, r1
 267 015a 9A60     		str	r2, [r3, #8]
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 268              		.loc 1 299 0
 269 015c 07F10C07 		add	r7, r7, #12
 270 0160 BD46     		mov	sp, r7
 271 0162 80BC     		pop	{r7}
 272 0164 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE114:
 276 0166 00BF     		.align	2
 277              		.global	HASH_DataIn
 278              		.thumb
 279              		.thumb_func
 281              	HASH_DataIn:
 282              	.LFB115:
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Writes data in the Data Input FIFO
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  Data: new data of the message to be processed.
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DataIn(uint32_t Data)
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 283              		.loc 1 307 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0168 80B4     		push	{r7}
 289              	.LCFI13:
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 7, -4
 292 016a 83B0     		sub	sp, sp, #12
 293              	.LCFI14:
 294              		.cfi_def_cfa_offset 16
 295 016c 00AF     		add	r7, sp, #0
 296              	.LCFI15:
 297              		.cfi_def_cfa_register 7
 298 016e 7860     		str	r0, [r7, #4]
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Write in the DIN register a new data */
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->DIN = Data;
 299              		.loc 1 309 0
 300 0170 4FF48063 		mov	r3, #1024
 301 0174 C5F20603 		movt	r3, 20486
 302 0178 7A68     		ldr	r2, [r7, #4]
 303 017a 5A60     		str	r2, [r3, #4]
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 304              		.loc 1 310 0
 305 017c 07F10C07 		add	r7, r7, #12
 306 0180 BD46     		mov	sp, r7
 307 0182 80BC     		pop	{r7}
 308 0184 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE115:
 312 0186 00BF     		.align	2
 313              		.global	HASH_GetInFIFOWordsNbr
 314              		.thumb
 315              		.thumb_func
 317              	HASH_GetInFIFOWordsNbr:
 318              	.LFB116:
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Returns the number of words already pushed into the IN FIFO.
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The value of words already pushed into the IN FIFO.
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** uint8_t HASH_GetInFIFOWordsNbr(void)
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 319              		.loc 1 318 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 324 0188 80B4     		push	{r7}
 325              	.LCFI16:
 326              		.cfi_def_cfa_offset 4
 327              		.cfi_offset 7, -4
 328 018a 00AF     		add	r7, sp, #0
 329              	.LCFI17:
 330              		.cfi_def_cfa_register 7
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the value of NBW bits */
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return ((HASH->CR & HASH_CR_NBW) >> 8);
 331              		.loc 1 320 0
 332 018c 4FF48063 		mov	r3, #1024
 333 0190 C5F20603 		movt	r3, 20486
 334 0194 1B68     		ldr	r3, [r3, #0]
 335 0196 03F47063 		and	r3, r3, #3840
 336 019a 4FEA1323 		lsr	r3, r3, #8
 337 019e DBB2     		uxtb	r3, r3
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 338              		.loc 1 321 0
 339 01a0 1846     		mov	r0, r3
 340 01a2 BD46     		mov	sp, r7
 341 01a4 80BC     		pop	{r7}
 342 01a6 7047     		bx	lr
 343              		.cfi_endproc
 344              	.LFE116:
 346              		.align	2
 347              		.global	HASH_GetDigest
 348              		.thumb
 349              		.thumb_func
 351              	HASH_GetDigest:
 352              	.LFB117:
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Provides the message digest result.
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   In MD5 mode, Data[4] filed of HASH_MsgDigest structure is not used
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         and is read as zero.  
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_MessageDigest: pointer to a HASH_MsgDigest structure which will 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         hold the message digest result 
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_GetDigest(HASH_MsgDigest* HASH_MessageDigest)
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 353              		.loc 1 332 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 8
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 358 01a8 80B4     		push	{r7}
 359              	.LCFI18:
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 7, -4
 362 01aa 83B0     		sub	sp, sp, #12
 363              	.LCFI19:
 364              		.cfi_def_cfa_offset 16
 365 01ac 00AF     		add	r7, sp, #0
 366              	.LCFI20:
 367              		.cfi_def_cfa_register 7
 368 01ae 7860     		str	r0, [r7, #4]
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Get the data field */
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[0] = HASH->HR[0];
 369              		.loc 1 334 0
 370 01b0 4FF48063 		mov	r3, #1024
 371 01b4 C5F20603 		movt	r3, 20486
 372 01b8 DB68     		ldr	r3, [r3, #12]
 373 01ba 1A46     		mov	r2, r3
 374 01bc 7B68     		ldr	r3, [r7, #4]
 375 01be 1A60     		str	r2, [r3, #0]
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[1] = HASH->HR[1];
 376              		.loc 1 335 0
 377 01c0 4FF48063 		mov	r3, #1024
 378 01c4 C5F20603 		movt	r3, 20486
 379 01c8 1B69     		ldr	r3, [r3, #16]
 380 01ca 1A46     		mov	r2, r3
 381 01cc 7B68     		ldr	r3, [r7, #4]
 382 01ce 5A60     		str	r2, [r3, #4]
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[2] = HASH->HR[2];
 383              		.loc 1 336 0
 384 01d0 4FF48063 		mov	r3, #1024
 385 01d4 C5F20603 		movt	r3, 20486
 386 01d8 5B69     		ldr	r3, [r3, #20]
 387 01da 1A46     		mov	r2, r3
 388 01dc 7B68     		ldr	r3, [r7, #4]
 389 01de 9A60     		str	r2, [r3, #8]
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[3] = HASH->HR[3];
 390              		.loc 1 337 0
 391 01e0 4FF48063 		mov	r3, #1024
 392 01e4 C5F20603 		movt	r3, 20486
 393 01e8 9B69     		ldr	r3, [r3, #24]
 394 01ea 1A46     		mov	r2, r3
 395 01ec 7B68     		ldr	r3, [r7, #4]
 396 01ee DA60     		str	r2, [r3, #12]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[4] = HASH->HR[4];
 397              		.loc 1 338 0
 398 01f0 4FF48063 		mov	r3, #1024
 399 01f4 C5F20603 		movt	r3, 20486
 400 01f8 DB69     		ldr	r3, [r3, #28]
 401 01fa 1A46     		mov	r2, r3
 402 01fc 7B68     		ldr	r3, [r7, #4]
 403 01fe 1A61     		str	r2, [r3, #16]
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 404              		.loc 1 339 0
 405 0200 07F10C07 		add	r7, r7, #12
 406 0204 BD46     		mov	sp, r7
 407 0206 80BC     		pop	{r7}
 408 0208 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE117:
 412 020a 00BF     		.align	2
 413              		.global	HASH_StartDigest
 414              		.thumb
 415              		.thumb_func
 417              	HASH_StartDigest:
 418              	.LFB118:
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Starts the message padding and calculation of the final message     
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_StartDigest(void)
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 419              		.loc 1 347 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 020c 80B4     		push	{r7}
 425              	.LCFI21:
 426              		.cfi_def_cfa_offset 4
 427              		.cfi_offset 7, -4
 428 020e 00AF     		add	r7, sp, #0
 429              	.LCFI22:
 430              		.cfi_def_cfa_register 7
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Start the Digest calculation */
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR |= HASH_STR_DCAL;
 431              		.loc 1 349 0
 432 0210 4FF48063 		mov	r3, #1024
 433 0214 C5F20603 		movt	r3, 20486
 434 0218 4FF48062 		mov	r2, #1024
 435 021c C5F20602 		movt	r2, 20486
 436 0220 9268     		ldr	r2, [r2, #8]
 437 0222 42F48072 		orr	r2, r2, #256
 438 0226 9A60     		str	r2, [r3, #8]
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 439              		.loc 1 350 0
 440 0228 BD46     		mov	sp, r7
 441 022a 80BC     		pop	{r7}
 442 022c 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE118:
 446 022e 00BF     		.align	2
 447              		.global	HASH_SaveContext
 448              		.thumb
 449              		.thumb_func
 451              	HASH_SaveContext:
 452              	.LFB119:
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group3 Context swapping functions
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   Context swapping functions
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                              Context swapping functions
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to save and store HASH Context
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   It is possible to interrupt a HASH/HMAC process to perform another processing 
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   with a higher priority, and to complete the interrupted process later on, when 
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   the higher priority task is complete. To do so, the context of the interrupted 
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   task must be saved from the HASH registers to memory, and then be restored 
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   from memory to the HASH registers.
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   1. To save the current context, use HASH_SaveContext() function
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   2. To restore the saved context, use HASH_RestoreContext() function 
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Save the Hash peripheral Context. 
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The context can be saved only when no block is currently being 
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         processed. So user must wait for DINIS = 1 (the last block has been 
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         processed and the input FIFO is empty) or NBW != 0 (the FIFO is not 
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         full and no processing is ongoing).   
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_ContextSave: pointer to a HASH_Context structure that contains
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the repository for current context.
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_SaveContext(HASH_Context* HASH_ContextSave)
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 453              		.loc 1 390 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 16
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458 0230 80B4     		push	{r7}
 459              	.LCFI23:
 460              		.cfi_def_cfa_offset 4
 461              		.cfi_offset 7, -4
 462 0232 85B0     		sub	sp, sp, #20
 463              	.LCFI24:
 464              		.cfi_def_cfa_offset 24
 465 0234 00AF     		add	r7, sp, #0
 466              	.LCFI25:
 467              		.cfi_def_cfa_register 7
 468 0236 7860     		str	r0, [r7, #4]
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 469              		.loc 1 391 0
 470 0238 4FF00003 		mov	r3, #0
 471 023c FB73     		strb	r3, [r7, #15]
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* save context registers */
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_IMR = HASH->IMR;  
 472              		.loc 1 394 0
 473 023e 4FF48063 		mov	r3, #1024
 474 0242 C5F20603 		movt	r3, 20486
 475 0246 1B6A     		ldr	r3, [r3, #32]
 476 0248 1A46     		mov	r2, r3
 477 024a 7B68     		ldr	r3, [r7, #4]
 478 024c 1A60     		str	r2, [r3, #0]
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_STR = HASH->STR;      
 479              		.loc 1 395 0
 480 024e 4FF48063 		mov	r3, #1024
 481 0252 C5F20603 		movt	r3, 20486
 482 0256 9B68     		ldr	r3, [r3, #8]
 483 0258 1A46     		mov	r2, r3
 484 025a 7B68     		ldr	r3, [r7, #4]
 485 025c 5A60     		str	r2, [r3, #4]
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_CR  = HASH->CR;     
 486              		.loc 1 396 0
 487 025e 4FF48063 		mov	r3, #1024
 488 0262 C5F20603 		movt	r3, 20486
 489 0266 1B68     		ldr	r3, [r3, #0]
 490 0268 1A46     		mov	r2, r3
 491 026a 7B68     		ldr	r3, [r7, #4]
 492 026c 9A60     		str	r2, [r3, #8]
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 493              		.loc 1 397 0
 494 026e 4FF00003 		mov	r3, #0
 495 0272 FB73     		strb	r3, [r7, #15]
 496 0274 15E0     		b	.L12
 497              	.L13:
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      HASH_ContextSave->HASH_CSR[i] = HASH->CSR[i];
 498              		.loc 1 399 0 discriminator 2
 499 0276 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 500 0278 4FF48063 		mov	r3, #1024
 501 027c C5F20603 		movt	r3, 20486
 502 0280 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 503 0282 02F13E02 		add	r2, r2, #62
 504 0286 53F82230 		ldr	r3, [r3, r2, lsl #2]
 505 028a 1A46     		mov	r2, r3
 506 028c 7968     		ldr	r1, [r7, #4]
 507 028e 00F10203 		add	r3, r0, #2
 508 0292 4FEA8303 		lsl	r3, r3, #2
 509 0296 CB18     		adds	r3, r1, r3
 510 0298 5A60     		str	r2, [r3, #4]
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 511              		.loc 1 397 0 discriminator 2
 512 029a FB7B     		ldrb	r3, [r7, #15]
 513 029c 03F10103 		add	r3, r3, #1
 514 02a0 FB73     		strb	r3, [r7, #15]
 515              	.L12:
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 516              		.loc 1 397 0 is_stmt 0 discriminator 1
 517 02a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 518 02a4 322B     		cmp	r3, #50
 519 02a6 E6D9     		bls	.L13
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }   
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 520              		.loc 1 401 0 is_stmt 1
 521 02a8 07F11407 		add	r7, r7, #20
 522 02ac BD46     		mov	sp, r7
 523 02ae 80BC     		pop	{r7}
 524 02b0 7047     		bx	lr
 525              		.cfi_endproc
 526              	.LFE119:
 528 02b2 00BF     		.align	2
 529              		.global	HASH_RestoreContext
 530              		.thumb
 531              		.thumb_func
 533              	HASH_RestoreContext:
 534              	.LFB120:
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Restore the Hash peripheral Context.  
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   After calling this function, user can restart the processing from the
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         point where it has been interrupted.  
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_ContextRestore: pointer to a HASH_Context structure that contains
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the repository for saved context.
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_RestoreContext(HASH_Context* HASH_ContextRestore)  
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 535              		.loc 1 412 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 16
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540 02b4 80B4     		push	{r7}
 541              	.LCFI26:
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 7, -4
 544 02b6 85B0     		sub	sp, sp, #20
 545              	.LCFI27:
 546              		.cfi_def_cfa_offset 24
 547 02b8 00AF     		add	r7, sp, #0
 548              	.LCFI28:
 549              		.cfi_def_cfa_register 7
 550 02ba 7860     		str	r0, [r7, #4]
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 551              		.loc 1 413 0
 552 02bc 4FF00003 		mov	r3, #0
 553 02c0 FB73     		strb	r3, [r7, #15]
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* restore context registers */
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->IMR = HASH_ContextRestore->HASH_IMR;   
 554              		.loc 1 416 0
 555 02c2 4FF48063 		mov	r3, #1024
 556 02c6 C5F20603 		movt	r3, 20486
 557 02ca 7A68     		ldr	r2, [r7, #4]
 558 02cc 1268     		ldr	r2, [r2, #0]
 559 02ce 1A62     		str	r2, [r3, #32]
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR = HASH_ContextRestore->HASH_STR;     
 560              		.loc 1 417 0
 561 02d0 4FF48063 		mov	r3, #1024
 562 02d4 C5F20603 		movt	r3, 20486
 563 02d8 7A68     		ldr	r2, [r7, #4]
 564 02da 5268     		ldr	r2, [r2, #4]
 565 02dc 9A60     		str	r2, [r3, #8]
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR = HASH_ContextRestore->HASH_CR;
 566              		.loc 1 418 0
 567 02de 4FF48063 		mov	r3, #1024
 568 02e2 C5F20603 		movt	r3, 20486
 569 02e6 7A68     		ldr	r2, [r7, #4]
 570 02e8 9268     		ldr	r2, [r2, #8]
 571 02ea 1A60     		str	r2, [r3, #0]
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the hash processor */
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT; 
 572              		.loc 1 421 0
 573 02ec 4FF48063 		mov	r3, #1024
 574 02f0 C5F20603 		movt	r3, 20486
 575 02f4 4FF48062 		mov	r2, #1024
 576 02f8 C5F20602 		movt	r2, 20486
 577 02fc 1268     		ldr	r2, [r2, #0]
 578 02fe 42F00402 		orr	r2, r2, #4
 579 0302 1A60     		str	r2, [r3, #0]
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    /* continue restoring context registers */     
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 580              		.loc 1 424 0
 581 0304 4FF00003 		mov	r3, #0
 582 0308 FB73     		strb	r3, [r7, #15]
 583 030a 14E0     		b	.L15
 584              	.L16:
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      HASH->CSR[i] = HASH_ContextRestore->HASH_CSR[i];
 585              		.loc 1 426 0 discriminator 2
 586 030c 4FF48063 		mov	r3, #1024
 587 0310 C5F20603 		movt	r3, 20486
 588 0314 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 589 0316 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 590 0318 7968     		ldr	r1, [r7, #4]
 591 031a 02F10202 		add	r2, r2, #2
 592 031e 4FEA8202 		lsl	r2, r2, #2
 593 0322 8A18     		adds	r2, r1, r2
 594 0324 5168     		ldr	r1, [r2, #4]
 595 0326 00F13E02 		add	r2, r0, #62
 596 032a 43F82210 		str	r1, [r3, r2, lsl #2]
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 597              		.loc 1 424 0 discriminator 2
 598 032e FB7B     		ldrb	r3, [r7, #15]
 599 0330 03F10103 		add	r3, r3, #1
 600 0334 FB73     		strb	r3, [r7, #15]
 601              	.L15:
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 602              		.loc 1 424 0 is_stmt 0 discriminator 1
 603 0336 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 604 0338 322B     		cmp	r3, #50
 605 033a E7D9     		bls	.L16
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }   
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 606              		.loc 1 428 0 is_stmt 1
 607 033c 07F11407 		add	r7, r7, #20
 608 0340 BD46     		mov	sp, r7
 609 0342 80BC     		pop	{r7}
 610 0344 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE120:
 614 0346 00BF     		.align	2
 615              		.global	HASH_DMACmd
 616              		.thumb
 617              		.thumb_func
 619              	HASH_DMACmd:
 620              	.LFB121:
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group4 HASH's DMA interface Configuration function
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   HASH's DMA interface Configuration function 
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                    HASH's DMA interface Configuration function
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to configure the DMA interface for 
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH/ HMAC data input transfer.
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   When the DMA mode is enabled (using the HASH_DMACmd() function), data can be 
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   sent to the IN FIFO using the DMA peripheral.
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the HASH DMA interface.
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The DMA is disabled by hardware after the end of transfer.
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DMACmd(FunctionalState NewState)
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 621              		.loc 1 461 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626 0348 80B4     		push	{r7}
 627              	.LCFI29:
 628              		.cfi_def_cfa_offset 4
 629              		.cfi_offset 7, -4
 630 034a 83B0     		sub	sp, sp, #12
 631              	.LCFI30:
 632              		.cfi_def_cfa_offset 16
 633 034c 00AF     		add	r7, sp, #0
 634              	.LCFI31:
 635              		.cfi_def_cfa_register 7
 636 034e 0346     		mov	r3, r0
 637 0350 FB71     		strb	r3, [r7, #7]
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 638              		.loc 1 465 0
 639 0352 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 640 0354 002B     		cmp	r3, #0
 641 0356 0CD0     		beq	.L18
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Enable the HASH DMA request */
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_DMAE;
 642              		.loc 1 468 0
 643 0358 4FF48063 		mov	r3, #1024
 644 035c C5F20603 		movt	r3, 20486
 645 0360 4FF48062 		mov	r2, #1024
 646 0364 C5F20602 		movt	r2, 20486
 647 0368 1268     		ldr	r2, [r2, #0]
 648 036a 42F00802 		orr	r2, r2, #8
 649 036e 1A60     		str	r2, [r3, #0]
 650 0370 0BE0     		b	.L17
 651              	.L18:
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Disable the HASH DMA request */
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_DMAE;
 652              		.loc 1 473 0
 653 0372 4FF48063 		mov	r3, #1024
 654 0376 C5F20603 		movt	r3, 20486
 655 037a 4FF48062 		mov	r2, #1024
 656 037e C5F20602 		movt	r2, 20486
 657 0382 1268     		ldr	r2, [r2, #0]
 658 0384 22F00802 		bic	r2, r2, #8
 659 0388 1A60     		str	r2, [r3, #0]
 660              	.L17:
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 661              		.loc 1 475 0
 662 038a 07F10C07 		add	r7, r7, #12
 663 038e BD46     		mov	sp, r7
 664 0390 80BC     		pop	{r7}
 665 0392 7047     		bx	lr
 666              		.cfi_endproc
 667              	.LFE121:
 669              		.align	2
 670              		.global	HASH_ITConfig
 671              		.thumb
 672              		.thumb_func
 674              	HASH_ITConfig:
 675              	.LFB122:
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group5 Interrupts and flags management functions
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   Interrupts and flags management functions
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                    Interrupts and flags management functions
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to configure the HASH Interrupts and 
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   to get the status and clear flags and Interrupts pending bits.
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   The HASH provides 2 Interrupts sources and 5 Flags:
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Flags :
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ---------- 
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      1. HASH_FLAG_DINIS : set when 16 locations are free in the Data IN FIFO 
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           which means that a  new block (512 bit) can be entered 
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           into the input buffer.
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      2. HASH_FLAG_DCIS :  set when Digest calculation is complete
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      3. HASH_FLAG_DMAS :  set when HASH's DMA interface is enabled (DMAE=1) or 
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           a transfer is ongoing.
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware.
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                            
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      4. HASH_FLAG_BUSY :  set when The hash core is processing a block of data
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware. 
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                            
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      5. HASH_FLAG_DINNE : set when Data IN FIFO is not empty which means that 
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           the Data IN FIFO contains at least one word of data.
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware.
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Interrupts :
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ------------
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    1. HASH_IT_DINI  : if enabled, this interrupt source is pending when 16 
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       locations are free in the Data IN FIFO  which means that 
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       a new block (512 bit) can be entered into the input buffer.
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       This interrupt source is cleared using 
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       HASH_ClearITPendingBit(HASH_IT_DINI) function.
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    2. HASH_IT_DCI   : if enabled, this interrupt source is pending when Digest 
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       calculation is complete.
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       This interrupt source is cleared using 
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       HASH_ClearITPendingBit(HASH_IT_DCI) function.
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Managing the HASH controller events :
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ------------------------------------ 
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   The user should identify which mode will be used in his application to manage 
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   the HASH controller events: Polling mode or Interrupt mode.
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   1.  In the Polling Mode it is advised to use the following functions:
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_GetFlagStatus() : to check if flags events occur. 
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ClearFlag()     : to clear the flags events.
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ITConfig()       : to enable or disable the interrupt source.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_GetITStatus()    : to check if Interrupt occurs.
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ClearITPendingBit() : to clear the Interrupt pending Bit 
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                                 (corresponding Flag). 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the specified HASH interrupts.
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to be enabled or disabled.
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the specified HASH interrupt.
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           This parameter can be: ENABLE or DISABLE.
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ITConfig(uint8_t HASH_IT, FunctionalState NewState)
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 676              		.loc 1 556 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 8
 679              		@ frame_needed = 1, uses_anonymous_args = 0
 680              		@ link register save eliminated.
 681 0394 80B4     		push	{r7}
 682              	.LCFI32:
 683              		.cfi_def_cfa_offset 4
 684              		.cfi_offset 7, -4
 685 0396 83B0     		sub	sp, sp, #12
 686              	.LCFI33:
 687              		.cfi_def_cfa_offset 16
 688 0398 00AF     		add	r7, sp, #0
 689              	.LCFI34:
 690              		.cfi_def_cfa_register 7
 691 039a 0246     		mov	r2, r0
 692 039c 0B46     		mov	r3, r1
 693 039e FA71     		strb	r2, [r7, #7]
 694 03a0 BB71     		strb	r3, [r7, #6]
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 695              		.loc 1 561 0
 696 03a2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 697 03a4 002B     		cmp	r3, #0
 698 03a6 0DD0     		beq	.L21
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Enable the selected HASH interrupt */
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->IMR |= HASH_IT;
 699              		.loc 1 564 0
 700 03a8 4FF48063 		mov	r3, #1024
 701 03ac C5F20603 		movt	r3, 20486
 702 03b0 4FF48062 		mov	r2, #1024
 703 03b4 C5F20602 		movt	r2, 20486
 704 03b8 126A     		ldr	r2, [r2, #32]
 705 03ba 1146     		mov	r1, r2
 706 03bc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 707 03be 0A43     		orrs	r2, r2, r1
 708 03c0 1A62     		str	r2, [r3, #32]
 709 03c2 0FE0     		b	.L20
 710              	.L21:
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Disable the selected HASH interrupt */
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->IMR &= (uint8_t) ~HASH_IT;
 711              		.loc 1 569 0
 712 03c4 4FF48063 		mov	r3, #1024
 713 03c8 C5F20603 		movt	r3, 20486
 714 03cc 4FF48062 		mov	r2, #1024
 715 03d0 C5F20602 		movt	r2, 20486
 716 03d4 126A     		ldr	r2, [r2, #32]
 717 03d6 1146     		mov	r1, r2
 718 03d8 FA79     		ldrb	r2, [r7, #7]
 719 03da 6FEA0202 		mvn	r2, r2
 720 03de D2B2     		uxtb	r2, r2
 721 03e0 0A40     		ands	r2, r2, r1
 722 03e2 1A62     		str	r2, [r3, #32]
 723              	.L20:
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 724              		.loc 1 571 0
 725 03e4 07F10C07 		add	r7, r7, #12
 726 03e8 BD46     		mov	sp, r7
 727 03ea 80BC     		pop	{r7}
 728 03ec 7047     		bx	lr
 729              		.cfi_endproc
 730              	.LFE122:
 732 03ee 00BF     		.align	2
 733              		.global	HASH_GetFlagStatus
 734              		.thumb
 735              		.thumb_func
 737              	HASH_GetFlagStatus:
 738              	.LFB123:
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH flag is set or not.
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the HASH flag to check.
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data input interrupt status flag
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest calculation completion interrupt status flag
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_BUSY: Busy flag
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DMAS: DMAS Status flag
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINNE: Data Input register (DIN) not empty status flag
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_FLAG (SET or RESET)
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** FlagStatus HASH_GetFlagStatus(uint16_t HASH_FLAG)
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 739              		.loc 1 585 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 16
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744 03f0 80B4     		push	{r7}
 745              	.LCFI35:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 03f2 85B0     		sub	sp, sp, #20
 749              	.LCFI36:
 750              		.cfi_def_cfa_offset 24
 751 03f4 00AF     		add	r7, sp, #0
 752              	.LCFI37:
 753              		.cfi_def_cfa_register 7
 754 03f6 0346     		mov	r3, r0
 755 03f8 FB80     		strh	r3, [r7, #6]	@ movhi
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   FlagStatus bitstatus = RESET;
 756              		.loc 1 586 0
 757 03fa 4FF00003 		mov	r3, #0
 758 03fe FB73     		strb	r3, [r7, #15]
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint32_t tempreg = 0;
 759              		.loc 1 587 0
 760 0400 4FF00003 		mov	r3, #0
 761 0404 BB60     		str	r3, [r7, #8]
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_FLAG(HASH_FLAG));
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* check if the FLAG is in CR register */
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if ((HASH_FLAG & HASH_FLAG_DINNE) != (uint16_t)RESET ) 
 762              		.loc 1 593 0
 763 0406 FB88     		ldrh	r3, [r7, #6]
 764 0408 03F48053 		and	r3, r3, #4096
 765 040c 002B     		cmp	r3, #0
 766 040e 06D0     		beq	.L24
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     tempreg = HASH->CR;
 767              		.loc 1 595 0
 768 0410 4FF48063 		mov	r3, #1024
 769 0414 C5F20603 		movt	r3, 20486
 770 0418 1B68     		ldr	r3, [r3, #0]
 771 041a BB60     		str	r3, [r7, #8]
 772 041c 05E0     		b	.L25
 773              	.L24:
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else /* The FLAG is in SR register */
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     tempreg = HASH->SR;
 774              		.loc 1 599 0
 775 041e 4FF48063 		mov	r3, #1024
 776 0422 C5F20603 		movt	r3, 20486
 777 0426 5B6A     		ldr	r3, [r3, #36]
 778 0428 BB60     		str	r3, [r7, #8]
 779              	.L25:
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH flag */
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if ((tempreg & HASH_FLAG) != (uint16_t)RESET)
 780              		.loc 1 603 0
 781 042a FA88     		ldrh	r2, [r7, #6]
 782 042c BB68     		ldr	r3, [r7, #8]
 783 042e 1340     		ands	r3, r3, r2
 784 0430 002B     		cmp	r3, #0
 785 0432 03D0     		beq	.L26
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH is set */
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = SET;
 786              		.loc 1 606 0
 787 0434 4FF00103 		mov	r3, #1
 788 0438 FB73     		strb	r3, [r7, #15]
 789 043a 02E0     		b	.L27
 790              	.L26:
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_FLAG is reset */
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 791              		.loc 1 611 0
 792 043c 4FF00003 		mov	r3, #0
 793 0440 FB73     		strb	r3, [r7, #15]
 794              	.L27:
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the HASH_FLAG status */
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return  bitstatus;
 795              		.loc 1 615 0
 796 0442 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 797              		.loc 1 616 0
 798 0444 1846     		mov	r0, r3
 799 0446 07F11407 		add	r7, r7, #20
 800 044a BD46     		mov	sp, r7
 801 044c 80BC     		pop	{r7}
 802 044e 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE123:
 806              		.align	2
 807              		.global	HASH_ClearFlag
 808              		.thumb
 809              		.thumb_func
 811              	HASH_ClearFlag:
 812              	.LFB124:
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH flags.
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the flag to clear. 
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data Input Flag
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest Calculation Completion Flag                       
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ClearFlag(uint16_t HASH_FLAG)
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 813              		.loc 1 626 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 8
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817              		@ link register save eliminated.
 818 0450 80B4     		push	{r7}
 819              	.LCFI38:
 820              		.cfi_def_cfa_offset 4
 821              		.cfi_offset 7, -4
 822 0452 83B0     		sub	sp, sp, #12
 823              	.LCFI39:
 824              		.cfi_def_cfa_offset 16
 825 0454 00AF     		add	r7, sp, #0
 826              	.LCFI40:
 827              		.cfi_def_cfa_register 7
 828 0456 0346     		mov	r3, r0
 829 0458 FB80     		strh	r3, [r7, #6]	@ movhi
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_CLEAR_FLAG(HASH_FLAG));
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Clear the selected HASH flags */
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->SR = ~(uint32_t)HASH_FLAG;
 830              		.loc 1 631 0
 831 045a 4FF48063 		mov	r3, #1024
 832 045e C5F20603 		movt	r3, 20486
 833 0462 FA88     		ldrh	r2, [r7, #6]
 834 0464 6FEA0202 		mvn	r2, r2
 835 0468 5A62     		str	r2, [r3, #36]
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 836              		.loc 1 632 0
 837 046a 07F10C07 		add	r7, r7, #12
 838 046e BD46     		mov	sp, r7
 839 0470 80BC     		pop	{r7}
 840 0472 7047     		bx	lr
 841              		.cfi_endproc
 842              	.LFE124:
 844              		.align	2
 845              		.global	HASH_GetITStatus
 846              		.thumb
 847              		.thumb_func
 849              	HASH_GetITStatus:
 850              	.LFB125:
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH interrupt has occurred or not.
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to check.
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_IT (SET or RESET).
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** ITStatus HASH_GetITStatus(uint8_t HASH_IT)
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 851              		.loc 1 642 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 16
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856 0474 80B4     		push	{r7}
 857              	.LCFI41:
 858              		.cfi_def_cfa_offset 4
 859              		.cfi_offset 7, -4
 860 0476 85B0     		sub	sp, sp, #20
 861              	.LCFI42:
 862              		.cfi_def_cfa_offset 24
 863 0478 00AF     		add	r7, sp, #0
 864              	.LCFI43:
 865              		.cfi_def_cfa_register 7
 866 047a 0346     		mov	r3, r0
 867 047c FB71     		strb	r3, [r7, #7]
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ITStatus bitstatus = RESET;
 868              		.loc 1 643 0
 869 047e 4FF00003 		mov	r3, #0
 870 0482 FB73     		strb	r3, [r7, #15]
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint32_t tmpreg = 0;
 871              		.loc 1 644 0
 872 0484 4FF00003 		mov	r3, #0
 873 0488 BB60     		str	r3, [r7, #8]
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_IT(HASH_IT));  
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH interrupt */
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   tmpreg =  HASH->SR;
 874              		.loc 1 651 0
 875 048a 4FF48063 		mov	r3, #1024
 876 048e C5F20603 		movt	r3, 20486
 877 0492 5B6A     		ldr	r3, [r3, #36]
 878 0494 BB60     		str	r3, [r7, #8]
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (((HASH->IMR & tmpreg) & HASH_IT) != RESET)
 879              		.loc 1 653 0
 880 0496 4FF48063 		mov	r3, #1024
 881 049a C5F20603 		movt	r3, 20486
 882 049e 1B6A     		ldr	r3, [r3, #32]
 883 04a0 1A46     		mov	r2, r3
 884 04a2 BB68     		ldr	r3, [r7, #8]
 885 04a4 1A40     		ands	r2, r2, r3
 886 04a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 887 04a8 1340     		ands	r3, r3, r2
 888 04aa 002B     		cmp	r3, #0
 889 04ac 03D0     		beq	.L30
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_IT is set */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = SET;
 890              		.loc 1 656 0
 891 04ae 4FF00103 		mov	r3, #1
 892 04b2 FB73     		strb	r3, [r7, #15]
 893 04b4 02E0     		b	.L31
 894              	.L30:
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_IT is reset */
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 895              		.loc 1 661 0
 896 04b6 4FF00003 		mov	r3, #0
 897 04ba FB73     		strb	r3, [r7, #15]
 898              	.L31:
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the HASH_IT status */
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return bitstatus;
 899              		.loc 1 664 0
 900 04bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 901              		.loc 1 665 0
 902 04be 1846     		mov	r0, r3
 903 04c0 07F11407 		add	r7, r7, #20
 904 04c4 BD46     		mov	sp, r7
 905 04c6 80BC     		pop	{r7}
 906 04c8 7047     		bx	lr
 907              		.cfi_endproc
 908              	.LFE125:
 910 04ca 00BF     		.align	2
 911              		.global	HASH_ClearITPendingBit
 912              		.thumb
 913              		.thumb_func
 915              	HASH_ClearITPendingBit:
 916              	.LFB126:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH interrupt pending bit(s).
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt pending bit(s) to clear.
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ClearITPendingBit(uint8_t HASH_IT)
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 917              		.loc 1 676 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 8
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 922 04cc 80B4     		push	{r7}
 923              	.LCFI44:
 924              		.cfi_def_cfa_offset 4
 925              		.cfi_offset 7, -4
 926 04ce 83B0     		sub	sp, sp, #12
 927              	.LCFI45:
 928              		.cfi_def_cfa_offset 16
 929 04d0 00AF     		add	r7, sp, #0
 930              	.LCFI46:
 931              		.cfi_def_cfa_register 7
 932 04d2 0346     		mov	r3, r0
 933 04d4 FB71     		strb	r3, [r7, #7]
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Clear the selected HASH interrupt pending bit */
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->SR = (uint8_t)~HASH_IT;
 934              		.loc 1 681 0
 935 04d6 4FF48063 		mov	r3, #1024
 936 04da C5F20603 		movt	r3, 20486
 937 04de FA79     		ldrb	r2, [r7, #7]
 938 04e0 6FEA0202 		mvn	r2, r2
 939 04e4 D2B2     		uxtb	r2, r2
 940 04e6 5A62     		str	r2, [r3, #36]
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 941              		.loc 1 682 0
 942 04e8 07F10C07 		add	r7, r7, #12
 943 04ec BD46     		mov	sp, r7
 944 04ee 80BC     		pop	{r7}
 945 04f0 7047     		bx	lr
 946              		.cfi_endproc
 947              	.LFE126:
 949              	.Letext0:
 950              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 951              		.file 3 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm3
 952              		.file 4 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f
 953              		.file 5 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash.c
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:18     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:23     .text:00000000 HASH_DeInit
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:56     .text:00000020 HASH_Init
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:150    .text:000000c8 HASH_StructInit
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:197    .text:000000fc HASH_Reset
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:231    .text:00000120 HASH_SetLastWordValidBitsNbr
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:281    .text:00000168 HASH_DataIn
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:317    .text:00000188 HASH_GetInFIFOWordsNbr
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:351    .text:000001a8 HASH_GetDigest
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:417    .text:0000020c HASH_StartDigest
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:451    .text:00000230 HASH_SaveContext
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:533    .text:000002b4 HASH_RestoreContext
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:619    .text:00000348 HASH_DMACmd
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:674    .text:00000394 HASH_ITConfig
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:737    .text:000003f0 HASH_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:811    .text:00000450 HASH_ClearFlag
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:849    .text:00000474 HASH_GetITStatus
C:\Users\Alex\AppData\Local\Temp\ccr5OMxG.s:915    .text:000004cc HASH_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
