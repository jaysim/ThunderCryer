   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_iwdg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  19              		.align	1
  20              		.global	IWDG_WriteAccessCmd
  21              		.thumb
  22              		.thumb_func
  24              	IWDG_WriteAccessCmd:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @file    stm32f4xx_iwdg.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          functionalities of the Independent watchdog (IWDG) peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Prescaler and Counter configuration
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - IWDG activation
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Flag management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @verbatim  
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                     IWDG features
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG can be started by either software or hardware (configurable
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          through option byte).
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is clocked by its own dedicated low-speed clock (LSI) and
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          thus stays active even if the main clock fails.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Once the IWDG is started, the LSI is forced ON and cannot be disabled
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          (LSI cannot be disabled too), and the counter starts counting down from 
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          the reset value of 0xFFF. When it reaches the end of count value (0x000)
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          a system reset is generated.
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG counter should be reloaded at regular intervals to prevent
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          an MCU reset.
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                           
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is implemented in the VDD voltage domain that is still functional
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).          
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          IWDGRST flag in RCC_CSR register can be used to inform when a IWDG
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          reset occurs.
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG timeout may vary due to LSI frequency dispersion. STM32F4xx
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          devices provide the capability to measure the LSI frequency (LSI clock
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          connected internally to TIM5 CH4 input capture). The measured value
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          can be used to have an IWDG timeout with an acceptable accuracy. 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          For more information, please refer to the STM32F4xx Reference manual
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                            
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                 How to use this driver
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          1. Enable write access to IWDG_PR and IWDG_RLR registers using
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable) function
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *               
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          2. Configure the IWDG prescaler using IWDG_SetPrescaler() function
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          3. Configure the IWDG counter value using IWDG_SetReload() function.
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             This value will be loaded in the IWDG counter each time the counter
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             is reloaded, then the IWDG will start counting down from this value.
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          4. Start the IWDG using IWDG_Enable() function, when the IWDG is used
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             in software mode (no need to enable the LSI, it will be enabled
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             by hardware)
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          5. Then the application program must reload the IWDG counter at regular
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_ReloadCounter() function.      
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @endverbatim
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @attention
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #include "stm32f4xx_iwdg.h"
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG 
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief IWDG driver modules
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */ 
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private define ------------------------------------------------------------*/
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* KR register bit mask */
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_RELOAD    ((uint16_t)0xAAAA)
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_ENABLE    ((uint16_t)0xCCCC)
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private functions ---------------------------------------------------------*/
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Private_Functions
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group1 Prescaler and Counter configuration functions
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   Prescaler and Counter configuration functions
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                   Prescaler and Counter configuration functions
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR register
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  27              		.loc 1 130 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  33              		.loc 1 133 0
  34 0000 014B     		ldr	r3, .L2
  35 0002 1860     		str	r0, [r3, #0]
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
  36              		.loc 1 134 0
  37 0004 7047     		bx	lr
  38              	.L3:
  39 0006 00BF     		.align	2
  40              	.L2:
  41 0008 00300040 		.word	1073754112
  42              		.cfi_endproc
  43              	.LFE110:
  45              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  46              		.align	1
  47              		.global	IWDG_SetPrescaler
  48              		.thumb
  49              		.thumb_func
  51              	IWDG_SetPrescaler:
  52              	.LFB111:
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  53              		.loc 1 150 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL1:
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
  59              		.loc 1 153 0
  60 0000 014B     		ldr	r3, .L5
  61 0002 5860     		str	r0, [r3, #4]
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
  62              		.loc 1 154 0
  63 0004 7047     		bx	lr
  64              	.L6:
  65 0006 00BF     		.align	2
  66              	.L5:
  67 0008 00300040 		.word	1073754112
  68              		.cfi_endproc
  69              	.LFE111:
  71              		.section	.text.IWDG_SetReload,"ax",%progbits
  72              		.align	1
  73              		.global	IWDG_SetReload
  74              		.thumb
  75              		.thumb_func
  77              	IWDG_SetReload:
  78              	.LFB112:
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Reload value.
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter must be a number between 0 and 0x0FFF.
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  79              		.loc 1 163 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL2:
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->RLR = Reload;
  85              		.loc 1 166 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 9860     		str	r0, [r3, #8]
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
  88              		.loc 1 167 0
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 00300040 		.word	1073754112
  94              		.cfi_endproc
  95              	.LFE112:
  97              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
  98              		.align	1
  99              		.global	IWDG_ReloadCounter
 100              		.thumb
 101              		.thumb_func
 103              	IWDG_ReloadCounter:
 104              	.LFB113:
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *         (write access to IWDG_PR and IWDG_RLR registers disabled).
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_ReloadCounter(void)
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 105              		.loc 1 176 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_RELOAD;
 110              		.loc 1 177 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 4AF6AA22 		movw	r2, #43690
 113 0006 1A60     		str	r2, [r3, #0]
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 114              		.loc 1 178 0
 115 0008 7047     		bx	lr
 116              	.L12:
 117 000a 00BF     		.align	2
 118              	.L11:
 119 000c 00300040 		.word	1073754112
 120              		.cfi_endproc
 121              	.LFE113:
 123              		.section	.text.IWDG_Enable,"ax",%progbits
 124              		.align	1
 125              		.global	IWDG_Enable
 126              		.thumb
 127              		.thumb_func
 129              	IWDG_Enable:
 130              	.LFB114:
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group2 IWDG activation function
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   IWDG activation function 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                           IWDG activation function
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_Enable(void)
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 131              		.loc 1 202 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_ENABLE;
 136              		.loc 1 203 0
 137 0000 024B     		ldr	r3, .L14
 138 0002 4CF6CC42 		movw	r2, #52428
 139 0006 1A60     		str	r2, [r3, #0]
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 140              		.loc 1 204 0
 141 0008 7047     		bx	lr
 142              	.L15:
 143 000a 00BF     		.align	2
 144              	.L14:
 145 000c 00300040 		.word	1073754112
 146              		.cfi_endproc
 147              	.LFE114:
 149              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 150              		.align	1
 151              		.global	IWDG_GetFlagStatus
 152              		.thumb
 153              		.thumb_func
 155              	IWDG_GetFlagStatus:
 156              	.LFB115:
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group3 Flag management function 
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief  Flag management function  
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                             Flag management function 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_RVU: Reload Value Update on going
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 157              		.loc 1 231 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162              	.LVL3:
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   FlagStatus bitstatus = RESET;
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 163              		.loc 1 235 0
 164 0000 034B     		ldr	r3, .L17
 165 0002 DB68     		ldr	r3, [r3, #12]
 166              	.LVL4:
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = SET;
 167              		.loc 1 237 0
 168 0004 1842     		tst	r0, r3
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   else
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = RESET;
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Return the flag status */
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   return bitstatus;
 169              		.loc 1 244 0
 170 0006 0CBF     		ite	eq
 171 0008 0020     		moveq	r0, #0
 172 000a 0120     		movne	r0, #1
 173              	.LVL5:
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 174              		.loc 1 245 0
 175 000c 7047     		bx	lr
 176              	.L18:
 177 000e 00BF     		.align	2
 178              	.L17:
 179 0010 00300040 		.word	1073754112
 180              		.cfi_endproc
 181              	.LFE115:
 183              		.text
 184              	.Letext0:
 185              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 186              		.file 3 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4x
 187              		.file 4 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_iwdg.c
  C:\Temp\ccwrv0to.s:19     .text.IWDG_WriteAccessCmd:00000000 $t
  C:\Temp\ccwrv0to.s:24     .text.IWDG_WriteAccessCmd:00000000 IWDG_WriteAccessCmd
  C:\Temp\ccwrv0to.s:41     .text.IWDG_WriteAccessCmd:00000008 $d
  C:\Temp\ccwrv0to.s:46     .text.IWDG_SetPrescaler:00000000 $t
  C:\Temp\ccwrv0to.s:51     .text.IWDG_SetPrescaler:00000000 IWDG_SetPrescaler
  C:\Temp\ccwrv0to.s:67     .text.IWDG_SetPrescaler:00000008 $d
  C:\Temp\ccwrv0to.s:72     .text.IWDG_SetReload:00000000 $t
  C:\Temp\ccwrv0to.s:77     .text.IWDG_SetReload:00000000 IWDG_SetReload
  C:\Temp\ccwrv0to.s:93     .text.IWDG_SetReload:00000008 $d
  C:\Temp\ccwrv0to.s:98     .text.IWDG_ReloadCounter:00000000 $t
  C:\Temp\ccwrv0to.s:103    .text.IWDG_ReloadCounter:00000000 IWDG_ReloadCounter
  C:\Temp\ccwrv0to.s:119    .text.IWDG_ReloadCounter:0000000c $d
  C:\Temp\ccwrv0to.s:124    .text.IWDG_Enable:00000000 $t
  C:\Temp\ccwrv0to.s:129    .text.IWDG_Enable:00000000 IWDG_Enable
  C:\Temp\ccwrv0to.s:145    .text.IWDG_Enable:0000000c $d
  C:\Temp\ccwrv0to.s:150    .text.IWDG_GetFlagStatus:00000000 $t
  C:\Temp\ccwrv0to.s:155    .text.IWDG_GetFlagStatus:00000000 IWDG_GetFlagStatus
  C:\Temp\ccwrv0to.s:179    .text.IWDG_GetFlagStatus:00000010 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
