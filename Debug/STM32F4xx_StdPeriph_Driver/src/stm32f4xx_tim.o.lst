   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	TIM_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	TIM_DeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  26              		.loc 1 195 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 82B0     		sub	sp, sp, #8
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
  42              		.loc 1 199 0
  43 0008 7A68     		ldr	r2, [r7, #4]
  44 000a 4FF00003 		mov	r3, #0
  45 000e C4F20103 		movt	r3, 16385
  46 0012 9A42     		cmp	r2, r3
  47 0014 0CD1     		bne	.L2
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  48              		.loc 1 201 0
  49 0016 4FF00100 		mov	r0, #1
  50 001a 4FF00101 		mov	r1, #1
  51 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  52              		.loc 1 202 0
  53 0022 4FF00100 		mov	r0, #1
  54 0026 4FF00001 		mov	r1, #0
  55 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  56 002e FFE0     		b	.L1
  57              	.L2:
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
  58              		.loc 1 204 0
  59 0030 7B68     		ldr	r3, [r7, #4]
  60 0032 B3F1804F 		cmp	r3, #1073741824
  61 0036 0CD1     		bne	.L4
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  62              		.loc 1 206 0
  63 0038 4FF00100 		mov	r0, #1
  64 003c 4FF00101 		mov	r1, #1
  65 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  66              		.loc 1 207 0
  67 0044 4FF00100 		mov	r0, #1
  68 0048 4FF00001 		mov	r1, #0
  69 004c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  70 0050 EEE0     		b	.L1
  71              	.L4:
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
  72              		.loc 1 209 0
  73 0052 7A68     		ldr	r2, [r7, #4]
  74 0054 4FF48063 		mov	r3, #1024
  75 0058 C4F20003 		movt	r3, 16384
  76 005c 9A42     		cmp	r2, r3
  77 005e 0CD1     		bne	.L5
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  78              		.loc 1 211 0
  79 0060 4FF00200 		mov	r0, #2
  80 0064 4FF00101 		mov	r1, #1
  81 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  82              		.loc 1 212 0
  83 006c 4FF00200 		mov	r0, #2
  84 0070 4FF00001 		mov	r1, #0
  85 0074 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  86 0078 DAE0     		b	.L1
  87              	.L5:
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
  88              		.loc 1 214 0
  89 007a 7A68     		ldr	r2, [r7, #4]
  90 007c 4FF40063 		mov	r3, #2048
  91 0080 C4F20003 		movt	r3, 16384
  92 0084 9A42     		cmp	r2, r3
  93 0086 0CD1     		bne	.L6
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  94              		.loc 1 216 0
  95 0088 4FF00400 		mov	r0, #4
  96 008c 4FF00101 		mov	r1, #1
  97 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
  98              		.loc 1 217 0
  99 0094 4FF00400 		mov	r0, #4
 100 0098 4FF00001 		mov	r1, #0
 101 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 102 00a0 C6E0     		b	.L1
 103              	.L6:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 104              		.loc 1 219 0
 105 00a2 7A68     		ldr	r2, [r7, #4]
 106 00a4 4FF44063 		mov	r3, #3072
 107 00a8 C4F20003 		movt	r3, 16384
 108 00ac 9A42     		cmp	r2, r3
 109 00ae 0CD1     		bne	.L7
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 110              		.loc 1 221 0
 111 00b0 4FF00800 		mov	r0, #8
 112 00b4 4FF00101 		mov	r1, #1
 113 00b8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 114              		.loc 1 222 0
 115 00bc 4FF00800 		mov	r0, #8
 116 00c0 4FF00001 		mov	r1, #0
 117 00c4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 118 00c8 B2E0     		b	.L1
 119              	.L7:
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 120              		.loc 1 224 0
 121 00ca 7A68     		ldr	r2, [r7, #4]
 122 00cc 4FF48053 		mov	r3, #4096
 123 00d0 C4F20003 		movt	r3, 16384
 124 00d4 9A42     		cmp	r2, r3
 125 00d6 0CD1     		bne	.L8
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 126              		.loc 1 226 0
 127 00d8 4FF01000 		mov	r0, #16
 128 00dc 4FF00101 		mov	r1, #1
 129 00e0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 130              		.loc 1 227 0
 131 00e4 4FF01000 		mov	r0, #16
 132 00e8 4FF00001 		mov	r1, #0
 133 00ec FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 134 00f0 9EE0     		b	.L1
 135              	.L8:
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 136              		.loc 1 229 0
 137 00f2 7A68     		ldr	r2, [r7, #4]
 138 00f4 4FF4A053 		mov	r3, #5120
 139 00f8 C4F20003 		movt	r3, 16384
 140 00fc 9A42     		cmp	r2, r3
 141 00fe 0CD1     		bne	.L9
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 142              		.loc 1 231 0
 143 0100 4FF02000 		mov	r0, #32
 144 0104 4FF00101 		mov	r1, #1
 145 0108 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 146              		.loc 1 232 0
 147 010c 4FF02000 		mov	r0, #32
 148 0110 4FF00001 		mov	r1, #0
 149 0114 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 150 0118 8AE0     		b	.L1
 151              	.L9:
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 152              		.loc 1 234 0
 153 011a 7A68     		ldr	r2, [r7, #4]
 154 011c 4FF48063 		mov	r3, #1024
 155 0120 C4F20103 		movt	r3, 16385
 156 0124 9A42     		cmp	r2, r3
 157 0126 0CD1     		bne	.L10
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 158              		.loc 1 236 0
 159 0128 4FF00200 		mov	r0, #2
 160 012c 4FF00101 		mov	r1, #1
 161 0130 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 162              		.loc 1 237 0
 163 0134 4FF00200 		mov	r0, #2
 164 0138 4FF00001 		mov	r1, #0
 165 013c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 166 0140 76E0     		b	.L1
 167              	.L10:
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 168              		.loc 1 239 0
 169 0142 7A68     		ldr	r2, [r7, #4]
 170 0144 4FF48043 		mov	r3, #16384
 171 0148 C4F20103 		movt	r3, 16385
 172 014c 9A42     		cmp	r2, r3
 173 014e 0CD1     		bne	.L11
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 174              		.loc 1 241 0
 175 0150 4FF48030 		mov	r0, #65536
 176 0154 4FF00101 		mov	r1, #1
 177 0158 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 178              		.loc 1 242 0
 179 015c 4FF48030 		mov	r0, #65536
 180 0160 4FF00001 		mov	r1, #0
 181 0164 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 182 0168 62E0     		b	.L1
 183              	.L11:
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 184              		.loc 1 244 0
 185 016a 7A68     		ldr	r2, [r7, #4]
 186 016c 4FF48843 		mov	r3, #17408
 187 0170 C4F20103 		movt	r3, 16385
 188 0174 9A42     		cmp	r2, r3
 189 0176 0CD1     		bne	.L12
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 190              		.loc 1 246 0
 191 0178 4FF40030 		mov	r0, #131072
 192 017c 4FF00101 		mov	r1, #1
 193 0180 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 194              		.loc 1 247 0
 195 0184 4FF40030 		mov	r0, #131072
 196 0188 4FF00001 		mov	r1, #0
 197 018c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 198 0190 4EE0     		b	.L1
 199              	.L12:
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 200              		.loc 1 249 0
 201 0192 7A68     		ldr	r2, [r7, #4]
 202 0194 4FF49043 		mov	r3, #18432
 203 0198 C4F20103 		movt	r3, 16385
 204 019c 9A42     		cmp	r2, r3
 205 019e 0CD1     		bne	.L13
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 206              		.loc 1 251 0
 207 01a0 4FF48020 		mov	r0, #262144
 208 01a4 4FF00101 		mov	r1, #1
 209 01a8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 210              		.loc 1 252 0
 211 01ac 4FF48020 		mov	r0, #262144
 212 01b0 4FF00001 		mov	r1, #0
 213 01b4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 214 01b8 3AE0     		b	.L1
 215              	.L13:
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 216              		.loc 1 254 0
 217 01ba 7A68     		ldr	r2, [r7, #4]
 218 01bc 4FF4C053 		mov	r3, #6144
 219 01c0 C4F20003 		movt	r3, 16384
 220 01c4 9A42     		cmp	r2, r3
 221 01c6 0CD1     		bne	.L14
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 222              		.loc 1 256 0
 223 01c8 4FF04000 		mov	r0, #64
 224 01cc 4FF00101 		mov	r1, #1
 225 01d0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 226              		.loc 1 257 0
 227 01d4 4FF04000 		mov	r0, #64
 228 01d8 4FF00001 		mov	r1, #0
 229 01dc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 230 01e0 26E0     		b	.L1
 231              	.L14:
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 232              		.loc 1 259 0
 233 01e2 7A68     		ldr	r2, [r7, #4]
 234 01e4 4FF4E053 		mov	r3, #7168
 235 01e8 C4F20003 		movt	r3, 16384
 236 01ec 9A42     		cmp	r2, r3
 237 01ee 0CD1     		bne	.L15
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 238              		.loc 1 261 0
 239 01f0 4FF08000 		mov	r0, #128
 240 01f4 4FF00101 		mov	r1, #1
 241 01f8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 242              		.loc 1 262 0
 243 01fc 4FF08000 		mov	r0, #128
 244 0200 4FF00001 		mov	r1, #0
 245 0204 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 246 0208 12E0     		b	.L1
 247              	.L15:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 248              		.loc 1 266 0
 249 020a 7A68     		ldr	r2, [r7, #4]
 250 020c 4FF40053 		mov	r3, #8192
 251 0210 C4F20003 		movt	r3, 16384
 252 0214 9A42     		cmp	r2, r3
 253 0216 0BD1     		bne	.L1
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 254              		.loc 1 268 0
 255 0218 4FF48070 		mov	r0, #256
 256 021c 4FF00101 		mov	r1, #1
 257 0220 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 258              		.loc 1 269 0
 259 0224 4FF48070 		mov	r0, #256
 260 0228 4FF00001 		mov	r1, #0
 261 022c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262              	.L1:
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 263              		.loc 1 272 0
 264 0230 07F10807 		add	r7, r7, #8
 265 0234 BD46     		mov	sp, r7
 266 0236 80BD     		pop	{r7, pc}
 267              		.cfi_endproc
 268              	.LFE110:
 270              		.align	2
 271              		.global	TIM_TimeBaseInit
 272              		.thumb
 273              		.thumb_func
 275              	TIM_TimeBaseInit:
 276              	.LFB111:
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 277              		.loc 1 283 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 16
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282 0238 80B4     		push	{r7}
 283              	.LCFI3:
 284              		.cfi_def_cfa_offset 4
 285              		.cfi_offset 7, -4
 286 023a 85B0     		sub	sp, sp, #20
 287              	.LCFI4:
 288              		.cfi_def_cfa_offset 24
 289 023c 00AF     		add	r7, sp, #0
 290              	.LCFI5:
 291              		.cfi_def_cfa_register 7
 292 023e 7860     		str	r0, [r7, #4]
 293 0240 3960     		str	r1, [r7, #0]
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 294              		.loc 1 284 0
 295 0242 4FF00003 		mov	r3, #0
 296 0246 FB81     		strh	r3, [r7, #14]	@ movhi
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 297              		.loc 1 291 0
 298 0248 7B68     		ldr	r3, [r7, #4]
 299 024a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 300 024c FB81     		strh	r3, [r7, #14]	@ movhi
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 301              		.loc 1 293 0
 302 024e 7A68     		ldr	r2, [r7, #4]
 303 0250 4FF00003 		mov	r3, #0
 304 0254 C4F20103 		movt	r3, 16385
 305 0258 9A42     		cmp	r2, r3
 306 025a 1FD0     		beq	.L17
 307              		.loc 1 293 0 is_stmt 0 discriminator 1
 308 025c 7A68     		ldr	r2, [r7, #4]
 309 025e 4FF48063 		mov	r3, #1024
 310 0262 C4F20103 		movt	r3, 16385
 311 0266 9A42     		cmp	r2, r3
 312 0268 18D0     		beq	.L17
 313 026a 7B68     		ldr	r3, [r7, #4]
 314 026c B3F1804F 		cmp	r3, #1073741824
 315 0270 14D0     		beq	.L17
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 316              		.loc 1 294 0 is_stmt 1
 317 0272 7A68     		ldr	r2, [r7, #4]
 318 0274 4FF48063 		mov	r3, #1024
 319 0278 C4F20003 		movt	r3, 16384
 320 027c 9A42     		cmp	r2, r3
 321 027e 0DD0     		beq	.L17
 322              		.loc 1 294 0 is_stmt 0 discriminator 1
 323 0280 7A68     		ldr	r2, [r7, #4]
 324 0282 4FF40063 		mov	r3, #2048
 325 0286 C4F20003 		movt	r3, 16384
 326 028a 9A42     		cmp	r2, r3
 327 028c 06D0     		beq	.L17
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 328              		.loc 1 295 0 is_stmt 1
 329 028e 7A68     		ldr	r2, [r7, #4]
 330 0290 4FF44063 		mov	r3, #3072
 331 0294 C4F20003 		movt	r3, 16384
 332 0298 9A42     		cmp	r2, r3
 333 029a 08D1     		bne	.L18
 334              	.L17:
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 335              		.loc 1 298 0
 336 029c FB89     		ldrh	r3, [r7, #14]	@ movhi
 337 029e 23F07003 		bic	r3, r3, #112
 338 02a2 FB81     		strh	r3, [r7, #14]	@ movhi
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 339              		.loc 1 299 0
 340 02a4 3B68     		ldr	r3, [r7, #0]
 341 02a6 5A88     		ldrh	r2, [r3, #2]
 342 02a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 343 02aa 1343     		orrs	r3, r3, r2
 344 02ac FB81     		strh	r3, [r7, #14]	@ movhi
 345              	.L18:
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 346              		.loc 1 302 0
 347 02ae 7A68     		ldr	r2, [r7, #4]
 348 02b0 4FF48053 		mov	r3, #4096
 349 02b4 C4F20003 		movt	r3, 16384
 350 02b8 9A42     		cmp	r2, r3
 351 02ba 0FD0     		beq	.L19
 352              		.loc 1 302 0 is_stmt 0 discriminator 1
 353 02bc 7A68     		ldr	r2, [r7, #4]
 354 02be 4FF4A053 		mov	r3, #5120
 355 02c2 C4F20003 		movt	r3, 16384
 356 02c6 9A42     		cmp	r2, r3
 357 02c8 08D0     		beq	.L19
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 358              		.loc 1 305 0 is_stmt 1
 359 02ca FB89     		ldrh	r3, [r7, #14]	@ movhi
 360 02cc 23F44073 		bic	r3, r3, #768
 361 02d0 FB81     		strh	r3, [r7, #14]	@ movhi
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 362              		.loc 1 306 0
 363 02d2 3B68     		ldr	r3, [r7, #0]
 364 02d4 1A89     		ldrh	r2, [r3, #8]
 365 02d6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 366 02d8 1343     		orrs	r3, r3, r2
 367 02da FB81     		strh	r3, [r7, #14]	@ movhi
 368              	.L19:
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 369              		.loc 1 309 0
 370 02dc 7B68     		ldr	r3, [r7, #4]
 371 02de FA89     		ldrh	r2, [r7, #14]	@ movhi
 372 02e0 1A80     		strh	r2, [r3, #0]	@ movhi
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 373              		.loc 1 312 0
 374 02e2 3B68     		ldr	r3, [r7, #0]
 375 02e4 5A68     		ldr	r2, [r3, #4]
 376 02e6 7B68     		ldr	r3, [r7, #4]
 377 02e8 DA62     		str	r2, [r3, #44]
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 378              		.loc 1 315 0
 379 02ea 3B68     		ldr	r3, [r7, #0]
 380 02ec 1A88     		ldrh	r2, [r3, #0]
 381 02ee 7B68     		ldr	r3, [r7, #4]
 382 02f0 1A85     		strh	r2, [r3, #40]	@ movhi
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 383              		.loc 1 317 0
 384 02f2 7A68     		ldr	r2, [r7, #4]
 385 02f4 4FF00003 		mov	r3, #0
 386 02f8 C4F20103 		movt	r3, 16385
 387 02fc 9A42     		cmp	r2, r3
 388 02fe 06D0     		beq	.L20
 389              		.loc 1 317 0 is_stmt 0 discriminator 1
 390 0300 7A68     		ldr	r2, [r7, #4]
 391 0302 4FF48063 		mov	r3, #1024
 392 0306 C4F20103 		movt	r3, 16385
 393 030a 9A42     		cmp	r2, r3
 394 030c 04D1     		bne	.L21
 395              	.L20:
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 396              		.loc 1 320 0 is_stmt 1
 397 030e 3B68     		ldr	r3, [r7, #0]
 398 0310 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 399 0312 1A46     		mov	r2, r3
 400 0314 7B68     		ldr	r3, [r7, #4]
 401 0316 1A86     		strh	r2, [r3, #48]	@ movhi
 402              	.L21:
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 403              		.loc 1 325 0
 404 0318 7B68     		ldr	r3, [r7, #4]
 405 031a 4FF00102 		mov	r2, #1
 406 031e 9A82     		strh	r2, [r3, #20]	@ movhi
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 407              		.loc 1 326 0
 408 0320 07F11407 		add	r7, r7, #20
 409 0324 BD46     		mov	sp, r7
 410 0326 80BC     		pop	{r7}
 411 0328 7047     		bx	lr
 412              		.cfi_endproc
 413              	.LFE111:
 415 032a 00BF     		.align	2
 416              		.global	TIM_TimeBaseStructInit
 417              		.thumb
 418              		.thumb_func
 420              	TIM_TimeBaseStructInit:
 421              	.LFB112:
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 422              		.loc 1 335 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 8
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427 032c 80B4     		push	{r7}
 428              	.LCFI6:
 429              		.cfi_def_cfa_offset 4
 430              		.cfi_offset 7, -4
 431 032e 83B0     		sub	sp, sp, #12
 432              	.LCFI7:
 433              		.cfi_def_cfa_offset 16
 434 0330 00AF     		add	r7, sp, #0
 435              	.LCFI8:
 436              		.cfi_def_cfa_register 7
 437 0332 7860     		str	r0, [r7, #4]
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 438              		.loc 1 337 0
 439 0334 7B68     		ldr	r3, [r7, #4]
 440 0336 4FF0FF32 		mov	r2, #-1
 441 033a 5A60     		str	r2, [r3, #4]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 442              		.loc 1 338 0
 443 033c 7B68     		ldr	r3, [r7, #4]
 444 033e 4FF00002 		mov	r2, #0
 445 0342 1A80     		strh	r2, [r3, #0]	@ movhi
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 446              		.loc 1 339 0
 447 0344 7B68     		ldr	r3, [r7, #4]
 448 0346 4FF00002 		mov	r2, #0
 449 034a 1A81     		strh	r2, [r3, #8]	@ movhi
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 450              		.loc 1 340 0
 451 034c 7B68     		ldr	r3, [r7, #4]
 452 034e 4FF00002 		mov	r2, #0
 453 0352 5A80     		strh	r2, [r3, #2]	@ movhi
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 454              		.loc 1 341 0
 455 0354 7B68     		ldr	r3, [r7, #4]
 456 0356 4FF00002 		mov	r2, #0
 457 035a 9A72     		strb	r2, [r3, #10]
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 458              		.loc 1 342 0
 459 035c 07F10C07 		add	r7, r7, #12
 460 0360 BD46     		mov	sp, r7
 461 0362 80BC     		pop	{r7}
 462 0364 7047     		bx	lr
 463              		.cfi_endproc
 464              	.LFE112:
 466 0366 00BF     		.align	2
 467              		.global	TIM_PrescalerConfig
 468              		.thumb
 469              		.thumb_func
 471              	TIM_PrescalerConfig:
 472              	.LFB113:
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 473              		.loc 1 355 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478 0368 80B4     		push	{r7}
 479              	.LCFI9:
 480              		.cfi_def_cfa_offset 4
 481              		.cfi_offset 7, -4
 482 036a 83B0     		sub	sp, sp, #12
 483              	.LCFI10:
 484              		.cfi_def_cfa_offset 16
 485 036c 00AF     		add	r7, sp, #0
 486              	.LCFI11:
 487              		.cfi_def_cfa_register 7
 488 036e 7860     		str	r0, [r7, #4]
 489 0370 1346     		mov	r3, r2
 490 0372 0A46     		mov	r2, r1	@ movhi
 491 0374 7A80     		strh	r2, [r7, #2]	@ movhi
 492 0376 3B80     		strh	r3, [r7, #0]	@ movhi
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 493              		.loc 1 360 0
 494 0378 7B68     		ldr	r3, [r7, #4]
 495 037a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 496 037c 1A85     		strh	r2, [r3, #40]	@ movhi
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 497              		.loc 1 362 0
 498 037e 7B68     		ldr	r3, [r7, #4]
 499 0380 3A88     		ldrh	r2, [r7, #0]	@ movhi
 500 0382 9A82     		strh	r2, [r3, #20]	@ movhi
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 501              		.loc 1 363 0
 502 0384 07F10C07 		add	r7, r7, #12
 503 0388 BD46     		mov	sp, r7
 504 038a 80BC     		pop	{r7}
 505 038c 7047     		bx	lr
 506              		.cfi_endproc
 507              	.LFE113:
 509 038e 00BF     		.align	2
 510              		.global	TIM_CounterModeConfig
 511              		.thumb
 512              		.thumb_func
 514              	TIM_CounterModeConfig:
 515              	.LFB114:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 516              		.loc 1 378 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 16
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521 0390 80B4     		push	{r7}
 522              	.LCFI12:
 523              		.cfi_def_cfa_offset 4
 524              		.cfi_offset 7, -4
 525 0392 85B0     		sub	sp, sp, #20
 526              	.LCFI13:
 527              		.cfi_def_cfa_offset 24
 528 0394 00AF     		add	r7, sp, #0
 529              	.LCFI14:
 530              		.cfi_def_cfa_register 7
 531 0396 7860     		str	r0, [r7, #4]
 532 0398 0B46     		mov	r3, r1
 533 039a 7B80     		strh	r3, [r7, #2]	@ movhi
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 534              		.loc 1 379 0
 535 039c 4FF00003 		mov	r3, #0
 536 03a0 FB81     		strh	r3, [r7, #14]	@ movhi
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 537              		.loc 1 385 0
 538 03a2 7B68     		ldr	r3, [r7, #4]
 539 03a4 1B88     		ldrh	r3, [r3, #0]	@ movhi
 540 03a6 FB81     		strh	r3, [r7, #14]	@ movhi
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 541              		.loc 1 388 0
 542 03a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 543 03aa 23F07003 		bic	r3, r3, #112
 544 03ae FB81     		strh	r3, [r7, #14]	@ movhi
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 545              		.loc 1 391 0
 546 03b0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 547 03b2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 548 03b4 1343     		orrs	r3, r3, r2
 549 03b6 FB81     		strh	r3, [r7, #14]	@ movhi
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 550              		.loc 1 394 0
 551 03b8 7B68     		ldr	r3, [r7, #4]
 552 03ba FA89     		ldrh	r2, [r7, #14]	@ movhi
 553 03bc 1A80     		strh	r2, [r3, #0]	@ movhi
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 554              		.loc 1 395 0
 555 03be 07F11407 		add	r7, r7, #20
 556 03c2 BD46     		mov	sp, r7
 557 03c4 80BC     		pop	{r7}
 558 03c6 7047     		bx	lr
 559              		.cfi_endproc
 560              	.LFE114:
 562              		.align	2
 563              		.global	TIM_SetCounter
 564              		.thumb
 565              		.thumb_func
 567              	TIM_SetCounter:
 568              	.LFB115:
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 569              		.loc 1 404 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 8
 572              		@ frame_needed = 1, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574 03c8 80B4     		push	{r7}
 575              	.LCFI15:
 576              		.cfi_def_cfa_offset 4
 577              		.cfi_offset 7, -4
 578 03ca 83B0     		sub	sp, sp, #12
 579              	.LCFI16:
 580              		.cfi_def_cfa_offset 16
 581 03cc 00AF     		add	r7, sp, #0
 582              	.LCFI17:
 583              		.cfi_def_cfa_register 7
 584 03ce 7860     		str	r0, [r7, #4]
 585 03d0 3960     		str	r1, [r7, #0]
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 586              		.loc 1 409 0
 587 03d2 7B68     		ldr	r3, [r7, #4]
 588 03d4 3A68     		ldr	r2, [r7, #0]
 589 03d6 5A62     		str	r2, [r3, #36]
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 590              		.loc 1 410 0
 591 03d8 07F10C07 		add	r7, r7, #12
 592 03dc BD46     		mov	sp, r7
 593 03de 80BC     		pop	{r7}
 594 03e0 7047     		bx	lr
 595              		.cfi_endproc
 596              	.LFE115:
 598 03e2 00BF     		.align	2
 599              		.global	TIM_SetAutoreload
 600              		.thumb
 601              		.thumb_func
 603              	TIM_SetAutoreload:
 604              	.LFB116:
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 605              		.loc 1 419 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 8
 608              		@ frame_needed = 1, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610 03e4 80B4     		push	{r7}
 611              	.LCFI18:
 612              		.cfi_def_cfa_offset 4
 613              		.cfi_offset 7, -4
 614 03e6 83B0     		sub	sp, sp, #12
 615              	.LCFI19:
 616              		.cfi_def_cfa_offset 16
 617 03e8 00AF     		add	r7, sp, #0
 618              	.LCFI20:
 619              		.cfi_def_cfa_register 7
 620 03ea 7860     		str	r0, [r7, #4]
 621 03ec 3960     		str	r1, [r7, #0]
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 622              		.loc 1 424 0
 623 03ee 7B68     		ldr	r3, [r7, #4]
 624 03f0 3A68     		ldr	r2, [r7, #0]
 625 03f2 DA62     		str	r2, [r3, #44]
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 626              		.loc 1 425 0
 627 03f4 07F10C07 		add	r7, r7, #12
 628 03f8 BD46     		mov	sp, r7
 629 03fa 80BC     		pop	{r7}
 630 03fc 7047     		bx	lr
 631              		.cfi_endproc
 632              	.LFE116:
 634 03fe 00BF     		.align	2
 635              		.global	TIM_GetCounter
 636              		.thumb
 637              		.thumb_func
 639              	TIM_GetCounter:
 640              	.LFB117:
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 641              		.loc 1 433 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 8
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 646 0400 80B4     		push	{r7}
 647              	.LCFI21:
 648              		.cfi_def_cfa_offset 4
 649              		.cfi_offset 7, -4
 650 0402 83B0     		sub	sp, sp, #12
 651              	.LCFI22:
 652              		.cfi_def_cfa_offset 16
 653 0404 00AF     		add	r7, sp, #0
 654              	.LCFI23:
 655              		.cfi_def_cfa_register 7
 656 0406 7860     		str	r0, [r7, #4]
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 657              		.loc 1 438 0
 658 0408 7B68     		ldr	r3, [r7, #4]
 659 040a 5B6A     		ldr	r3, [r3, #36]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 660              		.loc 1 439 0
 661 040c 1846     		mov	r0, r3
 662 040e 07F10C07 		add	r7, r7, #12
 663 0412 BD46     		mov	sp, r7
 664 0414 80BC     		pop	{r7}
 665 0416 7047     		bx	lr
 666              		.cfi_endproc
 667              	.LFE117:
 669              		.align	2
 670              		.global	TIM_GetPrescaler
 671              		.thumb
 672              		.thumb_func
 674              	TIM_GetPrescaler:
 675              	.LFB118:
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 676              		.loc 1 447 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 8
 679              		@ frame_needed = 1, uses_anonymous_args = 0
 680              		@ link register save eliminated.
 681 0418 80B4     		push	{r7}
 682              	.LCFI24:
 683              		.cfi_def_cfa_offset 4
 684              		.cfi_offset 7, -4
 685 041a 83B0     		sub	sp, sp, #12
 686              	.LCFI25:
 687              		.cfi_def_cfa_offset 16
 688 041c 00AF     		add	r7, sp, #0
 689              	.LCFI26:
 690              		.cfi_def_cfa_register 7
 691 041e 7860     		str	r0, [r7, #4]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 692              		.loc 1 452 0
 693 0420 7B68     		ldr	r3, [r7, #4]
 694 0422 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 695 0424 9BB2     		uxth	r3, r3
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 696              		.loc 1 453 0
 697 0426 1846     		mov	r0, r3
 698 0428 07F10C07 		add	r7, r7, #12
 699 042c BD46     		mov	sp, r7
 700 042e 80BC     		pop	{r7}
 701 0430 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE118:
 705 0432 00BF     		.align	2
 706              		.global	TIM_UpdateDisableConfig
 707              		.thumb
 708              		.thumb_func
 710              	TIM_UpdateDisableConfig:
 711              	.LFB119:
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 712              		.loc 1 463 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0434 80B4     		push	{r7}
 718              	.LCFI27:
 719              		.cfi_def_cfa_offset 4
 720              		.cfi_offset 7, -4
 721 0436 83B0     		sub	sp, sp, #12
 722              	.LCFI28:
 723              		.cfi_def_cfa_offset 16
 724 0438 00AF     		add	r7, sp, #0
 725              	.LCFI29:
 726              		.cfi_def_cfa_register 7
 727 043a 7860     		str	r0, [r7, #4]
 728 043c 0B46     		mov	r3, r1
 729 043e FB70     		strb	r3, [r7, #3]
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 730              		.loc 1 468 0
 731 0440 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 732 0442 002B     		cmp	r3, #0
 733 0444 08D0     		beq	.L30
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 734              		.loc 1 471 0
 735 0446 7B68     		ldr	r3, [r7, #4]
 736 0448 1B88     		ldrh	r3, [r3, #0]	@ movhi
 737 044a 9BB2     		uxth	r3, r3
 738 044c 43F00203 		orr	r3, r3, #2
 739 0450 9AB2     		uxth	r2, r3
 740 0452 7B68     		ldr	r3, [r7, #4]
 741 0454 1A80     		strh	r2, [r3, #0]	@ movhi
 742 0456 07E0     		b	.L29
 743              	.L30:
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 744              		.loc 1 476 0
 745 0458 7B68     		ldr	r3, [r7, #4]
 746 045a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 747 045c 9BB2     		uxth	r3, r3
 748 045e 23F00203 		bic	r3, r3, #2
 749 0462 9AB2     		uxth	r2, r3
 750 0464 7B68     		ldr	r3, [r7, #4]
 751 0466 1A80     		strh	r2, [r3, #0]	@ movhi
 752              	.L29:
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 753              		.loc 1 478 0
 754 0468 07F10C07 		add	r7, r7, #12
 755 046c BD46     		mov	sp, r7
 756 046e 80BC     		pop	{r7}
 757 0470 7047     		bx	lr
 758              		.cfi_endproc
 759              	.LFE119:
 761 0472 00BF     		.align	2
 762              		.global	TIM_UpdateRequestConfig
 763              		.thumb
 764              		.thumb_func
 766              	TIM_UpdateRequestConfig:
 767              	.LFB120:
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is the counter
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is counter overflow/underflow.
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 768              		.loc 1 492 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 8
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 773 0474 80B4     		push	{r7}
 774              	.LCFI30:
 775              		.cfi_def_cfa_offset 4
 776              		.cfi_offset 7, -4
 777 0476 83B0     		sub	sp, sp, #12
 778              	.LCFI31:
 779              		.cfi_def_cfa_offset 16
 780 0478 00AF     		add	r7, sp, #0
 781              	.LCFI32:
 782              		.cfi_def_cfa_register 7
 783 047a 7860     		str	r0, [r7, #4]
 784 047c 0B46     		mov	r3, r1
 785 047e 7B80     		strh	r3, [r7, #2]	@ movhi
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 786              		.loc 1 497 0
 787 0480 7B88     		ldrh	r3, [r7, #2]
 788 0482 002B     		cmp	r3, #0
 789 0484 08D0     		beq	.L33
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 790              		.loc 1 500 0
 791 0486 7B68     		ldr	r3, [r7, #4]
 792 0488 1B88     		ldrh	r3, [r3, #0]	@ movhi
 793 048a 9BB2     		uxth	r3, r3
 794 048c 43F00403 		orr	r3, r3, #4
 795 0490 9AB2     		uxth	r2, r3
 796 0492 7B68     		ldr	r3, [r7, #4]
 797 0494 1A80     		strh	r2, [r3, #0]	@ movhi
 798 0496 07E0     		b	.L32
 799              	.L33:
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 800              		.loc 1 505 0
 801 0498 7B68     		ldr	r3, [r7, #4]
 802 049a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 803 049c 9BB2     		uxth	r3, r3
 804 049e 23F00403 		bic	r3, r3, #4
 805 04a2 9AB2     		uxth	r2, r3
 806 04a4 7B68     		ldr	r3, [r7, #4]
 807 04a6 1A80     		strh	r2, [r3, #0]	@ movhi
 808              	.L32:
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 809              		.loc 1 507 0
 810 04a8 07F10C07 		add	r7, r7, #12
 811 04ac BD46     		mov	sp, r7
 812 04ae 80BC     		pop	{r7}
 813 04b0 7047     		bx	lr
 814              		.cfi_endproc
 815              	.LFE120:
 817 04b2 00BF     		.align	2
 818              		.global	TIM_ARRPreloadConfig
 819              		.thumb
 820              		.thumb_func
 822              	TIM_ARRPreloadConfig:
 823              	.LFB121:
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 824              		.loc 1 517 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 8
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829 04b4 80B4     		push	{r7}
 830              	.LCFI33:
 831              		.cfi_def_cfa_offset 4
 832              		.cfi_offset 7, -4
 833 04b6 83B0     		sub	sp, sp, #12
 834              	.LCFI34:
 835              		.cfi_def_cfa_offset 16
 836 04b8 00AF     		add	r7, sp, #0
 837              	.LCFI35:
 838              		.cfi_def_cfa_register 7
 839 04ba 7860     		str	r0, [r7, #4]
 840 04bc 0B46     		mov	r3, r1
 841 04be FB70     		strb	r3, [r7, #3]
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 842              		.loc 1 522 0
 843 04c0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 844 04c2 002B     		cmp	r3, #0
 845 04c4 08D0     		beq	.L36
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 846              		.loc 1 525 0
 847 04c6 7B68     		ldr	r3, [r7, #4]
 848 04c8 1B88     		ldrh	r3, [r3, #0]	@ movhi
 849 04ca 9BB2     		uxth	r3, r3
 850 04cc 43F08003 		orr	r3, r3, #128
 851 04d0 9AB2     		uxth	r2, r3
 852 04d2 7B68     		ldr	r3, [r7, #4]
 853 04d4 1A80     		strh	r2, [r3, #0]	@ movhi
 854 04d6 07E0     		b	.L35
 855              	.L36:
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 856              		.loc 1 530 0
 857 04d8 7B68     		ldr	r3, [r7, #4]
 858 04da 1B88     		ldrh	r3, [r3, #0]	@ movhi
 859 04dc 9BB2     		uxth	r3, r3
 860 04de 23F08003 		bic	r3, r3, #128
 861 04e2 9AB2     		uxth	r2, r3
 862 04e4 7B68     		ldr	r3, [r7, #4]
 863 04e6 1A80     		strh	r2, [r3, #0]	@ movhi
 864              	.L35:
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 865              		.loc 1 532 0
 866 04e8 07F10C07 		add	r7, r7, #12
 867 04ec BD46     		mov	sp, r7
 868 04ee 80BC     		pop	{r7}
 869 04f0 7047     		bx	lr
 870              		.cfi_endproc
 871              	.LFE121:
 873 04f2 00BF     		.align	2
 874              		.global	TIM_SelectOnePulseMode
 875              		.thumb
 876              		.thumb_func
 878              	TIM_SelectOnePulseMode:
 879              	.LFB122:
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 880              		.loc 1 544 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 8
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885 04f4 80B4     		push	{r7}
 886              	.LCFI36:
 887              		.cfi_def_cfa_offset 4
 888              		.cfi_offset 7, -4
 889 04f6 83B0     		sub	sp, sp, #12
 890              	.LCFI37:
 891              		.cfi_def_cfa_offset 16
 892 04f8 00AF     		add	r7, sp, #0
 893              	.LCFI38:
 894              		.cfi_def_cfa_register 7
 895 04fa 7860     		str	r0, [r7, #4]
 896 04fc 0B46     		mov	r3, r1
 897 04fe 7B80     		strh	r3, [r7, #2]	@ movhi
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 898              		.loc 1 550 0
 899 0500 7B68     		ldr	r3, [r7, #4]
 900 0502 1B88     		ldrh	r3, [r3, #0]	@ movhi
 901 0504 9BB2     		uxth	r3, r3
 902 0506 23F00803 		bic	r3, r3, #8
 903 050a 9AB2     		uxth	r2, r3
 904 050c 7B68     		ldr	r3, [r7, #4]
 905 050e 1A80     		strh	r2, [r3, #0]	@ movhi
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 906              		.loc 1 553 0
 907 0510 7B68     		ldr	r3, [r7, #4]
 908 0512 1B88     		ldrh	r3, [r3, #0]	@ movhi
 909 0514 9AB2     		uxth	r2, r3
 910 0516 7B88     		ldrh	r3, [r7, #2]	@ movhi
 911 0518 1343     		orrs	r3, r3, r2
 912 051a 9AB2     		uxth	r2, r3
 913 051c 7B68     		ldr	r3, [r7, #4]
 914 051e 1A80     		strh	r2, [r3, #0]	@ movhi
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 915              		.loc 1 554 0
 916 0520 07F10C07 		add	r7, r7, #12
 917 0524 BD46     		mov	sp, r7
 918 0526 80BC     		pop	{r7}
 919 0528 7047     		bx	lr
 920              		.cfi_endproc
 921              	.LFE122:
 923 052a 00BF     		.align	2
 924              		.global	TIM_SetClockDivision
 925              		.thumb
 926              		.thumb_func
 928              	TIM_SetClockDivision:
 929              	.LFB123:
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 930              		.loc 1 567 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 8
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935 052c 80B4     		push	{r7}
 936              	.LCFI39:
 937              		.cfi_def_cfa_offset 4
 938              		.cfi_offset 7, -4
 939 052e 83B0     		sub	sp, sp, #12
 940              	.LCFI40:
 941              		.cfi_def_cfa_offset 16
 942 0530 00AF     		add	r7, sp, #0
 943              	.LCFI41:
 944              		.cfi_def_cfa_register 7
 945 0532 7860     		str	r0, [r7, #4]
 946 0534 0B46     		mov	r3, r1
 947 0536 7B80     		strh	r3, [r7, #2]	@ movhi
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 948              		.loc 1 573 0
 949 0538 7B68     		ldr	r3, [r7, #4]
 950 053a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 951 053c 9BB2     		uxth	r3, r3
 952 053e 23F44073 		bic	r3, r3, #768
 953 0542 9AB2     		uxth	r2, r3
 954 0544 7B68     		ldr	r3, [r7, #4]
 955 0546 1A80     		strh	r2, [r3, #0]	@ movhi
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 956              		.loc 1 576 0
 957 0548 7B68     		ldr	r3, [r7, #4]
 958 054a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 959 054c 9AB2     		uxth	r2, r3
 960 054e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 961 0550 1343     		orrs	r3, r3, r2
 962 0552 9AB2     		uxth	r2, r3
 963 0554 7B68     		ldr	r3, [r7, #4]
 964 0556 1A80     		strh	r2, [r3, #0]	@ movhi
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 965              		.loc 1 577 0
 966 0558 07F10C07 		add	r7, r7, #12
 967 055c BD46     		mov	sp, r7
 968 055e 80BC     		pop	{r7}
 969 0560 7047     		bx	lr
 970              		.cfi_endproc
 971              	.LFE123:
 973 0562 00BF     		.align	2
 974              		.global	TIM_Cmd
 975              		.thumb
 976              		.thumb_func
 978              	TIM_Cmd:
 979              	.LFB124:
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 980              		.loc 1 587 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 985 0564 80B4     		push	{r7}
 986              	.LCFI42:
 987              		.cfi_def_cfa_offset 4
 988              		.cfi_offset 7, -4
 989 0566 83B0     		sub	sp, sp, #12
 990              	.LCFI43:
 991              		.cfi_def_cfa_offset 16
 992 0568 00AF     		add	r7, sp, #0
 993              	.LCFI44:
 994              		.cfi_def_cfa_register 7
 995 056a 7860     		str	r0, [r7, #4]
 996 056c 0B46     		mov	r3, r1
 997 056e FB70     		strb	r3, [r7, #3]
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 998              		.loc 1 592 0
 999 0570 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1000 0572 002B     		cmp	r3, #0
 1001 0574 08D0     		beq	.L41
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1002              		.loc 1 595 0
 1003 0576 7B68     		ldr	r3, [r7, #4]
 1004 0578 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1005 057a 9BB2     		uxth	r3, r3
 1006 057c 43F00103 		orr	r3, r3, #1
 1007 0580 9AB2     		uxth	r2, r3
 1008 0582 7B68     		ldr	r3, [r7, #4]
 1009 0584 1A80     		strh	r2, [r3, #0]	@ movhi
 1010 0586 07E0     		b	.L40
 1011              	.L41:
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1012              		.loc 1 600 0
 1013 0588 7B68     		ldr	r3, [r7, #4]
 1014 058a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1015 058c 9BB2     		uxth	r3, r3
 1016 058e 23F00103 		bic	r3, r3, #1
 1017 0592 9AB2     		uxth	r2, r3
 1018 0594 7B68     		ldr	r3, [r7, #4]
 1019 0596 1A80     		strh	r2, [r3, #0]	@ movhi
 1020              	.L40:
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1021              		.loc 1 602 0
 1022 0598 07F10C07 		add	r7, r7, #12
 1023 059c BD46     		mov	sp, r7
 1024 059e 80BC     		pop	{r7}
 1025 05a0 7047     		bx	lr
 1026              		.cfi_endproc
 1027              	.LFE124:
 1029 05a2 00BF     		.align	2
 1030              		.global	TIM_OC1Init
 1031              		.thumb
 1032              		.thumb_func
 1034              	TIM_OC1Init:
 1035              	.LFB125:
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1036              		.loc 1 666 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 16
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040              		@ link register save eliminated.
 1041 05a4 80B4     		push	{r7}
 1042              	.LCFI45:
 1043              		.cfi_def_cfa_offset 4
 1044              		.cfi_offset 7, -4
 1045 05a6 85B0     		sub	sp, sp, #20
 1046              	.LCFI46:
 1047              		.cfi_def_cfa_offset 24
 1048 05a8 00AF     		add	r7, sp, #0
 1049              	.LCFI47:
 1050              		.cfi_def_cfa_register 7
 1051 05aa 7860     		str	r0, [r7, #4]
 1052 05ac 3960     		str	r1, [r7, #0]
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1053              		.loc 1 667 0
 1054 05ae 4FF00003 		mov	r3, #0
 1055 05b2 7B81     		strh	r3, [r7, #10]	@ movhi
 1056 05b4 4FF00003 		mov	r3, #0
 1057 05b8 FB81     		strh	r3, [r7, #14]	@ movhi
 1058 05ba 4FF00003 		mov	r3, #0
 1059 05be BB81     		strh	r3, [r7, #12]	@ movhi
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 1060              		.loc 1 676 0
 1061 05c0 7B68     		ldr	r3, [r7, #4]
 1062 05c2 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1063 05c4 9BB2     		uxth	r3, r3
 1064 05c6 23F00103 		bic	r3, r3, #1
 1065 05ca 9AB2     		uxth	r2, r3
 1066 05cc 7B68     		ldr	r3, [r7, #4]
 1067 05ce 1A84     		strh	r2, [r3, #32]	@ movhi
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1068              		.loc 1 679 0
 1069 05d0 7B68     		ldr	r3, [r7, #4]
 1070 05d2 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1071 05d4 FB81     		strh	r3, [r7, #14]	@ movhi
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1072              		.loc 1 681 0
 1073 05d6 7B68     		ldr	r3, [r7, #4]
 1074 05d8 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1075 05da BB81     		strh	r3, [r7, #12]	@ movhi
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1076              		.loc 1 684 0
 1077 05dc 7B68     		ldr	r3, [r7, #4]
 1078 05de 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1079 05e0 7B81     		strh	r3, [r7, #10]	@ movhi
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 1080              		.loc 1 687 0
 1081 05e2 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1082 05e4 23F07003 		bic	r3, r3, #112
 1083 05e8 7B81     		strh	r3, [r7, #10]	@ movhi
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 1084              		.loc 1 688 0
 1085 05ea 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1086 05ec 23F00303 		bic	r3, r3, #3
 1087 05f0 7B81     		strh	r3, [r7, #10]	@ movhi
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1088              		.loc 1 690 0
 1089 05f2 3B68     		ldr	r3, [r7, #0]
 1090 05f4 1A88     		ldrh	r2, [r3, #0]
 1091 05f6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1092 05f8 1343     		orrs	r3, r3, r2
 1093 05fa 7B81     		strh	r3, [r7, #10]	@ movhi
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 1094              		.loc 1 693 0
 1095 05fc FB89     		ldrh	r3, [r7, #14]	@ movhi
 1096 05fe 23F00203 		bic	r3, r3, #2
 1097 0602 FB81     		strh	r3, [r7, #14]	@ movhi
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1098              		.loc 1 695 0
 1099 0604 3B68     		ldr	r3, [r7, #0]
 1100 0606 9A89     		ldrh	r2, [r3, #12]
 1101 0608 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1102 060a 1343     		orrs	r3, r3, r2
 1103 060c FB81     		strh	r3, [r7, #14]	@ movhi
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1104              		.loc 1 698 0
 1105 060e 3B68     		ldr	r3, [r7, #0]
 1106 0610 5A88     		ldrh	r2, [r3, #2]
 1107 0612 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1108 0614 1343     		orrs	r3, r3, r2
 1109 0616 FB81     		strh	r3, [r7, #14]	@ movhi
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1110              		.loc 1 700 0
 1111 0618 7A68     		ldr	r2, [r7, #4]
 1112 061a 4FF00003 		mov	r3, #0
 1113 061e C4F20103 		movt	r3, 16385
 1114 0622 9A42     		cmp	r2, r3
 1115 0624 06D0     		beq	.L44
 1116              		.loc 1 700 0 is_stmt 0 discriminator 1
 1117 0626 7A68     		ldr	r2, [r7, #4]
 1118 0628 4FF48063 		mov	r3, #1024
 1119 062c C4F20103 		movt	r3, 16385
 1120 0630 9A42     		cmp	r2, r3
 1121 0632 23D1     		bne	.L45
 1122              	.L44:
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 1123              		.loc 1 708 0 is_stmt 1
 1124 0634 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1125 0636 23F00803 		bic	r3, r3, #8
 1126 063a FB81     		strh	r3, [r7, #14]	@ movhi
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1127              		.loc 1 710 0
 1128 063c 3B68     		ldr	r3, [r7, #0]
 1129 063e DA89     		ldrh	r2, [r3, #14]
 1130 0640 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1131 0642 1343     		orrs	r3, r3, r2
 1132 0644 FB81     		strh	r3, [r7, #14]	@ movhi
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 1133              		.loc 1 712 0
 1134 0646 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1135 0648 23F00403 		bic	r3, r3, #4
 1136 064c FB81     		strh	r3, [r7, #14]	@ movhi
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1137              		.loc 1 715 0
 1138 064e 3B68     		ldr	r3, [r7, #0]
 1139 0650 9A88     		ldrh	r2, [r3, #4]
 1140 0652 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1141 0654 1343     		orrs	r3, r3, r2
 1142 0656 FB81     		strh	r3, [r7, #14]	@ movhi
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 1143              		.loc 1 717 0
 1144 0658 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1145 065a 23F48073 		bic	r3, r3, #256
 1146 065e BB81     		strh	r3, [r7, #12]	@ movhi
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 1147              		.loc 1 718 0
 1148 0660 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1149 0662 23F40073 		bic	r3, r3, #512
 1150 0666 BB81     		strh	r3, [r7, #12]	@ movhi
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1151              		.loc 1 720 0
 1152 0668 3B68     		ldr	r3, [r7, #0]
 1153 066a 1A8A     		ldrh	r2, [r3, #16]
 1154 066c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1155 066e 1343     		orrs	r3, r3, r2
 1156 0670 BB81     		strh	r3, [r7, #12]	@ movhi
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1157              		.loc 1 722 0
 1158 0672 3B68     		ldr	r3, [r7, #0]
 1159 0674 5A8A     		ldrh	r2, [r3, #18]
 1160 0676 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1161 0678 1343     		orrs	r3, r3, r2
 1162 067a BB81     		strh	r3, [r7, #12]	@ movhi
 1163              	.L45:
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1164              		.loc 1 725 0
 1165 067c 7B68     		ldr	r3, [r7, #4]
 1166 067e BA89     		ldrh	r2, [r7, #12]	@ movhi
 1167 0680 9A80     		strh	r2, [r3, #4]	@ movhi
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1168              		.loc 1 728 0
 1169 0682 7B68     		ldr	r3, [r7, #4]
 1170 0684 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1171 0686 1A83     		strh	r2, [r3, #24]	@ movhi
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1172              		.loc 1 731 0
 1173 0688 3B68     		ldr	r3, [r7, #0]
 1174 068a 9A68     		ldr	r2, [r3, #8]
 1175 068c 7B68     		ldr	r3, [r7, #4]
 1176 068e 5A63     		str	r2, [r3, #52]
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1177              		.loc 1 734 0
 1178 0690 7B68     		ldr	r3, [r7, #4]
 1179 0692 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1180 0694 1A84     		strh	r2, [r3, #32]	@ movhi
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1181              		.loc 1 735 0
 1182 0696 07F11407 		add	r7, r7, #20
 1183 069a BD46     		mov	sp, r7
 1184 069c 80BC     		pop	{r7}
 1185 069e 7047     		bx	lr
 1186              		.cfi_endproc
 1187              	.LFE125:
 1189              		.align	2
 1190              		.global	TIM_OC2Init
 1191              		.thumb
 1192              		.thumb_func
 1194              	TIM_OC2Init:
 1195              	.LFB126:
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1196              		.loc 1 747 0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 16
 1199              		@ frame_needed = 1, uses_anonymous_args = 0
 1200              		@ link register save eliminated.
 1201 06a0 80B4     		push	{r7}
 1202              	.LCFI48:
 1203              		.cfi_def_cfa_offset 4
 1204              		.cfi_offset 7, -4
 1205 06a2 85B0     		sub	sp, sp, #20
 1206              	.LCFI49:
 1207              		.cfi_def_cfa_offset 24
 1208 06a4 00AF     		add	r7, sp, #0
 1209              	.LCFI50:
 1210              		.cfi_def_cfa_register 7
 1211 06a6 7860     		str	r0, [r7, #4]
 1212 06a8 3960     		str	r1, [r7, #0]
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1213              		.loc 1 748 0
 1214 06aa 4FF00003 		mov	r3, #0
 1215 06ae 7B81     		strh	r3, [r7, #10]	@ movhi
 1216 06b0 4FF00003 		mov	r3, #0
 1217 06b4 FB81     		strh	r3, [r7, #14]	@ movhi
 1218 06b6 4FF00003 		mov	r3, #0
 1219 06ba BB81     		strh	r3, [r7, #12]	@ movhi
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1220              		.loc 1 757 0
 1221 06bc 7B68     		ldr	r3, [r7, #4]
 1222 06be 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1223 06c0 9BB2     		uxth	r3, r3
 1224 06c2 23F01003 		bic	r3, r3, #16
 1225 06c6 9AB2     		uxth	r2, r3
 1226 06c8 7B68     		ldr	r3, [r7, #4]
 1227 06ca 1A84     		strh	r2, [r3, #32]	@ movhi
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1228              		.loc 1 760 0
 1229 06cc 7B68     		ldr	r3, [r7, #4]
 1230 06ce 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1231 06d0 FB81     		strh	r3, [r7, #14]	@ movhi
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1232              		.loc 1 762 0
 1233 06d2 7B68     		ldr	r3, [r7, #4]
 1234 06d4 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1235 06d6 BB81     		strh	r3, [r7, #12]	@ movhi
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1236              		.loc 1 765 0
 1237 06d8 7B68     		ldr	r3, [r7, #4]
 1238 06da 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1239 06dc 7B81     		strh	r3, [r7, #10]	@ movhi
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 1240              		.loc 1 768 0
 1241 06de 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1242 06e0 23F4E043 		bic	r3, r3, #28672
 1243 06e4 7B81     		strh	r3, [r7, #10]	@ movhi
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1244              		.loc 1 769 0
 1245 06e6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1246 06e8 23F44073 		bic	r3, r3, #768
 1247 06ec 7B81     		strh	r3, [r7, #10]	@ movhi
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1248              		.loc 1 772 0
 1249 06ee 3B68     		ldr	r3, [r7, #0]
 1250 06f0 1B88     		ldrh	r3, [r3, #0]
 1251 06f2 4FEA0323 		lsl	r3, r3, #8
 1252 06f6 9AB2     		uxth	r2, r3
 1253 06f8 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1254 06fa 1343     		orrs	r3, r3, r2
 1255 06fc 7B81     		strh	r3, [r7, #10]	@ movhi
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1256              		.loc 1 775 0
 1257 06fe FB89     		ldrh	r3, [r7, #14]	@ movhi
 1258 0700 23F02003 		bic	r3, r3, #32
 1259 0704 FB81     		strh	r3, [r7, #14]	@ movhi
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1260              		.loc 1 777 0
 1261 0706 3B68     		ldr	r3, [r7, #0]
 1262 0708 9B89     		ldrh	r3, [r3, #12]
 1263 070a 4FEA0313 		lsl	r3, r3, #4
 1264 070e 9AB2     		uxth	r2, r3
 1265 0710 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1266 0712 1343     		orrs	r3, r3, r2
 1267 0714 FB81     		strh	r3, [r7, #14]	@ movhi
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1268              		.loc 1 780 0
 1269 0716 3B68     		ldr	r3, [r7, #0]
 1270 0718 5B88     		ldrh	r3, [r3, #2]
 1271 071a 4FEA0313 		lsl	r3, r3, #4
 1272 071e 9AB2     		uxth	r2, r3
 1273 0720 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1274 0722 1343     		orrs	r3, r3, r2
 1275 0724 FB81     		strh	r3, [r7, #14]	@ movhi
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1276              		.loc 1 782 0
 1277 0726 7A68     		ldr	r2, [r7, #4]
 1278 0728 4FF00003 		mov	r3, #0
 1279 072c C4F20103 		movt	r3, 16385
 1280 0730 9A42     		cmp	r2, r3
 1281 0732 06D0     		beq	.L47
 1282              		.loc 1 782 0 is_stmt 0 discriminator 1
 1283 0734 7A68     		ldr	r2, [r7, #4]
 1284 0736 4FF48063 		mov	r3, #1024
 1285 073a C4F20103 		movt	r3, 16385
 1286 073e 9A42     		cmp	r2, r3
 1287 0740 2FD1     		bne	.L48
 1288              	.L47:
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1289              		.loc 1 790 0 is_stmt 1
 1290 0742 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1291 0744 23F08003 		bic	r3, r3, #128
 1292 0748 FB81     		strh	r3, [r7, #14]	@ movhi
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1293              		.loc 1 792 0
 1294 074a 3B68     		ldr	r3, [r7, #0]
 1295 074c DB89     		ldrh	r3, [r3, #14]
 1296 074e 4FEA0313 		lsl	r3, r3, #4
 1297 0752 9AB2     		uxth	r2, r3
 1298 0754 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1299 0756 1343     		orrs	r3, r3, r2
 1300 0758 FB81     		strh	r3, [r7, #14]	@ movhi
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1301              		.loc 1 794 0
 1302 075a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1303 075c 23F04003 		bic	r3, r3, #64
 1304 0760 FB81     		strh	r3, [r7, #14]	@ movhi
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1305              		.loc 1 797 0
 1306 0762 3B68     		ldr	r3, [r7, #0]
 1307 0764 9B88     		ldrh	r3, [r3, #4]
 1308 0766 4FEA0313 		lsl	r3, r3, #4
 1309 076a 9AB2     		uxth	r2, r3
 1310 076c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1311 076e 1343     		orrs	r3, r3, r2
 1312 0770 FB81     		strh	r3, [r7, #14]	@ movhi
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 1313              		.loc 1 799 0
 1314 0772 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1315 0774 23F48063 		bic	r3, r3, #1024
 1316 0778 BB81     		strh	r3, [r7, #12]	@ movhi
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1317              		.loc 1 800 0
 1318 077a BB89     		ldrh	r3, [r7, #12]	@ movhi
 1319 077c 23F40063 		bic	r3, r3, #2048
 1320 0780 BB81     		strh	r3, [r7, #12]	@ movhi
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1321              		.loc 1 802 0
 1322 0782 3B68     		ldr	r3, [r7, #0]
 1323 0784 1B8A     		ldrh	r3, [r3, #16]
 1324 0786 4FEA8303 		lsl	r3, r3, #2
 1325 078a 9AB2     		uxth	r2, r3
 1326 078c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1327 078e 1343     		orrs	r3, r3, r2
 1328 0790 BB81     		strh	r3, [r7, #12]	@ movhi
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1329              		.loc 1 804 0
 1330 0792 3B68     		ldr	r3, [r7, #0]
 1331 0794 5B8A     		ldrh	r3, [r3, #18]
 1332 0796 4FEA8303 		lsl	r3, r3, #2
 1333 079a 9AB2     		uxth	r2, r3
 1334 079c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1335 079e 1343     		orrs	r3, r3, r2
 1336 07a0 BB81     		strh	r3, [r7, #12]	@ movhi
 1337              	.L48:
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1338              		.loc 1 807 0
 1339 07a2 7B68     		ldr	r3, [r7, #4]
 1340 07a4 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1341 07a6 9A80     		strh	r2, [r3, #4]	@ movhi
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1342              		.loc 1 810 0
 1343 07a8 7B68     		ldr	r3, [r7, #4]
 1344 07aa 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1345 07ac 1A83     		strh	r2, [r3, #24]	@ movhi
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1346              		.loc 1 813 0
 1347 07ae 3B68     		ldr	r3, [r7, #0]
 1348 07b0 9A68     		ldr	r2, [r3, #8]
 1349 07b2 7B68     		ldr	r3, [r7, #4]
 1350 07b4 9A63     		str	r2, [r3, #56]
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1351              		.loc 1 816 0
 1352 07b6 7B68     		ldr	r3, [r7, #4]
 1353 07b8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1354 07ba 1A84     		strh	r2, [r3, #32]	@ movhi
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1355              		.loc 1 817 0
 1356 07bc 07F11407 		add	r7, r7, #20
 1357 07c0 BD46     		mov	sp, r7
 1358 07c2 80BC     		pop	{r7}
 1359 07c4 7047     		bx	lr
 1360              		.cfi_endproc
 1361              	.LFE126:
 1363 07c6 00BF     		.align	2
 1364              		.global	TIM_OC3Init
 1365              		.thumb
 1366              		.thumb_func
 1368              	TIM_OC3Init:
 1369              	.LFB127:
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1370              		.loc 1 828 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 16
 1373              		@ frame_needed = 1, uses_anonymous_args = 0
 1374              		@ link register save eliminated.
 1375 07c8 80B4     		push	{r7}
 1376              	.LCFI51:
 1377              		.cfi_def_cfa_offset 4
 1378              		.cfi_offset 7, -4
 1379 07ca 85B0     		sub	sp, sp, #20
 1380              	.LCFI52:
 1381              		.cfi_def_cfa_offset 24
 1382 07cc 00AF     		add	r7, sp, #0
 1383              	.LCFI53:
 1384              		.cfi_def_cfa_register 7
 1385 07ce 7860     		str	r0, [r7, #4]
 1386 07d0 3960     		str	r1, [r7, #0]
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1387              		.loc 1 829 0
 1388 07d2 4FF00003 		mov	r3, #0
 1389 07d6 7B81     		strh	r3, [r7, #10]	@ movhi
 1390 07d8 4FF00003 		mov	r3, #0
 1391 07dc FB81     		strh	r3, [r7, #14]	@ movhi
 1392 07de 4FF00003 		mov	r3, #0
 1393 07e2 BB81     		strh	r3, [r7, #12]	@ movhi
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1394              		.loc 1 838 0
 1395 07e4 7B68     		ldr	r3, [r7, #4]
 1396 07e6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1397 07e8 9BB2     		uxth	r3, r3
 1398 07ea 23F48073 		bic	r3, r3, #256
 1399 07ee 9AB2     		uxth	r2, r3
 1400 07f0 7B68     		ldr	r3, [r7, #4]
 1401 07f2 1A84     		strh	r2, [r3, #32]	@ movhi
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1402              		.loc 1 841 0
 1403 07f4 7B68     		ldr	r3, [r7, #4]
 1404 07f6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1405 07f8 FB81     		strh	r3, [r7, #14]	@ movhi
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1406              		.loc 1 843 0
 1407 07fa 7B68     		ldr	r3, [r7, #4]
 1408 07fc 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1409 07fe BB81     		strh	r3, [r7, #12]	@ movhi
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1410              		.loc 1 846 0
 1411 0800 7B68     		ldr	r3, [r7, #4]
 1412 0802 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1413 0804 7B81     		strh	r3, [r7, #10]	@ movhi
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 1414              		.loc 1 849 0
 1415 0806 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1416 0808 23F07003 		bic	r3, r3, #112
 1417 080c 7B81     		strh	r3, [r7, #10]	@ movhi
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1418              		.loc 1 850 0
 1419 080e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1420 0810 23F00303 		bic	r3, r3, #3
 1421 0814 7B81     		strh	r3, [r7, #10]	@ movhi
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1422              		.loc 1 852 0
 1423 0816 3B68     		ldr	r3, [r7, #0]
 1424 0818 1A88     		ldrh	r2, [r3, #0]
 1425 081a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1426 081c 1343     		orrs	r3, r3, r2
 1427 081e 7B81     		strh	r3, [r7, #10]	@ movhi
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1428              		.loc 1 855 0
 1429 0820 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1430 0822 23F40073 		bic	r3, r3, #512
 1431 0826 FB81     		strh	r3, [r7, #14]	@ movhi
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1432              		.loc 1 857 0
 1433 0828 3B68     		ldr	r3, [r7, #0]
 1434 082a 9B89     		ldrh	r3, [r3, #12]
 1435 082c 4FEA0323 		lsl	r3, r3, #8
 1436 0830 9AB2     		uxth	r2, r3
 1437 0832 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1438 0834 1343     		orrs	r3, r3, r2
 1439 0836 FB81     		strh	r3, [r7, #14]	@ movhi
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1440              		.loc 1 860 0
 1441 0838 3B68     		ldr	r3, [r7, #0]
 1442 083a 5B88     		ldrh	r3, [r3, #2]
 1443 083c 4FEA0323 		lsl	r3, r3, #8
 1444 0840 9AB2     		uxth	r2, r3
 1445 0842 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1446 0844 1343     		orrs	r3, r3, r2
 1447 0846 FB81     		strh	r3, [r7, #14]	@ movhi
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1448              		.loc 1 862 0
 1449 0848 7A68     		ldr	r2, [r7, #4]
 1450 084a 4FF00003 		mov	r3, #0
 1451 084e C4F20103 		movt	r3, 16385
 1452 0852 9A42     		cmp	r2, r3
 1453 0854 06D0     		beq	.L50
 1454              		.loc 1 862 0 is_stmt 0 discriminator 1
 1455 0856 7A68     		ldr	r2, [r7, #4]
 1456 0858 4FF48063 		mov	r3, #1024
 1457 085c C4F20103 		movt	r3, 16385
 1458 0860 9A42     		cmp	r2, r3
 1459 0862 2FD1     		bne	.L51
 1460              	.L50:
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1461              		.loc 1 870 0 is_stmt 1
 1462 0864 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1463 0866 23F40063 		bic	r3, r3, #2048
 1464 086a FB81     		strh	r3, [r7, #14]	@ movhi
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1465              		.loc 1 872 0
 1466 086c 3B68     		ldr	r3, [r7, #0]
 1467 086e DB89     		ldrh	r3, [r3, #14]
 1468 0870 4FEA0323 		lsl	r3, r3, #8
 1469 0874 9AB2     		uxth	r2, r3
 1470 0876 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1471 0878 1343     		orrs	r3, r3, r2
 1472 087a FB81     		strh	r3, [r7, #14]	@ movhi
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1473              		.loc 1 874 0
 1474 087c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1475 087e 23F48063 		bic	r3, r3, #1024
 1476 0882 FB81     		strh	r3, [r7, #14]	@ movhi
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1477              		.loc 1 877 0
 1478 0884 3B68     		ldr	r3, [r7, #0]
 1479 0886 9B88     		ldrh	r3, [r3, #4]
 1480 0888 4FEA0323 		lsl	r3, r3, #8
 1481 088c 9AB2     		uxth	r2, r3
 1482 088e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1483 0890 1343     		orrs	r3, r3, r2
 1484 0892 FB81     		strh	r3, [r7, #14]	@ movhi
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 1485              		.loc 1 879 0
 1486 0894 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1487 0896 23F48053 		bic	r3, r3, #4096
 1488 089a BB81     		strh	r3, [r7, #12]	@ movhi
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1489              		.loc 1 880 0
 1490 089c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1491 089e 23F40053 		bic	r3, r3, #8192
 1492 08a2 BB81     		strh	r3, [r7, #12]	@ movhi
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1493              		.loc 1 882 0
 1494 08a4 3B68     		ldr	r3, [r7, #0]
 1495 08a6 1B8A     		ldrh	r3, [r3, #16]
 1496 08a8 4FEA0313 		lsl	r3, r3, #4
 1497 08ac 9AB2     		uxth	r2, r3
 1498 08ae BB89     		ldrh	r3, [r7, #12]	@ movhi
 1499 08b0 1343     		orrs	r3, r3, r2
 1500 08b2 BB81     		strh	r3, [r7, #12]	@ movhi
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1501              		.loc 1 884 0
 1502 08b4 3B68     		ldr	r3, [r7, #0]
 1503 08b6 5B8A     		ldrh	r3, [r3, #18]
 1504 08b8 4FEA0313 		lsl	r3, r3, #4
 1505 08bc 9AB2     		uxth	r2, r3
 1506 08be BB89     		ldrh	r3, [r7, #12]	@ movhi
 1507 08c0 1343     		orrs	r3, r3, r2
 1508 08c2 BB81     		strh	r3, [r7, #12]	@ movhi
 1509              	.L51:
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1510              		.loc 1 887 0
 1511 08c4 7B68     		ldr	r3, [r7, #4]
 1512 08c6 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1513 08c8 9A80     		strh	r2, [r3, #4]	@ movhi
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1514              		.loc 1 890 0
 1515 08ca 7B68     		ldr	r3, [r7, #4]
 1516 08cc 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1517 08ce 9A83     		strh	r2, [r3, #28]	@ movhi
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1518              		.loc 1 893 0
 1519 08d0 3B68     		ldr	r3, [r7, #0]
 1520 08d2 9A68     		ldr	r2, [r3, #8]
 1521 08d4 7B68     		ldr	r3, [r7, #4]
 1522 08d6 DA63     		str	r2, [r3, #60]
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1523              		.loc 1 896 0
 1524 08d8 7B68     		ldr	r3, [r7, #4]
 1525 08da FA89     		ldrh	r2, [r7, #14]	@ movhi
 1526 08dc 1A84     		strh	r2, [r3, #32]	@ movhi
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1527              		.loc 1 897 0
 1528 08de 07F11407 		add	r7, r7, #20
 1529 08e2 BD46     		mov	sp, r7
 1530 08e4 80BC     		pop	{r7}
 1531 08e6 7047     		bx	lr
 1532              		.cfi_endproc
 1533              	.LFE127:
 1535              		.align	2
 1536              		.global	TIM_OC4Init
 1537              		.thumb
 1538              		.thumb_func
 1540              	TIM_OC4Init:
 1541              	.LFB128:
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1542              		.loc 1 908 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 16
 1545              		@ frame_needed = 1, uses_anonymous_args = 0
 1546              		@ link register save eliminated.
 1547 08e8 80B4     		push	{r7}
 1548              	.LCFI54:
 1549              		.cfi_def_cfa_offset 4
 1550              		.cfi_offset 7, -4
 1551 08ea 85B0     		sub	sp, sp, #20
 1552              	.LCFI55:
 1553              		.cfi_def_cfa_offset 24
 1554 08ec 00AF     		add	r7, sp, #0
 1555              	.LCFI56:
 1556              		.cfi_def_cfa_register 7
 1557 08ee 7860     		str	r0, [r7, #4]
 1558 08f0 3960     		str	r1, [r7, #0]
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1559              		.loc 1 909 0
 1560 08f2 4FF00003 		mov	r3, #0
 1561 08f6 BB81     		strh	r3, [r7, #12]	@ movhi
 1562 08f8 4FF00003 		mov	r3, #0
 1563 08fc 7B81     		strh	r3, [r7, #10]	@ movhi
 1564 08fe 4FF00003 		mov	r3, #0
 1565 0902 FB81     		strh	r3, [r7, #14]	@ movhi
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1566              		.loc 1 918 0
 1567 0904 7B68     		ldr	r3, [r7, #4]
 1568 0906 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1569 0908 9BB2     		uxth	r3, r3
 1570 090a 23F48053 		bic	r3, r3, #4096
 1571 090e 9AB2     		uxth	r2, r3
 1572 0910 7B68     		ldr	r3, [r7, #4]
 1573 0912 1A84     		strh	r2, [r3, #32]	@ movhi
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1574              		.loc 1 921 0
 1575 0914 7B68     		ldr	r3, [r7, #4]
 1576 0916 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1577 0918 7B81     		strh	r3, [r7, #10]	@ movhi
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1578              		.loc 1 923 0
 1579 091a 7B68     		ldr	r3, [r7, #4]
 1580 091c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1581 091e FB81     		strh	r3, [r7, #14]	@ movhi
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1582              		.loc 1 926 0
 1583 0920 7B68     		ldr	r3, [r7, #4]
 1584 0922 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1585 0924 BB81     		strh	r3, [r7, #12]	@ movhi
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 1586              		.loc 1 929 0
 1587 0926 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1588 0928 23F4E043 		bic	r3, r3, #28672
 1589 092c BB81     		strh	r3, [r7, #12]	@ movhi
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1590              		.loc 1 930 0
 1591 092e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1592 0930 23F44073 		bic	r3, r3, #768
 1593 0934 BB81     		strh	r3, [r7, #12]	@ movhi
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1594              		.loc 1 933 0
 1595 0936 3B68     		ldr	r3, [r7, #0]
 1596 0938 1B88     		ldrh	r3, [r3, #0]
 1597 093a 4FEA0323 		lsl	r3, r3, #8
 1598 093e 9AB2     		uxth	r2, r3
 1599 0940 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1600 0942 1343     		orrs	r3, r3, r2
 1601 0944 BB81     		strh	r3, [r7, #12]	@ movhi
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1602              		.loc 1 936 0
 1603 0946 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1604 0948 23F40053 		bic	r3, r3, #8192
 1605 094c 7B81     		strh	r3, [r7, #10]	@ movhi
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1606              		.loc 1 938 0
 1607 094e 3B68     		ldr	r3, [r7, #0]
 1608 0950 9B89     		ldrh	r3, [r3, #12]
 1609 0952 4FEA0333 		lsl	r3, r3, #12
 1610 0956 9AB2     		uxth	r2, r3
 1611 0958 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1612 095a 1343     		orrs	r3, r3, r2
 1613 095c 7B81     		strh	r3, [r7, #10]	@ movhi
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1614              		.loc 1 941 0
 1615 095e 3B68     		ldr	r3, [r7, #0]
 1616 0960 5B88     		ldrh	r3, [r3, #2]
 1617 0962 4FEA0333 		lsl	r3, r3, #12
 1618 0966 9AB2     		uxth	r2, r3
 1619 0968 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1620 096a 1343     		orrs	r3, r3, r2
 1621 096c 7B81     		strh	r3, [r7, #10]	@ movhi
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1622              		.loc 1 943 0
 1623 096e 7A68     		ldr	r2, [r7, #4]
 1624 0970 4FF00003 		mov	r3, #0
 1625 0974 C4F20103 		movt	r3, 16385
 1626 0978 9A42     		cmp	r2, r3
 1627 097a 06D0     		beq	.L53
 1628              		.loc 1 943 0 is_stmt 0 discriminator 1
 1629 097c 7A68     		ldr	r2, [r7, #4]
 1630 097e 4FF48063 		mov	r3, #1024
 1631 0982 C4F20103 		movt	r3, 16385
 1632 0986 9A42     		cmp	r2, r3
 1633 0988 0BD1     		bne	.L54
 1634              	.L53:
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1635              		.loc 1 947 0 is_stmt 1
 1636 098a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1637 098c 23F48043 		bic	r3, r3, #16384
 1638 0990 FB81     		strh	r3, [r7, #14]	@ movhi
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1639              		.loc 1 949 0
 1640 0992 3B68     		ldr	r3, [r7, #0]
 1641 0994 1B8A     		ldrh	r3, [r3, #16]
 1642 0996 4FEA8313 		lsl	r3, r3, #6
 1643 099a 9AB2     		uxth	r2, r3
 1644 099c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1645 099e 1343     		orrs	r3, r3, r2
 1646 09a0 FB81     		strh	r3, [r7, #14]	@ movhi
 1647              	.L54:
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1648              		.loc 1 952 0
 1649 09a2 7B68     		ldr	r3, [r7, #4]
 1650 09a4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1651 09a6 9A80     		strh	r2, [r3, #4]	@ movhi
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1652              		.loc 1 955 0
 1653 09a8 7B68     		ldr	r3, [r7, #4]
 1654 09aa BA89     		ldrh	r2, [r7, #12]	@ movhi
 1655 09ac 9A83     		strh	r2, [r3, #28]	@ movhi
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1656              		.loc 1 958 0
 1657 09ae 3B68     		ldr	r3, [r7, #0]
 1658 09b0 9A68     		ldr	r2, [r3, #8]
 1659 09b2 7B68     		ldr	r3, [r7, #4]
 1660 09b4 1A64     		str	r2, [r3, #64]
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1661              		.loc 1 961 0
 1662 09b6 7B68     		ldr	r3, [r7, #4]
 1663 09b8 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1664 09ba 1A84     		strh	r2, [r3, #32]	@ movhi
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1665              		.loc 1 962 0
 1666 09bc 07F11407 		add	r7, r7, #20
 1667 09c0 BD46     		mov	sp, r7
 1668 09c2 80BC     		pop	{r7}
 1669 09c4 7047     		bx	lr
 1670              		.cfi_endproc
 1671              	.LFE128:
 1673 09c6 00BF     		.align	2
 1674              		.global	TIM_OCStructInit
 1675              		.thumb
 1676              		.thumb_func
 1678              	TIM_OCStructInit:
 1679              	.LFB129:
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1680              		.loc 1 971 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 8
 1683              		@ frame_needed = 1, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
 1685 09c8 80B4     		push	{r7}
 1686              	.LCFI57:
 1687              		.cfi_def_cfa_offset 4
 1688              		.cfi_offset 7, -4
 1689 09ca 83B0     		sub	sp, sp, #12
 1690              	.LCFI58:
 1691              		.cfi_def_cfa_offset 16
 1692 09cc 00AF     		add	r7, sp, #0
 1693              	.LCFI59:
 1694              		.cfi_def_cfa_register 7
 1695 09ce 7860     		str	r0, [r7, #4]
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1696              		.loc 1 973 0
 1697 09d0 7B68     		ldr	r3, [r7, #4]
 1698 09d2 4FF00002 		mov	r2, #0
 1699 09d6 1A80     		strh	r2, [r3, #0]	@ movhi
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1700              		.loc 1 974 0
 1701 09d8 7B68     		ldr	r3, [r7, #4]
 1702 09da 4FF00002 		mov	r2, #0
 1703 09de 5A80     		strh	r2, [r3, #2]	@ movhi
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1704              		.loc 1 975 0
 1705 09e0 7B68     		ldr	r3, [r7, #4]
 1706 09e2 4FF00002 		mov	r2, #0
 1707 09e6 9A80     		strh	r2, [r3, #4]	@ movhi
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1708              		.loc 1 976 0
 1709 09e8 7B68     		ldr	r3, [r7, #4]
 1710 09ea 4FF00002 		mov	r2, #0
 1711 09ee 9A60     		str	r2, [r3, #8]
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1712              		.loc 1 977 0
 1713 09f0 7B68     		ldr	r3, [r7, #4]
 1714 09f2 4FF00002 		mov	r2, #0
 1715 09f6 9A81     		strh	r2, [r3, #12]	@ movhi
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1716              		.loc 1 978 0
 1717 09f8 7B68     		ldr	r3, [r7, #4]
 1718 09fa 4FF00002 		mov	r2, #0
 1719 09fe DA81     		strh	r2, [r3, #14]	@ movhi
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1720              		.loc 1 979 0
 1721 0a00 7B68     		ldr	r3, [r7, #4]
 1722 0a02 4FF00002 		mov	r2, #0
 1723 0a06 1A82     		strh	r2, [r3, #16]	@ movhi
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1724              		.loc 1 980 0
 1725 0a08 7B68     		ldr	r3, [r7, #4]
 1726 0a0a 4FF00002 		mov	r2, #0
 1727 0a0e 5A82     		strh	r2, [r3, #18]	@ movhi
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1728              		.loc 1 981 0
 1729 0a10 07F10C07 		add	r7, r7, #12
 1730 0a14 BD46     		mov	sp, r7
 1731 0a16 80BC     		pop	{r7}
 1732 0a18 7047     		bx	lr
 1733              		.cfi_endproc
 1734              	.LFE129:
 1736 0a1a 00BF     		.align	2
 1737              		.global	TIM_SelectOCxM
 1738              		.thumb
 1739              		.thumb_func
 1741              	TIM_SelectOCxM:
 1742              	.LFB130:
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1743              		.loc 1 1007 0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 16
 1746              		@ frame_needed = 1, uses_anonymous_args = 0
 1747              		@ link register save eliminated.
 1748 0a1c 80B4     		push	{r7}
 1749              	.LCFI60:
 1750              		.cfi_def_cfa_offset 4
 1751              		.cfi_offset 7, -4
 1752 0a1e 85B0     		sub	sp, sp, #20
 1753              	.LCFI61:
 1754              		.cfi_def_cfa_offset 24
 1755 0a20 00AF     		add	r7, sp, #0
 1756              	.LCFI62:
 1757              		.cfi_def_cfa_register 7
 1758 0a22 7860     		str	r0, [r7, #4]
 1759 0a24 1346     		mov	r3, r2
 1760 0a26 0A46     		mov	r2, r1	@ movhi
 1761 0a28 7A80     		strh	r2, [r7, #2]	@ movhi
 1762 0a2a 3B80     		strh	r3, [r7, #0]	@ movhi
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 1763              		.loc 1 1008 0
 1764 0a2c 4FF00003 		mov	r3, #0
 1765 0a30 FB60     		str	r3, [r7, #12]
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
 1766              		.loc 1 1009 0
 1767 0a32 4FF00003 		mov	r3, #0
 1768 0a36 7B81     		strh	r3, [r7, #10]	@ movhi
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
 1769              		.loc 1 1016 0
 1770 0a38 7B68     		ldr	r3, [r7, #4]
 1771 0a3a FB60     		str	r3, [r7, #12]
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 1772              		.loc 1 1017 0
 1773 0a3c FB68     		ldr	r3, [r7, #12]
 1774 0a3e 03F11803 		add	r3, r3, #24
 1775 0a42 FB60     		str	r3, [r7, #12]
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1776              		.loc 1 1019 0
 1777 0a44 7B88     		ldrh	r3, [r7, #2]
 1778 0a46 4FF00102 		mov	r2, #1
 1779 0a4a 02FA03F3 		lsl	r3, r2, r3
 1780 0a4e 7B81     		strh	r3, [r7, #10]	@ movhi
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1781              		.loc 1 1022 0
 1782 0a50 7B68     		ldr	r3, [r7, #4]
 1783 0a52 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1784 0a54 9AB2     		uxth	r2, r3
 1785 0a56 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1786 0a58 6FEA0303 		mvn	r3, r3
 1787 0a5c 9BB2     		uxth	r3, r3
 1788 0a5e 1340     		ands	r3, r3, r2
 1789 0a60 9AB2     		uxth	r2, r3
 1790 0a62 7B68     		ldr	r3, [r7, #4]
 1791 0a64 1A84     		strh	r2, [r3, #32]	@ movhi
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1792              		.loc 1 1024 0
 1793 0a66 7B88     		ldrh	r3, [r7, #2]
 1794 0a68 002B     		cmp	r3, #0
 1795 0a6a 02D0     		beq	.L57
 1796              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1797 0a6c 7B88     		ldrh	r3, [r7, #2]
 1798 0a6e 082B     		cmp	r3, #8
 1799 0a70 14D1     		bne	.L58
 1800              	.L57:
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 1801              		.loc 1 1026 0 is_stmt 1
 1802 0a72 7B88     		ldrh	r3, [r7, #2]
 1803 0a74 4FEA5303 		lsr	r3, r3, #1
 1804 0a78 9BB2     		uxth	r3, r3
 1805 0a7a FA68     		ldr	r2, [r7, #12]
 1806 0a7c D318     		adds	r3, r2, r3
 1807 0a7e FB60     		str	r3, [r7, #12]
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1808              		.loc 1 1029 0
 1809 0a80 FA68     		ldr	r2, [r7, #12]
 1810 0a82 FB68     		ldr	r3, [r7, #12]
 1811 0a84 1968     		ldr	r1, [r3, #0]
 1812 0a86 4FF68F73 		movw	r3, #65423
 1813 0a8a 0B40     		ands	r3, r3, r1
 1814 0a8c 1360     		str	r3, [r2, #0]
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1815              		.loc 1 1032 0
 1816 0a8e FB68     		ldr	r3, [r7, #12]
 1817 0a90 FA68     		ldr	r2, [r7, #12]
 1818 0a92 1168     		ldr	r1, [r2, #0]
 1819 0a94 3A88     		ldrh	r2, [r7, #0]
 1820 0a96 0A43     		orrs	r2, r2, r1
 1821 0a98 1A60     		str	r2, [r3, #0]
 1822 0a9a 19E0     		b	.L56
 1823              	.L58:
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1824              		.loc 1 1036 0
 1825 0a9c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1826 0a9e A3F10403 		sub	r3, r3, #4
 1827 0aa2 9BB2     		uxth	r3, r3
 1828 0aa4 4FEA5303 		lsr	r3, r3, #1
 1829 0aa8 9BB2     		uxth	r3, r3
 1830 0aaa FA68     		ldr	r2, [r7, #12]
 1831 0aac D318     		adds	r3, r2, r3
 1832 0aae FB60     		str	r3, [r7, #12]
1037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1833              		.loc 1 1039 0
 1834 0ab0 FA68     		ldr	r2, [r7, #12]
 1835 0ab2 FB68     		ldr	r3, [r7, #12]
 1836 0ab4 1968     		ldr	r1, [r3, #0]
 1837 0ab6 48F6FF73 		movw	r3, #36863
 1838 0aba 0B40     		ands	r3, r3, r1
 1839 0abc 1360     		str	r3, [r2, #0]
1040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1840              		.loc 1 1042 0
 1841 0abe FB68     		ldr	r3, [r7, #12]
 1842 0ac0 FA68     		ldr	r2, [r7, #12]
 1843 0ac2 1168     		ldr	r1, [r2, #0]
 1844 0ac4 3A88     		ldrh	r2, [r7, #0]	@ movhi
 1845 0ac6 4FEA0222 		lsl	r2, r2, #8
 1846 0aca 92B2     		uxth	r2, r2
 1847 0acc 0A43     		orrs	r2, r2, r1
 1848 0ace 1A60     		str	r2, [r3, #0]
 1849              	.L56:
1043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1850              		.loc 1 1044 0
 1851 0ad0 07F11407 		add	r7, r7, #20
 1852 0ad4 BD46     		mov	sp, r7
 1853 0ad6 80BC     		pop	{r7}
 1854 0ad8 7047     		bx	lr
 1855              		.cfi_endproc
 1856              	.LFE130:
 1858 0ada 00BF     		.align	2
 1859              		.global	TIM_SetCompare1
 1860              		.thumb
 1861              		.thumb_func
 1863              	TIM_SetCompare1:
 1864              	.LFB131:
1045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1865              		.loc 1 1053 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 8
 1868              		@ frame_needed = 1, uses_anonymous_args = 0
 1869              		@ link register save eliminated.
 1870 0adc 80B4     		push	{r7}
 1871              	.LCFI63:
 1872              		.cfi_def_cfa_offset 4
 1873              		.cfi_offset 7, -4
 1874 0ade 83B0     		sub	sp, sp, #12
 1875              	.LCFI64:
 1876              		.cfi_def_cfa_offset 16
 1877 0ae0 00AF     		add	r7, sp, #0
 1878              	.LCFI65:
 1879              		.cfi_def_cfa_register 7
 1880 0ae2 7860     		str	r0, [r7, #4]
 1881 0ae4 3960     		str	r1, [r7, #0]
1054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 1882              		.loc 1 1058 0
 1883 0ae6 7B68     		ldr	r3, [r7, #4]
 1884 0ae8 3A68     		ldr	r2, [r7, #0]
 1885 0aea 5A63     		str	r2, [r3, #52]
1059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1886              		.loc 1 1059 0
 1887 0aec 07F10C07 		add	r7, r7, #12
 1888 0af0 BD46     		mov	sp, r7
 1889 0af2 80BC     		pop	{r7}
 1890 0af4 7047     		bx	lr
 1891              		.cfi_endproc
 1892              	.LFE131:
 1894 0af6 00BF     		.align	2
 1895              		.global	TIM_SetCompare2
 1896              		.thumb
 1897              		.thumb_func
 1899              	TIM_SetCompare2:
 1900              	.LFB132:
1060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1901              		.loc 1 1069 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 8
 1904              		@ frame_needed = 1, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
 1906 0af8 80B4     		push	{r7}
 1907              	.LCFI66:
 1908              		.cfi_def_cfa_offset 4
 1909              		.cfi_offset 7, -4
 1910 0afa 83B0     		sub	sp, sp, #12
 1911              	.LCFI67:
 1912              		.cfi_def_cfa_offset 16
 1913 0afc 00AF     		add	r7, sp, #0
 1914              	.LCFI68:
 1915              		.cfi_def_cfa_register 7
 1916 0afe 7860     		str	r0, [r7, #4]
 1917 0b00 3960     		str	r1, [r7, #0]
1070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 1918              		.loc 1 1074 0
 1919 0b02 7B68     		ldr	r3, [r7, #4]
 1920 0b04 3A68     		ldr	r2, [r7, #0]
 1921 0b06 9A63     		str	r2, [r3, #56]
1075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1922              		.loc 1 1075 0
 1923 0b08 07F10C07 		add	r7, r7, #12
 1924 0b0c BD46     		mov	sp, r7
 1925 0b0e 80BC     		pop	{r7}
 1926 0b10 7047     		bx	lr
 1927              		.cfi_endproc
 1928              	.LFE132:
 1930 0b12 00BF     		.align	2
 1931              		.global	TIM_SetCompare3
 1932              		.thumb
 1933              		.thumb_func
 1935              	TIM_SetCompare3:
 1936              	.LFB133:
1076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1937              		.loc 1 1084 0
 1938              		.cfi_startproc
 1939              		@ args = 0, pretend = 0, frame = 8
 1940              		@ frame_needed = 1, uses_anonymous_args = 0
 1941              		@ link register save eliminated.
 1942 0b14 80B4     		push	{r7}
 1943              	.LCFI69:
 1944              		.cfi_def_cfa_offset 4
 1945              		.cfi_offset 7, -4
 1946 0b16 83B0     		sub	sp, sp, #12
 1947              	.LCFI70:
 1948              		.cfi_def_cfa_offset 16
 1949 0b18 00AF     		add	r7, sp, #0
 1950              	.LCFI71:
 1951              		.cfi_def_cfa_register 7
 1952 0b1a 7860     		str	r0, [r7, #4]
 1953 0b1c 3960     		str	r1, [r7, #0]
1085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 1954              		.loc 1 1089 0
 1955 0b1e 7B68     		ldr	r3, [r7, #4]
 1956 0b20 3A68     		ldr	r2, [r7, #0]
 1957 0b22 DA63     		str	r2, [r3, #60]
1090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1958              		.loc 1 1090 0
 1959 0b24 07F10C07 		add	r7, r7, #12
 1960 0b28 BD46     		mov	sp, r7
 1961 0b2a 80BC     		pop	{r7}
 1962 0b2c 7047     		bx	lr
 1963              		.cfi_endproc
 1964              	.LFE133:
 1966 0b2e 00BF     		.align	2
 1967              		.global	TIM_SetCompare4
 1968              		.thumb
 1969              		.thumb_func
 1971              	TIM_SetCompare4:
 1972              	.LFB134:
1091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1973              		.loc 1 1099 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 8
 1976              		@ frame_needed = 1, uses_anonymous_args = 0
 1977              		@ link register save eliminated.
 1978 0b30 80B4     		push	{r7}
 1979              	.LCFI72:
 1980              		.cfi_def_cfa_offset 4
 1981              		.cfi_offset 7, -4
 1982 0b32 83B0     		sub	sp, sp, #12
 1983              	.LCFI73:
 1984              		.cfi_def_cfa_offset 16
 1985 0b34 00AF     		add	r7, sp, #0
 1986              	.LCFI74:
 1987              		.cfi_def_cfa_register 7
 1988 0b36 7860     		str	r0, [r7, #4]
 1989 0b38 3960     		str	r1, [r7, #0]
1100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 1990              		.loc 1 1104 0
 1991 0b3a 7B68     		ldr	r3, [r7, #4]
 1992 0b3c 3A68     		ldr	r2, [r7, #0]
 1993 0b3e 1A64     		str	r2, [r3, #64]
1105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1994              		.loc 1 1105 0
 1995 0b40 07F10C07 		add	r7, r7, #12
 1996 0b44 BD46     		mov	sp, r7
 1997 0b46 80BC     		pop	{r7}
 1998 0b48 7047     		bx	lr
 1999              		.cfi_endproc
 2000              	.LFE134:
 2002 0b4a 00BF     		.align	2
 2003              		.global	TIM_ForcedOC1Config
 2004              		.thumb
 2005              		.thumb_func
 2007              	TIM_ForcedOC1Config:
 2008              	.LFB135:
1106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2009              		.loc 1 1117 0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 16
 2012              		@ frame_needed = 1, uses_anonymous_args = 0
 2013              		@ link register save eliminated.
 2014 0b4c 80B4     		push	{r7}
 2015              	.LCFI75:
 2016              		.cfi_def_cfa_offset 4
 2017              		.cfi_offset 7, -4
 2018 0b4e 85B0     		sub	sp, sp, #20
 2019              	.LCFI76:
 2020              		.cfi_def_cfa_offset 24
 2021 0b50 00AF     		add	r7, sp, #0
 2022              	.LCFI77:
 2023              		.cfi_def_cfa_register 7
 2024 0b52 7860     		str	r0, [r7, #4]
 2025 0b54 0B46     		mov	r3, r1
 2026 0b56 7B80     		strh	r3, [r7, #2]	@ movhi
1118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2027              		.loc 1 1118 0
 2028 0b58 4FF00003 		mov	r3, #0
 2029 0b5c FB81     		strh	r3, [r7, #14]	@ movhi
1119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2030              		.loc 1 1123 0
 2031 0b5e 7B68     		ldr	r3, [r7, #4]
 2032 0b60 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2033 0b62 FB81     		strh	r3, [r7, #14]	@ movhi
1124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 2034              		.loc 1 1126 0
 2035 0b64 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2036 0b66 23F07003 		bic	r3, r3, #112
 2037 0b6a FB81     		strh	r3, [r7, #14]	@ movhi
1127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 2038              		.loc 1 1129 0
 2039 0b6c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2040 0b6e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2041 0b70 1343     		orrs	r3, r3, r2
 2042 0b72 FB81     		strh	r3, [r7, #14]	@ movhi
1130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2043              		.loc 1 1132 0
 2044 0b74 7B68     		ldr	r3, [r7, #4]
 2045 0b76 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2046 0b78 1A83     		strh	r2, [r3, #24]	@ movhi
1133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2047              		.loc 1 1133 0
 2048 0b7a 07F11407 		add	r7, r7, #20
 2049 0b7e BD46     		mov	sp, r7
 2050 0b80 80BC     		pop	{r7}
 2051 0b82 7047     		bx	lr
 2052              		.cfi_endproc
 2053              	.LFE135:
 2055              		.align	2
 2056              		.global	TIM_ForcedOC2Config
 2057              		.thumb
 2058              		.thumb_func
 2060              	TIM_ForcedOC2Config:
 2061              	.LFB136:
1134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2062              		.loc 1 1146 0
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 16
 2065              		@ frame_needed = 1, uses_anonymous_args = 0
 2066              		@ link register save eliminated.
 2067 0b84 80B4     		push	{r7}
 2068              	.LCFI78:
 2069              		.cfi_def_cfa_offset 4
 2070              		.cfi_offset 7, -4
 2071 0b86 85B0     		sub	sp, sp, #20
 2072              	.LCFI79:
 2073              		.cfi_def_cfa_offset 24
 2074 0b88 00AF     		add	r7, sp, #0
 2075              	.LCFI80:
 2076              		.cfi_def_cfa_register 7
 2077 0b8a 7860     		str	r0, [r7, #4]
 2078 0b8c 0B46     		mov	r3, r1
 2079 0b8e 7B80     		strh	r3, [r7, #2]	@ movhi
1147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2080              		.loc 1 1147 0
 2081 0b90 4FF00003 		mov	r3, #0
 2082 0b94 FB81     		strh	r3, [r7, #14]	@ movhi
1148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2083              		.loc 1 1152 0
 2084 0b96 7B68     		ldr	r3, [r7, #4]
 2085 0b98 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2086 0b9a FB81     		strh	r3, [r7, #14]	@ movhi
1153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 2087              		.loc 1 1155 0
 2088 0b9c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2089 0b9e 23F4E043 		bic	r3, r3, #28672
 2090 0ba2 FB81     		strh	r3, [r7, #14]	@ movhi
1156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 2091              		.loc 1 1158 0
 2092 0ba4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2093 0ba6 4FEA0323 		lsl	r3, r3, #8
 2094 0baa 9AB2     		uxth	r2, r3
 2095 0bac FB89     		ldrh	r3, [r7, #14]	@ movhi
 2096 0bae 1343     		orrs	r3, r3, r2
 2097 0bb0 FB81     		strh	r3, [r7, #14]	@ movhi
1159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2098              		.loc 1 1161 0
 2099 0bb2 7B68     		ldr	r3, [r7, #4]
 2100 0bb4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2101 0bb6 1A83     		strh	r2, [r3, #24]	@ movhi
1162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2102              		.loc 1 1162 0
 2103 0bb8 07F11407 		add	r7, r7, #20
 2104 0bbc BD46     		mov	sp, r7
 2105 0bbe 80BC     		pop	{r7}
 2106 0bc0 7047     		bx	lr
 2107              		.cfi_endproc
 2108              	.LFE136:
 2110 0bc2 00BF     		.align	2
 2111              		.global	TIM_ForcedOC3Config
 2112              		.thumb
 2113              		.thumb_func
 2115              	TIM_ForcedOC3Config:
 2116              	.LFB137:
1163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2117              		.loc 1 1174 0
 2118              		.cfi_startproc
 2119              		@ args = 0, pretend = 0, frame = 16
 2120              		@ frame_needed = 1, uses_anonymous_args = 0
 2121              		@ link register save eliminated.
 2122 0bc4 80B4     		push	{r7}
 2123              	.LCFI81:
 2124              		.cfi_def_cfa_offset 4
 2125              		.cfi_offset 7, -4
 2126 0bc6 85B0     		sub	sp, sp, #20
 2127              	.LCFI82:
 2128              		.cfi_def_cfa_offset 24
 2129 0bc8 00AF     		add	r7, sp, #0
 2130              	.LCFI83:
 2131              		.cfi_def_cfa_register 7
 2132 0bca 7860     		str	r0, [r7, #4]
 2133 0bcc 0B46     		mov	r3, r1
 2134 0bce 7B80     		strh	r3, [r7, #2]	@ movhi
1175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2135              		.loc 1 1175 0
 2136 0bd0 4FF00003 		mov	r3, #0
 2137 0bd4 FB81     		strh	r3, [r7, #14]	@ movhi
1176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2138              		.loc 1 1181 0
 2139 0bd6 7B68     		ldr	r3, [r7, #4]
 2140 0bd8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2141 0bda FB81     		strh	r3, [r7, #14]	@ movhi
1182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 2142              		.loc 1 1184 0
 2143 0bdc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2144 0bde 23F07003 		bic	r3, r3, #112
 2145 0be2 FB81     		strh	r3, [r7, #14]	@ movhi
1185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 2146              		.loc 1 1187 0
 2147 0be4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2148 0be6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2149 0be8 1343     		orrs	r3, r3, r2
 2150 0bea FB81     		strh	r3, [r7, #14]	@ movhi
1188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2151              		.loc 1 1190 0
 2152 0bec 7B68     		ldr	r3, [r7, #4]
 2153 0bee FA89     		ldrh	r2, [r7, #14]	@ movhi
 2154 0bf0 9A83     		strh	r2, [r3, #28]	@ movhi
1191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2155              		.loc 1 1191 0
 2156 0bf2 07F11407 		add	r7, r7, #20
 2157 0bf6 BD46     		mov	sp, r7
 2158 0bf8 80BC     		pop	{r7}
 2159 0bfa 7047     		bx	lr
 2160              		.cfi_endproc
 2161              	.LFE137:
 2163              		.align	2
 2164              		.global	TIM_ForcedOC4Config
 2165              		.thumb
 2166              		.thumb_func
 2168              	TIM_ForcedOC4Config:
 2169              	.LFB138:
1192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2170              		.loc 1 1203 0
 2171              		.cfi_startproc
 2172              		@ args = 0, pretend = 0, frame = 16
 2173              		@ frame_needed = 1, uses_anonymous_args = 0
 2174              		@ link register save eliminated.
 2175 0bfc 80B4     		push	{r7}
 2176              	.LCFI84:
 2177              		.cfi_def_cfa_offset 4
 2178              		.cfi_offset 7, -4
 2179 0bfe 85B0     		sub	sp, sp, #20
 2180              	.LCFI85:
 2181              		.cfi_def_cfa_offset 24
 2182 0c00 00AF     		add	r7, sp, #0
 2183              	.LCFI86:
 2184              		.cfi_def_cfa_register 7
 2185 0c02 7860     		str	r0, [r7, #4]
 2186 0c04 0B46     		mov	r3, r1
 2187 0c06 7B80     		strh	r3, [r7, #2]	@ movhi
1204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2188              		.loc 1 1204 0
 2189 0c08 4FF00003 		mov	r3, #0
 2190 0c0c FB81     		strh	r3, [r7, #14]	@ movhi
1205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2191              		.loc 1 1209 0
 2192 0c0e 7B68     		ldr	r3, [r7, #4]
 2193 0c10 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2194 0c12 FB81     		strh	r3, [r7, #14]	@ movhi
1210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 2195              		.loc 1 1212 0
 2196 0c14 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2197 0c16 23F4E043 		bic	r3, r3, #28672
 2198 0c1a FB81     		strh	r3, [r7, #14]	@ movhi
1213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 2199              		.loc 1 1215 0
 2200 0c1c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2201 0c1e 4FEA0323 		lsl	r3, r3, #8
 2202 0c22 9AB2     		uxth	r2, r3
 2203 0c24 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2204 0c26 1343     		orrs	r3, r3, r2
 2205 0c28 FB81     		strh	r3, [r7, #14]	@ movhi
1216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2206              		.loc 1 1218 0
 2207 0c2a 7B68     		ldr	r3, [r7, #4]
 2208 0c2c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2209 0c2e 9A83     		strh	r2, [r3, #28]	@ movhi
1219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2210              		.loc 1 1219 0
 2211 0c30 07F11407 		add	r7, r7, #20
 2212 0c34 BD46     		mov	sp, r7
 2213 0c36 80BC     		pop	{r7}
 2214 0c38 7047     		bx	lr
 2215              		.cfi_endproc
 2216              	.LFE138:
 2218 0c3a 00BF     		.align	2
 2219              		.global	TIM_OC1PreloadConfig
 2220              		.thumb
 2221              		.thumb_func
 2223              	TIM_OC1PreloadConfig:
 2224              	.LFB139:
1220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2225              		.loc 1 1231 0
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 16
 2228              		@ frame_needed = 1, uses_anonymous_args = 0
 2229              		@ link register save eliminated.
 2230 0c3c 80B4     		push	{r7}
 2231              	.LCFI87:
 2232              		.cfi_def_cfa_offset 4
 2233              		.cfi_offset 7, -4
 2234 0c3e 85B0     		sub	sp, sp, #20
 2235              	.LCFI88:
 2236              		.cfi_def_cfa_offset 24
 2237 0c40 00AF     		add	r7, sp, #0
 2238              	.LCFI89:
 2239              		.cfi_def_cfa_register 7
 2240 0c42 7860     		str	r0, [r7, #4]
 2241 0c44 0B46     		mov	r3, r1
 2242 0c46 7B80     		strh	r3, [r7, #2]	@ movhi
1232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2243              		.loc 1 1232 0
 2244 0c48 4FF00003 		mov	r3, #0
 2245 0c4c FB81     		strh	r3, [r7, #14]	@ movhi
1233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2246              		.loc 1 1238 0
 2247 0c4e 7B68     		ldr	r3, [r7, #4]
 2248 0c50 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2249 0c52 FB81     		strh	r3, [r7, #14]	@ movhi
1239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 2250              		.loc 1 1241 0
 2251 0c54 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2252 0c56 23F00803 		bic	r3, r3, #8
 2253 0c5a FB81     		strh	r3, [r7, #14]	@ movhi
1242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2254              		.loc 1 1244 0
 2255 0c5c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2256 0c5e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2257 0c60 1343     		orrs	r3, r3, r2
 2258 0c62 FB81     		strh	r3, [r7, #14]	@ movhi
1245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2259              		.loc 1 1247 0
 2260 0c64 7B68     		ldr	r3, [r7, #4]
 2261 0c66 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2262 0c68 1A83     		strh	r2, [r3, #24]	@ movhi
1248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2263              		.loc 1 1248 0
 2264 0c6a 07F11407 		add	r7, r7, #20
 2265 0c6e BD46     		mov	sp, r7
 2266 0c70 80BC     		pop	{r7}
 2267 0c72 7047     		bx	lr
 2268              		.cfi_endproc
 2269              	.LFE139:
 2271              		.align	2
 2272              		.global	TIM_OC2PreloadConfig
 2273              		.thumb
 2274              		.thumb_func
 2276              	TIM_OC2PreloadConfig:
 2277              	.LFB140:
1249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2278              		.loc 1 1261 0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 16
 2281              		@ frame_needed = 1, uses_anonymous_args = 0
 2282              		@ link register save eliminated.
 2283 0c74 80B4     		push	{r7}
 2284              	.LCFI90:
 2285              		.cfi_def_cfa_offset 4
 2286              		.cfi_offset 7, -4
 2287 0c76 85B0     		sub	sp, sp, #20
 2288              	.LCFI91:
 2289              		.cfi_def_cfa_offset 24
 2290 0c78 00AF     		add	r7, sp, #0
 2291              	.LCFI92:
 2292              		.cfi_def_cfa_register 7
 2293 0c7a 7860     		str	r0, [r7, #4]
 2294 0c7c 0B46     		mov	r3, r1
 2295 0c7e 7B80     		strh	r3, [r7, #2]	@ movhi
1262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2296              		.loc 1 1262 0
 2297 0c80 4FF00003 		mov	r3, #0
 2298 0c84 FB81     		strh	r3, [r7, #14]	@ movhi
1263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2299              		.loc 1 1268 0
 2300 0c86 7B68     		ldr	r3, [r7, #4]
 2301 0c88 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2302 0c8a FB81     		strh	r3, [r7, #14]	@ movhi
1269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 2303              		.loc 1 1271 0
 2304 0c8c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2305 0c8e 23F40063 		bic	r3, r3, #2048
 2306 0c92 FB81     		strh	r3, [r7, #14]	@ movhi
1272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 2307              		.loc 1 1274 0
 2308 0c94 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2309 0c96 4FEA0323 		lsl	r3, r3, #8
 2310 0c9a 9AB2     		uxth	r2, r3
 2311 0c9c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2312 0c9e 1343     		orrs	r3, r3, r2
 2313 0ca0 FB81     		strh	r3, [r7, #14]	@ movhi
1275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2314              		.loc 1 1277 0
 2315 0ca2 7B68     		ldr	r3, [r7, #4]
 2316 0ca4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2317 0ca6 1A83     		strh	r2, [r3, #24]	@ movhi
1278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2318              		.loc 1 1278 0
 2319 0ca8 07F11407 		add	r7, r7, #20
 2320 0cac BD46     		mov	sp, r7
 2321 0cae 80BC     		pop	{r7}
 2322 0cb0 7047     		bx	lr
 2323              		.cfi_endproc
 2324              	.LFE140:
 2326 0cb2 00BF     		.align	2
 2327              		.global	TIM_OC3PreloadConfig
 2328              		.thumb
 2329              		.thumb_func
 2331              	TIM_OC3PreloadConfig:
 2332              	.LFB141:
1279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2333              		.loc 1 1290 0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 16
 2336              		@ frame_needed = 1, uses_anonymous_args = 0
 2337              		@ link register save eliminated.
 2338 0cb4 80B4     		push	{r7}
 2339              	.LCFI93:
 2340              		.cfi_def_cfa_offset 4
 2341              		.cfi_offset 7, -4
 2342 0cb6 85B0     		sub	sp, sp, #20
 2343              	.LCFI94:
 2344              		.cfi_def_cfa_offset 24
 2345 0cb8 00AF     		add	r7, sp, #0
 2346              	.LCFI95:
 2347              		.cfi_def_cfa_register 7
 2348 0cba 7860     		str	r0, [r7, #4]
 2349 0cbc 0B46     		mov	r3, r1
 2350 0cbe 7B80     		strh	r3, [r7, #2]	@ movhi
1291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2351              		.loc 1 1291 0
 2352 0cc0 4FF00003 		mov	r3, #0
 2353 0cc4 FB81     		strh	r3, [r7, #14]	@ movhi
1292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2354              		.loc 1 1297 0
 2355 0cc6 7B68     		ldr	r3, [r7, #4]
 2356 0cc8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2357 0cca FB81     		strh	r3, [r7, #14]	@ movhi
1298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 2358              		.loc 1 1300 0
 2359 0ccc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2360 0cce 23F00803 		bic	r3, r3, #8
 2361 0cd2 FB81     		strh	r3, [r7, #14]	@ movhi
1301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2362              		.loc 1 1303 0
 2363 0cd4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2364 0cd6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2365 0cd8 1343     		orrs	r3, r3, r2
 2366 0cda FB81     		strh	r3, [r7, #14]	@ movhi
1304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2367              		.loc 1 1306 0
 2368 0cdc 7B68     		ldr	r3, [r7, #4]
 2369 0cde FA89     		ldrh	r2, [r7, #14]	@ movhi
 2370 0ce0 9A83     		strh	r2, [r3, #28]	@ movhi
1307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2371              		.loc 1 1307 0
 2372 0ce2 07F11407 		add	r7, r7, #20
 2373 0ce6 BD46     		mov	sp, r7
 2374 0ce8 80BC     		pop	{r7}
 2375 0cea 7047     		bx	lr
 2376              		.cfi_endproc
 2377              	.LFE141:
 2379              		.align	2
 2380              		.global	TIM_OC4PreloadConfig
 2381              		.thumb
 2382              		.thumb_func
 2384              	TIM_OC4PreloadConfig:
 2385              	.LFB142:
1308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2386              		.loc 1 1319 0
 2387              		.cfi_startproc
 2388              		@ args = 0, pretend = 0, frame = 16
 2389              		@ frame_needed = 1, uses_anonymous_args = 0
 2390              		@ link register save eliminated.
 2391 0cec 80B4     		push	{r7}
 2392              	.LCFI96:
 2393              		.cfi_def_cfa_offset 4
 2394              		.cfi_offset 7, -4
 2395 0cee 85B0     		sub	sp, sp, #20
 2396              	.LCFI97:
 2397              		.cfi_def_cfa_offset 24
 2398 0cf0 00AF     		add	r7, sp, #0
 2399              	.LCFI98:
 2400              		.cfi_def_cfa_register 7
 2401 0cf2 7860     		str	r0, [r7, #4]
 2402 0cf4 0B46     		mov	r3, r1
 2403 0cf6 7B80     		strh	r3, [r7, #2]	@ movhi
1320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2404              		.loc 1 1320 0
 2405 0cf8 4FF00003 		mov	r3, #0
 2406 0cfc FB81     		strh	r3, [r7, #14]	@ movhi
1321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2407              		.loc 1 1326 0
 2408 0cfe 7B68     		ldr	r3, [r7, #4]
 2409 0d00 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2410 0d02 FB81     		strh	r3, [r7, #14]	@ movhi
1327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 2411              		.loc 1 1329 0
 2412 0d04 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2413 0d06 23F40063 		bic	r3, r3, #2048
 2414 0d0a FB81     		strh	r3, [r7, #14]	@ movhi
1330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 2415              		.loc 1 1332 0
 2416 0d0c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2417 0d0e 4FEA0323 		lsl	r3, r3, #8
 2418 0d12 9AB2     		uxth	r2, r3
 2419 0d14 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2420 0d16 1343     		orrs	r3, r3, r2
 2421 0d18 FB81     		strh	r3, [r7, #14]	@ movhi
1333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2422              		.loc 1 1335 0
 2423 0d1a 7B68     		ldr	r3, [r7, #4]
 2424 0d1c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2425 0d1e 9A83     		strh	r2, [r3, #28]	@ movhi
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2426              		.loc 1 1336 0
 2427 0d20 07F11407 		add	r7, r7, #20
 2428 0d24 BD46     		mov	sp, r7
 2429 0d26 80BC     		pop	{r7}
 2430 0d28 7047     		bx	lr
 2431              		.cfi_endproc
 2432              	.LFE142:
 2434 0d2a 00BF     		.align	2
 2435              		.global	TIM_OC1FastConfig
 2436              		.thumb
 2437              		.thumb_func
 2439              	TIM_OC1FastConfig:
 2440              	.LFB143:
1337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2441              		.loc 1 1348 0
 2442              		.cfi_startproc
 2443              		@ args = 0, pretend = 0, frame = 16
 2444              		@ frame_needed = 1, uses_anonymous_args = 0
 2445              		@ link register save eliminated.
 2446 0d2c 80B4     		push	{r7}
 2447              	.LCFI99:
 2448              		.cfi_def_cfa_offset 4
 2449              		.cfi_offset 7, -4
 2450 0d2e 85B0     		sub	sp, sp, #20
 2451              	.LCFI100:
 2452              		.cfi_def_cfa_offset 24
 2453 0d30 00AF     		add	r7, sp, #0
 2454              	.LCFI101:
 2455              		.cfi_def_cfa_register 7
 2456 0d32 7860     		str	r0, [r7, #4]
 2457 0d34 0B46     		mov	r3, r1
 2458 0d36 7B80     		strh	r3, [r7, #2]	@ movhi
1349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2459              		.loc 1 1349 0
 2460 0d38 4FF00003 		mov	r3, #0
 2461 0d3c FB81     		strh	r3, [r7, #14]	@ movhi
1350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2462              		.loc 1 1356 0
 2463 0d3e 7B68     		ldr	r3, [r7, #4]
 2464 0d40 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2465 0d42 FB81     		strh	r3, [r7, #14]	@ movhi
1357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 2466              		.loc 1 1359 0
 2467 0d44 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2468 0d46 23F00403 		bic	r3, r3, #4
 2469 0d4a FB81     		strh	r3, [r7, #14]	@ movhi
1360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 2470              		.loc 1 1362 0
 2471 0d4c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2472 0d4e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2473 0d50 1343     		orrs	r3, r3, r2
 2474 0d52 FB81     		strh	r3, [r7, #14]	@ movhi
1363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2475              		.loc 1 1365 0
 2476 0d54 7B68     		ldr	r3, [r7, #4]
 2477 0d56 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2478 0d58 1A83     		strh	r2, [r3, #24]	@ movhi
1366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2479              		.loc 1 1366 0
 2480 0d5a 07F11407 		add	r7, r7, #20
 2481 0d5e BD46     		mov	sp, r7
 2482 0d60 80BC     		pop	{r7}
 2483 0d62 7047     		bx	lr
 2484              		.cfi_endproc
 2485              	.LFE143:
 2487              		.align	2
 2488              		.global	TIM_OC2FastConfig
 2489              		.thumb
 2490              		.thumb_func
 2492              	TIM_OC2FastConfig:
 2493              	.LFB144:
1367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2494              		.loc 1 1379 0
 2495              		.cfi_startproc
 2496              		@ args = 0, pretend = 0, frame = 16
 2497              		@ frame_needed = 1, uses_anonymous_args = 0
 2498              		@ link register save eliminated.
 2499 0d64 80B4     		push	{r7}
 2500              	.LCFI102:
 2501              		.cfi_def_cfa_offset 4
 2502              		.cfi_offset 7, -4
 2503 0d66 85B0     		sub	sp, sp, #20
 2504              	.LCFI103:
 2505              		.cfi_def_cfa_offset 24
 2506 0d68 00AF     		add	r7, sp, #0
 2507              	.LCFI104:
 2508              		.cfi_def_cfa_register 7
 2509 0d6a 7860     		str	r0, [r7, #4]
 2510 0d6c 0B46     		mov	r3, r1
 2511 0d6e 7B80     		strh	r3, [r7, #2]	@ movhi
1380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2512              		.loc 1 1380 0
 2513 0d70 4FF00003 		mov	r3, #0
 2514 0d74 FB81     		strh	r3, [r7, #14]	@ movhi
1381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2515              		.loc 1 1387 0
 2516 0d76 7B68     		ldr	r3, [r7, #4]
 2517 0d78 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2518 0d7a FB81     		strh	r3, [r7, #14]	@ movhi
1388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 2519              		.loc 1 1390 0
 2520 0d7c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2521 0d7e 23F48063 		bic	r3, r3, #1024
 2522 0d82 FB81     		strh	r3, [r7, #14]	@ movhi
1391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2523              		.loc 1 1393 0
 2524 0d84 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2525 0d86 4FEA0323 		lsl	r3, r3, #8
 2526 0d8a 9AB2     		uxth	r2, r3
 2527 0d8c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2528 0d8e 1343     		orrs	r3, r3, r2
 2529 0d90 FB81     		strh	r3, [r7, #14]	@ movhi
1394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2530              		.loc 1 1396 0
 2531 0d92 7B68     		ldr	r3, [r7, #4]
 2532 0d94 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2533 0d96 1A83     		strh	r2, [r3, #24]	@ movhi
1397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2534              		.loc 1 1397 0
 2535 0d98 07F11407 		add	r7, r7, #20
 2536 0d9c BD46     		mov	sp, r7
 2537 0d9e 80BC     		pop	{r7}
 2538 0da0 7047     		bx	lr
 2539              		.cfi_endproc
 2540              	.LFE144:
 2542 0da2 00BF     		.align	2
 2543              		.global	TIM_OC3FastConfig
 2544              		.thumb
 2545              		.thumb_func
 2547              	TIM_OC3FastConfig:
 2548              	.LFB145:
1398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2549              		.loc 1 1409 0
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 16
 2552              		@ frame_needed = 1, uses_anonymous_args = 0
 2553              		@ link register save eliminated.
 2554 0da4 80B4     		push	{r7}
 2555              	.LCFI105:
 2556              		.cfi_def_cfa_offset 4
 2557              		.cfi_offset 7, -4
 2558 0da6 85B0     		sub	sp, sp, #20
 2559              	.LCFI106:
 2560              		.cfi_def_cfa_offset 24
 2561 0da8 00AF     		add	r7, sp, #0
 2562              	.LCFI107:
 2563              		.cfi_def_cfa_register 7
 2564 0daa 7860     		str	r0, [r7, #4]
 2565 0dac 0B46     		mov	r3, r1
 2566 0dae 7B80     		strh	r3, [r7, #2]	@ movhi
1410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2567              		.loc 1 1410 0
 2568 0db0 4FF00003 		mov	r3, #0
 2569 0db4 FB81     		strh	r3, [r7, #14]	@ movhi
1411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2570              		.loc 1 1417 0
 2571 0db6 7B68     		ldr	r3, [r7, #4]
 2572 0db8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2573 0dba FB81     		strh	r3, [r7, #14]	@ movhi
1418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 2574              		.loc 1 1420 0
 2575 0dbc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2576 0dbe 23F00403 		bic	r3, r3, #4
 2577 0dc2 FB81     		strh	r3, [r7, #14]	@ movhi
1421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2578              		.loc 1 1423 0
 2579 0dc4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2580 0dc6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2581 0dc8 1343     		orrs	r3, r3, r2
 2582 0dca FB81     		strh	r3, [r7, #14]	@ movhi
1424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2583              		.loc 1 1426 0
 2584 0dcc 7B68     		ldr	r3, [r7, #4]
 2585 0dce FA89     		ldrh	r2, [r7, #14]	@ movhi
 2586 0dd0 9A83     		strh	r2, [r3, #28]	@ movhi
1427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2587              		.loc 1 1427 0
 2588 0dd2 07F11407 		add	r7, r7, #20
 2589 0dd6 BD46     		mov	sp, r7
 2590 0dd8 80BC     		pop	{r7}
 2591 0dda 7047     		bx	lr
 2592              		.cfi_endproc
 2593              	.LFE145:
 2595              		.align	2
 2596              		.global	TIM_OC4FastConfig
 2597              		.thumb
 2598              		.thumb_func
 2600              	TIM_OC4FastConfig:
 2601              	.LFB146:
1428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2602              		.loc 1 1439 0
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 16
 2605              		@ frame_needed = 1, uses_anonymous_args = 0
 2606              		@ link register save eliminated.
 2607 0ddc 80B4     		push	{r7}
 2608              	.LCFI108:
 2609              		.cfi_def_cfa_offset 4
 2610              		.cfi_offset 7, -4
 2611 0dde 85B0     		sub	sp, sp, #20
 2612              	.LCFI109:
 2613              		.cfi_def_cfa_offset 24
 2614 0de0 00AF     		add	r7, sp, #0
 2615              	.LCFI110:
 2616              		.cfi_def_cfa_register 7
 2617 0de2 7860     		str	r0, [r7, #4]
 2618 0de4 0B46     		mov	r3, r1
 2619 0de6 7B80     		strh	r3, [r7, #2]	@ movhi
1440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2620              		.loc 1 1440 0
 2621 0de8 4FF00003 		mov	r3, #0
 2622 0dec FB81     		strh	r3, [r7, #14]	@ movhi
1441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2623              		.loc 1 1447 0
 2624 0dee 7B68     		ldr	r3, [r7, #4]
 2625 0df0 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2626 0df2 FB81     		strh	r3, [r7, #14]	@ movhi
1448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 2627              		.loc 1 1450 0
 2628 0df4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2629 0df6 23F48063 		bic	r3, r3, #1024
 2630 0dfa FB81     		strh	r3, [r7, #14]	@ movhi
1451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2631              		.loc 1 1453 0
 2632 0dfc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2633 0dfe 4FEA0323 		lsl	r3, r3, #8
 2634 0e02 9AB2     		uxth	r2, r3
 2635 0e04 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2636 0e06 1343     		orrs	r3, r3, r2
 2637 0e08 FB81     		strh	r3, [r7, #14]	@ movhi
1454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2638              		.loc 1 1456 0
 2639 0e0a 7B68     		ldr	r3, [r7, #4]
 2640 0e0c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2641 0e0e 9A83     		strh	r2, [r3, #28]	@ movhi
1457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2642              		.loc 1 1457 0
 2643 0e10 07F11407 		add	r7, r7, #20
 2644 0e14 BD46     		mov	sp, r7
 2645 0e16 80BC     		pop	{r7}
 2646 0e18 7047     		bx	lr
 2647              		.cfi_endproc
 2648              	.LFE146:
 2650 0e1a 00BF     		.align	2
 2651              		.global	TIM_ClearOC1Ref
 2652              		.thumb
 2653              		.thumb_func
 2655              	TIM_ClearOC1Ref:
 2656              	.LFB147:
1458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2657              		.loc 1 1469 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 16
 2660              		@ frame_needed = 1, uses_anonymous_args = 0
 2661              		@ link register save eliminated.
 2662 0e1c 80B4     		push	{r7}
 2663              	.LCFI111:
 2664              		.cfi_def_cfa_offset 4
 2665              		.cfi_offset 7, -4
 2666 0e1e 85B0     		sub	sp, sp, #20
 2667              	.LCFI112:
 2668              		.cfi_def_cfa_offset 24
 2669 0e20 00AF     		add	r7, sp, #0
 2670              	.LCFI113:
 2671              		.cfi_def_cfa_register 7
 2672 0e22 7860     		str	r0, [r7, #4]
 2673 0e24 0B46     		mov	r3, r1
 2674 0e26 7B80     		strh	r3, [r7, #2]	@ movhi
1470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2675              		.loc 1 1470 0
 2676 0e28 4FF00003 		mov	r3, #0
 2677 0e2c FB81     		strh	r3, [r7, #14]	@ movhi
1471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2678              		.loc 1 1476 0
 2679 0e2e 7B68     		ldr	r3, [r7, #4]
 2680 0e30 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2681 0e32 FB81     		strh	r3, [r7, #14]	@ movhi
1477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 2682              		.loc 1 1479 0
 2683 0e34 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2684 0e36 23F08003 		bic	r3, r3, #128
 2685 0e3a FB81     		strh	r3, [r7, #14]	@ movhi
1480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2686              		.loc 1 1482 0
 2687 0e3c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2688 0e3e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2689 0e40 1343     		orrs	r3, r3, r2
 2690 0e42 FB81     		strh	r3, [r7, #14]	@ movhi
1483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2691              		.loc 1 1485 0
 2692 0e44 7B68     		ldr	r3, [r7, #4]
 2693 0e46 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2694 0e48 1A83     		strh	r2, [r3, #24]	@ movhi
1486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2695              		.loc 1 1486 0
 2696 0e4a 07F11407 		add	r7, r7, #20
 2697 0e4e BD46     		mov	sp, r7
 2698 0e50 80BC     		pop	{r7}
 2699 0e52 7047     		bx	lr
 2700              		.cfi_endproc
 2701              	.LFE147:
 2703              		.align	2
 2704              		.global	TIM_ClearOC2Ref
 2705              		.thumb
 2706              		.thumb_func
 2708              	TIM_ClearOC2Ref:
 2709              	.LFB148:
1487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2710              		.loc 1 1499 0
 2711              		.cfi_startproc
 2712              		@ args = 0, pretend = 0, frame = 16
 2713              		@ frame_needed = 1, uses_anonymous_args = 0
 2714              		@ link register save eliminated.
 2715 0e54 80B4     		push	{r7}
 2716              	.LCFI114:
 2717              		.cfi_def_cfa_offset 4
 2718              		.cfi_offset 7, -4
 2719 0e56 85B0     		sub	sp, sp, #20
 2720              	.LCFI115:
 2721              		.cfi_def_cfa_offset 24
 2722 0e58 00AF     		add	r7, sp, #0
 2723              	.LCFI116:
 2724              		.cfi_def_cfa_register 7
 2725 0e5a 7860     		str	r0, [r7, #4]
 2726 0e5c 0B46     		mov	r3, r1
 2727 0e5e 7B80     		strh	r3, [r7, #2]	@ movhi
1500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2728              		.loc 1 1500 0
 2729 0e60 4FF00003 		mov	r3, #0
 2730 0e64 FB81     		strh	r3, [r7, #14]	@ movhi
1501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2731              		.loc 1 1506 0
 2732 0e66 7B68     		ldr	r3, [r7, #4]
 2733 0e68 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2734 0e6a FB81     		strh	r3, [r7, #14]	@ movhi
1507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2735              		.loc 1 1509 0
 2736 0e6c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2737 0e6e 4FEA4343 		lsl	r3, r3, #17
 2738 0e72 4FEA5343 		lsr	r3, r3, #17
 2739 0e76 FB81     		strh	r3, [r7, #14]	@ movhi
1510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2740              		.loc 1 1512 0
 2741 0e78 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2742 0e7a 4FEA0323 		lsl	r3, r3, #8
 2743 0e7e 9AB2     		uxth	r2, r3
 2744 0e80 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2745 0e82 1343     		orrs	r3, r3, r2
 2746 0e84 FB81     		strh	r3, [r7, #14]	@ movhi
1513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2747              		.loc 1 1515 0
 2748 0e86 7B68     		ldr	r3, [r7, #4]
 2749 0e88 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2750 0e8a 1A83     		strh	r2, [r3, #24]	@ movhi
1516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2751              		.loc 1 1516 0
 2752 0e8c 07F11407 		add	r7, r7, #20
 2753 0e90 BD46     		mov	sp, r7
 2754 0e92 80BC     		pop	{r7}
 2755 0e94 7047     		bx	lr
 2756              		.cfi_endproc
 2757              	.LFE148:
 2759 0e96 00BF     		.align	2
 2760              		.global	TIM_ClearOC3Ref
 2761              		.thumb
 2762              		.thumb_func
 2764              	TIM_ClearOC3Ref:
 2765              	.LFB149:
1517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2766              		.loc 1 1528 0
 2767              		.cfi_startproc
 2768              		@ args = 0, pretend = 0, frame = 16
 2769              		@ frame_needed = 1, uses_anonymous_args = 0
 2770              		@ link register save eliminated.
 2771 0e98 80B4     		push	{r7}
 2772              	.LCFI117:
 2773              		.cfi_def_cfa_offset 4
 2774              		.cfi_offset 7, -4
 2775 0e9a 85B0     		sub	sp, sp, #20
 2776              	.LCFI118:
 2777              		.cfi_def_cfa_offset 24
 2778 0e9c 00AF     		add	r7, sp, #0
 2779              	.LCFI119:
 2780              		.cfi_def_cfa_register 7
 2781 0e9e 7860     		str	r0, [r7, #4]
 2782 0ea0 0B46     		mov	r3, r1
 2783 0ea2 7B80     		strh	r3, [r7, #2]	@ movhi
1529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2784              		.loc 1 1529 0
 2785 0ea4 4FF00003 		mov	r3, #0
 2786 0ea8 FB81     		strh	r3, [r7, #14]	@ movhi
1530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2787              		.loc 1 1535 0
 2788 0eaa 7B68     		ldr	r3, [r7, #4]
 2789 0eac 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2790 0eae FB81     		strh	r3, [r7, #14]	@ movhi
1536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2791              		.loc 1 1538 0
 2792 0eb0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2793 0eb2 23F08003 		bic	r3, r3, #128
 2794 0eb6 FB81     		strh	r3, [r7, #14]	@ movhi
1539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2795              		.loc 1 1541 0
 2796 0eb8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2797 0eba 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2798 0ebc 1343     		orrs	r3, r3, r2
 2799 0ebe FB81     		strh	r3, [r7, #14]	@ movhi
1542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2800              		.loc 1 1544 0
 2801 0ec0 7B68     		ldr	r3, [r7, #4]
 2802 0ec2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2803 0ec4 9A83     		strh	r2, [r3, #28]	@ movhi
1545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2804              		.loc 1 1545 0
 2805 0ec6 07F11407 		add	r7, r7, #20
 2806 0eca BD46     		mov	sp, r7
 2807 0ecc 80BC     		pop	{r7}
 2808 0ece 7047     		bx	lr
 2809              		.cfi_endproc
 2810              	.LFE149:
 2812              		.align	2
 2813              		.global	TIM_ClearOC4Ref
 2814              		.thumb
 2815              		.thumb_func
 2817              	TIM_ClearOC4Ref:
 2818              	.LFB150:
1546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2819              		.loc 1 1557 0
 2820              		.cfi_startproc
 2821              		@ args = 0, pretend = 0, frame = 16
 2822              		@ frame_needed = 1, uses_anonymous_args = 0
 2823              		@ link register save eliminated.
 2824 0ed0 80B4     		push	{r7}
 2825              	.LCFI120:
 2826              		.cfi_def_cfa_offset 4
 2827              		.cfi_offset 7, -4
 2828 0ed2 85B0     		sub	sp, sp, #20
 2829              	.LCFI121:
 2830              		.cfi_def_cfa_offset 24
 2831 0ed4 00AF     		add	r7, sp, #0
 2832              	.LCFI122:
 2833              		.cfi_def_cfa_register 7
 2834 0ed6 7860     		str	r0, [r7, #4]
 2835 0ed8 0B46     		mov	r3, r1
 2836 0eda 7B80     		strh	r3, [r7, #2]	@ movhi
1558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2837              		.loc 1 1558 0
 2838 0edc 4FF00003 		mov	r3, #0
 2839 0ee0 FB81     		strh	r3, [r7, #14]	@ movhi
1559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2840              		.loc 1 1564 0
 2841 0ee2 7B68     		ldr	r3, [r7, #4]
 2842 0ee4 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2843 0ee6 FB81     		strh	r3, [r7, #14]	@ movhi
1565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2844              		.loc 1 1567 0
 2845 0ee8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2846 0eea 4FEA4343 		lsl	r3, r3, #17
 2847 0eee 4FEA5343 		lsr	r3, r3, #17
 2848 0ef2 FB81     		strh	r3, [r7, #14]	@ movhi
1568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2849              		.loc 1 1570 0
 2850 0ef4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2851 0ef6 4FEA0323 		lsl	r3, r3, #8
 2852 0efa 9AB2     		uxth	r2, r3
 2853 0efc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2854 0efe 1343     		orrs	r3, r3, r2
 2855 0f00 FB81     		strh	r3, [r7, #14]	@ movhi
1571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2856              		.loc 1 1573 0
 2857 0f02 7B68     		ldr	r3, [r7, #4]
 2858 0f04 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2859 0f06 9A83     		strh	r2, [r3, #28]	@ movhi
1574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2860              		.loc 1 1574 0
 2861 0f08 07F11407 		add	r7, r7, #20
 2862 0f0c BD46     		mov	sp, r7
 2863 0f0e 80BC     		pop	{r7}
 2864 0f10 7047     		bx	lr
 2865              		.cfi_endproc
 2866              	.LFE150:
 2868 0f12 00BF     		.align	2
 2869              		.global	TIM_OC1PolarityConfig
 2870              		.thumb
 2871              		.thumb_func
 2873              	TIM_OC1PolarityConfig:
 2874              	.LFB151:
1575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2875              		.loc 1 1586 0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 16
 2878              		@ frame_needed = 1, uses_anonymous_args = 0
 2879              		@ link register save eliminated.
 2880 0f14 80B4     		push	{r7}
 2881              	.LCFI123:
 2882              		.cfi_def_cfa_offset 4
 2883              		.cfi_offset 7, -4
 2884 0f16 85B0     		sub	sp, sp, #20
 2885              	.LCFI124:
 2886              		.cfi_def_cfa_offset 24
 2887 0f18 00AF     		add	r7, sp, #0
 2888              	.LCFI125:
 2889              		.cfi_def_cfa_register 7
 2890 0f1a 7860     		str	r0, [r7, #4]
 2891 0f1c 0B46     		mov	r3, r1
 2892 0f1e 7B80     		strh	r3, [r7, #2]	@ movhi
1587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2893              		.loc 1 1587 0
 2894 0f20 4FF00003 		mov	r3, #0
 2895 0f24 FB81     		strh	r3, [r7, #14]	@ movhi
1588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2896              		.loc 1 1593 0
 2897 0f26 7B68     		ldr	r3, [r7, #4]
 2898 0f28 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2899 0f2a FB81     		strh	r3, [r7, #14]	@ movhi
1594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2900              		.loc 1 1596 0
 2901 0f2c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2902 0f2e 23F00203 		bic	r3, r3, #2
 2903 0f32 FB81     		strh	r3, [r7, #14]	@ movhi
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2904              		.loc 1 1597 0
 2905 0f34 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2906 0f36 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2907 0f38 1343     		orrs	r3, r3, r2
 2908 0f3a FB81     		strh	r3, [r7, #14]	@ movhi
1598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2909              		.loc 1 1600 0
 2910 0f3c 7B68     		ldr	r3, [r7, #4]
 2911 0f3e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2912 0f40 1A84     		strh	r2, [r3, #32]	@ movhi
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2913              		.loc 1 1601 0
 2914 0f42 07F11407 		add	r7, r7, #20
 2915 0f46 BD46     		mov	sp, r7
 2916 0f48 80BC     		pop	{r7}
 2917 0f4a 7047     		bx	lr
 2918              		.cfi_endproc
 2919              	.LFE151:
 2921              		.align	2
 2922              		.global	TIM_OC1NPolarityConfig
 2923              		.thumb
 2924              		.thumb_func
 2926              	TIM_OC1NPolarityConfig:
 2927              	.LFB152:
1602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2928              		.loc 1 1613 0
 2929              		.cfi_startproc
 2930              		@ args = 0, pretend = 0, frame = 16
 2931              		@ frame_needed = 1, uses_anonymous_args = 0
 2932              		@ link register save eliminated.
 2933 0f4c 80B4     		push	{r7}
 2934              	.LCFI126:
 2935              		.cfi_def_cfa_offset 4
 2936              		.cfi_offset 7, -4
 2937 0f4e 85B0     		sub	sp, sp, #20
 2938              	.LCFI127:
 2939              		.cfi_def_cfa_offset 24
 2940 0f50 00AF     		add	r7, sp, #0
 2941              	.LCFI128:
 2942              		.cfi_def_cfa_register 7
 2943 0f52 7860     		str	r0, [r7, #4]
 2944 0f54 0B46     		mov	r3, r1
 2945 0f56 7B80     		strh	r3, [r7, #2]	@ movhi
1614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2946              		.loc 1 1614 0
 2947 0f58 4FF00003 		mov	r3, #0
 2948 0f5c FB81     		strh	r3, [r7, #14]	@ movhi
1615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2949              		.loc 1 1619 0
 2950 0f5e 7B68     		ldr	r3, [r7, #4]
 2951 0f60 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2952 0f62 FB81     		strh	r3, [r7, #14]	@ movhi
1620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 2953              		.loc 1 1622 0
 2954 0f64 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2955 0f66 23F00803 		bic	r3, r3, #8
 2956 0f6a FB81     		strh	r3, [r7, #14]	@ movhi
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2957              		.loc 1 1623 0
 2958 0f6c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2959 0f6e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2960 0f70 1343     		orrs	r3, r3, r2
 2961 0f72 FB81     		strh	r3, [r7, #14]	@ movhi
1624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2962              		.loc 1 1626 0
 2963 0f74 7B68     		ldr	r3, [r7, #4]
 2964 0f76 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2965 0f78 1A84     		strh	r2, [r3, #32]	@ movhi
1627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2966              		.loc 1 1627 0
 2967 0f7a 07F11407 		add	r7, r7, #20
 2968 0f7e BD46     		mov	sp, r7
 2969 0f80 80BC     		pop	{r7}
 2970 0f82 7047     		bx	lr
 2971              		.cfi_endproc
 2972              	.LFE152:
 2974              		.align	2
 2975              		.global	TIM_OC2PolarityConfig
 2976              		.thumb
 2977              		.thumb_func
 2979              	TIM_OC2PolarityConfig:
 2980              	.LFB153:
1628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2981              		.loc 1 1640 0
 2982              		.cfi_startproc
 2983              		@ args = 0, pretend = 0, frame = 16
 2984              		@ frame_needed = 1, uses_anonymous_args = 0
 2985              		@ link register save eliminated.
 2986 0f84 80B4     		push	{r7}
 2987              	.LCFI129:
 2988              		.cfi_def_cfa_offset 4
 2989              		.cfi_offset 7, -4
 2990 0f86 85B0     		sub	sp, sp, #20
 2991              	.LCFI130:
 2992              		.cfi_def_cfa_offset 24
 2993 0f88 00AF     		add	r7, sp, #0
 2994              	.LCFI131:
 2995              		.cfi_def_cfa_register 7
 2996 0f8a 7860     		str	r0, [r7, #4]
 2997 0f8c 0B46     		mov	r3, r1
 2998 0f8e 7B80     		strh	r3, [r7, #2]	@ movhi
1641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2999              		.loc 1 1641 0
 3000 0f90 4FF00003 		mov	r3, #0
 3001 0f94 FB81     		strh	r3, [r7, #14]	@ movhi
1642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3002              		.loc 1 1647 0
 3003 0f96 7B68     		ldr	r3, [r7, #4]
 3004 0f98 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3005 0f9a FB81     		strh	r3, [r7, #14]	@ movhi
1648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 3006              		.loc 1 1650 0
 3007 0f9c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3008 0f9e 23F02003 		bic	r3, r3, #32
 3009 0fa2 FB81     		strh	r3, [r7, #14]	@ movhi
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3010              		.loc 1 1651 0
 3011 0fa4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3012 0fa6 4FEA0313 		lsl	r3, r3, #4
 3013 0faa 9AB2     		uxth	r2, r3
 3014 0fac FB89     		ldrh	r3, [r7, #14]	@ movhi
 3015 0fae 1343     		orrs	r3, r3, r2
 3016 0fb0 FB81     		strh	r3, [r7, #14]	@ movhi
1652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3017              		.loc 1 1654 0
 3018 0fb2 7B68     		ldr	r3, [r7, #4]
 3019 0fb4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3020 0fb6 1A84     		strh	r2, [r3, #32]	@ movhi
1655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3021              		.loc 1 1655 0
 3022 0fb8 07F11407 		add	r7, r7, #20
 3023 0fbc BD46     		mov	sp, r7
 3024 0fbe 80BC     		pop	{r7}
 3025 0fc0 7047     		bx	lr
 3026              		.cfi_endproc
 3027              	.LFE153:
 3029 0fc2 00BF     		.align	2
 3030              		.global	TIM_OC2NPolarityConfig
 3031              		.thumb
 3032              		.thumb_func
 3034              	TIM_OC2NPolarityConfig:
 3035              	.LFB154:
1656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3036              		.loc 1 1667 0
 3037              		.cfi_startproc
 3038              		@ args = 0, pretend = 0, frame = 16
 3039              		@ frame_needed = 1, uses_anonymous_args = 0
 3040              		@ link register save eliminated.
 3041 0fc4 80B4     		push	{r7}
 3042              	.LCFI132:
 3043              		.cfi_def_cfa_offset 4
 3044              		.cfi_offset 7, -4
 3045 0fc6 85B0     		sub	sp, sp, #20
 3046              	.LCFI133:
 3047              		.cfi_def_cfa_offset 24
 3048 0fc8 00AF     		add	r7, sp, #0
 3049              	.LCFI134:
 3050              		.cfi_def_cfa_register 7
 3051 0fca 7860     		str	r0, [r7, #4]
 3052 0fcc 0B46     		mov	r3, r1
 3053 0fce 7B80     		strh	r3, [r7, #2]	@ movhi
1668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3054              		.loc 1 1668 0
 3055 0fd0 4FF00003 		mov	r3, #0
 3056 0fd4 FB81     		strh	r3, [r7, #14]	@ movhi
1669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3057              		.loc 1 1674 0
 3058 0fd6 7B68     		ldr	r3, [r7, #4]
 3059 0fd8 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3060 0fda FB81     		strh	r3, [r7, #14]	@ movhi
1675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 3061              		.loc 1 1677 0
 3062 0fdc FB89     		ldrh	r3, [r7, #14]	@ movhi
 3063 0fde 23F08003 		bic	r3, r3, #128
 3064 0fe2 FB81     		strh	r3, [r7, #14]	@ movhi
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3065              		.loc 1 1678 0
 3066 0fe4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3067 0fe6 4FEA0313 		lsl	r3, r3, #4
 3068 0fea 9AB2     		uxth	r2, r3
 3069 0fec FB89     		ldrh	r3, [r7, #14]	@ movhi
 3070 0fee 1343     		orrs	r3, r3, r2
 3071 0ff0 FB81     		strh	r3, [r7, #14]	@ movhi
1679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3072              		.loc 1 1681 0
 3073 0ff2 7B68     		ldr	r3, [r7, #4]
 3074 0ff4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3075 0ff6 1A84     		strh	r2, [r3, #32]	@ movhi
1682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3076              		.loc 1 1682 0
 3077 0ff8 07F11407 		add	r7, r7, #20
 3078 0ffc BD46     		mov	sp, r7
 3079 0ffe 80BC     		pop	{r7}
 3080 1000 7047     		bx	lr
 3081              		.cfi_endproc
 3082              	.LFE154:
 3084 1002 00BF     		.align	2
 3085              		.global	TIM_OC3PolarityConfig
 3086              		.thumb
 3087              		.thumb_func
 3089              	TIM_OC3PolarityConfig:
 3090              	.LFB155:
1683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3091              		.loc 1 1694 0
 3092              		.cfi_startproc
 3093              		@ args = 0, pretend = 0, frame = 16
 3094              		@ frame_needed = 1, uses_anonymous_args = 0
 3095              		@ link register save eliminated.
 3096 1004 80B4     		push	{r7}
 3097              	.LCFI135:
 3098              		.cfi_def_cfa_offset 4
 3099              		.cfi_offset 7, -4
 3100 1006 85B0     		sub	sp, sp, #20
 3101              	.LCFI136:
 3102              		.cfi_def_cfa_offset 24
 3103 1008 00AF     		add	r7, sp, #0
 3104              	.LCFI137:
 3105              		.cfi_def_cfa_register 7
 3106 100a 7860     		str	r0, [r7, #4]
 3107 100c 0B46     		mov	r3, r1
 3108 100e 7B80     		strh	r3, [r7, #2]	@ movhi
1695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3109              		.loc 1 1695 0
 3110 1010 4FF00003 		mov	r3, #0
 3111 1014 FB81     		strh	r3, [r7, #14]	@ movhi
1696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3112              		.loc 1 1701 0
 3113 1016 7B68     		ldr	r3, [r7, #4]
 3114 1018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3115 101a FB81     		strh	r3, [r7, #14]	@ movhi
1702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 3116              		.loc 1 1704 0
 3117 101c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3118 101e 23F40073 		bic	r3, r3, #512
 3119 1022 FB81     		strh	r3, [r7, #14]	@ movhi
1705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3120              		.loc 1 1705 0
 3121 1024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3122 1026 4FEA0323 		lsl	r3, r3, #8
 3123 102a 9AB2     		uxth	r2, r3
 3124 102c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3125 102e 1343     		orrs	r3, r3, r2
 3126 1030 FB81     		strh	r3, [r7, #14]	@ movhi
1706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3127              		.loc 1 1708 0
 3128 1032 7B68     		ldr	r3, [r7, #4]
 3129 1034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3130 1036 1A84     		strh	r2, [r3, #32]	@ movhi
1709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3131              		.loc 1 1709 0
 3132 1038 07F11407 		add	r7, r7, #20
 3133 103c BD46     		mov	sp, r7
 3134 103e 80BC     		pop	{r7}
 3135 1040 7047     		bx	lr
 3136              		.cfi_endproc
 3137              	.LFE155:
 3139 1042 00BF     		.align	2
 3140              		.global	TIM_OC3NPolarityConfig
 3141              		.thumb
 3142              		.thumb_func
 3144              	TIM_OC3NPolarityConfig:
 3145              	.LFB156:
1710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3146              		.loc 1 1721 0
 3147              		.cfi_startproc
 3148              		@ args = 0, pretend = 0, frame = 16
 3149              		@ frame_needed = 1, uses_anonymous_args = 0
 3150              		@ link register save eliminated.
 3151 1044 80B4     		push	{r7}
 3152              	.LCFI138:
 3153              		.cfi_def_cfa_offset 4
 3154              		.cfi_offset 7, -4
 3155 1046 85B0     		sub	sp, sp, #20
 3156              	.LCFI139:
 3157              		.cfi_def_cfa_offset 24
 3158 1048 00AF     		add	r7, sp, #0
 3159              	.LCFI140:
 3160              		.cfi_def_cfa_register 7
 3161 104a 7860     		str	r0, [r7, #4]
 3162 104c 0B46     		mov	r3, r1
 3163 104e 7B80     		strh	r3, [r7, #2]	@ movhi
1722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3164              		.loc 1 1722 0
 3165 1050 4FF00003 		mov	r3, #0
 3166 1054 FB81     		strh	r3, [r7, #14]	@ movhi
1723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3167              		.loc 1 1728 0
 3168 1056 7B68     		ldr	r3, [r7, #4]
 3169 1058 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3170 105a FB81     		strh	r3, [r7, #14]	@ movhi
1729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 3171              		.loc 1 1731 0
 3172 105c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3173 105e 23F40063 		bic	r3, r3, #2048
 3174 1062 FB81     		strh	r3, [r7, #14]	@ movhi
1732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3175              		.loc 1 1732 0
 3176 1064 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3177 1066 4FEA0323 		lsl	r3, r3, #8
 3178 106a 9AB2     		uxth	r2, r3
 3179 106c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3180 106e 1343     		orrs	r3, r3, r2
 3181 1070 FB81     		strh	r3, [r7, #14]	@ movhi
1733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3182              		.loc 1 1735 0
 3183 1072 7B68     		ldr	r3, [r7, #4]
 3184 1074 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3185 1076 1A84     		strh	r2, [r3, #32]	@ movhi
1736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3186              		.loc 1 1736 0
 3187 1078 07F11407 		add	r7, r7, #20
 3188 107c BD46     		mov	sp, r7
 3189 107e 80BC     		pop	{r7}
 3190 1080 7047     		bx	lr
 3191              		.cfi_endproc
 3192              	.LFE156:
 3194 1082 00BF     		.align	2
 3195              		.global	TIM_OC4PolarityConfig
 3196              		.thumb
 3197              		.thumb_func
 3199              	TIM_OC4PolarityConfig:
 3200              	.LFB157:
1737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3201              		.loc 1 1748 0
 3202              		.cfi_startproc
 3203              		@ args = 0, pretend = 0, frame = 16
 3204              		@ frame_needed = 1, uses_anonymous_args = 0
 3205              		@ link register save eliminated.
 3206 1084 80B4     		push	{r7}
 3207              	.LCFI141:
 3208              		.cfi_def_cfa_offset 4
 3209              		.cfi_offset 7, -4
 3210 1086 85B0     		sub	sp, sp, #20
 3211              	.LCFI142:
 3212              		.cfi_def_cfa_offset 24
 3213 1088 00AF     		add	r7, sp, #0
 3214              	.LCFI143:
 3215              		.cfi_def_cfa_register 7
 3216 108a 7860     		str	r0, [r7, #4]
 3217 108c 0B46     		mov	r3, r1
 3218 108e 7B80     		strh	r3, [r7, #2]	@ movhi
1749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3219              		.loc 1 1749 0
 3220 1090 4FF00003 		mov	r3, #0
 3221 1094 FB81     		strh	r3, [r7, #14]	@ movhi
1750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3222              		.loc 1 1755 0
 3223 1096 7B68     		ldr	r3, [r7, #4]
 3224 1098 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3225 109a FB81     		strh	r3, [r7, #14]	@ movhi
1756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 3226              		.loc 1 1758 0
 3227 109c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3228 109e 23F40053 		bic	r3, r3, #8192
 3229 10a2 FB81     		strh	r3, [r7, #14]	@ movhi
1759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3230              		.loc 1 1759 0
 3231 10a4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3232 10a6 4FEA0333 		lsl	r3, r3, #12
 3233 10aa 9AB2     		uxth	r2, r3
 3234 10ac FB89     		ldrh	r3, [r7, #14]	@ movhi
 3235 10ae 1343     		orrs	r3, r3, r2
 3236 10b0 FB81     		strh	r3, [r7, #14]	@ movhi
1760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3237              		.loc 1 1762 0
 3238 10b2 7B68     		ldr	r3, [r7, #4]
 3239 10b4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3240 10b6 1A84     		strh	r2, [r3, #32]	@ movhi
1763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3241              		.loc 1 1763 0
 3242 10b8 07F11407 		add	r7, r7, #20
 3243 10bc BD46     		mov	sp, r7
 3244 10be 80BC     		pop	{r7}
 3245 10c0 7047     		bx	lr
 3246              		.cfi_endproc
 3247              	.LFE157:
 3249 10c2 00BF     		.align	2
 3250              		.global	TIM_CCxCmd
 3251              		.thumb
 3252              		.thumb_func
 3254              	TIM_CCxCmd:
 3255              	.LFB158:
1764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3256              		.loc 1 1779 0
 3257              		.cfi_startproc
 3258              		@ args = 0, pretend = 0, frame = 16
 3259              		@ frame_needed = 1, uses_anonymous_args = 0
 3260              		@ link register save eliminated.
 3261 10c4 80B4     		push	{r7}
 3262              	.LCFI144:
 3263              		.cfi_def_cfa_offset 4
 3264              		.cfi_offset 7, -4
 3265 10c6 85B0     		sub	sp, sp, #20
 3266              	.LCFI145:
 3267              		.cfi_def_cfa_offset 24
 3268 10c8 00AF     		add	r7, sp, #0
 3269              	.LCFI146:
 3270              		.cfi_def_cfa_register 7
 3271 10ca 7860     		str	r0, [r7, #4]
 3272 10cc 1346     		mov	r3, r2
 3273 10ce 0A46     		mov	r2, r1	@ movhi
 3274 10d0 7A80     		strh	r2, [r7, #2]	@ movhi
 3275 10d2 3B80     		strh	r3, [r7, #0]	@ movhi
1780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3276              		.loc 1 1780 0
 3277 10d4 4FF00003 		mov	r3, #0
 3278 10d8 FB81     		strh	r3, [r7, #14]	@ movhi
1781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 3279              		.loc 1 1787 0
 3280 10da 7B88     		ldrh	r3, [r7, #2]
 3281 10dc 4FF00102 		mov	r2, #1
 3282 10e0 02FA03F3 		lsl	r3, r2, r3
 3283 10e4 FB81     		strh	r3, [r7, #14]	@ movhi
1788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 3284              		.loc 1 1790 0
 3285 10e6 7B68     		ldr	r3, [r7, #4]
 3286 10e8 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3287 10ea 9AB2     		uxth	r2, r3
 3288 10ec FB89     		ldrh	r3, [r7, #14]	@ movhi
 3289 10ee 6FEA0303 		mvn	r3, r3
 3290 10f2 9BB2     		uxth	r3, r3
 3291 10f4 1340     		ands	r3, r3, r2
 3292 10f6 9AB2     		uxth	r2, r3
 3293 10f8 7B68     		ldr	r3, [r7, #4]
 3294 10fa 1A84     		strh	r2, [r3, #32]	@ movhi
1791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 3295              		.loc 1 1793 0
 3296 10fc 7B68     		ldr	r3, [r7, #4]
 3297 10fe 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3298 1100 9AB2     		uxth	r2, r3
 3299 1102 3988     		ldrh	r1, [r7, #0]
 3300 1104 7B88     		ldrh	r3, [r7, #2]
 3301 1106 01FA03F3 		lsl	r3, r1, r3
 3302 110a 9BB2     		uxth	r3, r3
 3303 110c 1343     		orrs	r3, r3, r2
 3304 110e 9AB2     		uxth	r2, r3
 3305 1110 7B68     		ldr	r3, [r7, #4]
 3306 1112 1A84     		strh	r2, [r3, #32]	@ movhi
1794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3307              		.loc 1 1794 0
 3308 1114 07F11407 		add	r7, r7, #20
 3309 1118 BD46     		mov	sp, r7
 3310 111a 80BC     		pop	{r7}
 3311 111c 7047     		bx	lr
 3312              		.cfi_endproc
 3313              	.LFE158:
 3315 111e 00BF     		.align	2
 3316              		.global	TIM_CCxNCmd
 3317              		.thumb
 3318              		.thumb_func
 3320              	TIM_CCxNCmd:
 3321              	.LFB159:
1795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3322              		.loc 1 1809 0
 3323              		.cfi_startproc
 3324              		@ args = 0, pretend = 0, frame = 16
 3325              		@ frame_needed = 1, uses_anonymous_args = 0
 3326              		@ link register save eliminated.
 3327 1120 80B4     		push	{r7}
 3328              	.LCFI147:
 3329              		.cfi_def_cfa_offset 4
 3330              		.cfi_offset 7, -4
 3331 1122 85B0     		sub	sp, sp, #20
 3332              	.LCFI148:
 3333              		.cfi_def_cfa_offset 24
 3334 1124 00AF     		add	r7, sp, #0
 3335              	.LCFI149:
 3336              		.cfi_def_cfa_register 7
 3337 1126 7860     		str	r0, [r7, #4]
 3338 1128 1346     		mov	r3, r2
 3339 112a 0A46     		mov	r2, r1	@ movhi
 3340 112c 7A80     		strh	r2, [r7, #2]	@ movhi
 3341 112e 3B80     		strh	r3, [r7, #0]	@ movhi
1810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3342              		.loc 1 1810 0
 3343 1130 4FF00003 		mov	r3, #0
 3344 1134 FB81     		strh	r3, [r7, #14]	@ movhi
1811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 3345              		.loc 1 1817 0
 3346 1136 7B88     		ldrh	r3, [r7, #2]
 3347 1138 4FF00402 		mov	r2, #4
 3348 113c 02FA03F3 		lsl	r3, r2, r3
 3349 1140 FB81     		strh	r3, [r7, #14]	@ movhi
1818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 3350              		.loc 1 1820 0
 3351 1142 7B68     		ldr	r3, [r7, #4]
 3352 1144 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3353 1146 9AB2     		uxth	r2, r3
 3354 1148 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3355 114a 6FEA0303 		mvn	r3, r3
 3356 114e 9BB2     		uxth	r3, r3
 3357 1150 1340     		ands	r3, r3, r2
 3358 1152 9AB2     		uxth	r2, r3
 3359 1154 7B68     		ldr	r3, [r7, #4]
 3360 1156 1A84     		strh	r2, [r3, #32]	@ movhi
1821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 3361              		.loc 1 1823 0
 3362 1158 7B68     		ldr	r3, [r7, #4]
 3363 115a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3364 115c 9AB2     		uxth	r2, r3
 3365 115e 3988     		ldrh	r1, [r7, #0]
 3366 1160 7B88     		ldrh	r3, [r7, #2]
 3367 1162 01FA03F3 		lsl	r3, r1, r3
 3368 1166 9BB2     		uxth	r3, r3
 3369 1168 1343     		orrs	r3, r3, r2
 3370 116a 9AB2     		uxth	r2, r3
 3371 116c 7B68     		ldr	r3, [r7, #4]
 3372 116e 1A84     		strh	r2, [r3, #32]	@ movhi
1824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3373              		.loc 1 1824 0
 3374 1170 07F11407 		add	r7, r7, #20
 3375 1174 BD46     		mov	sp, r7
 3376 1176 80BC     		pop	{r7}
 3377 1178 7047     		bx	lr
 3378              		.cfi_endproc
 3379              	.LFE159:
 3381 117a 00BF     		.align	2
 3382              		.global	TIM_ICInit
 3383              		.thumb
 3384              		.thumb_func
 3386              	TIM_ICInit:
 3387              	.LFB160:
1825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3388              		.loc 1 1891 0
 3389              		.cfi_startproc
 3390              		@ args = 0, pretend = 0, frame = 8
 3391              		@ frame_needed = 1, uses_anonymous_args = 0
 3392 117c 80B5     		push	{r7, lr}
 3393              	.LCFI150:
 3394              		.cfi_def_cfa_offset 8
 3395              		.cfi_offset 14, -4
 3396              		.cfi_offset 7, -8
 3397 117e 82B0     		sub	sp, sp, #8
 3398              	.LCFI151:
 3399              		.cfi_def_cfa_offset 16
 3400 1180 00AF     		add	r7, sp, #0
 3401              	.LCFI152:
 3402              		.cfi_def_cfa_register 7
 3403 1182 7860     		str	r0, [r7, #4]
 3404 1184 3960     		str	r1, [r7, #0]
1892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3405              		.loc 1 1899 0
 3406 1186 3B68     		ldr	r3, [r7, #0]
 3407 1188 1B88     		ldrh	r3, [r3, #0]
 3408 118a 002B     		cmp	r3, #0
 3409 118c 0FD1     		bne	.L90
1900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3410              		.loc 1 1902 0
 3411 118e 3B68     		ldr	r3, [r7, #0]
 3412 1190 5988     		ldrh	r1, [r3, #2]
1903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3413              		.loc 1 1903 0
 3414 1192 3B68     		ldr	r3, [r7, #0]
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3415              		.loc 1 1902 0
 3416 1194 9A88     		ldrh	r2, [r3, #4]
1904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3417              		.loc 1 1904 0
 3418 1196 3B68     		ldr	r3, [r7, #0]
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3419              		.loc 1 1902 0
 3420 1198 1B89     		ldrh	r3, [r3, #8]
 3421 119a 7868     		ldr	r0, [r7, #4]
 3422 119c 00F0C4FC 		bl	TI1_Config
1905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3423              		.loc 1 1906 0
 3424 11a0 3B68     		ldr	r3, [r7, #0]
 3425 11a2 DB88     		ldrh	r3, [r3, #6]
 3426 11a4 7868     		ldr	r0, [r7, #4]
 3427 11a6 1946     		mov	r1, r3
 3428 11a8 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3429 11ac 36E0     		b	.L89
 3430              	.L90:
1907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 3431              		.loc 1 1908 0
 3432 11ae 3B68     		ldr	r3, [r7, #0]
 3433 11b0 1B88     		ldrh	r3, [r3, #0]
 3434 11b2 042B     		cmp	r3, #4
 3435 11b4 0FD1     		bne	.L92
1909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3436              		.loc 1 1912 0
 3437 11b6 3B68     		ldr	r3, [r7, #0]
 3438 11b8 5988     		ldrh	r1, [r3, #2]
1913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3439              		.loc 1 1913 0
 3440 11ba 3B68     		ldr	r3, [r7, #0]
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3441              		.loc 1 1912 0
 3442 11bc 9A88     		ldrh	r2, [r3, #4]
1914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3443              		.loc 1 1914 0
 3444 11be 3B68     		ldr	r3, [r7, #0]
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3445              		.loc 1 1912 0
 3446 11c0 1B89     		ldrh	r3, [r3, #8]
 3447 11c2 7868     		ldr	r0, [r7, #4]
 3448 11c4 00F0F0FC 		bl	TI2_Config
1915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3449              		.loc 1 1916 0
 3450 11c8 3B68     		ldr	r3, [r7, #0]
 3451 11ca DB88     		ldrh	r3, [r3, #6]
 3452 11cc 7868     		ldr	r0, [r7, #4]
 3453 11ce 1946     		mov	r1, r3
 3454 11d0 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3455 11d4 22E0     		b	.L89
 3456              	.L92:
1917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3457              		.loc 1 1918 0
 3458 11d6 3B68     		ldr	r3, [r7, #0]
 3459 11d8 1B88     		ldrh	r3, [r3, #0]
 3460 11da 082B     		cmp	r3, #8
 3461 11dc 0FD1     		bne	.L93
1919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3462              		.loc 1 1922 0
 3463 11de 3B68     		ldr	r3, [r7, #0]
 3464 11e0 5988     		ldrh	r1, [r3, #2]
1923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3465              		.loc 1 1923 0
 3466 11e2 3B68     		ldr	r3, [r7, #0]
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3467              		.loc 1 1922 0
 3468 11e4 9A88     		ldrh	r2, [r3, #4]
1924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3469              		.loc 1 1924 0
 3470 11e6 3B68     		ldr	r3, [r7, #0]
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3471              		.loc 1 1922 0
 3472 11e8 1B89     		ldrh	r3, [r3, #8]
 3473 11ea 7868     		ldr	r0, [r7, #4]
 3474 11ec 00F02AFD 		bl	TI3_Config
1925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3475              		.loc 1 1926 0
 3476 11f0 3B68     		ldr	r3, [r7, #0]
 3477 11f2 DB88     		ldrh	r3, [r3, #6]
 3478 11f4 7868     		ldr	r0, [r7, #4]
 3479 11f6 1946     		mov	r1, r3
 3480 11f8 FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3481 11fc 0EE0     		b	.L89
 3482              	.L93:
1927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3483              		.loc 1 1932 0
 3484 11fe 3B68     		ldr	r3, [r7, #0]
 3485 1200 5988     		ldrh	r1, [r3, #2]
1933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3486              		.loc 1 1933 0
 3487 1202 3B68     		ldr	r3, [r7, #0]
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3488              		.loc 1 1932 0
 3489 1204 9A88     		ldrh	r2, [r3, #4]
1934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3490              		.loc 1 1934 0
 3491 1206 3B68     		ldr	r3, [r7, #0]
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3492              		.loc 1 1932 0
 3493 1208 1B89     		ldrh	r3, [r3, #8]
 3494 120a 7868     		ldr	r0, [r7, #4]
 3495 120c 00F060FD 		bl	TI4_Config
1935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3496              		.loc 1 1936 0
 3497 1210 3B68     		ldr	r3, [r7, #0]
 3498 1212 DB88     		ldrh	r3, [r3, #6]
 3499 1214 7868     		ldr	r0, [r7, #4]
 3500 1216 1946     		mov	r1, r3
 3501 1218 FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3502              	.L89:
1937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3503              		.loc 1 1938 0
 3504 121c 07F10807 		add	r7, r7, #8
 3505 1220 BD46     		mov	sp, r7
 3506 1222 80BD     		pop	{r7, pc}
 3507              		.cfi_endproc
 3508              	.LFE160:
 3510              		.align	2
 3511              		.global	TIM_ICStructInit
 3512              		.thumb
 3513              		.thumb_func
 3515              	TIM_ICStructInit:
 3516              	.LFB161:
1939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3517              		.loc 1 1947 0
 3518              		.cfi_startproc
 3519              		@ args = 0, pretend = 0, frame = 8
 3520              		@ frame_needed = 1, uses_anonymous_args = 0
 3521              		@ link register save eliminated.
 3522 1224 80B4     		push	{r7}
 3523              	.LCFI153:
 3524              		.cfi_def_cfa_offset 4
 3525              		.cfi_offset 7, -4
 3526 1226 83B0     		sub	sp, sp, #12
 3527              	.LCFI154:
 3528              		.cfi_def_cfa_offset 16
 3529 1228 00AF     		add	r7, sp, #0
 3530              	.LCFI155:
 3531              		.cfi_def_cfa_register 7
 3532 122a 7860     		str	r0, [r7, #4]
1948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 3533              		.loc 1 1949 0
 3534 122c 7B68     		ldr	r3, [r7, #4]
 3535 122e 4FF00002 		mov	r2, #0
 3536 1232 1A80     		strh	r2, [r3, #0]	@ movhi
1950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 3537              		.loc 1 1950 0
 3538 1234 7B68     		ldr	r3, [r7, #4]
 3539 1236 4FF00002 		mov	r2, #0
 3540 123a 5A80     		strh	r2, [r3, #2]	@ movhi
1951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 3541              		.loc 1 1951 0
 3542 123c 7B68     		ldr	r3, [r7, #4]
 3543 123e 4FF00102 		mov	r2, #1
 3544 1242 9A80     		strh	r2, [r3, #4]	@ movhi
1952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 3545              		.loc 1 1952 0
 3546 1244 7B68     		ldr	r3, [r7, #4]
 3547 1246 4FF00002 		mov	r2, #0
 3548 124a DA80     		strh	r2, [r3, #6]	@ movhi
1953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 3549              		.loc 1 1953 0
 3550 124c 7B68     		ldr	r3, [r7, #4]
 3551 124e 4FF00002 		mov	r2, #0
 3552 1252 1A81     		strh	r2, [r3, #8]	@ movhi
1954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3553              		.loc 1 1954 0
 3554 1254 07F10C07 		add	r7, r7, #12
 3555 1258 BD46     		mov	sp, r7
 3556 125a 80BC     		pop	{r7}
 3557 125c 7047     		bx	lr
 3558              		.cfi_endproc
 3559              	.LFE161:
 3561 125e 00BF     		.align	2
 3562              		.global	TIM_PWMIConfig
 3563              		.thumb
 3564              		.thumb_func
 3566              	TIM_PWMIConfig:
 3567              	.LFB162:
1955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3568              		.loc 1 1966 0
 3569              		.cfi_startproc
 3570              		@ args = 0, pretend = 0, frame = 16
 3571              		@ frame_needed = 1, uses_anonymous_args = 0
 3572 1260 80B5     		push	{r7, lr}
 3573              	.LCFI156:
 3574              		.cfi_def_cfa_offset 8
 3575              		.cfi_offset 14, -4
 3576              		.cfi_offset 7, -8
 3577 1262 84B0     		sub	sp, sp, #16
 3578              	.LCFI157:
 3579              		.cfi_def_cfa_offset 24
 3580 1264 00AF     		add	r7, sp, #0
 3581              	.LCFI158:
 3582              		.cfi_def_cfa_register 7
 3583 1266 7860     		str	r0, [r7, #4]
 3584 1268 3960     		str	r1, [r7, #0]
1967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3585              		.loc 1 1967 0
 3586 126a 4FF00003 		mov	r3, #0
 3587 126e FB81     		strh	r3, [r7, #14]	@ movhi
1968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 3588              		.loc 1 1968 0
 3589 1270 4FF00103 		mov	r3, #1
 3590 1274 BB81     		strh	r3, [r7, #12]	@ movhi
1969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 3591              		.loc 1 1974 0
 3592 1276 3B68     		ldr	r3, [r7, #0]
 3593 1278 5B88     		ldrh	r3, [r3, #2]
 3594 127a 002B     		cmp	r3, #0
 3595 127c 03D1     		bne	.L96
1975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 3596              		.loc 1 1976 0
 3597 127e 4FF00203 		mov	r3, #2
 3598 1282 FB81     		strh	r3, [r7, #14]	@ movhi
 3599 1284 02E0     		b	.L97
 3600              	.L96:
1977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 3601              		.loc 1 1980 0
 3602 1286 4FF00003 		mov	r3, #0
 3603 128a FB81     		strh	r3, [r7, #14]	@ movhi
 3604              	.L97:
1981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 3605              		.loc 1 1983 0
 3606 128c 3B68     		ldr	r3, [r7, #0]
 3607 128e 9B88     		ldrh	r3, [r3, #4]
 3608 1290 012B     		cmp	r3, #1
 3609 1292 03D1     		bne	.L98
1984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 3610              		.loc 1 1985 0
 3611 1294 4FF00203 		mov	r3, #2
 3612 1298 BB81     		strh	r3, [r7, #12]	@ movhi
 3613 129a 02E0     		b	.L99
 3614              	.L98:
1986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 3615              		.loc 1 1989 0
 3616 129c 4FF00103 		mov	r3, #1
 3617 12a0 BB81     		strh	r3, [r7, #12]	@ movhi
 3618              	.L99:
1990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3619              		.loc 1 1991 0
 3620 12a2 3B68     		ldr	r3, [r7, #0]
 3621 12a4 1B88     		ldrh	r3, [r3, #0]
 3622 12a6 002B     		cmp	r3, #0
 3623 12a8 1CD1     		bne	.L100
1992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3624              		.loc 1 1994 0
 3625 12aa 3B68     		ldr	r3, [r7, #0]
 3626 12ac 5988     		ldrh	r1, [r3, #2]
 3627 12ae 3B68     		ldr	r3, [r7, #0]
 3628 12b0 9A88     		ldrh	r2, [r3, #4]
1995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3629              		.loc 1 1995 0
 3630 12b2 3B68     		ldr	r3, [r7, #0]
1994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3631              		.loc 1 1994 0
 3632 12b4 1B89     		ldrh	r3, [r3, #8]
 3633 12b6 7868     		ldr	r0, [r7, #4]
 3634 12b8 00F036FC 		bl	TI1_Config
1996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3635              		.loc 1 1997 0
 3636 12bc 3B68     		ldr	r3, [r7, #0]
 3637 12be DB88     		ldrh	r3, [r3, #6]
 3638 12c0 7868     		ldr	r0, [r7, #4]
 3639 12c2 1946     		mov	r1, r3
 3640 12c4 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3641              		.loc 1 1999 0
 3642 12c8 3B68     		ldr	r3, [r7, #0]
 3643 12ca 1B89     		ldrh	r3, [r3, #8]
 3644 12cc F989     		ldrh	r1, [r7, #14]
 3645 12ce BA89     		ldrh	r2, [r7, #12]
 3646 12d0 7868     		ldr	r0, [r7, #4]
 3647 12d2 00F069FC 		bl	TI2_Config
2000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3648              		.loc 1 2001 0
 3649 12d6 3B68     		ldr	r3, [r7, #0]
 3650 12d8 DB88     		ldrh	r3, [r3, #6]
 3651 12da 7868     		ldr	r0, [r7, #4]
 3652 12dc 1946     		mov	r1, r3
 3653 12de FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3654 12e2 1BE0     		b	.L95
 3655              	.L100:
2002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3656              		.loc 1 2006 0
 3657 12e4 3B68     		ldr	r3, [r7, #0]
 3658 12e6 5988     		ldrh	r1, [r3, #2]
 3659 12e8 3B68     		ldr	r3, [r7, #0]
 3660 12ea 9A88     		ldrh	r2, [r3, #4]
2007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3661              		.loc 1 2007 0
 3662 12ec 3B68     		ldr	r3, [r7, #0]
2006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3663              		.loc 1 2006 0
 3664 12ee 1B89     		ldrh	r3, [r3, #8]
 3665 12f0 7868     		ldr	r0, [r7, #4]
 3666 12f2 00F059FC 		bl	TI2_Config
2008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3667              		.loc 1 2009 0
 3668 12f6 3B68     		ldr	r3, [r7, #0]
 3669 12f8 DB88     		ldrh	r3, [r3, #6]
 3670 12fa 7868     		ldr	r0, [r7, #4]
 3671 12fc 1946     		mov	r1, r3
 3672 12fe FFF7FEFF 		bl	TIM_SetIC2Prescaler
2010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3673              		.loc 1 2011 0
 3674 1302 3B68     		ldr	r3, [r7, #0]
 3675 1304 1B89     		ldrh	r3, [r3, #8]
 3676 1306 F989     		ldrh	r1, [r7, #14]
 3677 1308 BA89     		ldrh	r2, [r7, #12]
 3678 130a 7868     		ldr	r0, [r7, #4]
 3679 130c 00F00CFC 		bl	TI1_Config
2012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3680              		.loc 1 2013 0
 3681 1310 3B68     		ldr	r3, [r7, #0]
 3682 1312 DB88     		ldrh	r3, [r3, #6]
 3683 1314 7868     		ldr	r0, [r7, #4]
 3684 1316 1946     		mov	r1, r3
 3685 1318 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3686              	.L95:
2014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3687              		.loc 1 2015 0
 3688 131c 07F11007 		add	r7, r7, #16
 3689 1320 BD46     		mov	sp, r7
 3690 1322 80BD     		pop	{r7, pc}
 3691              		.cfi_endproc
 3692              	.LFE162:
 3694              		.align	2
 3695              		.global	TIM_GetCapture1
 3696              		.thumb
 3697              		.thumb_func
 3699              	TIM_GetCapture1:
 3700              	.LFB163:
2016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3701              		.loc 1 2023 0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 8
 3704              		@ frame_needed = 1, uses_anonymous_args = 0
 3705              		@ link register save eliminated.
 3706 1324 80B4     		push	{r7}
 3707              	.LCFI159:
 3708              		.cfi_def_cfa_offset 4
 3709              		.cfi_offset 7, -4
 3710 1326 83B0     		sub	sp, sp, #12
 3711              	.LCFI160:
 3712              		.cfi_def_cfa_offset 16
 3713 1328 00AF     		add	r7, sp, #0
 3714              	.LCFI161:
 3715              		.cfi_def_cfa_register 7
 3716 132a 7860     		str	r0, [r7, #4]
2024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 3717              		.loc 1 2028 0
 3718 132c 7B68     		ldr	r3, [r7, #4]
 3719 132e 5B6B     		ldr	r3, [r3, #52]
2029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3720              		.loc 1 2029 0
 3721 1330 1846     		mov	r0, r3
 3722 1332 07F10C07 		add	r7, r7, #12
 3723 1336 BD46     		mov	sp, r7
 3724 1338 80BC     		pop	{r7}
 3725 133a 7047     		bx	lr
 3726              		.cfi_endproc
 3727              	.LFE163:
 3729              		.align	2
 3730              		.global	TIM_GetCapture2
 3731              		.thumb
 3732              		.thumb_func
 3734              	TIM_GetCapture2:
 3735              	.LFB164:
2030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3736              		.loc 1 2038 0
 3737              		.cfi_startproc
 3738              		@ args = 0, pretend = 0, frame = 8
 3739              		@ frame_needed = 1, uses_anonymous_args = 0
 3740              		@ link register save eliminated.
 3741 133c 80B4     		push	{r7}
 3742              	.LCFI162:
 3743              		.cfi_def_cfa_offset 4
 3744              		.cfi_offset 7, -4
 3745 133e 83B0     		sub	sp, sp, #12
 3746              	.LCFI163:
 3747              		.cfi_def_cfa_offset 16
 3748 1340 00AF     		add	r7, sp, #0
 3749              	.LCFI164:
 3750              		.cfi_def_cfa_register 7
 3751 1342 7860     		str	r0, [r7, #4]
2039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 3752              		.loc 1 2043 0
 3753 1344 7B68     		ldr	r3, [r7, #4]
 3754 1346 9B6B     		ldr	r3, [r3, #56]
2044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3755              		.loc 1 2044 0
 3756 1348 1846     		mov	r0, r3
 3757 134a 07F10C07 		add	r7, r7, #12
 3758 134e BD46     		mov	sp, r7
 3759 1350 80BC     		pop	{r7}
 3760 1352 7047     		bx	lr
 3761              		.cfi_endproc
 3762              	.LFE164:
 3764              		.align	2
 3765              		.global	TIM_GetCapture3
 3766              		.thumb
 3767              		.thumb_func
 3769              	TIM_GetCapture3:
 3770              	.LFB165:
2045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3771              		.loc 1 2052 0
 3772              		.cfi_startproc
 3773              		@ args = 0, pretend = 0, frame = 8
 3774              		@ frame_needed = 1, uses_anonymous_args = 0
 3775              		@ link register save eliminated.
 3776 1354 80B4     		push	{r7}
 3777              	.LCFI165:
 3778              		.cfi_def_cfa_offset 4
 3779              		.cfi_offset 7, -4
 3780 1356 83B0     		sub	sp, sp, #12
 3781              	.LCFI166:
 3782              		.cfi_def_cfa_offset 16
 3783 1358 00AF     		add	r7, sp, #0
 3784              	.LCFI167:
 3785              		.cfi_def_cfa_register 7
 3786 135a 7860     		str	r0, [r7, #4]
2053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 3787              		.loc 1 2057 0
 3788 135c 7B68     		ldr	r3, [r7, #4]
 3789 135e DB6B     		ldr	r3, [r3, #60]
2058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3790              		.loc 1 2058 0
 3791 1360 1846     		mov	r0, r3
 3792 1362 07F10C07 		add	r7, r7, #12
 3793 1366 BD46     		mov	sp, r7
 3794 1368 80BC     		pop	{r7}
 3795 136a 7047     		bx	lr
 3796              		.cfi_endproc
 3797              	.LFE165:
 3799              		.align	2
 3800              		.global	TIM_GetCapture4
 3801              		.thumb
 3802              		.thumb_func
 3804              	TIM_GetCapture4:
 3805              	.LFB166:
2059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3806              		.loc 1 2066 0
 3807              		.cfi_startproc
 3808              		@ args = 0, pretend = 0, frame = 8
 3809              		@ frame_needed = 1, uses_anonymous_args = 0
 3810              		@ link register save eliminated.
 3811 136c 80B4     		push	{r7}
 3812              	.LCFI168:
 3813              		.cfi_def_cfa_offset 4
 3814              		.cfi_offset 7, -4
 3815 136e 83B0     		sub	sp, sp, #12
 3816              	.LCFI169:
 3817              		.cfi_def_cfa_offset 16
 3818 1370 00AF     		add	r7, sp, #0
 3819              	.LCFI170:
 3820              		.cfi_def_cfa_register 7
 3821 1372 7860     		str	r0, [r7, #4]
2067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 3822              		.loc 1 2071 0
 3823 1374 7B68     		ldr	r3, [r7, #4]
 3824 1376 1B6C     		ldr	r3, [r3, #64]
2072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3825              		.loc 1 2072 0
 3826 1378 1846     		mov	r0, r3
 3827 137a 07F10C07 		add	r7, r7, #12
 3828 137e BD46     		mov	sp, r7
 3829 1380 80BC     		pop	{r7}
 3830 1382 7047     		bx	lr
 3831              		.cfi_endproc
 3832              	.LFE166:
 3834              		.align	2
 3835              		.global	TIM_SetIC1Prescaler
 3836              		.thumb
 3837              		.thumb_func
 3839              	TIM_SetIC1Prescaler:
 3840              	.LFB167:
2073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3841              		.loc 1 2086 0
 3842              		.cfi_startproc
 3843              		@ args = 0, pretend = 0, frame = 8
 3844              		@ frame_needed = 1, uses_anonymous_args = 0
 3845              		@ link register save eliminated.
 3846 1384 80B4     		push	{r7}
 3847              	.LCFI171:
 3848              		.cfi_def_cfa_offset 4
 3849              		.cfi_offset 7, -4
 3850 1386 83B0     		sub	sp, sp, #12
 3851              	.LCFI172:
 3852              		.cfi_def_cfa_offset 16
 3853 1388 00AF     		add	r7, sp, #0
 3854              	.LCFI173:
 3855              		.cfi_def_cfa_register 7
 3856 138a 7860     		str	r0, [r7, #4]
 3857 138c 0B46     		mov	r3, r1
 3858 138e 7B80     		strh	r3, [r7, #2]	@ movhi
2087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 3859              		.loc 1 2092 0
 3860 1390 7B68     		ldr	r3, [r7, #4]
 3861 1392 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3862 1394 9BB2     		uxth	r3, r3
 3863 1396 23F00C03 		bic	r3, r3, #12
 3864 139a 9AB2     		uxth	r2, r3
 3865 139c 7B68     		ldr	r3, [r7, #4]
 3866 139e 1A83     		strh	r2, [r3, #24]	@ movhi
2093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 3867              		.loc 1 2095 0
 3868 13a0 7B68     		ldr	r3, [r7, #4]
 3869 13a2 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3870 13a4 9AB2     		uxth	r2, r3
 3871 13a6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3872 13a8 1343     		orrs	r3, r3, r2
 3873 13aa 9AB2     		uxth	r2, r3
 3874 13ac 7B68     		ldr	r3, [r7, #4]
 3875 13ae 1A83     		strh	r2, [r3, #24]	@ movhi
2096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3876              		.loc 1 2096 0
 3877 13b0 07F10C07 		add	r7, r7, #12
 3878 13b4 BD46     		mov	sp, r7
 3879 13b6 80BC     		pop	{r7}
 3880 13b8 7047     		bx	lr
 3881              		.cfi_endproc
 3882              	.LFE167:
 3884 13ba 00BF     		.align	2
 3885              		.global	TIM_SetIC2Prescaler
 3886              		.thumb
 3887              		.thumb_func
 3889              	TIM_SetIC2Prescaler:
 3890              	.LFB168:
2097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3891              		.loc 1 2111 0
 3892              		.cfi_startproc
 3893              		@ args = 0, pretend = 0, frame = 8
 3894              		@ frame_needed = 1, uses_anonymous_args = 0
 3895              		@ link register save eliminated.
 3896 13bc 80B4     		push	{r7}
 3897              	.LCFI174:
 3898              		.cfi_def_cfa_offset 4
 3899              		.cfi_offset 7, -4
 3900 13be 83B0     		sub	sp, sp, #12
 3901              	.LCFI175:
 3902              		.cfi_def_cfa_offset 16
 3903 13c0 00AF     		add	r7, sp, #0
 3904              	.LCFI176:
 3905              		.cfi_def_cfa_register 7
 3906 13c2 7860     		str	r0, [r7, #4]
 3907 13c4 0B46     		mov	r3, r1
 3908 13c6 7B80     		strh	r3, [r7, #2]	@ movhi
2112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 3909              		.loc 1 2117 0
 3910 13c8 7B68     		ldr	r3, [r7, #4]
 3911 13ca 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3912 13cc 9BB2     		uxth	r3, r3
 3913 13ce 23F44063 		bic	r3, r3, #3072
 3914 13d2 9AB2     		uxth	r2, r3
 3915 13d4 7B68     		ldr	r3, [r7, #4]
 3916 13d6 1A83     		strh	r2, [r3, #24]	@ movhi
2118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 3917              		.loc 1 2120 0
 3918 13d8 7B68     		ldr	r3, [r7, #4]
 3919 13da 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3920 13dc 9AB2     		uxth	r2, r3
 3921 13de 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3922 13e0 4FEA0323 		lsl	r3, r3, #8
 3923 13e4 9BB2     		uxth	r3, r3
 3924 13e6 1343     		orrs	r3, r3, r2
 3925 13e8 9AB2     		uxth	r2, r3
 3926 13ea 7B68     		ldr	r3, [r7, #4]
 3927 13ec 1A83     		strh	r2, [r3, #24]	@ movhi
2121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3928              		.loc 1 2121 0
 3929 13ee 07F10C07 		add	r7, r7, #12
 3930 13f2 BD46     		mov	sp, r7
 3931 13f4 80BC     		pop	{r7}
 3932 13f6 7047     		bx	lr
 3933              		.cfi_endproc
 3934              	.LFE168:
 3936              		.align	2
 3937              		.global	TIM_SetIC3Prescaler
 3938              		.thumb
 3939              		.thumb_func
 3941              	TIM_SetIC3Prescaler:
 3942              	.LFB169:
2122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3943              		.loc 1 2135 0
 3944              		.cfi_startproc
 3945              		@ args = 0, pretend = 0, frame = 8
 3946              		@ frame_needed = 1, uses_anonymous_args = 0
 3947              		@ link register save eliminated.
 3948 13f8 80B4     		push	{r7}
 3949              	.LCFI177:
 3950              		.cfi_def_cfa_offset 4
 3951              		.cfi_offset 7, -4
 3952 13fa 83B0     		sub	sp, sp, #12
 3953              	.LCFI178:
 3954              		.cfi_def_cfa_offset 16
 3955 13fc 00AF     		add	r7, sp, #0
 3956              	.LCFI179:
 3957              		.cfi_def_cfa_register 7
 3958 13fe 7860     		str	r0, [r7, #4]
 3959 1400 0B46     		mov	r3, r1
 3960 1402 7B80     		strh	r3, [r7, #2]	@ movhi
2136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 3961              		.loc 1 2141 0
 3962 1404 7B68     		ldr	r3, [r7, #4]
 3963 1406 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 3964 1408 9BB2     		uxth	r3, r3
 3965 140a 23F00C03 		bic	r3, r3, #12
 3966 140e 9AB2     		uxth	r2, r3
 3967 1410 7B68     		ldr	r3, [r7, #4]
 3968 1412 9A83     		strh	r2, [r3, #28]	@ movhi
2142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 3969              		.loc 1 2144 0
 3970 1414 7B68     		ldr	r3, [r7, #4]
 3971 1416 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 3972 1418 9AB2     		uxth	r2, r3
 3973 141a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3974 141c 1343     		orrs	r3, r3, r2
 3975 141e 9AB2     		uxth	r2, r3
 3976 1420 7B68     		ldr	r3, [r7, #4]
 3977 1422 9A83     		strh	r2, [r3, #28]	@ movhi
2145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3978              		.loc 1 2145 0
 3979 1424 07F10C07 		add	r7, r7, #12
 3980 1428 BD46     		mov	sp, r7
 3981 142a 80BC     		pop	{r7}
 3982 142c 7047     		bx	lr
 3983              		.cfi_endproc
 3984              	.LFE169:
 3986 142e 00BF     		.align	2
 3987              		.global	TIM_SetIC4Prescaler
 3988              		.thumb
 3989              		.thumb_func
 3991              	TIM_SetIC4Prescaler:
 3992              	.LFB170:
2146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 3993              		.loc 1 2159 0
 3994              		.cfi_startproc
 3995              		@ args = 0, pretend = 0, frame = 8
 3996              		@ frame_needed = 1, uses_anonymous_args = 0
 3997              		@ link register save eliminated.
 3998 1430 80B4     		push	{r7}
 3999              	.LCFI180:
 4000              		.cfi_def_cfa_offset 4
 4001              		.cfi_offset 7, -4
 4002 1432 83B0     		sub	sp, sp, #12
 4003              	.LCFI181:
 4004              		.cfi_def_cfa_offset 16
 4005 1434 00AF     		add	r7, sp, #0
 4006              	.LCFI182:
 4007              		.cfi_def_cfa_register 7
 4008 1436 7860     		str	r0, [r7, #4]
 4009 1438 0B46     		mov	r3, r1
 4010 143a 7B80     		strh	r3, [r7, #2]	@ movhi
2160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 4011              		.loc 1 2165 0
 4012 143c 7B68     		ldr	r3, [r7, #4]
 4013 143e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4014 1440 9BB2     		uxth	r3, r3
 4015 1442 23F44063 		bic	r3, r3, #3072
 4016 1446 9AB2     		uxth	r2, r3
 4017 1448 7B68     		ldr	r3, [r7, #4]
 4018 144a 9A83     		strh	r2, [r3, #28]	@ movhi
2166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 4019              		.loc 1 2168 0
 4020 144c 7B68     		ldr	r3, [r7, #4]
 4021 144e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4022 1450 9AB2     		uxth	r2, r3
 4023 1452 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4024 1454 4FEA0323 		lsl	r3, r3, #8
 4025 1458 9BB2     		uxth	r3, r3
 4026 145a 1343     		orrs	r3, r3, r2
 4027 145c 9AB2     		uxth	r2, r3
 4028 145e 7B68     		ldr	r3, [r7, #4]
 4029 1460 9A83     		strh	r2, [r3, #28]	@ movhi
2169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4030              		.loc 1 2169 0
 4031 1462 07F10C07 		add	r7, r7, #12
 4032 1466 BD46     		mov	sp, r7
 4033 1468 80BC     		pop	{r7}
 4034 146a 7047     		bx	lr
 4035              		.cfi_endproc
 4036              	.LFE170:
 4038              		.align	2
 4039              		.global	TIM_BDTRConfig
 4040              		.thumb
 4041              		.thumb_func
 4043              	TIM_BDTRConfig:
 4044              	.LFB171:
2170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4045              		.loc 1 2212 0
 4046              		.cfi_startproc
 4047              		@ args = 0, pretend = 0, frame = 8
 4048              		@ frame_needed = 1, uses_anonymous_args = 0
 4049              		@ link register save eliminated.
 4050 146c 80B4     		push	{r7}
 4051              	.LCFI183:
 4052              		.cfi_def_cfa_offset 4
 4053              		.cfi_offset 7, -4
 4054 146e 83B0     		sub	sp, sp, #12
 4055              	.LCFI184:
 4056              		.cfi_def_cfa_offset 16
 4057 1470 00AF     		add	r7, sp, #0
 4058              	.LCFI185:
 4059              		.cfi_def_cfa_register 7
 4060 1472 7860     		str	r0, [r7, #4]
 4061 1474 3960     		str	r1, [r7, #0]
2213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4062              		.loc 1 2224 0
 4063 1476 3B68     		ldr	r3, [r7, #0]
 4064 1478 1A88     		ldrh	r2, [r3, #0]
 4065 147a 3B68     		ldr	r3, [r7, #0]
 4066 147c 5B88     		ldrh	r3, [r3, #2]
 4067 147e 1343     		orrs	r3, r3, r2
 4068 1480 9AB2     		uxth	r2, r3
2225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4069              		.loc 1 2225 0
 4070 1482 3B68     		ldr	r3, [r7, #0]
 4071 1484 9B88     		ldrh	r3, [r3, #4]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4072              		.loc 1 2224 0
 4073 1486 1343     		orrs	r3, r3, r2
 4074 1488 9AB2     		uxth	r2, r3
 4075              		.loc 1 2225 0
 4076 148a 3B68     		ldr	r3, [r7, #0]
 4077 148c DB88     		ldrh	r3, [r3, #6]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4078              		.loc 1 2224 0
 4079 148e 1343     		orrs	r3, r3, r2
 4080 1490 9AB2     		uxth	r2, r3
2226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4081              		.loc 1 2226 0
 4082 1492 3B68     		ldr	r3, [r7, #0]
 4083 1494 1B89     		ldrh	r3, [r3, #8]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4084              		.loc 1 2224 0
 4085 1496 1343     		orrs	r3, r3, r2
 4086 1498 9AB2     		uxth	r2, r3
 4087              		.loc 1 2226 0
 4088 149a 3B68     		ldr	r3, [r7, #0]
 4089 149c 5B89     		ldrh	r3, [r3, #10]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4090              		.loc 1 2224 0
 4091 149e 1343     		orrs	r3, r3, r2
 4092 14a0 9AB2     		uxth	r2, r3
2227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 4093              		.loc 1 2227 0
 4094 14a2 3B68     		ldr	r3, [r7, #0]
 4095 14a4 9B89     		ldrh	r3, [r3, #12]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4096              		.loc 1 2224 0
 4097 14a6 1343     		orrs	r3, r3, r2
 4098 14a8 9AB2     		uxth	r2, r3
 4099 14aa 7B68     		ldr	r3, [r7, #4]
 4100 14ac A3F84420 		strh	r2, [r3, #68]	@ movhi
2228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4101              		.loc 1 2228 0
 4102 14b0 07F10C07 		add	r7, r7, #12
 4103 14b4 BD46     		mov	sp, r7
 4104 14b6 80BC     		pop	{r7}
 4105 14b8 7047     		bx	lr
 4106              		.cfi_endproc
 4107              	.LFE171:
 4109 14ba 00BF     		.align	2
 4110              		.global	TIM_BDTRStructInit
 4111              		.thumb
 4112              		.thumb_func
 4114              	TIM_BDTRStructInit:
 4115              	.LFB172:
2229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4116              		.loc 1 2237 0
 4117              		.cfi_startproc
 4118              		@ args = 0, pretend = 0, frame = 8
 4119              		@ frame_needed = 1, uses_anonymous_args = 0
 4120              		@ link register save eliminated.
 4121 14bc 80B4     		push	{r7}
 4122              	.LCFI186:
 4123              		.cfi_def_cfa_offset 4
 4124              		.cfi_offset 7, -4
 4125 14be 83B0     		sub	sp, sp, #12
 4126              	.LCFI187:
 4127              		.cfi_def_cfa_offset 16
 4128 14c0 00AF     		add	r7, sp, #0
 4129              	.LCFI188:
 4130              		.cfi_def_cfa_register 7
 4131 14c2 7860     		str	r0, [r7, #4]
2238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 4132              		.loc 1 2239 0
 4133 14c4 7B68     		ldr	r3, [r7, #4]
 4134 14c6 4FF00002 		mov	r2, #0
 4135 14ca 1A80     		strh	r2, [r3, #0]	@ movhi
2240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 4136              		.loc 1 2240 0
 4137 14cc 7B68     		ldr	r3, [r7, #4]
 4138 14ce 4FF00002 		mov	r2, #0
 4139 14d2 5A80     		strh	r2, [r3, #2]	@ movhi
2241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 4140              		.loc 1 2241 0
 4141 14d4 7B68     		ldr	r3, [r7, #4]
 4142 14d6 4FF00002 		mov	r2, #0
 4143 14da 9A80     		strh	r2, [r3, #4]	@ movhi
2242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 4144              		.loc 1 2242 0
 4145 14dc 7B68     		ldr	r3, [r7, #4]
 4146 14de 4FF00002 		mov	r2, #0
 4147 14e2 DA80     		strh	r2, [r3, #6]	@ movhi
2243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 4148              		.loc 1 2243 0
 4149 14e4 7B68     		ldr	r3, [r7, #4]
 4150 14e6 4FF00002 		mov	r2, #0
 4151 14ea 1A81     		strh	r2, [r3, #8]	@ movhi
2244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 4152              		.loc 1 2244 0
 4153 14ec 7B68     		ldr	r3, [r7, #4]
 4154 14ee 4FF00002 		mov	r2, #0
 4155 14f2 5A81     		strh	r2, [r3, #10]	@ movhi
2245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 4156              		.loc 1 2245 0
 4157 14f4 7B68     		ldr	r3, [r7, #4]
 4158 14f6 4FF00002 		mov	r2, #0
 4159 14fa 9A81     		strh	r2, [r3, #12]	@ movhi
2246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4160              		.loc 1 2246 0
 4161 14fc 07F10C07 		add	r7, r7, #12
 4162 1500 BD46     		mov	sp, r7
 4163 1502 80BC     		pop	{r7}
 4164 1504 7047     		bx	lr
 4165              		.cfi_endproc
 4166              	.LFE172:
 4168 1506 00BF     		.align	2
 4169              		.global	TIM_CtrlPWMOutputs
 4170              		.thumb
 4171              		.thumb_func
 4173              	TIM_CtrlPWMOutputs:
 4174              	.LFB173:
2247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4175              		.loc 1 2256 0
 4176              		.cfi_startproc
 4177              		@ args = 0, pretend = 0, frame = 8
 4178              		@ frame_needed = 1, uses_anonymous_args = 0
 4179              		@ link register save eliminated.
 4180 1508 80B4     		push	{r7}
 4181              	.LCFI189:
 4182              		.cfi_def_cfa_offset 4
 4183              		.cfi_offset 7, -4
 4184 150a 83B0     		sub	sp, sp, #12
 4185              	.LCFI190:
 4186              		.cfi_def_cfa_offset 16
 4187 150c 00AF     		add	r7, sp, #0
 4188              	.LCFI191:
 4189              		.cfi_def_cfa_register 7
 4190 150e 7860     		str	r0, [r7, #4]
 4191 1510 0B46     		mov	r3, r1
 4192 1512 FB70     		strb	r3, [r7, #3]
2257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4193              		.loc 1 2261 0
 4194 1514 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4195 1516 002B     		cmp	r3, #0
 4196 1518 0CD0     		beq	.L113
2262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 4197              		.loc 1 2264 0
 4198 151a 7B68     		ldr	r3, [r7, #4]
 4199 151c B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4200 1520 9BB2     		uxth	r3, r3
 4201 1522 6FEA4343 		mvn	r3, r3, lsl #17
 4202 1526 6FEA5343 		mvn	r3, r3, lsr #17
 4203 152a 9AB2     		uxth	r2, r3
 4204 152c 7B68     		ldr	r3, [r7, #4]
 4205 152e A3F84420 		strh	r2, [r3, #68]	@ movhi
 4206 1532 0BE0     		b	.L112
 4207              	.L113:
2265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 4208              		.loc 1 2269 0
 4209 1534 7B68     		ldr	r3, [r7, #4]
 4210 1536 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4211 153a 9BB2     		uxth	r3, r3
 4212 153c 4FEA4343 		lsl	r3, r3, #17
 4213 1540 4FEA5343 		lsr	r3, r3, #17
 4214 1544 9AB2     		uxth	r2, r3
 4215 1546 7B68     		ldr	r3, [r7, #4]
 4216 1548 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4217              	.L112:
2270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4218              		.loc 1 2271 0
 4219 154c 07F10C07 		add	r7, r7, #12
 4220 1550 BD46     		mov	sp, r7
 4221 1552 80BC     		pop	{r7}
 4222 1554 7047     		bx	lr
 4223              		.cfi_endproc
 4224              	.LFE173:
 4226 1556 00BF     		.align	2
 4227              		.global	TIM_SelectCOM
 4228              		.thumb
 4229              		.thumb_func
 4231              	TIM_SelectCOM:
 4232              	.LFB174:
2272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4233              		.loc 1 2281 0
 4234              		.cfi_startproc
 4235              		@ args = 0, pretend = 0, frame = 8
 4236              		@ frame_needed = 1, uses_anonymous_args = 0
 4237              		@ link register save eliminated.
 4238 1558 80B4     		push	{r7}
 4239              	.LCFI192:
 4240              		.cfi_def_cfa_offset 4
 4241              		.cfi_offset 7, -4
 4242 155a 83B0     		sub	sp, sp, #12
 4243              	.LCFI193:
 4244              		.cfi_def_cfa_offset 16
 4245 155c 00AF     		add	r7, sp, #0
 4246              	.LCFI194:
 4247              		.cfi_def_cfa_register 7
 4248 155e 7860     		str	r0, [r7, #4]
 4249 1560 0B46     		mov	r3, r1
 4250 1562 FB70     		strb	r3, [r7, #3]
2282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4251              		.loc 1 2286 0
 4252 1564 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4253 1566 002B     		cmp	r3, #0
 4254 1568 08D0     		beq	.L116
2287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 4255              		.loc 1 2289 0
 4256 156a 7B68     		ldr	r3, [r7, #4]
 4257 156c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4258 156e 9BB2     		uxth	r3, r3
 4259 1570 43F00403 		orr	r3, r3, #4
 4260 1574 9AB2     		uxth	r2, r3
 4261 1576 7B68     		ldr	r3, [r7, #4]
 4262 1578 9A80     		strh	r2, [r3, #4]	@ movhi
 4263 157a 07E0     		b	.L115
 4264              	.L116:
2290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 4265              		.loc 1 2294 0
 4266 157c 7B68     		ldr	r3, [r7, #4]
 4267 157e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4268 1580 9BB2     		uxth	r3, r3
 4269 1582 23F00403 		bic	r3, r3, #4
 4270 1586 9AB2     		uxth	r2, r3
 4271 1588 7B68     		ldr	r3, [r7, #4]
 4272 158a 9A80     		strh	r2, [r3, #4]	@ movhi
 4273              	.L115:
2295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4274              		.loc 1 2296 0
 4275 158c 07F10C07 		add	r7, r7, #12
 4276 1590 BD46     		mov	sp, r7
 4277 1592 80BC     		pop	{r7}
 4278 1594 7047     		bx	lr
 4279              		.cfi_endproc
 4280              	.LFE174:
 4282 1596 00BF     		.align	2
 4283              		.global	TIM_CCPreloadControl
 4284              		.thumb
 4285              		.thumb_func
 4287              	TIM_CCPreloadControl:
 4288              	.LFB175:
2297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4289              		.loc 1 2306 0
 4290              		.cfi_startproc
 4291              		@ args = 0, pretend = 0, frame = 8
 4292              		@ frame_needed = 1, uses_anonymous_args = 0
 4293              		@ link register save eliminated.
 4294 1598 80B4     		push	{r7}
 4295              	.LCFI195:
 4296              		.cfi_def_cfa_offset 4
 4297              		.cfi_offset 7, -4
 4298 159a 83B0     		sub	sp, sp, #12
 4299              	.LCFI196:
 4300              		.cfi_def_cfa_offset 16
 4301 159c 00AF     		add	r7, sp, #0
 4302              	.LCFI197:
 4303              		.cfi_def_cfa_register 7
 4304 159e 7860     		str	r0, [r7, #4]
 4305 15a0 0B46     		mov	r3, r1
 4306 15a2 FB70     		strb	r3, [r7, #3]
2307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4307              		.loc 1 2310 0
 4308 15a4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4309 15a6 002B     		cmp	r3, #0
 4310 15a8 08D0     		beq	.L119
2311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 4311              		.loc 1 2313 0
 4312 15aa 7B68     		ldr	r3, [r7, #4]
 4313 15ac 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4314 15ae 9BB2     		uxth	r3, r3
 4315 15b0 43F00103 		orr	r3, r3, #1
 4316 15b4 9AB2     		uxth	r2, r3
 4317 15b6 7B68     		ldr	r3, [r7, #4]
 4318 15b8 9A80     		strh	r2, [r3, #4]	@ movhi
 4319 15ba 07E0     		b	.L118
 4320              	.L119:
2314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 4321              		.loc 1 2318 0
 4322 15bc 7B68     		ldr	r3, [r7, #4]
 4323 15be 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4324 15c0 9BB2     		uxth	r3, r3
 4325 15c2 23F00103 		bic	r3, r3, #1
 4326 15c6 9AB2     		uxth	r2, r3
 4327 15c8 7B68     		ldr	r3, [r7, #4]
 4328 15ca 9A80     		strh	r2, [r3, #4]	@ movhi
 4329              	.L118:
2319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4330              		.loc 1 2320 0
 4331 15cc 07F10C07 		add	r7, r7, #12
 4332 15d0 BD46     		mov	sp, r7
 4333 15d2 80BC     		pop	{r7}
 4334 15d4 7047     		bx	lr
 4335              		.cfi_endproc
 4336              	.LFE175:
 4338 15d6 00BF     		.align	2
 4339              		.global	TIM_ITConfig
 4340              		.thumb
 4341              		.thumb_func
 4343              	TIM_ITConfig:
 4344              	.LFB176:
2321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4345              		.loc 1 2363 0
 4346              		.cfi_startproc
 4347              		@ args = 0, pretend = 0, frame = 8
 4348              		@ frame_needed = 1, uses_anonymous_args = 0
 4349              		@ link register save eliminated.
 4350 15d8 80B4     		push	{r7}
 4351              	.LCFI198:
 4352              		.cfi_def_cfa_offset 4
 4353              		.cfi_offset 7, -4
 4354 15da 83B0     		sub	sp, sp, #12
 4355              	.LCFI199:
 4356              		.cfi_def_cfa_offset 16
 4357 15dc 00AF     		add	r7, sp, #0
 4358              	.LCFI200:
 4359              		.cfi_def_cfa_register 7
 4360 15de 7860     		str	r0, [r7, #4]
 4361 15e0 1346     		mov	r3, r2
 4362 15e2 0A46     		mov	r2, r1	@ movhi
 4363 15e4 7A80     		strh	r2, [r7, #2]	@ movhi
 4364 15e6 7B70     		strb	r3, [r7, #1]
2364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4365              		.loc 1 2369 0
 4366 15e8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4367 15ea 002B     		cmp	r3, #0
 4368 15ec 08D0     		beq	.L122
2370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 4369              		.loc 1 2372 0
 4370 15ee 7B68     		ldr	r3, [r7, #4]
 4371 15f0 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4372 15f2 9AB2     		uxth	r2, r3
 4373 15f4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4374 15f6 1343     		orrs	r3, r3, r2
 4375 15f8 9AB2     		uxth	r2, r3
 4376 15fa 7B68     		ldr	r3, [r7, #4]
 4377 15fc 9A81     		strh	r2, [r3, #12]	@ movhi
 4378 15fe 0AE0     		b	.L121
 4379              	.L122:
2373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 4380              		.loc 1 2377 0
 4381 1600 7B68     		ldr	r3, [r7, #4]
 4382 1602 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4383 1604 9AB2     		uxth	r2, r3
 4384 1606 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4385 1608 6FEA0303 		mvn	r3, r3
 4386 160c 9BB2     		uxth	r3, r3
 4387 160e 1340     		ands	r3, r3, r2
 4388 1610 9AB2     		uxth	r2, r3
 4389 1612 7B68     		ldr	r3, [r7, #4]
 4390 1614 9A81     		strh	r2, [r3, #12]	@ movhi
 4391              	.L121:
2378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4392              		.loc 1 2379 0
 4393 1616 07F10C07 		add	r7, r7, #12
 4394 161a BD46     		mov	sp, r7
 4395 161c 80BC     		pop	{r7}
 4396 161e 7047     		bx	lr
 4397              		.cfi_endproc
 4398              	.LFE176:
 4400              		.align	2
 4401              		.global	TIM_GenerateEvent
 4402              		.thumb
 4403              		.thumb_func
 4405              	TIM_GenerateEvent:
 4406              	.LFB177:
2380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4407              		.loc 1 2401 0
 4408              		.cfi_startproc
 4409              		@ args = 0, pretend = 0, frame = 8
 4410              		@ frame_needed = 1, uses_anonymous_args = 0
 4411              		@ link register save eliminated.
 4412 1620 80B4     		push	{r7}
 4413              	.LCFI201:
 4414              		.cfi_def_cfa_offset 4
 4415              		.cfi_offset 7, -4
 4416 1622 83B0     		sub	sp, sp, #12
 4417              	.LCFI202:
 4418              		.cfi_def_cfa_offset 16
 4419 1624 00AF     		add	r7, sp, #0
 4420              	.LCFI203:
 4421              		.cfi_def_cfa_register 7
 4422 1626 7860     		str	r0, [r7, #4]
 4423 1628 0B46     		mov	r3, r1
 4424 162a 7B80     		strh	r3, [r7, #2]	@ movhi
2402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 4425              		.loc 1 2407 0
 4426 162c 7B68     		ldr	r3, [r7, #4]
 4427 162e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4428 1630 9A82     		strh	r2, [r3, #20]	@ movhi
2408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4429              		.loc 1 2408 0
 4430 1632 07F10C07 		add	r7, r7, #12
 4431 1636 BD46     		mov	sp, r7
 4432 1638 80BC     		pop	{r7}
 4433 163a 7047     		bx	lr
 4434              		.cfi_endproc
 4435              	.LFE177:
 4437              		.align	2
 4438              		.global	TIM_GetFlagStatus
 4439              		.thumb
 4440              		.thumb_func
 4442              	TIM_GetFlagStatus:
 4443              	.LFB178:
2409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4444              		.loc 1 2434 0
 4445              		.cfi_startproc
 4446              		@ args = 0, pretend = 0, frame = 16
 4447              		@ frame_needed = 1, uses_anonymous_args = 0
 4448              		@ link register save eliminated.
 4449 163c 80B4     		push	{r7}
 4450              	.LCFI204:
 4451              		.cfi_def_cfa_offset 4
 4452              		.cfi_offset 7, -4
 4453 163e 85B0     		sub	sp, sp, #20
 4454              	.LCFI205:
 4455              		.cfi_def_cfa_offset 24
 4456 1640 00AF     		add	r7, sp, #0
 4457              	.LCFI206:
 4458              		.cfi_def_cfa_register 7
 4459 1642 7860     		str	r0, [r7, #4]
 4460 1644 0B46     		mov	r3, r1
 4461 1646 7B80     		strh	r3, [r7, #2]	@ movhi
2435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4462              		.loc 1 2435 0
 4463 1648 4FF00003 		mov	r3, #0
 4464 164c FB73     		strb	r3, [r7, #15]
2436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 4465              		.loc 1 2441 0
 4466 164e 7B68     		ldr	r3, [r7, #4]
 4467 1650 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4468 1652 9AB2     		uxth	r2, r3
 4469 1654 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4470 1656 1340     		ands	r3, r3, r2
 4471 1658 9BB2     		uxth	r3, r3
 4472 165a 002B     		cmp	r3, #0
 4473 165c 03D0     		beq	.L126
2442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4474              		.loc 1 2443 0
 4475 165e 4FF00103 		mov	r3, #1
 4476 1662 FB73     		strb	r3, [r7, #15]
 4477 1664 02E0     		b	.L127
 4478              	.L126:
2444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4479              		.loc 1 2447 0
 4480 1666 4FF00003 		mov	r3, #0
 4481 166a FB73     		strb	r3, [r7, #15]
 4482              	.L127:
2448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4483              		.loc 1 2449 0
 4484 166c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4485              		.loc 1 2450 0
 4486 166e 1846     		mov	r0, r3
 4487 1670 07F11407 		add	r7, r7, #20
 4488 1674 BD46     		mov	sp, r7
 4489 1676 80BC     		pop	{r7}
 4490 1678 7047     		bx	lr
 4491              		.cfi_endproc
 4492              	.LFE178:
 4494 167a 00BF     		.align	2
 4495              		.global	TIM_ClearFlag
 4496              		.thumb
 4497              		.thumb_func
 4499              	TIM_ClearFlag:
 4500              	.LFB179:
2451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4501              		.loc 1 2476 0
 4502              		.cfi_startproc
 4503              		@ args = 0, pretend = 0, frame = 8
 4504              		@ frame_needed = 1, uses_anonymous_args = 0
 4505              		@ link register save eliminated.
 4506 167c 80B4     		push	{r7}
 4507              	.LCFI207:
 4508              		.cfi_def_cfa_offset 4
 4509              		.cfi_offset 7, -4
 4510 167e 83B0     		sub	sp, sp, #12
 4511              	.LCFI208:
 4512              		.cfi_def_cfa_offset 16
 4513 1680 00AF     		add	r7, sp, #0
 4514              	.LCFI209:
 4515              		.cfi_def_cfa_register 7
 4516 1682 7860     		str	r0, [r7, #4]
 4517 1684 0B46     		mov	r3, r1
 4518 1686 7B80     		strh	r3, [r7, #2]	@ movhi
2477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 4519              		.loc 1 2481 0
 4520 1688 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4521 168a 6FEA0303 		mvn	r3, r3
 4522 168e 9AB2     		uxth	r2, r3
 4523 1690 7B68     		ldr	r3, [r7, #4]
 4524 1692 1A82     		strh	r2, [r3, #16]	@ movhi
2482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4525              		.loc 1 2482 0
 4526 1694 07F10C07 		add	r7, r7, #12
 4527 1698 BD46     		mov	sp, r7
 4528 169a 80BC     		pop	{r7}
 4529 169c 7047     		bx	lr
 4530              		.cfi_endproc
 4531              	.LFE179:
 4533 169e 00BF     		.align	2
 4534              		.global	TIM_GetITStatus
 4535              		.thumb
 4536              		.thumb_func
 4538              	TIM_GetITStatus:
 4539              	.LFB180:
2483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4540              		.loc 1 2504 0
 4541              		.cfi_startproc
 4542              		@ args = 0, pretend = 0, frame = 16
 4543              		@ frame_needed = 1, uses_anonymous_args = 0
 4544              		@ link register save eliminated.
 4545 16a0 80B4     		push	{r7}
 4546              	.LCFI210:
 4547              		.cfi_def_cfa_offset 4
 4548              		.cfi_offset 7, -4
 4549 16a2 85B0     		sub	sp, sp, #20
 4550              	.LCFI211:
 4551              		.cfi_def_cfa_offset 24
 4552 16a4 00AF     		add	r7, sp, #0
 4553              	.LCFI212:
 4554              		.cfi_def_cfa_register 7
 4555 16a6 7860     		str	r0, [r7, #4]
 4556 16a8 0B46     		mov	r3, r1
 4557 16aa 7B80     		strh	r3, [r7, #2]	@ movhi
2505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4558              		.loc 1 2505 0
 4559 16ac 4FF00003 		mov	r3, #0
 4560 16b0 FB73     		strb	r3, [r7, #15]
2506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 4561              		.loc 1 2506 0
 4562 16b2 4FF00003 		mov	r3, #0
 4563 16b6 BB81     		strh	r3, [r7, #12]	@ movhi
 4564 16b8 4FF00003 		mov	r3, #0
 4565 16bc 7B81     		strh	r3, [r7, #10]	@ movhi
2507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 4566              		.loc 1 2511 0
 4567 16be 7B68     		ldr	r3, [r7, #4]
 4568 16c0 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4569 16c2 9AB2     		uxth	r2, r3
 4570 16c4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4571 16c6 1340     		ands	r3, r3, r2
 4572 16c8 BB81     		strh	r3, [r7, #12]	@ movhi
2512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 4573              		.loc 1 2513 0
 4574 16ca 7B68     		ldr	r3, [r7, #4]
 4575 16cc 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4576 16ce 9AB2     		uxth	r2, r3
 4577 16d0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4578 16d2 1340     		ands	r3, r3, r2
 4579 16d4 7B81     		strh	r3, [r7, #10]	@ movhi
2514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4580              		.loc 1 2514 0
 4581 16d6 BB89     		ldrh	r3, [r7, #12]
 4582 16d8 002B     		cmp	r3, #0
 4583 16da 06D0     		beq	.L130
 4584              		.loc 1 2514 0 is_stmt 0 discriminator 1
 4585 16dc 7B89     		ldrh	r3, [r7, #10]
 4586 16de 002B     		cmp	r3, #0
 4587 16e0 03D0     		beq	.L130
2515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4588              		.loc 1 2516 0 is_stmt 1
 4589 16e2 4FF00103 		mov	r3, #1
 4590 16e6 FB73     		strb	r3, [r7, #15]
 4591 16e8 02E0     		b	.L131
 4592              	.L130:
2517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4593              		.loc 1 2520 0
 4594 16ea 4FF00003 		mov	r3, #0
 4595 16ee FB73     		strb	r3, [r7, #15]
 4596              	.L131:
2521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4597              		.loc 1 2522 0
 4598 16f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4599              		.loc 1 2523 0
 4600 16f2 1846     		mov	r0, r3
 4601 16f4 07F11407 		add	r7, r7, #20
 4602 16f8 BD46     		mov	sp, r7
 4603 16fa 80BC     		pop	{r7}
 4604 16fc 7047     		bx	lr
 4605              		.cfi_endproc
 4606              	.LFE180:
 4608 16fe 00BF     		.align	2
 4609              		.global	TIM_ClearITPendingBit
 4610              		.thumb
 4611              		.thumb_func
 4613              	TIM_ClearITPendingBit:
 4614              	.LFB181:
2524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4615              		.loc 1 2545 0
 4616              		.cfi_startproc
 4617              		@ args = 0, pretend = 0, frame = 8
 4618              		@ frame_needed = 1, uses_anonymous_args = 0
 4619              		@ link register save eliminated.
 4620 1700 80B4     		push	{r7}
 4621              	.LCFI213:
 4622              		.cfi_def_cfa_offset 4
 4623              		.cfi_offset 7, -4
 4624 1702 83B0     		sub	sp, sp, #12
 4625              	.LCFI214:
 4626              		.cfi_def_cfa_offset 16
 4627 1704 00AF     		add	r7, sp, #0
 4628              	.LCFI215:
 4629              		.cfi_def_cfa_register 7
 4630 1706 7860     		str	r0, [r7, #4]
 4631 1708 0B46     		mov	r3, r1
 4632 170a 7B80     		strh	r3, [r7, #2]	@ movhi
2546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 4633              		.loc 1 2550 0
 4634 170c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4635 170e 6FEA0303 		mvn	r3, r3
 4636 1712 9AB2     		uxth	r2, r3
 4637 1714 7B68     		ldr	r3, [r7, #4]
 4638 1716 1A82     		strh	r2, [r3, #16]	@ movhi
2551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4639              		.loc 1 2551 0
 4640 1718 07F10C07 		add	r7, r7, #12
 4641 171c BD46     		mov	sp, r7
 4642 171e 80BC     		pop	{r7}
 4643 1720 7047     		bx	lr
 4644              		.cfi_endproc
 4645              	.LFE181:
 4647 1722 00BF     		.align	2
 4648              		.global	TIM_DMAConfig
 4649              		.thumb
 4650              		.thumb_func
 4652              	TIM_DMAConfig:
 4653              	.LFB182:
2552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4654              		.loc 1 2582 0
 4655              		.cfi_startproc
 4656              		@ args = 0, pretend = 0, frame = 8
 4657              		@ frame_needed = 1, uses_anonymous_args = 0
 4658              		@ link register save eliminated.
 4659 1724 80B4     		push	{r7}
 4660              	.LCFI216:
 4661              		.cfi_def_cfa_offset 4
 4662              		.cfi_offset 7, -4
 4663 1726 83B0     		sub	sp, sp, #12
 4664              	.LCFI217:
 4665              		.cfi_def_cfa_offset 16
 4666 1728 00AF     		add	r7, sp, #0
 4667              	.LCFI218:
 4668              		.cfi_def_cfa_register 7
 4669 172a 7860     		str	r0, [r7, #4]
 4670 172c 1346     		mov	r3, r2
 4671 172e 0A46     		mov	r2, r1	@ movhi
 4672 1730 7A80     		strh	r2, [r7, #2]	@ movhi
 4673 1732 3B80     		strh	r3, [r7, #0]	@ movhi
2583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 4674              		.loc 1 2589 0
 4675 1734 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4676 1736 3B88     		ldrh	r3, [r7, #0]	@ movhi
 4677 1738 1343     		orrs	r3, r3, r2
 4678 173a 9AB2     		uxth	r2, r3
 4679 173c 7B68     		ldr	r3, [r7, #4]
 4680 173e A3F84820 		strh	r2, [r3, #72]	@ movhi
2590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4681              		.loc 1 2590 0
 4682 1742 07F10C07 		add	r7, r7, #12
 4683 1746 BD46     		mov	sp, r7
 4684 1748 80BC     		pop	{r7}
 4685 174a 7047     		bx	lr
 4686              		.cfi_endproc
 4687              	.LFE182:
 4689              		.align	2
 4690              		.global	TIM_DMACmd
 4691              		.thumb
 4692              		.thumb_func
 4694              	TIM_DMACmd:
 4695              	.LFB183:
2591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4696              		.loc 1 2609 0
 4697              		.cfi_startproc
 4698              		@ args = 0, pretend = 0, frame = 8
 4699              		@ frame_needed = 1, uses_anonymous_args = 0
 4700              		@ link register save eliminated.
 4701 174c 80B4     		push	{r7}
 4702              	.LCFI219:
 4703              		.cfi_def_cfa_offset 4
 4704              		.cfi_offset 7, -4
 4705 174e 83B0     		sub	sp, sp, #12
 4706              	.LCFI220:
 4707              		.cfi_def_cfa_offset 16
 4708 1750 00AF     		add	r7, sp, #0
 4709              	.LCFI221:
 4710              		.cfi_def_cfa_register 7
 4711 1752 7860     		str	r0, [r7, #4]
 4712 1754 1346     		mov	r3, r2
 4713 1756 0A46     		mov	r2, r1	@ movhi
 4714 1758 7A80     		strh	r2, [r7, #2]	@ movhi
 4715 175a 7B70     		strb	r3, [r7, #1]
2610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4716              		.loc 1 2615 0
 4717 175c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4718 175e 002B     		cmp	r3, #0
 4719 1760 08D0     		beq	.L135
2616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 4720              		.loc 1 2618 0
 4721 1762 7B68     		ldr	r3, [r7, #4]
 4722 1764 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4723 1766 9AB2     		uxth	r2, r3
 4724 1768 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4725 176a 1343     		orrs	r3, r3, r2
 4726 176c 9AB2     		uxth	r2, r3
 4727 176e 7B68     		ldr	r3, [r7, #4]
 4728 1770 9A81     		strh	r2, [r3, #12]	@ movhi
 4729 1772 0AE0     		b	.L134
 4730              	.L135:
2619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 4731              		.loc 1 2623 0
 4732 1774 7B68     		ldr	r3, [r7, #4]
 4733 1776 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4734 1778 9AB2     		uxth	r2, r3
 4735 177a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4736 177c 6FEA0303 		mvn	r3, r3
 4737 1780 9BB2     		uxth	r3, r3
 4738 1782 1340     		ands	r3, r3, r2
 4739 1784 9AB2     		uxth	r2, r3
 4740 1786 7B68     		ldr	r3, [r7, #4]
 4741 1788 9A81     		strh	r2, [r3, #12]	@ movhi
 4742              	.L134:
2624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4743              		.loc 1 2625 0
 4744 178a 07F10C07 		add	r7, r7, #12
 4745 178e BD46     		mov	sp, r7
 4746 1790 80BC     		pop	{r7}
 4747 1792 7047     		bx	lr
 4748              		.cfi_endproc
 4749              	.LFE183:
 4751              		.align	2
 4752              		.global	TIM_SelectCCDMA
 4753              		.thumb
 4754              		.thumb_func
 4756              	TIM_SelectCCDMA:
 4757              	.LFB184:
2626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4758              		.loc 1 2635 0
 4759              		.cfi_startproc
 4760              		@ args = 0, pretend = 0, frame = 8
 4761              		@ frame_needed = 1, uses_anonymous_args = 0
 4762              		@ link register save eliminated.
 4763 1794 80B4     		push	{r7}
 4764              	.LCFI222:
 4765              		.cfi_def_cfa_offset 4
 4766              		.cfi_offset 7, -4
 4767 1796 83B0     		sub	sp, sp, #12
 4768              	.LCFI223:
 4769              		.cfi_def_cfa_offset 16
 4770 1798 00AF     		add	r7, sp, #0
 4771              	.LCFI224:
 4772              		.cfi_def_cfa_register 7
 4773 179a 7860     		str	r0, [r7, #4]
 4774 179c 0B46     		mov	r3, r1
 4775 179e FB70     		strb	r3, [r7, #3]
2636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4776              		.loc 1 2640 0
 4777 17a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4778 17a2 002B     		cmp	r3, #0
 4779 17a4 08D0     		beq	.L138
2641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 4780              		.loc 1 2643 0
 4781 17a6 7B68     		ldr	r3, [r7, #4]
 4782 17a8 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4783 17aa 9BB2     		uxth	r3, r3
 4784 17ac 43F00803 		orr	r3, r3, #8
 4785 17b0 9AB2     		uxth	r2, r3
 4786 17b2 7B68     		ldr	r3, [r7, #4]
 4787 17b4 9A80     		strh	r2, [r3, #4]	@ movhi
 4788 17b6 07E0     		b	.L137
 4789              	.L138:
2644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 4790              		.loc 1 2648 0
 4791 17b8 7B68     		ldr	r3, [r7, #4]
 4792 17ba 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4793 17bc 9BB2     		uxth	r3, r3
 4794 17be 23F00803 		bic	r3, r3, #8
 4795 17c2 9AB2     		uxth	r2, r3
 4796 17c4 7B68     		ldr	r3, [r7, #4]
 4797 17c6 9A80     		strh	r2, [r3, #4]	@ movhi
 4798              	.L137:
2649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4799              		.loc 1 2650 0
 4800 17c8 07F10C07 		add	r7, r7, #12
 4801 17cc BD46     		mov	sp, r7
 4802 17ce 80BC     		pop	{r7}
 4803 17d0 7047     		bx	lr
 4804              		.cfi_endproc
 4805              	.LFE184:
 4807 17d2 00BF     		.align	2
 4808              		.global	TIM_InternalClockConfig
 4809              		.thumb
 4810              		.thumb_func
 4812              	TIM_InternalClockConfig:
 4813              	.LFB185:
2651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4814              		.loc 1 2674 0
 4815              		.cfi_startproc
 4816              		@ args = 0, pretend = 0, frame = 8
 4817              		@ frame_needed = 1, uses_anonymous_args = 0
 4818              		@ link register save eliminated.
 4819 17d4 80B4     		push	{r7}
 4820              	.LCFI225:
 4821              		.cfi_def_cfa_offset 4
 4822              		.cfi_offset 7, -4
 4823 17d6 83B0     		sub	sp, sp, #12
 4824              	.LCFI226:
 4825              		.cfi_def_cfa_offset 16
 4826 17d8 00AF     		add	r7, sp, #0
 4827              	.LCFI227:
 4828              		.cfi_def_cfa_register 7
 4829 17da 7860     		str	r0, [r7, #4]
2675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 4830              		.loc 1 2679 0
 4831 17dc 7B68     		ldr	r3, [r7, #4]
 4832 17de 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4833 17e0 9BB2     		uxth	r3, r3
 4834 17e2 23F00703 		bic	r3, r3, #7
 4835 17e6 9AB2     		uxth	r2, r3
 4836 17e8 7B68     		ldr	r3, [r7, #4]
 4837 17ea 1A81     		strh	r2, [r3, #8]	@ movhi
2680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4838              		.loc 1 2680 0
 4839 17ec 07F10C07 		add	r7, r7, #12
 4840 17f0 BD46     		mov	sp, r7
 4841 17f2 80BC     		pop	{r7}
 4842 17f4 7047     		bx	lr
 4843              		.cfi_endproc
 4844              	.LFE185:
 4846 17f6 00BF     		.align	2
 4847              		.global	TIM_ITRxExternalClockConfig
 4848              		.thumb
 4849              		.thumb_func
 4851              	TIM_ITRxExternalClockConfig:
 4852              	.LFB186:
2681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4853              		.loc 1 2695 0
 4854              		.cfi_startproc
 4855              		@ args = 0, pretend = 0, frame = 8
 4856              		@ frame_needed = 1, uses_anonymous_args = 0
 4857 17f8 80B5     		push	{r7, lr}
 4858              	.LCFI228:
 4859              		.cfi_def_cfa_offset 8
 4860              		.cfi_offset 14, -4
 4861              		.cfi_offset 7, -8
 4862 17fa 82B0     		sub	sp, sp, #8
 4863              	.LCFI229:
 4864              		.cfi_def_cfa_offset 16
 4865 17fc 00AF     		add	r7, sp, #0
 4866              	.LCFI230:
 4867              		.cfi_def_cfa_register 7
 4868 17fe 7860     		str	r0, [r7, #4]
 4869 1800 0B46     		mov	r3, r1
 4870 1802 7B80     		strh	r3, [r7, #2]	@ movhi
2696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 4871              		.loc 1 2701 0
 4872 1804 7B88     		ldrh	r3, [r7, #2]
 4873 1806 7868     		ldr	r0, [r7, #4]
 4874 1808 1946     		mov	r1, r3
 4875 180a FFF7FEFF 		bl	TIM_SelectInputTrigger
2702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4876              		.loc 1 2704 0
 4877 180e 7B68     		ldr	r3, [r7, #4]
 4878 1810 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4879 1812 9BB2     		uxth	r3, r3
 4880 1814 43F00703 		orr	r3, r3, #7
 4881 1818 9AB2     		uxth	r2, r3
 4882 181a 7B68     		ldr	r3, [r7, #4]
 4883 181c 1A81     		strh	r2, [r3, #8]	@ movhi
2705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4884              		.loc 1 2705 0
 4885 181e 07F10807 		add	r7, r7, #8
 4886 1822 BD46     		mov	sp, r7
 4887 1824 80BD     		pop	{r7, pc}
 4888              		.cfi_endproc
 4889              	.LFE186:
 4891 1826 00BF     		.align	2
 4892              		.global	TIM_TIxExternalClockConfig
 4893              		.thumb
 4894              		.thumb_func
 4896              	TIM_TIxExternalClockConfig:
 4897              	.LFB187:
2706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4898              		.loc 1 2726 0
 4899              		.cfi_startproc
 4900              		@ args = 0, pretend = 0, frame = 16
 4901              		@ frame_needed = 1, uses_anonymous_args = 0
 4902 1828 80B5     		push	{r7, lr}
 4903              	.LCFI231:
 4904              		.cfi_def_cfa_offset 8
 4905              		.cfi_offset 14, -4
 4906              		.cfi_offset 7, -8
 4907 182a 84B0     		sub	sp, sp, #16
 4908              	.LCFI232:
 4909              		.cfi_def_cfa_offset 24
 4910 182c 00AF     		add	r7, sp, #0
 4911              	.LCFI233:
 4912              		.cfi_def_cfa_register 7
 4913 182e F860     		str	r0, [r7, #12]
 4914 1830 7981     		strh	r1, [r7, #10]	@ movhi
 4915 1832 3A81     		strh	r2, [r7, #8]	@ movhi
 4916 1834 FB80     		strh	r3, [r7, #6]	@ movhi
2727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 4917              		.loc 1 2733 0
 4918 1836 7B89     		ldrh	r3, [r7, #10]
 4919 1838 602B     		cmp	r3, #96
 4920 183a 08D1     		bne	.L143
2734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 4921              		.loc 1 2735 0
 4922 183c 3A89     		ldrh	r2, [r7, #8]
 4923 183e FB88     		ldrh	r3, [r7, #6]
 4924 1840 F868     		ldr	r0, [r7, #12]
 4925 1842 1146     		mov	r1, r2
 4926 1844 4FF00102 		mov	r2, #1
 4927 1848 00F0AEF9 		bl	TI2_Config
 4928 184c 07E0     		b	.L144
 4929              	.L143:
2736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 4930              		.loc 1 2739 0
 4931 184e 3A89     		ldrh	r2, [r7, #8]
 4932 1850 FB88     		ldrh	r3, [r7, #6]
 4933 1852 F868     		ldr	r0, [r7, #12]
 4934 1854 1146     		mov	r1, r2
 4935 1856 4FF00102 		mov	r2, #1
 4936 185a 00F065F9 		bl	TI1_Config
 4937              	.L144:
2740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 4938              		.loc 1 2742 0
 4939 185e 7B89     		ldrh	r3, [r7, #10]
 4940 1860 F868     		ldr	r0, [r7, #12]
 4941 1862 1946     		mov	r1, r3
 4942 1864 FFF7FEFF 		bl	TIM_SelectInputTrigger
2743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4943              		.loc 1 2744 0
 4944 1868 FB68     		ldr	r3, [r7, #12]
 4945 186a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4946 186c 9BB2     		uxth	r3, r3
 4947 186e 43F00703 		orr	r3, r3, #7
 4948 1872 9AB2     		uxth	r2, r3
 4949 1874 FB68     		ldr	r3, [r7, #12]
 4950 1876 1A81     		strh	r2, [r3, #8]	@ movhi
2745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4951              		.loc 1 2745 0
 4952 1878 07F11007 		add	r7, r7, #16
 4953 187c BD46     		mov	sp, r7
 4954 187e 80BD     		pop	{r7, pc}
 4955              		.cfi_endproc
 4956              	.LFE187:
 4958              		.align	2
 4959              		.global	TIM_ETRClockMode1Config
 4960              		.thumb
 4961              		.thumb_func
 4963              	TIM_ETRClockMode1Config:
 4964              	.LFB188:
2746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4965              		.loc 1 2766 0
 4966              		.cfi_startproc
 4967              		@ args = 0, pretend = 0, frame = 24
 4968              		@ frame_needed = 1, uses_anonymous_args = 0
 4969 1880 80B5     		push	{r7, lr}
 4970              	.LCFI234:
 4971              		.cfi_def_cfa_offset 8
 4972              		.cfi_offset 14, -4
 4973              		.cfi_offset 7, -8
 4974 1882 86B0     		sub	sp, sp, #24
 4975              	.LCFI235:
 4976              		.cfi_def_cfa_offset 32
 4977 1884 00AF     		add	r7, sp, #0
 4978              	.LCFI236:
 4979              		.cfi_def_cfa_register 7
 4980 1886 F860     		str	r0, [r7, #12]
 4981 1888 7981     		strh	r1, [r7, #10]	@ movhi
 4982 188a 3A81     		strh	r2, [r7, #8]	@ movhi
 4983 188c FB80     		strh	r3, [r7, #6]	@ movhi
2767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 4984              		.loc 1 2767 0
 4985 188e 4FF00003 		mov	r3, #0
 4986 1892 FB82     		strh	r3, [r7, #22]	@ movhi
2768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 4987              		.loc 1 2775 0
 4988 1894 7989     		ldrh	r1, [r7, #10]
 4989 1896 3A89     		ldrh	r2, [r7, #8]
 4990 1898 FB88     		ldrh	r3, [r7, #6]
 4991 189a F868     		ldr	r0, [r7, #12]
 4992 189c FFF7FEFF 		bl	TIM_ETRConfig
2776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 4993              		.loc 1 2778 0
 4994 18a0 FB68     		ldr	r3, [r7, #12]
 4995 18a2 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4996 18a4 FB82     		strh	r3, [r7, #22]	@ movhi
2779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 4997              		.loc 1 2781 0
 4998 18a6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 4999 18a8 23F00703 		bic	r3, r3, #7
 5000 18ac FB82     		strh	r3, [r7, #22]	@ movhi
2782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 5001              		.loc 1 2784 0
 5002 18ae FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5003 18b0 43F00703 		orr	r3, r3, #7
 5004 18b4 FB82     		strh	r3, [r7, #22]	@ movhi
2785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5005              		.loc 1 2787 0
 5006 18b6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5007 18b8 23F07003 		bic	r3, r3, #112
 5008 18bc FB82     		strh	r3, [r7, #22]	@ movhi
2788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 5009              		.loc 1 2788 0
 5010 18be FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5011 18c0 43F07003 		orr	r3, r3, #112
 5012 18c4 FB82     		strh	r3, [r7, #22]	@ movhi
2789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5013              		.loc 1 2791 0
 5014 18c6 FB68     		ldr	r3, [r7, #12]
 5015 18c8 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5016 18ca 1A81     		strh	r2, [r3, #8]	@ movhi
2792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5017              		.loc 1 2792 0
 5018 18cc 07F11807 		add	r7, r7, #24
 5019 18d0 BD46     		mov	sp, r7
 5020 18d2 80BD     		pop	{r7, pc}
 5021              		.cfi_endproc
 5022              	.LFE188:
 5024              		.align	2
 5025              		.global	TIM_ETRClockMode2Config
 5026              		.thumb
 5027              		.thumb_func
 5029              	TIM_ETRClockMode2Config:
 5030              	.LFB189:
2793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5031              		.loc 1 2813 0
 5032              		.cfi_startproc
 5033              		@ args = 0, pretend = 0, frame = 16
 5034              		@ frame_needed = 1, uses_anonymous_args = 0
 5035 18d4 80B5     		push	{r7, lr}
 5036              	.LCFI237:
 5037              		.cfi_def_cfa_offset 8
 5038              		.cfi_offset 14, -4
 5039              		.cfi_offset 7, -8
 5040 18d6 84B0     		sub	sp, sp, #16
 5041              	.LCFI238:
 5042              		.cfi_def_cfa_offset 24
 5043 18d8 00AF     		add	r7, sp, #0
 5044              	.LCFI239:
 5045              		.cfi_def_cfa_register 7
 5046 18da F860     		str	r0, [r7, #12]
 5047 18dc 7981     		strh	r1, [r7, #10]	@ movhi
 5048 18de 3A81     		strh	r2, [r7, #8]	@ movhi
 5049 18e0 FB80     		strh	r3, [r7, #6]	@ movhi
2814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5050              		.loc 1 2821 0
 5051 18e2 7989     		ldrh	r1, [r7, #10]
 5052 18e4 3A89     		ldrh	r2, [r7, #8]
 5053 18e6 FB88     		ldrh	r3, [r7, #6]
 5054 18e8 F868     		ldr	r0, [r7, #12]
 5055 18ea FFF7FEFF 		bl	TIM_ETRConfig
2822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 5056              		.loc 1 2824 0
 5057 18ee FB68     		ldr	r3, [r7, #12]
 5058 18f0 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5059 18f2 9BB2     		uxth	r3, r3
 5060 18f4 43F48043 		orr	r3, r3, #16384
 5061 18f8 9AB2     		uxth	r2, r3
 5062 18fa FB68     		ldr	r3, [r7, #12]
 5063 18fc 1A81     		strh	r2, [r3, #8]	@ movhi
2825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5064              		.loc 1 2825 0
 5065 18fe 07F11007 		add	r7, r7, #16
 5066 1902 BD46     		mov	sp, r7
 5067 1904 80BD     		pop	{r7, pc}
 5068              		.cfi_endproc
 5069              	.LFE189:
 5071 1906 00BF     		.align	2
 5072              		.global	TIM_SelectInputTrigger
 5073              		.thumb
 5074              		.thumb_func
 5076              	TIM_SelectInputTrigger:
 5077              	.LFB190:
2826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5078              		.loc 1 2880 0
 5079              		.cfi_startproc
 5080              		@ args = 0, pretend = 0, frame = 16
 5081              		@ frame_needed = 1, uses_anonymous_args = 0
 5082              		@ link register save eliminated.
 5083 1908 80B4     		push	{r7}
 5084              	.LCFI240:
 5085              		.cfi_def_cfa_offset 4
 5086              		.cfi_offset 7, -4
 5087 190a 85B0     		sub	sp, sp, #20
 5088              	.LCFI241:
 5089              		.cfi_def_cfa_offset 24
 5090 190c 00AF     		add	r7, sp, #0
 5091              	.LCFI242:
 5092              		.cfi_def_cfa_register 7
 5093 190e 7860     		str	r0, [r7, #4]
 5094 1910 0B46     		mov	r3, r1
 5095 1912 7B80     		strh	r3, [r7, #2]	@ movhi
2881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5096              		.loc 1 2881 0
 5097 1914 4FF00003 		mov	r3, #0
 5098 1918 FB81     		strh	r3, [r7, #14]	@ movhi
2882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5099              		.loc 1 2888 0
 5100 191a 7B68     		ldr	r3, [r7, #4]
 5101 191c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5102 191e FB81     		strh	r3, [r7, #14]	@ movhi
2889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5103              		.loc 1 2891 0
 5104 1920 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5105 1922 23F07003 		bic	r3, r3, #112
 5106 1926 FB81     		strh	r3, [r7, #14]	@ movhi
2892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 5107              		.loc 1 2894 0
 5108 1928 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5109 192a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5110 192c 1343     		orrs	r3, r3, r2
 5111 192e FB81     		strh	r3, [r7, #14]	@ movhi
2895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5112              		.loc 1 2897 0
 5113 1930 7B68     		ldr	r3, [r7, #4]
 5114 1932 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5115 1934 1A81     		strh	r2, [r3, #8]	@ movhi
2898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5116              		.loc 1 2898 0
 5117 1936 07F11407 		add	r7, r7, #20
 5118 193a BD46     		mov	sp, r7
 5119 193c 80BC     		pop	{r7}
 5120 193e 7047     		bx	lr
 5121              		.cfi_endproc
 5122              	.LFE190:
 5124              		.align	2
 5125              		.global	TIM_SelectOutputTrigger
 5126              		.thumb
 5127              		.thumb_func
 5129              	TIM_SelectOutputTrigger:
 5130              	.LFB191:
2899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5131              		.loc 1 2923 0
 5132              		.cfi_startproc
 5133              		@ args = 0, pretend = 0, frame = 8
 5134              		@ frame_needed = 1, uses_anonymous_args = 0
 5135              		@ link register save eliminated.
 5136 1940 80B4     		push	{r7}
 5137              	.LCFI243:
 5138              		.cfi_def_cfa_offset 4
 5139              		.cfi_offset 7, -4
 5140 1942 83B0     		sub	sp, sp, #12
 5141              	.LCFI244:
 5142              		.cfi_def_cfa_offset 16
 5143 1944 00AF     		add	r7, sp, #0
 5144              	.LCFI245:
 5145              		.cfi_def_cfa_register 7
 5146 1946 7860     		str	r0, [r7, #4]
 5147 1948 0B46     		mov	r3, r1
 5148 194a 7B80     		strh	r3, [r7, #2]	@ movhi
2924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 5149              		.loc 1 2929 0
 5150 194c 7B68     		ldr	r3, [r7, #4]
 5151 194e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5152 1950 9BB2     		uxth	r3, r3
 5153 1952 23F07003 		bic	r3, r3, #112
 5154 1956 9AB2     		uxth	r2, r3
 5155 1958 7B68     		ldr	r3, [r7, #4]
 5156 195a 9A80     		strh	r2, [r3, #4]	@ movhi
2930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 5157              		.loc 1 2931 0
 5158 195c 7B68     		ldr	r3, [r7, #4]
 5159 195e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5160 1960 9AB2     		uxth	r2, r3
 5161 1962 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5162 1964 1343     		orrs	r3, r3, r2
 5163 1966 9AB2     		uxth	r2, r3
 5164 1968 7B68     		ldr	r3, [r7, #4]
 5165 196a 9A80     		strh	r2, [r3, #4]	@ movhi
2932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5166              		.loc 1 2932 0
 5167 196c 07F10C07 		add	r7, r7, #12
 5168 1970 BD46     		mov	sp, r7
 5169 1972 80BC     		pop	{r7}
 5170 1974 7047     		bx	lr
 5171              		.cfi_endproc
 5172              	.LFE191:
 5174 1976 00BF     		.align	2
 5175              		.global	TIM_SelectSlaveMode
 5176              		.thumb
 5177              		.thumb_func
 5179              	TIM_SelectSlaveMode:
 5180              	.LFB192:
2933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5181              		.loc 1 2947 0
 5182              		.cfi_startproc
 5183              		@ args = 0, pretend = 0, frame = 8
 5184              		@ frame_needed = 1, uses_anonymous_args = 0
 5185              		@ link register save eliminated.
 5186 1978 80B4     		push	{r7}
 5187              	.LCFI246:
 5188              		.cfi_def_cfa_offset 4
 5189              		.cfi_offset 7, -4
 5190 197a 83B0     		sub	sp, sp, #12
 5191              	.LCFI247:
 5192              		.cfi_def_cfa_offset 16
 5193 197c 00AF     		add	r7, sp, #0
 5194              	.LCFI248:
 5195              		.cfi_def_cfa_register 7
 5196 197e 7860     		str	r0, [r7, #4]
 5197 1980 0B46     		mov	r3, r1
 5198 1982 7B80     		strh	r3, [r7, #2]	@ movhi
2948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 5199              		.loc 1 2953 0
 5200 1984 7B68     		ldr	r3, [r7, #4]
 5201 1986 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5202 1988 9BB2     		uxth	r3, r3
 5203 198a 23F00703 		bic	r3, r3, #7
 5204 198e 9AB2     		uxth	r2, r3
 5205 1990 7B68     		ldr	r3, [r7, #4]
 5206 1992 1A81     		strh	r2, [r3, #8]	@ movhi
2954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 5207              		.loc 1 2956 0
 5208 1994 7B68     		ldr	r3, [r7, #4]
 5209 1996 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5210 1998 9AB2     		uxth	r2, r3
 5211 199a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5212 199c 1343     		orrs	r3, r3, r2
 5213 199e 9AB2     		uxth	r2, r3
 5214 19a0 7B68     		ldr	r3, [r7, #4]
 5215 19a2 1A81     		strh	r2, [r3, #8]	@ movhi
2957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5216              		.loc 1 2957 0
 5217 19a4 07F10C07 		add	r7, r7, #12
 5218 19a8 BD46     		mov	sp, r7
 5219 19aa 80BC     		pop	{r7}
 5220 19ac 7047     		bx	lr
 5221              		.cfi_endproc
 5222              	.LFE192:
 5224 19ae 00BF     		.align	2
 5225              		.global	TIM_SelectMasterSlaveMode
 5226              		.thumb
 5227              		.thumb_func
 5229              	TIM_SelectMasterSlaveMode:
 5230              	.LFB193:
2958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5231              		.loc 1 2970 0
 5232              		.cfi_startproc
 5233              		@ args = 0, pretend = 0, frame = 8
 5234              		@ frame_needed = 1, uses_anonymous_args = 0
 5235              		@ link register save eliminated.
 5236 19b0 80B4     		push	{r7}
 5237              	.LCFI249:
 5238              		.cfi_def_cfa_offset 4
 5239              		.cfi_offset 7, -4
 5240 19b2 83B0     		sub	sp, sp, #12
 5241              	.LCFI250:
 5242              		.cfi_def_cfa_offset 16
 5243 19b4 00AF     		add	r7, sp, #0
 5244              	.LCFI251:
 5245              		.cfi_def_cfa_register 7
 5246 19b6 7860     		str	r0, [r7, #4]
 5247 19b8 0B46     		mov	r3, r1
 5248 19ba 7B80     		strh	r3, [r7, #2]	@ movhi
2971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 5249              		.loc 1 2976 0
 5250 19bc 7B68     		ldr	r3, [r7, #4]
 5251 19be 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5252 19c0 9BB2     		uxth	r3, r3
 5253 19c2 23F08003 		bic	r3, r3, #128
 5254 19c6 9AB2     		uxth	r2, r3
 5255 19c8 7B68     		ldr	r3, [r7, #4]
 5256 19ca 1A81     		strh	r2, [r3, #8]	@ movhi
2977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 5257              		.loc 1 2979 0
 5258 19cc 7B68     		ldr	r3, [r7, #4]
 5259 19ce 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5260 19d0 9AB2     		uxth	r2, r3
 5261 19d2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5262 19d4 1343     		orrs	r3, r3, r2
 5263 19d6 9AB2     		uxth	r2, r3
 5264 19d8 7B68     		ldr	r3, [r7, #4]
 5265 19da 1A81     		strh	r2, [r3, #8]	@ movhi
2980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5266              		.loc 1 2980 0
 5267 19dc 07F10C07 		add	r7, r7, #12
 5268 19e0 BD46     		mov	sp, r7
 5269 19e2 80BC     		pop	{r7}
 5270 19e4 7047     		bx	lr
 5271              		.cfi_endproc
 5272              	.LFE193:
 5274 19e6 00BF     		.align	2
 5275              		.global	TIM_ETRConfig
 5276              		.thumb
 5277              		.thumb_func
 5279              	TIM_ETRConfig:
 5280              	.LFB194:
2981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
3000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
3001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5281              		.loc 1 3001 0
 5282              		.cfi_startproc
 5283              		@ args = 0, pretend = 0, frame = 24
 5284              		@ frame_needed = 1, uses_anonymous_args = 0
 5285              		@ link register save eliminated.
 5286 19e8 80B4     		push	{r7}
 5287              	.LCFI252:
 5288              		.cfi_def_cfa_offset 4
 5289              		.cfi_offset 7, -4
 5290 19ea 87B0     		sub	sp, sp, #28
 5291              	.LCFI253:
 5292              		.cfi_def_cfa_offset 32
 5293 19ec 00AF     		add	r7, sp, #0
 5294              	.LCFI254:
 5295              		.cfi_def_cfa_register 7
 5296 19ee F860     		str	r0, [r7, #12]
 5297 19f0 7981     		strh	r1, [r7, #10]	@ movhi
 5298 19f2 3A81     		strh	r2, [r7, #8]	@ movhi
 5299 19f4 FB80     		strh	r3, [r7, #6]	@ movhi
3002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5300              		.loc 1 3002 0
 5301 19f6 4FF00003 		mov	r3, #0
 5302 19fa FB82     		strh	r3, [r7, #22]	@ movhi
3003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5303              		.loc 1 3010 0
 5304 19fc FB68     		ldr	r3, [r7, #12]
 5305 19fe 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5306 1a00 FB82     		strh	r3, [r7, #22]	@ movhi
3011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 5307              		.loc 1 3013 0
 5308 1a02 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5309 1a04 DBB2     		uxtb	r3, r3
 5310 1a06 FB82     		strh	r3, [r7, #22]	@ movhi
3014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 5311              		.loc 1 3016 0
 5312 1a08 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5313 1a0a 4FEA0323 		lsl	r3, r3, #8
 5314 1a0e 9AB2     		uxth	r2, r3
 5315 1a10 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5316 1a12 1343     		orrs	r3, r3, r2
 5317 1a14 9AB2     		uxth	r2, r3
 5318 1a16 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5319 1a18 1343     		orrs	r3, r3, r2
 5320 1a1a 9AB2     		uxth	r2, r3
 5321 1a1c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5322 1a1e 1343     		orrs	r3, r3, r2
 5323 1a20 FB82     		strh	r3, [r7, #22]	@ movhi
3017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5324              		.loc 1 3019 0
 5325 1a22 FB68     		ldr	r3, [r7, #12]
 5326 1a24 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5327 1a26 1A81     		strh	r2, [r3, #8]	@ movhi
3020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5328              		.loc 1 3020 0
 5329 1a28 07F11C07 		add	r7, r7, #28
 5330 1a2c BD46     		mov	sp, r7
 5331 1a2e 80BC     		pop	{r7}
 5332 1a30 7047     		bx	lr
 5333              		.cfi_endproc
 5334              	.LFE194:
 5336 1a32 00BF     		.align	2
 5337              		.global	TIM_EncoderInterfaceConfig
 5338              		.thumb
 5339              		.thumb_func
 5341              	TIM_EncoderInterfaceConfig:
 5342              	.LFB195:
3021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5343              		.loc 1 3059 0
 5344              		.cfi_startproc
 5345              		@ args = 0, pretend = 0, frame = 24
 5346              		@ frame_needed = 1, uses_anonymous_args = 0
 5347              		@ link register save eliminated.
 5348 1a34 80B4     		push	{r7}
 5349              	.LCFI255:
 5350              		.cfi_def_cfa_offset 4
 5351              		.cfi_offset 7, -4
 5352 1a36 87B0     		sub	sp, sp, #28
 5353              	.LCFI256:
 5354              		.cfi_def_cfa_offset 32
 5355 1a38 00AF     		add	r7, sp, #0
 5356              	.LCFI257:
 5357              		.cfi_def_cfa_register 7
 5358 1a3a F860     		str	r0, [r7, #12]
 5359 1a3c 7981     		strh	r1, [r7, #10]	@ movhi
 5360 1a3e 3A81     		strh	r2, [r7, #8]	@ movhi
 5361 1a40 FB80     		strh	r3, [r7, #6]	@ movhi
3060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5362              		.loc 1 3060 0
 5363 1a42 4FF00003 		mov	r3, #0
 5364 1a46 FB82     		strh	r3, [r7, #22]	@ movhi
3061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5365              		.loc 1 3061 0
 5366 1a48 4FF00003 		mov	r3, #0
 5367 1a4c BB82     		strh	r3, [r7, #20]	@ movhi
3062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 5368              		.loc 1 3062 0
 5369 1a4e 4FF00003 		mov	r3, #0
 5370 1a52 7B82     		strh	r3, [r7, #18]	@ movhi
3063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5371              		.loc 1 3071 0
 5372 1a54 FB68     		ldr	r3, [r7, #12]
 5373 1a56 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5374 1a58 FB82     		strh	r3, [r7, #22]	@ movhi
3072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5375              		.loc 1 3074 0
 5376 1a5a FB68     		ldr	r3, [r7, #12]
 5377 1a5c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5378 1a5e BB82     		strh	r3, [r7, #20]	@ movhi
3075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5379              		.loc 1 3077 0
 5380 1a60 FB68     		ldr	r3, [r7, #12]
 5381 1a62 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5382 1a64 7B82     		strh	r3, [r7, #18]	@ movhi
3078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5383              		.loc 1 3080 0
 5384 1a66 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5385 1a68 23F00703 		bic	r3, r3, #7
 5386 1a6c FB82     		strh	r3, [r7, #22]	@ movhi
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 5387              		.loc 1 3081 0
 5388 1a6e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5389 1a70 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5390 1a72 1343     		orrs	r3, r3, r2
 5391 1a74 FB82     		strh	r3, [r7, #22]	@ movhi
3082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 5392              		.loc 1 3084 0
 5393 1a76 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5394 1a78 23F44073 		bic	r3, r3, #768
 5395 1a7c 23F00303 		bic	r3, r3, #3
 5396 1a80 BB82     		strh	r3, [r7, #20]	@ movhi
3085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 5397              		.loc 1 3085 0
 5398 1a82 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5399 1a84 43F48073 		orr	r3, r3, #256
 5400 1a88 43F00103 		orr	r3, r3, #1
 5401 1a8c BB82     		strh	r3, [r7, #20]	@ movhi
3086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 5402              		.loc 1 3088 0
 5403 1a8e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5404 1a90 23F02203 		bic	r3, r3, #34
 5405 1a94 7B82     		strh	r3, [r7, #18]	@ movhi
3089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 5406              		.loc 1 3089 0
 5407 1a96 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5408 1a98 4FEA0313 		lsl	r3, r3, #4
 5409 1a9c 9AB2     		uxth	r2, r3
 5410 1a9e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5411 1aa0 1343     		orrs	r3, r3, r2
 5412 1aa2 9AB2     		uxth	r2, r3
 5413 1aa4 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5414 1aa6 1343     		orrs	r3, r3, r2
 5415 1aa8 7B82     		strh	r3, [r7, #18]	@ movhi
3090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5416              		.loc 1 3092 0
 5417 1aaa FB68     		ldr	r3, [r7, #12]
 5418 1aac FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5419 1aae 1A81     		strh	r2, [r3, #8]	@ movhi
3093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5420              		.loc 1 3095 0
 5421 1ab0 FB68     		ldr	r3, [r7, #12]
 5422 1ab2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5423 1ab4 1A83     		strh	r2, [r3, #24]	@ movhi
3096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5424              		.loc 1 3098 0
 5425 1ab6 FB68     		ldr	r3, [r7, #12]
 5426 1ab8 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5427 1aba 1A84     		strh	r2, [r3, #32]	@ movhi
3099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5428              		.loc 1 3099 0
 5429 1abc 07F11C07 		add	r7, r7, #28
 5430 1ac0 BD46     		mov	sp, r7
 5431 1ac2 80BC     		pop	{r7}
 5432 1ac4 7047     		bx	lr
 5433              		.cfi_endproc
 5434              	.LFE195:
 5436 1ac6 00BF     		.align	2
 5437              		.global	TIM_SelectHallSensor
 5438              		.thumb
 5439              		.thumb_func
 5441              	TIM_SelectHallSensor:
 5442              	.LFB196:
3100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5443              		.loc 1 3110 0
 5444              		.cfi_startproc
 5445              		@ args = 0, pretend = 0, frame = 8
 5446              		@ frame_needed = 1, uses_anonymous_args = 0
 5447              		@ link register save eliminated.
 5448 1ac8 80B4     		push	{r7}
 5449              	.LCFI258:
 5450              		.cfi_def_cfa_offset 4
 5451              		.cfi_offset 7, -4
 5452 1aca 83B0     		sub	sp, sp, #12
 5453              	.LCFI259:
 5454              		.cfi_def_cfa_offset 16
 5455 1acc 00AF     		add	r7, sp, #0
 5456              	.LCFI260:
 5457              		.cfi_def_cfa_register 7
 5458 1ace 7860     		str	r0, [r7, #4]
 5459 1ad0 0B46     		mov	r3, r1
 5460 1ad2 FB70     		strb	r3, [r7, #3]
3111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 5461              		.loc 1 3115 0
 5462 1ad4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5463 1ad6 002B     		cmp	r3, #0
 5464 1ad8 08D0     		beq	.L154
3116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 5465              		.loc 1 3118 0
 5466 1ada 7B68     		ldr	r3, [r7, #4]
 5467 1adc 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5468 1ade 9BB2     		uxth	r3, r3
 5469 1ae0 43F08003 		orr	r3, r3, #128
 5470 1ae4 9AB2     		uxth	r2, r3
 5471 1ae6 7B68     		ldr	r3, [r7, #4]
 5472 1ae8 9A80     		strh	r2, [r3, #4]	@ movhi
 5473 1aea 07E0     		b	.L153
 5474              	.L154:
3119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 5475              		.loc 1 3123 0
 5476 1aec 7B68     		ldr	r3, [r7, #4]
 5477 1aee 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5478 1af0 9BB2     		uxth	r3, r3
 5479 1af2 23F08003 		bic	r3, r3, #128
 5480 1af6 9AB2     		uxth	r2, r3
 5481 1af8 7B68     		ldr	r3, [r7, #4]
 5482 1afa 9A80     		strh	r2, [r3, #4]	@ movhi
 5483              	.L153:
3124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5484              		.loc 1 3125 0
 5485 1afc 07F10C07 		add	r7, r7, #12
 5486 1b00 BD46     		mov	sp, r7
 5487 1b02 80BC     		pop	{r7}
 5488 1b04 7047     		bx	lr
 5489              		.cfi_endproc
 5490              	.LFE196:
 5492 1b06 00BF     		.align	2
 5493              		.global	TIM_RemapConfig
 5494              		.thumb
 5495              		.thumb_func
 5497              	TIM_RemapConfig:
 5498              	.LFB197:
3126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5499              		.loc 1 3161 0
 5500              		.cfi_startproc
 5501              		@ args = 0, pretend = 0, frame = 8
 5502              		@ frame_needed = 1, uses_anonymous_args = 0
 5503              		@ link register save eliminated.
 5504 1b08 80B4     		push	{r7}
 5505              	.LCFI261:
 5506              		.cfi_def_cfa_offset 4
 5507              		.cfi_offset 7, -4
 5508 1b0a 83B0     		sub	sp, sp, #12
 5509              	.LCFI262:
 5510              		.cfi_def_cfa_offset 16
 5511 1b0c 00AF     		add	r7, sp, #0
 5512              	.LCFI263:
 5513              		.cfi_def_cfa_register 7
 5514 1b0e 7860     		str	r0, [r7, #4]
 5515 1b10 0B46     		mov	r3, r1
 5516 1b12 7B80     		strh	r3, [r7, #2]	@ movhi
3162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 5517              		.loc 1 3167 0
 5518 1b14 7B68     		ldr	r3, [r7, #4]
 5519 1b16 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5520 1b18 A3F85020 		strh	r2, [r3, #80]	@ movhi
3168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5521              		.loc 1 3168 0
 5522 1b1c 07F10C07 		add	r7, r7, #12
 5523 1b20 BD46     		mov	sp, r7
 5524 1b22 80BC     		pop	{r7}
 5525 1b24 7047     		bx	lr
 5526              		.cfi_endproc
 5527              	.LFE197:
 5529 1b26 00BF     		.align	2
 5530              		.thumb
 5531              		.thumb_func
 5533              	TI1_Config:
 5534              	.LFB198:
3169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5535              		.loc 1 3193 0
 5536              		.cfi_startproc
 5537              		@ args = 0, pretend = 0, frame = 24
 5538              		@ frame_needed = 1, uses_anonymous_args = 0
 5539              		@ link register save eliminated.
 5540 1b28 80B4     		push	{r7}
 5541              	.LCFI264:
 5542              		.cfi_def_cfa_offset 4
 5543              		.cfi_offset 7, -4
 5544 1b2a 87B0     		sub	sp, sp, #28
 5545              	.LCFI265:
 5546              		.cfi_def_cfa_offset 32
 5547 1b2c 00AF     		add	r7, sp, #0
 5548              	.LCFI266:
 5549              		.cfi_def_cfa_register 7
 5550 1b2e F860     		str	r0, [r7, #12]
 5551 1b30 7981     		strh	r1, [r7, #10]	@ movhi
 5552 1b32 3A81     		strh	r2, [r7, #8]	@ movhi
 5553 1b34 FB80     		strh	r3, [r7, #6]	@ movhi
3194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 5554              		.loc 1 3194 0
 5555 1b36 4FF00003 		mov	r3, #0
 5556 1b3a FB82     		strh	r3, [r7, #22]	@ movhi
 5557 1b3c 4FF00003 		mov	r3, #0
 5558 1b40 BB82     		strh	r3, [r7, #20]	@ movhi
3195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 5559              		.loc 1 3197 0
 5560 1b42 FB68     		ldr	r3, [r7, #12]
 5561 1b44 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5562 1b46 9BB2     		uxth	r3, r3
 5563 1b48 23F00103 		bic	r3, r3, #1
 5564 1b4c 9AB2     		uxth	r2, r3
 5565 1b4e FB68     		ldr	r3, [r7, #12]
 5566 1b50 1A84     		strh	r2, [r3, #32]	@ movhi
3198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5567              		.loc 1 3198 0
 5568 1b52 FB68     		ldr	r3, [r7, #12]
 5569 1b54 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5570 1b56 FB82     		strh	r3, [r7, #22]	@ movhi
3199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5571              		.loc 1 3199 0
 5572 1b58 FB68     		ldr	r3, [r7, #12]
 5573 1b5a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5574 1b5c BB82     		strh	r3, [r7, #20]	@ movhi
3200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 5575              		.loc 1 3202 0
 5576 1b5e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5577 1b60 23F0F303 		bic	r3, r3, #243
 5578 1b64 FB82     		strh	r3, [r7, #22]	@ movhi
3203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5579              		.loc 1 3203 0
 5580 1b66 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5581 1b68 4FEA0313 		lsl	r3, r3, #4
 5582 1b6c 9AB2     		uxth	r2, r3
 5583 1b6e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5584 1b70 1343     		orrs	r3, r3, r2
 5585 1b72 9AB2     		uxth	r2, r3
 5586 1b74 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5587 1b76 1343     		orrs	r3, r3, r2
 5588 1b78 FB82     		strh	r3, [r7, #22]	@ movhi
3204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 5589              		.loc 1 3206 0
 5590 1b7a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5591 1b7c 23F00A03 		bic	r3, r3, #10
 5592 1b80 BB82     		strh	r3, [r7, #20]	@ movhi
3207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 5593              		.loc 1 3207 0
 5594 1b82 7A89     		ldrh	r2, [r7, #10]	@ movhi
 5595 1b84 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5596 1b86 1343     		orrs	r3, r3, r2
 5597 1b88 9BB2     		uxth	r3, r3
 5598 1b8a 43F00103 		orr	r3, r3, #1
 5599 1b8e BB82     		strh	r3, [r7, #20]	@ movhi
3208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5600              		.loc 1 3210 0
 5601 1b90 FB68     		ldr	r3, [r7, #12]
 5602 1b92 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5603 1b94 1A83     		strh	r2, [r3, #24]	@ movhi
3211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5604              		.loc 1 3211 0
 5605 1b96 FB68     		ldr	r3, [r7, #12]
 5606 1b98 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5607 1b9a 1A84     		strh	r2, [r3, #32]	@ movhi
3212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5608              		.loc 1 3212 0
 5609 1b9c 07F11C07 		add	r7, r7, #28
 5610 1ba0 BD46     		mov	sp, r7
 5611 1ba2 80BC     		pop	{r7}
 5612 1ba4 7047     		bx	lr
 5613              		.cfi_endproc
 5614              	.LFE198:
 5616 1ba6 00BF     		.align	2
 5617              		.thumb
 5618              		.thumb_func
 5620              	TI2_Config:
 5621              	.LFB199:
3213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5622              		.loc 1 3234 0
 5623              		.cfi_startproc
 5624              		@ args = 0, pretend = 0, frame = 24
 5625              		@ frame_needed = 1, uses_anonymous_args = 0
 5626              		@ link register save eliminated.
 5627 1ba8 80B4     		push	{r7}
 5628              	.LCFI267:
 5629              		.cfi_def_cfa_offset 4
 5630              		.cfi_offset 7, -4
 5631 1baa 87B0     		sub	sp, sp, #28
 5632              	.LCFI268:
 5633              		.cfi_def_cfa_offset 32
 5634 1bac 00AF     		add	r7, sp, #0
 5635              	.LCFI269:
 5636              		.cfi_def_cfa_register 7
 5637 1bae F860     		str	r0, [r7, #12]
 5638 1bb0 7981     		strh	r1, [r7, #10]	@ movhi
 5639 1bb2 3A81     		strh	r2, [r7, #8]	@ movhi
 5640 1bb4 FB80     		strh	r3, [r7, #6]	@ movhi
3235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 5641              		.loc 1 3235 0
 5642 1bb6 4FF00003 		mov	r3, #0
 5643 1bba FB82     		strh	r3, [r7, #22]	@ movhi
 5644 1bbc 4FF00003 		mov	r3, #0
 5645 1bc0 BB82     		strh	r3, [r7, #20]	@ movhi
 5646 1bc2 4FF00003 		mov	r3, #0
 5647 1bc6 7B82     		strh	r3, [r7, #18]	@ movhi
3236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 5648              		.loc 1 3238 0
 5649 1bc8 FB68     		ldr	r3, [r7, #12]
 5650 1bca 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5651 1bcc 9BB2     		uxth	r3, r3
 5652 1bce 23F01003 		bic	r3, r3, #16
 5653 1bd2 9AB2     		uxth	r2, r3
 5654 1bd4 FB68     		ldr	r3, [r7, #12]
 5655 1bd6 1A84     		strh	r2, [r3, #32]	@ movhi
3239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5656              		.loc 1 3239 0
 5657 1bd8 FB68     		ldr	r3, [r7, #12]
 5658 1bda 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5659 1bdc FB82     		strh	r3, [r7, #22]	@ movhi
3240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5660              		.loc 1 3240 0
 5661 1bde FB68     		ldr	r3, [r7, #12]
 5662 1be0 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5663 1be2 BB82     		strh	r3, [r7, #20]	@ movhi
3241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 5664              		.loc 1 3241 0
 5665 1be4 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5666 1be6 4FEA0313 		lsl	r3, r3, #4
 5667 1bea 7B82     		strh	r3, [r7, #18]	@ movhi
3242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5668              		.loc 1 3244 0
 5669 1bec FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5670 1bee 23F44073 		bic	r3, r3, #768
 5671 1bf2 4FEA0353 		lsl	r3, r3, #20
 5672 1bf6 4FEA1353 		lsr	r3, r3, #20
 5673 1bfa FB82     		strh	r3, [r7, #22]	@ movhi
3245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 5674              		.loc 1 3245 0
 5675 1bfc FB88     		ldrh	r3, [r7, #6]	@ movhi
 5676 1bfe 4FEA0333 		lsl	r3, r3, #12
 5677 1c02 9AB2     		uxth	r2, r3
 5678 1c04 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5679 1c06 1343     		orrs	r3, r3, r2
 5680 1c08 FB82     		strh	r3, [r7, #22]	@ movhi
3246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 5681              		.loc 1 3246 0
 5682 1c0a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5683 1c0c 4FEA0323 		lsl	r3, r3, #8
 5684 1c10 9AB2     		uxth	r2, r3
 5685 1c12 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5686 1c14 1343     		orrs	r3, r3, r2
 5687 1c16 FB82     		strh	r3, [r7, #22]	@ movhi
3247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 5688              		.loc 1 3249 0
 5689 1c18 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5690 1c1a 23F0A003 		bic	r3, r3, #160
 5691 1c1e BB82     		strh	r3, [r7, #20]	@ movhi
3250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 5692              		.loc 1 3250 0
 5693 1c20 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5694 1c22 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5695 1c24 1343     		orrs	r3, r3, r2
 5696 1c26 9BB2     		uxth	r3, r3
 5697 1c28 43F01003 		orr	r3, r3, #16
 5698 1c2c BB82     		strh	r3, [r7, #20]	@ movhi
3251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 5699              		.loc 1 3253 0
 5700 1c2e FB68     		ldr	r3, [r7, #12]
 5701 1c30 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5702 1c32 1A83     		strh	r2, [r3, #24]	@ movhi
3254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5703              		.loc 1 3254 0
 5704 1c34 FB68     		ldr	r3, [r7, #12]
 5705 1c36 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5706 1c38 1A84     		strh	r2, [r3, #32]	@ movhi
3255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5707              		.loc 1 3255 0
 5708 1c3a 07F11C07 		add	r7, r7, #28
 5709 1c3e BD46     		mov	sp, r7
 5710 1c40 80BC     		pop	{r7}
 5711 1c42 7047     		bx	lr
 5712              		.cfi_endproc
 5713              	.LFE199:
 5715              		.align	2
 5716              		.thumb
 5717              		.thumb_func
 5719              	TI3_Config:
 5720              	.LFB200:
3256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5721              		.loc 1 3276 0
 5722              		.cfi_startproc
 5723              		@ args = 0, pretend = 0, frame = 24
 5724              		@ frame_needed = 1, uses_anonymous_args = 0
 5725              		@ link register save eliminated.
 5726 1c44 80B4     		push	{r7}
 5727              	.LCFI270:
 5728              		.cfi_def_cfa_offset 4
 5729              		.cfi_offset 7, -4
 5730 1c46 87B0     		sub	sp, sp, #28
 5731              	.LCFI271:
 5732              		.cfi_def_cfa_offset 32
 5733 1c48 00AF     		add	r7, sp, #0
 5734              	.LCFI272:
 5735              		.cfi_def_cfa_register 7
 5736 1c4a F860     		str	r0, [r7, #12]
 5737 1c4c 7981     		strh	r1, [r7, #10]	@ movhi
 5738 1c4e 3A81     		strh	r2, [r7, #8]	@ movhi
 5739 1c50 FB80     		strh	r3, [r7, #6]	@ movhi
3277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5740              		.loc 1 3277 0
 5741 1c52 4FF00003 		mov	r3, #0
 5742 1c56 FB82     		strh	r3, [r7, #22]	@ movhi
 5743 1c58 4FF00003 		mov	r3, #0
 5744 1c5c BB82     		strh	r3, [r7, #20]	@ movhi
 5745 1c5e 4FF00003 		mov	r3, #0
 5746 1c62 7B82     		strh	r3, [r7, #18]	@ movhi
3278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 5747              		.loc 1 3280 0
 5748 1c64 FB68     		ldr	r3, [r7, #12]
 5749 1c66 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5750 1c68 9BB2     		uxth	r3, r3
 5751 1c6a 23F48073 		bic	r3, r3, #256
 5752 1c6e 9AB2     		uxth	r2, r3
 5753 1c70 FB68     		ldr	r3, [r7, #12]
 5754 1c72 1A84     		strh	r2, [r3, #32]	@ movhi
3281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5755              		.loc 1 3281 0
 5756 1c74 FB68     		ldr	r3, [r7, #12]
 5757 1c76 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5758 1c78 FB82     		strh	r3, [r7, #22]	@ movhi
3282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5759              		.loc 1 3282 0
 5760 1c7a FB68     		ldr	r3, [r7, #12]
 5761 1c7c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5762 1c7e BB82     		strh	r3, [r7, #20]	@ movhi
3283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 5763              		.loc 1 3283 0
 5764 1c80 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5765 1c82 4FEA0323 		lsl	r3, r3, #8
 5766 1c86 7B82     		strh	r3, [r7, #18]	@ movhi
3284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 5767              		.loc 1 3286 0
 5768 1c88 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5769 1c8a 23F0F303 		bic	r3, r3, #243
 5770 1c8e FB82     		strh	r3, [r7, #22]	@ movhi
3287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5771              		.loc 1 3287 0
 5772 1c90 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5773 1c92 4FEA0313 		lsl	r3, r3, #4
 5774 1c96 9AB2     		uxth	r2, r3
 5775 1c98 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5776 1c9a 1343     		orrs	r3, r3, r2
 5777 1c9c 9AB2     		uxth	r2, r3
 5778 1c9e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5779 1ca0 1343     		orrs	r3, r3, r2
 5780 1ca2 FB82     		strh	r3, [r7, #22]	@ movhi
3288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 5781              		.loc 1 3290 0
 5782 1ca4 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5783 1ca6 23F42063 		bic	r3, r3, #2560
 5784 1caa BB82     		strh	r3, [r7, #20]	@ movhi
3291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 5785              		.loc 1 3291 0
 5786 1cac 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5787 1cae BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5788 1cb0 1343     		orrs	r3, r3, r2
 5789 1cb2 9BB2     		uxth	r3, r3
 5790 1cb4 43F48073 		orr	r3, r3, #256
 5791 1cb8 BB82     		strh	r3, [r7, #20]	@ movhi
3292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5792              		.loc 1 3294 0
 5793 1cba FB68     		ldr	r3, [r7, #12]
 5794 1cbc FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5795 1cbe 9A83     		strh	r2, [r3, #28]	@ movhi
3295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5796              		.loc 1 3295 0
 5797 1cc0 FB68     		ldr	r3, [r7, #12]
 5798 1cc2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5799 1cc4 1A84     		strh	r2, [r3, #32]	@ movhi
3296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5800              		.loc 1 3296 0
 5801 1cc6 07F11C07 		add	r7, r7, #28
 5802 1cca BD46     		mov	sp, r7
 5803 1ccc 80BC     		pop	{r7}
 5804 1cce 7047     		bx	lr
 5805              		.cfi_endproc
 5806              	.LFE200:
 5808              		.align	2
 5809              		.thumb
 5810              		.thumb_func
 5812              	TI4_Config:
 5813              	.LFB201:
3297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5814              		.loc 1 3317 0
 5815              		.cfi_startproc
 5816              		@ args = 0, pretend = 0, frame = 24
 5817              		@ frame_needed = 1, uses_anonymous_args = 0
 5818              		@ link register save eliminated.
 5819 1cd0 80B4     		push	{r7}
 5820              	.LCFI273:
 5821              		.cfi_def_cfa_offset 4
 5822              		.cfi_offset 7, -4
 5823 1cd2 87B0     		sub	sp, sp, #28
 5824              	.LCFI274:
 5825              		.cfi_def_cfa_offset 32
 5826 1cd4 00AF     		add	r7, sp, #0
 5827              	.LCFI275:
 5828              		.cfi_def_cfa_register 7
 5829 1cd6 F860     		str	r0, [r7, #12]
 5830 1cd8 7981     		strh	r1, [r7, #10]	@ movhi
 5831 1cda 3A81     		strh	r2, [r7, #8]	@ movhi
 5832 1cdc FB80     		strh	r3, [r7, #6]	@ movhi
3318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5833              		.loc 1 3318 0
 5834 1cde 4FF00003 		mov	r3, #0
 5835 1ce2 FB82     		strh	r3, [r7, #22]	@ movhi
 5836 1ce4 4FF00003 		mov	r3, #0
 5837 1ce8 BB82     		strh	r3, [r7, #20]	@ movhi
 5838 1cea 4FF00003 		mov	r3, #0
 5839 1cee 7B82     		strh	r3, [r7, #18]	@ movhi
3319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 5840              		.loc 1 3321 0
 5841 1cf0 FB68     		ldr	r3, [r7, #12]
 5842 1cf2 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5843 1cf4 9BB2     		uxth	r3, r3
 5844 1cf6 23F48053 		bic	r3, r3, #4096
 5845 1cfa 9AB2     		uxth	r2, r3
 5846 1cfc FB68     		ldr	r3, [r7, #12]
 5847 1cfe 1A84     		strh	r2, [r3, #32]	@ movhi
3322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5848              		.loc 1 3322 0
 5849 1d00 FB68     		ldr	r3, [r7, #12]
 5850 1d02 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5851 1d04 FB82     		strh	r3, [r7, #22]	@ movhi
3323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5852              		.loc 1 3323 0
 5853 1d06 FB68     		ldr	r3, [r7, #12]
 5854 1d08 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5855 1d0a BB82     		strh	r3, [r7, #20]	@ movhi
3324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 5856              		.loc 1 3324 0
 5857 1d0c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5858 1d0e 4FEA0333 		lsl	r3, r3, #12
 5859 1d12 7B82     		strh	r3, [r7, #18]	@ movhi
3325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5860              		.loc 1 3327 0
 5861 1d14 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5862 1d16 23F44073 		bic	r3, r3, #768
 5863 1d1a 4FEA0353 		lsl	r3, r3, #20
 5864 1d1e 4FEA1353 		lsr	r3, r3, #20
 5865 1d22 FB82     		strh	r3, [r7, #22]	@ movhi
3328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 5866              		.loc 1 3328 0
 5867 1d24 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5868 1d26 4FEA0323 		lsl	r3, r3, #8
 5869 1d2a 9AB2     		uxth	r2, r3
 5870 1d2c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5871 1d2e 1343     		orrs	r3, r3, r2
 5872 1d30 FB82     		strh	r3, [r7, #22]	@ movhi
3329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 5873              		.loc 1 3329 0
 5874 1d32 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5875 1d34 4FEA0333 		lsl	r3, r3, #12
 5876 1d38 9AB2     		uxth	r2, r3
 5877 1d3a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5878 1d3c 1343     		orrs	r3, r3, r2
 5879 1d3e FB82     		strh	r3, [r7, #22]	@ movhi
3330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 5880              		.loc 1 3332 0
 5881 1d40 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5882 1d42 23F40053 		bic	r3, r3, #8192
 5883 1d46 4FEA4343 		lsl	r3, r3, #17
 5884 1d4a 4FEA5343 		lsr	r3, r3, #17
 5885 1d4e BB82     		strh	r3, [r7, #20]	@ movhi
3333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 5886              		.loc 1 3333 0
 5887 1d50 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5888 1d52 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5889 1d54 1343     		orrs	r3, r3, r2
 5890 1d56 9BB2     		uxth	r3, r3
 5891 1d58 43F48053 		orr	r3, r3, #4096
 5892 1d5c BB82     		strh	r3, [r7, #20]	@ movhi
3334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5893              		.loc 1 3336 0
 5894 1d5e FB68     		ldr	r3, [r7, #12]
 5895 1d60 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5896 1d62 9A83     		strh	r2, [r3, #28]	@ movhi
3337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 5897              		.loc 1 3337 0
 5898 1d64 FB68     		ldr	r3, [r7, #12]
 5899 1d66 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5900 1d68 1A84     		strh	r2, [r3, #32]	@ movhi
3338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5901              		.loc 1 3338 0
 5902 1d6a 07F11C07 		add	r7, r7, #28
 5903 1d6e BD46     		mov	sp, r7
 5904 1d70 80BC     		pop	{r7}
 5905 1d72 7047     		bx	lr
 5906              		.cfi_endproc
 5907              	.LFE201:
 5909              	.Letext0:
 5910              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 5911              		.file 3 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Devi
 5912              		.file 4 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_S
 5913              		.file 5 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
  C:\Temp\cctsOfjf.s:18     .text:00000000 $t
  C:\Temp\cctsOfjf.s:23     .text:00000000 TIM_DeInit
  C:\Temp\cctsOfjf.s:275    .text:00000238 TIM_TimeBaseInit
  C:\Temp\cctsOfjf.s:420    .text:0000032c TIM_TimeBaseStructInit
  C:\Temp\cctsOfjf.s:471    .text:00000368 TIM_PrescalerConfig
  C:\Temp\cctsOfjf.s:514    .text:00000390 TIM_CounterModeConfig
  C:\Temp\cctsOfjf.s:567    .text:000003c8 TIM_SetCounter
  C:\Temp\cctsOfjf.s:603    .text:000003e4 TIM_SetAutoreload
  C:\Temp\cctsOfjf.s:639    .text:00000400 TIM_GetCounter
  C:\Temp\cctsOfjf.s:674    .text:00000418 TIM_GetPrescaler
  C:\Temp\cctsOfjf.s:710    .text:00000434 TIM_UpdateDisableConfig
  C:\Temp\cctsOfjf.s:766    .text:00000474 TIM_UpdateRequestConfig
  C:\Temp\cctsOfjf.s:822    .text:000004b4 TIM_ARRPreloadConfig
  C:\Temp\cctsOfjf.s:878    .text:000004f4 TIM_SelectOnePulseMode
  C:\Temp\cctsOfjf.s:928    .text:0000052c TIM_SetClockDivision
  C:\Temp\cctsOfjf.s:978    .text:00000564 TIM_Cmd
  C:\Temp\cctsOfjf.s:1034   .text:000005a4 TIM_OC1Init
  C:\Temp\cctsOfjf.s:1194   .text:000006a0 TIM_OC2Init
  C:\Temp\cctsOfjf.s:1368   .text:000007c8 TIM_OC3Init
  C:\Temp\cctsOfjf.s:1540   .text:000008e8 TIM_OC4Init
  C:\Temp\cctsOfjf.s:1678   .text:000009c8 TIM_OCStructInit
  C:\Temp\cctsOfjf.s:1741   .text:00000a1c TIM_SelectOCxM
  C:\Temp\cctsOfjf.s:1863   .text:00000adc TIM_SetCompare1
  C:\Temp\cctsOfjf.s:1899   .text:00000af8 TIM_SetCompare2
  C:\Temp\cctsOfjf.s:1935   .text:00000b14 TIM_SetCompare3
  C:\Temp\cctsOfjf.s:1971   .text:00000b30 TIM_SetCompare4
  C:\Temp\cctsOfjf.s:2007   .text:00000b4c TIM_ForcedOC1Config
  C:\Temp\cctsOfjf.s:2060   .text:00000b84 TIM_ForcedOC2Config
  C:\Temp\cctsOfjf.s:2115   .text:00000bc4 TIM_ForcedOC3Config
  C:\Temp\cctsOfjf.s:2168   .text:00000bfc TIM_ForcedOC4Config
  C:\Temp\cctsOfjf.s:2223   .text:00000c3c TIM_OC1PreloadConfig
  C:\Temp\cctsOfjf.s:2276   .text:00000c74 TIM_OC2PreloadConfig
  C:\Temp\cctsOfjf.s:2331   .text:00000cb4 TIM_OC3PreloadConfig
  C:\Temp\cctsOfjf.s:2384   .text:00000cec TIM_OC4PreloadConfig
  C:\Temp\cctsOfjf.s:2439   .text:00000d2c TIM_OC1FastConfig
  C:\Temp\cctsOfjf.s:2492   .text:00000d64 TIM_OC2FastConfig
  C:\Temp\cctsOfjf.s:2547   .text:00000da4 TIM_OC3FastConfig
  C:\Temp\cctsOfjf.s:2600   .text:00000ddc TIM_OC4FastConfig
  C:\Temp\cctsOfjf.s:2655   .text:00000e1c TIM_ClearOC1Ref
  C:\Temp\cctsOfjf.s:2708   .text:00000e54 TIM_ClearOC2Ref
  C:\Temp\cctsOfjf.s:2764   .text:00000e98 TIM_ClearOC3Ref
  C:\Temp\cctsOfjf.s:2817   .text:00000ed0 TIM_ClearOC4Ref
  C:\Temp\cctsOfjf.s:2873   .text:00000f14 TIM_OC1PolarityConfig
  C:\Temp\cctsOfjf.s:2926   .text:00000f4c TIM_OC1NPolarityConfig
  C:\Temp\cctsOfjf.s:2979   .text:00000f84 TIM_OC2PolarityConfig
  C:\Temp\cctsOfjf.s:3034   .text:00000fc4 TIM_OC2NPolarityConfig
  C:\Temp\cctsOfjf.s:3089   .text:00001004 TIM_OC3PolarityConfig
  C:\Temp\cctsOfjf.s:3144   .text:00001044 TIM_OC3NPolarityConfig
  C:\Temp\cctsOfjf.s:3199   .text:00001084 TIM_OC4PolarityConfig
  C:\Temp\cctsOfjf.s:3254   .text:000010c4 TIM_CCxCmd
  C:\Temp\cctsOfjf.s:3320   .text:00001120 TIM_CCxNCmd
  C:\Temp\cctsOfjf.s:3386   .text:0000117c TIM_ICInit
  C:\Temp\cctsOfjf.s:5533   .text:00001b28 TI1_Config
  C:\Temp\cctsOfjf.s:3839   .text:00001384 TIM_SetIC1Prescaler
  C:\Temp\cctsOfjf.s:5620   .text:00001ba8 TI2_Config
  C:\Temp\cctsOfjf.s:3889   .text:000013bc TIM_SetIC2Prescaler
  C:\Temp\cctsOfjf.s:5719   .text:00001c44 TI3_Config
  C:\Temp\cctsOfjf.s:3941   .text:000013f8 TIM_SetIC3Prescaler
  C:\Temp\cctsOfjf.s:5812   .text:00001cd0 TI4_Config
  C:\Temp\cctsOfjf.s:3991   .text:00001430 TIM_SetIC4Prescaler
  C:\Temp\cctsOfjf.s:3515   .text:00001224 TIM_ICStructInit
  C:\Temp\cctsOfjf.s:3566   .text:00001260 TIM_PWMIConfig
  C:\Temp\cctsOfjf.s:3699   .text:00001324 TIM_GetCapture1
  C:\Temp\cctsOfjf.s:3734   .text:0000133c TIM_GetCapture2
  C:\Temp\cctsOfjf.s:3769   .text:00001354 TIM_GetCapture3
  C:\Temp\cctsOfjf.s:3804   .text:0000136c TIM_GetCapture4
  C:\Temp\cctsOfjf.s:4043   .text:0000146c TIM_BDTRConfig
  C:\Temp\cctsOfjf.s:4114   .text:000014bc TIM_BDTRStructInit
  C:\Temp\cctsOfjf.s:4173   .text:00001508 TIM_CtrlPWMOutputs
  C:\Temp\cctsOfjf.s:4231   .text:00001558 TIM_SelectCOM
  C:\Temp\cctsOfjf.s:4287   .text:00001598 TIM_CCPreloadControl
  C:\Temp\cctsOfjf.s:4343   .text:000015d8 TIM_ITConfig
  C:\Temp\cctsOfjf.s:4405   .text:00001620 TIM_GenerateEvent
  C:\Temp\cctsOfjf.s:4442   .text:0000163c TIM_GetFlagStatus
  C:\Temp\cctsOfjf.s:4499   .text:0000167c TIM_ClearFlag
  C:\Temp\cctsOfjf.s:4538   .text:000016a0 TIM_GetITStatus
  C:\Temp\cctsOfjf.s:4613   .text:00001700 TIM_ClearITPendingBit
  C:\Temp\cctsOfjf.s:4652   .text:00001724 TIM_DMAConfig
  C:\Temp\cctsOfjf.s:4694   .text:0000174c TIM_DMACmd
  C:\Temp\cctsOfjf.s:4756   .text:00001794 TIM_SelectCCDMA
  C:\Temp\cctsOfjf.s:4812   .text:000017d4 TIM_InternalClockConfig
  C:\Temp\cctsOfjf.s:4851   .text:000017f8 TIM_ITRxExternalClockConfig
  C:\Temp\cctsOfjf.s:5076   .text:00001908 TIM_SelectInputTrigger
  C:\Temp\cctsOfjf.s:4896   .text:00001828 TIM_TIxExternalClockConfig
  C:\Temp\cctsOfjf.s:4963   .text:00001880 TIM_ETRClockMode1Config
  C:\Temp\cctsOfjf.s:5279   .text:000019e8 TIM_ETRConfig
  C:\Temp\cctsOfjf.s:5029   .text:000018d4 TIM_ETRClockMode2Config
  C:\Temp\cctsOfjf.s:5129   .text:00001940 TIM_SelectOutputTrigger
  C:\Temp\cctsOfjf.s:5179   .text:00001978 TIM_SelectSlaveMode
  C:\Temp\cctsOfjf.s:5229   .text:000019b0 TIM_SelectMasterSlaveMode
  C:\Temp\cctsOfjf.s:5341   .text:00001a34 TIM_EncoderInterfaceConfig
  C:\Temp\cctsOfjf.s:5441   .text:00001ac8 TIM_SelectHallSensor
  C:\Temp\cctsOfjf.s:5497   .text:00001b08 TIM_RemapConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
