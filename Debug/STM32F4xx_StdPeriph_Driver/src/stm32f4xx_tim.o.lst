   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.TIM_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	TIM_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	TIM_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  27              		.loc 1 195 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
  43              		.loc 1 199 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF00003 		mov	r3, #0
  46 000e C4F20103 		movt	r3, 16385
  47 0012 9A42     		cmp	r2, r3
  48 0014 0CD1     		bne	.L2
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  49              		.loc 1 201 0
  50 0016 4FF00100 		mov	r0, #1
  51 001a 4FF00101 		mov	r1, #1
  52 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  53              		.loc 1 202 0
  54 0022 4FF00100 		mov	r0, #1
  55 0026 4FF00001 		mov	r1, #0
  56 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  57 002e FFE0     		b	.L1
  58              	.L2:
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
  59              		.loc 1 204 0
  60 0030 7B68     		ldr	r3, [r7, #4]
  61 0032 B3F1804F 		cmp	r3, #1073741824
  62 0036 0CD1     		bne	.L4
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  63              		.loc 1 206 0
  64 0038 4FF00100 		mov	r0, #1
  65 003c 4FF00101 		mov	r1, #1
  66 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  67              		.loc 1 207 0
  68 0044 4FF00100 		mov	r0, #1
  69 0048 4FF00001 		mov	r1, #0
  70 004c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  71 0050 EEE0     		b	.L1
  72              	.L4:
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
  73              		.loc 1 209 0
  74 0052 7A68     		ldr	r2, [r7, #4]
  75 0054 4FF48063 		mov	r3, #1024
  76 0058 C4F20003 		movt	r3, 16384
  77 005c 9A42     		cmp	r2, r3
  78 005e 0CD1     		bne	.L5
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  79              		.loc 1 211 0
  80 0060 4FF00200 		mov	r0, #2
  81 0064 4FF00101 		mov	r1, #1
  82 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  83              		.loc 1 212 0
  84 006c 4FF00200 		mov	r0, #2
  85 0070 4FF00001 		mov	r1, #0
  86 0074 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  87 0078 DAE0     		b	.L1
  88              	.L5:
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
  89              		.loc 1 214 0
  90 007a 7A68     		ldr	r2, [r7, #4]
  91 007c 4FF40063 		mov	r3, #2048
  92 0080 C4F20003 		movt	r3, 16384
  93 0084 9A42     		cmp	r2, r3
  94 0086 0CD1     		bne	.L6
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  95              		.loc 1 216 0
  96 0088 4FF00400 		mov	r0, #4
  97 008c 4FF00101 		mov	r1, #1
  98 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
  99              		.loc 1 217 0
 100 0094 4FF00400 		mov	r0, #4
 101 0098 4FF00001 		mov	r1, #0
 102 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 103 00a0 C6E0     		b	.L1
 104              	.L6:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 105              		.loc 1 219 0
 106 00a2 7A68     		ldr	r2, [r7, #4]
 107 00a4 4FF44063 		mov	r3, #3072
 108 00a8 C4F20003 		movt	r3, 16384
 109 00ac 9A42     		cmp	r2, r3
 110 00ae 0CD1     		bne	.L7
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 111              		.loc 1 221 0
 112 00b0 4FF00800 		mov	r0, #8
 113 00b4 4FF00101 		mov	r1, #1
 114 00b8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 115              		.loc 1 222 0
 116 00bc 4FF00800 		mov	r0, #8
 117 00c0 4FF00001 		mov	r1, #0
 118 00c4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 119 00c8 B2E0     		b	.L1
 120              	.L7:
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 121              		.loc 1 224 0
 122 00ca 7A68     		ldr	r2, [r7, #4]
 123 00cc 4FF48053 		mov	r3, #4096
 124 00d0 C4F20003 		movt	r3, 16384
 125 00d4 9A42     		cmp	r2, r3
 126 00d6 0CD1     		bne	.L8
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 127              		.loc 1 226 0
 128 00d8 4FF01000 		mov	r0, #16
 129 00dc 4FF00101 		mov	r1, #1
 130 00e0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 131              		.loc 1 227 0
 132 00e4 4FF01000 		mov	r0, #16
 133 00e8 4FF00001 		mov	r1, #0
 134 00ec FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 135 00f0 9EE0     		b	.L1
 136              	.L8:
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 137              		.loc 1 229 0
 138 00f2 7A68     		ldr	r2, [r7, #4]
 139 00f4 4FF4A053 		mov	r3, #5120
 140 00f8 C4F20003 		movt	r3, 16384
 141 00fc 9A42     		cmp	r2, r3
 142 00fe 0CD1     		bne	.L9
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 143              		.loc 1 231 0
 144 0100 4FF02000 		mov	r0, #32
 145 0104 4FF00101 		mov	r1, #1
 146 0108 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 147              		.loc 1 232 0
 148 010c 4FF02000 		mov	r0, #32
 149 0110 4FF00001 		mov	r1, #0
 150 0114 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 151 0118 8AE0     		b	.L1
 152              	.L9:
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 153              		.loc 1 234 0
 154 011a 7A68     		ldr	r2, [r7, #4]
 155 011c 4FF48063 		mov	r3, #1024
 156 0120 C4F20103 		movt	r3, 16385
 157 0124 9A42     		cmp	r2, r3
 158 0126 0CD1     		bne	.L10
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 159              		.loc 1 236 0
 160 0128 4FF00200 		mov	r0, #2
 161 012c 4FF00101 		mov	r1, #1
 162 0130 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 163              		.loc 1 237 0
 164 0134 4FF00200 		mov	r0, #2
 165 0138 4FF00001 		mov	r1, #0
 166 013c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 167 0140 76E0     		b	.L1
 168              	.L10:
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 169              		.loc 1 239 0
 170 0142 7A68     		ldr	r2, [r7, #4]
 171 0144 4FF48043 		mov	r3, #16384
 172 0148 C4F20103 		movt	r3, 16385
 173 014c 9A42     		cmp	r2, r3
 174 014e 0CD1     		bne	.L11
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 175              		.loc 1 241 0
 176 0150 4FF48030 		mov	r0, #65536
 177 0154 4FF00101 		mov	r1, #1
 178 0158 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 179              		.loc 1 242 0
 180 015c 4FF48030 		mov	r0, #65536
 181 0160 4FF00001 		mov	r1, #0
 182 0164 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 183 0168 62E0     		b	.L1
 184              	.L11:
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 185              		.loc 1 244 0
 186 016a 7A68     		ldr	r2, [r7, #4]
 187 016c 4FF48843 		mov	r3, #17408
 188 0170 C4F20103 		movt	r3, 16385
 189 0174 9A42     		cmp	r2, r3
 190 0176 0CD1     		bne	.L12
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 191              		.loc 1 246 0
 192 0178 4FF40030 		mov	r0, #131072
 193 017c 4FF00101 		mov	r1, #1
 194 0180 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 195              		.loc 1 247 0
 196 0184 4FF40030 		mov	r0, #131072
 197 0188 4FF00001 		mov	r1, #0
 198 018c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 199 0190 4EE0     		b	.L1
 200              	.L12:
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 201              		.loc 1 249 0
 202 0192 7A68     		ldr	r2, [r7, #4]
 203 0194 4FF49043 		mov	r3, #18432
 204 0198 C4F20103 		movt	r3, 16385
 205 019c 9A42     		cmp	r2, r3
 206 019e 0CD1     		bne	.L13
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 207              		.loc 1 251 0
 208 01a0 4FF48020 		mov	r0, #262144
 209 01a4 4FF00101 		mov	r1, #1
 210 01a8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 211              		.loc 1 252 0
 212 01ac 4FF48020 		mov	r0, #262144
 213 01b0 4FF00001 		mov	r1, #0
 214 01b4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 215 01b8 3AE0     		b	.L1
 216              	.L13:
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 217              		.loc 1 254 0
 218 01ba 7A68     		ldr	r2, [r7, #4]
 219 01bc 4FF4C053 		mov	r3, #6144
 220 01c0 C4F20003 		movt	r3, 16384
 221 01c4 9A42     		cmp	r2, r3
 222 01c6 0CD1     		bne	.L14
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 223              		.loc 1 256 0
 224 01c8 4FF04000 		mov	r0, #64
 225 01cc 4FF00101 		mov	r1, #1
 226 01d0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 227              		.loc 1 257 0
 228 01d4 4FF04000 		mov	r0, #64
 229 01d8 4FF00001 		mov	r1, #0
 230 01dc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 231 01e0 26E0     		b	.L1
 232              	.L14:
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 233              		.loc 1 259 0
 234 01e2 7A68     		ldr	r2, [r7, #4]
 235 01e4 4FF4E053 		mov	r3, #7168
 236 01e8 C4F20003 		movt	r3, 16384
 237 01ec 9A42     		cmp	r2, r3
 238 01ee 0CD1     		bne	.L15
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 239              		.loc 1 261 0
 240 01f0 4FF08000 		mov	r0, #128
 241 01f4 4FF00101 		mov	r1, #1
 242 01f8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 243              		.loc 1 262 0
 244 01fc 4FF08000 		mov	r0, #128
 245 0200 4FF00001 		mov	r1, #0
 246 0204 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 247 0208 12E0     		b	.L1
 248              	.L15:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 249              		.loc 1 266 0
 250 020a 7A68     		ldr	r2, [r7, #4]
 251 020c 4FF40053 		mov	r3, #8192
 252 0210 C4F20003 		movt	r3, 16384
 253 0214 9A42     		cmp	r2, r3
 254 0216 0BD1     		bne	.L1
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 255              		.loc 1 268 0
 256 0218 4FF48070 		mov	r0, #256
 257 021c 4FF00101 		mov	r1, #1
 258 0220 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 259              		.loc 1 269 0
 260 0224 4FF48070 		mov	r0, #256
 261 0228 4FF00001 		mov	r1, #0
 262 022c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 263              	.L1:
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 264              		.loc 1 272 0
 265 0230 07F10807 		add	r7, r7, #8
 266 0234 BD46     		mov	sp, r7
 267 0236 80BD     		pop	{r7, pc}
 268              		.cfi_endproc
 269              	.LFE110:
 271              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 272              		.align	2
 273              		.global	TIM_TimeBaseInit
 274              		.thumb
 275              		.thumb_func
 277              	TIM_TimeBaseInit:
 278              	.LFB111:
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 279              		.loc 1 283 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 16
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 80B4     		push	{r7}
 285              	.LCFI3:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 7, -4
 288 0002 85B0     		sub	sp, sp, #20
 289              	.LCFI4:
 290              		.cfi_def_cfa_offset 24
 291 0004 00AF     		add	r7, sp, #0
 292              	.LCFI5:
 293              		.cfi_def_cfa_register 7
 294 0006 7860     		str	r0, [r7, #4]
 295 0008 3960     		str	r1, [r7, #0]
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 296              		.loc 1 284 0
 297 000a 4FF00003 		mov	r3, #0
 298 000e FB81     		strh	r3, [r7, #14]	@ movhi
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 299              		.loc 1 291 0
 300 0010 7B68     		ldr	r3, [r7, #4]
 301 0012 1B88     		ldrh	r3, [r3, #0]	@ movhi
 302 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 303              		.loc 1 293 0
 304 0016 7A68     		ldr	r2, [r7, #4]
 305 0018 4FF00003 		mov	r3, #0
 306 001c C4F20103 		movt	r3, 16385
 307 0020 9A42     		cmp	r2, r3
 308 0022 1FD0     		beq	.L17
 309              		.loc 1 293 0 is_stmt 0 discriminator 1
 310 0024 7A68     		ldr	r2, [r7, #4]
 311 0026 4FF48063 		mov	r3, #1024
 312 002a C4F20103 		movt	r3, 16385
 313 002e 9A42     		cmp	r2, r3
 314 0030 18D0     		beq	.L17
 315 0032 7B68     		ldr	r3, [r7, #4]
 316 0034 B3F1804F 		cmp	r3, #1073741824
 317 0038 14D0     		beq	.L17
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 318              		.loc 1 294 0 is_stmt 1
 319 003a 7A68     		ldr	r2, [r7, #4]
 320 003c 4FF48063 		mov	r3, #1024
 321 0040 C4F20003 		movt	r3, 16384
 322 0044 9A42     		cmp	r2, r3
 323 0046 0DD0     		beq	.L17
 324              		.loc 1 294 0 is_stmt 0 discriminator 1
 325 0048 7A68     		ldr	r2, [r7, #4]
 326 004a 4FF40063 		mov	r3, #2048
 327 004e C4F20003 		movt	r3, 16384
 328 0052 9A42     		cmp	r2, r3
 329 0054 06D0     		beq	.L17
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 330              		.loc 1 295 0 is_stmt 1
 331 0056 7A68     		ldr	r2, [r7, #4]
 332 0058 4FF44063 		mov	r3, #3072
 333 005c C4F20003 		movt	r3, 16384
 334 0060 9A42     		cmp	r2, r3
 335 0062 08D1     		bne	.L18
 336              	.L17:
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 337              		.loc 1 298 0
 338 0064 FB89     		ldrh	r3, [r7, #14]	@ movhi
 339 0066 23F07003 		bic	r3, r3, #112
 340 006a FB81     		strh	r3, [r7, #14]	@ movhi
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 341              		.loc 1 299 0
 342 006c 3B68     		ldr	r3, [r7, #0]
 343 006e 5A88     		ldrh	r2, [r3, #2]
 344 0070 FB89     		ldrh	r3, [r7, #14]	@ movhi
 345 0072 1343     		orrs	r3, r3, r2
 346 0074 FB81     		strh	r3, [r7, #14]	@ movhi
 347              	.L18:
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 348              		.loc 1 302 0
 349 0076 7A68     		ldr	r2, [r7, #4]
 350 0078 4FF48053 		mov	r3, #4096
 351 007c C4F20003 		movt	r3, 16384
 352 0080 9A42     		cmp	r2, r3
 353 0082 0FD0     		beq	.L19
 354              		.loc 1 302 0 is_stmt 0 discriminator 1
 355 0084 7A68     		ldr	r2, [r7, #4]
 356 0086 4FF4A053 		mov	r3, #5120
 357 008a C4F20003 		movt	r3, 16384
 358 008e 9A42     		cmp	r2, r3
 359 0090 08D0     		beq	.L19
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 360              		.loc 1 305 0 is_stmt 1
 361 0092 FB89     		ldrh	r3, [r7, #14]	@ movhi
 362 0094 23F44073 		bic	r3, r3, #768
 363 0098 FB81     		strh	r3, [r7, #14]	@ movhi
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 364              		.loc 1 306 0
 365 009a 3B68     		ldr	r3, [r7, #0]
 366 009c 1A89     		ldrh	r2, [r3, #8]
 367 009e FB89     		ldrh	r3, [r7, #14]	@ movhi
 368 00a0 1343     		orrs	r3, r3, r2
 369 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 370              	.L19:
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 371              		.loc 1 309 0
 372 00a4 7B68     		ldr	r3, [r7, #4]
 373 00a6 FA89     		ldrh	r2, [r7, #14]	@ movhi
 374 00a8 1A80     		strh	r2, [r3, #0]	@ movhi
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 375              		.loc 1 312 0
 376 00aa 3B68     		ldr	r3, [r7, #0]
 377 00ac 5A68     		ldr	r2, [r3, #4]
 378 00ae 7B68     		ldr	r3, [r7, #4]
 379 00b0 DA62     		str	r2, [r3, #44]
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 380              		.loc 1 315 0
 381 00b2 3B68     		ldr	r3, [r7, #0]
 382 00b4 1A88     		ldrh	r2, [r3, #0]
 383 00b6 7B68     		ldr	r3, [r7, #4]
 384 00b8 1A85     		strh	r2, [r3, #40]	@ movhi
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 385              		.loc 1 317 0
 386 00ba 7A68     		ldr	r2, [r7, #4]
 387 00bc 4FF00003 		mov	r3, #0
 388 00c0 C4F20103 		movt	r3, 16385
 389 00c4 9A42     		cmp	r2, r3
 390 00c6 06D0     		beq	.L20
 391              		.loc 1 317 0 is_stmt 0 discriminator 1
 392 00c8 7A68     		ldr	r2, [r7, #4]
 393 00ca 4FF48063 		mov	r3, #1024
 394 00ce C4F20103 		movt	r3, 16385
 395 00d2 9A42     		cmp	r2, r3
 396 00d4 04D1     		bne	.L21
 397              	.L20:
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 398              		.loc 1 320 0 is_stmt 1
 399 00d6 3B68     		ldr	r3, [r7, #0]
 400 00d8 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 401 00da 1A46     		mov	r2, r3
 402 00dc 7B68     		ldr	r3, [r7, #4]
 403 00de 1A86     		strh	r2, [r3, #48]	@ movhi
 404              	.L21:
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 405              		.loc 1 325 0
 406 00e0 7B68     		ldr	r3, [r7, #4]
 407 00e2 4FF00102 		mov	r2, #1
 408 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 409              		.loc 1 326 0
 410 00e8 07F11407 		add	r7, r7, #20
 411 00ec BD46     		mov	sp, r7
 412 00ee 80BC     		pop	{r7}
 413 00f0 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE111:
 417 00f2 00BF     		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 418              		.align	2
 419              		.global	TIM_TimeBaseStructInit
 420              		.thumb
 421              		.thumb_func
 423              	TIM_TimeBaseStructInit:
 424              	.LFB112:
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 425              		.loc 1 335 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              	.LCFI6:
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 83B0     		sub	sp, sp, #12
 435              	.LCFI7:
 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              	.LCFI8:
 439              		.cfi_def_cfa_register 7
 440 0006 7860     		str	r0, [r7, #4]
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 441              		.loc 1 337 0
 442 0008 7B68     		ldr	r3, [r7, #4]
 443 000a 4FF0FF32 		mov	r2, #-1
 444 000e 5A60     		str	r2, [r3, #4]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 445              		.loc 1 338 0
 446 0010 7B68     		ldr	r3, [r7, #4]
 447 0012 4FF00002 		mov	r2, #0
 448 0016 1A80     		strh	r2, [r3, #0]	@ movhi
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 449              		.loc 1 339 0
 450 0018 7B68     		ldr	r3, [r7, #4]
 451 001a 4FF00002 		mov	r2, #0
 452 001e 1A81     		strh	r2, [r3, #8]	@ movhi
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 453              		.loc 1 340 0
 454 0020 7B68     		ldr	r3, [r7, #4]
 455 0022 4FF00002 		mov	r2, #0
 456 0026 5A80     		strh	r2, [r3, #2]	@ movhi
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 457              		.loc 1 341 0
 458 0028 7B68     		ldr	r3, [r7, #4]
 459 002a 4FF00002 		mov	r2, #0
 460 002e 9A72     		strb	r2, [r3, #10]
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 461              		.loc 1 342 0
 462 0030 07F10C07 		add	r7, r7, #12
 463 0034 BD46     		mov	sp, r7
 464 0036 80BC     		pop	{r7}
 465 0038 7047     		bx	lr
 466              		.cfi_endproc
 467              	.LFE112:
 469 003a 00BF     		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 470              		.align	2
 471              		.global	TIM_PrescalerConfig
 472              		.thumb
 473              		.thumb_func
 475              	TIM_PrescalerConfig:
 476              	.LFB113:
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 477              		.loc 1 355 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 8
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481              		@ link register save eliminated.
 482 0000 80B4     		push	{r7}
 483              	.LCFI9:
 484              		.cfi_def_cfa_offset 4
 485              		.cfi_offset 7, -4
 486 0002 83B0     		sub	sp, sp, #12
 487              	.LCFI10:
 488              		.cfi_def_cfa_offset 16
 489 0004 00AF     		add	r7, sp, #0
 490              	.LCFI11:
 491              		.cfi_def_cfa_register 7
 492 0006 7860     		str	r0, [r7, #4]
 493 0008 1346     		mov	r3, r2
 494 000a 0A46     		mov	r2, r1	@ movhi
 495 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 496 000e 3B80     		strh	r3, [r7, #0]	@ movhi
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 497              		.loc 1 360 0
 498 0010 7B68     		ldr	r3, [r7, #4]
 499 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
 500 0014 1A85     		strh	r2, [r3, #40]	@ movhi
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 501              		.loc 1 362 0
 502 0016 7B68     		ldr	r3, [r7, #4]
 503 0018 3A88     		ldrh	r2, [r7, #0]	@ movhi
 504 001a 9A82     		strh	r2, [r3, #20]	@ movhi
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 505              		.loc 1 363 0
 506 001c 07F10C07 		add	r7, r7, #12
 507 0020 BD46     		mov	sp, r7
 508 0022 80BC     		pop	{r7}
 509 0024 7047     		bx	lr
 510              		.cfi_endproc
 511              	.LFE113:
 513 0026 00BF     		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 514              		.align	2
 515              		.global	TIM_CounterModeConfig
 516              		.thumb
 517              		.thumb_func
 519              	TIM_CounterModeConfig:
 520              	.LFB114:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 521              		.loc 1 378 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 16
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526 0000 80B4     		push	{r7}
 527              	.LCFI12:
 528              		.cfi_def_cfa_offset 4
 529              		.cfi_offset 7, -4
 530 0002 85B0     		sub	sp, sp, #20
 531              	.LCFI13:
 532              		.cfi_def_cfa_offset 24
 533 0004 00AF     		add	r7, sp, #0
 534              	.LCFI14:
 535              		.cfi_def_cfa_register 7
 536 0006 7860     		str	r0, [r7, #4]
 537 0008 0B46     		mov	r3, r1
 538 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 539              		.loc 1 379 0
 540 000c 4FF00003 		mov	r3, #0
 541 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 542              		.loc 1 385 0
 543 0012 7B68     		ldr	r3, [r7, #4]
 544 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 545 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 546              		.loc 1 388 0
 547 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 548 001a 23F07003 		bic	r3, r3, #112
 549 001e FB81     		strh	r3, [r7, #14]	@ movhi
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 550              		.loc 1 391 0
 551 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 552 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 553 0024 1343     		orrs	r3, r3, r2
 554 0026 FB81     		strh	r3, [r7, #14]	@ movhi
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 555              		.loc 1 394 0
 556 0028 7B68     		ldr	r3, [r7, #4]
 557 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 558 002c 1A80     		strh	r2, [r3, #0]	@ movhi
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 559              		.loc 1 395 0
 560 002e 07F11407 		add	r7, r7, #20
 561 0032 BD46     		mov	sp, r7
 562 0034 80BC     		pop	{r7}
 563 0036 7047     		bx	lr
 564              		.cfi_endproc
 565              	.LFE114:
 567              		.section	.text.TIM_SetCounter,"ax",%progbits
 568              		.align	2
 569              		.global	TIM_SetCounter
 570              		.thumb
 571              		.thumb_func
 573              	TIM_SetCounter:
 574              	.LFB115:
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 575              		.loc 1 404 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 8
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580 0000 80B4     		push	{r7}
 581              	.LCFI15:
 582              		.cfi_def_cfa_offset 4
 583              		.cfi_offset 7, -4
 584 0002 83B0     		sub	sp, sp, #12
 585              	.LCFI16:
 586              		.cfi_def_cfa_offset 16
 587 0004 00AF     		add	r7, sp, #0
 588              	.LCFI17:
 589              		.cfi_def_cfa_register 7
 590 0006 7860     		str	r0, [r7, #4]
 591 0008 3960     		str	r1, [r7, #0]
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 592              		.loc 1 409 0
 593 000a 7B68     		ldr	r3, [r7, #4]
 594 000c 3A68     		ldr	r2, [r7, #0]
 595 000e 5A62     		str	r2, [r3, #36]
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 596              		.loc 1 410 0
 597 0010 07F10C07 		add	r7, r7, #12
 598 0014 BD46     		mov	sp, r7
 599 0016 80BC     		pop	{r7}
 600 0018 7047     		bx	lr
 601              		.cfi_endproc
 602              	.LFE115:
 604 001a 00BF     		.section	.text.TIM_SetAutoreload,"ax",%progbits
 605              		.align	2
 606              		.global	TIM_SetAutoreload
 607              		.thumb
 608              		.thumb_func
 610              	TIM_SetAutoreload:
 611              	.LFB116:
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 612              		.loc 1 419 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 8
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617 0000 80B4     		push	{r7}
 618              	.LCFI18:
 619              		.cfi_def_cfa_offset 4
 620              		.cfi_offset 7, -4
 621 0002 83B0     		sub	sp, sp, #12
 622              	.LCFI19:
 623              		.cfi_def_cfa_offset 16
 624 0004 00AF     		add	r7, sp, #0
 625              	.LCFI20:
 626              		.cfi_def_cfa_register 7
 627 0006 7860     		str	r0, [r7, #4]
 628 0008 3960     		str	r1, [r7, #0]
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 629              		.loc 1 424 0
 630 000a 7B68     		ldr	r3, [r7, #4]
 631 000c 3A68     		ldr	r2, [r7, #0]
 632 000e DA62     		str	r2, [r3, #44]
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 633              		.loc 1 425 0
 634 0010 07F10C07 		add	r7, r7, #12
 635 0014 BD46     		mov	sp, r7
 636 0016 80BC     		pop	{r7}
 637 0018 7047     		bx	lr
 638              		.cfi_endproc
 639              	.LFE116:
 641 001a 00BF     		.section	.text.TIM_GetCounter,"ax",%progbits
 642              		.align	2
 643              		.global	TIM_GetCounter
 644              		.thumb
 645              		.thumb_func
 647              	TIM_GetCounter:
 648              	.LFB117:
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 649              		.loc 1 433 0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 1, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 654 0000 80B4     		push	{r7}
 655              	.LCFI21:
 656              		.cfi_def_cfa_offset 4
 657              		.cfi_offset 7, -4
 658 0002 83B0     		sub	sp, sp, #12
 659              	.LCFI22:
 660              		.cfi_def_cfa_offset 16
 661 0004 00AF     		add	r7, sp, #0
 662              	.LCFI23:
 663              		.cfi_def_cfa_register 7
 664 0006 7860     		str	r0, [r7, #4]
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 665              		.loc 1 438 0
 666 0008 7B68     		ldr	r3, [r7, #4]
 667 000a 5B6A     		ldr	r3, [r3, #36]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 668              		.loc 1 439 0
 669 000c 1846     		mov	r0, r3
 670 000e 07F10C07 		add	r7, r7, #12
 671 0012 BD46     		mov	sp, r7
 672 0014 80BC     		pop	{r7}
 673 0016 7047     		bx	lr
 674              		.cfi_endproc
 675              	.LFE117:
 677              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 678              		.align	2
 679              		.global	TIM_GetPrescaler
 680              		.thumb
 681              		.thumb_func
 683              	TIM_GetPrescaler:
 684              	.LFB118:
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 685              		.loc 1 447 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 8
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690 0000 80B4     		push	{r7}
 691              	.LCFI24:
 692              		.cfi_def_cfa_offset 4
 693              		.cfi_offset 7, -4
 694 0002 83B0     		sub	sp, sp, #12
 695              	.LCFI25:
 696              		.cfi_def_cfa_offset 16
 697 0004 00AF     		add	r7, sp, #0
 698              	.LCFI26:
 699              		.cfi_def_cfa_register 7
 700 0006 7860     		str	r0, [r7, #4]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 701              		.loc 1 452 0
 702 0008 7B68     		ldr	r3, [r7, #4]
 703 000a 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 704 000c 9BB2     		uxth	r3, r3
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 705              		.loc 1 453 0
 706 000e 1846     		mov	r0, r3
 707 0010 07F10C07 		add	r7, r7, #12
 708 0014 BD46     		mov	sp, r7
 709 0016 80BC     		pop	{r7}
 710 0018 7047     		bx	lr
 711              		.cfi_endproc
 712              	.LFE118:
 714 001a 00BF     		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 715              		.align	2
 716              		.global	TIM_UpdateDisableConfig
 717              		.thumb
 718              		.thumb_func
 720              	TIM_UpdateDisableConfig:
 721              	.LFB119:
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 722              		.loc 1 463 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 8
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 727 0000 80B4     		push	{r7}
 728              	.LCFI27:
 729              		.cfi_def_cfa_offset 4
 730              		.cfi_offset 7, -4
 731 0002 83B0     		sub	sp, sp, #12
 732              	.LCFI28:
 733              		.cfi_def_cfa_offset 16
 734 0004 00AF     		add	r7, sp, #0
 735              	.LCFI29:
 736              		.cfi_def_cfa_register 7
 737 0006 7860     		str	r0, [r7, #4]
 738 0008 0B46     		mov	r3, r1
 739 000a FB70     		strb	r3, [r7, #3]
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 740              		.loc 1 468 0
 741 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 742 000e 002B     		cmp	r3, #0
 743 0010 08D0     		beq	.L30
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 744              		.loc 1 471 0
 745 0012 7B68     		ldr	r3, [r7, #4]
 746 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 747 0016 9BB2     		uxth	r3, r3
 748 0018 43F00203 		orr	r3, r3, #2
 749 001c 9AB2     		uxth	r2, r3
 750 001e 7B68     		ldr	r3, [r7, #4]
 751 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 752 0022 07E0     		b	.L29
 753              	.L30:
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 754              		.loc 1 476 0
 755 0024 7B68     		ldr	r3, [r7, #4]
 756 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 757 0028 9BB2     		uxth	r3, r3
 758 002a 23F00203 		bic	r3, r3, #2
 759 002e 9AB2     		uxth	r2, r3
 760 0030 7B68     		ldr	r3, [r7, #4]
 761 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 762              	.L29:
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 763              		.loc 1 478 0
 764 0034 07F10C07 		add	r7, r7, #12
 765 0038 BD46     		mov	sp, r7
 766 003a 80BC     		pop	{r7}
 767 003c 7047     		bx	lr
 768              		.cfi_endproc
 769              	.LFE119:
 771 003e 00BF     		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 772              		.align	2
 773              		.global	TIM_UpdateRequestConfig
 774              		.thumb
 775              		.thumb_func
 777              	TIM_UpdateRequestConfig:
 778              	.LFB120:
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is the counter
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 779              		.loc 1 492 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 8
 782              		@ frame_needed = 1, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 784 0000 80B4     		push	{r7}
 785              	.LCFI30:
 786              		.cfi_def_cfa_offset 4
 787              		.cfi_offset 7, -4
 788 0002 83B0     		sub	sp, sp, #12
 789              	.LCFI31:
 790              		.cfi_def_cfa_offset 16
 791 0004 00AF     		add	r7, sp, #0
 792              	.LCFI32:
 793              		.cfi_def_cfa_register 7
 794 0006 7860     		str	r0, [r7, #4]
 795 0008 0B46     		mov	r3, r1
 796 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 797              		.loc 1 497 0
 798 000c 7B88     		ldrh	r3, [r7, #2]
 799 000e 002B     		cmp	r3, #0
 800 0010 08D0     		beq	.L33
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 801              		.loc 1 500 0
 802 0012 7B68     		ldr	r3, [r7, #4]
 803 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 804 0016 9BB2     		uxth	r3, r3
 805 0018 43F00403 		orr	r3, r3, #4
 806 001c 9AB2     		uxth	r2, r3
 807 001e 7B68     		ldr	r3, [r7, #4]
 808 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 809 0022 07E0     		b	.L32
 810              	.L33:
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 811              		.loc 1 505 0
 812 0024 7B68     		ldr	r3, [r7, #4]
 813 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 814 0028 9BB2     		uxth	r3, r3
 815 002a 23F00403 		bic	r3, r3, #4
 816 002e 9AB2     		uxth	r2, r3
 817 0030 7B68     		ldr	r3, [r7, #4]
 818 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 819              	.L32:
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 820              		.loc 1 507 0
 821 0034 07F10C07 		add	r7, r7, #12
 822 0038 BD46     		mov	sp, r7
 823 003a 80BC     		pop	{r7}
 824 003c 7047     		bx	lr
 825              		.cfi_endproc
 826              	.LFE120:
 828 003e 00BF     		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 829              		.align	2
 830              		.global	TIM_ARRPreloadConfig
 831              		.thumb
 832              		.thumb_func
 834              	TIM_ARRPreloadConfig:
 835              	.LFB121:
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 836              		.loc 1 517 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 8
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 0000 80B4     		push	{r7}
 842              	.LCFI33:
 843              		.cfi_def_cfa_offset 4
 844              		.cfi_offset 7, -4
 845 0002 83B0     		sub	sp, sp, #12
 846              	.LCFI34:
 847              		.cfi_def_cfa_offset 16
 848 0004 00AF     		add	r7, sp, #0
 849              	.LCFI35:
 850              		.cfi_def_cfa_register 7
 851 0006 7860     		str	r0, [r7, #4]
 852 0008 0B46     		mov	r3, r1
 853 000a FB70     		strb	r3, [r7, #3]
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 854              		.loc 1 522 0
 855 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 856 000e 002B     		cmp	r3, #0
 857 0010 08D0     		beq	.L36
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 858              		.loc 1 525 0
 859 0012 7B68     		ldr	r3, [r7, #4]
 860 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 861 0016 9BB2     		uxth	r3, r3
 862 0018 43F08003 		orr	r3, r3, #128
 863 001c 9AB2     		uxth	r2, r3
 864 001e 7B68     		ldr	r3, [r7, #4]
 865 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 866 0022 07E0     		b	.L35
 867              	.L36:
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 868              		.loc 1 530 0
 869 0024 7B68     		ldr	r3, [r7, #4]
 870 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 871 0028 9BB2     		uxth	r3, r3
 872 002a 23F08003 		bic	r3, r3, #128
 873 002e 9AB2     		uxth	r2, r3
 874 0030 7B68     		ldr	r3, [r7, #4]
 875 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 876              	.L35:
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 877              		.loc 1 532 0
 878 0034 07F10C07 		add	r7, r7, #12
 879 0038 BD46     		mov	sp, r7
 880 003a 80BC     		pop	{r7}
 881 003c 7047     		bx	lr
 882              		.cfi_endproc
 883              	.LFE121:
 885 003e 00BF     		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 886              		.align	2
 887              		.global	TIM_SelectOnePulseMode
 888              		.thumb
 889              		.thumb_func
 891              	TIM_SelectOnePulseMode:
 892              	.LFB122:
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 893              		.loc 1 544 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 8
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897              		@ link register save eliminated.
 898 0000 80B4     		push	{r7}
 899              	.LCFI36:
 900              		.cfi_def_cfa_offset 4
 901              		.cfi_offset 7, -4
 902 0002 83B0     		sub	sp, sp, #12
 903              	.LCFI37:
 904              		.cfi_def_cfa_offset 16
 905 0004 00AF     		add	r7, sp, #0
 906              	.LCFI38:
 907              		.cfi_def_cfa_register 7
 908 0006 7860     		str	r0, [r7, #4]
 909 0008 0B46     		mov	r3, r1
 910 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 911              		.loc 1 550 0
 912 000c 7B68     		ldr	r3, [r7, #4]
 913 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 914 0010 9BB2     		uxth	r3, r3
 915 0012 23F00803 		bic	r3, r3, #8
 916 0016 9AB2     		uxth	r2, r3
 917 0018 7B68     		ldr	r3, [r7, #4]
 918 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 919              		.loc 1 553 0
 920 001c 7B68     		ldr	r3, [r7, #4]
 921 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 922 0020 9AB2     		uxth	r2, r3
 923 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 924 0024 1343     		orrs	r3, r3, r2
 925 0026 9AB2     		uxth	r2, r3
 926 0028 7B68     		ldr	r3, [r7, #4]
 927 002a 1A80     		strh	r2, [r3, #0]	@ movhi
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 928              		.loc 1 554 0
 929 002c 07F10C07 		add	r7, r7, #12
 930 0030 BD46     		mov	sp, r7
 931 0032 80BC     		pop	{r7}
 932 0034 7047     		bx	lr
 933              		.cfi_endproc
 934              	.LFE122:
 936 0036 00BF     		.section	.text.TIM_SetClockDivision,"ax",%progbits
 937              		.align	2
 938              		.global	TIM_SetClockDivision
 939              		.thumb
 940              		.thumb_func
 942              	TIM_SetClockDivision:
 943              	.LFB123:
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 944              		.loc 1 567 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 8
 947              		@ frame_needed = 1, uses_anonymous_args = 0
 948              		@ link register save eliminated.
 949 0000 80B4     		push	{r7}
 950              	.LCFI39:
 951              		.cfi_def_cfa_offset 4
 952              		.cfi_offset 7, -4
 953 0002 83B0     		sub	sp, sp, #12
 954              	.LCFI40:
 955              		.cfi_def_cfa_offset 16
 956 0004 00AF     		add	r7, sp, #0
 957              	.LCFI41:
 958              		.cfi_def_cfa_register 7
 959 0006 7860     		str	r0, [r7, #4]
 960 0008 0B46     		mov	r3, r1
 961 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 962              		.loc 1 573 0
 963 000c 7B68     		ldr	r3, [r7, #4]
 964 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 965 0010 9BB2     		uxth	r3, r3
 966 0012 23F44073 		bic	r3, r3, #768
 967 0016 9AB2     		uxth	r2, r3
 968 0018 7B68     		ldr	r3, [r7, #4]
 969 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 970              		.loc 1 576 0
 971 001c 7B68     		ldr	r3, [r7, #4]
 972 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 973 0020 9AB2     		uxth	r2, r3
 974 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 975 0024 1343     		orrs	r3, r3, r2
 976 0026 9AB2     		uxth	r2, r3
 977 0028 7B68     		ldr	r3, [r7, #4]
 978 002a 1A80     		strh	r2, [r3, #0]	@ movhi
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 979              		.loc 1 577 0
 980 002c 07F10C07 		add	r7, r7, #12
 981 0030 BD46     		mov	sp, r7
 982 0032 80BC     		pop	{r7}
 983 0034 7047     		bx	lr
 984              		.cfi_endproc
 985              	.LFE123:
 987 0036 00BF     		.section	.text.TIM_Cmd,"ax",%progbits
 988              		.align	2
 989              		.global	TIM_Cmd
 990              		.thumb
 991              		.thumb_func
 993              	TIM_Cmd:
 994              	.LFB124:
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 995              		.loc 1 587 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 8
 998              		@ frame_needed = 1, uses_anonymous_args = 0
 999              		@ link register save eliminated.
 1000 0000 80B4     		push	{r7}
 1001              	.LCFI42:
 1002              		.cfi_def_cfa_offset 4
 1003              		.cfi_offset 7, -4
 1004 0002 83B0     		sub	sp, sp, #12
 1005              	.LCFI43:
 1006              		.cfi_def_cfa_offset 16
 1007 0004 00AF     		add	r7, sp, #0
 1008              	.LCFI44:
 1009              		.cfi_def_cfa_register 7
 1010 0006 7860     		str	r0, [r7, #4]
 1011 0008 0B46     		mov	r3, r1
 1012 000a FB70     		strb	r3, [r7, #3]
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 1013              		.loc 1 592 0
 1014 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1015 000e 002B     		cmp	r3, #0
 1016 0010 08D0     		beq	.L41
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1017              		.loc 1 595 0
 1018 0012 7B68     		ldr	r3, [r7, #4]
 1019 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1020 0016 9BB2     		uxth	r3, r3
 1021 0018 43F00103 		orr	r3, r3, #1
 1022 001c 9AB2     		uxth	r2, r3
 1023 001e 7B68     		ldr	r3, [r7, #4]
 1024 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 1025 0022 07E0     		b	.L40
 1026              	.L41:
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1027              		.loc 1 600 0
 1028 0024 7B68     		ldr	r3, [r7, #4]
 1029 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1030 0028 9BB2     		uxth	r3, r3
 1031 002a 23F00103 		bic	r3, r3, #1
 1032 002e 9AB2     		uxth	r2, r3
 1033 0030 7B68     		ldr	r3, [r7, #4]
 1034 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 1035              	.L40:
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1036              		.loc 1 602 0
 1037 0034 07F10C07 		add	r7, r7, #12
 1038 0038 BD46     		mov	sp, r7
 1039 003a 80BC     		pop	{r7}
 1040 003c 7047     		bx	lr
 1041              		.cfi_endproc
 1042              	.LFE124:
 1044 003e 00BF     		.section	.text.TIM_OC1Init,"ax",%progbits
 1045              		.align	2
 1046              		.global	TIM_OC1Init
 1047              		.thumb
 1048              		.thumb_func
 1050              	TIM_OC1Init:
 1051              	.LFB125:
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1052              		.loc 1 666 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 16
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056              		@ link register save eliminated.
 1057 0000 80B4     		push	{r7}
 1058              	.LCFI45:
 1059              		.cfi_def_cfa_offset 4
 1060              		.cfi_offset 7, -4
 1061 0002 85B0     		sub	sp, sp, #20
 1062              	.LCFI46:
 1063              		.cfi_def_cfa_offset 24
 1064 0004 00AF     		add	r7, sp, #0
 1065              	.LCFI47:
 1066              		.cfi_def_cfa_register 7
 1067 0006 7860     		str	r0, [r7, #4]
 1068 0008 3960     		str	r1, [r7, #0]
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1069              		.loc 1 667 0
 1070 000a 4FF00003 		mov	r3, #0
 1071 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1072 0010 4FF00003 		mov	r3, #0
 1073 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 1074 0016 4FF00003 		mov	r3, #0
 1075 001a BB81     		strh	r3, [r7, #12]	@ movhi
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 1076              		.loc 1 676 0
 1077 001c 7B68     		ldr	r3, [r7, #4]
 1078 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1079 0020 9BB2     		uxth	r3, r3
 1080 0022 23F00103 		bic	r3, r3, #1
 1081 0026 9AB2     		uxth	r2, r3
 1082 0028 7B68     		ldr	r3, [r7, #4]
 1083 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1084              		.loc 1 679 0
 1085 002c 7B68     		ldr	r3, [r7, #4]
 1086 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1087 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1088              		.loc 1 681 0
 1089 0032 7B68     		ldr	r3, [r7, #4]
 1090 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1091 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1092              		.loc 1 684 0
 1093 0038 7B68     		ldr	r3, [r7, #4]
 1094 003a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1095 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 1096              		.loc 1 687 0
 1097 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1098 0040 23F07003 		bic	r3, r3, #112
 1099 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 1100              		.loc 1 688 0
 1101 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1102 0048 23F00303 		bic	r3, r3, #3
 1103 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1104              		.loc 1 690 0
 1105 004e 3B68     		ldr	r3, [r7, #0]
 1106 0050 1A88     		ldrh	r2, [r3, #0]
 1107 0052 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1108 0054 1343     		orrs	r3, r3, r2
 1109 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 1110              		.loc 1 693 0
 1111 0058 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1112 005a 23F00203 		bic	r3, r3, #2
 1113 005e FB81     		strh	r3, [r7, #14]	@ movhi
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1114              		.loc 1 695 0
 1115 0060 3B68     		ldr	r3, [r7, #0]
 1116 0062 9A89     		ldrh	r2, [r3, #12]
 1117 0064 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1118 0066 1343     		orrs	r3, r3, r2
 1119 0068 FB81     		strh	r3, [r7, #14]	@ movhi
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1120              		.loc 1 698 0
 1121 006a 3B68     		ldr	r3, [r7, #0]
 1122 006c 5A88     		ldrh	r2, [r3, #2]
 1123 006e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1124 0070 1343     		orrs	r3, r3, r2
 1125 0072 FB81     		strh	r3, [r7, #14]	@ movhi
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1126              		.loc 1 700 0
 1127 0074 7A68     		ldr	r2, [r7, #4]
 1128 0076 4FF00003 		mov	r3, #0
 1129 007a C4F20103 		movt	r3, 16385
 1130 007e 9A42     		cmp	r2, r3
 1131 0080 06D0     		beq	.L44
 1132              		.loc 1 700 0 is_stmt 0 discriminator 1
 1133 0082 7A68     		ldr	r2, [r7, #4]
 1134 0084 4FF48063 		mov	r3, #1024
 1135 0088 C4F20103 		movt	r3, 16385
 1136 008c 9A42     		cmp	r2, r3
 1137 008e 23D1     		bne	.L45
 1138              	.L44:
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 1139              		.loc 1 708 0 is_stmt 1
 1140 0090 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1141 0092 23F00803 		bic	r3, r3, #8
 1142 0096 FB81     		strh	r3, [r7, #14]	@ movhi
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1143              		.loc 1 710 0
 1144 0098 3B68     		ldr	r3, [r7, #0]
 1145 009a DA89     		ldrh	r2, [r3, #14]
 1146 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1147 009e 1343     		orrs	r3, r3, r2
 1148 00a0 FB81     		strh	r3, [r7, #14]	@ movhi
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 1149              		.loc 1 712 0
 1150 00a2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1151 00a4 23F00403 		bic	r3, r3, #4
 1152 00a8 FB81     		strh	r3, [r7, #14]	@ movhi
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1153              		.loc 1 715 0
 1154 00aa 3B68     		ldr	r3, [r7, #0]
 1155 00ac 9A88     		ldrh	r2, [r3, #4]
 1156 00ae FB89     		ldrh	r3, [r7, #14]	@ movhi
 1157 00b0 1343     		orrs	r3, r3, r2
 1158 00b2 FB81     		strh	r3, [r7, #14]	@ movhi
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 1159              		.loc 1 717 0
 1160 00b4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1161 00b6 23F48073 		bic	r3, r3, #256
 1162 00ba BB81     		strh	r3, [r7, #12]	@ movhi
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 1163              		.loc 1 718 0
 1164 00bc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1165 00be 23F40073 		bic	r3, r3, #512
 1166 00c2 BB81     		strh	r3, [r7, #12]	@ movhi
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1167              		.loc 1 720 0
 1168 00c4 3B68     		ldr	r3, [r7, #0]
 1169 00c6 1A8A     		ldrh	r2, [r3, #16]
 1170 00c8 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1171 00ca 1343     		orrs	r3, r3, r2
 1172 00cc BB81     		strh	r3, [r7, #12]	@ movhi
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1173              		.loc 1 722 0
 1174 00ce 3B68     		ldr	r3, [r7, #0]
 1175 00d0 5A8A     		ldrh	r2, [r3, #18]
 1176 00d2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1177 00d4 1343     		orrs	r3, r3, r2
 1178 00d6 BB81     		strh	r3, [r7, #12]	@ movhi
 1179              	.L45:
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1180              		.loc 1 725 0
 1181 00d8 7B68     		ldr	r3, [r7, #4]
 1182 00da BA89     		ldrh	r2, [r7, #12]	@ movhi
 1183 00dc 9A80     		strh	r2, [r3, #4]	@ movhi
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1184              		.loc 1 728 0
 1185 00de 7B68     		ldr	r3, [r7, #4]
 1186 00e0 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1187 00e2 1A83     		strh	r2, [r3, #24]	@ movhi
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1188              		.loc 1 731 0
 1189 00e4 3B68     		ldr	r3, [r7, #0]
 1190 00e6 9A68     		ldr	r2, [r3, #8]
 1191 00e8 7B68     		ldr	r3, [r7, #4]
 1192 00ea 5A63     		str	r2, [r3, #52]
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1193              		.loc 1 734 0
 1194 00ec 7B68     		ldr	r3, [r7, #4]
 1195 00ee FA89     		ldrh	r2, [r7, #14]	@ movhi
 1196 00f0 1A84     		strh	r2, [r3, #32]	@ movhi
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1197              		.loc 1 735 0
 1198 00f2 07F11407 		add	r7, r7, #20
 1199 00f6 BD46     		mov	sp, r7
 1200 00f8 80BC     		pop	{r7}
 1201 00fa 7047     		bx	lr
 1202              		.cfi_endproc
 1203              	.LFE125:
 1205              		.section	.text.TIM_OC2Init,"ax",%progbits
 1206              		.align	2
 1207              		.global	TIM_OC2Init
 1208              		.thumb
 1209              		.thumb_func
 1211              	TIM_OC2Init:
 1212              	.LFB126:
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1213              		.loc 1 747 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 16
 1216              		@ frame_needed = 1, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 1218 0000 80B4     		push	{r7}
 1219              	.LCFI48:
 1220              		.cfi_def_cfa_offset 4
 1221              		.cfi_offset 7, -4
 1222 0002 85B0     		sub	sp, sp, #20
 1223              	.LCFI49:
 1224              		.cfi_def_cfa_offset 24
 1225 0004 00AF     		add	r7, sp, #0
 1226              	.LCFI50:
 1227              		.cfi_def_cfa_register 7
 1228 0006 7860     		str	r0, [r7, #4]
 1229 0008 3960     		str	r1, [r7, #0]
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1230              		.loc 1 748 0
 1231 000a 4FF00003 		mov	r3, #0
 1232 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1233 0010 4FF00003 		mov	r3, #0
 1234 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 1235 0016 4FF00003 		mov	r3, #0
 1236 001a BB81     		strh	r3, [r7, #12]	@ movhi
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1237              		.loc 1 757 0
 1238 001c 7B68     		ldr	r3, [r7, #4]
 1239 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1240 0020 9BB2     		uxth	r3, r3
 1241 0022 23F01003 		bic	r3, r3, #16
 1242 0026 9AB2     		uxth	r2, r3
 1243 0028 7B68     		ldr	r3, [r7, #4]
 1244 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1245              		.loc 1 760 0
 1246 002c 7B68     		ldr	r3, [r7, #4]
 1247 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1248 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1249              		.loc 1 762 0
 1250 0032 7B68     		ldr	r3, [r7, #4]
 1251 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1252 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1253              		.loc 1 765 0
 1254 0038 7B68     		ldr	r3, [r7, #4]
 1255 003a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1256 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 1257              		.loc 1 768 0
 1258 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1259 0040 23F4E043 		bic	r3, r3, #28672
 1260 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1261              		.loc 1 769 0
 1262 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1263 0048 23F44073 		bic	r3, r3, #768
 1264 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1265              		.loc 1 772 0
 1266 004e 3B68     		ldr	r3, [r7, #0]
 1267 0050 1B88     		ldrh	r3, [r3, #0]
 1268 0052 4FEA0323 		lsl	r3, r3, #8
 1269 0056 9AB2     		uxth	r2, r3
 1270 0058 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1271 005a 1343     		orrs	r3, r3, r2
 1272 005c 7B81     		strh	r3, [r7, #10]	@ movhi
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1273              		.loc 1 775 0
 1274 005e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1275 0060 23F02003 		bic	r3, r3, #32
 1276 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1277              		.loc 1 777 0
 1278 0066 3B68     		ldr	r3, [r7, #0]
 1279 0068 9B89     		ldrh	r3, [r3, #12]
 1280 006a 4FEA0313 		lsl	r3, r3, #4
 1281 006e 9AB2     		uxth	r2, r3
 1282 0070 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1283 0072 1343     		orrs	r3, r3, r2
 1284 0074 FB81     		strh	r3, [r7, #14]	@ movhi
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1285              		.loc 1 780 0
 1286 0076 3B68     		ldr	r3, [r7, #0]
 1287 0078 5B88     		ldrh	r3, [r3, #2]
 1288 007a 4FEA0313 		lsl	r3, r3, #4
 1289 007e 9AB2     		uxth	r2, r3
 1290 0080 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1291 0082 1343     		orrs	r3, r3, r2
 1292 0084 FB81     		strh	r3, [r7, #14]	@ movhi
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1293              		.loc 1 782 0
 1294 0086 7A68     		ldr	r2, [r7, #4]
 1295 0088 4FF00003 		mov	r3, #0
 1296 008c C4F20103 		movt	r3, 16385
 1297 0090 9A42     		cmp	r2, r3
 1298 0092 06D0     		beq	.L47
 1299              		.loc 1 782 0 is_stmt 0 discriminator 1
 1300 0094 7A68     		ldr	r2, [r7, #4]
 1301 0096 4FF48063 		mov	r3, #1024
 1302 009a C4F20103 		movt	r3, 16385
 1303 009e 9A42     		cmp	r2, r3
 1304 00a0 2FD1     		bne	.L48
 1305              	.L47:
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1306              		.loc 1 790 0 is_stmt 1
 1307 00a2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1308 00a4 23F08003 		bic	r3, r3, #128
 1309 00a8 FB81     		strh	r3, [r7, #14]	@ movhi
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1310              		.loc 1 792 0
 1311 00aa 3B68     		ldr	r3, [r7, #0]
 1312 00ac DB89     		ldrh	r3, [r3, #14]
 1313 00ae 4FEA0313 		lsl	r3, r3, #4
 1314 00b2 9AB2     		uxth	r2, r3
 1315 00b4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1316 00b6 1343     		orrs	r3, r3, r2
 1317 00b8 FB81     		strh	r3, [r7, #14]	@ movhi
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1318              		.loc 1 794 0
 1319 00ba FB89     		ldrh	r3, [r7, #14]	@ movhi
 1320 00bc 23F04003 		bic	r3, r3, #64
 1321 00c0 FB81     		strh	r3, [r7, #14]	@ movhi
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1322              		.loc 1 797 0
 1323 00c2 3B68     		ldr	r3, [r7, #0]
 1324 00c4 9B88     		ldrh	r3, [r3, #4]
 1325 00c6 4FEA0313 		lsl	r3, r3, #4
 1326 00ca 9AB2     		uxth	r2, r3
 1327 00cc FB89     		ldrh	r3, [r7, #14]	@ movhi
 1328 00ce 1343     		orrs	r3, r3, r2
 1329 00d0 FB81     		strh	r3, [r7, #14]	@ movhi
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 1330              		.loc 1 799 0
 1331 00d2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1332 00d4 23F48063 		bic	r3, r3, #1024
 1333 00d8 BB81     		strh	r3, [r7, #12]	@ movhi
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1334              		.loc 1 800 0
 1335 00da BB89     		ldrh	r3, [r7, #12]	@ movhi
 1336 00dc 23F40063 		bic	r3, r3, #2048
 1337 00e0 BB81     		strh	r3, [r7, #12]	@ movhi
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1338              		.loc 1 802 0
 1339 00e2 3B68     		ldr	r3, [r7, #0]
 1340 00e4 1B8A     		ldrh	r3, [r3, #16]
 1341 00e6 4FEA8303 		lsl	r3, r3, #2
 1342 00ea 9AB2     		uxth	r2, r3
 1343 00ec BB89     		ldrh	r3, [r7, #12]	@ movhi
 1344 00ee 1343     		orrs	r3, r3, r2
 1345 00f0 BB81     		strh	r3, [r7, #12]	@ movhi
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1346              		.loc 1 804 0
 1347 00f2 3B68     		ldr	r3, [r7, #0]
 1348 00f4 5B8A     		ldrh	r3, [r3, #18]
 1349 00f6 4FEA8303 		lsl	r3, r3, #2
 1350 00fa 9AB2     		uxth	r2, r3
 1351 00fc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1352 00fe 1343     		orrs	r3, r3, r2
 1353 0100 BB81     		strh	r3, [r7, #12]	@ movhi
 1354              	.L48:
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1355              		.loc 1 807 0
 1356 0102 7B68     		ldr	r3, [r7, #4]
 1357 0104 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1358 0106 9A80     		strh	r2, [r3, #4]	@ movhi
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1359              		.loc 1 810 0
 1360 0108 7B68     		ldr	r3, [r7, #4]
 1361 010a 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1362 010c 1A83     		strh	r2, [r3, #24]	@ movhi
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1363              		.loc 1 813 0
 1364 010e 3B68     		ldr	r3, [r7, #0]
 1365 0110 9A68     		ldr	r2, [r3, #8]
 1366 0112 7B68     		ldr	r3, [r7, #4]
 1367 0114 9A63     		str	r2, [r3, #56]
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1368              		.loc 1 816 0
 1369 0116 7B68     		ldr	r3, [r7, #4]
 1370 0118 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1371 011a 1A84     		strh	r2, [r3, #32]	@ movhi
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1372              		.loc 1 817 0
 1373 011c 07F11407 		add	r7, r7, #20
 1374 0120 BD46     		mov	sp, r7
 1375 0122 80BC     		pop	{r7}
 1376 0124 7047     		bx	lr
 1377              		.cfi_endproc
 1378              	.LFE126:
 1380 0126 00BF     		.section	.text.TIM_OC3Init,"ax",%progbits
 1381              		.align	2
 1382              		.global	TIM_OC3Init
 1383              		.thumb
 1384              		.thumb_func
 1386              	TIM_OC3Init:
 1387              	.LFB127:
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1388              		.loc 1 828 0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 16
 1391              		@ frame_needed = 1, uses_anonymous_args = 0
 1392              		@ link register save eliminated.
 1393 0000 80B4     		push	{r7}
 1394              	.LCFI51:
 1395              		.cfi_def_cfa_offset 4
 1396              		.cfi_offset 7, -4
 1397 0002 85B0     		sub	sp, sp, #20
 1398              	.LCFI52:
 1399              		.cfi_def_cfa_offset 24
 1400 0004 00AF     		add	r7, sp, #0
 1401              	.LCFI53:
 1402              		.cfi_def_cfa_register 7
 1403 0006 7860     		str	r0, [r7, #4]
 1404 0008 3960     		str	r1, [r7, #0]
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1405              		.loc 1 829 0
 1406 000a 4FF00003 		mov	r3, #0
 1407 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 1408 0010 4FF00003 		mov	r3, #0
 1409 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 1410 0016 4FF00003 		mov	r3, #0
 1411 001a BB81     		strh	r3, [r7, #12]	@ movhi
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1412              		.loc 1 838 0
 1413 001c 7B68     		ldr	r3, [r7, #4]
 1414 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1415 0020 9BB2     		uxth	r3, r3
 1416 0022 23F48073 		bic	r3, r3, #256
 1417 0026 9AB2     		uxth	r2, r3
 1418 0028 7B68     		ldr	r3, [r7, #4]
 1419 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1420              		.loc 1 841 0
 1421 002c 7B68     		ldr	r3, [r7, #4]
 1422 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1423 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1424              		.loc 1 843 0
 1425 0032 7B68     		ldr	r3, [r7, #4]
 1426 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1427 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1428              		.loc 1 846 0
 1429 0038 7B68     		ldr	r3, [r7, #4]
 1430 003a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1431 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 1432              		.loc 1 849 0
 1433 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1434 0040 23F07003 		bic	r3, r3, #112
 1435 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1436              		.loc 1 850 0
 1437 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1438 0048 23F00303 		bic	r3, r3, #3
 1439 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1440              		.loc 1 852 0
 1441 004e 3B68     		ldr	r3, [r7, #0]
 1442 0050 1A88     		ldrh	r2, [r3, #0]
 1443 0052 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1444 0054 1343     		orrs	r3, r3, r2
 1445 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1446              		.loc 1 855 0
 1447 0058 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1448 005a 23F40073 		bic	r3, r3, #512
 1449 005e FB81     		strh	r3, [r7, #14]	@ movhi
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1450              		.loc 1 857 0
 1451 0060 3B68     		ldr	r3, [r7, #0]
 1452 0062 9B89     		ldrh	r3, [r3, #12]
 1453 0064 4FEA0323 		lsl	r3, r3, #8
 1454 0068 9AB2     		uxth	r2, r3
 1455 006a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1456 006c 1343     		orrs	r3, r3, r2
 1457 006e FB81     		strh	r3, [r7, #14]	@ movhi
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1458              		.loc 1 860 0
 1459 0070 3B68     		ldr	r3, [r7, #0]
 1460 0072 5B88     		ldrh	r3, [r3, #2]
 1461 0074 4FEA0323 		lsl	r3, r3, #8
 1462 0078 9AB2     		uxth	r2, r3
 1463 007a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1464 007c 1343     		orrs	r3, r3, r2
 1465 007e FB81     		strh	r3, [r7, #14]	@ movhi
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1466              		.loc 1 862 0
 1467 0080 7A68     		ldr	r2, [r7, #4]
 1468 0082 4FF00003 		mov	r3, #0
 1469 0086 C4F20103 		movt	r3, 16385
 1470 008a 9A42     		cmp	r2, r3
 1471 008c 06D0     		beq	.L50
 1472              		.loc 1 862 0 is_stmt 0 discriminator 1
 1473 008e 7A68     		ldr	r2, [r7, #4]
 1474 0090 4FF48063 		mov	r3, #1024
 1475 0094 C4F20103 		movt	r3, 16385
 1476 0098 9A42     		cmp	r2, r3
 1477 009a 2FD1     		bne	.L51
 1478              	.L50:
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1479              		.loc 1 870 0 is_stmt 1
 1480 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1481 009e 23F40063 		bic	r3, r3, #2048
 1482 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1483              		.loc 1 872 0
 1484 00a4 3B68     		ldr	r3, [r7, #0]
 1485 00a6 DB89     		ldrh	r3, [r3, #14]
 1486 00a8 4FEA0323 		lsl	r3, r3, #8
 1487 00ac 9AB2     		uxth	r2, r3
 1488 00ae FB89     		ldrh	r3, [r7, #14]	@ movhi
 1489 00b0 1343     		orrs	r3, r3, r2
 1490 00b2 FB81     		strh	r3, [r7, #14]	@ movhi
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1491              		.loc 1 874 0
 1492 00b4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1493 00b6 23F48063 		bic	r3, r3, #1024
 1494 00ba FB81     		strh	r3, [r7, #14]	@ movhi
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1495              		.loc 1 877 0
 1496 00bc 3B68     		ldr	r3, [r7, #0]
 1497 00be 9B88     		ldrh	r3, [r3, #4]
 1498 00c0 4FEA0323 		lsl	r3, r3, #8
 1499 00c4 9AB2     		uxth	r2, r3
 1500 00c6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1501 00c8 1343     		orrs	r3, r3, r2
 1502 00ca FB81     		strh	r3, [r7, #14]	@ movhi
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 1503              		.loc 1 879 0
 1504 00cc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1505 00ce 23F48053 		bic	r3, r3, #4096
 1506 00d2 BB81     		strh	r3, [r7, #12]	@ movhi
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1507              		.loc 1 880 0
 1508 00d4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1509 00d6 23F40053 		bic	r3, r3, #8192
 1510 00da BB81     		strh	r3, [r7, #12]	@ movhi
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1511              		.loc 1 882 0
 1512 00dc 3B68     		ldr	r3, [r7, #0]
 1513 00de 1B8A     		ldrh	r3, [r3, #16]
 1514 00e0 4FEA0313 		lsl	r3, r3, #4
 1515 00e4 9AB2     		uxth	r2, r3
 1516 00e6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1517 00e8 1343     		orrs	r3, r3, r2
 1518 00ea BB81     		strh	r3, [r7, #12]	@ movhi
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1519              		.loc 1 884 0
 1520 00ec 3B68     		ldr	r3, [r7, #0]
 1521 00ee 5B8A     		ldrh	r3, [r3, #18]
 1522 00f0 4FEA0313 		lsl	r3, r3, #4
 1523 00f4 9AB2     		uxth	r2, r3
 1524 00f6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1525 00f8 1343     		orrs	r3, r3, r2
 1526 00fa BB81     		strh	r3, [r7, #12]	@ movhi
 1527              	.L51:
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1528              		.loc 1 887 0
 1529 00fc 7B68     		ldr	r3, [r7, #4]
 1530 00fe BA89     		ldrh	r2, [r7, #12]	@ movhi
 1531 0100 9A80     		strh	r2, [r3, #4]	@ movhi
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1532              		.loc 1 890 0
 1533 0102 7B68     		ldr	r3, [r7, #4]
 1534 0104 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1535 0106 9A83     		strh	r2, [r3, #28]	@ movhi
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1536              		.loc 1 893 0
 1537 0108 3B68     		ldr	r3, [r7, #0]
 1538 010a 9A68     		ldr	r2, [r3, #8]
 1539 010c 7B68     		ldr	r3, [r7, #4]
 1540 010e DA63     		str	r2, [r3, #60]
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1541              		.loc 1 896 0
 1542 0110 7B68     		ldr	r3, [r7, #4]
 1543 0112 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1544 0114 1A84     		strh	r2, [r3, #32]	@ movhi
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1545              		.loc 1 897 0
 1546 0116 07F11407 		add	r7, r7, #20
 1547 011a BD46     		mov	sp, r7
 1548 011c 80BC     		pop	{r7}
 1549 011e 7047     		bx	lr
 1550              		.cfi_endproc
 1551              	.LFE127:
 1553              		.section	.text.TIM_OC4Init,"ax",%progbits
 1554              		.align	2
 1555              		.global	TIM_OC4Init
 1556              		.thumb
 1557              		.thumb_func
 1559              	TIM_OC4Init:
 1560              	.LFB128:
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1561              		.loc 1 908 0
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 16
 1564              		@ frame_needed = 1, uses_anonymous_args = 0
 1565              		@ link register save eliminated.
 1566 0000 80B4     		push	{r7}
 1567              	.LCFI54:
 1568              		.cfi_def_cfa_offset 4
 1569              		.cfi_offset 7, -4
 1570 0002 85B0     		sub	sp, sp, #20
 1571              	.LCFI55:
 1572              		.cfi_def_cfa_offset 24
 1573 0004 00AF     		add	r7, sp, #0
 1574              	.LCFI56:
 1575              		.cfi_def_cfa_register 7
 1576 0006 7860     		str	r0, [r7, #4]
 1577 0008 3960     		str	r1, [r7, #0]
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1578              		.loc 1 909 0
 1579 000a 4FF00003 		mov	r3, #0
 1580 000e BB81     		strh	r3, [r7, #12]	@ movhi
 1581 0010 4FF00003 		mov	r3, #0
 1582 0014 7B81     		strh	r3, [r7, #10]	@ movhi
 1583 0016 4FF00003 		mov	r3, #0
 1584 001a FB81     		strh	r3, [r7, #14]	@ movhi
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1585              		.loc 1 918 0
 1586 001c 7B68     		ldr	r3, [r7, #4]
 1587 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1588 0020 9BB2     		uxth	r3, r3
 1589 0022 23F48053 		bic	r3, r3, #4096
 1590 0026 9AB2     		uxth	r2, r3
 1591 0028 7B68     		ldr	r3, [r7, #4]
 1592 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1593              		.loc 1 921 0
 1594 002c 7B68     		ldr	r3, [r7, #4]
 1595 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1596 0030 7B81     		strh	r3, [r7, #10]	@ movhi
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1597              		.loc 1 923 0
 1598 0032 7B68     		ldr	r3, [r7, #4]
 1599 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1600 0036 FB81     		strh	r3, [r7, #14]	@ movhi
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1601              		.loc 1 926 0
 1602 0038 7B68     		ldr	r3, [r7, #4]
 1603 003a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1604 003c BB81     		strh	r3, [r7, #12]	@ movhi
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 1605              		.loc 1 929 0
 1606 003e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1607 0040 23F4E043 		bic	r3, r3, #28672
 1608 0044 BB81     		strh	r3, [r7, #12]	@ movhi
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1609              		.loc 1 930 0
 1610 0046 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1611 0048 23F44073 		bic	r3, r3, #768
 1612 004c BB81     		strh	r3, [r7, #12]	@ movhi
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1613              		.loc 1 933 0
 1614 004e 3B68     		ldr	r3, [r7, #0]
 1615 0050 1B88     		ldrh	r3, [r3, #0]
 1616 0052 4FEA0323 		lsl	r3, r3, #8
 1617 0056 9AB2     		uxth	r2, r3
 1618 0058 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1619 005a 1343     		orrs	r3, r3, r2
 1620 005c BB81     		strh	r3, [r7, #12]	@ movhi
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1621              		.loc 1 936 0
 1622 005e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1623 0060 23F40053 		bic	r3, r3, #8192
 1624 0064 7B81     		strh	r3, [r7, #10]	@ movhi
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1625              		.loc 1 938 0
 1626 0066 3B68     		ldr	r3, [r7, #0]
 1627 0068 9B89     		ldrh	r3, [r3, #12]
 1628 006a 4FEA0333 		lsl	r3, r3, #12
 1629 006e 9AB2     		uxth	r2, r3
 1630 0070 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1631 0072 1343     		orrs	r3, r3, r2
 1632 0074 7B81     		strh	r3, [r7, #10]	@ movhi
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1633              		.loc 1 941 0
 1634 0076 3B68     		ldr	r3, [r7, #0]
 1635 0078 5B88     		ldrh	r3, [r3, #2]
 1636 007a 4FEA0333 		lsl	r3, r3, #12
 1637 007e 9AB2     		uxth	r2, r3
 1638 0080 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1639 0082 1343     		orrs	r3, r3, r2
 1640 0084 7B81     		strh	r3, [r7, #10]	@ movhi
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1641              		.loc 1 943 0
 1642 0086 7A68     		ldr	r2, [r7, #4]
 1643 0088 4FF00003 		mov	r3, #0
 1644 008c C4F20103 		movt	r3, 16385
 1645 0090 9A42     		cmp	r2, r3
 1646 0092 06D0     		beq	.L53
 1647              		.loc 1 943 0 is_stmt 0 discriminator 1
 1648 0094 7A68     		ldr	r2, [r7, #4]
 1649 0096 4FF48063 		mov	r3, #1024
 1650 009a C4F20103 		movt	r3, 16385
 1651 009e 9A42     		cmp	r2, r3
 1652 00a0 0BD1     		bne	.L54
 1653              	.L53:
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1654              		.loc 1 947 0 is_stmt 1
 1655 00a2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1656 00a4 23F48043 		bic	r3, r3, #16384
 1657 00a8 FB81     		strh	r3, [r7, #14]	@ movhi
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1658              		.loc 1 949 0
 1659 00aa 3B68     		ldr	r3, [r7, #0]
 1660 00ac 1B8A     		ldrh	r3, [r3, #16]
 1661 00ae 4FEA8313 		lsl	r3, r3, #6
 1662 00b2 9AB2     		uxth	r2, r3
 1663 00b4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1664 00b6 1343     		orrs	r3, r3, r2
 1665 00b8 FB81     		strh	r3, [r7, #14]	@ movhi
 1666              	.L54:
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1667              		.loc 1 952 0
 1668 00ba 7B68     		ldr	r3, [r7, #4]
 1669 00bc FA89     		ldrh	r2, [r7, #14]	@ movhi
 1670 00be 9A80     		strh	r2, [r3, #4]	@ movhi
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1671              		.loc 1 955 0
 1672 00c0 7B68     		ldr	r3, [r7, #4]
 1673 00c2 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1674 00c4 9A83     		strh	r2, [r3, #28]	@ movhi
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1675              		.loc 1 958 0
 1676 00c6 3B68     		ldr	r3, [r7, #0]
 1677 00c8 9A68     		ldr	r2, [r3, #8]
 1678 00ca 7B68     		ldr	r3, [r7, #4]
 1679 00cc 1A64     		str	r2, [r3, #64]
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1680              		.loc 1 961 0
 1681 00ce 7B68     		ldr	r3, [r7, #4]
 1682 00d0 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1683 00d2 1A84     		strh	r2, [r3, #32]	@ movhi
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1684              		.loc 1 962 0
 1685 00d4 07F11407 		add	r7, r7, #20
 1686 00d8 BD46     		mov	sp, r7
 1687 00da 80BC     		pop	{r7}
 1688 00dc 7047     		bx	lr
 1689              		.cfi_endproc
 1690              	.LFE128:
 1692 00de 00BF     		.section	.text.TIM_OCStructInit,"ax",%progbits
 1693              		.align	2
 1694              		.global	TIM_OCStructInit
 1695              		.thumb
 1696              		.thumb_func
 1698              	TIM_OCStructInit:
 1699              	.LFB129:
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1700              		.loc 1 971 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 8
 1703              		@ frame_needed = 1, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
 1705 0000 80B4     		push	{r7}
 1706              	.LCFI57:
 1707              		.cfi_def_cfa_offset 4
 1708              		.cfi_offset 7, -4
 1709 0002 83B0     		sub	sp, sp, #12
 1710              	.LCFI58:
 1711              		.cfi_def_cfa_offset 16
 1712 0004 00AF     		add	r7, sp, #0
 1713              	.LCFI59:
 1714              		.cfi_def_cfa_register 7
 1715 0006 7860     		str	r0, [r7, #4]
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1716              		.loc 1 973 0
 1717 0008 7B68     		ldr	r3, [r7, #4]
 1718 000a 4FF00002 		mov	r2, #0
 1719 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1720              		.loc 1 974 0
 1721 0010 7B68     		ldr	r3, [r7, #4]
 1722 0012 4FF00002 		mov	r2, #0
 1723 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1724              		.loc 1 975 0
 1725 0018 7B68     		ldr	r3, [r7, #4]
 1726 001a 4FF00002 		mov	r2, #0
 1727 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1728              		.loc 1 976 0
 1729 0020 7B68     		ldr	r3, [r7, #4]
 1730 0022 4FF00002 		mov	r2, #0
 1731 0026 9A60     		str	r2, [r3, #8]
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1732              		.loc 1 977 0
 1733 0028 7B68     		ldr	r3, [r7, #4]
 1734 002a 4FF00002 		mov	r2, #0
 1735 002e 9A81     		strh	r2, [r3, #12]	@ movhi
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1736              		.loc 1 978 0
 1737 0030 7B68     		ldr	r3, [r7, #4]
 1738 0032 4FF00002 		mov	r2, #0
 1739 0036 DA81     		strh	r2, [r3, #14]	@ movhi
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1740              		.loc 1 979 0
 1741 0038 7B68     		ldr	r3, [r7, #4]
 1742 003a 4FF00002 		mov	r2, #0
 1743 003e 1A82     		strh	r2, [r3, #16]	@ movhi
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1744              		.loc 1 980 0
 1745 0040 7B68     		ldr	r3, [r7, #4]
 1746 0042 4FF00002 		mov	r2, #0
 1747 0046 5A82     		strh	r2, [r3, #18]	@ movhi
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1748              		.loc 1 981 0
 1749 0048 07F10C07 		add	r7, r7, #12
 1750 004c BD46     		mov	sp, r7
 1751 004e 80BC     		pop	{r7}
 1752 0050 7047     		bx	lr
 1753              		.cfi_endproc
 1754              	.LFE129:
 1756 0052 00BF     		.section	.text.TIM_SelectOCxM,"ax",%progbits
 1757              		.align	2
 1758              		.global	TIM_SelectOCxM
 1759              		.thumb
 1760              		.thumb_func
 1762              	TIM_SelectOCxM:
 1763              	.LFB130:
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1764              		.loc 1 1007 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 16
 1767              		@ frame_needed = 1, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
 1769 0000 80B4     		push	{r7}
 1770              	.LCFI60:
 1771              		.cfi_def_cfa_offset 4
 1772              		.cfi_offset 7, -4
 1773 0002 85B0     		sub	sp, sp, #20
 1774              	.LCFI61:
 1775              		.cfi_def_cfa_offset 24
 1776 0004 00AF     		add	r7, sp, #0
 1777              	.LCFI62:
 1778              		.cfi_def_cfa_register 7
 1779 0006 7860     		str	r0, [r7, #4]
 1780 0008 1346     		mov	r3, r2
 1781 000a 0A46     		mov	r2, r1	@ movhi
 1782 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1783 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 1784              		.loc 1 1008 0
 1785 0010 4FF00003 		mov	r3, #0
 1786 0014 FB60     		str	r3, [r7, #12]
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
 1787              		.loc 1 1009 0
 1788 0016 4FF00003 		mov	r3, #0
 1789 001a 7B81     		strh	r3, [r7, #10]	@ movhi
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
 1790              		.loc 1 1016 0
 1791 001c 7B68     		ldr	r3, [r7, #4]
 1792 001e FB60     		str	r3, [r7, #12]
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 1793              		.loc 1 1017 0
 1794 0020 FB68     		ldr	r3, [r7, #12]
 1795 0022 03F11803 		add	r3, r3, #24
 1796 0026 FB60     		str	r3, [r7, #12]
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1797              		.loc 1 1019 0
 1798 0028 7B88     		ldrh	r3, [r7, #2]
 1799 002a 4FF00102 		mov	r2, #1
 1800 002e 02FA03F3 		lsl	r3, r2, r3
 1801 0032 7B81     		strh	r3, [r7, #10]	@ movhi
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1802              		.loc 1 1022 0
 1803 0034 7B68     		ldr	r3, [r7, #4]
 1804 0036 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1805 0038 9AB2     		uxth	r2, r3
 1806 003a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1807 003c 6FEA0303 		mvn	r3, r3
 1808 0040 9BB2     		uxth	r3, r3
 1809 0042 1340     		ands	r3, r3, r2
 1810 0044 9AB2     		uxth	r2, r3
 1811 0046 7B68     		ldr	r3, [r7, #4]
 1812 0048 1A84     		strh	r2, [r3, #32]	@ movhi
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1813              		.loc 1 1024 0
 1814 004a 7B88     		ldrh	r3, [r7, #2]
 1815 004c 002B     		cmp	r3, #0
 1816 004e 02D0     		beq	.L57
 1817              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1818 0050 7B88     		ldrh	r3, [r7, #2]
 1819 0052 082B     		cmp	r3, #8
 1820 0054 14D1     		bne	.L58
 1821              	.L57:
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 1822              		.loc 1 1026 0 is_stmt 1
 1823 0056 7B88     		ldrh	r3, [r7, #2]
 1824 0058 4FEA5303 		lsr	r3, r3, #1
 1825 005c 9BB2     		uxth	r3, r3
 1826 005e FA68     		ldr	r2, [r7, #12]
 1827 0060 D318     		adds	r3, r2, r3
 1828 0062 FB60     		str	r3, [r7, #12]
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1829              		.loc 1 1029 0
 1830 0064 FA68     		ldr	r2, [r7, #12]
 1831 0066 FB68     		ldr	r3, [r7, #12]
 1832 0068 1968     		ldr	r1, [r3, #0]
 1833 006a 4FF68F73 		movw	r3, #65423
 1834 006e 0B40     		ands	r3, r3, r1
 1835 0070 1360     		str	r3, [r2, #0]
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1836              		.loc 1 1032 0
 1837 0072 FB68     		ldr	r3, [r7, #12]
 1838 0074 FA68     		ldr	r2, [r7, #12]
 1839 0076 1168     		ldr	r1, [r2, #0]
 1840 0078 3A88     		ldrh	r2, [r7, #0]
 1841 007a 0A43     		orrs	r2, r2, r1
 1842 007c 1A60     		str	r2, [r3, #0]
 1843 007e 19E0     		b	.L56
 1844              	.L58:
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1845              		.loc 1 1036 0
 1846 0080 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1847 0082 A3F10403 		sub	r3, r3, #4
 1848 0086 9BB2     		uxth	r3, r3
 1849 0088 4FEA5303 		lsr	r3, r3, #1
 1850 008c 9BB2     		uxth	r3, r3
 1851 008e FA68     		ldr	r2, [r7, #12]
 1852 0090 D318     		adds	r3, r2, r3
 1853 0092 FB60     		str	r3, [r7, #12]
1037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1854              		.loc 1 1039 0
 1855 0094 FA68     		ldr	r2, [r7, #12]
 1856 0096 FB68     		ldr	r3, [r7, #12]
 1857 0098 1968     		ldr	r1, [r3, #0]
 1858 009a 48F6FF73 		movw	r3, #36863
 1859 009e 0B40     		ands	r3, r3, r1
 1860 00a0 1360     		str	r3, [r2, #0]
1040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1861              		.loc 1 1042 0
 1862 00a2 FB68     		ldr	r3, [r7, #12]
 1863 00a4 FA68     		ldr	r2, [r7, #12]
 1864 00a6 1168     		ldr	r1, [r2, #0]
 1865 00a8 3A88     		ldrh	r2, [r7, #0]	@ movhi
 1866 00aa 4FEA0222 		lsl	r2, r2, #8
 1867 00ae 92B2     		uxth	r2, r2
 1868 00b0 0A43     		orrs	r2, r2, r1
 1869 00b2 1A60     		str	r2, [r3, #0]
 1870              	.L56:
1043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1871              		.loc 1 1044 0
 1872 00b4 07F11407 		add	r7, r7, #20
 1873 00b8 BD46     		mov	sp, r7
 1874 00ba 80BC     		pop	{r7}
 1875 00bc 7047     		bx	lr
 1876              		.cfi_endproc
 1877              	.LFE130:
 1879 00be 00BF     		.section	.text.TIM_SetCompare1,"ax",%progbits
 1880              		.align	2
 1881              		.global	TIM_SetCompare1
 1882              		.thumb
 1883              		.thumb_func
 1885              	TIM_SetCompare1:
 1886              	.LFB131:
1045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1887              		.loc 1 1053 0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 8
 1890              		@ frame_needed = 1, uses_anonymous_args = 0
 1891              		@ link register save eliminated.
 1892 0000 80B4     		push	{r7}
 1893              	.LCFI63:
 1894              		.cfi_def_cfa_offset 4
 1895              		.cfi_offset 7, -4
 1896 0002 83B0     		sub	sp, sp, #12
 1897              	.LCFI64:
 1898              		.cfi_def_cfa_offset 16
 1899 0004 00AF     		add	r7, sp, #0
 1900              	.LCFI65:
 1901              		.cfi_def_cfa_register 7
 1902 0006 7860     		str	r0, [r7, #4]
 1903 0008 3960     		str	r1, [r7, #0]
1054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 1904              		.loc 1 1058 0
 1905 000a 7B68     		ldr	r3, [r7, #4]
 1906 000c 3A68     		ldr	r2, [r7, #0]
 1907 000e 5A63     		str	r2, [r3, #52]
1059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1908              		.loc 1 1059 0
 1909 0010 07F10C07 		add	r7, r7, #12
 1910 0014 BD46     		mov	sp, r7
 1911 0016 80BC     		pop	{r7}
 1912 0018 7047     		bx	lr
 1913              		.cfi_endproc
 1914              	.LFE131:
 1916 001a 00BF     		.section	.text.TIM_SetCompare2,"ax",%progbits
 1917              		.align	2
 1918              		.global	TIM_SetCompare2
 1919              		.thumb
 1920              		.thumb_func
 1922              	TIM_SetCompare2:
 1923              	.LFB132:
1060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1924              		.loc 1 1069 0
 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 8
 1927              		@ frame_needed = 1, uses_anonymous_args = 0
 1928              		@ link register save eliminated.
 1929 0000 80B4     		push	{r7}
 1930              	.LCFI66:
 1931              		.cfi_def_cfa_offset 4
 1932              		.cfi_offset 7, -4
 1933 0002 83B0     		sub	sp, sp, #12
 1934              	.LCFI67:
 1935              		.cfi_def_cfa_offset 16
 1936 0004 00AF     		add	r7, sp, #0
 1937              	.LCFI68:
 1938              		.cfi_def_cfa_register 7
 1939 0006 7860     		str	r0, [r7, #4]
 1940 0008 3960     		str	r1, [r7, #0]
1070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 1941              		.loc 1 1074 0
 1942 000a 7B68     		ldr	r3, [r7, #4]
 1943 000c 3A68     		ldr	r2, [r7, #0]
 1944 000e 9A63     		str	r2, [r3, #56]
1075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1945              		.loc 1 1075 0
 1946 0010 07F10C07 		add	r7, r7, #12
 1947 0014 BD46     		mov	sp, r7
 1948 0016 80BC     		pop	{r7}
 1949 0018 7047     		bx	lr
 1950              		.cfi_endproc
 1951              	.LFE132:
 1953 001a 00BF     		.section	.text.TIM_SetCompare3,"ax",%progbits
 1954              		.align	2
 1955              		.global	TIM_SetCompare3
 1956              		.thumb
 1957              		.thumb_func
 1959              	TIM_SetCompare3:
 1960              	.LFB133:
1076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1961              		.loc 1 1084 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 8
 1964              		@ frame_needed = 1, uses_anonymous_args = 0
 1965              		@ link register save eliminated.
 1966 0000 80B4     		push	{r7}
 1967              	.LCFI69:
 1968              		.cfi_def_cfa_offset 4
 1969              		.cfi_offset 7, -4
 1970 0002 83B0     		sub	sp, sp, #12
 1971              	.LCFI70:
 1972              		.cfi_def_cfa_offset 16
 1973 0004 00AF     		add	r7, sp, #0
 1974              	.LCFI71:
 1975              		.cfi_def_cfa_register 7
 1976 0006 7860     		str	r0, [r7, #4]
 1977 0008 3960     		str	r1, [r7, #0]
1085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 1978              		.loc 1 1089 0
 1979 000a 7B68     		ldr	r3, [r7, #4]
 1980 000c 3A68     		ldr	r2, [r7, #0]
 1981 000e DA63     		str	r2, [r3, #60]
1090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1982              		.loc 1 1090 0
 1983 0010 07F10C07 		add	r7, r7, #12
 1984 0014 BD46     		mov	sp, r7
 1985 0016 80BC     		pop	{r7}
 1986 0018 7047     		bx	lr
 1987              		.cfi_endproc
 1988              	.LFE133:
 1990 001a 00BF     		.section	.text.TIM_SetCompare4,"ax",%progbits
 1991              		.align	2
 1992              		.global	TIM_SetCompare4
 1993              		.thumb
 1994              		.thumb_func
 1996              	TIM_SetCompare4:
 1997              	.LFB134:
1091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1998              		.loc 1 1099 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 8
 2001              		@ frame_needed = 1, uses_anonymous_args = 0
 2002              		@ link register save eliminated.
 2003 0000 80B4     		push	{r7}
 2004              	.LCFI72:
 2005              		.cfi_def_cfa_offset 4
 2006              		.cfi_offset 7, -4
 2007 0002 83B0     		sub	sp, sp, #12
 2008              	.LCFI73:
 2009              		.cfi_def_cfa_offset 16
 2010 0004 00AF     		add	r7, sp, #0
 2011              	.LCFI74:
 2012              		.cfi_def_cfa_register 7
 2013 0006 7860     		str	r0, [r7, #4]
 2014 0008 3960     		str	r1, [r7, #0]
1100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 2015              		.loc 1 1104 0
 2016 000a 7B68     		ldr	r3, [r7, #4]
 2017 000c 3A68     		ldr	r2, [r7, #0]
 2018 000e 1A64     		str	r2, [r3, #64]
1105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2019              		.loc 1 1105 0
 2020 0010 07F10C07 		add	r7, r7, #12
 2021 0014 BD46     		mov	sp, r7
 2022 0016 80BC     		pop	{r7}
 2023 0018 7047     		bx	lr
 2024              		.cfi_endproc
 2025              	.LFE134:
 2027 001a 00BF     		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 2028              		.align	2
 2029              		.global	TIM_ForcedOC1Config
 2030              		.thumb
 2031              		.thumb_func
 2033              	TIM_ForcedOC1Config:
 2034              	.LFB135:
1106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2035              		.loc 1 1117 0
 2036              		.cfi_startproc
 2037              		@ args = 0, pretend = 0, frame = 16
 2038              		@ frame_needed = 1, uses_anonymous_args = 0
 2039              		@ link register save eliminated.
 2040 0000 80B4     		push	{r7}
 2041              	.LCFI75:
 2042              		.cfi_def_cfa_offset 4
 2043              		.cfi_offset 7, -4
 2044 0002 85B0     		sub	sp, sp, #20
 2045              	.LCFI76:
 2046              		.cfi_def_cfa_offset 24
 2047 0004 00AF     		add	r7, sp, #0
 2048              	.LCFI77:
 2049              		.cfi_def_cfa_register 7
 2050 0006 7860     		str	r0, [r7, #4]
 2051 0008 0B46     		mov	r3, r1
 2052 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2053              		.loc 1 1118 0
 2054 000c 4FF00003 		mov	r3, #0
 2055 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2056              		.loc 1 1123 0
 2057 0012 7B68     		ldr	r3, [r7, #4]
 2058 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2059 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 2060              		.loc 1 1126 0
 2061 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2062 001a 23F07003 		bic	r3, r3, #112
 2063 001e FB81     		strh	r3, [r7, #14]	@ movhi
1127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 2064              		.loc 1 1129 0
 2065 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2066 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2067 0024 1343     		orrs	r3, r3, r2
 2068 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2069              		.loc 1 1132 0
 2070 0028 7B68     		ldr	r3, [r7, #4]
 2071 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2072 002c 1A83     		strh	r2, [r3, #24]	@ movhi
1133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2073              		.loc 1 1133 0
 2074 002e 07F11407 		add	r7, r7, #20
 2075 0032 BD46     		mov	sp, r7
 2076 0034 80BC     		pop	{r7}
 2077 0036 7047     		bx	lr
 2078              		.cfi_endproc
 2079              	.LFE135:
 2081              		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 2082              		.align	2
 2083              		.global	TIM_ForcedOC2Config
 2084              		.thumb
 2085              		.thumb_func
 2087              	TIM_ForcedOC2Config:
 2088              	.LFB136:
1134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2089              		.loc 1 1146 0
 2090              		.cfi_startproc
 2091              		@ args = 0, pretend = 0, frame = 16
 2092              		@ frame_needed = 1, uses_anonymous_args = 0
 2093              		@ link register save eliminated.
 2094 0000 80B4     		push	{r7}
 2095              	.LCFI78:
 2096              		.cfi_def_cfa_offset 4
 2097              		.cfi_offset 7, -4
 2098 0002 85B0     		sub	sp, sp, #20
 2099              	.LCFI79:
 2100              		.cfi_def_cfa_offset 24
 2101 0004 00AF     		add	r7, sp, #0
 2102              	.LCFI80:
 2103              		.cfi_def_cfa_register 7
 2104 0006 7860     		str	r0, [r7, #4]
 2105 0008 0B46     		mov	r3, r1
 2106 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2107              		.loc 1 1147 0
 2108 000c 4FF00003 		mov	r3, #0
 2109 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2110              		.loc 1 1152 0
 2111 0012 7B68     		ldr	r3, [r7, #4]
 2112 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2113 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 2114              		.loc 1 1155 0
 2115 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2116 001a 23F4E043 		bic	r3, r3, #28672
 2117 001e FB81     		strh	r3, [r7, #14]	@ movhi
1156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 2118              		.loc 1 1158 0
 2119 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2120 0022 4FEA0323 		lsl	r3, r3, #8
 2121 0026 9AB2     		uxth	r2, r3
 2122 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2123 002a 1343     		orrs	r3, r3, r2
 2124 002c FB81     		strh	r3, [r7, #14]	@ movhi
1159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2125              		.loc 1 1161 0
 2126 002e 7B68     		ldr	r3, [r7, #4]
 2127 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2128 0032 1A83     		strh	r2, [r3, #24]	@ movhi
1162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2129              		.loc 1 1162 0
 2130 0034 07F11407 		add	r7, r7, #20
 2131 0038 BD46     		mov	sp, r7
 2132 003a 80BC     		pop	{r7}
 2133 003c 7047     		bx	lr
 2134              		.cfi_endproc
 2135              	.LFE136:
 2137 003e 00BF     		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 2138              		.align	2
 2139              		.global	TIM_ForcedOC3Config
 2140              		.thumb
 2141              		.thumb_func
 2143              	TIM_ForcedOC3Config:
 2144              	.LFB137:
1163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2145              		.loc 1 1174 0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 16
 2148              		@ frame_needed = 1, uses_anonymous_args = 0
 2149              		@ link register save eliminated.
 2150 0000 80B4     		push	{r7}
 2151              	.LCFI81:
 2152              		.cfi_def_cfa_offset 4
 2153              		.cfi_offset 7, -4
 2154 0002 85B0     		sub	sp, sp, #20
 2155              	.LCFI82:
 2156              		.cfi_def_cfa_offset 24
 2157 0004 00AF     		add	r7, sp, #0
 2158              	.LCFI83:
 2159              		.cfi_def_cfa_register 7
 2160 0006 7860     		str	r0, [r7, #4]
 2161 0008 0B46     		mov	r3, r1
 2162 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2163              		.loc 1 1175 0
 2164 000c 4FF00003 		mov	r3, #0
 2165 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2166              		.loc 1 1181 0
 2167 0012 7B68     		ldr	r3, [r7, #4]
 2168 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2169 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 2170              		.loc 1 1184 0
 2171 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2172 001a 23F07003 		bic	r3, r3, #112
 2173 001e FB81     		strh	r3, [r7, #14]	@ movhi
1185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 2174              		.loc 1 1187 0
 2175 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2176 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2177 0024 1343     		orrs	r3, r3, r2
 2178 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2179              		.loc 1 1190 0
 2180 0028 7B68     		ldr	r3, [r7, #4]
 2181 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2182 002c 9A83     		strh	r2, [r3, #28]	@ movhi
1191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2183              		.loc 1 1191 0
 2184 002e 07F11407 		add	r7, r7, #20
 2185 0032 BD46     		mov	sp, r7
 2186 0034 80BC     		pop	{r7}
 2187 0036 7047     		bx	lr
 2188              		.cfi_endproc
 2189              	.LFE137:
 2191              		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 2192              		.align	2
 2193              		.global	TIM_ForcedOC4Config
 2194              		.thumb
 2195              		.thumb_func
 2197              	TIM_ForcedOC4Config:
 2198              	.LFB138:
1192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2199              		.loc 1 1203 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 16
 2202              		@ frame_needed = 1, uses_anonymous_args = 0
 2203              		@ link register save eliminated.
 2204 0000 80B4     		push	{r7}
 2205              	.LCFI84:
 2206              		.cfi_def_cfa_offset 4
 2207              		.cfi_offset 7, -4
 2208 0002 85B0     		sub	sp, sp, #20
 2209              	.LCFI85:
 2210              		.cfi_def_cfa_offset 24
 2211 0004 00AF     		add	r7, sp, #0
 2212              	.LCFI86:
 2213              		.cfi_def_cfa_register 7
 2214 0006 7860     		str	r0, [r7, #4]
 2215 0008 0B46     		mov	r3, r1
 2216 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2217              		.loc 1 1204 0
 2218 000c 4FF00003 		mov	r3, #0
 2219 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2220              		.loc 1 1209 0
 2221 0012 7B68     		ldr	r3, [r7, #4]
 2222 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2223 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 2224              		.loc 1 1212 0
 2225 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2226 001a 23F4E043 		bic	r3, r3, #28672
 2227 001e FB81     		strh	r3, [r7, #14]	@ movhi
1213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 2228              		.loc 1 1215 0
 2229 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2230 0022 4FEA0323 		lsl	r3, r3, #8
 2231 0026 9AB2     		uxth	r2, r3
 2232 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2233 002a 1343     		orrs	r3, r3, r2
 2234 002c FB81     		strh	r3, [r7, #14]	@ movhi
1216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2235              		.loc 1 1218 0
 2236 002e 7B68     		ldr	r3, [r7, #4]
 2237 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2238 0032 9A83     		strh	r2, [r3, #28]	@ movhi
1219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2239              		.loc 1 1219 0
 2240 0034 07F11407 		add	r7, r7, #20
 2241 0038 BD46     		mov	sp, r7
 2242 003a 80BC     		pop	{r7}
 2243 003c 7047     		bx	lr
 2244              		.cfi_endproc
 2245              	.LFE138:
 2247 003e 00BF     		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2248              		.align	2
 2249              		.global	TIM_OC1PreloadConfig
 2250              		.thumb
 2251              		.thumb_func
 2253              	TIM_OC1PreloadConfig:
 2254              	.LFB139:
1220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2255              		.loc 1 1231 0
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 16
 2258              		@ frame_needed = 1, uses_anonymous_args = 0
 2259              		@ link register save eliminated.
 2260 0000 80B4     		push	{r7}
 2261              	.LCFI87:
 2262              		.cfi_def_cfa_offset 4
 2263              		.cfi_offset 7, -4
 2264 0002 85B0     		sub	sp, sp, #20
 2265              	.LCFI88:
 2266              		.cfi_def_cfa_offset 24
 2267 0004 00AF     		add	r7, sp, #0
 2268              	.LCFI89:
 2269              		.cfi_def_cfa_register 7
 2270 0006 7860     		str	r0, [r7, #4]
 2271 0008 0B46     		mov	r3, r1
 2272 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2273              		.loc 1 1232 0
 2274 000c 4FF00003 		mov	r3, #0
 2275 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2276              		.loc 1 1238 0
 2277 0012 7B68     		ldr	r3, [r7, #4]
 2278 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2279 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 2280              		.loc 1 1241 0
 2281 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2282 001a 23F00803 		bic	r3, r3, #8
 2283 001e FB81     		strh	r3, [r7, #14]	@ movhi
1242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2284              		.loc 1 1244 0
 2285 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2286 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2287 0024 1343     		orrs	r3, r3, r2
 2288 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2289              		.loc 1 1247 0
 2290 0028 7B68     		ldr	r3, [r7, #4]
 2291 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2292 002c 1A83     		strh	r2, [r3, #24]	@ movhi
1248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2293              		.loc 1 1248 0
 2294 002e 07F11407 		add	r7, r7, #20
 2295 0032 BD46     		mov	sp, r7
 2296 0034 80BC     		pop	{r7}
 2297 0036 7047     		bx	lr
 2298              		.cfi_endproc
 2299              	.LFE139:
 2301              		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2302              		.align	2
 2303              		.global	TIM_OC2PreloadConfig
 2304              		.thumb
 2305              		.thumb_func
 2307              	TIM_OC2PreloadConfig:
 2308              	.LFB140:
1249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2309              		.loc 1 1261 0
 2310              		.cfi_startproc
 2311              		@ args = 0, pretend = 0, frame = 16
 2312              		@ frame_needed = 1, uses_anonymous_args = 0
 2313              		@ link register save eliminated.
 2314 0000 80B4     		push	{r7}
 2315              	.LCFI90:
 2316              		.cfi_def_cfa_offset 4
 2317              		.cfi_offset 7, -4
 2318 0002 85B0     		sub	sp, sp, #20
 2319              	.LCFI91:
 2320              		.cfi_def_cfa_offset 24
 2321 0004 00AF     		add	r7, sp, #0
 2322              	.LCFI92:
 2323              		.cfi_def_cfa_register 7
 2324 0006 7860     		str	r0, [r7, #4]
 2325 0008 0B46     		mov	r3, r1
 2326 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2327              		.loc 1 1262 0
 2328 000c 4FF00003 		mov	r3, #0
 2329 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2330              		.loc 1 1268 0
 2331 0012 7B68     		ldr	r3, [r7, #4]
 2332 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2333 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 2334              		.loc 1 1271 0
 2335 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2336 001a 23F40063 		bic	r3, r3, #2048
 2337 001e FB81     		strh	r3, [r7, #14]	@ movhi
1272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 2338              		.loc 1 1274 0
 2339 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2340 0022 4FEA0323 		lsl	r3, r3, #8
 2341 0026 9AB2     		uxth	r2, r3
 2342 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2343 002a 1343     		orrs	r3, r3, r2
 2344 002c FB81     		strh	r3, [r7, #14]	@ movhi
1275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2345              		.loc 1 1277 0
 2346 002e 7B68     		ldr	r3, [r7, #4]
 2347 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2348 0032 1A83     		strh	r2, [r3, #24]	@ movhi
1278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2349              		.loc 1 1278 0
 2350 0034 07F11407 		add	r7, r7, #20
 2351 0038 BD46     		mov	sp, r7
 2352 003a 80BC     		pop	{r7}
 2353 003c 7047     		bx	lr
 2354              		.cfi_endproc
 2355              	.LFE140:
 2357 003e 00BF     		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2358              		.align	2
 2359              		.global	TIM_OC3PreloadConfig
 2360              		.thumb
 2361              		.thumb_func
 2363              	TIM_OC3PreloadConfig:
 2364              	.LFB141:
1279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2365              		.loc 1 1290 0
 2366              		.cfi_startproc
 2367              		@ args = 0, pretend = 0, frame = 16
 2368              		@ frame_needed = 1, uses_anonymous_args = 0
 2369              		@ link register save eliminated.
 2370 0000 80B4     		push	{r7}
 2371              	.LCFI93:
 2372              		.cfi_def_cfa_offset 4
 2373              		.cfi_offset 7, -4
 2374 0002 85B0     		sub	sp, sp, #20
 2375              	.LCFI94:
 2376              		.cfi_def_cfa_offset 24
 2377 0004 00AF     		add	r7, sp, #0
 2378              	.LCFI95:
 2379              		.cfi_def_cfa_register 7
 2380 0006 7860     		str	r0, [r7, #4]
 2381 0008 0B46     		mov	r3, r1
 2382 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2383              		.loc 1 1291 0
 2384 000c 4FF00003 		mov	r3, #0
 2385 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2386              		.loc 1 1297 0
 2387 0012 7B68     		ldr	r3, [r7, #4]
 2388 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2389 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 2390              		.loc 1 1300 0
 2391 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2392 001a 23F00803 		bic	r3, r3, #8
 2393 001e FB81     		strh	r3, [r7, #14]	@ movhi
1301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2394              		.loc 1 1303 0
 2395 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2396 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2397 0024 1343     		orrs	r3, r3, r2
 2398 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2399              		.loc 1 1306 0
 2400 0028 7B68     		ldr	r3, [r7, #4]
 2401 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2402 002c 9A83     		strh	r2, [r3, #28]	@ movhi
1307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2403              		.loc 1 1307 0
 2404 002e 07F11407 		add	r7, r7, #20
 2405 0032 BD46     		mov	sp, r7
 2406 0034 80BC     		pop	{r7}
 2407 0036 7047     		bx	lr
 2408              		.cfi_endproc
 2409              	.LFE141:
 2411              		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 2412              		.align	2
 2413              		.global	TIM_OC4PreloadConfig
 2414              		.thumb
 2415              		.thumb_func
 2417              	TIM_OC4PreloadConfig:
 2418              	.LFB142:
1308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2419              		.loc 1 1319 0
 2420              		.cfi_startproc
 2421              		@ args = 0, pretend = 0, frame = 16
 2422              		@ frame_needed = 1, uses_anonymous_args = 0
 2423              		@ link register save eliminated.
 2424 0000 80B4     		push	{r7}
 2425              	.LCFI96:
 2426              		.cfi_def_cfa_offset 4
 2427              		.cfi_offset 7, -4
 2428 0002 85B0     		sub	sp, sp, #20
 2429              	.LCFI97:
 2430              		.cfi_def_cfa_offset 24
 2431 0004 00AF     		add	r7, sp, #0
 2432              	.LCFI98:
 2433              		.cfi_def_cfa_register 7
 2434 0006 7860     		str	r0, [r7, #4]
 2435 0008 0B46     		mov	r3, r1
 2436 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2437              		.loc 1 1320 0
 2438 000c 4FF00003 		mov	r3, #0
 2439 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2440              		.loc 1 1326 0
 2441 0012 7B68     		ldr	r3, [r7, #4]
 2442 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2443 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 2444              		.loc 1 1329 0
 2445 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2446 001a 23F40063 		bic	r3, r3, #2048
 2447 001e FB81     		strh	r3, [r7, #14]	@ movhi
1330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 2448              		.loc 1 1332 0
 2449 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2450 0022 4FEA0323 		lsl	r3, r3, #8
 2451 0026 9AB2     		uxth	r2, r3
 2452 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2453 002a 1343     		orrs	r3, r3, r2
 2454 002c FB81     		strh	r3, [r7, #14]	@ movhi
1333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2455              		.loc 1 1335 0
 2456 002e 7B68     		ldr	r3, [r7, #4]
 2457 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2458 0032 9A83     		strh	r2, [r3, #28]	@ movhi
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2459              		.loc 1 1336 0
 2460 0034 07F11407 		add	r7, r7, #20
 2461 0038 BD46     		mov	sp, r7
 2462 003a 80BC     		pop	{r7}
 2463 003c 7047     		bx	lr
 2464              		.cfi_endproc
 2465              	.LFE142:
 2467 003e 00BF     		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2468              		.align	2
 2469              		.global	TIM_OC1FastConfig
 2470              		.thumb
 2471              		.thumb_func
 2473              	TIM_OC1FastConfig:
 2474              	.LFB143:
1337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2475              		.loc 1 1348 0
 2476              		.cfi_startproc
 2477              		@ args = 0, pretend = 0, frame = 16
 2478              		@ frame_needed = 1, uses_anonymous_args = 0
 2479              		@ link register save eliminated.
 2480 0000 80B4     		push	{r7}
 2481              	.LCFI99:
 2482              		.cfi_def_cfa_offset 4
 2483              		.cfi_offset 7, -4
 2484 0002 85B0     		sub	sp, sp, #20
 2485              	.LCFI100:
 2486              		.cfi_def_cfa_offset 24
 2487 0004 00AF     		add	r7, sp, #0
 2488              	.LCFI101:
 2489              		.cfi_def_cfa_register 7
 2490 0006 7860     		str	r0, [r7, #4]
 2491 0008 0B46     		mov	r3, r1
 2492 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2493              		.loc 1 1349 0
 2494 000c 4FF00003 		mov	r3, #0
 2495 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2496              		.loc 1 1356 0
 2497 0012 7B68     		ldr	r3, [r7, #4]
 2498 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2499 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 2500              		.loc 1 1359 0
 2501 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2502 001a 23F00403 		bic	r3, r3, #4
 2503 001e FB81     		strh	r3, [r7, #14]	@ movhi
1360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 2504              		.loc 1 1362 0
 2505 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2506 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2507 0024 1343     		orrs	r3, r3, r2
 2508 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2509              		.loc 1 1365 0
 2510 0028 7B68     		ldr	r3, [r7, #4]
 2511 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2512 002c 1A83     		strh	r2, [r3, #24]	@ movhi
1366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2513              		.loc 1 1366 0
 2514 002e 07F11407 		add	r7, r7, #20
 2515 0032 BD46     		mov	sp, r7
 2516 0034 80BC     		pop	{r7}
 2517 0036 7047     		bx	lr
 2518              		.cfi_endproc
 2519              	.LFE143:
 2521              		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2522              		.align	2
 2523              		.global	TIM_OC2FastConfig
 2524              		.thumb
 2525              		.thumb_func
 2527              	TIM_OC2FastConfig:
 2528              	.LFB144:
1367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2529              		.loc 1 1379 0
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 16
 2532              		@ frame_needed = 1, uses_anonymous_args = 0
 2533              		@ link register save eliminated.
 2534 0000 80B4     		push	{r7}
 2535              	.LCFI102:
 2536              		.cfi_def_cfa_offset 4
 2537              		.cfi_offset 7, -4
 2538 0002 85B0     		sub	sp, sp, #20
 2539              	.LCFI103:
 2540              		.cfi_def_cfa_offset 24
 2541 0004 00AF     		add	r7, sp, #0
 2542              	.LCFI104:
 2543              		.cfi_def_cfa_register 7
 2544 0006 7860     		str	r0, [r7, #4]
 2545 0008 0B46     		mov	r3, r1
 2546 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2547              		.loc 1 1380 0
 2548 000c 4FF00003 		mov	r3, #0
 2549 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2550              		.loc 1 1387 0
 2551 0012 7B68     		ldr	r3, [r7, #4]
 2552 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2553 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 2554              		.loc 1 1390 0
 2555 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2556 001a 23F48063 		bic	r3, r3, #1024
 2557 001e FB81     		strh	r3, [r7, #14]	@ movhi
1391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2558              		.loc 1 1393 0
 2559 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2560 0022 4FEA0323 		lsl	r3, r3, #8
 2561 0026 9AB2     		uxth	r2, r3
 2562 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2563 002a 1343     		orrs	r3, r3, r2
 2564 002c FB81     		strh	r3, [r7, #14]	@ movhi
1394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2565              		.loc 1 1396 0
 2566 002e 7B68     		ldr	r3, [r7, #4]
 2567 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2568 0032 1A83     		strh	r2, [r3, #24]	@ movhi
1397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2569              		.loc 1 1397 0
 2570 0034 07F11407 		add	r7, r7, #20
 2571 0038 BD46     		mov	sp, r7
 2572 003a 80BC     		pop	{r7}
 2573 003c 7047     		bx	lr
 2574              		.cfi_endproc
 2575              	.LFE144:
 2577 003e 00BF     		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2578              		.align	2
 2579              		.global	TIM_OC3FastConfig
 2580              		.thumb
 2581              		.thumb_func
 2583              	TIM_OC3FastConfig:
 2584              	.LFB145:
1398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2585              		.loc 1 1409 0
 2586              		.cfi_startproc
 2587              		@ args = 0, pretend = 0, frame = 16
 2588              		@ frame_needed = 1, uses_anonymous_args = 0
 2589              		@ link register save eliminated.
 2590 0000 80B4     		push	{r7}
 2591              	.LCFI105:
 2592              		.cfi_def_cfa_offset 4
 2593              		.cfi_offset 7, -4
 2594 0002 85B0     		sub	sp, sp, #20
 2595              	.LCFI106:
 2596              		.cfi_def_cfa_offset 24
 2597 0004 00AF     		add	r7, sp, #0
 2598              	.LCFI107:
 2599              		.cfi_def_cfa_register 7
 2600 0006 7860     		str	r0, [r7, #4]
 2601 0008 0B46     		mov	r3, r1
 2602 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2603              		.loc 1 1410 0
 2604 000c 4FF00003 		mov	r3, #0
 2605 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2606              		.loc 1 1417 0
 2607 0012 7B68     		ldr	r3, [r7, #4]
 2608 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2609 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 2610              		.loc 1 1420 0
 2611 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2612 001a 23F00403 		bic	r3, r3, #4
 2613 001e FB81     		strh	r3, [r7, #14]	@ movhi
1421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2614              		.loc 1 1423 0
 2615 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2616 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2617 0024 1343     		orrs	r3, r3, r2
 2618 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2619              		.loc 1 1426 0
 2620 0028 7B68     		ldr	r3, [r7, #4]
 2621 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2622 002c 9A83     		strh	r2, [r3, #28]	@ movhi
1427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2623              		.loc 1 1427 0
 2624 002e 07F11407 		add	r7, r7, #20
 2625 0032 BD46     		mov	sp, r7
 2626 0034 80BC     		pop	{r7}
 2627 0036 7047     		bx	lr
 2628              		.cfi_endproc
 2629              	.LFE145:
 2631              		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2632              		.align	2
 2633              		.global	TIM_OC4FastConfig
 2634              		.thumb
 2635              		.thumb_func
 2637              	TIM_OC4FastConfig:
 2638              	.LFB146:
1428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2639              		.loc 1 1439 0
 2640              		.cfi_startproc
 2641              		@ args = 0, pretend = 0, frame = 16
 2642              		@ frame_needed = 1, uses_anonymous_args = 0
 2643              		@ link register save eliminated.
 2644 0000 80B4     		push	{r7}
 2645              	.LCFI108:
 2646              		.cfi_def_cfa_offset 4
 2647              		.cfi_offset 7, -4
 2648 0002 85B0     		sub	sp, sp, #20
 2649              	.LCFI109:
 2650              		.cfi_def_cfa_offset 24
 2651 0004 00AF     		add	r7, sp, #0
 2652              	.LCFI110:
 2653              		.cfi_def_cfa_register 7
 2654 0006 7860     		str	r0, [r7, #4]
 2655 0008 0B46     		mov	r3, r1
 2656 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2657              		.loc 1 1440 0
 2658 000c 4FF00003 		mov	r3, #0
 2659 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2660              		.loc 1 1447 0
 2661 0012 7B68     		ldr	r3, [r7, #4]
 2662 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2663 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 2664              		.loc 1 1450 0
 2665 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2666 001a 23F48063 		bic	r3, r3, #1024
 2667 001e FB81     		strh	r3, [r7, #14]	@ movhi
1451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2668              		.loc 1 1453 0
 2669 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2670 0022 4FEA0323 		lsl	r3, r3, #8
 2671 0026 9AB2     		uxth	r2, r3
 2672 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2673 002a 1343     		orrs	r3, r3, r2
 2674 002c FB81     		strh	r3, [r7, #14]	@ movhi
1454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2675              		.loc 1 1456 0
 2676 002e 7B68     		ldr	r3, [r7, #4]
 2677 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2678 0032 9A83     		strh	r2, [r3, #28]	@ movhi
1457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2679              		.loc 1 1457 0
 2680 0034 07F11407 		add	r7, r7, #20
 2681 0038 BD46     		mov	sp, r7
 2682 003a 80BC     		pop	{r7}
 2683 003c 7047     		bx	lr
 2684              		.cfi_endproc
 2685              	.LFE146:
 2687 003e 00BF     		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2688              		.align	2
 2689              		.global	TIM_ClearOC1Ref
 2690              		.thumb
 2691              		.thumb_func
 2693              	TIM_ClearOC1Ref:
 2694              	.LFB147:
1458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2695              		.loc 1 1469 0
 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 16
 2698              		@ frame_needed = 1, uses_anonymous_args = 0
 2699              		@ link register save eliminated.
 2700 0000 80B4     		push	{r7}
 2701              	.LCFI111:
 2702              		.cfi_def_cfa_offset 4
 2703              		.cfi_offset 7, -4
 2704 0002 85B0     		sub	sp, sp, #20
 2705              	.LCFI112:
 2706              		.cfi_def_cfa_offset 24
 2707 0004 00AF     		add	r7, sp, #0
 2708              	.LCFI113:
 2709              		.cfi_def_cfa_register 7
 2710 0006 7860     		str	r0, [r7, #4]
 2711 0008 0B46     		mov	r3, r1
 2712 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2713              		.loc 1 1470 0
 2714 000c 4FF00003 		mov	r3, #0
 2715 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2716              		.loc 1 1476 0
 2717 0012 7B68     		ldr	r3, [r7, #4]
 2718 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2719 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 2720              		.loc 1 1479 0
 2721 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2722 001a 23F08003 		bic	r3, r3, #128
 2723 001e FB81     		strh	r3, [r7, #14]	@ movhi
1480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2724              		.loc 1 1482 0
 2725 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2726 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2727 0024 1343     		orrs	r3, r3, r2
 2728 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2729              		.loc 1 1485 0
 2730 0028 7B68     		ldr	r3, [r7, #4]
 2731 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2732 002c 1A83     		strh	r2, [r3, #24]	@ movhi
1486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2733              		.loc 1 1486 0
 2734 002e 07F11407 		add	r7, r7, #20
 2735 0032 BD46     		mov	sp, r7
 2736 0034 80BC     		pop	{r7}
 2737 0036 7047     		bx	lr
 2738              		.cfi_endproc
 2739              	.LFE147:
 2741              		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2742              		.align	2
 2743              		.global	TIM_ClearOC2Ref
 2744              		.thumb
 2745              		.thumb_func
 2747              	TIM_ClearOC2Ref:
 2748              	.LFB148:
1487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2749              		.loc 1 1499 0
 2750              		.cfi_startproc
 2751              		@ args = 0, pretend = 0, frame = 16
 2752              		@ frame_needed = 1, uses_anonymous_args = 0
 2753              		@ link register save eliminated.
 2754 0000 80B4     		push	{r7}
 2755              	.LCFI114:
 2756              		.cfi_def_cfa_offset 4
 2757              		.cfi_offset 7, -4
 2758 0002 85B0     		sub	sp, sp, #20
 2759              	.LCFI115:
 2760              		.cfi_def_cfa_offset 24
 2761 0004 00AF     		add	r7, sp, #0
 2762              	.LCFI116:
 2763              		.cfi_def_cfa_register 7
 2764 0006 7860     		str	r0, [r7, #4]
 2765 0008 0B46     		mov	r3, r1
 2766 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2767              		.loc 1 1500 0
 2768 000c 4FF00003 		mov	r3, #0
 2769 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2770              		.loc 1 1506 0
 2771 0012 7B68     		ldr	r3, [r7, #4]
 2772 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2773 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2774              		.loc 1 1509 0
 2775 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2776 001a 4FEA4343 		lsl	r3, r3, #17
 2777 001e 4FEA5343 		lsr	r3, r3, #17
 2778 0022 FB81     		strh	r3, [r7, #14]	@ movhi
1510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2779              		.loc 1 1512 0
 2780 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2781 0026 4FEA0323 		lsl	r3, r3, #8
 2782 002a 9AB2     		uxth	r2, r3
 2783 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2784 002e 1343     		orrs	r3, r3, r2
 2785 0030 FB81     		strh	r3, [r7, #14]	@ movhi
1513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2786              		.loc 1 1515 0
 2787 0032 7B68     		ldr	r3, [r7, #4]
 2788 0034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2789 0036 1A83     		strh	r2, [r3, #24]	@ movhi
1516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2790              		.loc 1 1516 0
 2791 0038 07F11407 		add	r7, r7, #20
 2792 003c BD46     		mov	sp, r7
 2793 003e 80BC     		pop	{r7}
 2794 0040 7047     		bx	lr
 2795              		.cfi_endproc
 2796              	.LFE148:
 2798 0042 00BF     		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2799              		.align	2
 2800              		.global	TIM_ClearOC3Ref
 2801              		.thumb
 2802              		.thumb_func
 2804              	TIM_ClearOC3Ref:
 2805              	.LFB149:
1517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2806              		.loc 1 1528 0
 2807              		.cfi_startproc
 2808              		@ args = 0, pretend = 0, frame = 16
 2809              		@ frame_needed = 1, uses_anonymous_args = 0
 2810              		@ link register save eliminated.
 2811 0000 80B4     		push	{r7}
 2812              	.LCFI117:
 2813              		.cfi_def_cfa_offset 4
 2814              		.cfi_offset 7, -4
 2815 0002 85B0     		sub	sp, sp, #20
 2816              	.LCFI118:
 2817              		.cfi_def_cfa_offset 24
 2818 0004 00AF     		add	r7, sp, #0
 2819              	.LCFI119:
 2820              		.cfi_def_cfa_register 7
 2821 0006 7860     		str	r0, [r7, #4]
 2822 0008 0B46     		mov	r3, r1
 2823 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2824              		.loc 1 1529 0
 2825 000c 4FF00003 		mov	r3, #0
 2826 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2827              		.loc 1 1535 0
 2828 0012 7B68     		ldr	r3, [r7, #4]
 2829 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2830 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2831              		.loc 1 1538 0
 2832 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2833 001a 23F08003 		bic	r3, r3, #128
 2834 001e FB81     		strh	r3, [r7, #14]	@ movhi
1539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2835              		.loc 1 1541 0
 2836 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2837 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2838 0024 1343     		orrs	r3, r3, r2
 2839 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2840              		.loc 1 1544 0
 2841 0028 7B68     		ldr	r3, [r7, #4]
 2842 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2843 002c 9A83     		strh	r2, [r3, #28]	@ movhi
1545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2844              		.loc 1 1545 0
 2845 002e 07F11407 		add	r7, r7, #20
 2846 0032 BD46     		mov	sp, r7
 2847 0034 80BC     		pop	{r7}
 2848 0036 7047     		bx	lr
 2849              		.cfi_endproc
 2850              	.LFE149:
 2852              		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2853              		.align	2
 2854              		.global	TIM_ClearOC4Ref
 2855              		.thumb
 2856              		.thumb_func
 2858              	TIM_ClearOC4Ref:
 2859              	.LFB150:
1546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2860              		.loc 1 1557 0
 2861              		.cfi_startproc
 2862              		@ args = 0, pretend = 0, frame = 16
 2863              		@ frame_needed = 1, uses_anonymous_args = 0
 2864              		@ link register save eliminated.
 2865 0000 80B4     		push	{r7}
 2866              	.LCFI120:
 2867              		.cfi_def_cfa_offset 4
 2868              		.cfi_offset 7, -4
 2869 0002 85B0     		sub	sp, sp, #20
 2870              	.LCFI121:
 2871              		.cfi_def_cfa_offset 24
 2872 0004 00AF     		add	r7, sp, #0
 2873              	.LCFI122:
 2874              		.cfi_def_cfa_register 7
 2875 0006 7860     		str	r0, [r7, #4]
 2876 0008 0B46     		mov	r3, r1
 2877 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2878              		.loc 1 1558 0
 2879 000c 4FF00003 		mov	r3, #0
 2880 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2881              		.loc 1 1564 0
 2882 0012 7B68     		ldr	r3, [r7, #4]
 2883 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2884 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2885              		.loc 1 1567 0
 2886 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2887 001a 4FEA4343 		lsl	r3, r3, #17
 2888 001e 4FEA5343 		lsr	r3, r3, #17
 2889 0022 FB81     		strh	r3, [r7, #14]	@ movhi
1568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2890              		.loc 1 1570 0
 2891 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2892 0026 4FEA0323 		lsl	r3, r3, #8
 2893 002a 9AB2     		uxth	r2, r3
 2894 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2895 002e 1343     		orrs	r3, r3, r2
 2896 0030 FB81     		strh	r3, [r7, #14]	@ movhi
1571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2897              		.loc 1 1573 0
 2898 0032 7B68     		ldr	r3, [r7, #4]
 2899 0034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2900 0036 9A83     		strh	r2, [r3, #28]	@ movhi
1574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2901              		.loc 1 1574 0
 2902 0038 07F11407 		add	r7, r7, #20
 2903 003c BD46     		mov	sp, r7
 2904 003e 80BC     		pop	{r7}
 2905 0040 7047     		bx	lr
 2906              		.cfi_endproc
 2907              	.LFE150:
 2909 0042 00BF     		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2910              		.align	2
 2911              		.global	TIM_OC1PolarityConfig
 2912              		.thumb
 2913              		.thumb_func
 2915              	TIM_OC1PolarityConfig:
 2916              	.LFB151:
1575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2917              		.loc 1 1586 0
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 16
 2920              		@ frame_needed = 1, uses_anonymous_args = 0
 2921              		@ link register save eliminated.
 2922 0000 80B4     		push	{r7}
 2923              	.LCFI123:
 2924              		.cfi_def_cfa_offset 4
 2925              		.cfi_offset 7, -4
 2926 0002 85B0     		sub	sp, sp, #20
 2927              	.LCFI124:
 2928              		.cfi_def_cfa_offset 24
 2929 0004 00AF     		add	r7, sp, #0
 2930              	.LCFI125:
 2931              		.cfi_def_cfa_register 7
 2932 0006 7860     		str	r0, [r7, #4]
 2933 0008 0B46     		mov	r3, r1
 2934 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2935              		.loc 1 1587 0
 2936 000c 4FF00003 		mov	r3, #0
 2937 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2938              		.loc 1 1593 0
 2939 0012 7B68     		ldr	r3, [r7, #4]
 2940 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2941 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2942              		.loc 1 1596 0
 2943 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2944 001a 23F00203 		bic	r3, r3, #2
 2945 001e FB81     		strh	r3, [r7, #14]	@ movhi
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2946              		.loc 1 1597 0
 2947 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2948 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2949 0024 1343     		orrs	r3, r3, r2
 2950 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2951              		.loc 1 1600 0
 2952 0028 7B68     		ldr	r3, [r7, #4]
 2953 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 2954 002c 1A84     		strh	r2, [r3, #32]	@ movhi
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2955              		.loc 1 1601 0
 2956 002e 07F11407 		add	r7, r7, #20
 2957 0032 BD46     		mov	sp, r7
 2958 0034 80BC     		pop	{r7}
 2959 0036 7047     		bx	lr
 2960              		.cfi_endproc
 2961              	.LFE151:
 2963              		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2964              		.align	2
 2965              		.global	TIM_OC1NPolarityConfig
 2966              		.thumb
 2967              		.thumb_func
 2969              	TIM_OC1NPolarityConfig:
 2970              	.LFB152:
1602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2971              		.loc 1 1613 0
 2972              		.cfi_startproc
 2973              		@ args = 0, pretend = 0, frame = 16
 2974              		@ frame_needed = 1, uses_anonymous_args = 0
 2975              		@ link register save eliminated.
 2976 0000 80B4     		push	{r7}
 2977              	.LCFI126:
 2978              		.cfi_def_cfa_offset 4
 2979              		.cfi_offset 7, -4
 2980 0002 85B0     		sub	sp, sp, #20
 2981              	.LCFI127:
 2982              		.cfi_def_cfa_offset 24
 2983 0004 00AF     		add	r7, sp, #0
 2984              	.LCFI128:
 2985              		.cfi_def_cfa_register 7
 2986 0006 7860     		str	r0, [r7, #4]
 2987 0008 0B46     		mov	r3, r1
 2988 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2989              		.loc 1 1614 0
 2990 000c 4FF00003 		mov	r3, #0
 2991 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2992              		.loc 1 1619 0
 2993 0012 7B68     		ldr	r3, [r7, #4]
 2994 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2995 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 2996              		.loc 1 1622 0
 2997 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2998 001a 23F00803 		bic	r3, r3, #8
 2999 001e FB81     		strh	r3, [r7, #14]	@ movhi
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 3000              		.loc 1 1623 0
 3001 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3002 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3003 0024 1343     		orrs	r3, r3, r2
 3004 0026 FB81     		strh	r3, [r7, #14]	@ movhi
1624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3005              		.loc 1 1626 0
 3006 0028 7B68     		ldr	r3, [r7, #4]
 3007 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 3008 002c 1A84     		strh	r2, [r3, #32]	@ movhi
1627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3009              		.loc 1 1627 0
 3010 002e 07F11407 		add	r7, r7, #20
 3011 0032 BD46     		mov	sp, r7
 3012 0034 80BC     		pop	{r7}
 3013 0036 7047     		bx	lr
 3014              		.cfi_endproc
 3015              	.LFE152:
 3017              		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 3018              		.align	2
 3019              		.global	TIM_OC2PolarityConfig
 3020              		.thumb
 3021              		.thumb_func
 3023              	TIM_OC2PolarityConfig:
 3024              	.LFB153:
1628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3025              		.loc 1 1640 0
 3026              		.cfi_startproc
 3027              		@ args = 0, pretend = 0, frame = 16
 3028              		@ frame_needed = 1, uses_anonymous_args = 0
 3029              		@ link register save eliminated.
 3030 0000 80B4     		push	{r7}
 3031              	.LCFI129:
 3032              		.cfi_def_cfa_offset 4
 3033              		.cfi_offset 7, -4
 3034 0002 85B0     		sub	sp, sp, #20
 3035              	.LCFI130:
 3036              		.cfi_def_cfa_offset 24
 3037 0004 00AF     		add	r7, sp, #0
 3038              	.LCFI131:
 3039              		.cfi_def_cfa_register 7
 3040 0006 7860     		str	r0, [r7, #4]
 3041 0008 0B46     		mov	r3, r1
 3042 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3043              		.loc 1 1641 0
 3044 000c 4FF00003 		mov	r3, #0
 3045 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3046              		.loc 1 1647 0
 3047 0012 7B68     		ldr	r3, [r7, #4]
 3048 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3049 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 3050              		.loc 1 1650 0
 3051 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3052 001a 23F02003 		bic	r3, r3, #32
 3053 001e FB81     		strh	r3, [r7, #14]	@ movhi
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3054              		.loc 1 1651 0
 3055 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3056 0022 4FEA0313 		lsl	r3, r3, #4
 3057 0026 9AB2     		uxth	r2, r3
 3058 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3059 002a 1343     		orrs	r3, r3, r2
 3060 002c FB81     		strh	r3, [r7, #14]	@ movhi
1652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3061              		.loc 1 1654 0
 3062 002e 7B68     		ldr	r3, [r7, #4]
 3063 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3064 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3065              		.loc 1 1655 0
 3066 0034 07F11407 		add	r7, r7, #20
 3067 0038 BD46     		mov	sp, r7
 3068 003a 80BC     		pop	{r7}
 3069 003c 7047     		bx	lr
 3070              		.cfi_endproc
 3071              	.LFE153:
 3073 003e 00BF     		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 3074              		.align	2
 3075              		.global	TIM_OC2NPolarityConfig
 3076              		.thumb
 3077              		.thumb_func
 3079              	TIM_OC2NPolarityConfig:
 3080              	.LFB154:
1656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3081              		.loc 1 1667 0
 3082              		.cfi_startproc
 3083              		@ args = 0, pretend = 0, frame = 16
 3084              		@ frame_needed = 1, uses_anonymous_args = 0
 3085              		@ link register save eliminated.
 3086 0000 80B4     		push	{r7}
 3087              	.LCFI132:
 3088              		.cfi_def_cfa_offset 4
 3089              		.cfi_offset 7, -4
 3090 0002 85B0     		sub	sp, sp, #20
 3091              	.LCFI133:
 3092              		.cfi_def_cfa_offset 24
 3093 0004 00AF     		add	r7, sp, #0
 3094              	.LCFI134:
 3095              		.cfi_def_cfa_register 7
 3096 0006 7860     		str	r0, [r7, #4]
 3097 0008 0B46     		mov	r3, r1
 3098 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3099              		.loc 1 1668 0
 3100 000c 4FF00003 		mov	r3, #0
 3101 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3102              		.loc 1 1674 0
 3103 0012 7B68     		ldr	r3, [r7, #4]
 3104 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3105 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 3106              		.loc 1 1677 0
 3107 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3108 001a 23F08003 		bic	r3, r3, #128
 3109 001e FB81     		strh	r3, [r7, #14]	@ movhi
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3110              		.loc 1 1678 0
 3111 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3112 0022 4FEA0313 		lsl	r3, r3, #4
 3113 0026 9AB2     		uxth	r2, r3
 3114 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3115 002a 1343     		orrs	r3, r3, r2
 3116 002c FB81     		strh	r3, [r7, #14]	@ movhi
1679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3117              		.loc 1 1681 0
 3118 002e 7B68     		ldr	r3, [r7, #4]
 3119 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3120 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3121              		.loc 1 1682 0
 3122 0034 07F11407 		add	r7, r7, #20
 3123 0038 BD46     		mov	sp, r7
 3124 003a 80BC     		pop	{r7}
 3125 003c 7047     		bx	lr
 3126              		.cfi_endproc
 3127              	.LFE154:
 3129 003e 00BF     		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 3130              		.align	2
 3131              		.global	TIM_OC3PolarityConfig
 3132              		.thumb
 3133              		.thumb_func
 3135              	TIM_OC3PolarityConfig:
 3136              	.LFB155:
1683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3137              		.loc 1 1694 0
 3138              		.cfi_startproc
 3139              		@ args = 0, pretend = 0, frame = 16
 3140              		@ frame_needed = 1, uses_anonymous_args = 0
 3141              		@ link register save eliminated.
 3142 0000 80B4     		push	{r7}
 3143              	.LCFI135:
 3144              		.cfi_def_cfa_offset 4
 3145              		.cfi_offset 7, -4
 3146 0002 85B0     		sub	sp, sp, #20
 3147              	.LCFI136:
 3148              		.cfi_def_cfa_offset 24
 3149 0004 00AF     		add	r7, sp, #0
 3150              	.LCFI137:
 3151              		.cfi_def_cfa_register 7
 3152 0006 7860     		str	r0, [r7, #4]
 3153 0008 0B46     		mov	r3, r1
 3154 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3155              		.loc 1 1695 0
 3156 000c 4FF00003 		mov	r3, #0
 3157 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3158              		.loc 1 1701 0
 3159 0012 7B68     		ldr	r3, [r7, #4]
 3160 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3161 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 3162              		.loc 1 1704 0
 3163 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3164 001a 23F40073 		bic	r3, r3, #512
 3165 001e FB81     		strh	r3, [r7, #14]	@ movhi
1705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3166              		.loc 1 1705 0
 3167 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3168 0022 4FEA0323 		lsl	r3, r3, #8
 3169 0026 9AB2     		uxth	r2, r3
 3170 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3171 002a 1343     		orrs	r3, r3, r2
 3172 002c FB81     		strh	r3, [r7, #14]	@ movhi
1706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3173              		.loc 1 1708 0
 3174 002e 7B68     		ldr	r3, [r7, #4]
 3175 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3176 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3177              		.loc 1 1709 0
 3178 0034 07F11407 		add	r7, r7, #20
 3179 0038 BD46     		mov	sp, r7
 3180 003a 80BC     		pop	{r7}
 3181 003c 7047     		bx	lr
 3182              		.cfi_endproc
 3183              	.LFE155:
 3185 003e 00BF     		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 3186              		.align	2
 3187              		.global	TIM_OC3NPolarityConfig
 3188              		.thumb
 3189              		.thumb_func
 3191              	TIM_OC3NPolarityConfig:
 3192              	.LFB156:
1710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3193              		.loc 1 1721 0
 3194              		.cfi_startproc
 3195              		@ args = 0, pretend = 0, frame = 16
 3196              		@ frame_needed = 1, uses_anonymous_args = 0
 3197              		@ link register save eliminated.
 3198 0000 80B4     		push	{r7}
 3199              	.LCFI138:
 3200              		.cfi_def_cfa_offset 4
 3201              		.cfi_offset 7, -4
 3202 0002 85B0     		sub	sp, sp, #20
 3203              	.LCFI139:
 3204              		.cfi_def_cfa_offset 24
 3205 0004 00AF     		add	r7, sp, #0
 3206              	.LCFI140:
 3207              		.cfi_def_cfa_register 7
 3208 0006 7860     		str	r0, [r7, #4]
 3209 0008 0B46     		mov	r3, r1
 3210 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3211              		.loc 1 1722 0
 3212 000c 4FF00003 		mov	r3, #0
 3213 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3214              		.loc 1 1728 0
 3215 0012 7B68     		ldr	r3, [r7, #4]
 3216 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3217 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 3218              		.loc 1 1731 0
 3219 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3220 001a 23F40063 		bic	r3, r3, #2048
 3221 001e FB81     		strh	r3, [r7, #14]	@ movhi
1732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3222              		.loc 1 1732 0
 3223 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3224 0022 4FEA0323 		lsl	r3, r3, #8
 3225 0026 9AB2     		uxth	r2, r3
 3226 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3227 002a 1343     		orrs	r3, r3, r2
 3228 002c FB81     		strh	r3, [r7, #14]	@ movhi
1733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3229              		.loc 1 1735 0
 3230 002e 7B68     		ldr	r3, [r7, #4]
 3231 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3232 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3233              		.loc 1 1736 0
 3234 0034 07F11407 		add	r7, r7, #20
 3235 0038 BD46     		mov	sp, r7
 3236 003a 80BC     		pop	{r7}
 3237 003c 7047     		bx	lr
 3238              		.cfi_endproc
 3239              	.LFE156:
 3241 003e 00BF     		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 3242              		.align	2
 3243              		.global	TIM_OC4PolarityConfig
 3244              		.thumb
 3245              		.thumb_func
 3247              	TIM_OC4PolarityConfig:
 3248              	.LFB157:
1737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3249              		.loc 1 1748 0
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 16
 3252              		@ frame_needed = 1, uses_anonymous_args = 0
 3253              		@ link register save eliminated.
 3254 0000 80B4     		push	{r7}
 3255              	.LCFI141:
 3256              		.cfi_def_cfa_offset 4
 3257              		.cfi_offset 7, -4
 3258 0002 85B0     		sub	sp, sp, #20
 3259              	.LCFI142:
 3260              		.cfi_def_cfa_offset 24
 3261 0004 00AF     		add	r7, sp, #0
 3262              	.LCFI143:
 3263              		.cfi_def_cfa_register 7
 3264 0006 7860     		str	r0, [r7, #4]
 3265 0008 0B46     		mov	r3, r1
 3266 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3267              		.loc 1 1749 0
 3268 000c 4FF00003 		mov	r3, #0
 3269 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3270              		.loc 1 1755 0
 3271 0012 7B68     		ldr	r3, [r7, #4]
 3272 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3273 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 3274              		.loc 1 1758 0
 3275 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3276 001a 23F40053 		bic	r3, r3, #8192
 3277 001e FB81     		strh	r3, [r7, #14]	@ movhi
1759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3278              		.loc 1 1759 0
 3279 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3280 0022 4FEA0333 		lsl	r3, r3, #12
 3281 0026 9AB2     		uxth	r2, r3
 3282 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3283 002a 1343     		orrs	r3, r3, r2
 3284 002c FB81     		strh	r3, [r7, #14]	@ movhi
1760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3285              		.loc 1 1762 0
 3286 002e 7B68     		ldr	r3, [r7, #4]
 3287 0030 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3288 0032 1A84     		strh	r2, [r3, #32]	@ movhi
1763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3289              		.loc 1 1763 0
 3290 0034 07F11407 		add	r7, r7, #20
 3291 0038 BD46     		mov	sp, r7
 3292 003a 80BC     		pop	{r7}
 3293 003c 7047     		bx	lr
 3294              		.cfi_endproc
 3295              	.LFE157:
 3297 003e 00BF     		.section	.text.TIM_CCxCmd,"ax",%progbits
 3298              		.align	2
 3299              		.global	TIM_CCxCmd
 3300              		.thumb
 3301              		.thumb_func
 3303              	TIM_CCxCmd:
 3304              	.LFB158:
1764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3305              		.loc 1 1779 0
 3306              		.cfi_startproc
 3307              		@ args = 0, pretend = 0, frame = 16
 3308              		@ frame_needed = 1, uses_anonymous_args = 0
 3309              		@ link register save eliminated.
 3310 0000 80B4     		push	{r7}
 3311              	.LCFI144:
 3312              		.cfi_def_cfa_offset 4
 3313              		.cfi_offset 7, -4
 3314 0002 85B0     		sub	sp, sp, #20
 3315              	.LCFI145:
 3316              		.cfi_def_cfa_offset 24
 3317 0004 00AF     		add	r7, sp, #0
 3318              	.LCFI146:
 3319              		.cfi_def_cfa_register 7
 3320 0006 7860     		str	r0, [r7, #4]
 3321 0008 1346     		mov	r3, r2
 3322 000a 0A46     		mov	r2, r1	@ movhi
 3323 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3324 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3325              		.loc 1 1780 0
 3326 0010 4FF00003 		mov	r3, #0
 3327 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 3328              		.loc 1 1787 0
 3329 0016 7B88     		ldrh	r3, [r7, #2]
 3330 0018 4FF00102 		mov	r2, #1
 3331 001c 02FA03F3 		lsl	r3, r2, r3
 3332 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 3333              		.loc 1 1790 0
 3334 0022 7B68     		ldr	r3, [r7, #4]
 3335 0024 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3336 0026 9AB2     		uxth	r2, r3
 3337 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3338 002a 6FEA0303 		mvn	r3, r3
 3339 002e 9BB2     		uxth	r3, r3
 3340 0030 1340     		ands	r3, r3, r2
 3341 0032 9AB2     		uxth	r2, r3
 3342 0034 7B68     		ldr	r3, [r7, #4]
 3343 0036 1A84     		strh	r2, [r3, #32]	@ movhi
1791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 3344              		.loc 1 1793 0
 3345 0038 7B68     		ldr	r3, [r7, #4]
 3346 003a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3347 003c 9AB2     		uxth	r2, r3
 3348 003e 3988     		ldrh	r1, [r7, #0]
 3349 0040 7B88     		ldrh	r3, [r7, #2]
 3350 0042 01FA03F3 		lsl	r3, r1, r3
 3351 0046 9BB2     		uxth	r3, r3
 3352 0048 1343     		orrs	r3, r3, r2
 3353 004a 9AB2     		uxth	r2, r3
 3354 004c 7B68     		ldr	r3, [r7, #4]
 3355 004e 1A84     		strh	r2, [r3, #32]	@ movhi
1794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3356              		.loc 1 1794 0
 3357 0050 07F11407 		add	r7, r7, #20
 3358 0054 BD46     		mov	sp, r7
 3359 0056 80BC     		pop	{r7}
 3360 0058 7047     		bx	lr
 3361              		.cfi_endproc
 3362              	.LFE158:
 3364 005a 00BF     		.section	.text.TIM_CCxNCmd,"ax",%progbits
 3365              		.align	2
 3366              		.global	TIM_CCxNCmd
 3367              		.thumb
 3368              		.thumb_func
 3370              	TIM_CCxNCmd:
 3371              	.LFB159:
1795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3372              		.loc 1 1809 0
 3373              		.cfi_startproc
 3374              		@ args = 0, pretend = 0, frame = 16
 3375              		@ frame_needed = 1, uses_anonymous_args = 0
 3376              		@ link register save eliminated.
 3377 0000 80B4     		push	{r7}
 3378              	.LCFI147:
 3379              		.cfi_def_cfa_offset 4
 3380              		.cfi_offset 7, -4
 3381 0002 85B0     		sub	sp, sp, #20
 3382              	.LCFI148:
 3383              		.cfi_def_cfa_offset 24
 3384 0004 00AF     		add	r7, sp, #0
 3385              	.LCFI149:
 3386              		.cfi_def_cfa_register 7
 3387 0006 7860     		str	r0, [r7, #4]
 3388 0008 1346     		mov	r3, r2
 3389 000a 0A46     		mov	r2, r1	@ movhi
 3390 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3391 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3392              		.loc 1 1810 0
 3393 0010 4FF00003 		mov	r3, #0
 3394 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 3395              		.loc 1 1817 0
 3396 0016 7B88     		ldrh	r3, [r7, #2]
 3397 0018 4FF00402 		mov	r2, #4
 3398 001c 02FA03F3 		lsl	r3, r2, r3
 3399 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 3400              		.loc 1 1820 0
 3401 0022 7B68     		ldr	r3, [r7, #4]
 3402 0024 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3403 0026 9AB2     		uxth	r2, r3
 3404 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3405 002a 6FEA0303 		mvn	r3, r3
 3406 002e 9BB2     		uxth	r3, r3
 3407 0030 1340     		ands	r3, r3, r2
 3408 0032 9AB2     		uxth	r2, r3
 3409 0034 7B68     		ldr	r3, [r7, #4]
 3410 0036 1A84     		strh	r2, [r3, #32]	@ movhi
1821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 3411              		.loc 1 1823 0
 3412 0038 7B68     		ldr	r3, [r7, #4]
 3413 003a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3414 003c 9AB2     		uxth	r2, r3
 3415 003e 3988     		ldrh	r1, [r7, #0]
 3416 0040 7B88     		ldrh	r3, [r7, #2]
 3417 0042 01FA03F3 		lsl	r3, r1, r3
 3418 0046 9BB2     		uxth	r3, r3
 3419 0048 1343     		orrs	r3, r3, r2
 3420 004a 9AB2     		uxth	r2, r3
 3421 004c 7B68     		ldr	r3, [r7, #4]
 3422 004e 1A84     		strh	r2, [r3, #32]	@ movhi
1824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3423              		.loc 1 1824 0
 3424 0050 07F11407 		add	r7, r7, #20
 3425 0054 BD46     		mov	sp, r7
 3426 0056 80BC     		pop	{r7}
 3427 0058 7047     		bx	lr
 3428              		.cfi_endproc
 3429              	.LFE159:
 3431 005a 00BF     		.section	.text.TIM_ICInit,"ax",%progbits
 3432              		.align	2
 3433              		.global	TIM_ICInit
 3434              		.thumb
 3435              		.thumb_func
 3437              	TIM_ICInit:
 3438              	.LFB160:
1825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3439              		.loc 1 1891 0
 3440              		.cfi_startproc
 3441              		@ args = 0, pretend = 0, frame = 8
 3442              		@ frame_needed = 1, uses_anonymous_args = 0
 3443 0000 80B5     		push	{r7, lr}
 3444              	.LCFI150:
 3445              		.cfi_def_cfa_offset 8
 3446              		.cfi_offset 14, -4
 3447              		.cfi_offset 7, -8
 3448 0002 82B0     		sub	sp, sp, #8
 3449              	.LCFI151:
 3450              		.cfi_def_cfa_offset 16
 3451 0004 00AF     		add	r7, sp, #0
 3452              	.LCFI152:
 3453              		.cfi_def_cfa_register 7
 3454 0006 7860     		str	r0, [r7, #4]
 3455 0008 3960     		str	r1, [r7, #0]
1892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3456              		.loc 1 1899 0
 3457 000a 3B68     		ldr	r3, [r7, #0]
 3458 000c 1B88     		ldrh	r3, [r3, #0]
 3459 000e 002B     		cmp	r3, #0
 3460 0010 0FD1     		bne	.L90
1900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3461              		.loc 1 1902 0
 3462 0012 3B68     		ldr	r3, [r7, #0]
 3463 0014 5988     		ldrh	r1, [r3, #2]
1903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3464              		.loc 1 1903 0
 3465 0016 3B68     		ldr	r3, [r7, #0]
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3466              		.loc 1 1902 0
 3467 0018 9A88     		ldrh	r2, [r3, #4]
1904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3468              		.loc 1 1904 0
 3469 001a 3B68     		ldr	r3, [r7, #0]
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3470              		.loc 1 1902 0
 3471 001c 1B89     		ldrh	r3, [r3, #8]
 3472 001e 7868     		ldr	r0, [r7, #4]
 3473 0020 FFF7FEFF 		bl	TI1_Config
1905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3474              		.loc 1 1906 0
 3475 0024 3B68     		ldr	r3, [r7, #0]
 3476 0026 DB88     		ldrh	r3, [r3, #6]
 3477 0028 7868     		ldr	r0, [r7, #4]
 3478 002a 1946     		mov	r1, r3
 3479 002c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3480 0030 36E0     		b	.L89
 3481              	.L90:
1907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 3482              		.loc 1 1908 0
 3483 0032 3B68     		ldr	r3, [r7, #0]
 3484 0034 1B88     		ldrh	r3, [r3, #0]
 3485 0036 042B     		cmp	r3, #4
 3486 0038 0FD1     		bne	.L92
1909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3487              		.loc 1 1911 0
 3488 003a 3B68     		ldr	r3, [r7, #0]
 3489 003c 5988     		ldrh	r1, [r3, #2]
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3490              		.loc 1 1912 0
 3491 003e 3B68     		ldr	r3, [r7, #0]
1911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3492              		.loc 1 1911 0
 3493 0040 9A88     		ldrh	r2, [r3, #4]
1913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3494              		.loc 1 1913 0
 3495 0042 3B68     		ldr	r3, [r7, #0]
1911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3496              		.loc 1 1911 0
 3497 0044 1B89     		ldrh	r3, [r3, #8]
 3498 0046 7868     		ldr	r0, [r7, #4]
 3499 0048 FFF7FEFF 		bl	TI2_Config
1914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3500              		.loc 1 1915 0
 3501 004c 3B68     		ldr	r3, [r7, #0]
 3502 004e DB88     		ldrh	r3, [r3, #6]
 3503 0050 7868     		ldr	r0, [r7, #4]
 3504 0052 1946     		mov	r1, r3
 3505 0054 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3506 0058 22E0     		b	.L89
 3507              	.L92:
1916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3508              		.loc 1 1917 0
 3509 005a 3B68     		ldr	r3, [r7, #0]
 3510 005c 1B88     		ldrh	r3, [r3, #0]
 3511 005e 082B     		cmp	r3, #8
 3512 0060 0FD1     		bne	.L93
1918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3513              		.loc 1 1920 0
 3514 0062 3B68     		ldr	r3, [r7, #0]
 3515 0064 5988     		ldrh	r1, [r3, #2]
1921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3516              		.loc 1 1921 0
 3517 0066 3B68     		ldr	r3, [r7, #0]
1920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3518              		.loc 1 1920 0
 3519 0068 9A88     		ldrh	r2, [r3, #4]
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3520              		.loc 1 1922 0
 3521 006a 3B68     		ldr	r3, [r7, #0]
1920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3522              		.loc 1 1920 0
 3523 006c 1B89     		ldrh	r3, [r3, #8]
 3524 006e 7868     		ldr	r0, [r7, #4]
 3525 0070 FFF7FEFF 		bl	TI3_Config
1923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3526              		.loc 1 1924 0
 3527 0074 3B68     		ldr	r3, [r7, #0]
 3528 0076 DB88     		ldrh	r3, [r3, #6]
 3529 0078 7868     		ldr	r0, [r7, #4]
 3530 007a 1946     		mov	r1, r3
 3531 007c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3532 0080 0EE0     		b	.L89
 3533              	.L93:
1925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3534              		.loc 1 1929 0
 3535 0082 3B68     		ldr	r3, [r7, #0]
 3536 0084 5988     		ldrh	r1, [r3, #2]
1930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3537              		.loc 1 1930 0
 3538 0086 3B68     		ldr	r3, [r7, #0]
1929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3539              		.loc 1 1929 0
 3540 0088 9A88     		ldrh	r2, [r3, #4]
1931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3541              		.loc 1 1931 0
 3542 008a 3B68     		ldr	r3, [r7, #0]
1929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3543              		.loc 1 1929 0
 3544 008c 1B89     		ldrh	r3, [r3, #8]
 3545 008e 7868     		ldr	r0, [r7, #4]
 3546 0090 FFF7FEFF 		bl	TI4_Config
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3547              		.loc 1 1933 0
 3548 0094 3B68     		ldr	r3, [r7, #0]
 3549 0096 DB88     		ldrh	r3, [r3, #6]
 3550 0098 7868     		ldr	r0, [r7, #4]
 3551 009a 1946     		mov	r1, r3
 3552 009c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3553              	.L89:
1934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3554              		.loc 1 1935 0
 3555 00a0 07F10807 		add	r7, r7, #8
 3556 00a4 BD46     		mov	sp, r7
 3557 00a6 80BD     		pop	{r7, pc}
 3558              		.cfi_endproc
 3559              	.LFE160:
 3561              		.section	.text.TIM_ICStructInit,"ax",%progbits
 3562              		.align	2
 3563              		.global	TIM_ICStructInit
 3564              		.thumb
 3565              		.thumb_func
 3567              	TIM_ICStructInit:
 3568              	.LFB161:
1936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3569              		.loc 1 1944 0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 8
 3572              		@ frame_needed = 1, uses_anonymous_args = 0
 3573              		@ link register save eliminated.
 3574 0000 80B4     		push	{r7}
 3575              	.LCFI153:
 3576              		.cfi_def_cfa_offset 4
 3577              		.cfi_offset 7, -4
 3578 0002 83B0     		sub	sp, sp, #12
 3579              	.LCFI154:
 3580              		.cfi_def_cfa_offset 16
 3581 0004 00AF     		add	r7, sp, #0
 3582              	.LCFI155:
 3583              		.cfi_def_cfa_register 7
 3584 0006 7860     		str	r0, [r7, #4]
1945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 3585              		.loc 1 1946 0
 3586 0008 7B68     		ldr	r3, [r7, #4]
 3587 000a 4FF00002 		mov	r2, #0
 3588 000e 1A80     		strh	r2, [r3, #0]	@ movhi
1947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 3589              		.loc 1 1947 0
 3590 0010 7B68     		ldr	r3, [r7, #4]
 3591 0012 4FF00002 		mov	r2, #0
 3592 0016 5A80     		strh	r2, [r3, #2]	@ movhi
1948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 3593              		.loc 1 1948 0
 3594 0018 7B68     		ldr	r3, [r7, #4]
 3595 001a 4FF00102 		mov	r2, #1
 3596 001e 9A80     		strh	r2, [r3, #4]	@ movhi
1949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 3597              		.loc 1 1949 0
 3598 0020 7B68     		ldr	r3, [r7, #4]
 3599 0022 4FF00002 		mov	r2, #0
 3600 0026 DA80     		strh	r2, [r3, #6]	@ movhi
1950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 3601              		.loc 1 1950 0
 3602 0028 7B68     		ldr	r3, [r7, #4]
 3603 002a 4FF00002 		mov	r2, #0
 3604 002e 1A81     		strh	r2, [r3, #8]	@ movhi
1951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3605              		.loc 1 1951 0
 3606 0030 07F10C07 		add	r7, r7, #12
 3607 0034 BD46     		mov	sp, r7
 3608 0036 80BC     		pop	{r7}
 3609 0038 7047     		bx	lr
 3610              		.cfi_endproc
 3611              	.LFE161:
 3613 003a 00BF     		.section	.text.TIM_PWMIConfig,"ax",%progbits
 3614              		.align	2
 3615              		.global	TIM_PWMIConfig
 3616              		.thumb
 3617              		.thumb_func
 3619              	TIM_PWMIConfig:
 3620              	.LFB162:
1952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3621              		.loc 1 1963 0
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 16
 3624              		@ frame_needed = 1, uses_anonymous_args = 0
 3625 0000 80B5     		push	{r7, lr}
 3626              	.LCFI156:
 3627              		.cfi_def_cfa_offset 8
 3628              		.cfi_offset 14, -4
 3629              		.cfi_offset 7, -8
 3630 0002 84B0     		sub	sp, sp, #16
 3631              	.LCFI157:
 3632              		.cfi_def_cfa_offset 24
 3633 0004 00AF     		add	r7, sp, #0
 3634              	.LCFI158:
 3635              		.cfi_def_cfa_register 7
 3636 0006 7860     		str	r0, [r7, #4]
 3637 0008 3960     		str	r1, [r7, #0]
1964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3638              		.loc 1 1964 0
 3639 000a 4FF00003 		mov	r3, #0
 3640 000e FB81     		strh	r3, [r7, #14]	@ movhi
1965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 3641              		.loc 1 1965 0
 3642 0010 4FF00103 		mov	r3, #1
 3643 0014 BB81     		strh	r3, [r7, #12]	@ movhi
1966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 3644              		.loc 1 1971 0
 3645 0016 3B68     		ldr	r3, [r7, #0]
 3646 0018 5B88     		ldrh	r3, [r3, #2]
 3647 001a 002B     		cmp	r3, #0
 3648 001c 03D1     		bne	.L96
1972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 3649              		.loc 1 1973 0
 3650 001e 4FF00203 		mov	r3, #2
 3651 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 3652 0024 02E0     		b	.L97
 3653              	.L96:
1974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 3654              		.loc 1 1977 0
 3655 0026 4FF00003 		mov	r3, #0
 3656 002a FB81     		strh	r3, [r7, #14]	@ movhi
 3657              	.L97:
1978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 3658              		.loc 1 1980 0
 3659 002c 3B68     		ldr	r3, [r7, #0]
 3660 002e 9B88     		ldrh	r3, [r3, #4]
 3661 0030 012B     		cmp	r3, #1
 3662 0032 03D1     		bne	.L98
1981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 3663              		.loc 1 1982 0
 3664 0034 4FF00203 		mov	r3, #2
 3665 0038 BB81     		strh	r3, [r7, #12]	@ movhi
 3666 003a 02E0     		b	.L99
 3667              	.L98:
1983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 3668              		.loc 1 1986 0
 3669 003c 4FF00103 		mov	r3, #1
 3670 0040 BB81     		strh	r3, [r7, #12]	@ movhi
 3671              	.L99:
1987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3672              		.loc 1 1988 0
 3673 0042 3B68     		ldr	r3, [r7, #0]
 3674 0044 1B88     		ldrh	r3, [r3, #0]
 3675 0046 002B     		cmp	r3, #0
 3676 0048 1CD1     		bne	.L100
1989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3677              		.loc 1 1991 0
 3678 004a 3B68     		ldr	r3, [r7, #0]
 3679 004c 5988     		ldrh	r1, [r3, #2]
 3680 004e 3B68     		ldr	r3, [r7, #0]
 3681 0050 9A88     		ldrh	r2, [r3, #4]
1992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3682              		.loc 1 1992 0
 3683 0052 3B68     		ldr	r3, [r7, #0]
1991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3684              		.loc 1 1991 0
 3685 0054 1B89     		ldrh	r3, [r3, #8]
 3686 0056 7868     		ldr	r0, [r7, #4]
 3687 0058 FFF7FEFF 		bl	TI1_Config
1993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3688              		.loc 1 1994 0
 3689 005c 3B68     		ldr	r3, [r7, #0]
 3690 005e DB88     		ldrh	r3, [r3, #6]
 3691 0060 7868     		ldr	r0, [r7, #4]
 3692 0062 1946     		mov	r1, r3
 3693 0064 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3694              		.loc 1 1996 0
 3695 0068 3B68     		ldr	r3, [r7, #0]
 3696 006a 1B89     		ldrh	r3, [r3, #8]
 3697 006c F989     		ldrh	r1, [r7, #14]
 3698 006e BA89     		ldrh	r2, [r7, #12]
 3699 0070 7868     		ldr	r0, [r7, #4]
 3700 0072 FFF7FEFF 		bl	TI2_Config
1997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3701              		.loc 1 1998 0
 3702 0076 3B68     		ldr	r3, [r7, #0]
 3703 0078 DB88     		ldrh	r3, [r3, #6]
 3704 007a 7868     		ldr	r0, [r7, #4]
 3705 007c 1946     		mov	r1, r3
 3706 007e FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3707 0082 1BE0     		b	.L95
 3708              	.L100:
1999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3709              		.loc 1 2003 0
 3710 0084 3B68     		ldr	r3, [r7, #0]
 3711 0086 5988     		ldrh	r1, [r3, #2]
 3712 0088 3B68     		ldr	r3, [r7, #0]
 3713 008a 9A88     		ldrh	r2, [r3, #4]
2004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3714              		.loc 1 2004 0
 3715 008c 3B68     		ldr	r3, [r7, #0]
2003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3716              		.loc 1 2003 0
 3717 008e 1B89     		ldrh	r3, [r3, #8]
 3718 0090 7868     		ldr	r0, [r7, #4]
 3719 0092 FFF7FEFF 		bl	TI2_Config
2005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3720              		.loc 1 2006 0
 3721 0096 3B68     		ldr	r3, [r7, #0]
 3722 0098 DB88     		ldrh	r3, [r3, #6]
 3723 009a 7868     		ldr	r0, [r7, #4]
 3724 009c 1946     		mov	r1, r3
 3725 009e FFF7FEFF 		bl	TIM_SetIC2Prescaler
2007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3726              		.loc 1 2008 0
 3727 00a2 3B68     		ldr	r3, [r7, #0]
 3728 00a4 1B89     		ldrh	r3, [r3, #8]
 3729 00a6 F989     		ldrh	r1, [r7, #14]
 3730 00a8 BA89     		ldrh	r2, [r7, #12]
 3731 00aa 7868     		ldr	r0, [r7, #4]
 3732 00ac FFF7FEFF 		bl	TI1_Config
2009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3733              		.loc 1 2010 0
 3734 00b0 3B68     		ldr	r3, [r7, #0]
 3735 00b2 DB88     		ldrh	r3, [r3, #6]
 3736 00b4 7868     		ldr	r0, [r7, #4]
 3737 00b6 1946     		mov	r1, r3
 3738 00b8 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3739              	.L95:
2011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3740              		.loc 1 2012 0
 3741 00bc 07F11007 		add	r7, r7, #16
 3742 00c0 BD46     		mov	sp, r7
 3743 00c2 80BD     		pop	{r7, pc}
 3744              		.cfi_endproc
 3745              	.LFE162:
 3747              		.section	.text.TIM_GetCapture1,"ax",%progbits
 3748              		.align	2
 3749              		.global	TIM_GetCapture1
 3750              		.thumb
 3751              		.thumb_func
 3753              	TIM_GetCapture1:
 3754              	.LFB163:
2013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3755              		.loc 1 2020 0
 3756              		.cfi_startproc
 3757              		@ args = 0, pretend = 0, frame = 8
 3758              		@ frame_needed = 1, uses_anonymous_args = 0
 3759              		@ link register save eliminated.
 3760 0000 80B4     		push	{r7}
 3761              	.LCFI159:
 3762              		.cfi_def_cfa_offset 4
 3763              		.cfi_offset 7, -4
 3764 0002 83B0     		sub	sp, sp, #12
 3765              	.LCFI160:
 3766              		.cfi_def_cfa_offset 16
 3767 0004 00AF     		add	r7, sp, #0
 3768              	.LCFI161:
 3769              		.cfi_def_cfa_register 7
 3770 0006 7860     		str	r0, [r7, #4]
2021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 3771              		.loc 1 2025 0
 3772 0008 7B68     		ldr	r3, [r7, #4]
 3773 000a 5B6B     		ldr	r3, [r3, #52]
2026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3774              		.loc 1 2026 0
 3775 000c 1846     		mov	r0, r3
 3776 000e 07F10C07 		add	r7, r7, #12
 3777 0012 BD46     		mov	sp, r7
 3778 0014 80BC     		pop	{r7}
 3779 0016 7047     		bx	lr
 3780              		.cfi_endproc
 3781              	.LFE163:
 3783              		.section	.text.TIM_GetCapture2,"ax",%progbits
 3784              		.align	2
 3785              		.global	TIM_GetCapture2
 3786              		.thumb
 3787              		.thumb_func
 3789              	TIM_GetCapture2:
 3790              	.LFB164:
2027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3791              		.loc 1 2035 0
 3792              		.cfi_startproc
 3793              		@ args = 0, pretend = 0, frame = 8
 3794              		@ frame_needed = 1, uses_anonymous_args = 0
 3795              		@ link register save eliminated.
 3796 0000 80B4     		push	{r7}
 3797              	.LCFI162:
 3798              		.cfi_def_cfa_offset 4
 3799              		.cfi_offset 7, -4
 3800 0002 83B0     		sub	sp, sp, #12
 3801              	.LCFI163:
 3802              		.cfi_def_cfa_offset 16
 3803 0004 00AF     		add	r7, sp, #0
 3804              	.LCFI164:
 3805              		.cfi_def_cfa_register 7
 3806 0006 7860     		str	r0, [r7, #4]
2036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 3807              		.loc 1 2040 0
 3808 0008 7B68     		ldr	r3, [r7, #4]
 3809 000a 9B6B     		ldr	r3, [r3, #56]
2041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3810              		.loc 1 2041 0
 3811 000c 1846     		mov	r0, r3
 3812 000e 07F10C07 		add	r7, r7, #12
 3813 0012 BD46     		mov	sp, r7
 3814 0014 80BC     		pop	{r7}
 3815 0016 7047     		bx	lr
 3816              		.cfi_endproc
 3817              	.LFE164:
 3819              		.section	.text.TIM_GetCapture3,"ax",%progbits
 3820              		.align	2
 3821              		.global	TIM_GetCapture3
 3822              		.thumb
 3823              		.thumb_func
 3825              	TIM_GetCapture3:
 3826              	.LFB165:
2042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3827              		.loc 1 2049 0
 3828              		.cfi_startproc
 3829              		@ args = 0, pretend = 0, frame = 8
 3830              		@ frame_needed = 1, uses_anonymous_args = 0
 3831              		@ link register save eliminated.
 3832 0000 80B4     		push	{r7}
 3833              	.LCFI165:
 3834              		.cfi_def_cfa_offset 4
 3835              		.cfi_offset 7, -4
 3836 0002 83B0     		sub	sp, sp, #12
 3837              	.LCFI166:
 3838              		.cfi_def_cfa_offset 16
 3839 0004 00AF     		add	r7, sp, #0
 3840              	.LCFI167:
 3841              		.cfi_def_cfa_register 7
 3842 0006 7860     		str	r0, [r7, #4]
2050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 3843              		.loc 1 2054 0
 3844 0008 7B68     		ldr	r3, [r7, #4]
 3845 000a DB6B     		ldr	r3, [r3, #60]
2055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3846              		.loc 1 2055 0
 3847 000c 1846     		mov	r0, r3
 3848 000e 07F10C07 		add	r7, r7, #12
 3849 0012 BD46     		mov	sp, r7
 3850 0014 80BC     		pop	{r7}
 3851 0016 7047     		bx	lr
 3852              		.cfi_endproc
 3853              	.LFE165:
 3855              		.section	.text.TIM_GetCapture4,"ax",%progbits
 3856              		.align	2
 3857              		.global	TIM_GetCapture4
 3858              		.thumb
 3859              		.thumb_func
 3861              	TIM_GetCapture4:
 3862              	.LFB166:
2056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3863              		.loc 1 2063 0
 3864              		.cfi_startproc
 3865              		@ args = 0, pretend = 0, frame = 8
 3866              		@ frame_needed = 1, uses_anonymous_args = 0
 3867              		@ link register save eliminated.
 3868 0000 80B4     		push	{r7}
 3869              	.LCFI168:
 3870              		.cfi_def_cfa_offset 4
 3871              		.cfi_offset 7, -4
 3872 0002 83B0     		sub	sp, sp, #12
 3873              	.LCFI169:
 3874              		.cfi_def_cfa_offset 16
 3875 0004 00AF     		add	r7, sp, #0
 3876              	.LCFI170:
 3877              		.cfi_def_cfa_register 7
 3878 0006 7860     		str	r0, [r7, #4]
2064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 3879              		.loc 1 2068 0
 3880 0008 7B68     		ldr	r3, [r7, #4]
 3881 000a 1B6C     		ldr	r3, [r3, #64]
2069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3882              		.loc 1 2069 0
 3883 000c 1846     		mov	r0, r3
 3884 000e 07F10C07 		add	r7, r7, #12
 3885 0012 BD46     		mov	sp, r7
 3886 0014 80BC     		pop	{r7}
 3887 0016 7047     		bx	lr
 3888              		.cfi_endproc
 3889              	.LFE166:
 3891              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 3892              		.align	2
 3893              		.global	TIM_SetIC1Prescaler
 3894              		.thumb
 3895              		.thumb_func
 3897              	TIM_SetIC1Prescaler:
 3898              	.LFB167:
2070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3899              		.loc 1 2083 0
 3900              		.cfi_startproc
 3901              		@ args = 0, pretend = 0, frame = 8
 3902              		@ frame_needed = 1, uses_anonymous_args = 0
 3903              		@ link register save eliminated.
 3904 0000 80B4     		push	{r7}
 3905              	.LCFI171:
 3906              		.cfi_def_cfa_offset 4
 3907              		.cfi_offset 7, -4
 3908 0002 83B0     		sub	sp, sp, #12
 3909              	.LCFI172:
 3910              		.cfi_def_cfa_offset 16
 3911 0004 00AF     		add	r7, sp, #0
 3912              	.LCFI173:
 3913              		.cfi_def_cfa_register 7
 3914 0006 7860     		str	r0, [r7, #4]
 3915 0008 0B46     		mov	r3, r1
 3916 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 3917              		.loc 1 2089 0
 3918 000c 7B68     		ldr	r3, [r7, #4]
 3919 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3920 0010 9BB2     		uxth	r3, r3
 3921 0012 23F00C03 		bic	r3, r3, #12
 3922 0016 9AB2     		uxth	r2, r3
 3923 0018 7B68     		ldr	r3, [r7, #4]
 3924 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 3925              		.loc 1 2092 0
 3926 001c 7B68     		ldr	r3, [r7, #4]
 3927 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3928 0020 9AB2     		uxth	r2, r3
 3929 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3930 0024 1343     		orrs	r3, r3, r2
 3931 0026 9AB2     		uxth	r2, r3
 3932 0028 7B68     		ldr	r3, [r7, #4]
 3933 002a 1A83     		strh	r2, [r3, #24]	@ movhi
2093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3934              		.loc 1 2093 0
 3935 002c 07F10C07 		add	r7, r7, #12
 3936 0030 BD46     		mov	sp, r7
 3937 0032 80BC     		pop	{r7}
 3938 0034 7047     		bx	lr
 3939              		.cfi_endproc
 3940              	.LFE167:
 3942 0036 00BF     		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 3943              		.align	2
 3944              		.global	TIM_SetIC2Prescaler
 3945              		.thumb
 3946              		.thumb_func
 3948              	TIM_SetIC2Prescaler:
 3949              	.LFB168:
2094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3950              		.loc 1 2108 0
 3951              		.cfi_startproc
 3952              		@ args = 0, pretend = 0, frame = 8
 3953              		@ frame_needed = 1, uses_anonymous_args = 0
 3954              		@ link register save eliminated.
 3955 0000 80B4     		push	{r7}
 3956              	.LCFI174:
 3957              		.cfi_def_cfa_offset 4
 3958              		.cfi_offset 7, -4
 3959 0002 83B0     		sub	sp, sp, #12
 3960              	.LCFI175:
 3961              		.cfi_def_cfa_offset 16
 3962 0004 00AF     		add	r7, sp, #0
 3963              	.LCFI176:
 3964              		.cfi_def_cfa_register 7
 3965 0006 7860     		str	r0, [r7, #4]
 3966 0008 0B46     		mov	r3, r1
 3967 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 3968              		.loc 1 2114 0
 3969 000c 7B68     		ldr	r3, [r7, #4]
 3970 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3971 0010 9BB2     		uxth	r3, r3
 3972 0012 23F44063 		bic	r3, r3, #3072
 3973 0016 9AB2     		uxth	r2, r3
 3974 0018 7B68     		ldr	r3, [r7, #4]
 3975 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 3976              		.loc 1 2117 0
 3977 001c 7B68     		ldr	r3, [r7, #4]
 3978 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3979 0020 9AB2     		uxth	r2, r3
 3980 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3981 0024 4FEA0323 		lsl	r3, r3, #8
 3982 0028 9BB2     		uxth	r3, r3
 3983 002a 1343     		orrs	r3, r3, r2
 3984 002c 9AB2     		uxth	r2, r3
 3985 002e 7B68     		ldr	r3, [r7, #4]
 3986 0030 1A83     		strh	r2, [r3, #24]	@ movhi
2118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3987              		.loc 1 2118 0
 3988 0032 07F10C07 		add	r7, r7, #12
 3989 0036 BD46     		mov	sp, r7
 3990 0038 80BC     		pop	{r7}
 3991 003a 7047     		bx	lr
 3992              		.cfi_endproc
 3993              	.LFE168:
 3995              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 3996              		.align	2
 3997              		.global	TIM_SetIC3Prescaler
 3998              		.thumb
 3999              		.thumb_func
 4001              	TIM_SetIC3Prescaler:
 4002              	.LFB169:
2119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4003              		.loc 1 2132 0
 4004              		.cfi_startproc
 4005              		@ args = 0, pretend = 0, frame = 8
 4006              		@ frame_needed = 1, uses_anonymous_args = 0
 4007              		@ link register save eliminated.
 4008 0000 80B4     		push	{r7}
 4009              	.LCFI177:
 4010              		.cfi_def_cfa_offset 4
 4011              		.cfi_offset 7, -4
 4012 0002 83B0     		sub	sp, sp, #12
 4013              	.LCFI178:
 4014              		.cfi_def_cfa_offset 16
 4015 0004 00AF     		add	r7, sp, #0
 4016              	.LCFI179:
 4017              		.cfi_def_cfa_register 7
 4018 0006 7860     		str	r0, [r7, #4]
 4019 0008 0B46     		mov	r3, r1
 4020 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 4021              		.loc 1 2138 0
 4022 000c 7B68     		ldr	r3, [r7, #4]
 4023 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4024 0010 9BB2     		uxth	r3, r3
 4025 0012 23F00C03 		bic	r3, r3, #12
 4026 0016 9AB2     		uxth	r2, r3
 4027 0018 7B68     		ldr	r3, [r7, #4]
 4028 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 4029              		.loc 1 2141 0
 4030 001c 7B68     		ldr	r3, [r7, #4]
 4031 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4032 0020 9AB2     		uxth	r2, r3
 4033 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4034 0024 1343     		orrs	r3, r3, r2
 4035 0026 9AB2     		uxth	r2, r3
 4036 0028 7B68     		ldr	r3, [r7, #4]
 4037 002a 9A83     		strh	r2, [r3, #28]	@ movhi
2142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4038              		.loc 1 2142 0
 4039 002c 07F10C07 		add	r7, r7, #12
 4040 0030 BD46     		mov	sp, r7
 4041 0032 80BC     		pop	{r7}
 4042 0034 7047     		bx	lr
 4043              		.cfi_endproc
 4044              	.LFE169:
 4046 0036 00BF     		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 4047              		.align	2
 4048              		.global	TIM_SetIC4Prescaler
 4049              		.thumb
 4050              		.thumb_func
 4052              	TIM_SetIC4Prescaler:
 4053              	.LFB170:
2143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4054              		.loc 1 2156 0
 4055              		.cfi_startproc
 4056              		@ args = 0, pretend = 0, frame = 8
 4057              		@ frame_needed = 1, uses_anonymous_args = 0
 4058              		@ link register save eliminated.
 4059 0000 80B4     		push	{r7}
 4060              	.LCFI180:
 4061              		.cfi_def_cfa_offset 4
 4062              		.cfi_offset 7, -4
 4063 0002 83B0     		sub	sp, sp, #12
 4064              	.LCFI181:
 4065              		.cfi_def_cfa_offset 16
 4066 0004 00AF     		add	r7, sp, #0
 4067              	.LCFI182:
 4068              		.cfi_def_cfa_register 7
 4069 0006 7860     		str	r0, [r7, #4]
 4070 0008 0B46     		mov	r3, r1
 4071 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 4072              		.loc 1 2162 0
 4073 000c 7B68     		ldr	r3, [r7, #4]
 4074 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4075 0010 9BB2     		uxth	r3, r3
 4076 0012 23F44063 		bic	r3, r3, #3072
 4077 0016 9AB2     		uxth	r2, r3
 4078 0018 7B68     		ldr	r3, [r7, #4]
 4079 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 4080              		.loc 1 2165 0
 4081 001c 7B68     		ldr	r3, [r7, #4]
 4082 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4083 0020 9AB2     		uxth	r2, r3
 4084 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4085 0024 4FEA0323 		lsl	r3, r3, #8
 4086 0028 9BB2     		uxth	r3, r3
 4087 002a 1343     		orrs	r3, r3, r2
 4088 002c 9AB2     		uxth	r2, r3
 4089 002e 7B68     		ldr	r3, [r7, #4]
 4090 0030 9A83     		strh	r2, [r3, #28]	@ movhi
2166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4091              		.loc 1 2166 0
 4092 0032 07F10C07 		add	r7, r7, #12
 4093 0036 BD46     		mov	sp, r7
 4094 0038 80BC     		pop	{r7}
 4095 003a 7047     		bx	lr
 4096              		.cfi_endproc
 4097              	.LFE170:
 4099              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 4100              		.align	2
 4101              		.global	TIM_BDTRConfig
 4102              		.thumb
 4103              		.thumb_func
 4105              	TIM_BDTRConfig:
 4106              	.LFB171:
2167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4107              		.loc 1 2209 0
 4108              		.cfi_startproc
 4109              		@ args = 0, pretend = 0, frame = 8
 4110              		@ frame_needed = 1, uses_anonymous_args = 0
 4111              		@ link register save eliminated.
 4112 0000 80B4     		push	{r7}
 4113              	.LCFI183:
 4114              		.cfi_def_cfa_offset 4
 4115              		.cfi_offset 7, -4
 4116 0002 83B0     		sub	sp, sp, #12
 4117              	.LCFI184:
 4118              		.cfi_def_cfa_offset 16
 4119 0004 00AF     		add	r7, sp, #0
 4120              	.LCFI185:
 4121              		.cfi_def_cfa_register 7
 4122 0006 7860     		str	r0, [r7, #4]
 4123 0008 3960     		str	r1, [r7, #0]
2210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4124              		.loc 1 2221 0
 4125 000a 3B68     		ldr	r3, [r7, #0]
 4126 000c 1A88     		ldrh	r2, [r3, #0]
 4127 000e 3B68     		ldr	r3, [r7, #0]
 4128 0010 5B88     		ldrh	r3, [r3, #2]
 4129 0012 1343     		orrs	r3, r3, r2
 4130 0014 9AB2     		uxth	r2, r3
2222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4131              		.loc 1 2222 0
 4132 0016 3B68     		ldr	r3, [r7, #0]
 4133 0018 9B88     		ldrh	r3, [r3, #4]
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4134              		.loc 1 2221 0
 4135 001a 1343     		orrs	r3, r3, r2
 4136 001c 9AB2     		uxth	r2, r3
 4137              		.loc 1 2222 0
 4138 001e 3B68     		ldr	r3, [r7, #0]
 4139 0020 DB88     		ldrh	r3, [r3, #6]
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4140              		.loc 1 2221 0
 4141 0022 1343     		orrs	r3, r3, r2
 4142 0024 9AB2     		uxth	r2, r3
2223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4143              		.loc 1 2223 0
 4144 0026 3B68     		ldr	r3, [r7, #0]
 4145 0028 1B89     		ldrh	r3, [r3, #8]
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4146              		.loc 1 2221 0
 4147 002a 1343     		orrs	r3, r3, r2
 4148 002c 9AB2     		uxth	r2, r3
 4149              		.loc 1 2223 0
 4150 002e 3B68     		ldr	r3, [r7, #0]
 4151 0030 5B89     		ldrh	r3, [r3, #10]
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4152              		.loc 1 2221 0
 4153 0032 1343     		orrs	r3, r3, r2
 4154 0034 9AB2     		uxth	r2, r3
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 4155              		.loc 1 2224 0
 4156 0036 3B68     		ldr	r3, [r7, #0]
 4157 0038 9B89     		ldrh	r3, [r3, #12]
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4158              		.loc 1 2221 0
 4159 003a 1343     		orrs	r3, r3, r2
 4160 003c 9AB2     		uxth	r2, r3
 4161 003e 7B68     		ldr	r3, [r7, #4]
 4162 0040 A3F84420 		strh	r2, [r3, #68]	@ movhi
2225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4163              		.loc 1 2225 0
 4164 0044 07F10C07 		add	r7, r7, #12
 4165 0048 BD46     		mov	sp, r7
 4166 004a 80BC     		pop	{r7}
 4167 004c 7047     		bx	lr
 4168              		.cfi_endproc
 4169              	.LFE171:
 4171 004e 00BF     		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 4172              		.align	2
 4173              		.global	TIM_BDTRStructInit
 4174              		.thumb
 4175              		.thumb_func
 4177              	TIM_BDTRStructInit:
 4178              	.LFB172:
2226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4179              		.loc 1 2234 0
 4180              		.cfi_startproc
 4181              		@ args = 0, pretend = 0, frame = 8
 4182              		@ frame_needed = 1, uses_anonymous_args = 0
 4183              		@ link register save eliminated.
 4184 0000 80B4     		push	{r7}
 4185              	.LCFI186:
 4186              		.cfi_def_cfa_offset 4
 4187              		.cfi_offset 7, -4
 4188 0002 83B0     		sub	sp, sp, #12
 4189              	.LCFI187:
 4190              		.cfi_def_cfa_offset 16
 4191 0004 00AF     		add	r7, sp, #0
 4192              	.LCFI188:
 4193              		.cfi_def_cfa_register 7
 4194 0006 7860     		str	r0, [r7, #4]
2235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 4195              		.loc 1 2236 0
 4196 0008 7B68     		ldr	r3, [r7, #4]
 4197 000a 4FF00002 		mov	r2, #0
 4198 000e 1A80     		strh	r2, [r3, #0]	@ movhi
2237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 4199              		.loc 1 2237 0
 4200 0010 7B68     		ldr	r3, [r7, #4]
 4201 0012 4FF00002 		mov	r2, #0
 4202 0016 5A80     		strh	r2, [r3, #2]	@ movhi
2238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 4203              		.loc 1 2238 0
 4204 0018 7B68     		ldr	r3, [r7, #4]
 4205 001a 4FF00002 		mov	r2, #0
 4206 001e 9A80     		strh	r2, [r3, #4]	@ movhi
2239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 4207              		.loc 1 2239 0
 4208 0020 7B68     		ldr	r3, [r7, #4]
 4209 0022 4FF00002 		mov	r2, #0
 4210 0026 DA80     		strh	r2, [r3, #6]	@ movhi
2240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 4211              		.loc 1 2240 0
 4212 0028 7B68     		ldr	r3, [r7, #4]
 4213 002a 4FF00002 		mov	r2, #0
 4214 002e 1A81     		strh	r2, [r3, #8]	@ movhi
2241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 4215              		.loc 1 2241 0
 4216 0030 7B68     		ldr	r3, [r7, #4]
 4217 0032 4FF00002 		mov	r2, #0
 4218 0036 5A81     		strh	r2, [r3, #10]	@ movhi
2242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 4219              		.loc 1 2242 0
 4220 0038 7B68     		ldr	r3, [r7, #4]
 4221 003a 4FF00002 		mov	r2, #0
 4222 003e 9A81     		strh	r2, [r3, #12]	@ movhi
2243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4223              		.loc 1 2243 0
 4224 0040 07F10C07 		add	r7, r7, #12
 4225 0044 BD46     		mov	sp, r7
 4226 0046 80BC     		pop	{r7}
 4227 0048 7047     		bx	lr
 4228              		.cfi_endproc
 4229              	.LFE172:
 4231 004a 00BF     		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 4232              		.align	2
 4233              		.global	TIM_CtrlPWMOutputs
 4234              		.thumb
 4235              		.thumb_func
 4237              	TIM_CtrlPWMOutputs:
 4238              	.LFB173:
2244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4239              		.loc 1 2253 0
 4240              		.cfi_startproc
 4241              		@ args = 0, pretend = 0, frame = 8
 4242              		@ frame_needed = 1, uses_anonymous_args = 0
 4243              		@ link register save eliminated.
 4244 0000 80B4     		push	{r7}
 4245              	.LCFI189:
 4246              		.cfi_def_cfa_offset 4
 4247              		.cfi_offset 7, -4
 4248 0002 83B0     		sub	sp, sp, #12
 4249              	.LCFI190:
 4250              		.cfi_def_cfa_offset 16
 4251 0004 00AF     		add	r7, sp, #0
 4252              	.LCFI191:
 4253              		.cfi_def_cfa_register 7
 4254 0006 7860     		str	r0, [r7, #4]
 4255 0008 0B46     		mov	r3, r1
 4256 000a FB70     		strb	r3, [r7, #3]
2254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4257              		.loc 1 2258 0
 4258 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4259 000e 002B     		cmp	r3, #0
 4260 0010 0CD0     		beq	.L113
2259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 4261              		.loc 1 2261 0
 4262 0012 7B68     		ldr	r3, [r7, #4]
 4263 0014 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4264 0018 9BB2     		uxth	r3, r3
 4265 001a 6FEA4343 		mvn	r3, r3, lsl #17
 4266 001e 6FEA5343 		mvn	r3, r3, lsr #17
 4267 0022 9AB2     		uxth	r2, r3
 4268 0024 7B68     		ldr	r3, [r7, #4]
 4269 0026 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4270 002a 0BE0     		b	.L112
 4271              	.L113:
2262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 4272              		.loc 1 2266 0
 4273 002c 7B68     		ldr	r3, [r7, #4]
 4274 002e B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4275 0032 9BB2     		uxth	r3, r3
 4276 0034 4FEA4343 		lsl	r3, r3, #17
 4277 0038 4FEA5343 		lsr	r3, r3, #17
 4278 003c 9AB2     		uxth	r2, r3
 4279 003e 7B68     		ldr	r3, [r7, #4]
 4280 0040 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4281              	.L112:
2267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4282              		.loc 1 2268 0
 4283 0044 07F10C07 		add	r7, r7, #12
 4284 0048 BD46     		mov	sp, r7
 4285 004a 80BC     		pop	{r7}
 4286 004c 7047     		bx	lr
 4287              		.cfi_endproc
 4288              	.LFE173:
 4290 004e 00BF     		.section	.text.TIM_SelectCOM,"ax",%progbits
 4291              		.align	2
 4292              		.global	TIM_SelectCOM
 4293              		.thumb
 4294              		.thumb_func
 4296              	TIM_SelectCOM:
 4297              	.LFB174:
2269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4298              		.loc 1 2278 0
 4299              		.cfi_startproc
 4300              		@ args = 0, pretend = 0, frame = 8
 4301              		@ frame_needed = 1, uses_anonymous_args = 0
 4302              		@ link register save eliminated.
 4303 0000 80B4     		push	{r7}
 4304              	.LCFI192:
 4305              		.cfi_def_cfa_offset 4
 4306              		.cfi_offset 7, -4
 4307 0002 83B0     		sub	sp, sp, #12
 4308              	.LCFI193:
 4309              		.cfi_def_cfa_offset 16
 4310 0004 00AF     		add	r7, sp, #0
 4311              	.LCFI194:
 4312              		.cfi_def_cfa_register 7
 4313 0006 7860     		str	r0, [r7, #4]
 4314 0008 0B46     		mov	r3, r1
 4315 000a FB70     		strb	r3, [r7, #3]
2279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4316              		.loc 1 2283 0
 4317 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4318 000e 002B     		cmp	r3, #0
 4319 0010 08D0     		beq	.L116
2284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 4320              		.loc 1 2286 0
 4321 0012 7B68     		ldr	r3, [r7, #4]
 4322 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4323 0016 9BB2     		uxth	r3, r3
 4324 0018 43F00403 		orr	r3, r3, #4
 4325 001c 9AB2     		uxth	r2, r3
 4326 001e 7B68     		ldr	r3, [r7, #4]
 4327 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4328 0022 07E0     		b	.L115
 4329              	.L116:
2287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 4330              		.loc 1 2291 0
 4331 0024 7B68     		ldr	r3, [r7, #4]
 4332 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4333 0028 9BB2     		uxth	r3, r3
 4334 002a 23F00403 		bic	r3, r3, #4
 4335 002e 9AB2     		uxth	r2, r3
 4336 0030 7B68     		ldr	r3, [r7, #4]
 4337 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4338              	.L115:
2292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4339              		.loc 1 2293 0
 4340 0034 07F10C07 		add	r7, r7, #12
 4341 0038 BD46     		mov	sp, r7
 4342 003a 80BC     		pop	{r7}
 4343 003c 7047     		bx	lr
 4344              		.cfi_endproc
 4345              	.LFE174:
 4347 003e 00BF     		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 4348              		.align	2
 4349              		.global	TIM_CCPreloadControl
 4350              		.thumb
 4351              		.thumb_func
 4353              	TIM_CCPreloadControl:
 4354              	.LFB175:
2294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4355              		.loc 1 2303 0
 4356              		.cfi_startproc
 4357              		@ args = 0, pretend = 0, frame = 8
 4358              		@ frame_needed = 1, uses_anonymous_args = 0
 4359              		@ link register save eliminated.
 4360 0000 80B4     		push	{r7}
 4361              	.LCFI195:
 4362              		.cfi_def_cfa_offset 4
 4363              		.cfi_offset 7, -4
 4364 0002 83B0     		sub	sp, sp, #12
 4365              	.LCFI196:
 4366              		.cfi_def_cfa_offset 16
 4367 0004 00AF     		add	r7, sp, #0
 4368              	.LCFI197:
 4369              		.cfi_def_cfa_register 7
 4370 0006 7860     		str	r0, [r7, #4]
 4371 0008 0B46     		mov	r3, r1
 4372 000a FB70     		strb	r3, [r7, #3]
2304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4373              		.loc 1 2307 0
 4374 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4375 000e 002B     		cmp	r3, #0
 4376 0010 08D0     		beq	.L119
2308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 4377              		.loc 1 2310 0
 4378 0012 7B68     		ldr	r3, [r7, #4]
 4379 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4380 0016 9BB2     		uxth	r3, r3
 4381 0018 43F00103 		orr	r3, r3, #1
 4382 001c 9AB2     		uxth	r2, r3
 4383 001e 7B68     		ldr	r3, [r7, #4]
 4384 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4385 0022 07E0     		b	.L118
 4386              	.L119:
2311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 4387              		.loc 1 2315 0
 4388 0024 7B68     		ldr	r3, [r7, #4]
 4389 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4390 0028 9BB2     		uxth	r3, r3
 4391 002a 23F00103 		bic	r3, r3, #1
 4392 002e 9AB2     		uxth	r2, r3
 4393 0030 7B68     		ldr	r3, [r7, #4]
 4394 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4395              	.L118:
2316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4396              		.loc 1 2317 0
 4397 0034 07F10C07 		add	r7, r7, #12
 4398 0038 BD46     		mov	sp, r7
 4399 003a 80BC     		pop	{r7}
 4400 003c 7047     		bx	lr
 4401              		.cfi_endproc
 4402              	.LFE175:
 4404 003e 00BF     		.section	.text.TIM_ITConfig,"ax",%progbits
 4405              		.align	2
 4406              		.global	TIM_ITConfig
 4407              		.thumb
 4408              		.thumb_func
 4410              	TIM_ITConfig:
 4411              	.LFB176:
2318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4412              		.loc 1 2360 0
 4413              		.cfi_startproc
 4414              		@ args = 0, pretend = 0, frame = 8
 4415              		@ frame_needed = 1, uses_anonymous_args = 0
 4416              		@ link register save eliminated.
 4417 0000 80B4     		push	{r7}
 4418              	.LCFI198:
 4419              		.cfi_def_cfa_offset 4
 4420              		.cfi_offset 7, -4
 4421 0002 83B0     		sub	sp, sp, #12
 4422              	.LCFI199:
 4423              		.cfi_def_cfa_offset 16
 4424 0004 00AF     		add	r7, sp, #0
 4425              	.LCFI200:
 4426              		.cfi_def_cfa_register 7
 4427 0006 7860     		str	r0, [r7, #4]
 4428 0008 1346     		mov	r3, r2
 4429 000a 0A46     		mov	r2, r1	@ movhi
 4430 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4431 000e 7B70     		strb	r3, [r7, #1]
2361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4432              		.loc 1 2366 0
 4433 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4434 0012 002B     		cmp	r3, #0
 4435 0014 08D0     		beq	.L122
2367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 4436              		.loc 1 2369 0
 4437 0016 7B68     		ldr	r3, [r7, #4]
 4438 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4439 001a 9AB2     		uxth	r2, r3
 4440 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4441 001e 1343     		orrs	r3, r3, r2
 4442 0020 9AB2     		uxth	r2, r3
 4443 0022 7B68     		ldr	r3, [r7, #4]
 4444 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 4445 0026 0AE0     		b	.L121
 4446              	.L122:
2370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 4447              		.loc 1 2374 0
 4448 0028 7B68     		ldr	r3, [r7, #4]
 4449 002a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4450 002c 9AB2     		uxth	r2, r3
 4451 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4452 0030 6FEA0303 		mvn	r3, r3
 4453 0034 9BB2     		uxth	r3, r3
 4454 0036 1340     		ands	r3, r3, r2
 4455 0038 9AB2     		uxth	r2, r3
 4456 003a 7B68     		ldr	r3, [r7, #4]
 4457 003c 9A81     		strh	r2, [r3, #12]	@ movhi
 4458              	.L121:
2375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4459              		.loc 1 2376 0
 4460 003e 07F10C07 		add	r7, r7, #12
 4461 0042 BD46     		mov	sp, r7
 4462 0044 80BC     		pop	{r7}
 4463 0046 7047     		bx	lr
 4464              		.cfi_endproc
 4465              	.LFE176:
 4467              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 4468              		.align	2
 4469              		.global	TIM_GenerateEvent
 4470              		.thumb
 4471              		.thumb_func
 4473              	TIM_GenerateEvent:
 4474              	.LFB177:
2377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4475              		.loc 1 2398 0
 4476              		.cfi_startproc
 4477              		@ args = 0, pretend = 0, frame = 8
 4478              		@ frame_needed = 1, uses_anonymous_args = 0
 4479              		@ link register save eliminated.
 4480 0000 80B4     		push	{r7}
 4481              	.LCFI201:
 4482              		.cfi_def_cfa_offset 4
 4483              		.cfi_offset 7, -4
 4484 0002 83B0     		sub	sp, sp, #12
 4485              	.LCFI202:
 4486              		.cfi_def_cfa_offset 16
 4487 0004 00AF     		add	r7, sp, #0
 4488              	.LCFI203:
 4489              		.cfi_def_cfa_register 7
 4490 0006 7860     		str	r0, [r7, #4]
 4491 0008 0B46     		mov	r3, r1
 4492 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 4493              		.loc 1 2404 0
 4494 000c 7B68     		ldr	r3, [r7, #4]
 4495 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4496 0010 9A82     		strh	r2, [r3, #20]	@ movhi
2405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4497              		.loc 1 2405 0
 4498 0012 07F10C07 		add	r7, r7, #12
 4499 0016 BD46     		mov	sp, r7
 4500 0018 80BC     		pop	{r7}
 4501 001a 7047     		bx	lr
 4502              		.cfi_endproc
 4503              	.LFE177:
 4505              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 4506              		.align	2
 4507              		.global	TIM_GetFlagStatus
 4508              		.thumb
 4509              		.thumb_func
 4511              	TIM_GetFlagStatus:
 4512              	.LFB178:
2406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4513              		.loc 1 2431 0
 4514              		.cfi_startproc
 4515              		@ args = 0, pretend = 0, frame = 16
 4516              		@ frame_needed = 1, uses_anonymous_args = 0
 4517              		@ link register save eliminated.
 4518 0000 80B4     		push	{r7}
 4519              	.LCFI204:
 4520              		.cfi_def_cfa_offset 4
 4521              		.cfi_offset 7, -4
 4522 0002 85B0     		sub	sp, sp, #20
 4523              	.LCFI205:
 4524              		.cfi_def_cfa_offset 24
 4525 0004 00AF     		add	r7, sp, #0
 4526              	.LCFI206:
 4527              		.cfi_def_cfa_register 7
 4528 0006 7860     		str	r0, [r7, #4]
 4529 0008 0B46     		mov	r3, r1
 4530 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4531              		.loc 1 2432 0
 4532 000c 4FF00003 		mov	r3, #0
 4533 0010 FB73     		strb	r3, [r7, #15]
2433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 4534              		.loc 1 2438 0
 4535 0012 7B68     		ldr	r3, [r7, #4]
 4536 0014 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4537 0016 9AB2     		uxth	r2, r3
 4538 0018 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4539 001a 1340     		ands	r3, r3, r2
 4540 001c 9BB2     		uxth	r3, r3
 4541 001e 002B     		cmp	r3, #0
 4542 0020 03D0     		beq	.L126
2439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4543              		.loc 1 2440 0
 4544 0022 4FF00103 		mov	r3, #1
 4545 0026 FB73     		strb	r3, [r7, #15]
 4546 0028 02E0     		b	.L127
 4547              	.L126:
2441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4548              		.loc 1 2444 0
 4549 002a 4FF00003 		mov	r3, #0
 4550 002e FB73     		strb	r3, [r7, #15]
 4551              	.L127:
2445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4552              		.loc 1 2446 0
 4553 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4554              		.loc 1 2447 0
 4555 0032 1846     		mov	r0, r3
 4556 0034 07F11407 		add	r7, r7, #20
 4557 0038 BD46     		mov	sp, r7
 4558 003a 80BC     		pop	{r7}
 4559 003c 7047     		bx	lr
 4560              		.cfi_endproc
 4561              	.LFE178:
 4563 003e 00BF     		.section	.text.TIM_ClearFlag,"ax",%progbits
 4564              		.align	2
 4565              		.global	TIM_ClearFlag
 4566              		.thumb
 4567              		.thumb_func
 4569              	TIM_ClearFlag:
 4570              	.LFB179:
2448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4571              		.loc 1 2473 0
 4572              		.cfi_startproc
 4573              		@ args = 0, pretend = 0, frame = 8
 4574              		@ frame_needed = 1, uses_anonymous_args = 0
 4575              		@ link register save eliminated.
 4576 0000 80B4     		push	{r7}
 4577              	.LCFI207:
 4578              		.cfi_def_cfa_offset 4
 4579              		.cfi_offset 7, -4
 4580 0002 83B0     		sub	sp, sp, #12
 4581              	.LCFI208:
 4582              		.cfi_def_cfa_offset 16
 4583 0004 00AF     		add	r7, sp, #0
 4584              	.LCFI209:
 4585              		.cfi_def_cfa_register 7
 4586 0006 7860     		str	r0, [r7, #4]
 4587 0008 0B46     		mov	r3, r1
 4588 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 4589              		.loc 1 2478 0
 4590 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4591 000e 6FEA0303 		mvn	r3, r3
 4592 0012 9AB2     		uxth	r2, r3
 4593 0014 7B68     		ldr	r3, [r7, #4]
 4594 0016 1A82     		strh	r2, [r3, #16]	@ movhi
2479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4595              		.loc 1 2479 0
 4596 0018 07F10C07 		add	r7, r7, #12
 4597 001c BD46     		mov	sp, r7
 4598 001e 80BC     		pop	{r7}
 4599 0020 7047     		bx	lr
 4600              		.cfi_endproc
 4601              	.LFE179:
 4603 0022 00BF     		.section	.text.TIM_GetITStatus,"ax",%progbits
 4604              		.align	2
 4605              		.global	TIM_GetITStatus
 4606              		.thumb
 4607              		.thumb_func
 4609              	TIM_GetITStatus:
 4610              	.LFB180:
2480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4611              		.loc 1 2501 0
 4612              		.cfi_startproc
 4613              		@ args = 0, pretend = 0, frame = 16
 4614              		@ frame_needed = 1, uses_anonymous_args = 0
 4615              		@ link register save eliminated.
 4616 0000 80B4     		push	{r7}
 4617              	.LCFI210:
 4618              		.cfi_def_cfa_offset 4
 4619              		.cfi_offset 7, -4
 4620 0002 85B0     		sub	sp, sp, #20
 4621              	.LCFI211:
 4622              		.cfi_def_cfa_offset 24
 4623 0004 00AF     		add	r7, sp, #0
 4624              	.LCFI212:
 4625              		.cfi_def_cfa_register 7
 4626 0006 7860     		str	r0, [r7, #4]
 4627 0008 0B46     		mov	r3, r1
 4628 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4629              		.loc 1 2502 0
 4630 000c 4FF00003 		mov	r3, #0
 4631 0010 FB73     		strb	r3, [r7, #15]
2503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 4632              		.loc 1 2503 0
 4633 0012 4FF00003 		mov	r3, #0
 4634 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 4635 0018 4FF00003 		mov	r3, #0
 4636 001c 7B81     		strh	r3, [r7, #10]	@ movhi
2504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 4637              		.loc 1 2508 0
 4638 001e 7B68     		ldr	r3, [r7, #4]
 4639 0020 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4640 0022 9AB2     		uxth	r2, r3
 4641 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4642 0026 1340     		ands	r3, r3, r2
 4643 0028 BB81     		strh	r3, [r7, #12]	@ movhi
2509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 4644              		.loc 1 2510 0
 4645 002a 7B68     		ldr	r3, [r7, #4]
 4646 002c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4647 002e 9AB2     		uxth	r2, r3
 4648 0030 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4649 0032 1340     		ands	r3, r3, r2
 4650 0034 7B81     		strh	r3, [r7, #10]	@ movhi
2511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4651              		.loc 1 2511 0
 4652 0036 BB89     		ldrh	r3, [r7, #12]
 4653 0038 002B     		cmp	r3, #0
 4654 003a 06D0     		beq	.L130
 4655              		.loc 1 2511 0 is_stmt 0 discriminator 1
 4656 003c 7B89     		ldrh	r3, [r7, #10]
 4657 003e 002B     		cmp	r3, #0
 4658 0040 03D0     		beq	.L130
2512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4659              		.loc 1 2513 0 is_stmt 1
 4660 0042 4FF00103 		mov	r3, #1
 4661 0046 FB73     		strb	r3, [r7, #15]
 4662 0048 02E0     		b	.L131
 4663              	.L130:
2514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4664              		.loc 1 2517 0
 4665 004a 4FF00003 		mov	r3, #0
 4666 004e FB73     		strb	r3, [r7, #15]
 4667              	.L131:
2518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4668              		.loc 1 2519 0
 4669 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4670              		.loc 1 2520 0
 4671 0052 1846     		mov	r0, r3
 4672 0054 07F11407 		add	r7, r7, #20
 4673 0058 BD46     		mov	sp, r7
 4674 005a 80BC     		pop	{r7}
 4675 005c 7047     		bx	lr
 4676              		.cfi_endproc
 4677              	.LFE180:
 4679 005e 00BF     		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 4680              		.align	2
 4681              		.global	TIM_ClearITPendingBit
 4682              		.thumb
 4683              		.thumb_func
 4685              	TIM_ClearITPendingBit:
 4686              	.LFB181:
2521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4687              		.loc 1 2542 0
 4688              		.cfi_startproc
 4689              		@ args = 0, pretend = 0, frame = 8
 4690              		@ frame_needed = 1, uses_anonymous_args = 0
 4691              		@ link register save eliminated.
 4692 0000 80B4     		push	{r7}
 4693              	.LCFI213:
 4694              		.cfi_def_cfa_offset 4
 4695              		.cfi_offset 7, -4
 4696 0002 83B0     		sub	sp, sp, #12
 4697              	.LCFI214:
 4698              		.cfi_def_cfa_offset 16
 4699 0004 00AF     		add	r7, sp, #0
 4700              	.LCFI215:
 4701              		.cfi_def_cfa_register 7
 4702 0006 7860     		str	r0, [r7, #4]
 4703 0008 0B46     		mov	r3, r1
 4704 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 4705              		.loc 1 2547 0
 4706 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4707 000e 6FEA0303 		mvn	r3, r3
 4708 0012 9AB2     		uxth	r2, r3
 4709 0014 7B68     		ldr	r3, [r7, #4]
 4710 0016 1A82     		strh	r2, [r3, #16]	@ movhi
2548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4711              		.loc 1 2548 0
 4712 0018 07F10C07 		add	r7, r7, #12
 4713 001c BD46     		mov	sp, r7
 4714 001e 80BC     		pop	{r7}
 4715 0020 7047     		bx	lr
 4716              		.cfi_endproc
 4717              	.LFE181:
 4719 0022 00BF     		.section	.text.TIM_DMAConfig,"ax",%progbits
 4720              		.align	2
 4721              		.global	TIM_DMAConfig
 4722              		.thumb
 4723              		.thumb_func
 4725              	TIM_DMAConfig:
 4726              	.LFB182:
2549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4727              		.loc 1 2579 0
 4728              		.cfi_startproc
 4729              		@ args = 0, pretend = 0, frame = 8
 4730              		@ frame_needed = 1, uses_anonymous_args = 0
 4731              		@ link register save eliminated.
 4732 0000 80B4     		push	{r7}
 4733              	.LCFI216:
 4734              		.cfi_def_cfa_offset 4
 4735              		.cfi_offset 7, -4
 4736 0002 83B0     		sub	sp, sp, #12
 4737              	.LCFI217:
 4738              		.cfi_def_cfa_offset 16
 4739 0004 00AF     		add	r7, sp, #0
 4740              	.LCFI218:
 4741              		.cfi_def_cfa_register 7
 4742 0006 7860     		str	r0, [r7, #4]
 4743 0008 1346     		mov	r3, r2
 4744 000a 0A46     		mov	r2, r1	@ movhi
 4745 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4746 000e 3B80     		strh	r3, [r7, #0]	@ movhi
2580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 4747              		.loc 1 2586 0
 4748 0010 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4749 0012 3B88     		ldrh	r3, [r7, #0]	@ movhi
 4750 0014 1343     		orrs	r3, r3, r2
 4751 0016 9AB2     		uxth	r2, r3
 4752 0018 7B68     		ldr	r3, [r7, #4]
 4753 001a A3F84820 		strh	r2, [r3, #72]	@ movhi
2587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4754              		.loc 1 2587 0
 4755 001e 07F10C07 		add	r7, r7, #12
 4756 0022 BD46     		mov	sp, r7
 4757 0024 80BC     		pop	{r7}
 4758 0026 7047     		bx	lr
 4759              		.cfi_endproc
 4760              	.LFE182:
 4762              		.section	.text.TIM_DMACmd,"ax",%progbits
 4763              		.align	2
 4764              		.global	TIM_DMACmd
 4765              		.thumb
 4766              		.thumb_func
 4768              	TIM_DMACmd:
 4769              	.LFB183:
2588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4770              		.loc 1 2606 0
 4771              		.cfi_startproc
 4772              		@ args = 0, pretend = 0, frame = 8
 4773              		@ frame_needed = 1, uses_anonymous_args = 0
 4774              		@ link register save eliminated.
 4775 0000 80B4     		push	{r7}
 4776              	.LCFI219:
 4777              		.cfi_def_cfa_offset 4
 4778              		.cfi_offset 7, -4
 4779 0002 83B0     		sub	sp, sp, #12
 4780              	.LCFI220:
 4781              		.cfi_def_cfa_offset 16
 4782 0004 00AF     		add	r7, sp, #0
 4783              	.LCFI221:
 4784              		.cfi_def_cfa_register 7
 4785 0006 7860     		str	r0, [r7, #4]
 4786 0008 1346     		mov	r3, r2
 4787 000a 0A46     		mov	r2, r1	@ movhi
 4788 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4789 000e 7B70     		strb	r3, [r7, #1]
2607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4790              		.loc 1 2612 0
 4791 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4792 0012 002B     		cmp	r3, #0
 4793 0014 08D0     		beq	.L135
2613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 4794              		.loc 1 2615 0
 4795 0016 7B68     		ldr	r3, [r7, #4]
 4796 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4797 001a 9AB2     		uxth	r2, r3
 4798 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4799 001e 1343     		orrs	r3, r3, r2
 4800 0020 9AB2     		uxth	r2, r3
 4801 0022 7B68     		ldr	r3, [r7, #4]
 4802 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 4803 0026 0AE0     		b	.L134
 4804              	.L135:
2616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 4805              		.loc 1 2620 0
 4806 0028 7B68     		ldr	r3, [r7, #4]
 4807 002a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4808 002c 9AB2     		uxth	r2, r3
 4809 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4810 0030 6FEA0303 		mvn	r3, r3
 4811 0034 9BB2     		uxth	r3, r3
 4812 0036 1340     		ands	r3, r3, r2
 4813 0038 9AB2     		uxth	r2, r3
 4814 003a 7B68     		ldr	r3, [r7, #4]
 4815 003c 9A81     		strh	r2, [r3, #12]	@ movhi
 4816              	.L134:
2621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4817              		.loc 1 2622 0
 4818 003e 07F10C07 		add	r7, r7, #12
 4819 0042 BD46     		mov	sp, r7
 4820 0044 80BC     		pop	{r7}
 4821 0046 7047     		bx	lr
 4822              		.cfi_endproc
 4823              	.LFE183:
 4825              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 4826              		.align	2
 4827              		.global	TIM_SelectCCDMA
 4828              		.thumb
 4829              		.thumb_func
 4831              	TIM_SelectCCDMA:
 4832              	.LFB184:
2623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4833              		.loc 1 2632 0
 4834              		.cfi_startproc
 4835              		@ args = 0, pretend = 0, frame = 8
 4836              		@ frame_needed = 1, uses_anonymous_args = 0
 4837              		@ link register save eliminated.
 4838 0000 80B4     		push	{r7}
 4839              	.LCFI222:
 4840              		.cfi_def_cfa_offset 4
 4841              		.cfi_offset 7, -4
 4842 0002 83B0     		sub	sp, sp, #12
 4843              	.LCFI223:
 4844              		.cfi_def_cfa_offset 16
 4845 0004 00AF     		add	r7, sp, #0
 4846              	.LCFI224:
 4847              		.cfi_def_cfa_register 7
 4848 0006 7860     		str	r0, [r7, #4]
 4849 0008 0B46     		mov	r3, r1
 4850 000a FB70     		strb	r3, [r7, #3]
2633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4851              		.loc 1 2637 0
 4852 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4853 000e 002B     		cmp	r3, #0
 4854 0010 08D0     		beq	.L138
2638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 4855              		.loc 1 2640 0
 4856 0012 7B68     		ldr	r3, [r7, #4]
 4857 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4858 0016 9BB2     		uxth	r3, r3
 4859 0018 43F00803 		orr	r3, r3, #8
 4860 001c 9AB2     		uxth	r2, r3
 4861 001e 7B68     		ldr	r3, [r7, #4]
 4862 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4863 0022 07E0     		b	.L137
 4864              	.L138:
2641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 4865              		.loc 1 2645 0
 4866 0024 7B68     		ldr	r3, [r7, #4]
 4867 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4868 0028 9BB2     		uxth	r3, r3
 4869 002a 23F00803 		bic	r3, r3, #8
 4870 002e 9AB2     		uxth	r2, r3
 4871 0030 7B68     		ldr	r3, [r7, #4]
 4872 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4873              	.L137:
2646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4874              		.loc 1 2647 0
 4875 0034 07F10C07 		add	r7, r7, #12
 4876 0038 BD46     		mov	sp, r7
 4877 003a 80BC     		pop	{r7}
 4878 003c 7047     		bx	lr
 4879              		.cfi_endproc
 4880              	.LFE184:
 4882 003e 00BF     		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 4883              		.align	2
 4884              		.global	TIM_InternalClockConfig
 4885              		.thumb
 4886              		.thumb_func
 4888              	TIM_InternalClockConfig:
 4889              	.LFB185:
2648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4890              		.loc 1 2671 0
 4891              		.cfi_startproc
 4892              		@ args = 0, pretend = 0, frame = 8
 4893              		@ frame_needed = 1, uses_anonymous_args = 0
 4894              		@ link register save eliminated.
 4895 0000 80B4     		push	{r7}
 4896              	.LCFI225:
 4897              		.cfi_def_cfa_offset 4
 4898              		.cfi_offset 7, -4
 4899 0002 83B0     		sub	sp, sp, #12
 4900              	.LCFI226:
 4901              		.cfi_def_cfa_offset 16
 4902 0004 00AF     		add	r7, sp, #0
 4903              	.LCFI227:
 4904              		.cfi_def_cfa_register 7
 4905 0006 7860     		str	r0, [r7, #4]
2672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 4906              		.loc 1 2676 0
 4907 0008 7B68     		ldr	r3, [r7, #4]
 4908 000a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4909 000c 9BB2     		uxth	r3, r3
 4910 000e 23F00703 		bic	r3, r3, #7
 4911 0012 9AB2     		uxth	r2, r3
 4912 0014 7B68     		ldr	r3, [r7, #4]
 4913 0016 1A81     		strh	r2, [r3, #8]	@ movhi
2677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4914              		.loc 1 2677 0
 4915 0018 07F10C07 		add	r7, r7, #12
 4916 001c BD46     		mov	sp, r7
 4917 001e 80BC     		pop	{r7}
 4918 0020 7047     		bx	lr
 4919              		.cfi_endproc
 4920              	.LFE185:
 4922 0022 00BF     		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 4923              		.align	2
 4924              		.global	TIM_ITRxExternalClockConfig
 4925              		.thumb
 4926              		.thumb_func
 4928              	TIM_ITRxExternalClockConfig:
 4929              	.LFB186:
2678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4930              		.loc 1 2692 0
 4931              		.cfi_startproc
 4932              		@ args = 0, pretend = 0, frame = 8
 4933              		@ frame_needed = 1, uses_anonymous_args = 0
 4934 0000 80B5     		push	{r7, lr}
 4935              	.LCFI228:
 4936              		.cfi_def_cfa_offset 8
 4937              		.cfi_offset 14, -4
 4938              		.cfi_offset 7, -8
 4939 0002 82B0     		sub	sp, sp, #8
 4940              	.LCFI229:
 4941              		.cfi_def_cfa_offset 16
 4942 0004 00AF     		add	r7, sp, #0
 4943              	.LCFI230:
 4944              		.cfi_def_cfa_register 7
 4945 0006 7860     		str	r0, [r7, #4]
 4946 0008 0B46     		mov	r3, r1
 4947 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 4948              		.loc 1 2698 0
 4949 000c 7B88     		ldrh	r3, [r7, #2]
 4950 000e 7868     		ldr	r0, [r7, #4]
 4951 0010 1946     		mov	r1, r3
 4952 0012 FFF7FEFF 		bl	TIM_SelectInputTrigger
2699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4953              		.loc 1 2701 0
 4954 0016 7B68     		ldr	r3, [r7, #4]
 4955 0018 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4956 001a 9BB2     		uxth	r3, r3
 4957 001c 43F00703 		orr	r3, r3, #7
 4958 0020 9AB2     		uxth	r2, r3
 4959 0022 7B68     		ldr	r3, [r7, #4]
 4960 0024 1A81     		strh	r2, [r3, #8]	@ movhi
2702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4961              		.loc 1 2702 0
 4962 0026 07F10807 		add	r7, r7, #8
 4963 002a BD46     		mov	sp, r7
 4964 002c 80BD     		pop	{r7, pc}
 4965              		.cfi_endproc
 4966              	.LFE186:
 4968 002e 00BF     		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 4969              		.align	2
 4970              		.global	TIM_TIxExternalClockConfig
 4971              		.thumb
 4972              		.thumb_func
 4974              	TIM_TIxExternalClockConfig:
 4975              	.LFB187:
2703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4976              		.loc 1 2723 0
 4977              		.cfi_startproc
 4978              		@ args = 0, pretend = 0, frame = 16
 4979              		@ frame_needed = 1, uses_anonymous_args = 0
 4980 0000 80B5     		push	{r7, lr}
 4981              	.LCFI231:
 4982              		.cfi_def_cfa_offset 8
 4983              		.cfi_offset 14, -4
 4984              		.cfi_offset 7, -8
 4985 0002 84B0     		sub	sp, sp, #16
 4986              	.LCFI232:
 4987              		.cfi_def_cfa_offset 24
 4988 0004 00AF     		add	r7, sp, #0
 4989              	.LCFI233:
 4990              		.cfi_def_cfa_register 7
 4991 0006 F860     		str	r0, [r7, #12]
 4992 0008 7981     		strh	r1, [r7, #10]	@ movhi
 4993 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 4994 000c FB80     		strh	r3, [r7, #6]	@ movhi
2724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 4995              		.loc 1 2730 0
 4996 000e 7B89     		ldrh	r3, [r7, #10]
 4997 0010 602B     		cmp	r3, #96
 4998 0012 08D1     		bne	.L143
2731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 4999              		.loc 1 2732 0
 5000 0014 3A89     		ldrh	r2, [r7, #8]
 5001 0016 FB88     		ldrh	r3, [r7, #6]
 5002 0018 F868     		ldr	r0, [r7, #12]
 5003 001a 1146     		mov	r1, r2
 5004 001c 4FF00102 		mov	r2, #1
 5005 0020 FFF7FEFF 		bl	TI2_Config
 5006 0024 07E0     		b	.L144
 5007              	.L143:
2733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 5008              		.loc 1 2736 0
 5009 0026 3A89     		ldrh	r2, [r7, #8]
 5010 0028 FB88     		ldrh	r3, [r7, #6]
 5011 002a F868     		ldr	r0, [r7, #12]
 5012 002c 1146     		mov	r1, r2
 5013 002e 4FF00102 		mov	r2, #1
 5014 0032 FFF7FEFF 		bl	TI1_Config
 5015              	.L144:
2737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 5016              		.loc 1 2739 0
 5017 0036 7B89     		ldrh	r3, [r7, #10]
 5018 0038 F868     		ldr	r0, [r7, #12]
 5019 003a 1946     		mov	r1, r3
 5020 003c FFF7FEFF 		bl	TIM_SelectInputTrigger
2740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 5021              		.loc 1 2741 0
 5022 0040 FB68     		ldr	r3, [r7, #12]
 5023 0042 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5024 0044 9BB2     		uxth	r3, r3
 5025 0046 43F00703 		orr	r3, r3, #7
 5026 004a 9AB2     		uxth	r2, r3
 5027 004c FB68     		ldr	r3, [r7, #12]
 5028 004e 1A81     		strh	r2, [r3, #8]	@ movhi
2742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5029              		.loc 1 2742 0
 5030 0050 07F11007 		add	r7, r7, #16
 5031 0054 BD46     		mov	sp, r7
 5032 0056 80BD     		pop	{r7, pc}
 5033              		.cfi_endproc
 5034              	.LFE187:
 5036              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 5037              		.align	2
 5038              		.global	TIM_ETRClockMode1Config
 5039              		.thumb
 5040              		.thumb_func
 5042              	TIM_ETRClockMode1Config:
 5043              	.LFB188:
2743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5044              		.loc 1 2763 0
 5045              		.cfi_startproc
 5046              		@ args = 0, pretend = 0, frame = 24
 5047              		@ frame_needed = 1, uses_anonymous_args = 0
 5048 0000 80B5     		push	{r7, lr}
 5049              	.LCFI234:
 5050              		.cfi_def_cfa_offset 8
 5051              		.cfi_offset 14, -4
 5052              		.cfi_offset 7, -8
 5053 0002 86B0     		sub	sp, sp, #24
 5054              	.LCFI235:
 5055              		.cfi_def_cfa_offset 32
 5056 0004 00AF     		add	r7, sp, #0
 5057              	.LCFI236:
 5058              		.cfi_def_cfa_register 7
 5059 0006 F860     		str	r0, [r7, #12]
 5060 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5061 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5062 000c FB80     		strh	r3, [r7, #6]	@ movhi
2764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5063              		.loc 1 2764 0
 5064 000e 4FF00003 		mov	r3, #0
 5065 0012 FB82     		strh	r3, [r7, #22]	@ movhi
2765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5066              		.loc 1 2772 0
 5067 0014 7989     		ldrh	r1, [r7, #10]
 5068 0016 3A89     		ldrh	r2, [r7, #8]
 5069 0018 FB88     		ldrh	r3, [r7, #6]
 5070 001a F868     		ldr	r0, [r7, #12]
 5071 001c FFF7FEFF 		bl	TIM_ETRConfig
2773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5072              		.loc 1 2775 0
 5073 0020 FB68     		ldr	r3, [r7, #12]
 5074 0022 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5075 0024 FB82     		strh	r3, [r7, #22]	@ movhi
2776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5076              		.loc 1 2778 0
 5077 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5078 0028 23F00703 		bic	r3, r3, #7
 5079 002c FB82     		strh	r3, [r7, #22]	@ movhi
2779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 5080              		.loc 1 2781 0
 5081 002e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5082 0030 43F00703 		orr	r3, r3, #7
 5083 0034 FB82     		strh	r3, [r7, #22]	@ movhi
2782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5084              		.loc 1 2784 0
 5085 0036 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5086 0038 23F07003 		bic	r3, r3, #112
 5087 003c FB82     		strh	r3, [r7, #22]	@ movhi
2785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 5088              		.loc 1 2785 0
 5089 003e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5090 0040 43F07003 		orr	r3, r3, #112
 5091 0044 FB82     		strh	r3, [r7, #22]	@ movhi
2786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5092              		.loc 1 2788 0
 5093 0046 FB68     		ldr	r3, [r7, #12]
 5094 0048 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5095 004a 1A81     		strh	r2, [r3, #8]	@ movhi
2789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5096              		.loc 1 2789 0
 5097 004c 07F11807 		add	r7, r7, #24
 5098 0050 BD46     		mov	sp, r7
 5099 0052 80BD     		pop	{r7, pc}
 5100              		.cfi_endproc
 5101              	.LFE188:
 5103              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 5104              		.align	2
 5105              		.global	TIM_ETRClockMode2Config
 5106              		.thumb
 5107              		.thumb_func
 5109              	TIM_ETRClockMode2Config:
 5110              	.LFB189:
2790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5111              		.loc 1 2810 0
 5112              		.cfi_startproc
 5113              		@ args = 0, pretend = 0, frame = 16
 5114              		@ frame_needed = 1, uses_anonymous_args = 0
 5115 0000 80B5     		push	{r7, lr}
 5116              	.LCFI237:
 5117              		.cfi_def_cfa_offset 8
 5118              		.cfi_offset 14, -4
 5119              		.cfi_offset 7, -8
 5120 0002 84B0     		sub	sp, sp, #16
 5121              	.LCFI238:
 5122              		.cfi_def_cfa_offset 24
 5123 0004 00AF     		add	r7, sp, #0
 5124              	.LCFI239:
 5125              		.cfi_def_cfa_register 7
 5126 0006 F860     		str	r0, [r7, #12]
 5127 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5128 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5129 000c FB80     		strh	r3, [r7, #6]	@ movhi
2811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5130              		.loc 1 2818 0
 5131 000e 7989     		ldrh	r1, [r7, #10]
 5132 0010 3A89     		ldrh	r2, [r7, #8]
 5133 0012 FB88     		ldrh	r3, [r7, #6]
 5134 0014 F868     		ldr	r0, [r7, #12]
 5135 0016 FFF7FEFF 		bl	TIM_ETRConfig
2819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 5136              		.loc 1 2821 0
 5137 001a FB68     		ldr	r3, [r7, #12]
 5138 001c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5139 001e 9BB2     		uxth	r3, r3
 5140 0020 43F48043 		orr	r3, r3, #16384
 5141 0024 9AB2     		uxth	r2, r3
 5142 0026 FB68     		ldr	r3, [r7, #12]
 5143 0028 1A81     		strh	r2, [r3, #8]	@ movhi
2822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5144              		.loc 1 2822 0
 5145 002a 07F11007 		add	r7, r7, #16
 5146 002e BD46     		mov	sp, r7
 5147 0030 80BD     		pop	{r7, pc}
 5148              		.cfi_endproc
 5149              	.LFE189:
 5151 0032 00BF     		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 5152              		.align	2
 5153              		.global	TIM_SelectInputTrigger
 5154              		.thumb
 5155              		.thumb_func
 5157              	TIM_SelectInputTrigger:
 5158              	.LFB190:
2823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5159              		.loc 1 2877 0
 5160              		.cfi_startproc
 5161              		@ args = 0, pretend = 0, frame = 16
 5162              		@ frame_needed = 1, uses_anonymous_args = 0
 5163              		@ link register save eliminated.
 5164 0000 80B4     		push	{r7}
 5165              	.LCFI240:
 5166              		.cfi_def_cfa_offset 4
 5167              		.cfi_offset 7, -4
 5168 0002 85B0     		sub	sp, sp, #20
 5169              	.LCFI241:
 5170              		.cfi_def_cfa_offset 24
 5171 0004 00AF     		add	r7, sp, #0
 5172              	.LCFI242:
 5173              		.cfi_def_cfa_register 7
 5174 0006 7860     		str	r0, [r7, #4]
 5175 0008 0B46     		mov	r3, r1
 5176 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5177              		.loc 1 2878 0
 5178 000c 4FF00003 		mov	r3, #0
 5179 0010 FB81     		strh	r3, [r7, #14]	@ movhi
2879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5180              		.loc 1 2885 0
 5181 0012 7B68     		ldr	r3, [r7, #4]
 5182 0014 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5183 0016 FB81     		strh	r3, [r7, #14]	@ movhi
2886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5184              		.loc 1 2888 0
 5185 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5186 001a 23F07003 		bic	r3, r3, #112
 5187 001e FB81     		strh	r3, [r7, #14]	@ movhi
2889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 5188              		.loc 1 2891 0
 5189 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5190 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5191 0024 1343     		orrs	r3, r3, r2
 5192 0026 FB81     		strh	r3, [r7, #14]	@ movhi
2892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5193              		.loc 1 2894 0
 5194 0028 7B68     		ldr	r3, [r7, #4]
 5195 002a FA89     		ldrh	r2, [r7, #14]	@ movhi
 5196 002c 1A81     		strh	r2, [r3, #8]	@ movhi
2895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5197              		.loc 1 2895 0
 5198 002e 07F11407 		add	r7, r7, #20
 5199 0032 BD46     		mov	sp, r7
 5200 0034 80BC     		pop	{r7}
 5201 0036 7047     		bx	lr
 5202              		.cfi_endproc
 5203              	.LFE190:
 5205              		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 5206              		.align	2
 5207              		.global	TIM_SelectOutputTrigger
 5208              		.thumb
 5209              		.thumb_func
 5211              	TIM_SelectOutputTrigger:
 5212              	.LFB191:
2896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5213              		.loc 1 2920 0
 5214              		.cfi_startproc
 5215              		@ args = 0, pretend = 0, frame = 8
 5216              		@ frame_needed = 1, uses_anonymous_args = 0
 5217              		@ link register save eliminated.
 5218 0000 80B4     		push	{r7}
 5219              	.LCFI243:
 5220              		.cfi_def_cfa_offset 4
 5221              		.cfi_offset 7, -4
 5222 0002 83B0     		sub	sp, sp, #12
 5223              	.LCFI244:
 5224              		.cfi_def_cfa_offset 16
 5225 0004 00AF     		add	r7, sp, #0
 5226              	.LCFI245:
 5227              		.cfi_def_cfa_register 7
 5228 0006 7860     		str	r0, [r7, #4]
 5229 0008 0B46     		mov	r3, r1
 5230 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 5231              		.loc 1 2926 0
 5232 000c 7B68     		ldr	r3, [r7, #4]
 5233 000e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5234 0010 9BB2     		uxth	r3, r3
 5235 0012 23F07003 		bic	r3, r3, #112
 5236 0016 9AB2     		uxth	r2, r3
 5237 0018 7B68     		ldr	r3, [r7, #4]
 5238 001a 9A80     		strh	r2, [r3, #4]	@ movhi
2927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 5239              		.loc 1 2928 0
 5240 001c 7B68     		ldr	r3, [r7, #4]
 5241 001e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5242 0020 9AB2     		uxth	r2, r3
 5243 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5244 0024 1343     		orrs	r3, r3, r2
 5245 0026 9AB2     		uxth	r2, r3
 5246 0028 7B68     		ldr	r3, [r7, #4]
 5247 002a 9A80     		strh	r2, [r3, #4]	@ movhi
2929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5248              		.loc 1 2929 0
 5249 002c 07F10C07 		add	r7, r7, #12
 5250 0030 BD46     		mov	sp, r7
 5251 0032 80BC     		pop	{r7}
 5252 0034 7047     		bx	lr
 5253              		.cfi_endproc
 5254              	.LFE191:
 5256 0036 00BF     		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 5257              		.align	2
 5258              		.global	TIM_SelectSlaveMode
 5259              		.thumb
 5260              		.thumb_func
 5262              	TIM_SelectSlaveMode:
 5263              	.LFB192:
2930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5264              		.loc 1 2944 0
 5265              		.cfi_startproc
 5266              		@ args = 0, pretend = 0, frame = 8
 5267              		@ frame_needed = 1, uses_anonymous_args = 0
 5268              		@ link register save eliminated.
 5269 0000 80B4     		push	{r7}
 5270              	.LCFI246:
 5271              		.cfi_def_cfa_offset 4
 5272              		.cfi_offset 7, -4
 5273 0002 83B0     		sub	sp, sp, #12
 5274              	.LCFI247:
 5275              		.cfi_def_cfa_offset 16
 5276 0004 00AF     		add	r7, sp, #0
 5277              	.LCFI248:
 5278              		.cfi_def_cfa_register 7
 5279 0006 7860     		str	r0, [r7, #4]
 5280 0008 0B46     		mov	r3, r1
 5281 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 5282              		.loc 1 2950 0
 5283 000c 7B68     		ldr	r3, [r7, #4]
 5284 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5285 0010 9BB2     		uxth	r3, r3
 5286 0012 23F00703 		bic	r3, r3, #7
 5287 0016 9AB2     		uxth	r2, r3
 5288 0018 7B68     		ldr	r3, [r7, #4]
 5289 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 5290              		.loc 1 2953 0
 5291 001c 7B68     		ldr	r3, [r7, #4]
 5292 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5293 0020 9AB2     		uxth	r2, r3
 5294 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5295 0024 1343     		orrs	r3, r3, r2
 5296 0026 9AB2     		uxth	r2, r3
 5297 0028 7B68     		ldr	r3, [r7, #4]
 5298 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5299              		.loc 1 2954 0
 5300 002c 07F10C07 		add	r7, r7, #12
 5301 0030 BD46     		mov	sp, r7
 5302 0032 80BC     		pop	{r7}
 5303 0034 7047     		bx	lr
 5304              		.cfi_endproc
 5305              	.LFE192:
 5307 0036 00BF     		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 5308              		.align	2
 5309              		.global	TIM_SelectMasterSlaveMode
 5310              		.thumb
 5311              		.thumb_func
 5313              	TIM_SelectMasterSlaveMode:
 5314              	.LFB193:
2955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5315              		.loc 1 2967 0
 5316              		.cfi_startproc
 5317              		@ args = 0, pretend = 0, frame = 8
 5318              		@ frame_needed = 1, uses_anonymous_args = 0
 5319              		@ link register save eliminated.
 5320 0000 80B4     		push	{r7}
 5321              	.LCFI249:
 5322              		.cfi_def_cfa_offset 4
 5323              		.cfi_offset 7, -4
 5324 0002 83B0     		sub	sp, sp, #12
 5325              	.LCFI250:
 5326              		.cfi_def_cfa_offset 16
 5327 0004 00AF     		add	r7, sp, #0
 5328              	.LCFI251:
 5329              		.cfi_def_cfa_register 7
 5330 0006 7860     		str	r0, [r7, #4]
 5331 0008 0B46     		mov	r3, r1
 5332 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 5333              		.loc 1 2973 0
 5334 000c 7B68     		ldr	r3, [r7, #4]
 5335 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5336 0010 9BB2     		uxth	r3, r3
 5337 0012 23F08003 		bic	r3, r3, #128
 5338 0016 9AB2     		uxth	r2, r3
 5339 0018 7B68     		ldr	r3, [r7, #4]
 5340 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 5341              		.loc 1 2976 0
 5342 001c 7B68     		ldr	r3, [r7, #4]
 5343 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5344 0020 9AB2     		uxth	r2, r3
 5345 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5346 0024 1343     		orrs	r3, r3, r2
 5347 0026 9AB2     		uxth	r2, r3
 5348 0028 7B68     		ldr	r3, [r7, #4]
 5349 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5350              		.loc 1 2977 0
 5351 002c 07F10C07 		add	r7, r7, #12
 5352 0030 BD46     		mov	sp, r7
 5353 0032 80BC     		pop	{r7}
 5354 0034 7047     		bx	lr
 5355              		.cfi_endproc
 5356              	.LFE193:
 5358 0036 00BF     		.section	.text.TIM_ETRConfig,"ax",%progbits
 5359              		.align	2
 5360              		.global	TIM_ETRConfig
 5361              		.thumb
 5362              		.thumb_func
 5364              	TIM_ETRConfig:
 5365              	.LFB194:
2978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5366              		.loc 1 2998 0
 5367              		.cfi_startproc
 5368              		@ args = 0, pretend = 0, frame = 24
 5369              		@ frame_needed = 1, uses_anonymous_args = 0
 5370              		@ link register save eliminated.
 5371 0000 80B4     		push	{r7}
 5372              	.LCFI252:
 5373              		.cfi_def_cfa_offset 4
 5374              		.cfi_offset 7, -4
 5375 0002 87B0     		sub	sp, sp, #28
 5376              	.LCFI253:
 5377              		.cfi_def_cfa_offset 32
 5378 0004 00AF     		add	r7, sp, #0
 5379              	.LCFI254:
 5380              		.cfi_def_cfa_register 7
 5381 0006 F860     		str	r0, [r7, #12]
 5382 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5383 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5384 000c FB80     		strh	r3, [r7, #6]	@ movhi
2999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5385              		.loc 1 2999 0
 5386 000e 4FF00003 		mov	r3, #0
 5387 0012 FB82     		strh	r3, [r7, #22]	@ movhi
3000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5388              		.loc 1 3007 0
 5389 0014 FB68     		ldr	r3, [r7, #12]
 5390 0016 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5391 0018 FB82     		strh	r3, [r7, #22]	@ movhi
3008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 5392              		.loc 1 3010 0
 5393 001a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5394 001c DBB2     		uxtb	r3, r3
 5395 001e FB82     		strh	r3, [r7, #22]	@ movhi
3011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 5396              		.loc 1 3013 0
 5397 0020 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5398 0022 4FEA0323 		lsl	r3, r3, #8
 5399 0026 9AB2     		uxth	r2, r3
 5400 0028 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5401 002a 1343     		orrs	r3, r3, r2
 5402 002c 9AB2     		uxth	r2, r3
 5403 002e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5404 0030 1343     		orrs	r3, r3, r2
 5405 0032 9AB2     		uxth	r2, r3
 5406 0034 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5407 0036 1343     		orrs	r3, r3, r2
 5408 0038 FB82     		strh	r3, [r7, #22]	@ movhi
3014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5409              		.loc 1 3016 0
 5410 003a FB68     		ldr	r3, [r7, #12]
 5411 003c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5412 003e 1A81     		strh	r2, [r3, #8]	@ movhi
3017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5413              		.loc 1 3017 0
 5414 0040 07F11C07 		add	r7, r7, #28
 5415 0044 BD46     		mov	sp, r7
 5416 0046 80BC     		pop	{r7}
 5417 0048 7047     		bx	lr
 5418              		.cfi_endproc
 5419              	.LFE194:
 5421 004a 00BF     		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 5422              		.align	2
 5423              		.global	TIM_EncoderInterfaceConfig
 5424              		.thumb
 5425              		.thumb_func
 5427              	TIM_EncoderInterfaceConfig:
 5428              	.LFB195:
3018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5429              		.loc 1 3056 0
 5430              		.cfi_startproc
 5431              		@ args = 0, pretend = 0, frame = 24
 5432              		@ frame_needed = 1, uses_anonymous_args = 0
 5433              		@ link register save eliminated.
 5434 0000 80B4     		push	{r7}
 5435              	.LCFI255:
 5436              		.cfi_def_cfa_offset 4
 5437              		.cfi_offset 7, -4
 5438 0002 87B0     		sub	sp, sp, #28
 5439              	.LCFI256:
 5440              		.cfi_def_cfa_offset 32
 5441 0004 00AF     		add	r7, sp, #0
 5442              	.LCFI257:
 5443              		.cfi_def_cfa_register 7
 5444 0006 F860     		str	r0, [r7, #12]
 5445 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5446 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5447 000c FB80     		strh	r3, [r7, #6]	@ movhi
3057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5448              		.loc 1 3057 0
 5449 000e 4FF00003 		mov	r3, #0
 5450 0012 FB82     		strh	r3, [r7, #22]	@ movhi
3058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5451              		.loc 1 3058 0
 5452 0014 4FF00003 		mov	r3, #0
 5453 0018 BB82     		strh	r3, [r7, #20]	@ movhi
3059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 5454              		.loc 1 3059 0
 5455 001a 4FF00003 		mov	r3, #0
 5456 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5457              		.loc 1 3068 0
 5458 0020 FB68     		ldr	r3, [r7, #12]
 5459 0022 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5460 0024 FB82     		strh	r3, [r7, #22]	@ movhi
3069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5461              		.loc 1 3071 0
 5462 0026 FB68     		ldr	r3, [r7, #12]
 5463 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5464 002a BB82     		strh	r3, [r7, #20]	@ movhi
3072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5465              		.loc 1 3074 0
 5466 002c FB68     		ldr	r3, [r7, #12]
 5467 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5468 0030 7B82     		strh	r3, [r7, #18]	@ movhi
3075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5469              		.loc 1 3077 0
 5470 0032 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5471 0034 23F00703 		bic	r3, r3, #7
 5472 0038 FB82     		strh	r3, [r7, #22]	@ movhi
3078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 5473              		.loc 1 3078 0
 5474 003a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5475 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5476 003e 1343     		orrs	r3, r3, r2
 5477 0040 FB82     		strh	r3, [r7, #22]	@ movhi
3079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 5478              		.loc 1 3081 0
 5479 0042 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5480 0044 23F44073 		bic	r3, r3, #768
 5481 0048 23F00303 		bic	r3, r3, #3
 5482 004c BB82     		strh	r3, [r7, #20]	@ movhi
3082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 5483              		.loc 1 3082 0
 5484 004e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5485 0050 43F48073 		orr	r3, r3, #256
 5486 0054 43F00103 		orr	r3, r3, #1
 5487 0058 BB82     		strh	r3, [r7, #20]	@ movhi
3083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 5488              		.loc 1 3085 0
 5489 005a 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5490 005c 23F02203 		bic	r3, r3, #34
 5491 0060 7B82     		strh	r3, [r7, #18]	@ movhi
3086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 5492              		.loc 1 3086 0
 5493 0062 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5494 0064 4FEA0313 		lsl	r3, r3, #4
 5495 0068 9AB2     		uxth	r2, r3
 5496 006a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5497 006c 1343     		orrs	r3, r3, r2
 5498 006e 9AB2     		uxth	r2, r3
 5499 0070 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5500 0072 1343     		orrs	r3, r3, r2
 5501 0074 7B82     		strh	r3, [r7, #18]	@ movhi
3087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5502              		.loc 1 3089 0
 5503 0076 FB68     		ldr	r3, [r7, #12]
 5504 0078 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5505 007a 1A81     		strh	r2, [r3, #8]	@ movhi
3090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5506              		.loc 1 3092 0
 5507 007c FB68     		ldr	r3, [r7, #12]
 5508 007e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5509 0080 1A83     		strh	r2, [r3, #24]	@ movhi
3093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5510              		.loc 1 3095 0
 5511 0082 FB68     		ldr	r3, [r7, #12]
 5512 0084 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5513 0086 1A84     		strh	r2, [r3, #32]	@ movhi
3096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5514              		.loc 1 3096 0
 5515 0088 07F11C07 		add	r7, r7, #28
 5516 008c BD46     		mov	sp, r7
 5517 008e 80BC     		pop	{r7}
 5518 0090 7047     		bx	lr
 5519              		.cfi_endproc
 5520              	.LFE195:
 5522 0092 00BF     		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 5523              		.align	2
 5524              		.global	TIM_SelectHallSensor
 5525              		.thumb
 5526              		.thumb_func
 5528              	TIM_SelectHallSensor:
 5529              	.LFB196:
3097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5530              		.loc 1 3107 0
 5531              		.cfi_startproc
 5532              		@ args = 0, pretend = 0, frame = 8
 5533              		@ frame_needed = 1, uses_anonymous_args = 0
 5534              		@ link register save eliminated.
 5535 0000 80B4     		push	{r7}
 5536              	.LCFI258:
 5537              		.cfi_def_cfa_offset 4
 5538              		.cfi_offset 7, -4
 5539 0002 83B0     		sub	sp, sp, #12
 5540              	.LCFI259:
 5541              		.cfi_def_cfa_offset 16
 5542 0004 00AF     		add	r7, sp, #0
 5543              	.LCFI260:
 5544              		.cfi_def_cfa_register 7
 5545 0006 7860     		str	r0, [r7, #4]
 5546 0008 0B46     		mov	r3, r1
 5547 000a FB70     		strb	r3, [r7, #3]
3108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 5548              		.loc 1 3112 0
 5549 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5550 000e 002B     		cmp	r3, #0
 5551 0010 08D0     		beq	.L154
3113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 5552              		.loc 1 3115 0
 5553 0012 7B68     		ldr	r3, [r7, #4]
 5554 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5555 0016 9BB2     		uxth	r3, r3
 5556 0018 43F08003 		orr	r3, r3, #128
 5557 001c 9AB2     		uxth	r2, r3
 5558 001e 7B68     		ldr	r3, [r7, #4]
 5559 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 5560 0022 07E0     		b	.L153
 5561              	.L154:
3116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 5562              		.loc 1 3120 0
 5563 0024 7B68     		ldr	r3, [r7, #4]
 5564 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5565 0028 9BB2     		uxth	r3, r3
 5566 002a 23F08003 		bic	r3, r3, #128
 5567 002e 9AB2     		uxth	r2, r3
 5568 0030 7B68     		ldr	r3, [r7, #4]
 5569 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 5570              	.L153:
3121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5571              		.loc 1 3122 0
 5572 0034 07F10C07 		add	r7, r7, #12
 5573 0038 BD46     		mov	sp, r7
 5574 003a 80BC     		pop	{r7}
 5575 003c 7047     		bx	lr
 5576              		.cfi_endproc
 5577              	.LFE196:
 5579 003e 00BF     		.section	.text.TIM_RemapConfig,"ax",%progbits
 5580              		.align	2
 5581              		.global	TIM_RemapConfig
 5582              		.thumb
 5583              		.thumb_func
 5585              	TIM_RemapConfig:
 5586              	.LFB197:
3123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5587              		.loc 1 3158 0
 5588              		.cfi_startproc
 5589              		@ args = 0, pretend = 0, frame = 8
 5590              		@ frame_needed = 1, uses_anonymous_args = 0
 5591              		@ link register save eliminated.
 5592 0000 80B4     		push	{r7}
 5593              	.LCFI261:
 5594              		.cfi_def_cfa_offset 4
 5595              		.cfi_offset 7, -4
 5596 0002 83B0     		sub	sp, sp, #12
 5597              	.LCFI262:
 5598              		.cfi_def_cfa_offset 16
 5599 0004 00AF     		add	r7, sp, #0
 5600              	.LCFI263:
 5601              		.cfi_def_cfa_register 7
 5602 0006 7860     		str	r0, [r7, #4]
 5603 0008 0B46     		mov	r3, r1
 5604 000a 7B80     		strh	r3, [r7, #2]	@ movhi
3159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 5605              		.loc 1 3164 0
 5606 000c 7B68     		ldr	r3, [r7, #4]
 5607 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5608 0010 A3F85020 		strh	r2, [r3, #80]	@ movhi
3165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5609              		.loc 1 3165 0
 5610 0014 07F10C07 		add	r7, r7, #12
 5611 0018 BD46     		mov	sp, r7
 5612 001a 80BC     		pop	{r7}
 5613 001c 7047     		bx	lr
 5614              		.cfi_endproc
 5615              	.LFE197:
 5617 001e 00BF     		.section	.text.TI1_Config,"ax",%progbits
 5618              		.align	2
 5619              		.thumb
 5620              		.thumb_func
 5622              	TI1_Config:
 5623              	.LFB198:
3166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5624              		.loc 1 3190 0
 5625              		.cfi_startproc
 5626              		@ args = 0, pretend = 0, frame = 24
 5627              		@ frame_needed = 1, uses_anonymous_args = 0
 5628              		@ link register save eliminated.
 5629 0000 80B4     		push	{r7}
 5630              	.LCFI264:
 5631              		.cfi_def_cfa_offset 4
 5632              		.cfi_offset 7, -4
 5633 0002 87B0     		sub	sp, sp, #28
 5634              	.LCFI265:
 5635              		.cfi_def_cfa_offset 32
 5636 0004 00AF     		add	r7, sp, #0
 5637              	.LCFI266:
 5638              		.cfi_def_cfa_register 7
 5639 0006 F860     		str	r0, [r7, #12]
 5640 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5641 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5642 000c FB80     		strh	r3, [r7, #6]	@ movhi
3191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 5643              		.loc 1 3191 0
 5644 000e 4FF00003 		mov	r3, #0
 5645 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5646 0014 4FF00003 		mov	r3, #0
 5647 0018 BB82     		strh	r3, [r7, #20]	@ movhi
3192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 5648              		.loc 1 3194 0
 5649 001a FB68     		ldr	r3, [r7, #12]
 5650 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5651 001e 9BB2     		uxth	r3, r3
 5652 0020 23F00103 		bic	r3, r3, #1
 5653 0024 9AB2     		uxth	r2, r3
 5654 0026 FB68     		ldr	r3, [r7, #12]
 5655 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5656              		.loc 1 3195 0
 5657 002a FB68     		ldr	r3, [r7, #12]
 5658 002c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5659 002e FB82     		strh	r3, [r7, #22]	@ movhi
3196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5660              		.loc 1 3196 0
 5661 0030 FB68     		ldr	r3, [r7, #12]
 5662 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5663 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 5664              		.loc 1 3199 0
 5665 0036 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5666 0038 23F0F303 		bic	r3, r3, #243
 5667 003c FB82     		strh	r3, [r7, #22]	@ movhi
3200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5668              		.loc 1 3200 0
 5669 003e FB88     		ldrh	r3, [r7, #6]	@ movhi
 5670 0040 4FEA0313 		lsl	r3, r3, #4
 5671 0044 9AB2     		uxth	r2, r3
 5672 0046 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5673 0048 1343     		orrs	r3, r3, r2
 5674 004a 9AB2     		uxth	r2, r3
 5675 004c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5676 004e 1343     		orrs	r3, r3, r2
 5677 0050 FB82     		strh	r3, [r7, #22]	@ movhi
3201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 5678              		.loc 1 3203 0
 5679 0052 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5680 0054 23F00A03 		bic	r3, r3, #10
 5681 0058 BB82     		strh	r3, [r7, #20]	@ movhi
3204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 5682              		.loc 1 3204 0
 5683 005a 7A89     		ldrh	r2, [r7, #10]	@ movhi
 5684 005c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5685 005e 1343     		orrs	r3, r3, r2
 5686 0060 9BB2     		uxth	r3, r3
 5687 0062 43F00103 		orr	r3, r3, #1
 5688 0066 BB82     		strh	r3, [r7, #20]	@ movhi
3205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5689              		.loc 1 3207 0
 5690 0068 FB68     		ldr	r3, [r7, #12]
 5691 006a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5692 006c 1A83     		strh	r2, [r3, #24]	@ movhi
3208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5693              		.loc 1 3208 0
 5694 006e FB68     		ldr	r3, [r7, #12]
 5695 0070 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5696 0072 1A84     		strh	r2, [r3, #32]	@ movhi
3209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5697              		.loc 1 3209 0
 5698 0074 07F11C07 		add	r7, r7, #28
 5699 0078 BD46     		mov	sp, r7
 5700 007a 80BC     		pop	{r7}
 5701 007c 7047     		bx	lr
 5702              		.cfi_endproc
 5703              	.LFE198:
 5705 007e 00BF     		.section	.text.TI2_Config,"ax",%progbits
 5706              		.align	2
 5707              		.thumb
 5708              		.thumb_func
 5710              	TI2_Config:
 5711              	.LFB199:
3210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5712              		.loc 1 3231 0
 5713              		.cfi_startproc
 5714              		@ args = 0, pretend = 0, frame = 24
 5715              		@ frame_needed = 1, uses_anonymous_args = 0
 5716              		@ link register save eliminated.
 5717 0000 80B4     		push	{r7}
 5718              	.LCFI267:
 5719              		.cfi_def_cfa_offset 4
 5720              		.cfi_offset 7, -4
 5721 0002 87B0     		sub	sp, sp, #28
 5722              	.LCFI268:
 5723              		.cfi_def_cfa_offset 32
 5724 0004 00AF     		add	r7, sp, #0
 5725              	.LCFI269:
 5726              		.cfi_def_cfa_register 7
 5727 0006 F860     		str	r0, [r7, #12]
 5728 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5729 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5730 000c FB80     		strh	r3, [r7, #6]	@ movhi
3232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 5731              		.loc 1 3232 0
 5732 000e 4FF00003 		mov	r3, #0
 5733 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5734 0014 4FF00003 		mov	r3, #0
 5735 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 5736 001a 4FF00003 		mov	r3, #0
 5737 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 5738              		.loc 1 3235 0
 5739 0020 FB68     		ldr	r3, [r7, #12]
 5740 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5741 0024 9BB2     		uxth	r3, r3
 5742 0026 23F01003 		bic	r3, r3, #16
 5743 002a 9AB2     		uxth	r2, r3
 5744 002c FB68     		ldr	r3, [r7, #12]
 5745 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5746              		.loc 1 3236 0
 5747 0030 FB68     		ldr	r3, [r7, #12]
 5748 0032 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5749 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5750              		.loc 1 3237 0
 5751 0036 FB68     		ldr	r3, [r7, #12]
 5752 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5753 003a BB82     		strh	r3, [r7, #20]	@ movhi
3238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 5754              		.loc 1 3238 0
 5755 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5756 003e 4FEA0313 		lsl	r3, r3, #4
 5757 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5758              		.loc 1 3241 0
 5759 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5760 0046 23F44073 		bic	r3, r3, #768
 5761 004a 4FEA0353 		lsl	r3, r3, #20
 5762 004e 4FEA1353 		lsr	r3, r3, #20
 5763 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 5764              		.loc 1 3242 0
 5765 0054 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5766 0056 4FEA0333 		lsl	r3, r3, #12
 5767 005a 9AB2     		uxth	r2, r3
 5768 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5769 005e 1343     		orrs	r3, r3, r2
 5770 0060 FB82     		strh	r3, [r7, #22]	@ movhi
3243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 5771              		.loc 1 3243 0
 5772 0062 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5773 0064 4FEA0323 		lsl	r3, r3, #8
 5774 0068 9AB2     		uxth	r2, r3
 5775 006a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5776 006c 1343     		orrs	r3, r3, r2
 5777 006e FB82     		strh	r3, [r7, #22]	@ movhi
3244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 5778              		.loc 1 3246 0
 5779 0070 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5780 0072 23F0A003 		bic	r3, r3, #160
 5781 0076 BB82     		strh	r3, [r7, #20]	@ movhi
3247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 5782              		.loc 1 3247 0
 5783 0078 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5784 007a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5785 007c 1343     		orrs	r3, r3, r2
 5786 007e 9BB2     		uxth	r3, r3
 5787 0080 43F01003 		orr	r3, r3, #16
 5788 0084 BB82     		strh	r3, [r7, #20]	@ movhi
3248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 5789              		.loc 1 3250 0
 5790 0086 FB68     		ldr	r3, [r7, #12]
 5791 0088 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5792 008a 1A83     		strh	r2, [r3, #24]	@ movhi
3251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5793              		.loc 1 3251 0
 5794 008c FB68     		ldr	r3, [r7, #12]
 5795 008e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5796 0090 1A84     		strh	r2, [r3, #32]	@ movhi
3252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5797              		.loc 1 3252 0
 5798 0092 07F11C07 		add	r7, r7, #28
 5799 0096 BD46     		mov	sp, r7
 5800 0098 80BC     		pop	{r7}
 5801 009a 7047     		bx	lr
 5802              		.cfi_endproc
 5803              	.LFE199:
 5805              		.section	.text.TI3_Config,"ax",%progbits
 5806              		.align	2
 5807              		.thumb
 5808              		.thumb_func
 5810              	TI3_Config:
 5811              	.LFB200:
3253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5812              		.loc 1 3273 0
 5813              		.cfi_startproc
 5814              		@ args = 0, pretend = 0, frame = 24
 5815              		@ frame_needed = 1, uses_anonymous_args = 0
 5816              		@ link register save eliminated.
 5817 0000 80B4     		push	{r7}
 5818              	.LCFI270:
 5819              		.cfi_def_cfa_offset 4
 5820              		.cfi_offset 7, -4
 5821 0002 87B0     		sub	sp, sp, #28
 5822              	.LCFI271:
 5823              		.cfi_def_cfa_offset 32
 5824 0004 00AF     		add	r7, sp, #0
 5825              	.LCFI272:
 5826              		.cfi_def_cfa_register 7
 5827 0006 F860     		str	r0, [r7, #12]
 5828 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5829 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5830 000c FB80     		strh	r3, [r7, #6]	@ movhi
3274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5831              		.loc 1 3274 0
 5832 000e 4FF00003 		mov	r3, #0
 5833 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5834 0014 4FF00003 		mov	r3, #0
 5835 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 5836 001a 4FF00003 		mov	r3, #0
 5837 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 5838              		.loc 1 3277 0
 5839 0020 FB68     		ldr	r3, [r7, #12]
 5840 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5841 0024 9BB2     		uxth	r3, r3
 5842 0026 23F48073 		bic	r3, r3, #256
 5843 002a 9AB2     		uxth	r2, r3
 5844 002c FB68     		ldr	r3, [r7, #12]
 5845 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5846              		.loc 1 3278 0
 5847 0030 FB68     		ldr	r3, [r7, #12]
 5848 0032 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5849 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5850              		.loc 1 3279 0
 5851 0036 FB68     		ldr	r3, [r7, #12]
 5852 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5853 003a BB82     		strh	r3, [r7, #20]	@ movhi
3280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 5854              		.loc 1 3280 0
 5855 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5856 003e 4FEA0323 		lsl	r3, r3, #8
 5857 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 5858              		.loc 1 3283 0
 5859 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5860 0046 23F0F303 		bic	r3, r3, #243
 5861 004a FB82     		strh	r3, [r7, #22]	@ movhi
3284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5862              		.loc 1 3284 0
 5863 004c FB88     		ldrh	r3, [r7, #6]	@ movhi
 5864 004e 4FEA0313 		lsl	r3, r3, #4
 5865 0052 9AB2     		uxth	r2, r3
 5866 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5867 0056 1343     		orrs	r3, r3, r2
 5868 0058 9AB2     		uxth	r2, r3
 5869 005a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5870 005c 1343     		orrs	r3, r3, r2
 5871 005e FB82     		strh	r3, [r7, #22]	@ movhi
3285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 5872              		.loc 1 3287 0
 5873 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5874 0062 23F42063 		bic	r3, r3, #2560
 5875 0066 BB82     		strh	r3, [r7, #20]	@ movhi
3288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 5876              		.loc 1 3288 0
 5877 0068 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5878 006a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5879 006c 1343     		orrs	r3, r3, r2
 5880 006e 9BB2     		uxth	r3, r3
 5881 0070 43F48073 		orr	r3, r3, #256
 5882 0074 BB82     		strh	r3, [r7, #20]	@ movhi
3289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5883              		.loc 1 3291 0
 5884 0076 FB68     		ldr	r3, [r7, #12]
 5885 0078 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5886 007a 9A83     		strh	r2, [r3, #28]	@ movhi
3292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5887              		.loc 1 3292 0
 5888 007c FB68     		ldr	r3, [r7, #12]
 5889 007e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5890 0080 1A84     		strh	r2, [r3, #32]	@ movhi
3293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5891              		.loc 1 3293 0
 5892 0082 07F11C07 		add	r7, r7, #28
 5893 0086 BD46     		mov	sp, r7
 5894 0088 80BC     		pop	{r7}
 5895 008a 7047     		bx	lr
 5896              		.cfi_endproc
 5897              	.LFE200:
 5899              		.section	.text.TI4_Config,"ax",%progbits
 5900              		.align	2
 5901              		.thumb
 5902              		.thumb_func
 5904              	TI4_Config:
 5905              	.LFB201:
3294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5906              		.loc 1 3314 0
 5907              		.cfi_startproc
 5908              		@ args = 0, pretend = 0, frame = 24
 5909              		@ frame_needed = 1, uses_anonymous_args = 0
 5910              		@ link register save eliminated.
 5911 0000 80B4     		push	{r7}
 5912              	.LCFI273:
 5913              		.cfi_def_cfa_offset 4
 5914              		.cfi_offset 7, -4
 5915 0002 87B0     		sub	sp, sp, #28
 5916              	.LCFI274:
 5917              		.cfi_def_cfa_offset 32
 5918 0004 00AF     		add	r7, sp, #0
 5919              	.LCFI275:
 5920              		.cfi_def_cfa_register 7
 5921 0006 F860     		str	r0, [r7, #12]
 5922 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5923 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5924 000c FB80     		strh	r3, [r7, #6]	@ movhi
3315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5925              		.loc 1 3315 0
 5926 000e 4FF00003 		mov	r3, #0
 5927 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 5928 0014 4FF00003 		mov	r3, #0
 5929 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 5930 001a 4FF00003 		mov	r3, #0
 5931 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 5932              		.loc 1 3318 0
 5933 0020 FB68     		ldr	r3, [r7, #12]
 5934 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5935 0024 9BB2     		uxth	r3, r3
 5936 0026 23F48053 		bic	r3, r3, #4096
 5937 002a 9AB2     		uxth	r2, r3
 5938 002c FB68     		ldr	r3, [r7, #12]
 5939 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5940              		.loc 1 3319 0
 5941 0030 FB68     		ldr	r3, [r7, #12]
 5942 0032 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5943 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5944              		.loc 1 3320 0
 5945 0036 FB68     		ldr	r3, [r7, #12]
 5946 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5947 003a BB82     		strh	r3, [r7, #20]	@ movhi
3321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 5948              		.loc 1 3321 0
 5949 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5950 003e 4FEA0333 		lsl	r3, r3, #12
 5951 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5952              		.loc 1 3324 0
 5953 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5954 0046 23F44073 		bic	r3, r3, #768
 5955 004a 4FEA0353 		lsl	r3, r3, #20
 5956 004e 4FEA1353 		lsr	r3, r3, #20
 5957 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 5958              		.loc 1 3325 0
 5959 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5960 0056 4FEA0323 		lsl	r3, r3, #8
 5961 005a 9AB2     		uxth	r2, r3
 5962 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5963 005e 1343     		orrs	r3, r3, r2
 5964 0060 FB82     		strh	r3, [r7, #22]	@ movhi
3326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 5965              		.loc 1 3326 0
 5966 0062 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5967 0064 4FEA0333 		lsl	r3, r3, #12
 5968 0068 9AB2     		uxth	r2, r3
 5969 006a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5970 006c 1343     		orrs	r3, r3, r2
 5971 006e FB82     		strh	r3, [r7, #22]	@ movhi
3327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 5972              		.loc 1 3329 0
 5973 0070 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5974 0072 23F40053 		bic	r3, r3, #8192
 5975 0076 4FEA4343 		lsl	r3, r3, #17
 5976 007a 4FEA5343 		lsr	r3, r3, #17
 5977 007e BB82     		strh	r3, [r7, #20]	@ movhi
3330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 5978              		.loc 1 3330 0
 5979 0080 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5980 0082 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5981 0084 1343     		orrs	r3, r3, r2
 5982 0086 9BB2     		uxth	r3, r3
 5983 0088 43F48053 		orr	r3, r3, #4096
 5984 008c BB82     		strh	r3, [r7, #20]	@ movhi
3331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5985              		.loc 1 3333 0
 5986 008e FB68     		ldr	r3, [r7, #12]
 5987 0090 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5988 0092 9A83     		strh	r2, [r3, #28]	@ movhi
3334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 5989              		.loc 1 3334 0
 5990 0094 FB68     		ldr	r3, [r7, #12]
 5991 0096 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5992 0098 1A84     		strh	r2, [r3, #32]	@ movhi
3335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5993              		.loc 1 3335 0
 5994 009a 07F11C07 		add	r7, r7, #28
 5995 009e BD46     		mov	sp, r7
 5996 00a0 80BC     		pop	{r7}
 5997 00a2 7047     		bx	lr
 5998              		.cfi_endproc
 5999              	.LFE201:
 6001              		.text
 6002              	.Letext0:
 6003              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 6004              		.file 3 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm3
 6005              		.file 4 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f
 6006              		.file 5 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:19     .text.TIM_DeInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:24     .text.TIM_DeInit:00000000 TIM_DeInit
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:272    .text.TIM_TimeBaseInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:277    .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:418    .text.TIM_TimeBaseStructInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:423    .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:470    .text.TIM_PrescalerConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:475    .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:514    .text.TIM_CounterModeConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:519    .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:568    .text.TIM_SetCounter:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:573    .text.TIM_SetCounter:00000000 TIM_SetCounter
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:605    .text.TIM_SetAutoreload:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:610    .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:642    .text.TIM_GetCounter:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:647    .text.TIM_GetCounter:00000000 TIM_GetCounter
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:678    .text.TIM_GetPrescaler:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:683    .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:715    .text.TIM_UpdateDisableConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:720    .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:772    .text.TIM_UpdateRequestConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:777    .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:829    .text.TIM_ARRPreloadConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:834    .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:886    .text.TIM_SelectOnePulseMode:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:891    .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:937    .text.TIM_SetClockDivision:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:942    .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:988    .text.TIM_Cmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:993    .text.TIM_Cmd:00000000 TIM_Cmd
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1045   .text.TIM_OC1Init:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1050   .text.TIM_OC1Init:00000000 TIM_OC1Init
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1206   .text.TIM_OC2Init:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1211   .text.TIM_OC2Init:00000000 TIM_OC2Init
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1381   .text.TIM_OC3Init:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1386   .text.TIM_OC3Init:00000000 TIM_OC3Init
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1554   .text.TIM_OC4Init:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1559   .text.TIM_OC4Init:00000000 TIM_OC4Init
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1693   .text.TIM_OCStructInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1698   .text.TIM_OCStructInit:00000000 TIM_OCStructInit
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1757   .text.TIM_SelectOCxM:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1762   .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1880   .text.TIM_SetCompare1:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1885   .text.TIM_SetCompare1:00000000 TIM_SetCompare1
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1917   .text.TIM_SetCompare2:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1922   .text.TIM_SetCompare2:00000000 TIM_SetCompare2
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1954   .text.TIM_SetCompare3:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1959   .text.TIM_SetCompare3:00000000 TIM_SetCompare3
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1991   .text.TIM_SetCompare4:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:1996   .text.TIM_SetCompare4:00000000 TIM_SetCompare4
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2028   .text.TIM_ForcedOC1Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2033   .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2082   .text.TIM_ForcedOC2Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2087   .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2138   .text.TIM_ForcedOC3Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2143   .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2192   .text.TIM_ForcedOC4Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2197   .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2248   .text.TIM_OC1PreloadConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2253   .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2302   .text.TIM_OC2PreloadConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2307   .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2358   .text.TIM_OC3PreloadConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2363   .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2412   .text.TIM_OC4PreloadConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2417   .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2468   .text.TIM_OC1FastConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2473   .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2522   .text.TIM_OC2FastConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2527   .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2578   .text.TIM_OC3FastConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2583   .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2632   .text.TIM_OC4FastConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2637   .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2688   .text.TIM_ClearOC1Ref:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2693   .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2742   .text.TIM_ClearOC2Ref:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2747   .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2799   .text.TIM_ClearOC3Ref:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2804   .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2853   .text.TIM_ClearOC4Ref:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2858   .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2910   .text.TIM_OC1PolarityConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2915   .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2964   .text.TIM_OC1NPolarityConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:2969   .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3018   .text.TIM_OC2PolarityConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3023   .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3074   .text.TIM_OC2NPolarityConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3079   .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3130   .text.TIM_OC3PolarityConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3135   .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3186   .text.TIM_OC3NPolarityConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3191   .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3242   .text.TIM_OC4PolarityConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3247   .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3298   .text.TIM_CCxCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3303   .text.TIM_CCxCmd:00000000 TIM_CCxCmd
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3365   .text.TIM_CCxNCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3370   .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3432   .text.TIM_ICInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3437   .text.TIM_ICInit:00000000 TIM_ICInit
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5622   .text.TI1_Config:00000000 TI1_Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3897   .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5710   .text.TI2_Config:00000000 TI2_Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3948   .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5810   .text.TI3_Config:00000000 TI3_Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4001   .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5904   .text.TI4_Config:00000000 TI4_Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4052   .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3562   .text.TIM_ICStructInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3567   .text.TIM_ICStructInit:00000000 TIM_ICStructInit
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3614   .text.TIM_PWMIConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3619   .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3748   .text.TIM_GetCapture1:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3753   .text.TIM_GetCapture1:00000000 TIM_GetCapture1
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3784   .text.TIM_GetCapture2:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3789   .text.TIM_GetCapture2:00000000 TIM_GetCapture2
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3820   .text.TIM_GetCapture3:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3825   .text.TIM_GetCapture3:00000000 TIM_GetCapture3
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3856   .text.TIM_GetCapture4:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3861   .text.TIM_GetCapture4:00000000 TIM_GetCapture4
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3892   .text.TIM_SetIC1Prescaler:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3943   .text.TIM_SetIC2Prescaler:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:3996   .text.TIM_SetIC3Prescaler:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4047   .text.TIM_SetIC4Prescaler:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4100   .text.TIM_BDTRConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4105   .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4172   .text.TIM_BDTRStructInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4177   .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4232   .text.TIM_CtrlPWMOutputs:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4237   .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4291   .text.TIM_SelectCOM:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4296   .text.TIM_SelectCOM:00000000 TIM_SelectCOM
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4348   .text.TIM_CCPreloadControl:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4353   .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4405   .text.TIM_ITConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4410   .text.TIM_ITConfig:00000000 TIM_ITConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4468   .text.TIM_GenerateEvent:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4473   .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4506   .text.TIM_GetFlagStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4511   .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4564   .text.TIM_ClearFlag:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4569   .text.TIM_ClearFlag:00000000 TIM_ClearFlag
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4604   .text.TIM_GetITStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4609   .text.TIM_GetITStatus:00000000 TIM_GetITStatus
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4680   .text.TIM_ClearITPendingBit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4685   .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4720   .text.TIM_DMAConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4725   .text.TIM_DMAConfig:00000000 TIM_DMAConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4763   .text.TIM_DMACmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4768   .text.TIM_DMACmd:00000000 TIM_DMACmd
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4826   .text.TIM_SelectCCDMA:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4831   .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4883   .text.TIM_InternalClockConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4888   .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4923   .text.TIM_ITRxExternalClockConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4928   .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5157   .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4969   .text.TIM_TIxExternalClockConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:4974   .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5037   .text.TIM_ETRClockMode1Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5042   .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5364   .text.TIM_ETRConfig:00000000 TIM_ETRConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5104   .text.TIM_ETRClockMode2Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5109   .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5152   .text.TIM_SelectInputTrigger:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5206   .text.TIM_SelectOutputTrigger:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5211   .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5257   .text.TIM_SelectSlaveMode:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5262   .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5308   .text.TIM_SelectMasterSlaveMode:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5313   .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5359   .text.TIM_ETRConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5422   .text.TIM_EncoderInterfaceConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5427   .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5523   .text.TIM_SelectHallSensor:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5528   .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5580   .text.TIM_RemapConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5585   .text.TIM_RemapConfig:00000000 TIM_RemapConfig
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5618   .text.TI1_Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5706   .text.TI2_Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5806   .text.TI3_Config:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccmI5wGF.s:5900   .text.TI4_Config:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
