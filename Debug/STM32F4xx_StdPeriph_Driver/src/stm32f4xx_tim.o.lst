   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	TIM_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	TIM_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  27              		.loc 1 195 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
  43              		.loc 1 199 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF00003 		mov	r3, #0
  46 000e C4F20103 		movt	r3, 16385
  47 0012 9A42     		cmp	r2, r3
  48 0014 0CD1     		bne	.L2
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  49              		.loc 1 201 0
  50 0016 4FF00100 		mov	r0, #1
  51 001a 4FF00101 		mov	r1, #1
  52 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  53              		.loc 1 202 0
  54 0022 4FF00100 		mov	r0, #1
  55 0026 4FF00001 		mov	r1, #0
  56 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  57 002e FFE0     		b	.L1
  58              	.L2:
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
  59              		.loc 1 204 0
  60 0030 7B68     		ldr	r3, [r7, #4]
  61 0032 B3F1804F 		cmp	r3, #1073741824
  62 0036 0CD1     		bne	.L4
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  63              		.loc 1 206 0
  64 0038 4FF00100 		mov	r0, #1
  65 003c 4FF00101 		mov	r1, #1
  66 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  67              		.loc 1 207 0
  68 0044 4FF00100 		mov	r0, #1
  69 0048 4FF00001 		mov	r1, #0
  70 004c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  71 0050 EEE0     		b	.L1
  72              	.L4:
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
  73              		.loc 1 209 0
  74 0052 7A68     		ldr	r2, [r7, #4]
  75 0054 4FF48063 		mov	r3, #1024
  76 0058 C4F20003 		movt	r3, 16384
  77 005c 9A42     		cmp	r2, r3
  78 005e 0CD1     		bne	.L5
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  79              		.loc 1 211 0
  80 0060 4FF00200 		mov	r0, #2
  81 0064 4FF00101 		mov	r1, #1
  82 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  83              		.loc 1 212 0
  84 006c 4FF00200 		mov	r0, #2
  85 0070 4FF00001 		mov	r1, #0
  86 0074 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  87 0078 DAE0     		b	.L1
  88              	.L5:
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
  89              		.loc 1 214 0
  90 007a 7A68     		ldr	r2, [r7, #4]
  91 007c 4FF40063 		mov	r3, #2048
  92 0080 C4F20003 		movt	r3, 16384
  93 0084 9A42     		cmp	r2, r3
  94 0086 0CD1     		bne	.L6
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  95              		.loc 1 216 0
  96 0088 4FF00400 		mov	r0, #4
  97 008c 4FF00101 		mov	r1, #1
  98 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
  99              		.loc 1 217 0
 100 0094 4FF00400 		mov	r0, #4
 101 0098 4FF00001 		mov	r1, #0
 102 009c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 103 00a0 C6E0     		b	.L1
 104              	.L6:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 105              		.loc 1 219 0
 106 00a2 7A68     		ldr	r2, [r7, #4]
 107 00a4 4FF44063 		mov	r3, #3072
 108 00a8 C4F20003 		movt	r3, 16384
 109 00ac 9A42     		cmp	r2, r3
 110 00ae 0CD1     		bne	.L7
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 111              		.loc 1 221 0
 112 00b0 4FF00800 		mov	r0, #8
 113 00b4 4FF00101 		mov	r1, #1
 114 00b8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 115              		.loc 1 222 0
 116 00bc 4FF00800 		mov	r0, #8
 117 00c0 4FF00001 		mov	r1, #0
 118 00c4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 119 00c8 B2E0     		b	.L1
 120              	.L7:
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 121              		.loc 1 224 0
 122 00ca 7A68     		ldr	r2, [r7, #4]
 123 00cc 4FF48053 		mov	r3, #4096
 124 00d0 C4F20003 		movt	r3, 16384
 125 00d4 9A42     		cmp	r2, r3
 126 00d6 0CD1     		bne	.L8
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 127              		.loc 1 226 0
 128 00d8 4FF01000 		mov	r0, #16
 129 00dc 4FF00101 		mov	r1, #1
 130 00e0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 131              		.loc 1 227 0
 132 00e4 4FF01000 		mov	r0, #16
 133 00e8 4FF00001 		mov	r1, #0
 134 00ec FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 135 00f0 9EE0     		b	.L1
 136              	.L8:
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 137              		.loc 1 229 0
 138 00f2 7A68     		ldr	r2, [r7, #4]
 139 00f4 4FF4A053 		mov	r3, #5120
 140 00f8 C4F20003 		movt	r3, 16384
 141 00fc 9A42     		cmp	r2, r3
 142 00fe 0CD1     		bne	.L9
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 143              		.loc 1 231 0
 144 0100 4FF02000 		mov	r0, #32
 145 0104 4FF00101 		mov	r1, #1
 146 0108 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 147              		.loc 1 232 0
 148 010c 4FF02000 		mov	r0, #32
 149 0110 4FF00001 		mov	r1, #0
 150 0114 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 151 0118 8AE0     		b	.L1
 152              	.L9:
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 153              		.loc 1 234 0
 154 011a 7A68     		ldr	r2, [r7, #4]
 155 011c 4FF48063 		mov	r3, #1024
 156 0120 C4F20103 		movt	r3, 16385
 157 0124 9A42     		cmp	r2, r3
 158 0126 0CD1     		bne	.L10
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 159              		.loc 1 236 0
 160 0128 4FF00200 		mov	r0, #2
 161 012c 4FF00101 		mov	r1, #1
 162 0130 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 163              		.loc 1 237 0
 164 0134 4FF00200 		mov	r0, #2
 165 0138 4FF00001 		mov	r1, #0
 166 013c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 167 0140 76E0     		b	.L1
 168              	.L10:
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 169              		.loc 1 239 0
 170 0142 7A68     		ldr	r2, [r7, #4]
 171 0144 4FF48043 		mov	r3, #16384
 172 0148 C4F20103 		movt	r3, 16385
 173 014c 9A42     		cmp	r2, r3
 174 014e 0CD1     		bne	.L11
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 175              		.loc 1 241 0
 176 0150 4FF48030 		mov	r0, #65536
 177 0154 4FF00101 		mov	r1, #1
 178 0158 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 179              		.loc 1 242 0
 180 015c 4FF48030 		mov	r0, #65536
 181 0160 4FF00001 		mov	r1, #0
 182 0164 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 183 0168 62E0     		b	.L1
 184              	.L11:
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 185              		.loc 1 244 0
 186 016a 7A68     		ldr	r2, [r7, #4]
 187 016c 4FF48843 		mov	r3, #17408
 188 0170 C4F20103 		movt	r3, 16385
 189 0174 9A42     		cmp	r2, r3
 190 0176 0CD1     		bne	.L12
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 191              		.loc 1 246 0
 192 0178 4FF40030 		mov	r0, #131072
 193 017c 4FF00101 		mov	r1, #1
 194 0180 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 195              		.loc 1 247 0
 196 0184 4FF40030 		mov	r0, #131072
 197 0188 4FF00001 		mov	r1, #0
 198 018c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 199 0190 4EE0     		b	.L1
 200              	.L12:
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 201              		.loc 1 249 0
 202 0192 7A68     		ldr	r2, [r7, #4]
 203 0194 4FF49043 		mov	r3, #18432
 204 0198 C4F20103 		movt	r3, 16385
 205 019c 9A42     		cmp	r2, r3
 206 019e 0CD1     		bne	.L13
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 207              		.loc 1 251 0
 208 01a0 4FF48020 		mov	r0, #262144
 209 01a4 4FF00101 		mov	r1, #1
 210 01a8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 211              		.loc 1 252 0
 212 01ac 4FF48020 		mov	r0, #262144
 213 01b0 4FF00001 		mov	r1, #0
 214 01b4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 215 01b8 3AE0     		b	.L1
 216              	.L13:
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 217              		.loc 1 254 0
 218 01ba 7A68     		ldr	r2, [r7, #4]
 219 01bc 4FF4C053 		mov	r3, #6144
 220 01c0 C4F20003 		movt	r3, 16384
 221 01c4 9A42     		cmp	r2, r3
 222 01c6 0CD1     		bne	.L14
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 223              		.loc 1 256 0
 224 01c8 4FF04000 		mov	r0, #64
 225 01cc 4FF00101 		mov	r1, #1
 226 01d0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 227              		.loc 1 257 0
 228 01d4 4FF04000 		mov	r0, #64
 229 01d8 4FF00001 		mov	r1, #0
 230 01dc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 231 01e0 26E0     		b	.L1
 232              	.L14:
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 233              		.loc 1 259 0
 234 01e2 7A68     		ldr	r2, [r7, #4]
 235 01e4 4FF4E053 		mov	r3, #7168
 236 01e8 C4F20003 		movt	r3, 16384
 237 01ec 9A42     		cmp	r2, r3
 238 01ee 0CD1     		bne	.L15
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 239              		.loc 1 261 0
 240 01f0 4FF08000 		mov	r0, #128
 241 01f4 4FF00101 		mov	r1, #1
 242 01f8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 243              		.loc 1 262 0
 244 01fc 4FF08000 		mov	r0, #128
 245 0200 4FF00001 		mov	r1, #0
 246 0204 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 247 0208 12E0     		b	.L1
 248              	.L15:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 249              		.loc 1 266 0
 250 020a 7A68     		ldr	r2, [r7, #4]
 251 020c 4FF40053 		mov	r3, #8192
 252 0210 C4F20003 		movt	r3, 16384
 253 0214 9A42     		cmp	r2, r3
 254 0216 0BD1     		bne	.L1
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 255              		.loc 1 268 0
 256 0218 4FF48070 		mov	r0, #256
 257 021c 4FF00101 		mov	r1, #1
 258 0220 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 259              		.loc 1 269 0
 260 0224 4FF48070 		mov	r0, #256
 261 0228 4FF00001 		mov	r1, #0
 262 022c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 263              	.L1:
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 264              		.loc 1 272 0
 265 0230 07F10807 		add	r7, r7, #8
 266 0234 BD46     		mov	sp, r7
 267 0236 80BD     		pop	{r7, pc}
 268              		.cfi_endproc
 269              	.LFE110:
 271              		.align	2
 272              		.global	TIM_TimeBaseInit
 273              		.thumb
 274              		.thumb_func
 276              	TIM_TimeBaseInit:
 277              	.LFB111:
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 278              		.loc 1 283 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 16
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283 0238 80B4     		push	{r7}
 284              	.LCFI3:
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 7, -4
 287 023a 85B0     		sub	sp, sp, #20
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 24
 290 023c 00AF     		add	r7, sp, #0
 291              	.LCFI5:
 292              		.cfi_def_cfa_register 7
 293 023e 7860     		str	r0, [r7, #4]
 294 0240 3960     		str	r1, [r7, #0]
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 295              		.loc 1 284 0
 296 0242 4FF00003 		mov	r3, #0
 297 0246 FB81     		strh	r3, [r7, #14]	@ movhi
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 298              		.loc 1 291 0
 299 0248 7B68     		ldr	r3, [r7, #4]
 300 024a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 301 024c FB81     		strh	r3, [r7, #14]	@ movhi
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 302              		.loc 1 293 0
 303 024e 7A68     		ldr	r2, [r7, #4]
 304 0250 4FF00003 		mov	r3, #0
 305 0254 C4F20103 		movt	r3, 16385
 306 0258 9A42     		cmp	r2, r3
 307 025a 1FD0     		beq	.L17
 308              		.loc 1 293 0 is_stmt 0 discriminator 1
 309 025c 7A68     		ldr	r2, [r7, #4]
 310 025e 4FF48063 		mov	r3, #1024
 311 0262 C4F20103 		movt	r3, 16385
 312 0266 9A42     		cmp	r2, r3
 313 0268 18D0     		beq	.L17
 314 026a 7B68     		ldr	r3, [r7, #4]
 315 026c B3F1804F 		cmp	r3, #1073741824
 316 0270 14D0     		beq	.L17
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 317              		.loc 1 294 0 is_stmt 1
 318 0272 7A68     		ldr	r2, [r7, #4]
 319 0274 4FF48063 		mov	r3, #1024
 320 0278 C4F20003 		movt	r3, 16384
 321 027c 9A42     		cmp	r2, r3
 322 027e 0DD0     		beq	.L17
 323              		.loc 1 294 0 is_stmt 0 discriminator 1
 324 0280 7A68     		ldr	r2, [r7, #4]
 325 0282 4FF40063 		mov	r3, #2048
 326 0286 C4F20003 		movt	r3, 16384
 327 028a 9A42     		cmp	r2, r3
 328 028c 06D0     		beq	.L17
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 329              		.loc 1 295 0 is_stmt 1
 330 028e 7A68     		ldr	r2, [r7, #4]
 331 0290 4FF44063 		mov	r3, #3072
 332 0294 C4F20003 		movt	r3, 16384
 333 0298 9A42     		cmp	r2, r3
 334 029a 08D1     		bne	.L18
 335              	.L17:
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 336              		.loc 1 298 0
 337 029c FB89     		ldrh	r3, [r7, #14]	@ movhi
 338 029e 23F07003 		bic	r3, r3, #112
 339 02a2 FB81     		strh	r3, [r7, #14]	@ movhi
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 340              		.loc 1 299 0
 341 02a4 3B68     		ldr	r3, [r7, #0]
 342 02a6 5A88     		ldrh	r2, [r3, #2]
 343 02a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 344 02aa 1343     		orrs	r3, r3, r2
 345 02ac FB81     		strh	r3, [r7, #14]	@ movhi
 346              	.L18:
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 347              		.loc 1 302 0
 348 02ae 7A68     		ldr	r2, [r7, #4]
 349 02b0 4FF48053 		mov	r3, #4096
 350 02b4 C4F20003 		movt	r3, 16384
 351 02b8 9A42     		cmp	r2, r3
 352 02ba 0FD0     		beq	.L19
 353              		.loc 1 302 0 is_stmt 0 discriminator 1
 354 02bc 7A68     		ldr	r2, [r7, #4]
 355 02be 4FF4A053 		mov	r3, #5120
 356 02c2 C4F20003 		movt	r3, 16384
 357 02c6 9A42     		cmp	r2, r3
 358 02c8 08D0     		beq	.L19
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 359              		.loc 1 305 0 is_stmt 1
 360 02ca FB89     		ldrh	r3, [r7, #14]	@ movhi
 361 02cc 23F44073 		bic	r3, r3, #768
 362 02d0 FB81     		strh	r3, [r7, #14]	@ movhi
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 363              		.loc 1 306 0
 364 02d2 3B68     		ldr	r3, [r7, #0]
 365 02d4 1A89     		ldrh	r2, [r3, #8]
 366 02d6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 367 02d8 1343     		orrs	r3, r3, r2
 368 02da FB81     		strh	r3, [r7, #14]	@ movhi
 369              	.L19:
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 370              		.loc 1 309 0
 371 02dc 7B68     		ldr	r3, [r7, #4]
 372 02de FA89     		ldrh	r2, [r7, #14]	@ movhi
 373 02e0 1A80     		strh	r2, [r3, #0]	@ movhi
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 374              		.loc 1 312 0
 375 02e2 3B68     		ldr	r3, [r7, #0]
 376 02e4 5A68     		ldr	r2, [r3, #4]
 377 02e6 7B68     		ldr	r3, [r7, #4]
 378 02e8 DA62     		str	r2, [r3, #44]
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 379              		.loc 1 315 0
 380 02ea 3B68     		ldr	r3, [r7, #0]
 381 02ec 1A88     		ldrh	r2, [r3, #0]
 382 02ee 7B68     		ldr	r3, [r7, #4]
 383 02f0 1A85     		strh	r2, [r3, #40]	@ movhi
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 384              		.loc 1 317 0
 385 02f2 7A68     		ldr	r2, [r7, #4]
 386 02f4 4FF00003 		mov	r3, #0
 387 02f8 C4F20103 		movt	r3, 16385
 388 02fc 9A42     		cmp	r2, r3
 389 02fe 06D0     		beq	.L20
 390              		.loc 1 317 0 is_stmt 0 discriminator 1
 391 0300 7A68     		ldr	r2, [r7, #4]
 392 0302 4FF48063 		mov	r3, #1024
 393 0306 C4F20103 		movt	r3, 16385
 394 030a 9A42     		cmp	r2, r3
 395 030c 04D1     		bne	.L21
 396              	.L20:
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 397              		.loc 1 320 0 is_stmt 1
 398 030e 3B68     		ldr	r3, [r7, #0]
 399 0310 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 400 0312 1A46     		mov	r2, r3
 401 0314 7B68     		ldr	r3, [r7, #4]
 402 0316 1A86     		strh	r2, [r3, #48]	@ movhi
 403              	.L21:
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 404              		.loc 1 325 0
 405 0318 7B68     		ldr	r3, [r7, #4]
 406 031a 4FF00102 		mov	r2, #1
 407 031e 9A82     		strh	r2, [r3, #20]	@ movhi
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 408              		.loc 1 326 0
 409 0320 07F11407 		add	r7, r7, #20
 410 0324 BD46     		mov	sp, r7
 411 0326 80BC     		pop	{r7}
 412 0328 7047     		bx	lr
 413              		.cfi_endproc
 414              	.LFE111:
 416 032a 00BF     		.align	2
 417              		.global	TIM_TimeBaseStructInit
 418              		.thumb
 419              		.thumb_func
 421              	TIM_TimeBaseStructInit:
 422              	.LFB112:
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 423              		.loc 1 335 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 8
 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428 032c 80B4     		push	{r7}
 429              	.LCFI6:
 430              		.cfi_def_cfa_offset 4
 431              		.cfi_offset 7, -4
 432 032e 83B0     		sub	sp, sp, #12
 433              	.LCFI7:
 434              		.cfi_def_cfa_offset 16
 435 0330 00AF     		add	r7, sp, #0
 436              	.LCFI8:
 437              		.cfi_def_cfa_register 7
 438 0332 7860     		str	r0, [r7, #4]
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 439              		.loc 1 337 0
 440 0334 7B68     		ldr	r3, [r7, #4]
 441 0336 4FF0FF32 		mov	r2, #-1
 442 033a 5A60     		str	r2, [r3, #4]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 443              		.loc 1 338 0
 444 033c 7B68     		ldr	r3, [r7, #4]
 445 033e 4FF00002 		mov	r2, #0
 446 0342 1A80     		strh	r2, [r3, #0]	@ movhi
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 447              		.loc 1 339 0
 448 0344 7B68     		ldr	r3, [r7, #4]
 449 0346 4FF00002 		mov	r2, #0
 450 034a 1A81     		strh	r2, [r3, #8]	@ movhi
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 451              		.loc 1 340 0
 452 034c 7B68     		ldr	r3, [r7, #4]
 453 034e 4FF00002 		mov	r2, #0
 454 0352 5A80     		strh	r2, [r3, #2]	@ movhi
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 455              		.loc 1 341 0
 456 0354 7B68     		ldr	r3, [r7, #4]
 457 0356 4FF00002 		mov	r2, #0
 458 035a 9A72     		strb	r2, [r3, #10]
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 459              		.loc 1 342 0
 460 035c 07F10C07 		add	r7, r7, #12
 461 0360 BD46     		mov	sp, r7
 462 0362 80BC     		pop	{r7}
 463 0364 7047     		bx	lr
 464              		.cfi_endproc
 465              	.LFE112:
 467 0366 00BF     		.align	2
 468              		.global	TIM_PrescalerConfig
 469              		.thumb
 470              		.thumb_func
 472              	TIM_PrescalerConfig:
 473              	.LFB113:
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 474              		.loc 1 355 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 8
 477              		@ frame_needed = 1, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 479 0368 80B4     		push	{r7}
 480              	.LCFI9:
 481              		.cfi_def_cfa_offset 4
 482              		.cfi_offset 7, -4
 483 036a 83B0     		sub	sp, sp, #12
 484              	.LCFI10:
 485              		.cfi_def_cfa_offset 16
 486 036c 00AF     		add	r7, sp, #0
 487              	.LCFI11:
 488              		.cfi_def_cfa_register 7
 489 036e 7860     		str	r0, [r7, #4]
 490 0370 1346     		mov	r3, r2
 491 0372 0A46     		mov	r2, r1	@ movhi
 492 0374 7A80     		strh	r2, [r7, #2]	@ movhi
 493 0376 3B80     		strh	r3, [r7, #0]	@ movhi
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 494              		.loc 1 360 0
 495 0378 7B68     		ldr	r3, [r7, #4]
 496 037a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 497 037c 1A85     		strh	r2, [r3, #40]	@ movhi
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 498              		.loc 1 362 0
 499 037e 7B68     		ldr	r3, [r7, #4]
 500 0380 3A88     		ldrh	r2, [r7, #0]	@ movhi
 501 0382 9A82     		strh	r2, [r3, #20]	@ movhi
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 502              		.loc 1 363 0
 503 0384 07F10C07 		add	r7, r7, #12
 504 0388 BD46     		mov	sp, r7
 505 038a 80BC     		pop	{r7}
 506 038c 7047     		bx	lr
 507              		.cfi_endproc
 508              	.LFE113:
 510 038e 00BF     		.align	2
 511              		.global	TIM_CounterModeConfig
 512              		.thumb
 513              		.thumb_func
 515              	TIM_CounterModeConfig:
 516              	.LFB114:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 517              		.loc 1 378 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 16
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522 0390 80B4     		push	{r7}
 523              	.LCFI12:
 524              		.cfi_def_cfa_offset 4
 525              		.cfi_offset 7, -4
 526 0392 85B0     		sub	sp, sp, #20
 527              	.LCFI13:
 528              		.cfi_def_cfa_offset 24
 529 0394 00AF     		add	r7, sp, #0
 530              	.LCFI14:
 531              		.cfi_def_cfa_register 7
 532 0396 7860     		str	r0, [r7, #4]
 533 0398 0B46     		mov	r3, r1
 534 039a 7B80     		strh	r3, [r7, #2]	@ movhi
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 535              		.loc 1 379 0
 536 039c 4FF00003 		mov	r3, #0
 537 03a0 FB81     		strh	r3, [r7, #14]	@ movhi
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 538              		.loc 1 385 0
 539 03a2 7B68     		ldr	r3, [r7, #4]
 540 03a4 1B88     		ldrh	r3, [r3, #0]	@ movhi
 541 03a6 FB81     		strh	r3, [r7, #14]	@ movhi
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 542              		.loc 1 388 0
 543 03a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 544 03aa 23F07003 		bic	r3, r3, #112
 545 03ae FB81     		strh	r3, [r7, #14]	@ movhi
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 546              		.loc 1 391 0
 547 03b0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 548 03b2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 549 03b4 1343     		orrs	r3, r3, r2
 550 03b6 FB81     		strh	r3, [r7, #14]	@ movhi
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 551              		.loc 1 394 0
 552 03b8 7B68     		ldr	r3, [r7, #4]
 553 03ba FA89     		ldrh	r2, [r7, #14]	@ movhi
 554 03bc 1A80     		strh	r2, [r3, #0]	@ movhi
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 555              		.loc 1 395 0
 556 03be 07F11407 		add	r7, r7, #20
 557 03c2 BD46     		mov	sp, r7
 558 03c4 80BC     		pop	{r7}
 559 03c6 7047     		bx	lr
 560              		.cfi_endproc
 561              	.LFE114:
 563              		.align	2
 564              		.global	TIM_SetCounter
 565              		.thumb
 566              		.thumb_func
 568              	TIM_SetCounter:
 569              	.LFB115:
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 570              		.loc 1 404 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 8
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574              		@ link register save eliminated.
 575 03c8 80B4     		push	{r7}
 576              	.LCFI15:
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 7, -4
 579 03ca 83B0     		sub	sp, sp, #12
 580              	.LCFI16:
 581              		.cfi_def_cfa_offset 16
 582 03cc 00AF     		add	r7, sp, #0
 583              	.LCFI17:
 584              		.cfi_def_cfa_register 7
 585 03ce 7860     		str	r0, [r7, #4]
 586 03d0 3960     		str	r1, [r7, #0]
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 587              		.loc 1 409 0
 588 03d2 7B68     		ldr	r3, [r7, #4]
 589 03d4 3A68     		ldr	r2, [r7, #0]
 590 03d6 5A62     		str	r2, [r3, #36]
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 591              		.loc 1 410 0
 592 03d8 07F10C07 		add	r7, r7, #12
 593 03dc BD46     		mov	sp, r7
 594 03de 80BC     		pop	{r7}
 595 03e0 7047     		bx	lr
 596              		.cfi_endproc
 597              	.LFE115:
 599 03e2 00BF     		.align	2
 600              		.global	TIM_SetAutoreload
 601              		.thumb
 602              		.thumb_func
 604              	TIM_SetAutoreload:
 605              	.LFB116:
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 606              		.loc 1 419 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 611 03e4 80B4     		push	{r7}
 612              	.LCFI18:
 613              		.cfi_def_cfa_offset 4
 614              		.cfi_offset 7, -4
 615 03e6 83B0     		sub	sp, sp, #12
 616              	.LCFI19:
 617              		.cfi_def_cfa_offset 16
 618 03e8 00AF     		add	r7, sp, #0
 619              	.LCFI20:
 620              		.cfi_def_cfa_register 7
 621 03ea 7860     		str	r0, [r7, #4]
 622 03ec 3960     		str	r1, [r7, #0]
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 623              		.loc 1 424 0
 624 03ee 7B68     		ldr	r3, [r7, #4]
 625 03f0 3A68     		ldr	r2, [r7, #0]
 626 03f2 DA62     		str	r2, [r3, #44]
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 627              		.loc 1 425 0
 628 03f4 07F10C07 		add	r7, r7, #12
 629 03f8 BD46     		mov	sp, r7
 630 03fa 80BC     		pop	{r7}
 631 03fc 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE116:
 635 03fe 00BF     		.align	2
 636              		.global	TIM_GetCounter
 637              		.thumb
 638              		.thumb_func
 640              	TIM_GetCounter:
 641              	.LFB117:
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 642              		.loc 1 433 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 8
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 647 0400 80B4     		push	{r7}
 648              	.LCFI21:
 649              		.cfi_def_cfa_offset 4
 650              		.cfi_offset 7, -4
 651 0402 83B0     		sub	sp, sp, #12
 652              	.LCFI22:
 653              		.cfi_def_cfa_offset 16
 654 0404 00AF     		add	r7, sp, #0
 655              	.LCFI23:
 656              		.cfi_def_cfa_register 7
 657 0406 7860     		str	r0, [r7, #4]
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 658              		.loc 1 438 0
 659 0408 7B68     		ldr	r3, [r7, #4]
 660 040a 5B6A     		ldr	r3, [r3, #36]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 661              		.loc 1 439 0
 662 040c 1846     		mov	r0, r3
 663 040e 07F10C07 		add	r7, r7, #12
 664 0412 BD46     		mov	sp, r7
 665 0414 80BC     		pop	{r7}
 666 0416 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE117:
 670              		.align	2
 671              		.global	TIM_GetPrescaler
 672              		.thumb
 673              		.thumb_func
 675              	TIM_GetPrescaler:
 676              	.LFB118:
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 677              		.loc 1 447 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0418 80B4     		push	{r7}
 683              	.LCFI24:
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 041a 83B0     		sub	sp, sp, #12
 687              	.LCFI25:
 688              		.cfi_def_cfa_offset 16
 689 041c 00AF     		add	r7, sp, #0
 690              	.LCFI26:
 691              		.cfi_def_cfa_register 7
 692 041e 7860     		str	r0, [r7, #4]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 693              		.loc 1 452 0
 694 0420 7B68     		ldr	r3, [r7, #4]
 695 0422 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 696 0424 9BB2     		uxth	r3, r3
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 697              		.loc 1 453 0
 698 0426 1846     		mov	r0, r3
 699 0428 07F10C07 		add	r7, r7, #12
 700 042c BD46     		mov	sp, r7
 701 042e 80BC     		pop	{r7}
 702 0430 7047     		bx	lr
 703              		.cfi_endproc
 704              	.LFE118:
 706 0432 00BF     		.align	2
 707              		.global	TIM_UpdateDisableConfig
 708              		.thumb
 709              		.thumb_func
 711              	TIM_UpdateDisableConfig:
 712              	.LFB119:
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 713              		.loc 1 463 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 8
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717              		@ link register save eliminated.
 718 0434 80B4     		push	{r7}
 719              	.LCFI27:
 720              		.cfi_def_cfa_offset 4
 721              		.cfi_offset 7, -4
 722 0436 83B0     		sub	sp, sp, #12
 723              	.LCFI28:
 724              		.cfi_def_cfa_offset 16
 725 0438 00AF     		add	r7, sp, #0
 726              	.LCFI29:
 727              		.cfi_def_cfa_register 7
 728 043a 7860     		str	r0, [r7, #4]
 729 043c 0B46     		mov	r3, r1
 730 043e FB70     		strb	r3, [r7, #3]
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 731              		.loc 1 468 0
 732 0440 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 733 0442 002B     		cmp	r3, #0
 734 0444 08D0     		beq	.L30
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 735              		.loc 1 471 0
 736 0446 7B68     		ldr	r3, [r7, #4]
 737 0448 1B88     		ldrh	r3, [r3, #0]	@ movhi
 738 044a 9BB2     		uxth	r3, r3
 739 044c 43F00203 		orr	r3, r3, #2
 740 0450 9AB2     		uxth	r2, r3
 741 0452 7B68     		ldr	r3, [r7, #4]
 742 0454 1A80     		strh	r2, [r3, #0]	@ movhi
 743 0456 07E0     		b	.L29
 744              	.L30:
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 745              		.loc 1 476 0
 746 0458 7B68     		ldr	r3, [r7, #4]
 747 045a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 748 045c 9BB2     		uxth	r3, r3
 749 045e 23F00203 		bic	r3, r3, #2
 750 0462 9AB2     		uxth	r2, r3
 751 0464 7B68     		ldr	r3, [r7, #4]
 752 0466 1A80     		strh	r2, [r3, #0]	@ movhi
 753              	.L29:
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 754              		.loc 1 478 0
 755 0468 07F10C07 		add	r7, r7, #12
 756 046c BD46     		mov	sp, r7
 757 046e 80BC     		pop	{r7}
 758 0470 7047     		bx	lr
 759              		.cfi_endproc
 760              	.LFE119:
 762 0472 00BF     		.align	2
 763              		.global	TIM_UpdateRequestConfig
 764              		.thumb
 765              		.thumb_func
 767              	TIM_UpdateRequestConfig:
 768              	.LFB120:
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is the counter
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is counter overflow/underflow.
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 769              		.loc 1 492 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 8
 772              		@ frame_needed = 1, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 774 0474 80B4     		push	{r7}
 775              	.LCFI30:
 776              		.cfi_def_cfa_offset 4
 777              		.cfi_offset 7, -4
 778 0476 83B0     		sub	sp, sp, #12
 779              	.LCFI31:
 780              		.cfi_def_cfa_offset 16
 781 0478 00AF     		add	r7, sp, #0
 782              	.LCFI32:
 783              		.cfi_def_cfa_register 7
 784 047a 7860     		str	r0, [r7, #4]
 785 047c 0B46     		mov	r3, r1
 786 047e 7B80     		strh	r3, [r7, #2]	@ movhi
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 787              		.loc 1 497 0
 788 0480 7B88     		ldrh	r3, [r7, #2]
 789 0482 002B     		cmp	r3, #0
 790 0484 08D0     		beq	.L33
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 791              		.loc 1 500 0
 792 0486 7B68     		ldr	r3, [r7, #4]
 793 0488 1B88     		ldrh	r3, [r3, #0]	@ movhi
 794 048a 9BB2     		uxth	r3, r3
 795 048c 43F00403 		orr	r3, r3, #4
 796 0490 9AB2     		uxth	r2, r3
 797 0492 7B68     		ldr	r3, [r7, #4]
 798 0494 1A80     		strh	r2, [r3, #0]	@ movhi
 799 0496 07E0     		b	.L32
 800              	.L33:
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 801              		.loc 1 505 0
 802 0498 7B68     		ldr	r3, [r7, #4]
 803 049a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 804 049c 9BB2     		uxth	r3, r3
 805 049e 23F00403 		bic	r3, r3, #4
 806 04a2 9AB2     		uxth	r2, r3
 807 04a4 7B68     		ldr	r3, [r7, #4]
 808 04a6 1A80     		strh	r2, [r3, #0]	@ movhi
 809              	.L32:
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 810              		.loc 1 507 0
 811 04a8 07F10C07 		add	r7, r7, #12
 812 04ac BD46     		mov	sp, r7
 813 04ae 80BC     		pop	{r7}
 814 04b0 7047     		bx	lr
 815              		.cfi_endproc
 816              	.LFE120:
 818 04b2 00BF     		.align	2
 819              		.global	TIM_ARRPreloadConfig
 820              		.thumb
 821              		.thumb_func
 823              	TIM_ARRPreloadConfig:
 824              	.LFB121:
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 825              		.loc 1 517 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 8
 828              		@ frame_needed = 1, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830 04b4 80B4     		push	{r7}
 831              	.LCFI33:
 832              		.cfi_def_cfa_offset 4
 833              		.cfi_offset 7, -4
 834 04b6 83B0     		sub	sp, sp, #12
 835              	.LCFI34:
 836              		.cfi_def_cfa_offset 16
 837 04b8 00AF     		add	r7, sp, #0
 838              	.LCFI35:
 839              		.cfi_def_cfa_register 7
 840 04ba 7860     		str	r0, [r7, #4]
 841 04bc 0B46     		mov	r3, r1
 842 04be FB70     		strb	r3, [r7, #3]
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 843              		.loc 1 522 0
 844 04c0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 845 04c2 002B     		cmp	r3, #0
 846 04c4 08D0     		beq	.L36
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 847              		.loc 1 525 0
 848 04c6 7B68     		ldr	r3, [r7, #4]
 849 04c8 1B88     		ldrh	r3, [r3, #0]	@ movhi
 850 04ca 9BB2     		uxth	r3, r3
 851 04cc 43F08003 		orr	r3, r3, #128
 852 04d0 9AB2     		uxth	r2, r3
 853 04d2 7B68     		ldr	r3, [r7, #4]
 854 04d4 1A80     		strh	r2, [r3, #0]	@ movhi
 855 04d6 07E0     		b	.L35
 856              	.L36:
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 857              		.loc 1 530 0
 858 04d8 7B68     		ldr	r3, [r7, #4]
 859 04da 1B88     		ldrh	r3, [r3, #0]	@ movhi
 860 04dc 9BB2     		uxth	r3, r3
 861 04de 23F08003 		bic	r3, r3, #128
 862 04e2 9AB2     		uxth	r2, r3
 863 04e4 7B68     		ldr	r3, [r7, #4]
 864 04e6 1A80     		strh	r2, [r3, #0]	@ movhi
 865              	.L35:
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 866              		.loc 1 532 0
 867 04e8 07F10C07 		add	r7, r7, #12
 868 04ec BD46     		mov	sp, r7
 869 04ee 80BC     		pop	{r7}
 870 04f0 7047     		bx	lr
 871              		.cfi_endproc
 872              	.LFE121:
 874 04f2 00BF     		.align	2
 875              		.global	TIM_SelectOnePulseMode
 876              		.thumb
 877              		.thumb_func
 879              	TIM_SelectOnePulseMode:
 880              	.LFB122:
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 881              		.loc 1 544 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 8
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886 04f4 80B4     		push	{r7}
 887              	.LCFI36:
 888              		.cfi_def_cfa_offset 4
 889              		.cfi_offset 7, -4
 890 04f6 83B0     		sub	sp, sp, #12
 891              	.LCFI37:
 892              		.cfi_def_cfa_offset 16
 893 04f8 00AF     		add	r7, sp, #0
 894              	.LCFI38:
 895              		.cfi_def_cfa_register 7
 896 04fa 7860     		str	r0, [r7, #4]
 897 04fc 0B46     		mov	r3, r1
 898 04fe 7B80     		strh	r3, [r7, #2]	@ movhi
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 899              		.loc 1 550 0
 900 0500 7B68     		ldr	r3, [r7, #4]
 901 0502 1B88     		ldrh	r3, [r3, #0]	@ movhi
 902 0504 9BB2     		uxth	r3, r3
 903 0506 23F00803 		bic	r3, r3, #8
 904 050a 9AB2     		uxth	r2, r3
 905 050c 7B68     		ldr	r3, [r7, #4]
 906 050e 1A80     		strh	r2, [r3, #0]	@ movhi
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 907              		.loc 1 553 0
 908 0510 7B68     		ldr	r3, [r7, #4]
 909 0512 1B88     		ldrh	r3, [r3, #0]	@ movhi
 910 0514 9AB2     		uxth	r2, r3
 911 0516 7B88     		ldrh	r3, [r7, #2]	@ movhi
 912 0518 1343     		orrs	r3, r3, r2
 913 051a 9AB2     		uxth	r2, r3
 914 051c 7B68     		ldr	r3, [r7, #4]
 915 051e 1A80     		strh	r2, [r3, #0]	@ movhi
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 916              		.loc 1 554 0
 917 0520 07F10C07 		add	r7, r7, #12
 918 0524 BD46     		mov	sp, r7
 919 0526 80BC     		pop	{r7}
 920 0528 7047     		bx	lr
 921              		.cfi_endproc
 922              	.LFE122:
 924 052a 00BF     		.align	2
 925              		.global	TIM_SetClockDivision
 926              		.thumb
 927              		.thumb_func
 929              	TIM_SetClockDivision:
 930              	.LFB123:
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 931              		.loc 1 567 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 8
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936 052c 80B4     		push	{r7}
 937              	.LCFI39:
 938              		.cfi_def_cfa_offset 4
 939              		.cfi_offset 7, -4
 940 052e 83B0     		sub	sp, sp, #12
 941              	.LCFI40:
 942              		.cfi_def_cfa_offset 16
 943 0530 00AF     		add	r7, sp, #0
 944              	.LCFI41:
 945              		.cfi_def_cfa_register 7
 946 0532 7860     		str	r0, [r7, #4]
 947 0534 0B46     		mov	r3, r1
 948 0536 7B80     		strh	r3, [r7, #2]	@ movhi
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 949              		.loc 1 573 0
 950 0538 7B68     		ldr	r3, [r7, #4]
 951 053a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 952 053c 9BB2     		uxth	r3, r3
 953 053e 23F44073 		bic	r3, r3, #768
 954 0542 9AB2     		uxth	r2, r3
 955 0544 7B68     		ldr	r3, [r7, #4]
 956 0546 1A80     		strh	r2, [r3, #0]	@ movhi
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 957              		.loc 1 576 0
 958 0548 7B68     		ldr	r3, [r7, #4]
 959 054a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 960 054c 9AB2     		uxth	r2, r3
 961 054e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 962 0550 1343     		orrs	r3, r3, r2
 963 0552 9AB2     		uxth	r2, r3
 964 0554 7B68     		ldr	r3, [r7, #4]
 965 0556 1A80     		strh	r2, [r3, #0]	@ movhi
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 966              		.loc 1 577 0
 967 0558 07F10C07 		add	r7, r7, #12
 968 055c BD46     		mov	sp, r7
 969 055e 80BC     		pop	{r7}
 970 0560 7047     		bx	lr
 971              		.cfi_endproc
 972              	.LFE123:
 974 0562 00BF     		.align	2
 975              		.global	TIM_Cmd
 976              		.thumb
 977              		.thumb_func
 979              	TIM_Cmd:
 980              	.LFB124:
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 981              		.loc 1 587 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 8
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985              		@ link register save eliminated.
 986 0564 80B4     		push	{r7}
 987              	.LCFI42:
 988              		.cfi_def_cfa_offset 4
 989              		.cfi_offset 7, -4
 990 0566 83B0     		sub	sp, sp, #12
 991              	.LCFI43:
 992              		.cfi_def_cfa_offset 16
 993 0568 00AF     		add	r7, sp, #0
 994              	.LCFI44:
 995              		.cfi_def_cfa_register 7
 996 056a 7860     		str	r0, [r7, #4]
 997 056c 0B46     		mov	r3, r1
 998 056e FB70     		strb	r3, [r7, #3]
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 999              		.loc 1 592 0
 1000 0570 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1001 0572 002B     		cmp	r3, #0
 1002 0574 08D0     		beq	.L41
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1003              		.loc 1 595 0
 1004 0576 7B68     		ldr	r3, [r7, #4]
 1005 0578 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1006 057a 9BB2     		uxth	r3, r3
 1007 057c 43F00103 		orr	r3, r3, #1
 1008 0580 9AB2     		uxth	r2, r3
 1009 0582 7B68     		ldr	r3, [r7, #4]
 1010 0584 1A80     		strh	r2, [r3, #0]	@ movhi
 1011 0586 07E0     		b	.L40
 1012              	.L41:
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1013              		.loc 1 600 0
 1014 0588 7B68     		ldr	r3, [r7, #4]
 1015 058a 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1016 058c 9BB2     		uxth	r3, r3
 1017 058e 23F00103 		bic	r3, r3, #1
 1018 0592 9AB2     		uxth	r2, r3
 1019 0594 7B68     		ldr	r3, [r7, #4]
 1020 0596 1A80     		strh	r2, [r3, #0]	@ movhi
 1021              	.L40:
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1022              		.loc 1 602 0
 1023 0598 07F10C07 		add	r7, r7, #12
 1024 059c BD46     		mov	sp, r7
 1025 059e 80BC     		pop	{r7}
 1026 05a0 7047     		bx	lr
 1027              		.cfi_endproc
 1028              	.LFE124:
 1030 05a2 00BF     		.align	2
 1031              		.global	TIM_OC1Init
 1032              		.thumb
 1033              		.thumb_func
 1035              	TIM_OC1Init:
 1036              	.LFB125:
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1037              		.loc 1 666 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 16
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041              		@ link register save eliminated.
 1042 05a4 80B4     		push	{r7}
 1043              	.LCFI45:
 1044              		.cfi_def_cfa_offset 4
 1045              		.cfi_offset 7, -4
 1046 05a6 85B0     		sub	sp, sp, #20
 1047              	.LCFI46:
 1048              		.cfi_def_cfa_offset 24
 1049 05a8 00AF     		add	r7, sp, #0
 1050              	.LCFI47:
 1051              		.cfi_def_cfa_register 7
 1052 05aa 7860     		str	r0, [r7, #4]
 1053 05ac 3960     		str	r1, [r7, #0]
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1054              		.loc 1 667 0
 1055 05ae 4FF00003 		mov	r3, #0
 1056 05b2 7B81     		strh	r3, [r7, #10]	@ movhi
 1057 05b4 4FF00003 		mov	r3, #0
 1058 05b8 FB81     		strh	r3, [r7, #14]	@ movhi
 1059 05ba 4FF00003 		mov	r3, #0
 1060 05be BB81     		strh	r3, [r7, #12]	@ movhi
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 1061              		.loc 1 676 0
 1062 05c0 7B68     		ldr	r3, [r7, #4]
 1063 05c2 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1064 05c4 9BB2     		uxth	r3, r3
 1065 05c6 23F00103 		bic	r3, r3, #1
 1066 05ca 9AB2     		uxth	r2, r3
 1067 05cc 7B68     		ldr	r3, [r7, #4]
 1068 05ce 1A84     		strh	r2, [r3, #32]	@ movhi
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1069              		.loc 1 679 0
 1070 05d0 7B68     		ldr	r3, [r7, #4]
 1071 05d2 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1072 05d4 FB81     		strh	r3, [r7, #14]	@ movhi
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1073              		.loc 1 681 0
 1074 05d6 7B68     		ldr	r3, [r7, #4]
 1075 05d8 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1076 05da BB81     		strh	r3, [r7, #12]	@ movhi
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1077              		.loc 1 684 0
 1078 05dc 7B68     		ldr	r3, [r7, #4]
 1079 05de 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1080 05e0 7B81     		strh	r3, [r7, #10]	@ movhi
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 1081              		.loc 1 687 0
 1082 05e2 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1083 05e4 23F07003 		bic	r3, r3, #112
 1084 05e8 7B81     		strh	r3, [r7, #10]	@ movhi
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 1085              		.loc 1 688 0
 1086 05ea 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1087 05ec 23F00303 		bic	r3, r3, #3
 1088 05f0 7B81     		strh	r3, [r7, #10]	@ movhi
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1089              		.loc 1 690 0
 1090 05f2 3B68     		ldr	r3, [r7, #0]
 1091 05f4 1A88     		ldrh	r2, [r3, #0]
 1092 05f6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1093 05f8 1343     		orrs	r3, r3, r2
 1094 05fa 7B81     		strh	r3, [r7, #10]	@ movhi
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 1095              		.loc 1 693 0
 1096 05fc FB89     		ldrh	r3, [r7, #14]	@ movhi
 1097 05fe 23F00203 		bic	r3, r3, #2
 1098 0602 FB81     		strh	r3, [r7, #14]	@ movhi
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1099              		.loc 1 695 0
 1100 0604 3B68     		ldr	r3, [r7, #0]
 1101 0606 9A89     		ldrh	r2, [r3, #12]
 1102 0608 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1103 060a 1343     		orrs	r3, r3, r2
 1104 060c FB81     		strh	r3, [r7, #14]	@ movhi
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1105              		.loc 1 698 0
 1106 060e 3B68     		ldr	r3, [r7, #0]
 1107 0610 5A88     		ldrh	r2, [r3, #2]
 1108 0612 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1109 0614 1343     		orrs	r3, r3, r2
 1110 0616 FB81     		strh	r3, [r7, #14]	@ movhi
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1111              		.loc 1 700 0
 1112 0618 7A68     		ldr	r2, [r7, #4]
 1113 061a 4FF00003 		mov	r3, #0
 1114 061e C4F20103 		movt	r3, 16385
 1115 0622 9A42     		cmp	r2, r3
 1116 0624 06D0     		beq	.L44
 1117              		.loc 1 700 0 is_stmt 0 discriminator 1
 1118 0626 7A68     		ldr	r2, [r7, #4]
 1119 0628 4FF48063 		mov	r3, #1024
 1120 062c C4F20103 		movt	r3, 16385
 1121 0630 9A42     		cmp	r2, r3
 1122 0632 23D1     		bne	.L45
 1123              	.L44:
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 1124              		.loc 1 708 0 is_stmt 1
 1125 0634 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1126 0636 23F00803 		bic	r3, r3, #8
 1127 063a FB81     		strh	r3, [r7, #14]	@ movhi
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1128              		.loc 1 710 0
 1129 063c 3B68     		ldr	r3, [r7, #0]
 1130 063e DA89     		ldrh	r2, [r3, #14]
 1131 0640 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1132 0642 1343     		orrs	r3, r3, r2
 1133 0644 FB81     		strh	r3, [r7, #14]	@ movhi
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 1134              		.loc 1 712 0
 1135 0646 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1136 0648 23F00403 		bic	r3, r3, #4
 1137 064c FB81     		strh	r3, [r7, #14]	@ movhi
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1138              		.loc 1 715 0
 1139 064e 3B68     		ldr	r3, [r7, #0]
 1140 0650 9A88     		ldrh	r2, [r3, #4]
 1141 0652 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1142 0654 1343     		orrs	r3, r3, r2
 1143 0656 FB81     		strh	r3, [r7, #14]	@ movhi
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 1144              		.loc 1 717 0
 1145 0658 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1146 065a 23F48073 		bic	r3, r3, #256
 1147 065e BB81     		strh	r3, [r7, #12]	@ movhi
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 1148              		.loc 1 718 0
 1149 0660 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1150 0662 23F40073 		bic	r3, r3, #512
 1151 0666 BB81     		strh	r3, [r7, #12]	@ movhi
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1152              		.loc 1 720 0
 1153 0668 3B68     		ldr	r3, [r7, #0]
 1154 066a 1A8A     		ldrh	r2, [r3, #16]
 1155 066c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1156 066e 1343     		orrs	r3, r3, r2
 1157 0670 BB81     		strh	r3, [r7, #12]	@ movhi
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1158              		.loc 1 722 0
 1159 0672 3B68     		ldr	r3, [r7, #0]
 1160 0674 5A8A     		ldrh	r2, [r3, #18]
 1161 0676 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1162 0678 1343     		orrs	r3, r3, r2
 1163 067a BB81     		strh	r3, [r7, #12]	@ movhi
 1164              	.L45:
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1165              		.loc 1 725 0
 1166 067c 7B68     		ldr	r3, [r7, #4]
 1167 067e BA89     		ldrh	r2, [r7, #12]	@ movhi
 1168 0680 9A80     		strh	r2, [r3, #4]	@ movhi
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1169              		.loc 1 728 0
 1170 0682 7B68     		ldr	r3, [r7, #4]
 1171 0684 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1172 0686 1A83     		strh	r2, [r3, #24]	@ movhi
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1173              		.loc 1 731 0
 1174 0688 3B68     		ldr	r3, [r7, #0]
 1175 068a 9A68     		ldr	r2, [r3, #8]
 1176 068c 7B68     		ldr	r3, [r7, #4]
 1177 068e 5A63     		str	r2, [r3, #52]
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1178              		.loc 1 734 0
 1179 0690 7B68     		ldr	r3, [r7, #4]
 1180 0692 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1181 0694 1A84     		strh	r2, [r3, #32]	@ movhi
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1182              		.loc 1 735 0
 1183 0696 07F11407 		add	r7, r7, #20
 1184 069a BD46     		mov	sp, r7
 1185 069c 80BC     		pop	{r7}
 1186 069e 7047     		bx	lr
 1187              		.cfi_endproc
 1188              	.LFE125:
 1190              		.align	2
 1191              		.global	TIM_OC2Init
 1192              		.thumb
 1193              		.thumb_func
 1195              	TIM_OC2Init:
 1196              	.LFB126:
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1197              		.loc 1 747 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 16
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
 1202 06a0 80B4     		push	{r7}
 1203              	.LCFI48:
 1204              		.cfi_def_cfa_offset 4
 1205              		.cfi_offset 7, -4
 1206 06a2 85B0     		sub	sp, sp, #20
 1207              	.LCFI49:
 1208              		.cfi_def_cfa_offset 24
 1209 06a4 00AF     		add	r7, sp, #0
 1210              	.LCFI50:
 1211              		.cfi_def_cfa_register 7
 1212 06a6 7860     		str	r0, [r7, #4]
 1213 06a8 3960     		str	r1, [r7, #0]
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1214              		.loc 1 748 0
 1215 06aa 4FF00003 		mov	r3, #0
 1216 06ae 7B81     		strh	r3, [r7, #10]	@ movhi
 1217 06b0 4FF00003 		mov	r3, #0
 1218 06b4 FB81     		strh	r3, [r7, #14]	@ movhi
 1219 06b6 4FF00003 		mov	r3, #0
 1220 06ba BB81     		strh	r3, [r7, #12]	@ movhi
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1221              		.loc 1 757 0
 1222 06bc 7B68     		ldr	r3, [r7, #4]
 1223 06be 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1224 06c0 9BB2     		uxth	r3, r3
 1225 06c2 23F01003 		bic	r3, r3, #16
 1226 06c6 9AB2     		uxth	r2, r3
 1227 06c8 7B68     		ldr	r3, [r7, #4]
 1228 06ca 1A84     		strh	r2, [r3, #32]	@ movhi
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1229              		.loc 1 760 0
 1230 06cc 7B68     		ldr	r3, [r7, #4]
 1231 06ce 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1232 06d0 FB81     		strh	r3, [r7, #14]	@ movhi
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1233              		.loc 1 762 0
 1234 06d2 7B68     		ldr	r3, [r7, #4]
 1235 06d4 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1236 06d6 BB81     		strh	r3, [r7, #12]	@ movhi
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1237              		.loc 1 765 0
 1238 06d8 7B68     		ldr	r3, [r7, #4]
 1239 06da 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1240 06dc 7B81     		strh	r3, [r7, #10]	@ movhi
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 1241              		.loc 1 768 0
 1242 06de 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1243 06e0 23F4E043 		bic	r3, r3, #28672
 1244 06e4 7B81     		strh	r3, [r7, #10]	@ movhi
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1245              		.loc 1 769 0
 1246 06e6 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1247 06e8 23F44073 		bic	r3, r3, #768
 1248 06ec 7B81     		strh	r3, [r7, #10]	@ movhi
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1249              		.loc 1 772 0
 1250 06ee 3B68     		ldr	r3, [r7, #0]
 1251 06f0 1B88     		ldrh	r3, [r3, #0]
 1252 06f2 4FEA0323 		lsl	r3, r3, #8
 1253 06f6 9AB2     		uxth	r2, r3
 1254 06f8 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1255 06fa 1343     		orrs	r3, r3, r2
 1256 06fc 7B81     		strh	r3, [r7, #10]	@ movhi
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1257              		.loc 1 775 0
 1258 06fe FB89     		ldrh	r3, [r7, #14]	@ movhi
 1259 0700 23F02003 		bic	r3, r3, #32
 1260 0704 FB81     		strh	r3, [r7, #14]	@ movhi
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1261              		.loc 1 777 0
 1262 0706 3B68     		ldr	r3, [r7, #0]
 1263 0708 9B89     		ldrh	r3, [r3, #12]
 1264 070a 4FEA0313 		lsl	r3, r3, #4
 1265 070e 9AB2     		uxth	r2, r3
 1266 0710 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1267 0712 1343     		orrs	r3, r3, r2
 1268 0714 FB81     		strh	r3, [r7, #14]	@ movhi
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1269              		.loc 1 780 0
 1270 0716 3B68     		ldr	r3, [r7, #0]
 1271 0718 5B88     		ldrh	r3, [r3, #2]
 1272 071a 4FEA0313 		lsl	r3, r3, #4
 1273 071e 9AB2     		uxth	r2, r3
 1274 0720 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1275 0722 1343     		orrs	r3, r3, r2
 1276 0724 FB81     		strh	r3, [r7, #14]	@ movhi
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1277              		.loc 1 782 0
 1278 0726 7A68     		ldr	r2, [r7, #4]
 1279 0728 4FF00003 		mov	r3, #0
 1280 072c C4F20103 		movt	r3, 16385
 1281 0730 9A42     		cmp	r2, r3
 1282 0732 06D0     		beq	.L47
 1283              		.loc 1 782 0 is_stmt 0 discriminator 1
 1284 0734 7A68     		ldr	r2, [r7, #4]
 1285 0736 4FF48063 		mov	r3, #1024
 1286 073a C4F20103 		movt	r3, 16385
 1287 073e 9A42     		cmp	r2, r3
 1288 0740 2FD1     		bne	.L48
 1289              	.L47:
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1290              		.loc 1 790 0 is_stmt 1
 1291 0742 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1292 0744 23F08003 		bic	r3, r3, #128
 1293 0748 FB81     		strh	r3, [r7, #14]	@ movhi
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1294              		.loc 1 792 0
 1295 074a 3B68     		ldr	r3, [r7, #0]
 1296 074c DB89     		ldrh	r3, [r3, #14]
 1297 074e 4FEA0313 		lsl	r3, r3, #4
 1298 0752 9AB2     		uxth	r2, r3
 1299 0754 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1300 0756 1343     		orrs	r3, r3, r2
 1301 0758 FB81     		strh	r3, [r7, #14]	@ movhi
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1302              		.loc 1 794 0
 1303 075a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1304 075c 23F04003 		bic	r3, r3, #64
 1305 0760 FB81     		strh	r3, [r7, #14]	@ movhi
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1306              		.loc 1 797 0
 1307 0762 3B68     		ldr	r3, [r7, #0]
 1308 0764 9B88     		ldrh	r3, [r3, #4]
 1309 0766 4FEA0313 		lsl	r3, r3, #4
 1310 076a 9AB2     		uxth	r2, r3
 1311 076c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1312 076e 1343     		orrs	r3, r3, r2
 1313 0770 FB81     		strh	r3, [r7, #14]	@ movhi
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 1314              		.loc 1 799 0
 1315 0772 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1316 0774 23F48063 		bic	r3, r3, #1024
 1317 0778 BB81     		strh	r3, [r7, #12]	@ movhi
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1318              		.loc 1 800 0
 1319 077a BB89     		ldrh	r3, [r7, #12]	@ movhi
 1320 077c 23F40063 		bic	r3, r3, #2048
 1321 0780 BB81     		strh	r3, [r7, #12]	@ movhi
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1322              		.loc 1 802 0
 1323 0782 3B68     		ldr	r3, [r7, #0]
 1324 0784 1B8A     		ldrh	r3, [r3, #16]
 1325 0786 4FEA8303 		lsl	r3, r3, #2
 1326 078a 9AB2     		uxth	r2, r3
 1327 078c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1328 078e 1343     		orrs	r3, r3, r2
 1329 0790 BB81     		strh	r3, [r7, #12]	@ movhi
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1330              		.loc 1 804 0
 1331 0792 3B68     		ldr	r3, [r7, #0]
 1332 0794 5B8A     		ldrh	r3, [r3, #18]
 1333 0796 4FEA8303 		lsl	r3, r3, #2
 1334 079a 9AB2     		uxth	r2, r3
 1335 079c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1336 079e 1343     		orrs	r3, r3, r2
 1337 07a0 BB81     		strh	r3, [r7, #12]	@ movhi
 1338              	.L48:
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1339              		.loc 1 807 0
 1340 07a2 7B68     		ldr	r3, [r7, #4]
 1341 07a4 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1342 07a6 9A80     		strh	r2, [r3, #4]	@ movhi
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1343              		.loc 1 810 0
 1344 07a8 7B68     		ldr	r3, [r7, #4]
 1345 07aa 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1346 07ac 1A83     		strh	r2, [r3, #24]	@ movhi
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1347              		.loc 1 813 0
 1348 07ae 3B68     		ldr	r3, [r7, #0]
 1349 07b0 9A68     		ldr	r2, [r3, #8]
 1350 07b2 7B68     		ldr	r3, [r7, #4]
 1351 07b4 9A63     		str	r2, [r3, #56]
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1352              		.loc 1 816 0
 1353 07b6 7B68     		ldr	r3, [r7, #4]
 1354 07b8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1355 07ba 1A84     		strh	r2, [r3, #32]	@ movhi
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1356              		.loc 1 817 0
 1357 07bc 07F11407 		add	r7, r7, #20
 1358 07c0 BD46     		mov	sp, r7
 1359 07c2 80BC     		pop	{r7}
 1360 07c4 7047     		bx	lr
 1361              		.cfi_endproc
 1362              	.LFE126:
 1364 07c6 00BF     		.align	2
 1365              		.global	TIM_OC3Init
 1366              		.thumb
 1367              		.thumb_func
 1369              	TIM_OC3Init:
 1370              	.LFB127:
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1371              		.loc 1 828 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 16
 1374              		@ frame_needed = 1, uses_anonymous_args = 0
 1375              		@ link register save eliminated.
 1376 07c8 80B4     		push	{r7}
 1377              	.LCFI51:
 1378              		.cfi_def_cfa_offset 4
 1379              		.cfi_offset 7, -4
 1380 07ca 85B0     		sub	sp, sp, #20
 1381              	.LCFI52:
 1382              		.cfi_def_cfa_offset 24
 1383 07cc 00AF     		add	r7, sp, #0
 1384              	.LCFI53:
 1385              		.cfi_def_cfa_register 7
 1386 07ce 7860     		str	r0, [r7, #4]
 1387 07d0 3960     		str	r1, [r7, #0]
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1388              		.loc 1 829 0
 1389 07d2 4FF00003 		mov	r3, #0
 1390 07d6 7B81     		strh	r3, [r7, #10]	@ movhi
 1391 07d8 4FF00003 		mov	r3, #0
 1392 07dc FB81     		strh	r3, [r7, #14]	@ movhi
 1393 07de 4FF00003 		mov	r3, #0
 1394 07e2 BB81     		strh	r3, [r7, #12]	@ movhi
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1395              		.loc 1 838 0
 1396 07e4 7B68     		ldr	r3, [r7, #4]
 1397 07e6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1398 07e8 9BB2     		uxth	r3, r3
 1399 07ea 23F48073 		bic	r3, r3, #256
 1400 07ee 9AB2     		uxth	r2, r3
 1401 07f0 7B68     		ldr	r3, [r7, #4]
 1402 07f2 1A84     		strh	r2, [r3, #32]	@ movhi
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1403              		.loc 1 841 0
 1404 07f4 7B68     		ldr	r3, [r7, #4]
 1405 07f6 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1406 07f8 FB81     		strh	r3, [r7, #14]	@ movhi
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1407              		.loc 1 843 0
 1408 07fa 7B68     		ldr	r3, [r7, #4]
 1409 07fc 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1410 07fe BB81     		strh	r3, [r7, #12]	@ movhi
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1411              		.loc 1 846 0
 1412 0800 7B68     		ldr	r3, [r7, #4]
 1413 0802 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1414 0804 7B81     		strh	r3, [r7, #10]	@ movhi
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 1415              		.loc 1 849 0
 1416 0806 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1417 0808 23F07003 		bic	r3, r3, #112
 1418 080c 7B81     		strh	r3, [r7, #10]	@ movhi
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1419              		.loc 1 850 0
 1420 080e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1421 0810 23F00303 		bic	r3, r3, #3
 1422 0814 7B81     		strh	r3, [r7, #10]	@ movhi
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1423              		.loc 1 852 0
 1424 0816 3B68     		ldr	r3, [r7, #0]
 1425 0818 1A88     		ldrh	r2, [r3, #0]
 1426 081a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1427 081c 1343     		orrs	r3, r3, r2
 1428 081e 7B81     		strh	r3, [r7, #10]	@ movhi
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1429              		.loc 1 855 0
 1430 0820 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1431 0822 23F40073 		bic	r3, r3, #512
 1432 0826 FB81     		strh	r3, [r7, #14]	@ movhi
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1433              		.loc 1 857 0
 1434 0828 3B68     		ldr	r3, [r7, #0]
 1435 082a 9B89     		ldrh	r3, [r3, #12]
 1436 082c 4FEA0323 		lsl	r3, r3, #8
 1437 0830 9AB2     		uxth	r2, r3
 1438 0832 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1439 0834 1343     		orrs	r3, r3, r2
 1440 0836 FB81     		strh	r3, [r7, #14]	@ movhi
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1441              		.loc 1 860 0
 1442 0838 3B68     		ldr	r3, [r7, #0]
 1443 083a 5B88     		ldrh	r3, [r3, #2]
 1444 083c 4FEA0323 		lsl	r3, r3, #8
 1445 0840 9AB2     		uxth	r2, r3
 1446 0842 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1447 0844 1343     		orrs	r3, r3, r2
 1448 0846 FB81     		strh	r3, [r7, #14]	@ movhi
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1449              		.loc 1 862 0
 1450 0848 7A68     		ldr	r2, [r7, #4]
 1451 084a 4FF00003 		mov	r3, #0
 1452 084e C4F20103 		movt	r3, 16385
 1453 0852 9A42     		cmp	r2, r3
 1454 0854 06D0     		beq	.L50
 1455              		.loc 1 862 0 is_stmt 0 discriminator 1
 1456 0856 7A68     		ldr	r2, [r7, #4]
 1457 0858 4FF48063 		mov	r3, #1024
 1458 085c C4F20103 		movt	r3, 16385
 1459 0860 9A42     		cmp	r2, r3
 1460 0862 2FD1     		bne	.L51
 1461              	.L50:
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1462              		.loc 1 870 0 is_stmt 1
 1463 0864 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1464 0866 23F40063 		bic	r3, r3, #2048
 1465 086a FB81     		strh	r3, [r7, #14]	@ movhi
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1466              		.loc 1 872 0
 1467 086c 3B68     		ldr	r3, [r7, #0]
 1468 086e DB89     		ldrh	r3, [r3, #14]
 1469 0870 4FEA0323 		lsl	r3, r3, #8
 1470 0874 9AB2     		uxth	r2, r3
 1471 0876 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1472 0878 1343     		orrs	r3, r3, r2
 1473 087a FB81     		strh	r3, [r7, #14]	@ movhi
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1474              		.loc 1 874 0
 1475 087c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1476 087e 23F48063 		bic	r3, r3, #1024
 1477 0882 FB81     		strh	r3, [r7, #14]	@ movhi
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1478              		.loc 1 877 0
 1479 0884 3B68     		ldr	r3, [r7, #0]
 1480 0886 9B88     		ldrh	r3, [r3, #4]
 1481 0888 4FEA0323 		lsl	r3, r3, #8
 1482 088c 9AB2     		uxth	r2, r3
 1483 088e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1484 0890 1343     		orrs	r3, r3, r2
 1485 0892 FB81     		strh	r3, [r7, #14]	@ movhi
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 1486              		.loc 1 879 0
 1487 0894 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1488 0896 23F48053 		bic	r3, r3, #4096
 1489 089a BB81     		strh	r3, [r7, #12]	@ movhi
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1490              		.loc 1 880 0
 1491 089c BB89     		ldrh	r3, [r7, #12]	@ movhi
 1492 089e 23F40053 		bic	r3, r3, #8192
 1493 08a2 BB81     		strh	r3, [r7, #12]	@ movhi
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1494              		.loc 1 882 0
 1495 08a4 3B68     		ldr	r3, [r7, #0]
 1496 08a6 1B8A     		ldrh	r3, [r3, #16]
 1497 08a8 4FEA0313 		lsl	r3, r3, #4
 1498 08ac 9AB2     		uxth	r2, r3
 1499 08ae BB89     		ldrh	r3, [r7, #12]	@ movhi
 1500 08b0 1343     		orrs	r3, r3, r2
 1501 08b2 BB81     		strh	r3, [r7, #12]	@ movhi
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1502              		.loc 1 884 0
 1503 08b4 3B68     		ldr	r3, [r7, #0]
 1504 08b6 5B8A     		ldrh	r3, [r3, #18]
 1505 08b8 4FEA0313 		lsl	r3, r3, #4
 1506 08bc 9AB2     		uxth	r2, r3
 1507 08be BB89     		ldrh	r3, [r7, #12]	@ movhi
 1508 08c0 1343     		orrs	r3, r3, r2
 1509 08c2 BB81     		strh	r3, [r7, #12]	@ movhi
 1510              	.L51:
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1511              		.loc 1 887 0
 1512 08c4 7B68     		ldr	r3, [r7, #4]
 1513 08c6 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1514 08c8 9A80     		strh	r2, [r3, #4]	@ movhi
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1515              		.loc 1 890 0
 1516 08ca 7B68     		ldr	r3, [r7, #4]
 1517 08cc 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1518 08ce 9A83     		strh	r2, [r3, #28]	@ movhi
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1519              		.loc 1 893 0
 1520 08d0 3B68     		ldr	r3, [r7, #0]
 1521 08d2 9A68     		ldr	r2, [r3, #8]
 1522 08d4 7B68     		ldr	r3, [r7, #4]
 1523 08d6 DA63     		str	r2, [r3, #60]
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1524              		.loc 1 896 0
 1525 08d8 7B68     		ldr	r3, [r7, #4]
 1526 08da FA89     		ldrh	r2, [r7, #14]	@ movhi
 1527 08dc 1A84     		strh	r2, [r3, #32]	@ movhi
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1528              		.loc 1 897 0
 1529 08de 07F11407 		add	r7, r7, #20
 1530 08e2 BD46     		mov	sp, r7
 1531 08e4 80BC     		pop	{r7}
 1532 08e6 7047     		bx	lr
 1533              		.cfi_endproc
 1534              	.LFE127:
 1536              		.align	2
 1537              		.global	TIM_OC4Init
 1538              		.thumb
 1539              		.thumb_func
 1541              	TIM_OC4Init:
 1542              	.LFB128:
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1543              		.loc 1 908 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 16
 1546              		@ frame_needed = 1, uses_anonymous_args = 0
 1547              		@ link register save eliminated.
 1548 08e8 80B4     		push	{r7}
 1549              	.LCFI54:
 1550              		.cfi_def_cfa_offset 4
 1551              		.cfi_offset 7, -4
 1552 08ea 85B0     		sub	sp, sp, #20
 1553              	.LCFI55:
 1554              		.cfi_def_cfa_offset 24
 1555 08ec 00AF     		add	r7, sp, #0
 1556              	.LCFI56:
 1557              		.cfi_def_cfa_register 7
 1558 08ee 7860     		str	r0, [r7, #4]
 1559 08f0 3960     		str	r1, [r7, #0]
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1560              		.loc 1 909 0
 1561 08f2 4FF00003 		mov	r3, #0
 1562 08f6 BB81     		strh	r3, [r7, #12]	@ movhi
 1563 08f8 4FF00003 		mov	r3, #0
 1564 08fc 7B81     		strh	r3, [r7, #10]	@ movhi
 1565 08fe 4FF00003 		mov	r3, #0
 1566 0902 FB81     		strh	r3, [r7, #14]	@ movhi
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1567              		.loc 1 918 0
 1568 0904 7B68     		ldr	r3, [r7, #4]
 1569 0906 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1570 0908 9BB2     		uxth	r3, r3
 1571 090a 23F48053 		bic	r3, r3, #4096
 1572 090e 9AB2     		uxth	r2, r3
 1573 0910 7B68     		ldr	r3, [r7, #4]
 1574 0912 1A84     		strh	r2, [r3, #32]	@ movhi
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1575              		.loc 1 921 0
 1576 0914 7B68     		ldr	r3, [r7, #4]
 1577 0916 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1578 0918 7B81     		strh	r3, [r7, #10]	@ movhi
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1579              		.loc 1 923 0
 1580 091a 7B68     		ldr	r3, [r7, #4]
 1581 091c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1582 091e FB81     		strh	r3, [r7, #14]	@ movhi
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1583              		.loc 1 926 0
 1584 0920 7B68     		ldr	r3, [r7, #4]
 1585 0922 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1586 0924 BB81     		strh	r3, [r7, #12]	@ movhi
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 1587              		.loc 1 929 0
 1588 0926 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1589 0928 23F4E043 		bic	r3, r3, #28672
 1590 092c BB81     		strh	r3, [r7, #12]	@ movhi
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1591              		.loc 1 930 0
 1592 092e BB89     		ldrh	r3, [r7, #12]	@ movhi
 1593 0930 23F44073 		bic	r3, r3, #768
 1594 0934 BB81     		strh	r3, [r7, #12]	@ movhi
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1595              		.loc 1 933 0
 1596 0936 3B68     		ldr	r3, [r7, #0]
 1597 0938 1B88     		ldrh	r3, [r3, #0]
 1598 093a 4FEA0323 		lsl	r3, r3, #8
 1599 093e 9AB2     		uxth	r2, r3
 1600 0940 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1601 0942 1343     		orrs	r3, r3, r2
 1602 0944 BB81     		strh	r3, [r7, #12]	@ movhi
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1603              		.loc 1 936 0
 1604 0946 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1605 0948 23F40053 		bic	r3, r3, #8192
 1606 094c 7B81     		strh	r3, [r7, #10]	@ movhi
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1607              		.loc 1 938 0
 1608 094e 3B68     		ldr	r3, [r7, #0]
 1609 0950 9B89     		ldrh	r3, [r3, #12]
 1610 0952 4FEA0333 		lsl	r3, r3, #12
 1611 0956 9AB2     		uxth	r2, r3
 1612 0958 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1613 095a 1343     		orrs	r3, r3, r2
 1614 095c 7B81     		strh	r3, [r7, #10]	@ movhi
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1615              		.loc 1 941 0
 1616 095e 3B68     		ldr	r3, [r7, #0]
 1617 0960 5B88     		ldrh	r3, [r3, #2]
 1618 0962 4FEA0333 		lsl	r3, r3, #12
 1619 0966 9AB2     		uxth	r2, r3
 1620 0968 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1621 096a 1343     		orrs	r3, r3, r2
 1622 096c 7B81     		strh	r3, [r7, #10]	@ movhi
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1623              		.loc 1 943 0
 1624 096e 7A68     		ldr	r2, [r7, #4]
 1625 0970 4FF00003 		mov	r3, #0
 1626 0974 C4F20103 		movt	r3, 16385
 1627 0978 9A42     		cmp	r2, r3
 1628 097a 06D0     		beq	.L53
 1629              		.loc 1 943 0 is_stmt 0 discriminator 1
 1630 097c 7A68     		ldr	r2, [r7, #4]
 1631 097e 4FF48063 		mov	r3, #1024
 1632 0982 C4F20103 		movt	r3, 16385
 1633 0986 9A42     		cmp	r2, r3
 1634 0988 0BD1     		bne	.L54
 1635              	.L53:
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1636              		.loc 1 947 0 is_stmt 1
 1637 098a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1638 098c 23F48043 		bic	r3, r3, #16384
 1639 0990 FB81     		strh	r3, [r7, #14]	@ movhi
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1640              		.loc 1 949 0
 1641 0992 3B68     		ldr	r3, [r7, #0]
 1642 0994 1B8A     		ldrh	r3, [r3, #16]
 1643 0996 4FEA8313 		lsl	r3, r3, #6
 1644 099a 9AB2     		uxth	r2, r3
 1645 099c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1646 099e 1343     		orrs	r3, r3, r2
 1647 09a0 FB81     		strh	r3, [r7, #14]	@ movhi
 1648              	.L54:
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1649              		.loc 1 952 0
 1650 09a2 7B68     		ldr	r3, [r7, #4]
 1651 09a4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1652 09a6 9A80     		strh	r2, [r3, #4]	@ movhi
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1653              		.loc 1 955 0
 1654 09a8 7B68     		ldr	r3, [r7, #4]
 1655 09aa BA89     		ldrh	r2, [r7, #12]	@ movhi
 1656 09ac 9A83     		strh	r2, [r3, #28]	@ movhi
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1657              		.loc 1 958 0
 1658 09ae 3B68     		ldr	r3, [r7, #0]
 1659 09b0 9A68     		ldr	r2, [r3, #8]
 1660 09b2 7B68     		ldr	r3, [r7, #4]
 1661 09b4 1A64     		str	r2, [r3, #64]
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1662              		.loc 1 961 0
 1663 09b6 7B68     		ldr	r3, [r7, #4]
 1664 09b8 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1665 09ba 1A84     		strh	r2, [r3, #32]	@ movhi
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1666              		.loc 1 962 0
 1667 09bc 07F11407 		add	r7, r7, #20
 1668 09c0 BD46     		mov	sp, r7
 1669 09c2 80BC     		pop	{r7}
 1670 09c4 7047     		bx	lr
 1671              		.cfi_endproc
 1672              	.LFE128:
 1674 09c6 00BF     		.align	2
 1675              		.global	TIM_OCStructInit
 1676              		.thumb
 1677              		.thumb_func
 1679              	TIM_OCStructInit:
 1680              	.LFB129:
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1681              		.loc 1 971 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 8
 1684              		@ frame_needed = 1, uses_anonymous_args = 0
 1685              		@ link register save eliminated.
 1686 09c8 80B4     		push	{r7}
 1687              	.LCFI57:
 1688              		.cfi_def_cfa_offset 4
 1689              		.cfi_offset 7, -4
 1690 09ca 83B0     		sub	sp, sp, #12
 1691              	.LCFI58:
 1692              		.cfi_def_cfa_offset 16
 1693 09cc 00AF     		add	r7, sp, #0
 1694              	.LCFI59:
 1695              		.cfi_def_cfa_register 7
 1696 09ce 7860     		str	r0, [r7, #4]
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1697              		.loc 1 973 0
 1698 09d0 7B68     		ldr	r3, [r7, #4]
 1699 09d2 4FF00002 		mov	r2, #0
 1700 09d6 1A80     		strh	r2, [r3, #0]	@ movhi
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1701              		.loc 1 974 0
 1702 09d8 7B68     		ldr	r3, [r7, #4]
 1703 09da 4FF00002 		mov	r2, #0
 1704 09de 5A80     		strh	r2, [r3, #2]	@ movhi
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1705              		.loc 1 975 0
 1706 09e0 7B68     		ldr	r3, [r7, #4]
 1707 09e2 4FF00002 		mov	r2, #0
 1708 09e6 9A80     		strh	r2, [r3, #4]	@ movhi
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1709              		.loc 1 976 0
 1710 09e8 7B68     		ldr	r3, [r7, #4]
 1711 09ea 4FF00002 		mov	r2, #0
 1712 09ee 9A60     		str	r2, [r3, #8]
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1713              		.loc 1 977 0
 1714 09f0 7B68     		ldr	r3, [r7, #4]
 1715 09f2 4FF00002 		mov	r2, #0
 1716 09f6 9A81     		strh	r2, [r3, #12]	@ movhi
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1717              		.loc 1 978 0
 1718 09f8 7B68     		ldr	r3, [r7, #4]
 1719 09fa 4FF00002 		mov	r2, #0
 1720 09fe DA81     		strh	r2, [r3, #14]	@ movhi
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1721              		.loc 1 979 0
 1722 0a00 7B68     		ldr	r3, [r7, #4]
 1723 0a02 4FF00002 		mov	r2, #0
 1724 0a06 1A82     		strh	r2, [r3, #16]	@ movhi
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1725              		.loc 1 980 0
 1726 0a08 7B68     		ldr	r3, [r7, #4]
 1727 0a0a 4FF00002 		mov	r2, #0
 1728 0a0e 5A82     		strh	r2, [r3, #18]	@ movhi
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1729              		.loc 1 981 0
 1730 0a10 07F10C07 		add	r7, r7, #12
 1731 0a14 BD46     		mov	sp, r7
 1732 0a16 80BC     		pop	{r7}
 1733 0a18 7047     		bx	lr
 1734              		.cfi_endproc
 1735              	.LFE129:
 1737 0a1a 00BF     		.align	2
 1738              		.global	TIM_SelectOCxM
 1739              		.thumb
 1740              		.thumb_func
 1742              	TIM_SelectOCxM:
 1743              	.LFB130:
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1744              		.loc 1 1007 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 16
 1747              		@ frame_needed = 1, uses_anonymous_args = 0
 1748              		@ link register save eliminated.
 1749 0a1c 80B4     		push	{r7}
 1750              	.LCFI60:
 1751              		.cfi_def_cfa_offset 4
 1752              		.cfi_offset 7, -4
 1753 0a1e 85B0     		sub	sp, sp, #20
 1754              	.LCFI61:
 1755              		.cfi_def_cfa_offset 24
 1756 0a20 00AF     		add	r7, sp, #0
 1757              	.LCFI62:
 1758              		.cfi_def_cfa_register 7
 1759 0a22 7860     		str	r0, [r7, #4]
 1760 0a24 1346     		mov	r3, r2
 1761 0a26 0A46     		mov	r2, r1	@ movhi
 1762 0a28 7A80     		strh	r2, [r7, #2]	@ movhi
 1763 0a2a 3B80     		strh	r3, [r7, #0]	@ movhi
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 1764              		.loc 1 1008 0
 1765 0a2c 4FF00003 		mov	r3, #0
 1766 0a30 FB60     		str	r3, [r7, #12]
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
 1767              		.loc 1 1009 0
 1768 0a32 4FF00003 		mov	r3, #0
 1769 0a36 7B81     		strh	r3, [r7, #10]	@ movhi
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
 1770              		.loc 1 1016 0
 1771 0a38 7B68     		ldr	r3, [r7, #4]
 1772 0a3a FB60     		str	r3, [r7, #12]
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 1773              		.loc 1 1017 0
 1774 0a3c FB68     		ldr	r3, [r7, #12]
 1775 0a3e 03F11803 		add	r3, r3, #24
 1776 0a42 FB60     		str	r3, [r7, #12]
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1777              		.loc 1 1019 0
 1778 0a44 7B88     		ldrh	r3, [r7, #2]
 1779 0a46 4FF00102 		mov	r2, #1
 1780 0a4a 02FA03F3 		lsl	r3, r2, r3
 1781 0a4e 7B81     		strh	r3, [r7, #10]	@ movhi
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1782              		.loc 1 1022 0
 1783 0a50 7B68     		ldr	r3, [r7, #4]
 1784 0a52 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1785 0a54 9AB2     		uxth	r2, r3
 1786 0a56 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1787 0a58 6FEA0303 		mvn	r3, r3
 1788 0a5c 9BB2     		uxth	r3, r3
 1789 0a5e 1340     		ands	r3, r3, r2
 1790 0a60 9AB2     		uxth	r2, r3
 1791 0a62 7B68     		ldr	r3, [r7, #4]
 1792 0a64 1A84     		strh	r2, [r3, #32]	@ movhi
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1793              		.loc 1 1024 0
 1794 0a66 7B88     		ldrh	r3, [r7, #2]
 1795 0a68 002B     		cmp	r3, #0
 1796 0a6a 02D0     		beq	.L57
 1797              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1798 0a6c 7B88     		ldrh	r3, [r7, #2]
 1799 0a6e 082B     		cmp	r3, #8
 1800 0a70 14D1     		bne	.L58
 1801              	.L57:
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 1802              		.loc 1 1026 0 is_stmt 1
 1803 0a72 7B88     		ldrh	r3, [r7, #2]
 1804 0a74 4FEA5303 		lsr	r3, r3, #1
 1805 0a78 9BB2     		uxth	r3, r3
 1806 0a7a FA68     		ldr	r2, [r7, #12]
 1807 0a7c D318     		adds	r3, r2, r3
 1808 0a7e FB60     		str	r3, [r7, #12]
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1809              		.loc 1 1029 0
 1810 0a80 FA68     		ldr	r2, [r7, #12]
 1811 0a82 FB68     		ldr	r3, [r7, #12]
 1812 0a84 1968     		ldr	r1, [r3, #0]
 1813 0a86 4FF68F73 		movw	r3, #65423
 1814 0a8a 0B40     		ands	r3, r3, r1
 1815 0a8c 1360     		str	r3, [r2, #0]
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1816              		.loc 1 1032 0
 1817 0a8e FB68     		ldr	r3, [r7, #12]
 1818 0a90 FA68     		ldr	r2, [r7, #12]
 1819 0a92 1168     		ldr	r1, [r2, #0]
 1820 0a94 3A88     		ldrh	r2, [r7, #0]
 1821 0a96 0A43     		orrs	r2, r2, r1
 1822 0a98 1A60     		str	r2, [r3, #0]
 1823 0a9a 19E0     		b	.L56
 1824              	.L58:
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1825              		.loc 1 1036 0
 1826 0a9c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1827 0a9e A3F10403 		sub	r3, r3, #4
 1828 0aa2 9BB2     		uxth	r3, r3
 1829 0aa4 4FEA5303 		lsr	r3, r3, #1
 1830 0aa8 9BB2     		uxth	r3, r3
 1831 0aaa FA68     		ldr	r2, [r7, #12]
 1832 0aac D318     		adds	r3, r2, r3
 1833 0aae FB60     		str	r3, [r7, #12]
1037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1834              		.loc 1 1039 0
 1835 0ab0 FA68     		ldr	r2, [r7, #12]
 1836 0ab2 FB68     		ldr	r3, [r7, #12]
 1837 0ab4 1968     		ldr	r1, [r3, #0]
 1838 0ab6 48F6FF73 		movw	r3, #36863
 1839 0aba 0B40     		ands	r3, r3, r1
 1840 0abc 1360     		str	r3, [r2, #0]
1040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1841              		.loc 1 1042 0
 1842 0abe FB68     		ldr	r3, [r7, #12]
 1843 0ac0 FA68     		ldr	r2, [r7, #12]
 1844 0ac2 1168     		ldr	r1, [r2, #0]
 1845 0ac4 3A88     		ldrh	r2, [r7, #0]	@ movhi
 1846 0ac6 4FEA0222 		lsl	r2, r2, #8
 1847 0aca 92B2     		uxth	r2, r2
 1848 0acc 0A43     		orrs	r2, r2, r1
 1849 0ace 1A60     		str	r2, [r3, #0]
 1850              	.L56:
1043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1851              		.loc 1 1044 0
 1852 0ad0 07F11407 		add	r7, r7, #20
 1853 0ad4 BD46     		mov	sp, r7
 1854 0ad6 80BC     		pop	{r7}
 1855 0ad8 7047     		bx	lr
 1856              		.cfi_endproc
 1857              	.LFE130:
 1859 0ada 00BF     		.align	2
 1860              		.global	TIM_SetCompare1
 1861              		.thumb
 1862              		.thumb_func
 1864              	TIM_SetCompare1:
 1865              	.LFB131:
1045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1866              		.loc 1 1053 0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 8
 1869              		@ frame_needed = 1, uses_anonymous_args = 0
 1870              		@ link register save eliminated.
 1871 0adc 80B4     		push	{r7}
 1872              	.LCFI63:
 1873              		.cfi_def_cfa_offset 4
 1874              		.cfi_offset 7, -4
 1875 0ade 83B0     		sub	sp, sp, #12
 1876              	.LCFI64:
 1877              		.cfi_def_cfa_offset 16
 1878 0ae0 00AF     		add	r7, sp, #0
 1879              	.LCFI65:
 1880              		.cfi_def_cfa_register 7
 1881 0ae2 7860     		str	r0, [r7, #4]
 1882 0ae4 3960     		str	r1, [r7, #0]
1054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 1883              		.loc 1 1058 0
 1884 0ae6 7B68     		ldr	r3, [r7, #4]
 1885 0ae8 3A68     		ldr	r2, [r7, #0]
 1886 0aea 5A63     		str	r2, [r3, #52]
1059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1887              		.loc 1 1059 0
 1888 0aec 07F10C07 		add	r7, r7, #12
 1889 0af0 BD46     		mov	sp, r7
 1890 0af2 80BC     		pop	{r7}
 1891 0af4 7047     		bx	lr
 1892              		.cfi_endproc
 1893              	.LFE131:
 1895 0af6 00BF     		.align	2
 1896              		.global	TIM_SetCompare2
 1897              		.thumb
 1898              		.thumb_func
 1900              	TIM_SetCompare2:
 1901              	.LFB132:
1060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1902              		.loc 1 1069 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 8
 1905              		@ frame_needed = 1, uses_anonymous_args = 0
 1906              		@ link register save eliminated.
 1907 0af8 80B4     		push	{r7}
 1908              	.LCFI66:
 1909              		.cfi_def_cfa_offset 4
 1910              		.cfi_offset 7, -4
 1911 0afa 83B0     		sub	sp, sp, #12
 1912              	.LCFI67:
 1913              		.cfi_def_cfa_offset 16
 1914 0afc 00AF     		add	r7, sp, #0
 1915              	.LCFI68:
 1916              		.cfi_def_cfa_register 7
 1917 0afe 7860     		str	r0, [r7, #4]
 1918 0b00 3960     		str	r1, [r7, #0]
1070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 1919              		.loc 1 1074 0
 1920 0b02 7B68     		ldr	r3, [r7, #4]
 1921 0b04 3A68     		ldr	r2, [r7, #0]
 1922 0b06 9A63     		str	r2, [r3, #56]
1075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1923              		.loc 1 1075 0
 1924 0b08 07F10C07 		add	r7, r7, #12
 1925 0b0c BD46     		mov	sp, r7
 1926 0b0e 80BC     		pop	{r7}
 1927 0b10 7047     		bx	lr
 1928              		.cfi_endproc
 1929              	.LFE132:
 1931 0b12 00BF     		.align	2
 1932              		.global	TIM_SetCompare3
 1933              		.thumb
 1934              		.thumb_func
 1936              	TIM_SetCompare3:
 1937              	.LFB133:
1076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1938              		.loc 1 1084 0
 1939              		.cfi_startproc
 1940              		@ args = 0, pretend = 0, frame = 8
 1941              		@ frame_needed = 1, uses_anonymous_args = 0
 1942              		@ link register save eliminated.
 1943 0b14 80B4     		push	{r7}
 1944              	.LCFI69:
 1945              		.cfi_def_cfa_offset 4
 1946              		.cfi_offset 7, -4
 1947 0b16 83B0     		sub	sp, sp, #12
 1948              	.LCFI70:
 1949              		.cfi_def_cfa_offset 16
 1950 0b18 00AF     		add	r7, sp, #0
 1951              	.LCFI71:
 1952              		.cfi_def_cfa_register 7
 1953 0b1a 7860     		str	r0, [r7, #4]
 1954 0b1c 3960     		str	r1, [r7, #0]
1085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 1955              		.loc 1 1089 0
 1956 0b1e 7B68     		ldr	r3, [r7, #4]
 1957 0b20 3A68     		ldr	r2, [r7, #0]
 1958 0b22 DA63     		str	r2, [r3, #60]
1090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1959              		.loc 1 1090 0
 1960 0b24 07F10C07 		add	r7, r7, #12
 1961 0b28 BD46     		mov	sp, r7
 1962 0b2a 80BC     		pop	{r7}
 1963 0b2c 7047     		bx	lr
 1964              		.cfi_endproc
 1965              	.LFE133:
 1967 0b2e 00BF     		.align	2
 1968              		.global	TIM_SetCompare4
 1969              		.thumb
 1970              		.thumb_func
 1972              	TIM_SetCompare4:
 1973              	.LFB134:
1091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1974              		.loc 1 1099 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 8
 1977              		@ frame_needed = 1, uses_anonymous_args = 0
 1978              		@ link register save eliminated.
 1979 0b30 80B4     		push	{r7}
 1980              	.LCFI72:
 1981              		.cfi_def_cfa_offset 4
 1982              		.cfi_offset 7, -4
 1983 0b32 83B0     		sub	sp, sp, #12
 1984              	.LCFI73:
 1985              		.cfi_def_cfa_offset 16
 1986 0b34 00AF     		add	r7, sp, #0
 1987              	.LCFI74:
 1988              		.cfi_def_cfa_register 7
 1989 0b36 7860     		str	r0, [r7, #4]
 1990 0b38 3960     		str	r1, [r7, #0]
1100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 1991              		.loc 1 1104 0
 1992 0b3a 7B68     		ldr	r3, [r7, #4]
 1993 0b3c 3A68     		ldr	r2, [r7, #0]
 1994 0b3e 1A64     		str	r2, [r3, #64]
1105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1995              		.loc 1 1105 0
 1996 0b40 07F10C07 		add	r7, r7, #12
 1997 0b44 BD46     		mov	sp, r7
 1998 0b46 80BC     		pop	{r7}
 1999 0b48 7047     		bx	lr
 2000              		.cfi_endproc
 2001              	.LFE134:
 2003 0b4a 00BF     		.align	2
 2004              		.global	TIM_ForcedOC1Config
 2005              		.thumb
 2006              		.thumb_func
 2008              	TIM_ForcedOC1Config:
 2009              	.LFB135:
1106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2010              		.loc 1 1117 0
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 16
 2013              		@ frame_needed = 1, uses_anonymous_args = 0
 2014              		@ link register save eliminated.
 2015 0b4c 80B4     		push	{r7}
 2016              	.LCFI75:
 2017              		.cfi_def_cfa_offset 4
 2018              		.cfi_offset 7, -4
 2019 0b4e 85B0     		sub	sp, sp, #20
 2020              	.LCFI76:
 2021              		.cfi_def_cfa_offset 24
 2022 0b50 00AF     		add	r7, sp, #0
 2023              	.LCFI77:
 2024              		.cfi_def_cfa_register 7
 2025 0b52 7860     		str	r0, [r7, #4]
 2026 0b54 0B46     		mov	r3, r1
 2027 0b56 7B80     		strh	r3, [r7, #2]	@ movhi
1118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2028              		.loc 1 1118 0
 2029 0b58 4FF00003 		mov	r3, #0
 2030 0b5c FB81     		strh	r3, [r7, #14]	@ movhi
1119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2031              		.loc 1 1123 0
 2032 0b5e 7B68     		ldr	r3, [r7, #4]
 2033 0b60 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2034 0b62 FB81     		strh	r3, [r7, #14]	@ movhi
1124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 2035              		.loc 1 1126 0
 2036 0b64 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2037 0b66 23F07003 		bic	r3, r3, #112
 2038 0b6a FB81     		strh	r3, [r7, #14]	@ movhi
1127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 2039              		.loc 1 1129 0
 2040 0b6c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2041 0b6e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2042 0b70 1343     		orrs	r3, r3, r2
 2043 0b72 FB81     		strh	r3, [r7, #14]	@ movhi
1130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2044              		.loc 1 1132 0
 2045 0b74 7B68     		ldr	r3, [r7, #4]
 2046 0b76 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2047 0b78 1A83     		strh	r2, [r3, #24]	@ movhi
1133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2048              		.loc 1 1133 0
 2049 0b7a 07F11407 		add	r7, r7, #20
 2050 0b7e BD46     		mov	sp, r7
 2051 0b80 80BC     		pop	{r7}
 2052 0b82 7047     		bx	lr
 2053              		.cfi_endproc
 2054              	.LFE135:
 2056              		.align	2
 2057              		.global	TIM_ForcedOC2Config
 2058              		.thumb
 2059              		.thumb_func
 2061              	TIM_ForcedOC2Config:
 2062              	.LFB136:
1134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2063              		.loc 1 1146 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 16
 2066              		@ frame_needed = 1, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
 2068 0b84 80B4     		push	{r7}
 2069              	.LCFI78:
 2070              		.cfi_def_cfa_offset 4
 2071              		.cfi_offset 7, -4
 2072 0b86 85B0     		sub	sp, sp, #20
 2073              	.LCFI79:
 2074              		.cfi_def_cfa_offset 24
 2075 0b88 00AF     		add	r7, sp, #0
 2076              	.LCFI80:
 2077              		.cfi_def_cfa_register 7
 2078 0b8a 7860     		str	r0, [r7, #4]
 2079 0b8c 0B46     		mov	r3, r1
 2080 0b8e 7B80     		strh	r3, [r7, #2]	@ movhi
1147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2081              		.loc 1 1147 0
 2082 0b90 4FF00003 		mov	r3, #0
 2083 0b94 FB81     		strh	r3, [r7, #14]	@ movhi
1148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2084              		.loc 1 1152 0
 2085 0b96 7B68     		ldr	r3, [r7, #4]
 2086 0b98 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2087 0b9a FB81     		strh	r3, [r7, #14]	@ movhi
1153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 2088              		.loc 1 1155 0
 2089 0b9c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2090 0b9e 23F4E043 		bic	r3, r3, #28672
 2091 0ba2 FB81     		strh	r3, [r7, #14]	@ movhi
1156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 2092              		.loc 1 1158 0
 2093 0ba4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2094 0ba6 4FEA0323 		lsl	r3, r3, #8
 2095 0baa 9AB2     		uxth	r2, r3
 2096 0bac FB89     		ldrh	r3, [r7, #14]	@ movhi
 2097 0bae 1343     		orrs	r3, r3, r2
 2098 0bb0 FB81     		strh	r3, [r7, #14]	@ movhi
1159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2099              		.loc 1 1161 0
 2100 0bb2 7B68     		ldr	r3, [r7, #4]
 2101 0bb4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2102 0bb6 1A83     		strh	r2, [r3, #24]	@ movhi
1162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2103              		.loc 1 1162 0
 2104 0bb8 07F11407 		add	r7, r7, #20
 2105 0bbc BD46     		mov	sp, r7
 2106 0bbe 80BC     		pop	{r7}
 2107 0bc0 7047     		bx	lr
 2108              		.cfi_endproc
 2109              	.LFE136:
 2111 0bc2 00BF     		.align	2
 2112              		.global	TIM_ForcedOC3Config
 2113              		.thumb
 2114              		.thumb_func
 2116              	TIM_ForcedOC3Config:
 2117              	.LFB137:
1163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2118              		.loc 1 1174 0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 16
 2121              		@ frame_needed = 1, uses_anonymous_args = 0
 2122              		@ link register save eliminated.
 2123 0bc4 80B4     		push	{r7}
 2124              	.LCFI81:
 2125              		.cfi_def_cfa_offset 4
 2126              		.cfi_offset 7, -4
 2127 0bc6 85B0     		sub	sp, sp, #20
 2128              	.LCFI82:
 2129              		.cfi_def_cfa_offset 24
 2130 0bc8 00AF     		add	r7, sp, #0
 2131              	.LCFI83:
 2132              		.cfi_def_cfa_register 7
 2133 0bca 7860     		str	r0, [r7, #4]
 2134 0bcc 0B46     		mov	r3, r1
 2135 0bce 7B80     		strh	r3, [r7, #2]	@ movhi
1175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2136              		.loc 1 1175 0
 2137 0bd0 4FF00003 		mov	r3, #0
 2138 0bd4 FB81     		strh	r3, [r7, #14]	@ movhi
1176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2139              		.loc 1 1181 0
 2140 0bd6 7B68     		ldr	r3, [r7, #4]
 2141 0bd8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2142 0bda FB81     		strh	r3, [r7, #14]	@ movhi
1182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 2143              		.loc 1 1184 0
 2144 0bdc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2145 0bde 23F07003 		bic	r3, r3, #112
 2146 0be2 FB81     		strh	r3, [r7, #14]	@ movhi
1185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 2147              		.loc 1 1187 0
 2148 0be4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2149 0be6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2150 0be8 1343     		orrs	r3, r3, r2
 2151 0bea FB81     		strh	r3, [r7, #14]	@ movhi
1188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2152              		.loc 1 1190 0
 2153 0bec 7B68     		ldr	r3, [r7, #4]
 2154 0bee FA89     		ldrh	r2, [r7, #14]	@ movhi
 2155 0bf0 9A83     		strh	r2, [r3, #28]	@ movhi
1191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2156              		.loc 1 1191 0
 2157 0bf2 07F11407 		add	r7, r7, #20
 2158 0bf6 BD46     		mov	sp, r7
 2159 0bf8 80BC     		pop	{r7}
 2160 0bfa 7047     		bx	lr
 2161              		.cfi_endproc
 2162              	.LFE137:
 2164              		.align	2
 2165              		.global	TIM_ForcedOC4Config
 2166              		.thumb
 2167              		.thumb_func
 2169              	TIM_ForcedOC4Config:
 2170              	.LFB138:
1192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2171              		.loc 1 1203 0
 2172              		.cfi_startproc
 2173              		@ args = 0, pretend = 0, frame = 16
 2174              		@ frame_needed = 1, uses_anonymous_args = 0
 2175              		@ link register save eliminated.
 2176 0bfc 80B4     		push	{r7}
 2177              	.LCFI84:
 2178              		.cfi_def_cfa_offset 4
 2179              		.cfi_offset 7, -4
 2180 0bfe 85B0     		sub	sp, sp, #20
 2181              	.LCFI85:
 2182              		.cfi_def_cfa_offset 24
 2183 0c00 00AF     		add	r7, sp, #0
 2184              	.LCFI86:
 2185              		.cfi_def_cfa_register 7
 2186 0c02 7860     		str	r0, [r7, #4]
 2187 0c04 0B46     		mov	r3, r1
 2188 0c06 7B80     		strh	r3, [r7, #2]	@ movhi
1204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2189              		.loc 1 1204 0
 2190 0c08 4FF00003 		mov	r3, #0
 2191 0c0c FB81     		strh	r3, [r7, #14]	@ movhi
1205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2192              		.loc 1 1209 0
 2193 0c0e 7B68     		ldr	r3, [r7, #4]
 2194 0c10 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2195 0c12 FB81     		strh	r3, [r7, #14]	@ movhi
1210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 2196              		.loc 1 1212 0
 2197 0c14 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2198 0c16 23F4E043 		bic	r3, r3, #28672
 2199 0c1a FB81     		strh	r3, [r7, #14]	@ movhi
1213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 2200              		.loc 1 1215 0
 2201 0c1c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2202 0c1e 4FEA0323 		lsl	r3, r3, #8
 2203 0c22 9AB2     		uxth	r2, r3
 2204 0c24 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2205 0c26 1343     		orrs	r3, r3, r2
 2206 0c28 FB81     		strh	r3, [r7, #14]	@ movhi
1216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2207              		.loc 1 1218 0
 2208 0c2a 7B68     		ldr	r3, [r7, #4]
 2209 0c2c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2210 0c2e 9A83     		strh	r2, [r3, #28]	@ movhi
1219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2211              		.loc 1 1219 0
 2212 0c30 07F11407 		add	r7, r7, #20
 2213 0c34 BD46     		mov	sp, r7
 2214 0c36 80BC     		pop	{r7}
 2215 0c38 7047     		bx	lr
 2216              		.cfi_endproc
 2217              	.LFE138:
 2219 0c3a 00BF     		.align	2
 2220              		.global	TIM_OC1PreloadConfig
 2221              		.thumb
 2222              		.thumb_func
 2224              	TIM_OC1PreloadConfig:
 2225              	.LFB139:
1220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2226              		.loc 1 1231 0
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 16
 2229              		@ frame_needed = 1, uses_anonymous_args = 0
 2230              		@ link register save eliminated.
 2231 0c3c 80B4     		push	{r7}
 2232              	.LCFI87:
 2233              		.cfi_def_cfa_offset 4
 2234              		.cfi_offset 7, -4
 2235 0c3e 85B0     		sub	sp, sp, #20
 2236              	.LCFI88:
 2237              		.cfi_def_cfa_offset 24
 2238 0c40 00AF     		add	r7, sp, #0
 2239              	.LCFI89:
 2240              		.cfi_def_cfa_register 7
 2241 0c42 7860     		str	r0, [r7, #4]
 2242 0c44 0B46     		mov	r3, r1
 2243 0c46 7B80     		strh	r3, [r7, #2]	@ movhi
1232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2244              		.loc 1 1232 0
 2245 0c48 4FF00003 		mov	r3, #0
 2246 0c4c FB81     		strh	r3, [r7, #14]	@ movhi
1233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2247              		.loc 1 1238 0
 2248 0c4e 7B68     		ldr	r3, [r7, #4]
 2249 0c50 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2250 0c52 FB81     		strh	r3, [r7, #14]	@ movhi
1239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 2251              		.loc 1 1241 0
 2252 0c54 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2253 0c56 23F00803 		bic	r3, r3, #8
 2254 0c5a FB81     		strh	r3, [r7, #14]	@ movhi
1242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2255              		.loc 1 1244 0
 2256 0c5c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2257 0c5e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2258 0c60 1343     		orrs	r3, r3, r2
 2259 0c62 FB81     		strh	r3, [r7, #14]	@ movhi
1245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2260              		.loc 1 1247 0
 2261 0c64 7B68     		ldr	r3, [r7, #4]
 2262 0c66 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2263 0c68 1A83     		strh	r2, [r3, #24]	@ movhi
1248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2264              		.loc 1 1248 0
 2265 0c6a 07F11407 		add	r7, r7, #20
 2266 0c6e BD46     		mov	sp, r7
 2267 0c70 80BC     		pop	{r7}
 2268 0c72 7047     		bx	lr
 2269              		.cfi_endproc
 2270              	.LFE139:
 2272              		.align	2
 2273              		.global	TIM_OC2PreloadConfig
 2274              		.thumb
 2275              		.thumb_func
 2277              	TIM_OC2PreloadConfig:
 2278              	.LFB140:
1249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2279              		.loc 1 1261 0
 2280              		.cfi_startproc
 2281              		@ args = 0, pretend = 0, frame = 16
 2282              		@ frame_needed = 1, uses_anonymous_args = 0
 2283              		@ link register save eliminated.
 2284 0c74 80B4     		push	{r7}
 2285              	.LCFI90:
 2286              		.cfi_def_cfa_offset 4
 2287              		.cfi_offset 7, -4
 2288 0c76 85B0     		sub	sp, sp, #20
 2289              	.LCFI91:
 2290              		.cfi_def_cfa_offset 24
 2291 0c78 00AF     		add	r7, sp, #0
 2292              	.LCFI92:
 2293              		.cfi_def_cfa_register 7
 2294 0c7a 7860     		str	r0, [r7, #4]
 2295 0c7c 0B46     		mov	r3, r1
 2296 0c7e 7B80     		strh	r3, [r7, #2]	@ movhi
1262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2297              		.loc 1 1262 0
 2298 0c80 4FF00003 		mov	r3, #0
 2299 0c84 FB81     		strh	r3, [r7, #14]	@ movhi
1263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2300              		.loc 1 1268 0
 2301 0c86 7B68     		ldr	r3, [r7, #4]
 2302 0c88 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2303 0c8a FB81     		strh	r3, [r7, #14]	@ movhi
1269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 2304              		.loc 1 1271 0
 2305 0c8c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2306 0c8e 23F40063 		bic	r3, r3, #2048
 2307 0c92 FB81     		strh	r3, [r7, #14]	@ movhi
1272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 2308              		.loc 1 1274 0
 2309 0c94 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2310 0c96 4FEA0323 		lsl	r3, r3, #8
 2311 0c9a 9AB2     		uxth	r2, r3
 2312 0c9c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2313 0c9e 1343     		orrs	r3, r3, r2
 2314 0ca0 FB81     		strh	r3, [r7, #14]	@ movhi
1275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2315              		.loc 1 1277 0
 2316 0ca2 7B68     		ldr	r3, [r7, #4]
 2317 0ca4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2318 0ca6 1A83     		strh	r2, [r3, #24]	@ movhi
1278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2319              		.loc 1 1278 0
 2320 0ca8 07F11407 		add	r7, r7, #20
 2321 0cac BD46     		mov	sp, r7
 2322 0cae 80BC     		pop	{r7}
 2323 0cb0 7047     		bx	lr
 2324              		.cfi_endproc
 2325              	.LFE140:
 2327 0cb2 00BF     		.align	2
 2328              		.global	TIM_OC3PreloadConfig
 2329              		.thumb
 2330              		.thumb_func
 2332              	TIM_OC3PreloadConfig:
 2333              	.LFB141:
1279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2334              		.loc 1 1290 0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 16
 2337              		@ frame_needed = 1, uses_anonymous_args = 0
 2338              		@ link register save eliminated.
 2339 0cb4 80B4     		push	{r7}
 2340              	.LCFI93:
 2341              		.cfi_def_cfa_offset 4
 2342              		.cfi_offset 7, -4
 2343 0cb6 85B0     		sub	sp, sp, #20
 2344              	.LCFI94:
 2345              		.cfi_def_cfa_offset 24
 2346 0cb8 00AF     		add	r7, sp, #0
 2347              	.LCFI95:
 2348              		.cfi_def_cfa_register 7
 2349 0cba 7860     		str	r0, [r7, #4]
 2350 0cbc 0B46     		mov	r3, r1
 2351 0cbe 7B80     		strh	r3, [r7, #2]	@ movhi
1291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2352              		.loc 1 1291 0
 2353 0cc0 4FF00003 		mov	r3, #0
 2354 0cc4 FB81     		strh	r3, [r7, #14]	@ movhi
1292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2355              		.loc 1 1297 0
 2356 0cc6 7B68     		ldr	r3, [r7, #4]
 2357 0cc8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2358 0cca FB81     		strh	r3, [r7, #14]	@ movhi
1298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 2359              		.loc 1 1300 0
 2360 0ccc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2361 0cce 23F00803 		bic	r3, r3, #8
 2362 0cd2 FB81     		strh	r3, [r7, #14]	@ movhi
1301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2363              		.loc 1 1303 0
 2364 0cd4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2365 0cd6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2366 0cd8 1343     		orrs	r3, r3, r2
 2367 0cda FB81     		strh	r3, [r7, #14]	@ movhi
1304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2368              		.loc 1 1306 0
 2369 0cdc 7B68     		ldr	r3, [r7, #4]
 2370 0cde FA89     		ldrh	r2, [r7, #14]	@ movhi
 2371 0ce0 9A83     		strh	r2, [r3, #28]	@ movhi
1307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2372              		.loc 1 1307 0
 2373 0ce2 07F11407 		add	r7, r7, #20
 2374 0ce6 BD46     		mov	sp, r7
 2375 0ce8 80BC     		pop	{r7}
 2376 0cea 7047     		bx	lr
 2377              		.cfi_endproc
 2378              	.LFE141:
 2380              		.align	2
 2381              		.global	TIM_OC4PreloadConfig
 2382              		.thumb
 2383              		.thumb_func
 2385              	TIM_OC4PreloadConfig:
 2386              	.LFB142:
1308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2387              		.loc 1 1319 0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 16
 2390              		@ frame_needed = 1, uses_anonymous_args = 0
 2391              		@ link register save eliminated.
 2392 0cec 80B4     		push	{r7}
 2393              	.LCFI96:
 2394              		.cfi_def_cfa_offset 4
 2395              		.cfi_offset 7, -4
 2396 0cee 85B0     		sub	sp, sp, #20
 2397              	.LCFI97:
 2398              		.cfi_def_cfa_offset 24
 2399 0cf0 00AF     		add	r7, sp, #0
 2400              	.LCFI98:
 2401              		.cfi_def_cfa_register 7
 2402 0cf2 7860     		str	r0, [r7, #4]
 2403 0cf4 0B46     		mov	r3, r1
 2404 0cf6 7B80     		strh	r3, [r7, #2]	@ movhi
1320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2405              		.loc 1 1320 0
 2406 0cf8 4FF00003 		mov	r3, #0
 2407 0cfc FB81     		strh	r3, [r7, #14]	@ movhi
1321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2408              		.loc 1 1326 0
 2409 0cfe 7B68     		ldr	r3, [r7, #4]
 2410 0d00 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2411 0d02 FB81     		strh	r3, [r7, #14]	@ movhi
1327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 2412              		.loc 1 1329 0
 2413 0d04 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2414 0d06 23F40063 		bic	r3, r3, #2048
 2415 0d0a FB81     		strh	r3, [r7, #14]	@ movhi
1330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 2416              		.loc 1 1332 0
 2417 0d0c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2418 0d0e 4FEA0323 		lsl	r3, r3, #8
 2419 0d12 9AB2     		uxth	r2, r3
 2420 0d14 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2421 0d16 1343     		orrs	r3, r3, r2
 2422 0d18 FB81     		strh	r3, [r7, #14]	@ movhi
1333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2423              		.loc 1 1335 0
 2424 0d1a 7B68     		ldr	r3, [r7, #4]
 2425 0d1c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2426 0d1e 9A83     		strh	r2, [r3, #28]	@ movhi
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2427              		.loc 1 1336 0
 2428 0d20 07F11407 		add	r7, r7, #20
 2429 0d24 BD46     		mov	sp, r7
 2430 0d26 80BC     		pop	{r7}
 2431 0d28 7047     		bx	lr
 2432              		.cfi_endproc
 2433              	.LFE142:
 2435 0d2a 00BF     		.align	2
 2436              		.global	TIM_OC1FastConfig
 2437              		.thumb
 2438              		.thumb_func
 2440              	TIM_OC1FastConfig:
 2441              	.LFB143:
1337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2442              		.loc 1 1348 0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 16
 2445              		@ frame_needed = 1, uses_anonymous_args = 0
 2446              		@ link register save eliminated.
 2447 0d2c 80B4     		push	{r7}
 2448              	.LCFI99:
 2449              		.cfi_def_cfa_offset 4
 2450              		.cfi_offset 7, -4
 2451 0d2e 85B0     		sub	sp, sp, #20
 2452              	.LCFI100:
 2453              		.cfi_def_cfa_offset 24
 2454 0d30 00AF     		add	r7, sp, #0
 2455              	.LCFI101:
 2456              		.cfi_def_cfa_register 7
 2457 0d32 7860     		str	r0, [r7, #4]
 2458 0d34 0B46     		mov	r3, r1
 2459 0d36 7B80     		strh	r3, [r7, #2]	@ movhi
1349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2460              		.loc 1 1349 0
 2461 0d38 4FF00003 		mov	r3, #0
 2462 0d3c FB81     		strh	r3, [r7, #14]	@ movhi
1350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2463              		.loc 1 1356 0
 2464 0d3e 7B68     		ldr	r3, [r7, #4]
 2465 0d40 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2466 0d42 FB81     		strh	r3, [r7, #14]	@ movhi
1357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 2467              		.loc 1 1359 0
 2468 0d44 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2469 0d46 23F00403 		bic	r3, r3, #4
 2470 0d4a FB81     		strh	r3, [r7, #14]	@ movhi
1360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 2471              		.loc 1 1362 0
 2472 0d4c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2473 0d4e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2474 0d50 1343     		orrs	r3, r3, r2
 2475 0d52 FB81     		strh	r3, [r7, #14]	@ movhi
1363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2476              		.loc 1 1365 0
 2477 0d54 7B68     		ldr	r3, [r7, #4]
 2478 0d56 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2479 0d58 1A83     		strh	r2, [r3, #24]	@ movhi
1366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2480              		.loc 1 1366 0
 2481 0d5a 07F11407 		add	r7, r7, #20
 2482 0d5e BD46     		mov	sp, r7
 2483 0d60 80BC     		pop	{r7}
 2484 0d62 7047     		bx	lr
 2485              		.cfi_endproc
 2486              	.LFE143:
 2488              		.align	2
 2489              		.global	TIM_OC2FastConfig
 2490              		.thumb
 2491              		.thumb_func
 2493              	TIM_OC2FastConfig:
 2494              	.LFB144:
1367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2495              		.loc 1 1379 0
 2496              		.cfi_startproc
 2497              		@ args = 0, pretend = 0, frame = 16
 2498              		@ frame_needed = 1, uses_anonymous_args = 0
 2499              		@ link register save eliminated.
 2500 0d64 80B4     		push	{r7}
 2501              	.LCFI102:
 2502              		.cfi_def_cfa_offset 4
 2503              		.cfi_offset 7, -4
 2504 0d66 85B0     		sub	sp, sp, #20
 2505              	.LCFI103:
 2506              		.cfi_def_cfa_offset 24
 2507 0d68 00AF     		add	r7, sp, #0
 2508              	.LCFI104:
 2509              		.cfi_def_cfa_register 7
 2510 0d6a 7860     		str	r0, [r7, #4]
 2511 0d6c 0B46     		mov	r3, r1
 2512 0d6e 7B80     		strh	r3, [r7, #2]	@ movhi
1380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2513              		.loc 1 1380 0
 2514 0d70 4FF00003 		mov	r3, #0
 2515 0d74 FB81     		strh	r3, [r7, #14]	@ movhi
1381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2516              		.loc 1 1387 0
 2517 0d76 7B68     		ldr	r3, [r7, #4]
 2518 0d78 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2519 0d7a FB81     		strh	r3, [r7, #14]	@ movhi
1388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 2520              		.loc 1 1390 0
 2521 0d7c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2522 0d7e 23F48063 		bic	r3, r3, #1024
 2523 0d82 FB81     		strh	r3, [r7, #14]	@ movhi
1391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2524              		.loc 1 1393 0
 2525 0d84 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2526 0d86 4FEA0323 		lsl	r3, r3, #8
 2527 0d8a 9AB2     		uxth	r2, r3
 2528 0d8c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2529 0d8e 1343     		orrs	r3, r3, r2
 2530 0d90 FB81     		strh	r3, [r7, #14]	@ movhi
1394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2531              		.loc 1 1396 0
 2532 0d92 7B68     		ldr	r3, [r7, #4]
 2533 0d94 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2534 0d96 1A83     		strh	r2, [r3, #24]	@ movhi
1397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2535              		.loc 1 1397 0
 2536 0d98 07F11407 		add	r7, r7, #20
 2537 0d9c BD46     		mov	sp, r7
 2538 0d9e 80BC     		pop	{r7}
 2539 0da0 7047     		bx	lr
 2540              		.cfi_endproc
 2541              	.LFE144:
 2543 0da2 00BF     		.align	2
 2544              		.global	TIM_OC3FastConfig
 2545              		.thumb
 2546              		.thumb_func
 2548              	TIM_OC3FastConfig:
 2549              	.LFB145:
1398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2550              		.loc 1 1409 0
 2551              		.cfi_startproc
 2552              		@ args = 0, pretend = 0, frame = 16
 2553              		@ frame_needed = 1, uses_anonymous_args = 0
 2554              		@ link register save eliminated.
 2555 0da4 80B4     		push	{r7}
 2556              	.LCFI105:
 2557              		.cfi_def_cfa_offset 4
 2558              		.cfi_offset 7, -4
 2559 0da6 85B0     		sub	sp, sp, #20
 2560              	.LCFI106:
 2561              		.cfi_def_cfa_offset 24
 2562 0da8 00AF     		add	r7, sp, #0
 2563              	.LCFI107:
 2564              		.cfi_def_cfa_register 7
 2565 0daa 7860     		str	r0, [r7, #4]
 2566 0dac 0B46     		mov	r3, r1
 2567 0dae 7B80     		strh	r3, [r7, #2]	@ movhi
1410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2568              		.loc 1 1410 0
 2569 0db0 4FF00003 		mov	r3, #0
 2570 0db4 FB81     		strh	r3, [r7, #14]	@ movhi
1411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2571              		.loc 1 1417 0
 2572 0db6 7B68     		ldr	r3, [r7, #4]
 2573 0db8 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2574 0dba FB81     		strh	r3, [r7, #14]	@ movhi
1418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 2575              		.loc 1 1420 0
 2576 0dbc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2577 0dbe 23F00403 		bic	r3, r3, #4
 2578 0dc2 FB81     		strh	r3, [r7, #14]	@ movhi
1421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2579              		.loc 1 1423 0
 2580 0dc4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2581 0dc6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2582 0dc8 1343     		orrs	r3, r3, r2
 2583 0dca FB81     		strh	r3, [r7, #14]	@ movhi
1424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2584              		.loc 1 1426 0
 2585 0dcc 7B68     		ldr	r3, [r7, #4]
 2586 0dce FA89     		ldrh	r2, [r7, #14]	@ movhi
 2587 0dd0 9A83     		strh	r2, [r3, #28]	@ movhi
1427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2588              		.loc 1 1427 0
 2589 0dd2 07F11407 		add	r7, r7, #20
 2590 0dd6 BD46     		mov	sp, r7
 2591 0dd8 80BC     		pop	{r7}
 2592 0dda 7047     		bx	lr
 2593              		.cfi_endproc
 2594              	.LFE145:
 2596              		.align	2
 2597              		.global	TIM_OC4FastConfig
 2598              		.thumb
 2599              		.thumb_func
 2601              	TIM_OC4FastConfig:
 2602              	.LFB146:
1428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2603              		.loc 1 1439 0
 2604              		.cfi_startproc
 2605              		@ args = 0, pretend = 0, frame = 16
 2606              		@ frame_needed = 1, uses_anonymous_args = 0
 2607              		@ link register save eliminated.
 2608 0ddc 80B4     		push	{r7}
 2609              	.LCFI108:
 2610              		.cfi_def_cfa_offset 4
 2611              		.cfi_offset 7, -4
 2612 0dde 85B0     		sub	sp, sp, #20
 2613              	.LCFI109:
 2614              		.cfi_def_cfa_offset 24
 2615 0de0 00AF     		add	r7, sp, #0
 2616              	.LCFI110:
 2617              		.cfi_def_cfa_register 7
 2618 0de2 7860     		str	r0, [r7, #4]
 2619 0de4 0B46     		mov	r3, r1
 2620 0de6 7B80     		strh	r3, [r7, #2]	@ movhi
1440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2621              		.loc 1 1440 0
 2622 0de8 4FF00003 		mov	r3, #0
 2623 0dec FB81     		strh	r3, [r7, #14]	@ movhi
1441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2624              		.loc 1 1447 0
 2625 0dee 7B68     		ldr	r3, [r7, #4]
 2626 0df0 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2627 0df2 FB81     		strh	r3, [r7, #14]	@ movhi
1448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 2628              		.loc 1 1450 0
 2629 0df4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2630 0df6 23F48063 		bic	r3, r3, #1024
 2631 0dfa FB81     		strh	r3, [r7, #14]	@ movhi
1451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2632              		.loc 1 1453 0
 2633 0dfc 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2634 0dfe 4FEA0323 		lsl	r3, r3, #8
 2635 0e02 9AB2     		uxth	r2, r3
 2636 0e04 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2637 0e06 1343     		orrs	r3, r3, r2
 2638 0e08 FB81     		strh	r3, [r7, #14]	@ movhi
1454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2639              		.loc 1 1456 0
 2640 0e0a 7B68     		ldr	r3, [r7, #4]
 2641 0e0c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2642 0e0e 9A83     		strh	r2, [r3, #28]	@ movhi
1457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2643              		.loc 1 1457 0
 2644 0e10 07F11407 		add	r7, r7, #20
 2645 0e14 BD46     		mov	sp, r7
 2646 0e16 80BC     		pop	{r7}
 2647 0e18 7047     		bx	lr
 2648              		.cfi_endproc
 2649              	.LFE146:
 2651 0e1a 00BF     		.align	2
 2652              		.global	TIM_ClearOC1Ref
 2653              		.thumb
 2654              		.thumb_func
 2656              	TIM_ClearOC1Ref:
 2657              	.LFB147:
1458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2658              		.loc 1 1469 0
 2659              		.cfi_startproc
 2660              		@ args = 0, pretend = 0, frame = 16
 2661              		@ frame_needed = 1, uses_anonymous_args = 0
 2662              		@ link register save eliminated.
 2663 0e1c 80B4     		push	{r7}
 2664              	.LCFI111:
 2665              		.cfi_def_cfa_offset 4
 2666              		.cfi_offset 7, -4
 2667 0e1e 85B0     		sub	sp, sp, #20
 2668              	.LCFI112:
 2669              		.cfi_def_cfa_offset 24
 2670 0e20 00AF     		add	r7, sp, #0
 2671              	.LCFI113:
 2672              		.cfi_def_cfa_register 7
 2673 0e22 7860     		str	r0, [r7, #4]
 2674 0e24 0B46     		mov	r3, r1
 2675 0e26 7B80     		strh	r3, [r7, #2]	@ movhi
1470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2676              		.loc 1 1470 0
 2677 0e28 4FF00003 		mov	r3, #0
 2678 0e2c FB81     		strh	r3, [r7, #14]	@ movhi
1471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2679              		.loc 1 1476 0
 2680 0e2e 7B68     		ldr	r3, [r7, #4]
 2681 0e30 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2682 0e32 FB81     		strh	r3, [r7, #14]	@ movhi
1477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 2683              		.loc 1 1479 0
 2684 0e34 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2685 0e36 23F08003 		bic	r3, r3, #128
 2686 0e3a FB81     		strh	r3, [r7, #14]	@ movhi
1480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2687              		.loc 1 1482 0
 2688 0e3c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2689 0e3e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2690 0e40 1343     		orrs	r3, r3, r2
 2691 0e42 FB81     		strh	r3, [r7, #14]	@ movhi
1483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2692              		.loc 1 1485 0
 2693 0e44 7B68     		ldr	r3, [r7, #4]
 2694 0e46 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2695 0e48 1A83     		strh	r2, [r3, #24]	@ movhi
1486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2696              		.loc 1 1486 0
 2697 0e4a 07F11407 		add	r7, r7, #20
 2698 0e4e BD46     		mov	sp, r7
 2699 0e50 80BC     		pop	{r7}
 2700 0e52 7047     		bx	lr
 2701              		.cfi_endproc
 2702              	.LFE147:
 2704              		.align	2
 2705              		.global	TIM_ClearOC2Ref
 2706              		.thumb
 2707              		.thumb_func
 2709              	TIM_ClearOC2Ref:
 2710              	.LFB148:
1487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2711              		.loc 1 1499 0
 2712              		.cfi_startproc
 2713              		@ args = 0, pretend = 0, frame = 16
 2714              		@ frame_needed = 1, uses_anonymous_args = 0
 2715              		@ link register save eliminated.
 2716 0e54 80B4     		push	{r7}
 2717              	.LCFI114:
 2718              		.cfi_def_cfa_offset 4
 2719              		.cfi_offset 7, -4
 2720 0e56 85B0     		sub	sp, sp, #20
 2721              	.LCFI115:
 2722              		.cfi_def_cfa_offset 24
 2723 0e58 00AF     		add	r7, sp, #0
 2724              	.LCFI116:
 2725              		.cfi_def_cfa_register 7
 2726 0e5a 7860     		str	r0, [r7, #4]
 2727 0e5c 0B46     		mov	r3, r1
 2728 0e5e 7B80     		strh	r3, [r7, #2]	@ movhi
1500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2729              		.loc 1 1500 0
 2730 0e60 4FF00003 		mov	r3, #0
 2731 0e64 FB81     		strh	r3, [r7, #14]	@ movhi
1501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2732              		.loc 1 1506 0
 2733 0e66 7B68     		ldr	r3, [r7, #4]
 2734 0e68 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2735 0e6a FB81     		strh	r3, [r7, #14]	@ movhi
1507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2736              		.loc 1 1509 0
 2737 0e6c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2738 0e6e 4FEA4343 		lsl	r3, r3, #17
 2739 0e72 4FEA5343 		lsr	r3, r3, #17
 2740 0e76 FB81     		strh	r3, [r7, #14]	@ movhi
1510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2741              		.loc 1 1512 0
 2742 0e78 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2743 0e7a 4FEA0323 		lsl	r3, r3, #8
 2744 0e7e 9AB2     		uxth	r2, r3
 2745 0e80 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2746 0e82 1343     		orrs	r3, r3, r2
 2747 0e84 FB81     		strh	r3, [r7, #14]	@ movhi
1513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2748              		.loc 1 1515 0
 2749 0e86 7B68     		ldr	r3, [r7, #4]
 2750 0e88 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2751 0e8a 1A83     		strh	r2, [r3, #24]	@ movhi
1516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2752              		.loc 1 1516 0
 2753 0e8c 07F11407 		add	r7, r7, #20
 2754 0e90 BD46     		mov	sp, r7
 2755 0e92 80BC     		pop	{r7}
 2756 0e94 7047     		bx	lr
 2757              		.cfi_endproc
 2758              	.LFE148:
 2760 0e96 00BF     		.align	2
 2761              		.global	TIM_ClearOC3Ref
 2762              		.thumb
 2763              		.thumb_func
 2765              	TIM_ClearOC3Ref:
 2766              	.LFB149:
1517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2767              		.loc 1 1528 0
 2768              		.cfi_startproc
 2769              		@ args = 0, pretend = 0, frame = 16
 2770              		@ frame_needed = 1, uses_anonymous_args = 0
 2771              		@ link register save eliminated.
 2772 0e98 80B4     		push	{r7}
 2773              	.LCFI117:
 2774              		.cfi_def_cfa_offset 4
 2775              		.cfi_offset 7, -4
 2776 0e9a 85B0     		sub	sp, sp, #20
 2777              	.LCFI118:
 2778              		.cfi_def_cfa_offset 24
 2779 0e9c 00AF     		add	r7, sp, #0
 2780              	.LCFI119:
 2781              		.cfi_def_cfa_register 7
 2782 0e9e 7860     		str	r0, [r7, #4]
 2783 0ea0 0B46     		mov	r3, r1
 2784 0ea2 7B80     		strh	r3, [r7, #2]	@ movhi
1529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2785              		.loc 1 1529 0
 2786 0ea4 4FF00003 		mov	r3, #0
 2787 0ea8 FB81     		strh	r3, [r7, #14]	@ movhi
1530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2788              		.loc 1 1535 0
 2789 0eaa 7B68     		ldr	r3, [r7, #4]
 2790 0eac 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2791 0eae FB81     		strh	r3, [r7, #14]	@ movhi
1536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2792              		.loc 1 1538 0
 2793 0eb0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2794 0eb2 23F08003 		bic	r3, r3, #128
 2795 0eb6 FB81     		strh	r3, [r7, #14]	@ movhi
1539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2796              		.loc 1 1541 0
 2797 0eb8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2798 0eba 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2799 0ebc 1343     		orrs	r3, r3, r2
 2800 0ebe FB81     		strh	r3, [r7, #14]	@ movhi
1542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2801              		.loc 1 1544 0
 2802 0ec0 7B68     		ldr	r3, [r7, #4]
 2803 0ec2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2804 0ec4 9A83     		strh	r2, [r3, #28]	@ movhi
1545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2805              		.loc 1 1545 0
 2806 0ec6 07F11407 		add	r7, r7, #20
 2807 0eca BD46     		mov	sp, r7
 2808 0ecc 80BC     		pop	{r7}
 2809 0ece 7047     		bx	lr
 2810              		.cfi_endproc
 2811              	.LFE149:
 2813              		.align	2
 2814              		.global	TIM_ClearOC4Ref
 2815              		.thumb
 2816              		.thumb_func
 2818              	TIM_ClearOC4Ref:
 2819              	.LFB150:
1546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2820              		.loc 1 1557 0
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 16
 2823              		@ frame_needed = 1, uses_anonymous_args = 0
 2824              		@ link register save eliminated.
 2825 0ed0 80B4     		push	{r7}
 2826              	.LCFI120:
 2827              		.cfi_def_cfa_offset 4
 2828              		.cfi_offset 7, -4
 2829 0ed2 85B0     		sub	sp, sp, #20
 2830              	.LCFI121:
 2831              		.cfi_def_cfa_offset 24
 2832 0ed4 00AF     		add	r7, sp, #0
 2833              	.LCFI122:
 2834              		.cfi_def_cfa_register 7
 2835 0ed6 7860     		str	r0, [r7, #4]
 2836 0ed8 0B46     		mov	r3, r1
 2837 0eda 7B80     		strh	r3, [r7, #2]	@ movhi
1558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2838              		.loc 1 1558 0
 2839 0edc 4FF00003 		mov	r3, #0
 2840 0ee0 FB81     		strh	r3, [r7, #14]	@ movhi
1559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2841              		.loc 1 1564 0
 2842 0ee2 7B68     		ldr	r3, [r7, #4]
 2843 0ee4 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2844 0ee6 FB81     		strh	r3, [r7, #14]	@ movhi
1565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2845              		.loc 1 1567 0
 2846 0ee8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2847 0eea 4FEA4343 		lsl	r3, r3, #17
 2848 0eee 4FEA5343 		lsr	r3, r3, #17
 2849 0ef2 FB81     		strh	r3, [r7, #14]	@ movhi
1568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2850              		.loc 1 1570 0
 2851 0ef4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2852 0ef6 4FEA0323 		lsl	r3, r3, #8
 2853 0efa 9AB2     		uxth	r2, r3
 2854 0efc FB89     		ldrh	r3, [r7, #14]	@ movhi
 2855 0efe 1343     		orrs	r3, r3, r2
 2856 0f00 FB81     		strh	r3, [r7, #14]	@ movhi
1571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2857              		.loc 1 1573 0
 2858 0f02 7B68     		ldr	r3, [r7, #4]
 2859 0f04 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2860 0f06 9A83     		strh	r2, [r3, #28]	@ movhi
1574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2861              		.loc 1 1574 0
 2862 0f08 07F11407 		add	r7, r7, #20
 2863 0f0c BD46     		mov	sp, r7
 2864 0f0e 80BC     		pop	{r7}
 2865 0f10 7047     		bx	lr
 2866              		.cfi_endproc
 2867              	.LFE150:
 2869 0f12 00BF     		.align	2
 2870              		.global	TIM_OC1PolarityConfig
 2871              		.thumb
 2872              		.thumb_func
 2874              	TIM_OC1PolarityConfig:
 2875              	.LFB151:
1575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2876              		.loc 1 1586 0
 2877              		.cfi_startproc
 2878              		@ args = 0, pretend = 0, frame = 16
 2879              		@ frame_needed = 1, uses_anonymous_args = 0
 2880              		@ link register save eliminated.
 2881 0f14 80B4     		push	{r7}
 2882              	.LCFI123:
 2883              		.cfi_def_cfa_offset 4
 2884              		.cfi_offset 7, -4
 2885 0f16 85B0     		sub	sp, sp, #20
 2886              	.LCFI124:
 2887              		.cfi_def_cfa_offset 24
 2888 0f18 00AF     		add	r7, sp, #0
 2889              	.LCFI125:
 2890              		.cfi_def_cfa_register 7
 2891 0f1a 7860     		str	r0, [r7, #4]
 2892 0f1c 0B46     		mov	r3, r1
 2893 0f1e 7B80     		strh	r3, [r7, #2]	@ movhi
1587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2894              		.loc 1 1587 0
 2895 0f20 4FF00003 		mov	r3, #0
 2896 0f24 FB81     		strh	r3, [r7, #14]	@ movhi
1588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2897              		.loc 1 1593 0
 2898 0f26 7B68     		ldr	r3, [r7, #4]
 2899 0f28 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2900 0f2a FB81     		strh	r3, [r7, #14]	@ movhi
1594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2901              		.loc 1 1596 0
 2902 0f2c FB89     		ldrh	r3, [r7, #14]	@ movhi
 2903 0f2e 23F00203 		bic	r3, r3, #2
 2904 0f32 FB81     		strh	r3, [r7, #14]	@ movhi
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2905              		.loc 1 1597 0
 2906 0f34 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2907 0f36 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2908 0f38 1343     		orrs	r3, r3, r2
 2909 0f3a FB81     		strh	r3, [r7, #14]	@ movhi
1598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2910              		.loc 1 1600 0
 2911 0f3c 7B68     		ldr	r3, [r7, #4]
 2912 0f3e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2913 0f40 1A84     		strh	r2, [r3, #32]	@ movhi
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2914              		.loc 1 1601 0
 2915 0f42 07F11407 		add	r7, r7, #20
 2916 0f46 BD46     		mov	sp, r7
 2917 0f48 80BC     		pop	{r7}
 2918 0f4a 7047     		bx	lr
 2919              		.cfi_endproc
 2920              	.LFE151:
 2922              		.align	2
 2923              		.global	TIM_OC1NPolarityConfig
 2924              		.thumb
 2925              		.thumb_func
 2927              	TIM_OC1NPolarityConfig:
 2928              	.LFB152:
1602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2929              		.loc 1 1613 0
 2930              		.cfi_startproc
 2931              		@ args = 0, pretend = 0, frame = 16
 2932              		@ frame_needed = 1, uses_anonymous_args = 0
 2933              		@ link register save eliminated.
 2934 0f4c 80B4     		push	{r7}
 2935              	.LCFI126:
 2936              		.cfi_def_cfa_offset 4
 2937              		.cfi_offset 7, -4
 2938 0f4e 85B0     		sub	sp, sp, #20
 2939              	.LCFI127:
 2940              		.cfi_def_cfa_offset 24
 2941 0f50 00AF     		add	r7, sp, #0
 2942              	.LCFI128:
 2943              		.cfi_def_cfa_register 7
 2944 0f52 7860     		str	r0, [r7, #4]
 2945 0f54 0B46     		mov	r3, r1
 2946 0f56 7B80     		strh	r3, [r7, #2]	@ movhi
1614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2947              		.loc 1 1614 0
 2948 0f58 4FF00003 		mov	r3, #0
 2949 0f5c FB81     		strh	r3, [r7, #14]	@ movhi
1615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2950              		.loc 1 1619 0
 2951 0f5e 7B68     		ldr	r3, [r7, #4]
 2952 0f60 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2953 0f62 FB81     		strh	r3, [r7, #14]	@ movhi
1620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 2954              		.loc 1 1622 0
 2955 0f64 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2956 0f66 23F00803 		bic	r3, r3, #8
 2957 0f6a FB81     		strh	r3, [r7, #14]	@ movhi
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2958              		.loc 1 1623 0
 2959 0f6c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2960 0f6e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2961 0f70 1343     		orrs	r3, r3, r2
 2962 0f72 FB81     		strh	r3, [r7, #14]	@ movhi
1624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2963              		.loc 1 1626 0
 2964 0f74 7B68     		ldr	r3, [r7, #4]
 2965 0f76 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2966 0f78 1A84     		strh	r2, [r3, #32]	@ movhi
1627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2967              		.loc 1 1627 0
 2968 0f7a 07F11407 		add	r7, r7, #20
 2969 0f7e BD46     		mov	sp, r7
 2970 0f80 80BC     		pop	{r7}
 2971 0f82 7047     		bx	lr
 2972              		.cfi_endproc
 2973              	.LFE152:
 2975              		.align	2
 2976              		.global	TIM_OC2PolarityConfig
 2977              		.thumb
 2978              		.thumb_func
 2980              	TIM_OC2PolarityConfig:
 2981              	.LFB153:
1628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2982              		.loc 1 1640 0
 2983              		.cfi_startproc
 2984              		@ args = 0, pretend = 0, frame = 16
 2985              		@ frame_needed = 1, uses_anonymous_args = 0
 2986              		@ link register save eliminated.
 2987 0f84 80B4     		push	{r7}
 2988              	.LCFI129:
 2989              		.cfi_def_cfa_offset 4
 2990              		.cfi_offset 7, -4
 2991 0f86 85B0     		sub	sp, sp, #20
 2992              	.LCFI130:
 2993              		.cfi_def_cfa_offset 24
 2994 0f88 00AF     		add	r7, sp, #0
 2995              	.LCFI131:
 2996              		.cfi_def_cfa_register 7
 2997 0f8a 7860     		str	r0, [r7, #4]
 2998 0f8c 0B46     		mov	r3, r1
 2999 0f8e 7B80     		strh	r3, [r7, #2]	@ movhi
1641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3000              		.loc 1 1641 0
 3001 0f90 4FF00003 		mov	r3, #0
 3002 0f94 FB81     		strh	r3, [r7, #14]	@ movhi
1642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3003              		.loc 1 1647 0
 3004 0f96 7B68     		ldr	r3, [r7, #4]
 3005 0f98 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3006 0f9a FB81     		strh	r3, [r7, #14]	@ movhi
1648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 3007              		.loc 1 1650 0
 3008 0f9c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3009 0f9e 23F02003 		bic	r3, r3, #32
 3010 0fa2 FB81     		strh	r3, [r7, #14]	@ movhi
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3011              		.loc 1 1651 0
 3012 0fa4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3013 0fa6 4FEA0313 		lsl	r3, r3, #4
 3014 0faa 9AB2     		uxth	r2, r3
 3015 0fac FB89     		ldrh	r3, [r7, #14]	@ movhi
 3016 0fae 1343     		orrs	r3, r3, r2
 3017 0fb0 FB81     		strh	r3, [r7, #14]	@ movhi
1652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3018              		.loc 1 1654 0
 3019 0fb2 7B68     		ldr	r3, [r7, #4]
 3020 0fb4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3021 0fb6 1A84     		strh	r2, [r3, #32]	@ movhi
1655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3022              		.loc 1 1655 0
 3023 0fb8 07F11407 		add	r7, r7, #20
 3024 0fbc BD46     		mov	sp, r7
 3025 0fbe 80BC     		pop	{r7}
 3026 0fc0 7047     		bx	lr
 3027              		.cfi_endproc
 3028              	.LFE153:
 3030 0fc2 00BF     		.align	2
 3031              		.global	TIM_OC2NPolarityConfig
 3032              		.thumb
 3033              		.thumb_func
 3035              	TIM_OC2NPolarityConfig:
 3036              	.LFB154:
1656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3037              		.loc 1 1667 0
 3038              		.cfi_startproc
 3039              		@ args = 0, pretend = 0, frame = 16
 3040              		@ frame_needed = 1, uses_anonymous_args = 0
 3041              		@ link register save eliminated.
 3042 0fc4 80B4     		push	{r7}
 3043              	.LCFI132:
 3044              		.cfi_def_cfa_offset 4
 3045              		.cfi_offset 7, -4
 3046 0fc6 85B0     		sub	sp, sp, #20
 3047              	.LCFI133:
 3048              		.cfi_def_cfa_offset 24
 3049 0fc8 00AF     		add	r7, sp, #0
 3050              	.LCFI134:
 3051              		.cfi_def_cfa_register 7
 3052 0fca 7860     		str	r0, [r7, #4]
 3053 0fcc 0B46     		mov	r3, r1
 3054 0fce 7B80     		strh	r3, [r7, #2]	@ movhi
1668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3055              		.loc 1 1668 0
 3056 0fd0 4FF00003 		mov	r3, #0
 3057 0fd4 FB81     		strh	r3, [r7, #14]	@ movhi
1669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3058              		.loc 1 1674 0
 3059 0fd6 7B68     		ldr	r3, [r7, #4]
 3060 0fd8 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3061 0fda FB81     		strh	r3, [r7, #14]	@ movhi
1675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 3062              		.loc 1 1677 0
 3063 0fdc FB89     		ldrh	r3, [r7, #14]	@ movhi
 3064 0fde 23F08003 		bic	r3, r3, #128
 3065 0fe2 FB81     		strh	r3, [r7, #14]	@ movhi
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3066              		.loc 1 1678 0
 3067 0fe4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3068 0fe6 4FEA0313 		lsl	r3, r3, #4
 3069 0fea 9AB2     		uxth	r2, r3
 3070 0fec FB89     		ldrh	r3, [r7, #14]	@ movhi
 3071 0fee 1343     		orrs	r3, r3, r2
 3072 0ff0 FB81     		strh	r3, [r7, #14]	@ movhi
1679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3073              		.loc 1 1681 0
 3074 0ff2 7B68     		ldr	r3, [r7, #4]
 3075 0ff4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3076 0ff6 1A84     		strh	r2, [r3, #32]	@ movhi
1682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3077              		.loc 1 1682 0
 3078 0ff8 07F11407 		add	r7, r7, #20
 3079 0ffc BD46     		mov	sp, r7
 3080 0ffe 80BC     		pop	{r7}
 3081 1000 7047     		bx	lr
 3082              		.cfi_endproc
 3083              	.LFE154:
 3085 1002 00BF     		.align	2
 3086              		.global	TIM_OC3PolarityConfig
 3087              		.thumb
 3088              		.thumb_func
 3090              	TIM_OC3PolarityConfig:
 3091              	.LFB155:
1683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3092              		.loc 1 1694 0
 3093              		.cfi_startproc
 3094              		@ args = 0, pretend = 0, frame = 16
 3095              		@ frame_needed = 1, uses_anonymous_args = 0
 3096              		@ link register save eliminated.
 3097 1004 80B4     		push	{r7}
 3098              	.LCFI135:
 3099              		.cfi_def_cfa_offset 4
 3100              		.cfi_offset 7, -4
 3101 1006 85B0     		sub	sp, sp, #20
 3102              	.LCFI136:
 3103              		.cfi_def_cfa_offset 24
 3104 1008 00AF     		add	r7, sp, #0
 3105              	.LCFI137:
 3106              		.cfi_def_cfa_register 7
 3107 100a 7860     		str	r0, [r7, #4]
 3108 100c 0B46     		mov	r3, r1
 3109 100e 7B80     		strh	r3, [r7, #2]	@ movhi
1695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3110              		.loc 1 1695 0
 3111 1010 4FF00003 		mov	r3, #0
 3112 1014 FB81     		strh	r3, [r7, #14]	@ movhi
1696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3113              		.loc 1 1701 0
 3114 1016 7B68     		ldr	r3, [r7, #4]
 3115 1018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3116 101a FB81     		strh	r3, [r7, #14]	@ movhi
1702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 3117              		.loc 1 1704 0
 3118 101c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3119 101e 23F40073 		bic	r3, r3, #512
 3120 1022 FB81     		strh	r3, [r7, #14]	@ movhi
1705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3121              		.loc 1 1705 0
 3122 1024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3123 1026 4FEA0323 		lsl	r3, r3, #8
 3124 102a 9AB2     		uxth	r2, r3
 3125 102c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3126 102e 1343     		orrs	r3, r3, r2
 3127 1030 FB81     		strh	r3, [r7, #14]	@ movhi
1706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3128              		.loc 1 1708 0
 3129 1032 7B68     		ldr	r3, [r7, #4]
 3130 1034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3131 1036 1A84     		strh	r2, [r3, #32]	@ movhi
1709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3132              		.loc 1 1709 0
 3133 1038 07F11407 		add	r7, r7, #20
 3134 103c BD46     		mov	sp, r7
 3135 103e 80BC     		pop	{r7}
 3136 1040 7047     		bx	lr
 3137              		.cfi_endproc
 3138              	.LFE155:
 3140 1042 00BF     		.align	2
 3141              		.global	TIM_OC3NPolarityConfig
 3142              		.thumb
 3143              		.thumb_func
 3145              	TIM_OC3NPolarityConfig:
 3146              	.LFB156:
1710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3147              		.loc 1 1721 0
 3148              		.cfi_startproc
 3149              		@ args = 0, pretend = 0, frame = 16
 3150              		@ frame_needed = 1, uses_anonymous_args = 0
 3151              		@ link register save eliminated.
 3152 1044 80B4     		push	{r7}
 3153              	.LCFI138:
 3154              		.cfi_def_cfa_offset 4
 3155              		.cfi_offset 7, -4
 3156 1046 85B0     		sub	sp, sp, #20
 3157              	.LCFI139:
 3158              		.cfi_def_cfa_offset 24
 3159 1048 00AF     		add	r7, sp, #0
 3160              	.LCFI140:
 3161              		.cfi_def_cfa_register 7
 3162 104a 7860     		str	r0, [r7, #4]
 3163 104c 0B46     		mov	r3, r1
 3164 104e 7B80     		strh	r3, [r7, #2]	@ movhi
1722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3165              		.loc 1 1722 0
 3166 1050 4FF00003 		mov	r3, #0
 3167 1054 FB81     		strh	r3, [r7, #14]	@ movhi
1723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3168              		.loc 1 1728 0
 3169 1056 7B68     		ldr	r3, [r7, #4]
 3170 1058 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3171 105a FB81     		strh	r3, [r7, #14]	@ movhi
1729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 3172              		.loc 1 1731 0
 3173 105c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3174 105e 23F40063 		bic	r3, r3, #2048
 3175 1062 FB81     		strh	r3, [r7, #14]	@ movhi
1732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3176              		.loc 1 1732 0
 3177 1064 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3178 1066 4FEA0323 		lsl	r3, r3, #8
 3179 106a 9AB2     		uxth	r2, r3
 3180 106c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3181 106e 1343     		orrs	r3, r3, r2
 3182 1070 FB81     		strh	r3, [r7, #14]	@ movhi
1733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3183              		.loc 1 1735 0
 3184 1072 7B68     		ldr	r3, [r7, #4]
 3185 1074 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3186 1076 1A84     		strh	r2, [r3, #32]	@ movhi
1736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3187              		.loc 1 1736 0
 3188 1078 07F11407 		add	r7, r7, #20
 3189 107c BD46     		mov	sp, r7
 3190 107e 80BC     		pop	{r7}
 3191 1080 7047     		bx	lr
 3192              		.cfi_endproc
 3193              	.LFE156:
 3195 1082 00BF     		.align	2
 3196              		.global	TIM_OC4PolarityConfig
 3197              		.thumb
 3198              		.thumb_func
 3200              	TIM_OC4PolarityConfig:
 3201              	.LFB157:
1737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3202              		.loc 1 1748 0
 3203              		.cfi_startproc
 3204              		@ args = 0, pretend = 0, frame = 16
 3205              		@ frame_needed = 1, uses_anonymous_args = 0
 3206              		@ link register save eliminated.
 3207 1084 80B4     		push	{r7}
 3208              	.LCFI141:
 3209              		.cfi_def_cfa_offset 4
 3210              		.cfi_offset 7, -4
 3211 1086 85B0     		sub	sp, sp, #20
 3212              	.LCFI142:
 3213              		.cfi_def_cfa_offset 24
 3214 1088 00AF     		add	r7, sp, #0
 3215              	.LCFI143:
 3216              		.cfi_def_cfa_register 7
 3217 108a 7860     		str	r0, [r7, #4]
 3218 108c 0B46     		mov	r3, r1
 3219 108e 7B80     		strh	r3, [r7, #2]	@ movhi
1749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3220              		.loc 1 1749 0
 3221 1090 4FF00003 		mov	r3, #0
 3222 1094 FB81     		strh	r3, [r7, #14]	@ movhi
1750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3223              		.loc 1 1755 0
 3224 1096 7B68     		ldr	r3, [r7, #4]
 3225 1098 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3226 109a FB81     		strh	r3, [r7, #14]	@ movhi
1756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 3227              		.loc 1 1758 0
 3228 109c FB89     		ldrh	r3, [r7, #14]	@ movhi
 3229 109e 23F40053 		bic	r3, r3, #8192
 3230 10a2 FB81     		strh	r3, [r7, #14]	@ movhi
1759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3231              		.loc 1 1759 0
 3232 10a4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3233 10a6 4FEA0333 		lsl	r3, r3, #12
 3234 10aa 9AB2     		uxth	r2, r3
 3235 10ac FB89     		ldrh	r3, [r7, #14]	@ movhi
 3236 10ae 1343     		orrs	r3, r3, r2
 3237 10b0 FB81     		strh	r3, [r7, #14]	@ movhi
1760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3238              		.loc 1 1762 0
 3239 10b2 7B68     		ldr	r3, [r7, #4]
 3240 10b4 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3241 10b6 1A84     		strh	r2, [r3, #32]	@ movhi
1763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3242              		.loc 1 1763 0
 3243 10b8 07F11407 		add	r7, r7, #20
 3244 10bc BD46     		mov	sp, r7
 3245 10be 80BC     		pop	{r7}
 3246 10c0 7047     		bx	lr
 3247              		.cfi_endproc
 3248              	.LFE157:
 3250 10c2 00BF     		.align	2
 3251              		.global	TIM_CCxCmd
 3252              		.thumb
 3253              		.thumb_func
 3255              	TIM_CCxCmd:
 3256              	.LFB158:
1764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3257              		.loc 1 1779 0
 3258              		.cfi_startproc
 3259              		@ args = 0, pretend = 0, frame = 16
 3260              		@ frame_needed = 1, uses_anonymous_args = 0
 3261              		@ link register save eliminated.
 3262 10c4 80B4     		push	{r7}
 3263              	.LCFI144:
 3264              		.cfi_def_cfa_offset 4
 3265              		.cfi_offset 7, -4
 3266 10c6 85B0     		sub	sp, sp, #20
 3267              	.LCFI145:
 3268              		.cfi_def_cfa_offset 24
 3269 10c8 00AF     		add	r7, sp, #0
 3270              	.LCFI146:
 3271              		.cfi_def_cfa_register 7
 3272 10ca 7860     		str	r0, [r7, #4]
 3273 10cc 1346     		mov	r3, r2
 3274 10ce 0A46     		mov	r2, r1	@ movhi
 3275 10d0 7A80     		strh	r2, [r7, #2]	@ movhi
 3276 10d2 3B80     		strh	r3, [r7, #0]	@ movhi
1780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3277              		.loc 1 1780 0
 3278 10d4 4FF00003 		mov	r3, #0
 3279 10d8 FB81     		strh	r3, [r7, #14]	@ movhi
1781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 3280              		.loc 1 1787 0
 3281 10da 7B88     		ldrh	r3, [r7, #2]
 3282 10dc 4FF00102 		mov	r2, #1
 3283 10e0 02FA03F3 		lsl	r3, r2, r3
 3284 10e4 FB81     		strh	r3, [r7, #14]	@ movhi
1788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 3285              		.loc 1 1790 0
 3286 10e6 7B68     		ldr	r3, [r7, #4]
 3287 10e8 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3288 10ea 9AB2     		uxth	r2, r3
 3289 10ec FB89     		ldrh	r3, [r7, #14]	@ movhi
 3290 10ee 6FEA0303 		mvn	r3, r3
 3291 10f2 9BB2     		uxth	r3, r3
 3292 10f4 1340     		ands	r3, r3, r2
 3293 10f6 9AB2     		uxth	r2, r3
 3294 10f8 7B68     		ldr	r3, [r7, #4]
 3295 10fa 1A84     		strh	r2, [r3, #32]	@ movhi
1791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 3296              		.loc 1 1793 0
 3297 10fc 7B68     		ldr	r3, [r7, #4]
 3298 10fe 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3299 1100 9AB2     		uxth	r2, r3
 3300 1102 3988     		ldrh	r1, [r7, #0]
 3301 1104 7B88     		ldrh	r3, [r7, #2]
 3302 1106 01FA03F3 		lsl	r3, r1, r3
 3303 110a 9BB2     		uxth	r3, r3
 3304 110c 1343     		orrs	r3, r3, r2
 3305 110e 9AB2     		uxth	r2, r3
 3306 1110 7B68     		ldr	r3, [r7, #4]
 3307 1112 1A84     		strh	r2, [r3, #32]	@ movhi
1794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3308              		.loc 1 1794 0
 3309 1114 07F11407 		add	r7, r7, #20
 3310 1118 BD46     		mov	sp, r7
 3311 111a 80BC     		pop	{r7}
 3312 111c 7047     		bx	lr
 3313              		.cfi_endproc
 3314              	.LFE158:
 3316 111e 00BF     		.align	2
 3317              		.global	TIM_CCxNCmd
 3318              		.thumb
 3319              		.thumb_func
 3321              	TIM_CCxNCmd:
 3322              	.LFB159:
1795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3323              		.loc 1 1809 0
 3324              		.cfi_startproc
 3325              		@ args = 0, pretend = 0, frame = 16
 3326              		@ frame_needed = 1, uses_anonymous_args = 0
 3327              		@ link register save eliminated.
 3328 1120 80B4     		push	{r7}
 3329              	.LCFI147:
 3330              		.cfi_def_cfa_offset 4
 3331              		.cfi_offset 7, -4
 3332 1122 85B0     		sub	sp, sp, #20
 3333              	.LCFI148:
 3334              		.cfi_def_cfa_offset 24
 3335 1124 00AF     		add	r7, sp, #0
 3336              	.LCFI149:
 3337              		.cfi_def_cfa_register 7
 3338 1126 7860     		str	r0, [r7, #4]
 3339 1128 1346     		mov	r3, r2
 3340 112a 0A46     		mov	r2, r1	@ movhi
 3341 112c 7A80     		strh	r2, [r7, #2]	@ movhi
 3342 112e 3B80     		strh	r3, [r7, #0]	@ movhi
1810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3343              		.loc 1 1810 0
 3344 1130 4FF00003 		mov	r3, #0
 3345 1134 FB81     		strh	r3, [r7, #14]	@ movhi
1811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 3346              		.loc 1 1817 0
 3347 1136 7B88     		ldrh	r3, [r7, #2]
 3348 1138 4FF00402 		mov	r2, #4
 3349 113c 02FA03F3 		lsl	r3, r2, r3
 3350 1140 FB81     		strh	r3, [r7, #14]	@ movhi
1818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 3351              		.loc 1 1820 0
 3352 1142 7B68     		ldr	r3, [r7, #4]
 3353 1144 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3354 1146 9AB2     		uxth	r2, r3
 3355 1148 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3356 114a 6FEA0303 		mvn	r3, r3
 3357 114e 9BB2     		uxth	r3, r3
 3358 1150 1340     		ands	r3, r3, r2
 3359 1152 9AB2     		uxth	r2, r3
 3360 1154 7B68     		ldr	r3, [r7, #4]
 3361 1156 1A84     		strh	r2, [r3, #32]	@ movhi
1821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 3362              		.loc 1 1823 0
 3363 1158 7B68     		ldr	r3, [r7, #4]
 3364 115a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3365 115c 9AB2     		uxth	r2, r3
 3366 115e 3988     		ldrh	r1, [r7, #0]
 3367 1160 7B88     		ldrh	r3, [r7, #2]
 3368 1162 01FA03F3 		lsl	r3, r1, r3
 3369 1166 9BB2     		uxth	r3, r3
 3370 1168 1343     		orrs	r3, r3, r2
 3371 116a 9AB2     		uxth	r2, r3
 3372 116c 7B68     		ldr	r3, [r7, #4]
 3373 116e 1A84     		strh	r2, [r3, #32]	@ movhi
1824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3374              		.loc 1 1824 0
 3375 1170 07F11407 		add	r7, r7, #20
 3376 1174 BD46     		mov	sp, r7
 3377 1176 80BC     		pop	{r7}
 3378 1178 7047     		bx	lr
 3379              		.cfi_endproc
 3380              	.LFE159:
 3382 117a 00BF     		.align	2
 3383              		.global	TIM_ICInit
 3384              		.thumb
 3385              		.thumb_func
 3387              	TIM_ICInit:
 3388              	.LFB160:
1825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3389              		.loc 1 1891 0
 3390              		.cfi_startproc
 3391              		@ args = 0, pretend = 0, frame = 8
 3392              		@ frame_needed = 1, uses_anonymous_args = 0
 3393 117c 80B5     		push	{r7, lr}
 3394              	.LCFI150:
 3395              		.cfi_def_cfa_offset 8
 3396              		.cfi_offset 14, -4
 3397              		.cfi_offset 7, -8
 3398 117e 82B0     		sub	sp, sp, #8
 3399              	.LCFI151:
 3400              		.cfi_def_cfa_offset 16
 3401 1180 00AF     		add	r7, sp, #0
 3402              	.LCFI152:
 3403              		.cfi_def_cfa_register 7
 3404 1182 7860     		str	r0, [r7, #4]
 3405 1184 3960     		str	r1, [r7, #0]
1892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3406              		.loc 1 1899 0
 3407 1186 3B68     		ldr	r3, [r7, #0]
 3408 1188 1B88     		ldrh	r3, [r3, #0]
 3409 118a 002B     		cmp	r3, #0
 3410 118c 0FD1     		bne	.L90
1900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3411              		.loc 1 1902 0
 3412 118e 3B68     		ldr	r3, [r7, #0]
 3413 1190 5988     		ldrh	r1, [r3, #2]
1903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3414              		.loc 1 1903 0
 3415 1192 3B68     		ldr	r3, [r7, #0]
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3416              		.loc 1 1902 0
 3417 1194 9A88     		ldrh	r2, [r3, #4]
1904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3418              		.loc 1 1904 0
 3419 1196 3B68     		ldr	r3, [r7, #0]
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3420              		.loc 1 1902 0
 3421 1198 1B89     		ldrh	r3, [r3, #8]
 3422 119a 7868     		ldr	r0, [r7, #4]
 3423 119c 00F0C4FC 		bl	TI1_Config
1905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3424              		.loc 1 1906 0
 3425 11a0 3B68     		ldr	r3, [r7, #0]
 3426 11a2 DB88     		ldrh	r3, [r3, #6]
 3427 11a4 7868     		ldr	r0, [r7, #4]
 3428 11a6 1946     		mov	r1, r3
 3429 11a8 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3430 11ac 36E0     		b	.L89
 3431              	.L90:
1907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 3432              		.loc 1 1908 0
 3433 11ae 3B68     		ldr	r3, [r7, #0]
 3434 11b0 1B88     		ldrh	r3, [r3, #0]
 3435 11b2 042B     		cmp	r3, #4
 3436 11b4 0FD1     		bne	.L92
1909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3437              		.loc 1 1912 0
 3438 11b6 3B68     		ldr	r3, [r7, #0]
 3439 11b8 5988     		ldrh	r1, [r3, #2]
1913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3440              		.loc 1 1913 0
 3441 11ba 3B68     		ldr	r3, [r7, #0]
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3442              		.loc 1 1912 0
 3443 11bc 9A88     		ldrh	r2, [r3, #4]
1914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3444              		.loc 1 1914 0
 3445 11be 3B68     		ldr	r3, [r7, #0]
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3446              		.loc 1 1912 0
 3447 11c0 1B89     		ldrh	r3, [r3, #8]
 3448 11c2 7868     		ldr	r0, [r7, #4]
 3449 11c4 00F0F0FC 		bl	TI2_Config
1915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3450              		.loc 1 1916 0
 3451 11c8 3B68     		ldr	r3, [r7, #0]
 3452 11ca DB88     		ldrh	r3, [r3, #6]
 3453 11cc 7868     		ldr	r0, [r7, #4]
 3454 11ce 1946     		mov	r1, r3
 3455 11d0 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3456 11d4 22E0     		b	.L89
 3457              	.L92:
1917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3458              		.loc 1 1918 0
 3459 11d6 3B68     		ldr	r3, [r7, #0]
 3460 11d8 1B88     		ldrh	r3, [r3, #0]
 3461 11da 082B     		cmp	r3, #8
 3462 11dc 0FD1     		bne	.L93
1919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3463              		.loc 1 1922 0
 3464 11de 3B68     		ldr	r3, [r7, #0]
 3465 11e0 5988     		ldrh	r1, [r3, #2]
1923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3466              		.loc 1 1923 0
 3467 11e2 3B68     		ldr	r3, [r7, #0]
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3468              		.loc 1 1922 0
 3469 11e4 9A88     		ldrh	r2, [r3, #4]
1924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3470              		.loc 1 1924 0
 3471 11e6 3B68     		ldr	r3, [r7, #0]
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3472              		.loc 1 1922 0
 3473 11e8 1B89     		ldrh	r3, [r3, #8]
 3474 11ea 7868     		ldr	r0, [r7, #4]
 3475 11ec 00F02AFD 		bl	TI3_Config
1925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3476              		.loc 1 1926 0
 3477 11f0 3B68     		ldr	r3, [r7, #0]
 3478 11f2 DB88     		ldrh	r3, [r3, #6]
 3479 11f4 7868     		ldr	r0, [r7, #4]
 3480 11f6 1946     		mov	r1, r3
 3481 11f8 FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3482 11fc 0EE0     		b	.L89
 3483              	.L93:
1927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3484              		.loc 1 1932 0
 3485 11fe 3B68     		ldr	r3, [r7, #0]
 3486 1200 5988     		ldrh	r1, [r3, #2]
1933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3487              		.loc 1 1933 0
 3488 1202 3B68     		ldr	r3, [r7, #0]
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3489              		.loc 1 1932 0
 3490 1204 9A88     		ldrh	r2, [r3, #4]
1934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3491              		.loc 1 1934 0
 3492 1206 3B68     		ldr	r3, [r7, #0]
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3493              		.loc 1 1932 0
 3494 1208 1B89     		ldrh	r3, [r3, #8]
 3495 120a 7868     		ldr	r0, [r7, #4]
 3496 120c 00F060FD 		bl	TI4_Config
1935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3497              		.loc 1 1936 0
 3498 1210 3B68     		ldr	r3, [r7, #0]
 3499 1212 DB88     		ldrh	r3, [r3, #6]
 3500 1214 7868     		ldr	r0, [r7, #4]
 3501 1216 1946     		mov	r1, r3
 3502 1218 FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3503              	.L89:
1937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3504              		.loc 1 1938 0
 3505 121c 07F10807 		add	r7, r7, #8
 3506 1220 BD46     		mov	sp, r7
 3507 1222 80BD     		pop	{r7, pc}
 3508              		.cfi_endproc
 3509              	.LFE160:
 3511              		.align	2
 3512              		.global	TIM_ICStructInit
 3513              		.thumb
 3514              		.thumb_func
 3516              	TIM_ICStructInit:
 3517              	.LFB161:
1939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3518              		.loc 1 1947 0
 3519              		.cfi_startproc
 3520              		@ args = 0, pretend = 0, frame = 8
 3521              		@ frame_needed = 1, uses_anonymous_args = 0
 3522              		@ link register save eliminated.
 3523 1224 80B4     		push	{r7}
 3524              	.LCFI153:
 3525              		.cfi_def_cfa_offset 4
 3526              		.cfi_offset 7, -4
 3527 1226 83B0     		sub	sp, sp, #12
 3528              	.LCFI154:
 3529              		.cfi_def_cfa_offset 16
 3530 1228 00AF     		add	r7, sp, #0
 3531              	.LCFI155:
 3532              		.cfi_def_cfa_register 7
 3533 122a 7860     		str	r0, [r7, #4]
1948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 3534              		.loc 1 1949 0
 3535 122c 7B68     		ldr	r3, [r7, #4]
 3536 122e 4FF00002 		mov	r2, #0
 3537 1232 1A80     		strh	r2, [r3, #0]	@ movhi
1950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 3538              		.loc 1 1950 0
 3539 1234 7B68     		ldr	r3, [r7, #4]
 3540 1236 4FF00002 		mov	r2, #0
 3541 123a 5A80     		strh	r2, [r3, #2]	@ movhi
1951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 3542              		.loc 1 1951 0
 3543 123c 7B68     		ldr	r3, [r7, #4]
 3544 123e 4FF00102 		mov	r2, #1
 3545 1242 9A80     		strh	r2, [r3, #4]	@ movhi
1952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 3546              		.loc 1 1952 0
 3547 1244 7B68     		ldr	r3, [r7, #4]
 3548 1246 4FF00002 		mov	r2, #0
 3549 124a DA80     		strh	r2, [r3, #6]	@ movhi
1953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 3550              		.loc 1 1953 0
 3551 124c 7B68     		ldr	r3, [r7, #4]
 3552 124e 4FF00002 		mov	r2, #0
 3553 1252 1A81     		strh	r2, [r3, #8]	@ movhi
1954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3554              		.loc 1 1954 0
 3555 1254 07F10C07 		add	r7, r7, #12
 3556 1258 BD46     		mov	sp, r7
 3557 125a 80BC     		pop	{r7}
 3558 125c 7047     		bx	lr
 3559              		.cfi_endproc
 3560              	.LFE161:
 3562 125e 00BF     		.align	2
 3563              		.global	TIM_PWMIConfig
 3564              		.thumb
 3565              		.thumb_func
 3567              	TIM_PWMIConfig:
 3568              	.LFB162:
1955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3569              		.loc 1 1966 0
 3570              		.cfi_startproc
 3571              		@ args = 0, pretend = 0, frame = 16
 3572              		@ frame_needed = 1, uses_anonymous_args = 0
 3573 1260 80B5     		push	{r7, lr}
 3574              	.LCFI156:
 3575              		.cfi_def_cfa_offset 8
 3576              		.cfi_offset 14, -4
 3577              		.cfi_offset 7, -8
 3578 1262 84B0     		sub	sp, sp, #16
 3579              	.LCFI157:
 3580              		.cfi_def_cfa_offset 24
 3581 1264 00AF     		add	r7, sp, #0
 3582              	.LCFI158:
 3583              		.cfi_def_cfa_register 7
 3584 1266 7860     		str	r0, [r7, #4]
 3585 1268 3960     		str	r1, [r7, #0]
1967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3586              		.loc 1 1967 0
 3587 126a 4FF00003 		mov	r3, #0
 3588 126e FB81     		strh	r3, [r7, #14]	@ movhi
1968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 3589              		.loc 1 1968 0
 3590 1270 4FF00103 		mov	r3, #1
 3591 1274 BB81     		strh	r3, [r7, #12]	@ movhi
1969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 3592              		.loc 1 1974 0
 3593 1276 3B68     		ldr	r3, [r7, #0]
 3594 1278 5B88     		ldrh	r3, [r3, #2]
 3595 127a 002B     		cmp	r3, #0
 3596 127c 03D1     		bne	.L96
1975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 3597              		.loc 1 1976 0
 3598 127e 4FF00203 		mov	r3, #2
 3599 1282 FB81     		strh	r3, [r7, #14]	@ movhi
 3600 1284 02E0     		b	.L97
 3601              	.L96:
1977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 3602              		.loc 1 1980 0
 3603 1286 4FF00003 		mov	r3, #0
 3604 128a FB81     		strh	r3, [r7, #14]	@ movhi
 3605              	.L97:
1981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 3606              		.loc 1 1983 0
 3607 128c 3B68     		ldr	r3, [r7, #0]
 3608 128e 9B88     		ldrh	r3, [r3, #4]
 3609 1290 012B     		cmp	r3, #1
 3610 1292 03D1     		bne	.L98
1984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 3611              		.loc 1 1985 0
 3612 1294 4FF00203 		mov	r3, #2
 3613 1298 BB81     		strh	r3, [r7, #12]	@ movhi
 3614 129a 02E0     		b	.L99
 3615              	.L98:
1986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 3616              		.loc 1 1989 0
 3617 129c 4FF00103 		mov	r3, #1
 3618 12a0 BB81     		strh	r3, [r7, #12]	@ movhi
 3619              	.L99:
1990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3620              		.loc 1 1991 0
 3621 12a2 3B68     		ldr	r3, [r7, #0]
 3622 12a4 1B88     		ldrh	r3, [r3, #0]
 3623 12a6 002B     		cmp	r3, #0
 3624 12a8 1CD1     		bne	.L100
1992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3625              		.loc 1 1994 0
 3626 12aa 3B68     		ldr	r3, [r7, #0]
 3627 12ac 5988     		ldrh	r1, [r3, #2]
 3628 12ae 3B68     		ldr	r3, [r7, #0]
 3629 12b0 9A88     		ldrh	r2, [r3, #4]
1995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3630              		.loc 1 1995 0
 3631 12b2 3B68     		ldr	r3, [r7, #0]
1994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3632              		.loc 1 1994 0
 3633 12b4 1B89     		ldrh	r3, [r3, #8]
 3634 12b6 7868     		ldr	r0, [r7, #4]
 3635 12b8 00F036FC 		bl	TI1_Config
1996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3636              		.loc 1 1997 0
 3637 12bc 3B68     		ldr	r3, [r7, #0]
 3638 12be DB88     		ldrh	r3, [r3, #6]
 3639 12c0 7868     		ldr	r0, [r7, #4]
 3640 12c2 1946     		mov	r1, r3
 3641 12c4 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3642              		.loc 1 1999 0
 3643 12c8 3B68     		ldr	r3, [r7, #0]
 3644 12ca 1B89     		ldrh	r3, [r3, #8]
 3645 12cc F989     		ldrh	r1, [r7, #14]
 3646 12ce BA89     		ldrh	r2, [r7, #12]
 3647 12d0 7868     		ldr	r0, [r7, #4]
 3648 12d2 00F069FC 		bl	TI2_Config
2000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3649              		.loc 1 2001 0
 3650 12d6 3B68     		ldr	r3, [r7, #0]
 3651 12d8 DB88     		ldrh	r3, [r3, #6]
 3652 12da 7868     		ldr	r0, [r7, #4]
 3653 12dc 1946     		mov	r1, r3
 3654 12de FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3655 12e2 1BE0     		b	.L95
 3656              	.L100:
2002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3657              		.loc 1 2006 0
 3658 12e4 3B68     		ldr	r3, [r7, #0]
 3659 12e6 5988     		ldrh	r1, [r3, #2]
 3660 12e8 3B68     		ldr	r3, [r7, #0]
 3661 12ea 9A88     		ldrh	r2, [r3, #4]
2007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3662              		.loc 1 2007 0
 3663 12ec 3B68     		ldr	r3, [r7, #0]
2006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3664              		.loc 1 2006 0
 3665 12ee 1B89     		ldrh	r3, [r3, #8]
 3666 12f0 7868     		ldr	r0, [r7, #4]
 3667 12f2 00F059FC 		bl	TI2_Config
2008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3668              		.loc 1 2009 0
 3669 12f6 3B68     		ldr	r3, [r7, #0]
 3670 12f8 DB88     		ldrh	r3, [r3, #6]
 3671 12fa 7868     		ldr	r0, [r7, #4]
 3672 12fc 1946     		mov	r1, r3
 3673 12fe FFF7FEFF 		bl	TIM_SetIC2Prescaler
2010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3674              		.loc 1 2011 0
 3675 1302 3B68     		ldr	r3, [r7, #0]
 3676 1304 1B89     		ldrh	r3, [r3, #8]
 3677 1306 F989     		ldrh	r1, [r7, #14]
 3678 1308 BA89     		ldrh	r2, [r7, #12]
 3679 130a 7868     		ldr	r0, [r7, #4]
 3680 130c 00F00CFC 		bl	TI1_Config
2012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3681              		.loc 1 2013 0
 3682 1310 3B68     		ldr	r3, [r7, #0]
 3683 1312 DB88     		ldrh	r3, [r3, #6]
 3684 1314 7868     		ldr	r0, [r7, #4]
 3685 1316 1946     		mov	r1, r3
 3686 1318 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3687              	.L95:
2014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3688              		.loc 1 2015 0
 3689 131c 07F11007 		add	r7, r7, #16
 3690 1320 BD46     		mov	sp, r7
 3691 1322 80BD     		pop	{r7, pc}
 3692              		.cfi_endproc
 3693              	.LFE162:
 3695              		.align	2
 3696              		.global	TIM_GetCapture1
 3697              		.thumb
 3698              		.thumb_func
 3700              	TIM_GetCapture1:
 3701              	.LFB163:
2016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3702              		.loc 1 2023 0
 3703              		.cfi_startproc
 3704              		@ args = 0, pretend = 0, frame = 8
 3705              		@ frame_needed = 1, uses_anonymous_args = 0
 3706              		@ link register save eliminated.
 3707 1324 80B4     		push	{r7}
 3708              	.LCFI159:
 3709              		.cfi_def_cfa_offset 4
 3710              		.cfi_offset 7, -4
 3711 1326 83B0     		sub	sp, sp, #12
 3712              	.LCFI160:
 3713              		.cfi_def_cfa_offset 16
 3714 1328 00AF     		add	r7, sp, #0
 3715              	.LCFI161:
 3716              		.cfi_def_cfa_register 7
 3717 132a 7860     		str	r0, [r7, #4]
2024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 3718              		.loc 1 2028 0
 3719 132c 7B68     		ldr	r3, [r7, #4]
 3720 132e 5B6B     		ldr	r3, [r3, #52]
2029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3721              		.loc 1 2029 0
 3722 1330 1846     		mov	r0, r3
 3723 1332 07F10C07 		add	r7, r7, #12
 3724 1336 BD46     		mov	sp, r7
 3725 1338 80BC     		pop	{r7}
 3726 133a 7047     		bx	lr
 3727              		.cfi_endproc
 3728              	.LFE163:
 3730              		.align	2
 3731              		.global	TIM_GetCapture2
 3732              		.thumb
 3733              		.thumb_func
 3735              	TIM_GetCapture2:
 3736              	.LFB164:
2030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3737              		.loc 1 2038 0
 3738              		.cfi_startproc
 3739              		@ args = 0, pretend = 0, frame = 8
 3740              		@ frame_needed = 1, uses_anonymous_args = 0
 3741              		@ link register save eliminated.
 3742 133c 80B4     		push	{r7}
 3743              	.LCFI162:
 3744              		.cfi_def_cfa_offset 4
 3745              		.cfi_offset 7, -4
 3746 133e 83B0     		sub	sp, sp, #12
 3747              	.LCFI163:
 3748              		.cfi_def_cfa_offset 16
 3749 1340 00AF     		add	r7, sp, #0
 3750              	.LCFI164:
 3751              		.cfi_def_cfa_register 7
 3752 1342 7860     		str	r0, [r7, #4]
2039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 3753              		.loc 1 2043 0
 3754 1344 7B68     		ldr	r3, [r7, #4]
 3755 1346 9B6B     		ldr	r3, [r3, #56]
2044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3756              		.loc 1 2044 0
 3757 1348 1846     		mov	r0, r3
 3758 134a 07F10C07 		add	r7, r7, #12
 3759 134e BD46     		mov	sp, r7
 3760 1350 80BC     		pop	{r7}
 3761 1352 7047     		bx	lr
 3762              		.cfi_endproc
 3763              	.LFE164:
 3765              		.align	2
 3766              		.global	TIM_GetCapture3
 3767              		.thumb
 3768              		.thumb_func
 3770              	TIM_GetCapture3:
 3771              	.LFB165:
2045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3772              		.loc 1 2052 0
 3773              		.cfi_startproc
 3774              		@ args = 0, pretend = 0, frame = 8
 3775              		@ frame_needed = 1, uses_anonymous_args = 0
 3776              		@ link register save eliminated.
 3777 1354 80B4     		push	{r7}
 3778              	.LCFI165:
 3779              		.cfi_def_cfa_offset 4
 3780              		.cfi_offset 7, -4
 3781 1356 83B0     		sub	sp, sp, #12
 3782              	.LCFI166:
 3783              		.cfi_def_cfa_offset 16
 3784 1358 00AF     		add	r7, sp, #0
 3785              	.LCFI167:
 3786              		.cfi_def_cfa_register 7
 3787 135a 7860     		str	r0, [r7, #4]
2053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 3788              		.loc 1 2057 0
 3789 135c 7B68     		ldr	r3, [r7, #4]
 3790 135e DB6B     		ldr	r3, [r3, #60]
2058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3791              		.loc 1 2058 0
 3792 1360 1846     		mov	r0, r3
 3793 1362 07F10C07 		add	r7, r7, #12
 3794 1366 BD46     		mov	sp, r7
 3795 1368 80BC     		pop	{r7}
 3796 136a 7047     		bx	lr
 3797              		.cfi_endproc
 3798              	.LFE165:
 3800              		.align	2
 3801              		.global	TIM_GetCapture4
 3802              		.thumb
 3803              		.thumb_func
 3805              	TIM_GetCapture4:
 3806              	.LFB166:
2059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3807              		.loc 1 2066 0
 3808              		.cfi_startproc
 3809              		@ args = 0, pretend = 0, frame = 8
 3810              		@ frame_needed = 1, uses_anonymous_args = 0
 3811              		@ link register save eliminated.
 3812 136c 80B4     		push	{r7}
 3813              	.LCFI168:
 3814              		.cfi_def_cfa_offset 4
 3815              		.cfi_offset 7, -4
 3816 136e 83B0     		sub	sp, sp, #12
 3817              	.LCFI169:
 3818              		.cfi_def_cfa_offset 16
 3819 1370 00AF     		add	r7, sp, #0
 3820              	.LCFI170:
 3821              		.cfi_def_cfa_register 7
 3822 1372 7860     		str	r0, [r7, #4]
2067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 3823              		.loc 1 2071 0
 3824 1374 7B68     		ldr	r3, [r7, #4]
 3825 1376 1B6C     		ldr	r3, [r3, #64]
2072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3826              		.loc 1 2072 0
 3827 1378 1846     		mov	r0, r3
 3828 137a 07F10C07 		add	r7, r7, #12
 3829 137e BD46     		mov	sp, r7
 3830 1380 80BC     		pop	{r7}
 3831 1382 7047     		bx	lr
 3832              		.cfi_endproc
 3833              	.LFE166:
 3835              		.align	2
 3836              		.global	TIM_SetIC1Prescaler
 3837              		.thumb
 3838              		.thumb_func
 3840              	TIM_SetIC1Prescaler:
 3841              	.LFB167:
2073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3842              		.loc 1 2086 0
 3843              		.cfi_startproc
 3844              		@ args = 0, pretend = 0, frame = 8
 3845              		@ frame_needed = 1, uses_anonymous_args = 0
 3846              		@ link register save eliminated.
 3847 1384 80B4     		push	{r7}
 3848              	.LCFI171:
 3849              		.cfi_def_cfa_offset 4
 3850              		.cfi_offset 7, -4
 3851 1386 83B0     		sub	sp, sp, #12
 3852              	.LCFI172:
 3853              		.cfi_def_cfa_offset 16
 3854 1388 00AF     		add	r7, sp, #0
 3855              	.LCFI173:
 3856              		.cfi_def_cfa_register 7
 3857 138a 7860     		str	r0, [r7, #4]
 3858 138c 0B46     		mov	r3, r1
 3859 138e 7B80     		strh	r3, [r7, #2]	@ movhi
2087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 3860              		.loc 1 2092 0
 3861 1390 7B68     		ldr	r3, [r7, #4]
 3862 1392 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3863 1394 9BB2     		uxth	r3, r3
 3864 1396 23F00C03 		bic	r3, r3, #12
 3865 139a 9AB2     		uxth	r2, r3
 3866 139c 7B68     		ldr	r3, [r7, #4]
 3867 139e 1A83     		strh	r2, [r3, #24]	@ movhi
2093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 3868              		.loc 1 2095 0
 3869 13a0 7B68     		ldr	r3, [r7, #4]
 3870 13a2 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3871 13a4 9AB2     		uxth	r2, r3
 3872 13a6 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3873 13a8 1343     		orrs	r3, r3, r2
 3874 13aa 9AB2     		uxth	r2, r3
 3875 13ac 7B68     		ldr	r3, [r7, #4]
 3876 13ae 1A83     		strh	r2, [r3, #24]	@ movhi
2096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3877              		.loc 1 2096 0
 3878 13b0 07F10C07 		add	r7, r7, #12
 3879 13b4 BD46     		mov	sp, r7
 3880 13b6 80BC     		pop	{r7}
 3881 13b8 7047     		bx	lr
 3882              		.cfi_endproc
 3883              	.LFE167:
 3885 13ba 00BF     		.align	2
 3886              		.global	TIM_SetIC2Prescaler
 3887              		.thumb
 3888              		.thumb_func
 3890              	TIM_SetIC2Prescaler:
 3891              	.LFB168:
2097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3892              		.loc 1 2111 0
 3893              		.cfi_startproc
 3894              		@ args = 0, pretend = 0, frame = 8
 3895              		@ frame_needed = 1, uses_anonymous_args = 0
 3896              		@ link register save eliminated.
 3897 13bc 80B4     		push	{r7}
 3898              	.LCFI174:
 3899              		.cfi_def_cfa_offset 4
 3900              		.cfi_offset 7, -4
 3901 13be 83B0     		sub	sp, sp, #12
 3902              	.LCFI175:
 3903              		.cfi_def_cfa_offset 16
 3904 13c0 00AF     		add	r7, sp, #0
 3905              	.LCFI176:
 3906              		.cfi_def_cfa_register 7
 3907 13c2 7860     		str	r0, [r7, #4]
 3908 13c4 0B46     		mov	r3, r1
 3909 13c6 7B80     		strh	r3, [r7, #2]	@ movhi
2112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 3910              		.loc 1 2117 0
 3911 13c8 7B68     		ldr	r3, [r7, #4]
 3912 13ca 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3913 13cc 9BB2     		uxth	r3, r3
 3914 13ce 23F44063 		bic	r3, r3, #3072
 3915 13d2 9AB2     		uxth	r2, r3
 3916 13d4 7B68     		ldr	r3, [r7, #4]
 3917 13d6 1A83     		strh	r2, [r3, #24]	@ movhi
2118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 3918              		.loc 1 2120 0
 3919 13d8 7B68     		ldr	r3, [r7, #4]
 3920 13da 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3921 13dc 9AB2     		uxth	r2, r3
 3922 13de 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3923 13e0 4FEA0323 		lsl	r3, r3, #8
 3924 13e4 9BB2     		uxth	r3, r3
 3925 13e6 1343     		orrs	r3, r3, r2
 3926 13e8 9AB2     		uxth	r2, r3
 3927 13ea 7B68     		ldr	r3, [r7, #4]
 3928 13ec 1A83     		strh	r2, [r3, #24]	@ movhi
2121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3929              		.loc 1 2121 0
 3930 13ee 07F10C07 		add	r7, r7, #12
 3931 13f2 BD46     		mov	sp, r7
 3932 13f4 80BC     		pop	{r7}
 3933 13f6 7047     		bx	lr
 3934              		.cfi_endproc
 3935              	.LFE168:
 3937              		.align	2
 3938              		.global	TIM_SetIC3Prescaler
 3939              		.thumb
 3940              		.thumb_func
 3942              	TIM_SetIC3Prescaler:
 3943              	.LFB169:
2122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3944              		.loc 1 2135 0
 3945              		.cfi_startproc
 3946              		@ args = 0, pretend = 0, frame = 8
 3947              		@ frame_needed = 1, uses_anonymous_args = 0
 3948              		@ link register save eliminated.
 3949 13f8 80B4     		push	{r7}
 3950              	.LCFI177:
 3951              		.cfi_def_cfa_offset 4
 3952              		.cfi_offset 7, -4
 3953 13fa 83B0     		sub	sp, sp, #12
 3954              	.LCFI178:
 3955              		.cfi_def_cfa_offset 16
 3956 13fc 00AF     		add	r7, sp, #0
 3957              	.LCFI179:
 3958              		.cfi_def_cfa_register 7
 3959 13fe 7860     		str	r0, [r7, #4]
 3960 1400 0B46     		mov	r3, r1
 3961 1402 7B80     		strh	r3, [r7, #2]	@ movhi
2136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 3962              		.loc 1 2141 0
 3963 1404 7B68     		ldr	r3, [r7, #4]
 3964 1406 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 3965 1408 9BB2     		uxth	r3, r3
 3966 140a 23F00C03 		bic	r3, r3, #12
 3967 140e 9AB2     		uxth	r2, r3
 3968 1410 7B68     		ldr	r3, [r7, #4]
 3969 1412 9A83     		strh	r2, [r3, #28]	@ movhi
2142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 3970              		.loc 1 2144 0
 3971 1414 7B68     		ldr	r3, [r7, #4]
 3972 1416 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 3973 1418 9AB2     		uxth	r2, r3
 3974 141a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3975 141c 1343     		orrs	r3, r3, r2
 3976 141e 9AB2     		uxth	r2, r3
 3977 1420 7B68     		ldr	r3, [r7, #4]
 3978 1422 9A83     		strh	r2, [r3, #28]	@ movhi
2145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3979              		.loc 1 2145 0
 3980 1424 07F10C07 		add	r7, r7, #12
 3981 1428 BD46     		mov	sp, r7
 3982 142a 80BC     		pop	{r7}
 3983 142c 7047     		bx	lr
 3984              		.cfi_endproc
 3985              	.LFE169:
 3987 142e 00BF     		.align	2
 3988              		.global	TIM_SetIC4Prescaler
 3989              		.thumb
 3990              		.thumb_func
 3992              	TIM_SetIC4Prescaler:
 3993              	.LFB170:
2146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 3994              		.loc 1 2159 0
 3995              		.cfi_startproc
 3996              		@ args = 0, pretend = 0, frame = 8
 3997              		@ frame_needed = 1, uses_anonymous_args = 0
 3998              		@ link register save eliminated.
 3999 1430 80B4     		push	{r7}
 4000              	.LCFI180:
 4001              		.cfi_def_cfa_offset 4
 4002              		.cfi_offset 7, -4
 4003 1432 83B0     		sub	sp, sp, #12
 4004              	.LCFI181:
 4005              		.cfi_def_cfa_offset 16
 4006 1434 00AF     		add	r7, sp, #0
 4007              	.LCFI182:
 4008              		.cfi_def_cfa_register 7
 4009 1436 7860     		str	r0, [r7, #4]
 4010 1438 0B46     		mov	r3, r1
 4011 143a 7B80     		strh	r3, [r7, #2]	@ movhi
2160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 4012              		.loc 1 2165 0
 4013 143c 7B68     		ldr	r3, [r7, #4]
 4014 143e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4015 1440 9BB2     		uxth	r3, r3
 4016 1442 23F44063 		bic	r3, r3, #3072
 4017 1446 9AB2     		uxth	r2, r3
 4018 1448 7B68     		ldr	r3, [r7, #4]
 4019 144a 9A83     		strh	r2, [r3, #28]	@ movhi
2166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 4020              		.loc 1 2168 0
 4021 144c 7B68     		ldr	r3, [r7, #4]
 4022 144e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4023 1450 9AB2     		uxth	r2, r3
 4024 1452 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4025 1454 4FEA0323 		lsl	r3, r3, #8
 4026 1458 9BB2     		uxth	r3, r3
 4027 145a 1343     		orrs	r3, r3, r2
 4028 145c 9AB2     		uxth	r2, r3
 4029 145e 7B68     		ldr	r3, [r7, #4]
 4030 1460 9A83     		strh	r2, [r3, #28]	@ movhi
2169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4031              		.loc 1 2169 0
 4032 1462 07F10C07 		add	r7, r7, #12
 4033 1466 BD46     		mov	sp, r7
 4034 1468 80BC     		pop	{r7}
 4035 146a 7047     		bx	lr
 4036              		.cfi_endproc
 4037              	.LFE170:
 4039              		.align	2
 4040              		.global	TIM_BDTRConfig
 4041              		.thumb
 4042              		.thumb_func
 4044              	TIM_BDTRConfig:
 4045              	.LFB171:
2170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4046              		.loc 1 2212 0
 4047              		.cfi_startproc
 4048              		@ args = 0, pretend = 0, frame = 8
 4049              		@ frame_needed = 1, uses_anonymous_args = 0
 4050              		@ link register save eliminated.
 4051 146c 80B4     		push	{r7}
 4052              	.LCFI183:
 4053              		.cfi_def_cfa_offset 4
 4054              		.cfi_offset 7, -4
 4055 146e 83B0     		sub	sp, sp, #12
 4056              	.LCFI184:
 4057              		.cfi_def_cfa_offset 16
 4058 1470 00AF     		add	r7, sp, #0
 4059              	.LCFI185:
 4060              		.cfi_def_cfa_register 7
 4061 1472 7860     		str	r0, [r7, #4]
 4062 1474 3960     		str	r1, [r7, #0]
2213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4063              		.loc 1 2224 0
 4064 1476 3B68     		ldr	r3, [r7, #0]
 4065 1478 1A88     		ldrh	r2, [r3, #0]
 4066 147a 3B68     		ldr	r3, [r7, #0]
 4067 147c 5B88     		ldrh	r3, [r3, #2]
 4068 147e 1343     		orrs	r3, r3, r2
 4069 1480 9AB2     		uxth	r2, r3
2225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4070              		.loc 1 2225 0
 4071 1482 3B68     		ldr	r3, [r7, #0]
 4072 1484 9B88     		ldrh	r3, [r3, #4]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4073              		.loc 1 2224 0
 4074 1486 1343     		orrs	r3, r3, r2
 4075 1488 9AB2     		uxth	r2, r3
 4076              		.loc 1 2225 0
 4077 148a 3B68     		ldr	r3, [r7, #0]
 4078 148c DB88     		ldrh	r3, [r3, #6]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4079              		.loc 1 2224 0
 4080 148e 1343     		orrs	r3, r3, r2
 4081 1490 9AB2     		uxth	r2, r3
2226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4082              		.loc 1 2226 0
 4083 1492 3B68     		ldr	r3, [r7, #0]
 4084 1494 1B89     		ldrh	r3, [r3, #8]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4085              		.loc 1 2224 0
 4086 1496 1343     		orrs	r3, r3, r2
 4087 1498 9AB2     		uxth	r2, r3
 4088              		.loc 1 2226 0
 4089 149a 3B68     		ldr	r3, [r7, #0]
 4090 149c 5B89     		ldrh	r3, [r3, #10]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4091              		.loc 1 2224 0
 4092 149e 1343     		orrs	r3, r3, r2
 4093 14a0 9AB2     		uxth	r2, r3
2227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 4094              		.loc 1 2227 0
 4095 14a2 3B68     		ldr	r3, [r7, #0]
 4096 14a4 9B89     		ldrh	r3, [r3, #12]
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4097              		.loc 1 2224 0
 4098 14a6 1343     		orrs	r3, r3, r2
 4099 14a8 9AB2     		uxth	r2, r3
 4100 14aa 7B68     		ldr	r3, [r7, #4]
 4101 14ac A3F84420 		strh	r2, [r3, #68]	@ movhi
2228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4102              		.loc 1 2228 0
 4103 14b0 07F10C07 		add	r7, r7, #12
 4104 14b4 BD46     		mov	sp, r7
 4105 14b6 80BC     		pop	{r7}
 4106 14b8 7047     		bx	lr
 4107              		.cfi_endproc
 4108              	.LFE171:
 4110 14ba 00BF     		.align	2
 4111              		.global	TIM_BDTRStructInit
 4112              		.thumb
 4113              		.thumb_func
 4115              	TIM_BDTRStructInit:
 4116              	.LFB172:
2229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4117              		.loc 1 2237 0
 4118              		.cfi_startproc
 4119              		@ args = 0, pretend = 0, frame = 8
 4120              		@ frame_needed = 1, uses_anonymous_args = 0
 4121              		@ link register save eliminated.
 4122 14bc 80B4     		push	{r7}
 4123              	.LCFI186:
 4124              		.cfi_def_cfa_offset 4
 4125              		.cfi_offset 7, -4
 4126 14be 83B0     		sub	sp, sp, #12
 4127              	.LCFI187:
 4128              		.cfi_def_cfa_offset 16
 4129 14c0 00AF     		add	r7, sp, #0
 4130              	.LCFI188:
 4131              		.cfi_def_cfa_register 7
 4132 14c2 7860     		str	r0, [r7, #4]
2238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 4133              		.loc 1 2239 0
 4134 14c4 7B68     		ldr	r3, [r7, #4]
 4135 14c6 4FF00002 		mov	r2, #0
 4136 14ca 1A80     		strh	r2, [r3, #0]	@ movhi
2240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 4137              		.loc 1 2240 0
 4138 14cc 7B68     		ldr	r3, [r7, #4]
 4139 14ce 4FF00002 		mov	r2, #0
 4140 14d2 5A80     		strh	r2, [r3, #2]	@ movhi
2241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 4141              		.loc 1 2241 0
 4142 14d4 7B68     		ldr	r3, [r7, #4]
 4143 14d6 4FF00002 		mov	r2, #0
 4144 14da 9A80     		strh	r2, [r3, #4]	@ movhi
2242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 4145              		.loc 1 2242 0
 4146 14dc 7B68     		ldr	r3, [r7, #4]
 4147 14de 4FF00002 		mov	r2, #0
 4148 14e2 DA80     		strh	r2, [r3, #6]	@ movhi
2243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 4149              		.loc 1 2243 0
 4150 14e4 7B68     		ldr	r3, [r7, #4]
 4151 14e6 4FF00002 		mov	r2, #0
 4152 14ea 1A81     		strh	r2, [r3, #8]	@ movhi
2244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 4153              		.loc 1 2244 0
 4154 14ec 7B68     		ldr	r3, [r7, #4]
 4155 14ee 4FF00002 		mov	r2, #0
 4156 14f2 5A81     		strh	r2, [r3, #10]	@ movhi
2245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 4157              		.loc 1 2245 0
 4158 14f4 7B68     		ldr	r3, [r7, #4]
 4159 14f6 4FF00002 		mov	r2, #0
 4160 14fa 9A81     		strh	r2, [r3, #12]	@ movhi
2246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4161              		.loc 1 2246 0
 4162 14fc 07F10C07 		add	r7, r7, #12
 4163 1500 BD46     		mov	sp, r7
 4164 1502 80BC     		pop	{r7}
 4165 1504 7047     		bx	lr
 4166              		.cfi_endproc
 4167              	.LFE172:
 4169 1506 00BF     		.align	2
 4170              		.global	TIM_CtrlPWMOutputs
 4171              		.thumb
 4172              		.thumb_func
 4174              	TIM_CtrlPWMOutputs:
 4175              	.LFB173:
2247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4176              		.loc 1 2256 0
 4177              		.cfi_startproc
 4178              		@ args = 0, pretend = 0, frame = 8
 4179              		@ frame_needed = 1, uses_anonymous_args = 0
 4180              		@ link register save eliminated.
 4181 1508 80B4     		push	{r7}
 4182              	.LCFI189:
 4183              		.cfi_def_cfa_offset 4
 4184              		.cfi_offset 7, -4
 4185 150a 83B0     		sub	sp, sp, #12
 4186              	.LCFI190:
 4187              		.cfi_def_cfa_offset 16
 4188 150c 00AF     		add	r7, sp, #0
 4189              	.LCFI191:
 4190              		.cfi_def_cfa_register 7
 4191 150e 7860     		str	r0, [r7, #4]
 4192 1510 0B46     		mov	r3, r1
 4193 1512 FB70     		strb	r3, [r7, #3]
2257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4194              		.loc 1 2261 0
 4195 1514 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4196 1516 002B     		cmp	r3, #0
 4197 1518 0CD0     		beq	.L113
2262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 4198              		.loc 1 2264 0
 4199 151a 7B68     		ldr	r3, [r7, #4]
 4200 151c B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4201 1520 9BB2     		uxth	r3, r3
 4202 1522 6FEA4343 		mvn	r3, r3, lsl #17
 4203 1526 6FEA5343 		mvn	r3, r3, lsr #17
 4204 152a 9AB2     		uxth	r2, r3
 4205 152c 7B68     		ldr	r3, [r7, #4]
 4206 152e A3F84420 		strh	r2, [r3, #68]	@ movhi
 4207 1532 0BE0     		b	.L112
 4208              	.L113:
2265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 4209              		.loc 1 2269 0
 4210 1534 7B68     		ldr	r3, [r7, #4]
 4211 1536 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4212 153a 9BB2     		uxth	r3, r3
 4213 153c 4FEA4343 		lsl	r3, r3, #17
 4214 1540 4FEA5343 		lsr	r3, r3, #17
 4215 1544 9AB2     		uxth	r2, r3
 4216 1546 7B68     		ldr	r3, [r7, #4]
 4217 1548 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4218              	.L112:
2270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4219              		.loc 1 2271 0
 4220 154c 07F10C07 		add	r7, r7, #12
 4221 1550 BD46     		mov	sp, r7
 4222 1552 80BC     		pop	{r7}
 4223 1554 7047     		bx	lr
 4224              		.cfi_endproc
 4225              	.LFE173:
 4227 1556 00BF     		.align	2
 4228              		.global	TIM_SelectCOM
 4229              		.thumb
 4230              		.thumb_func
 4232              	TIM_SelectCOM:
 4233              	.LFB174:
2272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4234              		.loc 1 2281 0
 4235              		.cfi_startproc
 4236              		@ args = 0, pretend = 0, frame = 8
 4237              		@ frame_needed = 1, uses_anonymous_args = 0
 4238              		@ link register save eliminated.
 4239 1558 80B4     		push	{r7}
 4240              	.LCFI192:
 4241              		.cfi_def_cfa_offset 4
 4242              		.cfi_offset 7, -4
 4243 155a 83B0     		sub	sp, sp, #12
 4244              	.LCFI193:
 4245              		.cfi_def_cfa_offset 16
 4246 155c 00AF     		add	r7, sp, #0
 4247              	.LCFI194:
 4248              		.cfi_def_cfa_register 7
 4249 155e 7860     		str	r0, [r7, #4]
 4250 1560 0B46     		mov	r3, r1
 4251 1562 FB70     		strb	r3, [r7, #3]
2282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4252              		.loc 1 2286 0
 4253 1564 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4254 1566 002B     		cmp	r3, #0
 4255 1568 08D0     		beq	.L116
2287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 4256              		.loc 1 2289 0
 4257 156a 7B68     		ldr	r3, [r7, #4]
 4258 156c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4259 156e 9BB2     		uxth	r3, r3
 4260 1570 43F00403 		orr	r3, r3, #4
 4261 1574 9AB2     		uxth	r2, r3
 4262 1576 7B68     		ldr	r3, [r7, #4]
 4263 1578 9A80     		strh	r2, [r3, #4]	@ movhi
 4264 157a 07E0     		b	.L115
 4265              	.L116:
2290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 4266              		.loc 1 2294 0
 4267 157c 7B68     		ldr	r3, [r7, #4]
 4268 157e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4269 1580 9BB2     		uxth	r3, r3
 4270 1582 23F00403 		bic	r3, r3, #4
 4271 1586 9AB2     		uxth	r2, r3
 4272 1588 7B68     		ldr	r3, [r7, #4]
 4273 158a 9A80     		strh	r2, [r3, #4]	@ movhi
 4274              	.L115:
2295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4275              		.loc 1 2296 0
 4276 158c 07F10C07 		add	r7, r7, #12
 4277 1590 BD46     		mov	sp, r7
 4278 1592 80BC     		pop	{r7}
 4279 1594 7047     		bx	lr
 4280              		.cfi_endproc
 4281              	.LFE174:
 4283 1596 00BF     		.align	2
 4284              		.global	TIM_CCPreloadControl
 4285              		.thumb
 4286              		.thumb_func
 4288              	TIM_CCPreloadControl:
 4289              	.LFB175:
2297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4290              		.loc 1 2306 0
 4291              		.cfi_startproc
 4292              		@ args = 0, pretend = 0, frame = 8
 4293              		@ frame_needed = 1, uses_anonymous_args = 0
 4294              		@ link register save eliminated.
 4295 1598 80B4     		push	{r7}
 4296              	.LCFI195:
 4297              		.cfi_def_cfa_offset 4
 4298              		.cfi_offset 7, -4
 4299 159a 83B0     		sub	sp, sp, #12
 4300              	.LCFI196:
 4301              		.cfi_def_cfa_offset 16
 4302 159c 00AF     		add	r7, sp, #0
 4303              	.LCFI197:
 4304              		.cfi_def_cfa_register 7
 4305 159e 7860     		str	r0, [r7, #4]
 4306 15a0 0B46     		mov	r3, r1
 4307 15a2 FB70     		strb	r3, [r7, #3]
2307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4308              		.loc 1 2310 0
 4309 15a4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4310 15a6 002B     		cmp	r3, #0
 4311 15a8 08D0     		beq	.L119
2311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 4312              		.loc 1 2313 0
 4313 15aa 7B68     		ldr	r3, [r7, #4]
 4314 15ac 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4315 15ae 9BB2     		uxth	r3, r3
 4316 15b0 43F00103 		orr	r3, r3, #1
 4317 15b4 9AB2     		uxth	r2, r3
 4318 15b6 7B68     		ldr	r3, [r7, #4]
 4319 15b8 9A80     		strh	r2, [r3, #4]	@ movhi
 4320 15ba 07E0     		b	.L118
 4321              	.L119:
2314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 4322              		.loc 1 2318 0
 4323 15bc 7B68     		ldr	r3, [r7, #4]
 4324 15be 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4325 15c0 9BB2     		uxth	r3, r3
 4326 15c2 23F00103 		bic	r3, r3, #1
 4327 15c6 9AB2     		uxth	r2, r3
 4328 15c8 7B68     		ldr	r3, [r7, #4]
 4329 15ca 9A80     		strh	r2, [r3, #4]	@ movhi
 4330              	.L118:
2319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4331              		.loc 1 2320 0
 4332 15cc 07F10C07 		add	r7, r7, #12
 4333 15d0 BD46     		mov	sp, r7
 4334 15d2 80BC     		pop	{r7}
 4335 15d4 7047     		bx	lr
 4336              		.cfi_endproc
 4337              	.LFE175:
 4339 15d6 00BF     		.align	2
 4340              		.global	TIM_ITConfig
 4341              		.thumb
 4342              		.thumb_func
 4344              	TIM_ITConfig:
 4345              	.LFB176:
2321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4346              		.loc 1 2363 0
 4347              		.cfi_startproc
 4348              		@ args = 0, pretend = 0, frame = 8
 4349              		@ frame_needed = 1, uses_anonymous_args = 0
 4350              		@ link register save eliminated.
 4351 15d8 80B4     		push	{r7}
 4352              	.LCFI198:
 4353              		.cfi_def_cfa_offset 4
 4354              		.cfi_offset 7, -4
 4355 15da 83B0     		sub	sp, sp, #12
 4356              	.LCFI199:
 4357              		.cfi_def_cfa_offset 16
 4358 15dc 00AF     		add	r7, sp, #0
 4359              	.LCFI200:
 4360              		.cfi_def_cfa_register 7
 4361 15de 7860     		str	r0, [r7, #4]
 4362 15e0 1346     		mov	r3, r2
 4363 15e2 0A46     		mov	r2, r1	@ movhi
 4364 15e4 7A80     		strh	r2, [r7, #2]	@ movhi
 4365 15e6 7B70     		strb	r3, [r7, #1]
2364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4366              		.loc 1 2369 0
 4367 15e8 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4368 15ea 002B     		cmp	r3, #0
 4369 15ec 08D0     		beq	.L122
2370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 4370              		.loc 1 2372 0
 4371 15ee 7B68     		ldr	r3, [r7, #4]
 4372 15f0 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4373 15f2 9AB2     		uxth	r2, r3
 4374 15f4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4375 15f6 1343     		orrs	r3, r3, r2
 4376 15f8 9AB2     		uxth	r2, r3
 4377 15fa 7B68     		ldr	r3, [r7, #4]
 4378 15fc 9A81     		strh	r2, [r3, #12]	@ movhi
 4379 15fe 0AE0     		b	.L121
 4380              	.L122:
2373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 4381              		.loc 1 2377 0
 4382 1600 7B68     		ldr	r3, [r7, #4]
 4383 1602 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4384 1604 9AB2     		uxth	r2, r3
 4385 1606 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4386 1608 6FEA0303 		mvn	r3, r3
 4387 160c 9BB2     		uxth	r3, r3
 4388 160e 1340     		ands	r3, r3, r2
 4389 1610 9AB2     		uxth	r2, r3
 4390 1612 7B68     		ldr	r3, [r7, #4]
 4391 1614 9A81     		strh	r2, [r3, #12]	@ movhi
 4392              	.L121:
2378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4393              		.loc 1 2379 0
 4394 1616 07F10C07 		add	r7, r7, #12
 4395 161a BD46     		mov	sp, r7
 4396 161c 80BC     		pop	{r7}
 4397 161e 7047     		bx	lr
 4398              		.cfi_endproc
 4399              	.LFE176:
 4401              		.align	2
 4402              		.global	TIM_GenerateEvent
 4403              		.thumb
 4404              		.thumb_func
 4406              	TIM_GenerateEvent:
 4407              	.LFB177:
2380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4408              		.loc 1 2401 0
 4409              		.cfi_startproc
 4410              		@ args = 0, pretend = 0, frame = 8
 4411              		@ frame_needed = 1, uses_anonymous_args = 0
 4412              		@ link register save eliminated.
 4413 1620 80B4     		push	{r7}
 4414              	.LCFI201:
 4415              		.cfi_def_cfa_offset 4
 4416              		.cfi_offset 7, -4
 4417 1622 83B0     		sub	sp, sp, #12
 4418              	.LCFI202:
 4419              		.cfi_def_cfa_offset 16
 4420 1624 00AF     		add	r7, sp, #0
 4421              	.LCFI203:
 4422              		.cfi_def_cfa_register 7
 4423 1626 7860     		str	r0, [r7, #4]
 4424 1628 0B46     		mov	r3, r1
 4425 162a 7B80     		strh	r3, [r7, #2]	@ movhi
2402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 4426              		.loc 1 2407 0
 4427 162c 7B68     		ldr	r3, [r7, #4]
 4428 162e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4429 1630 9A82     		strh	r2, [r3, #20]	@ movhi
2408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4430              		.loc 1 2408 0
 4431 1632 07F10C07 		add	r7, r7, #12
 4432 1636 BD46     		mov	sp, r7
 4433 1638 80BC     		pop	{r7}
 4434 163a 7047     		bx	lr
 4435              		.cfi_endproc
 4436              	.LFE177:
 4438              		.align	2
 4439              		.global	TIM_GetFlagStatus
 4440              		.thumb
 4441              		.thumb_func
 4443              	TIM_GetFlagStatus:
 4444              	.LFB178:
2409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4445              		.loc 1 2434 0
 4446              		.cfi_startproc
 4447              		@ args = 0, pretend = 0, frame = 16
 4448              		@ frame_needed = 1, uses_anonymous_args = 0
 4449              		@ link register save eliminated.
 4450 163c 80B4     		push	{r7}
 4451              	.LCFI204:
 4452              		.cfi_def_cfa_offset 4
 4453              		.cfi_offset 7, -4
 4454 163e 85B0     		sub	sp, sp, #20
 4455              	.LCFI205:
 4456              		.cfi_def_cfa_offset 24
 4457 1640 00AF     		add	r7, sp, #0
 4458              	.LCFI206:
 4459              		.cfi_def_cfa_register 7
 4460 1642 7860     		str	r0, [r7, #4]
 4461 1644 0B46     		mov	r3, r1
 4462 1646 7B80     		strh	r3, [r7, #2]	@ movhi
2435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4463              		.loc 1 2435 0
 4464 1648 4FF00003 		mov	r3, #0
 4465 164c FB73     		strb	r3, [r7, #15]
2436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 4466              		.loc 1 2441 0
 4467 164e 7B68     		ldr	r3, [r7, #4]
 4468 1650 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4469 1652 9AB2     		uxth	r2, r3
 4470 1654 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4471 1656 1340     		ands	r3, r3, r2
 4472 1658 9BB2     		uxth	r3, r3
 4473 165a 002B     		cmp	r3, #0
 4474 165c 03D0     		beq	.L126
2442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4475              		.loc 1 2443 0
 4476 165e 4FF00103 		mov	r3, #1
 4477 1662 FB73     		strb	r3, [r7, #15]
 4478 1664 02E0     		b	.L127
 4479              	.L126:
2444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4480              		.loc 1 2447 0
 4481 1666 4FF00003 		mov	r3, #0
 4482 166a FB73     		strb	r3, [r7, #15]
 4483              	.L127:
2448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4484              		.loc 1 2449 0
 4485 166c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4486              		.loc 1 2450 0
 4487 166e 1846     		mov	r0, r3
 4488 1670 07F11407 		add	r7, r7, #20
 4489 1674 BD46     		mov	sp, r7
 4490 1676 80BC     		pop	{r7}
 4491 1678 7047     		bx	lr
 4492              		.cfi_endproc
 4493              	.LFE178:
 4495 167a 00BF     		.align	2
 4496              		.global	TIM_ClearFlag
 4497              		.thumb
 4498              		.thumb_func
 4500              	TIM_ClearFlag:
 4501              	.LFB179:
2451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4502              		.loc 1 2476 0
 4503              		.cfi_startproc
 4504              		@ args = 0, pretend = 0, frame = 8
 4505              		@ frame_needed = 1, uses_anonymous_args = 0
 4506              		@ link register save eliminated.
 4507 167c 80B4     		push	{r7}
 4508              	.LCFI207:
 4509              		.cfi_def_cfa_offset 4
 4510              		.cfi_offset 7, -4
 4511 167e 83B0     		sub	sp, sp, #12
 4512              	.LCFI208:
 4513              		.cfi_def_cfa_offset 16
 4514 1680 00AF     		add	r7, sp, #0
 4515              	.LCFI209:
 4516              		.cfi_def_cfa_register 7
 4517 1682 7860     		str	r0, [r7, #4]
 4518 1684 0B46     		mov	r3, r1
 4519 1686 7B80     		strh	r3, [r7, #2]	@ movhi
2477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 4520              		.loc 1 2481 0
 4521 1688 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4522 168a 6FEA0303 		mvn	r3, r3
 4523 168e 9AB2     		uxth	r2, r3
 4524 1690 7B68     		ldr	r3, [r7, #4]
 4525 1692 1A82     		strh	r2, [r3, #16]	@ movhi
2482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4526              		.loc 1 2482 0
 4527 1694 07F10C07 		add	r7, r7, #12
 4528 1698 BD46     		mov	sp, r7
 4529 169a 80BC     		pop	{r7}
 4530 169c 7047     		bx	lr
 4531              		.cfi_endproc
 4532              	.LFE179:
 4534 169e 00BF     		.align	2
 4535              		.global	TIM_GetITStatus
 4536              		.thumb
 4537              		.thumb_func
 4539              	TIM_GetITStatus:
 4540              	.LFB180:
2483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4541              		.loc 1 2504 0
 4542              		.cfi_startproc
 4543              		@ args = 0, pretend = 0, frame = 16
 4544              		@ frame_needed = 1, uses_anonymous_args = 0
 4545              		@ link register save eliminated.
 4546 16a0 80B4     		push	{r7}
 4547              	.LCFI210:
 4548              		.cfi_def_cfa_offset 4
 4549              		.cfi_offset 7, -4
 4550 16a2 85B0     		sub	sp, sp, #20
 4551              	.LCFI211:
 4552              		.cfi_def_cfa_offset 24
 4553 16a4 00AF     		add	r7, sp, #0
 4554              	.LCFI212:
 4555              		.cfi_def_cfa_register 7
 4556 16a6 7860     		str	r0, [r7, #4]
 4557 16a8 0B46     		mov	r3, r1
 4558 16aa 7B80     		strh	r3, [r7, #2]	@ movhi
2505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4559              		.loc 1 2505 0
 4560 16ac 4FF00003 		mov	r3, #0
 4561 16b0 FB73     		strb	r3, [r7, #15]
2506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 4562              		.loc 1 2506 0
 4563 16b2 4FF00003 		mov	r3, #0
 4564 16b6 BB81     		strh	r3, [r7, #12]	@ movhi
 4565 16b8 4FF00003 		mov	r3, #0
 4566 16bc 7B81     		strh	r3, [r7, #10]	@ movhi
2507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 4567              		.loc 1 2511 0
 4568 16be 7B68     		ldr	r3, [r7, #4]
 4569 16c0 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4570 16c2 9AB2     		uxth	r2, r3
 4571 16c4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4572 16c6 1340     		ands	r3, r3, r2
 4573 16c8 BB81     		strh	r3, [r7, #12]	@ movhi
2512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 4574              		.loc 1 2513 0
 4575 16ca 7B68     		ldr	r3, [r7, #4]
 4576 16cc 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4577 16ce 9AB2     		uxth	r2, r3
 4578 16d0 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4579 16d2 1340     		ands	r3, r3, r2
 4580 16d4 7B81     		strh	r3, [r7, #10]	@ movhi
2514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4581              		.loc 1 2514 0
 4582 16d6 BB89     		ldrh	r3, [r7, #12]
 4583 16d8 002B     		cmp	r3, #0
 4584 16da 06D0     		beq	.L130
 4585              		.loc 1 2514 0 is_stmt 0 discriminator 1
 4586 16dc 7B89     		ldrh	r3, [r7, #10]
 4587 16de 002B     		cmp	r3, #0
 4588 16e0 03D0     		beq	.L130
2515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4589              		.loc 1 2516 0 is_stmt 1
 4590 16e2 4FF00103 		mov	r3, #1
 4591 16e6 FB73     		strb	r3, [r7, #15]
 4592 16e8 02E0     		b	.L131
 4593              	.L130:
2517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4594              		.loc 1 2520 0
 4595 16ea 4FF00003 		mov	r3, #0
 4596 16ee FB73     		strb	r3, [r7, #15]
 4597              	.L131:
2521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4598              		.loc 1 2522 0
 4599 16f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4600              		.loc 1 2523 0
 4601 16f2 1846     		mov	r0, r3
 4602 16f4 07F11407 		add	r7, r7, #20
 4603 16f8 BD46     		mov	sp, r7
 4604 16fa 80BC     		pop	{r7}
 4605 16fc 7047     		bx	lr
 4606              		.cfi_endproc
 4607              	.LFE180:
 4609 16fe 00BF     		.align	2
 4610              		.global	TIM_ClearITPendingBit
 4611              		.thumb
 4612              		.thumb_func
 4614              	TIM_ClearITPendingBit:
 4615              	.LFB181:
2524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4616              		.loc 1 2545 0
 4617              		.cfi_startproc
 4618              		@ args = 0, pretend = 0, frame = 8
 4619              		@ frame_needed = 1, uses_anonymous_args = 0
 4620              		@ link register save eliminated.
 4621 1700 80B4     		push	{r7}
 4622              	.LCFI213:
 4623              		.cfi_def_cfa_offset 4
 4624              		.cfi_offset 7, -4
 4625 1702 83B0     		sub	sp, sp, #12
 4626              	.LCFI214:
 4627              		.cfi_def_cfa_offset 16
 4628 1704 00AF     		add	r7, sp, #0
 4629              	.LCFI215:
 4630              		.cfi_def_cfa_register 7
 4631 1706 7860     		str	r0, [r7, #4]
 4632 1708 0B46     		mov	r3, r1
 4633 170a 7B80     		strh	r3, [r7, #2]	@ movhi
2546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 4634              		.loc 1 2550 0
 4635 170c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4636 170e 6FEA0303 		mvn	r3, r3
 4637 1712 9AB2     		uxth	r2, r3
 4638 1714 7B68     		ldr	r3, [r7, #4]
 4639 1716 1A82     		strh	r2, [r3, #16]	@ movhi
2551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4640              		.loc 1 2551 0
 4641 1718 07F10C07 		add	r7, r7, #12
 4642 171c BD46     		mov	sp, r7
 4643 171e 80BC     		pop	{r7}
 4644 1720 7047     		bx	lr
 4645              		.cfi_endproc
 4646              	.LFE181:
 4648 1722 00BF     		.align	2
 4649              		.global	TIM_DMAConfig
 4650              		.thumb
 4651              		.thumb_func
 4653              	TIM_DMAConfig:
 4654              	.LFB182:
2552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4655              		.loc 1 2582 0
 4656              		.cfi_startproc
 4657              		@ args = 0, pretend = 0, frame = 8
 4658              		@ frame_needed = 1, uses_anonymous_args = 0
 4659              		@ link register save eliminated.
 4660 1724 80B4     		push	{r7}
 4661              	.LCFI216:
 4662              		.cfi_def_cfa_offset 4
 4663              		.cfi_offset 7, -4
 4664 1726 83B0     		sub	sp, sp, #12
 4665              	.LCFI217:
 4666              		.cfi_def_cfa_offset 16
 4667 1728 00AF     		add	r7, sp, #0
 4668              	.LCFI218:
 4669              		.cfi_def_cfa_register 7
 4670 172a 7860     		str	r0, [r7, #4]
 4671 172c 1346     		mov	r3, r2
 4672 172e 0A46     		mov	r2, r1	@ movhi
 4673 1730 7A80     		strh	r2, [r7, #2]	@ movhi
 4674 1732 3B80     		strh	r3, [r7, #0]	@ movhi
2583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 4675              		.loc 1 2589 0
 4676 1734 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4677 1736 3B88     		ldrh	r3, [r7, #0]	@ movhi
 4678 1738 1343     		orrs	r3, r3, r2
 4679 173a 9AB2     		uxth	r2, r3
 4680 173c 7B68     		ldr	r3, [r7, #4]
 4681 173e A3F84820 		strh	r2, [r3, #72]	@ movhi
2590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4682              		.loc 1 2590 0
 4683 1742 07F10C07 		add	r7, r7, #12
 4684 1746 BD46     		mov	sp, r7
 4685 1748 80BC     		pop	{r7}
 4686 174a 7047     		bx	lr
 4687              		.cfi_endproc
 4688              	.LFE182:
 4690              		.align	2
 4691              		.global	TIM_DMACmd
 4692              		.thumb
 4693              		.thumb_func
 4695              	TIM_DMACmd:
 4696              	.LFB183:
2591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4697              		.loc 1 2609 0
 4698              		.cfi_startproc
 4699              		@ args = 0, pretend = 0, frame = 8
 4700              		@ frame_needed = 1, uses_anonymous_args = 0
 4701              		@ link register save eliminated.
 4702 174c 80B4     		push	{r7}
 4703              	.LCFI219:
 4704              		.cfi_def_cfa_offset 4
 4705              		.cfi_offset 7, -4
 4706 174e 83B0     		sub	sp, sp, #12
 4707              	.LCFI220:
 4708              		.cfi_def_cfa_offset 16
 4709 1750 00AF     		add	r7, sp, #0
 4710              	.LCFI221:
 4711              		.cfi_def_cfa_register 7
 4712 1752 7860     		str	r0, [r7, #4]
 4713 1754 1346     		mov	r3, r2
 4714 1756 0A46     		mov	r2, r1	@ movhi
 4715 1758 7A80     		strh	r2, [r7, #2]	@ movhi
 4716 175a 7B70     		strb	r3, [r7, #1]
2610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4717              		.loc 1 2615 0
 4718 175c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4719 175e 002B     		cmp	r3, #0
 4720 1760 08D0     		beq	.L135
2616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 4721              		.loc 1 2618 0
 4722 1762 7B68     		ldr	r3, [r7, #4]
 4723 1764 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4724 1766 9AB2     		uxth	r2, r3
 4725 1768 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4726 176a 1343     		orrs	r3, r3, r2
 4727 176c 9AB2     		uxth	r2, r3
 4728 176e 7B68     		ldr	r3, [r7, #4]
 4729 1770 9A81     		strh	r2, [r3, #12]	@ movhi
 4730 1772 0AE0     		b	.L134
 4731              	.L135:
2619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 4732              		.loc 1 2623 0
 4733 1774 7B68     		ldr	r3, [r7, #4]
 4734 1776 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4735 1778 9AB2     		uxth	r2, r3
 4736 177a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4737 177c 6FEA0303 		mvn	r3, r3
 4738 1780 9BB2     		uxth	r3, r3
 4739 1782 1340     		ands	r3, r3, r2
 4740 1784 9AB2     		uxth	r2, r3
 4741 1786 7B68     		ldr	r3, [r7, #4]
 4742 1788 9A81     		strh	r2, [r3, #12]	@ movhi
 4743              	.L134:
2624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4744              		.loc 1 2625 0
 4745 178a 07F10C07 		add	r7, r7, #12
 4746 178e BD46     		mov	sp, r7
 4747 1790 80BC     		pop	{r7}
 4748 1792 7047     		bx	lr
 4749              		.cfi_endproc
 4750              	.LFE183:
 4752              		.align	2
 4753              		.global	TIM_SelectCCDMA
 4754              		.thumb
 4755              		.thumb_func
 4757              	TIM_SelectCCDMA:
 4758              	.LFB184:
2626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4759              		.loc 1 2635 0
 4760              		.cfi_startproc
 4761              		@ args = 0, pretend = 0, frame = 8
 4762              		@ frame_needed = 1, uses_anonymous_args = 0
 4763              		@ link register save eliminated.
 4764 1794 80B4     		push	{r7}
 4765              	.LCFI222:
 4766              		.cfi_def_cfa_offset 4
 4767              		.cfi_offset 7, -4
 4768 1796 83B0     		sub	sp, sp, #12
 4769              	.LCFI223:
 4770              		.cfi_def_cfa_offset 16
 4771 1798 00AF     		add	r7, sp, #0
 4772              	.LCFI224:
 4773              		.cfi_def_cfa_register 7
 4774 179a 7860     		str	r0, [r7, #4]
 4775 179c 0B46     		mov	r3, r1
 4776 179e FB70     		strb	r3, [r7, #3]
2636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4777              		.loc 1 2640 0
 4778 17a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4779 17a2 002B     		cmp	r3, #0
 4780 17a4 08D0     		beq	.L138
2641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 4781              		.loc 1 2643 0
 4782 17a6 7B68     		ldr	r3, [r7, #4]
 4783 17a8 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4784 17aa 9BB2     		uxth	r3, r3
 4785 17ac 43F00803 		orr	r3, r3, #8
 4786 17b0 9AB2     		uxth	r2, r3
 4787 17b2 7B68     		ldr	r3, [r7, #4]
 4788 17b4 9A80     		strh	r2, [r3, #4]	@ movhi
 4789 17b6 07E0     		b	.L137
 4790              	.L138:
2644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 4791              		.loc 1 2648 0
 4792 17b8 7B68     		ldr	r3, [r7, #4]
 4793 17ba 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4794 17bc 9BB2     		uxth	r3, r3
 4795 17be 23F00803 		bic	r3, r3, #8
 4796 17c2 9AB2     		uxth	r2, r3
 4797 17c4 7B68     		ldr	r3, [r7, #4]
 4798 17c6 9A80     		strh	r2, [r3, #4]	@ movhi
 4799              	.L137:
2649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4800              		.loc 1 2650 0
 4801 17c8 07F10C07 		add	r7, r7, #12
 4802 17cc BD46     		mov	sp, r7
 4803 17ce 80BC     		pop	{r7}
 4804 17d0 7047     		bx	lr
 4805              		.cfi_endproc
 4806              	.LFE184:
 4808 17d2 00BF     		.align	2
 4809              		.global	TIM_InternalClockConfig
 4810              		.thumb
 4811              		.thumb_func
 4813              	TIM_InternalClockConfig:
 4814              	.LFB185:
2651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4815              		.loc 1 2674 0
 4816              		.cfi_startproc
 4817              		@ args = 0, pretend = 0, frame = 8
 4818              		@ frame_needed = 1, uses_anonymous_args = 0
 4819              		@ link register save eliminated.
 4820 17d4 80B4     		push	{r7}
 4821              	.LCFI225:
 4822              		.cfi_def_cfa_offset 4
 4823              		.cfi_offset 7, -4
 4824 17d6 83B0     		sub	sp, sp, #12
 4825              	.LCFI226:
 4826              		.cfi_def_cfa_offset 16
 4827 17d8 00AF     		add	r7, sp, #0
 4828              	.LCFI227:
 4829              		.cfi_def_cfa_register 7
 4830 17da 7860     		str	r0, [r7, #4]
2675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 4831              		.loc 1 2679 0
 4832 17dc 7B68     		ldr	r3, [r7, #4]
 4833 17de 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4834 17e0 9BB2     		uxth	r3, r3
 4835 17e2 23F00703 		bic	r3, r3, #7
 4836 17e6 9AB2     		uxth	r2, r3
 4837 17e8 7B68     		ldr	r3, [r7, #4]
 4838 17ea 1A81     		strh	r2, [r3, #8]	@ movhi
2680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4839              		.loc 1 2680 0
 4840 17ec 07F10C07 		add	r7, r7, #12
 4841 17f0 BD46     		mov	sp, r7
 4842 17f2 80BC     		pop	{r7}
 4843 17f4 7047     		bx	lr
 4844              		.cfi_endproc
 4845              	.LFE185:
 4847 17f6 00BF     		.align	2
 4848              		.global	TIM_ITRxExternalClockConfig
 4849              		.thumb
 4850              		.thumb_func
 4852              	TIM_ITRxExternalClockConfig:
 4853              	.LFB186:
2681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4854              		.loc 1 2695 0
 4855              		.cfi_startproc
 4856              		@ args = 0, pretend = 0, frame = 8
 4857              		@ frame_needed = 1, uses_anonymous_args = 0
 4858 17f8 80B5     		push	{r7, lr}
 4859              	.LCFI228:
 4860              		.cfi_def_cfa_offset 8
 4861              		.cfi_offset 14, -4
 4862              		.cfi_offset 7, -8
 4863 17fa 82B0     		sub	sp, sp, #8
 4864              	.LCFI229:
 4865              		.cfi_def_cfa_offset 16
 4866 17fc 00AF     		add	r7, sp, #0
 4867              	.LCFI230:
 4868              		.cfi_def_cfa_register 7
 4869 17fe 7860     		str	r0, [r7, #4]
 4870 1800 0B46     		mov	r3, r1
 4871 1802 7B80     		strh	r3, [r7, #2]	@ movhi
2696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 4872              		.loc 1 2701 0
 4873 1804 7B88     		ldrh	r3, [r7, #2]
 4874 1806 7868     		ldr	r0, [r7, #4]
 4875 1808 1946     		mov	r1, r3
 4876 180a FFF7FEFF 		bl	TIM_SelectInputTrigger
2702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4877              		.loc 1 2704 0
 4878 180e 7B68     		ldr	r3, [r7, #4]
 4879 1810 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4880 1812 9BB2     		uxth	r3, r3
 4881 1814 43F00703 		orr	r3, r3, #7
 4882 1818 9AB2     		uxth	r2, r3
 4883 181a 7B68     		ldr	r3, [r7, #4]
 4884 181c 1A81     		strh	r2, [r3, #8]	@ movhi
2705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4885              		.loc 1 2705 0
 4886 181e 07F10807 		add	r7, r7, #8
 4887 1822 BD46     		mov	sp, r7
 4888 1824 80BD     		pop	{r7, pc}
 4889              		.cfi_endproc
 4890              	.LFE186:
 4892 1826 00BF     		.align	2
 4893              		.global	TIM_TIxExternalClockConfig
 4894              		.thumb
 4895              		.thumb_func
 4897              	TIM_TIxExternalClockConfig:
 4898              	.LFB187:
2706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4899              		.loc 1 2726 0
 4900              		.cfi_startproc
 4901              		@ args = 0, pretend = 0, frame = 16
 4902              		@ frame_needed = 1, uses_anonymous_args = 0
 4903 1828 80B5     		push	{r7, lr}
 4904              	.LCFI231:
 4905              		.cfi_def_cfa_offset 8
 4906              		.cfi_offset 14, -4
 4907              		.cfi_offset 7, -8
 4908 182a 84B0     		sub	sp, sp, #16
 4909              	.LCFI232:
 4910              		.cfi_def_cfa_offset 24
 4911 182c 00AF     		add	r7, sp, #0
 4912              	.LCFI233:
 4913              		.cfi_def_cfa_register 7
 4914 182e F860     		str	r0, [r7, #12]
 4915 1830 7981     		strh	r1, [r7, #10]	@ movhi
 4916 1832 3A81     		strh	r2, [r7, #8]	@ movhi
 4917 1834 FB80     		strh	r3, [r7, #6]	@ movhi
2727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 4918              		.loc 1 2733 0
 4919 1836 7B89     		ldrh	r3, [r7, #10]
 4920 1838 602B     		cmp	r3, #96
 4921 183a 08D1     		bne	.L143
2734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 4922              		.loc 1 2735 0
 4923 183c 3A89     		ldrh	r2, [r7, #8]
 4924 183e FB88     		ldrh	r3, [r7, #6]
 4925 1840 F868     		ldr	r0, [r7, #12]
 4926 1842 1146     		mov	r1, r2
 4927 1844 4FF00102 		mov	r2, #1
 4928 1848 00F0AEF9 		bl	TI2_Config
 4929 184c 07E0     		b	.L144
 4930              	.L143:
2736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 4931              		.loc 1 2739 0
 4932 184e 3A89     		ldrh	r2, [r7, #8]
 4933 1850 FB88     		ldrh	r3, [r7, #6]
 4934 1852 F868     		ldr	r0, [r7, #12]
 4935 1854 1146     		mov	r1, r2
 4936 1856 4FF00102 		mov	r2, #1
 4937 185a 00F065F9 		bl	TI1_Config
 4938              	.L144:
2740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 4939              		.loc 1 2742 0
 4940 185e 7B89     		ldrh	r3, [r7, #10]
 4941 1860 F868     		ldr	r0, [r7, #12]
 4942 1862 1946     		mov	r1, r3
 4943 1864 FFF7FEFF 		bl	TIM_SelectInputTrigger
2743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 4944              		.loc 1 2744 0
 4945 1868 FB68     		ldr	r3, [r7, #12]
 4946 186a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4947 186c 9BB2     		uxth	r3, r3
 4948 186e 43F00703 		orr	r3, r3, #7
 4949 1872 9AB2     		uxth	r2, r3
 4950 1874 FB68     		ldr	r3, [r7, #12]
 4951 1876 1A81     		strh	r2, [r3, #8]	@ movhi
2745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4952              		.loc 1 2745 0
 4953 1878 07F11007 		add	r7, r7, #16
 4954 187c BD46     		mov	sp, r7
 4955 187e 80BD     		pop	{r7, pc}
 4956              		.cfi_endproc
 4957              	.LFE187:
 4959              		.align	2
 4960              		.global	TIM_ETRClockMode1Config
 4961              		.thumb
 4962              		.thumb_func
 4964              	TIM_ETRClockMode1Config:
 4965              	.LFB188:
2746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4966              		.loc 1 2766 0
 4967              		.cfi_startproc
 4968              		@ args = 0, pretend = 0, frame = 24
 4969              		@ frame_needed = 1, uses_anonymous_args = 0
 4970 1880 80B5     		push	{r7, lr}
 4971              	.LCFI234:
 4972              		.cfi_def_cfa_offset 8
 4973              		.cfi_offset 14, -4
 4974              		.cfi_offset 7, -8
 4975 1882 86B0     		sub	sp, sp, #24
 4976              	.LCFI235:
 4977              		.cfi_def_cfa_offset 32
 4978 1884 00AF     		add	r7, sp, #0
 4979              	.LCFI236:
 4980              		.cfi_def_cfa_register 7
 4981 1886 F860     		str	r0, [r7, #12]
 4982 1888 7981     		strh	r1, [r7, #10]	@ movhi
 4983 188a 3A81     		strh	r2, [r7, #8]	@ movhi
 4984 188c FB80     		strh	r3, [r7, #6]	@ movhi
2767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 4985              		.loc 1 2767 0
 4986 188e 4FF00003 		mov	r3, #0
 4987 1892 FB82     		strh	r3, [r7, #22]	@ movhi
2768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 4988              		.loc 1 2775 0
 4989 1894 7989     		ldrh	r1, [r7, #10]
 4990 1896 3A89     		ldrh	r2, [r7, #8]
 4991 1898 FB88     		ldrh	r3, [r7, #6]
 4992 189a F868     		ldr	r0, [r7, #12]
 4993 189c FFF7FEFF 		bl	TIM_ETRConfig
2776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 4994              		.loc 1 2778 0
 4995 18a0 FB68     		ldr	r3, [r7, #12]
 4996 18a2 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4997 18a4 FB82     		strh	r3, [r7, #22]	@ movhi
2779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 4998              		.loc 1 2781 0
 4999 18a6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5000 18a8 23F00703 		bic	r3, r3, #7
 5001 18ac FB82     		strh	r3, [r7, #22]	@ movhi
2782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 5002              		.loc 1 2784 0
 5003 18ae FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5004 18b0 43F00703 		orr	r3, r3, #7
 5005 18b4 FB82     		strh	r3, [r7, #22]	@ movhi
2785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5006              		.loc 1 2787 0
 5007 18b6 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5008 18b8 23F07003 		bic	r3, r3, #112
 5009 18bc FB82     		strh	r3, [r7, #22]	@ movhi
2788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 5010              		.loc 1 2788 0
 5011 18be FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5012 18c0 43F07003 		orr	r3, r3, #112
 5013 18c4 FB82     		strh	r3, [r7, #22]	@ movhi
2789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5014              		.loc 1 2791 0
 5015 18c6 FB68     		ldr	r3, [r7, #12]
 5016 18c8 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5017 18ca 1A81     		strh	r2, [r3, #8]	@ movhi
2792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5018              		.loc 1 2792 0
 5019 18cc 07F11807 		add	r7, r7, #24
 5020 18d0 BD46     		mov	sp, r7
 5021 18d2 80BD     		pop	{r7, pc}
 5022              		.cfi_endproc
 5023              	.LFE188:
 5025              		.align	2
 5026              		.global	TIM_ETRClockMode2Config
 5027              		.thumb
 5028              		.thumb_func
 5030              	TIM_ETRClockMode2Config:
 5031              	.LFB189:
2793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5032              		.loc 1 2813 0
 5033              		.cfi_startproc
 5034              		@ args = 0, pretend = 0, frame = 16
 5035              		@ frame_needed = 1, uses_anonymous_args = 0
 5036 18d4 80B5     		push	{r7, lr}
 5037              	.LCFI237:
 5038              		.cfi_def_cfa_offset 8
 5039              		.cfi_offset 14, -4
 5040              		.cfi_offset 7, -8
 5041 18d6 84B0     		sub	sp, sp, #16
 5042              	.LCFI238:
 5043              		.cfi_def_cfa_offset 24
 5044 18d8 00AF     		add	r7, sp, #0
 5045              	.LCFI239:
 5046              		.cfi_def_cfa_register 7
 5047 18da F860     		str	r0, [r7, #12]
 5048 18dc 7981     		strh	r1, [r7, #10]	@ movhi
 5049 18de 3A81     		strh	r2, [r7, #8]	@ movhi
 5050 18e0 FB80     		strh	r3, [r7, #6]	@ movhi
2814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5051              		.loc 1 2821 0
 5052 18e2 7989     		ldrh	r1, [r7, #10]
 5053 18e4 3A89     		ldrh	r2, [r7, #8]
 5054 18e6 FB88     		ldrh	r3, [r7, #6]
 5055 18e8 F868     		ldr	r0, [r7, #12]
 5056 18ea FFF7FEFF 		bl	TIM_ETRConfig
2822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 5057              		.loc 1 2824 0
 5058 18ee FB68     		ldr	r3, [r7, #12]
 5059 18f0 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5060 18f2 9BB2     		uxth	r3, r3
 5061 18f4 43F48043 		orr	r3, r3, #16384
 5062 18f8 9AB2     		uxth	r2, r3
 5063 18fa FB68     		ldr	r3, [r7, #12]
 5064 18fc 1A81     		strh	r2, [r3, #8]	@ movhi
2825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5065              		.loc 1 2825 0
 5066 18fe 07F11007 		add	r7, r7, #16
 5067 1902 BD46     		mov	sp, r7
 5068 1904 80BD     		pop	{r7, pc}
 5069              		.cfi_endproc
 5070              	.LFE189:
 5072 1906 00BF     		.align	2
 5073              		.global	TIM_SelectInputTrigger
 5074              		.thumb
 5075              		.thumb_func
 5077              	TIM_SelectInputTrigger:
 5078              	.LFB190:
2826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5079              		.loc 1 2880 0
 5080              		.cfi_startproc
 5081              		@ args = 0, pretend = 0, frame = 16
 5082              		@ frame_needed = 1, uses_anonymous_args = 0
 5083              		@ link register save eliminated.
 5084 1908 80B4     		push	{r7}
 5085              	.LCFI240:
 5086              		.cfi_def_cfa_offset 4
 5087              		.cfi_offset 7, -4
 5088 190a 85B0     		sub	sp, sp, #20
 5089              	.LCFI241:
 5090              		.cfi_def_cfa_offset 24
 5091 190c 00AF     		add	r7, sp, #0
 5092              	.LCFI242:
 5093              		.cfi_def_cfa_register 7
 5094 190e 7860     		str	r0, [r7, #4]
 5095 1910 0B46     		mov	r3, r1
 5096 1912 7B80     		strh	r3, [r7, #2]	@ movhi
2881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5097              		.loc 1 2881 0
 5098 1914 4FF00003 		mov	r3, #0
 5099 1918 FB81     		strh	r3, [r7, #14]	@ movhi
2882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5100              		.loc 1 2888 0
 5101 191a 7B68     		ldr	r3, [r7, #4]
 5102 191c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5103 191e FB81     		strh	r3, [r7, #14]	@ movhi
2889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5104              		.loc 1 2891 0
 5105 1920 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5106 1922 23F07003 		bic	r3, r3, #112
 5107 1926 FB81     		strh	r3, [r7, #14]	@ movhi
2892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 5108              		.loc 1 2894 0
 5109 1928 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5110 192a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5111 192c 1343     		orrs	r3, r3, r2
 5112 192e FB81     		strh	r3, [r7, #14]	@ movhi
2895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5113              		.loc 1 2897 0
 5114 1930 7B68     		ldr	r3, [r7, #4]
 5115 1932 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5116 1934 1A81     		strh	r2, [r3, #8]	@ movhi
2898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5117              		.loc 1 2898 0
 5118 1936 07F11407 		add	r7, r7, #20
 5119 193a BD46     		mov	sp, r7
 5120 193c 80BC     		pop	{r7}
 5121 193e 7047     		bx	lr
 5122              		.cfi_endproc
 5123              	.LFE190:
 5125              		.align	2
 5126              		.global	TIM_SelectOutputTrigger
 5127              		.thumb
 5128              		.thumb_func
 5130              	TIM_SelectOutputTrigger:
 5131              	.LFB191:
2899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5132              		.loc 1 2923 0
 5133              		.cfi_startproc
 5134              		@ args = 0, pretend = 0, frame = 8
 5135              		@ frame_needed = 1, uses_anonymous_args = 0
 5136              		@ link register save eliminated.
 5137 1940 80B4     		push	{r7}
 5138              	.LCFI243:
 5139              		.cfi_def_cfa_offset 4
 5140              		.cfi_offset 7, -4
 5141 1942 83B0     		sub	sp, sp, #12
 5142              	.LCFI244:
 5143              		.cfi_def_cfa_offset 16
 5144 1944 00AF     		add	r7, sp, #0
 5145              	.LCFI245:
 5146              		.cfi_def_cfa_register 7
 5147 1946 7860     		str	r0, [r7, #4]
 5148 1948 0B46     		mov	r3, r1
 5149 194a 7B80     		strh	r3, [r7, #2]	@ movhi
2924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 5150              		.loc 1 2929 0
 5151 194c 7B68     		ldr	r3, [r7, #4]
 5152 194e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5153 1950 9BB2     		uxth	r3, r3
 5154 1952 23F07003 		bic	r3, r3, #112
 5155 1956 9AB2     		uxth	r2, r3
 5156 1958 7B68     		ldr	r3, [r7, #4]
 5157 195a 9A80     		strh	r2, [r3, #4]	@ movhi
2930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 5158              		.loc 1 2931 0
 5159 195c 7B68     		ldr	r3, [r7, #4]
 5160 195e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5161 1960 9AB2     		uxth	r2, r3
 5162 1962 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5163 1964 1343     		orrs	r3, r3, r2
 5164 1966 9AB2     		uxth	r2, r3
 5165 1968 7B68     		ldr	r3, [r7, #4]
 5166 196a 9A80     		strh	r2, [r3, #4]	@ movhi
2932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5167              		.loc 1 2932 0
 5168 196c 07F10C07 		add	r7, r7, #12
 5169 1970 BD46     		mov	sp, r7
 5170 1972 80BC     		pop	{r7}
 5171 1974 7047     		bx	lr
 5172              		.cfi_endproc
 5173              	.LFE191:
 5175 1976 00BF     		.align	2
 5176              		.global	TIM_SelectSlaveMode
 5177              		.thumb
 5178              		.thumb_func
 5180              	TIM_SelectSlaveMode:
 5181              	.LFB192:
2933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5182              		.loc 1 2947 0
 5183              		.cfi_startproc
 5184              		@ args = 0, pretend = 0, frame = 8
 5185              		@ frame_needed = 1, uses_anonymous_args = 0
 5186              		@ link register save eliminated.
 5187 1978 80B4     		push	{r7}
 5188              	.LCFI246:
 5189              		.cfi_def_cfa_offset 4
 5190              		.cfi_offset 7, -4
 5191 197a 83B0     		sub	sp, sp, #12
 5192              	.LCFI247:
 5193              		.cfi_def_cfa_offset 16
 5194 197c 00AF     		add	r7, sp, #0
 5195              	.LCFI248:
 5196              		.cfi_def_cfa_register 7
 5197 197e 7860     		str	r0, [r7, #4]
 5198 1980 0B46     		mov	r3, r1
 5199 1982 7B80     		strh	r3, [r7, #2]	@ movhi
2948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 5200              		.loc 1 2953 0
 5201 1984 7B68     		ldr	r3, [r7, #4]
 5202 1986 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5203 1988 9BB2     		uxth	r3, r3
 5204 198a 23F00703 		bic	r3, r3, #7
 5205 198e 9AB2     		uxth	r2, r3
 5206 1990 7B68     		ldr	r3, [r7, #4]
 5207 1992 1A81     		strh	r2, [r3, #8]	@ movhi
2954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 5208              		.loc 1 2956 0
 5209 1994 7B68     		ldr	r3, [r7, #4]
 5210 1996 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5211 1998 9AB2     		uxth	r2, r3
 5212 199a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5213 199c 1343     		orrs	r3, r3, r2
 5214 199e 9AB2     		uxth	r2, r3
 5215 19a0 7B68     		ldr	r3, [r7, #4]
 5216 19a2 1A81     		strh	r2, [r3, #8]	@ movhi
2957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5217              		.loc 1 2957 0
 5218 19a4 07F10C07 		add	r7, r7, #12
 5219 19a8 BD46     		mov	sp, r7
 5220 19aa 80BC     		pop	{r7}
 5221 19ac 7047     		bx	lr
 5222              		.cfi_endproc
 5223              	.LFE192:
 5225 19ae 00BF     		.align	2
 5226              		.global	TIM_SelectMasterSlaveMode
 5227              		.thumb
 5228              		.thumb_func
 5230              	TIM_SelectMasterSlaveMode:
 5231              	.LFB193:
2958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5232              		.loc 1 2970 0
 5233              		.cfi_startproc
 5234              		@ args = 0, pretend = 0, frame = 8
 5235              		@ frame_needed = 1, uses_anonymous_args = 0
 5236              		@ link register save eliminated.
 5237 19b0 80B4     		push	{r7}
 5238              	.LCFI249:
 5239              		.cfi_def_cfa_offset 4
 5240              		.cfi_offset 7, -4
 5241 19b2 83B0     		sub	sp, sp, #12
 5242              	.LCFI250:
 5243              		.cfi_def_cfa_offset 16
 5244 19b4 00AF     		add	r7, sp, #0
 5245              	.LCFI251:
 5246              		.cfi_def_cfa_register 7
 5247 19b6 7860     		str	r0, [r7, #4]
 5248 19b8 0B46     		mov	r3, r1
 5249 19ba 7B80     		strh	r3, [r7, #2]	@ movhi
2971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 5250              		.loc 1 2976 0
 5251 19bc 7B68     		ldr	r3, [r7, #4]
 5252 19be 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5253 19c0 9BB2     		uxth	r3, r3
 5254 19c2 23F08003 		bic	r3, r3, #128
 5255 19c6 9AB2     		uxth	r2, r3
 5256 19c8 7B68     		ldr	r3, [r7, #4]
 5257 19ca 1A81     		strh	r2, [r3, #8]	@ movhi
2977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 5258              		.loc 1 2979 0
 5259 19cc 7B68     		ldr	r3, [r7, #4]
 5260 19ce 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5261 19d0 9AB2     		uxth	r2, r3
 5262 19d2 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5263 19d4 1343     		orrs	r3, r3, r2
 5264 19d6 9AB2     		uxth	r2, r3
 5265 19d8 7B68     		ldr	r3, [r7, #4]
 5266 19da 1A81     		strh	r2, [r3, #8]	@ movhi
2980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5267              		.loc 1 2980 0
 5268 19dc 07F10C07 		add	r7, r7, #12
 5269 19e0 BD46     		mov	sp, r7
 5270 19e2 80BC     		pop	{r7}
 5271 19e4 7047     		bx	lr
 5272              		.cfi_endproc
 5273              	.LFE193:
 5275 19e6 00BF     		.align	2
 5276              		.global	TIM_ETRConfig
 5277              		.thumb
 5278              		.thumb_func
 5280              	TIM_ETRConfig:
 5281              	.LFB194:
2981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
3000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
3001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5282              		.loc 1 3001 0
 5283              		.cfi_startproc
 5284              		@ args = 0, pretend = 0, frame = 24
 5285              		@ frame_needed = 1, uses_anonymous_args = 0
 5286              		@ link register save eliminated.
 5287 19e8 80B4     		push	{r7}
 5288              	.LCFI252:
 5289              		.cfi_def_cfa_offset 4
 5290              		.cfi_offset 7, -4
 5291 19ea 87B0     		sub	sp, sp, #28
 5292              	.LCFI253:
 5293              		.cfi_def_cfa_offset 32
 5294 19ec 00AF     		add	r7, sp, #0
 5295              	.LCFI254:
 5296              		.cfi_def_cfa_register 7
 5297 19ee F860     		str	r0, [r7, #12]
 5298 19f0 7981     		strh	r1, [r7, #10]	@ movhi
 5299 19f2 3A81     		strh	r2, [r7, #8]	@ movhi
 5300 19f4 FB80     		strh	r3, [r7, #6]	@ movhi
3002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5301              		.loc 1 3002 0
 5302 19f6 4FF00003 		mov	r3, #0
 5303 19fa FB82     		strh	r3, [r7, #22]	@ movhi
3003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5304              		.loc 1 3010 0
 5305 19fc FB68     		ldr	r3, [r7, #12]
 5306 19fe 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5307 1a00 FB82     		strh	r3, [r7, #22]	@ movhi
3011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 5308              		.loc 1 3013 0
 5309 1a02 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5310 1a04 DBB2     		uxtb	r3, r3
 5311 1a06 FB82     		strh	r3, [r7, #22]	@ movhi
3014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 5312              		.loc 1 3016 0
 5313 1a08 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5314 1a0a 4FEA0323 		lsl	r3, r3, #8
 5315 1a0e 9AB2     		uxth	r2, r3
 5316 1a10 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5317 1a12 1343     		orrs	r3, r3, r2
 5318 1a14 9AB2     		uxth	r2, r3
 5319 1a16 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5320 1a18 1343     		orrs	r3, r3, r2
 5321 1a1a 9AB2     		uxth	r2, r3
 5322 1a1c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5323 1a1e 1343     		orrs	r3, r3, r2
 5324 1a20 FB82     		strh	r3, [r7, #22]	@ movhi
3017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5325              		.loc 1 3019 0
 5326 1a22 FB68     		ldr	r3, [r7, #12]
 5327 1a24 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5328 1a26 1A81     		strh	r2, [r3, #8]	@ movhi
3020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5329              		.loc 1 3020 0
 5330 1a28 07F11C07 		add	r7, r7, #28
 5331 1a2c BD46     		mov	sp, r7
 5332 1a2e 80BC     		pop	{r7}
 5333 1a30 7047     		bx	lr
 5334              		.cfi_endproc
 5335              	.LFE194:
 5337 1a32 00BF     		.align	2
 5338              		.global	TIM_EncoderInterfaceConfig
 5339              		.thumb
 5340              		.thumb_func
 5342              	TIM_EncoderInterfaceConfig:
 5343              	.LFB195:
3021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5344              		.loc 1 3059 0
 5345              		.cfi_startproc
 5346              		@ args = 0, pretend = 0, frame = 24
 5347              		@ frame_needed = 1, uses_anonymous_args = 0
 5348              		@ link register save eliminated.
 5349 1a34 80B4     		push	{r7}
 5350              	.LCFI255:
 5351              		.cfi_def_cfa_offset 4
 5352              		.cfi_offset 7, -4
 5353 1a36 87B0     		sub	sp, sp, #28
 5354              	.LCFI256:
 5355              		.cfi_def_cfa_offset 32
 5356 1a38 00AF     		add	r7, sp, #0
 5357              	.LCFI257:
 5358              		.cfi_def_cfa_register 7
 5359 1a3a F860     		str	r0, [r7, #12]
 5360 1a3c 7981     		strh	r1, [r7, #10]	@ movhi
 5361 1a3e 3A81     		strh	r2, [r7, #8]	@ movhi
 5362 1a40 FB80     		strh	r3, [r7, #6]	@ movhi
3060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5363              		.loc 1 3060 0
 5364 1a42 4FF00003 		mov	r3, #0
 5365 1a46 FB82     		strh	r3, [r7, #22]	@ movhi
3061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5366              		.loc 1 3061 0
 5367 1a48 4FF00003 		mov	r3, #0
 5368 1a4c BB82     		strh	r3, [r7, #20]	@ movhi
3062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 5369              		.loc 1 3062 0
 5370 1a4e 4FF00003 		mov	r3, #0
 5371 1a52 7B82     		strh	r3, [r7, #18]	@ movhi
3063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5372              		.loc 1 3071 0
 5373 1a54 FB68     		ldr	r3, [r7, #12]
 5374 1a56 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5375 1a58 FB82     		strh	r3, [r7, #22]	@ movhi
3072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5376              		.loc 1 3074 0
 5377 1a5a FB68     		ldr	r3, [r7, #12]
 5378 1a5c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5379 1a5e BB82     		strh	r3, [r7, #20]	@ movhi
3075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5380              		.loc 1 3077 0
 5381 1a60 FB68     		ldr	r3, [r7, #12]
 5382 1a62 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5383 1a64 7B82     		strh	r3, [r7, #18]	@ movhi
3078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5384              		.loc 1 3080 0
 5385 1a66 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5386 1a68 23F00703 		bic	r3, r3, #7
 5387 1a6c FB82     		strh	r3, [r7, #22]	@ movhi
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 5388              		.loc 1 3081 0
 5389 1a6e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5390 1a70 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5391 1a72 1343     		orrs	r3, r3, r2
 5392 1a74 FB82     		strh	r3, [r7, #22]	@ movhi
3082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 5393              		.loc 1 3084 0
 5394 1a76 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5395 1a78 23F44073 		bic	r3, r3, #768
 5396 1a7c 23F00303 		bic	r3, r3, #3
 5397 1a80 BB82     		strh	r3, [r7, #20]	@ movhi
3085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 5398              		.loc 1 3085 0
 5399 1a82 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5400 1a84 43F48073 		orr	r3, r3, #256
 5401 1a88 43F00103 		orr	r3, r3, #1
 5402 1a8c BB82     		strh	r3, [r7, #20]	@ movhi
3086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 5403              		.loc 1 3088 0
 5404 1a8e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5405 1a90 23F02203 		bic	r3, r3, #34
 5406 1a94 7B82     		strh	r3, [r7, #18]	@ movhi
3089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 5407              		.loc 1 3089 0
 5408 1a96 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5409 1a98 4FEA0313 		lsl	r3, r3, #4
 5410 1a9c 9AB2     		uxth	r2, r3
 5411 1a9e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5412 1aa0 1343     		orrs	r3, r3, r2
 5413 1aa2 9AB2     		uxth	r2, r3
 5414 1aa4 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5415 1aa6 1343     		orrs	r3, r3, r2
 5416 1aa8 7B82     		strh	r3, [r7, #18]	@ movhi
3090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5417              		.loc 1 3092 0
 5418 1aaa FB68     		ldr	r3, [r7, #12]
 5419 1aac FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5420 1aae 1A81     		strh	r2, [r3, #8]	@ movhi
3093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5421              		.loc 1 3095 0
 5422 1ab0 FB68     		ldr	r3, [r7, #12]
 5423 1ab2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5424 1ab4 1A83     		strh	r2, [r3, #24]	@ movhi
3096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5425              		.loc 1 3098 0
 5426 1ab6 FB68     		ldr	r3, [r7, #12]
 5427 1ab8 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5428 1aba 1A84     		strh	r2, [r3, #32]	@ movhi
3099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5429              		.loc 1 3099 0
 5430 1abc 07F11C07 		add	r7, r7, #28
 5431 1ac0 BD46     		mov	sp, r7
 5432 1ac2 80BC     		pop	{r7}
 5433 1ac4 7047     		bx	lr
 5434              		.cfi_endproc
 5435              	.LFE195:
 5437 1ac6 00BF     		.align	2
 5438              		.global	TIM_SelectHallSensor
 5439              		.thumb
 5440              		.thumb_func
 5442              	TIM_SelectHallSensor:
 5443              	.LFB196:
3100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5444              		.loc 1 3110 0
 5445              		.cfi_startproc
 5446              		@ args = 0, pretend = 0, frame = 8
 5447              		@ frame_needed = 1, uses_anonymous_args = 0
 5448              		@ link register save eliminated.
 5449 1ac8 80B4     		push	{r7}
 5450              	.LCFI258:
 5451              		.cfi_def_cfa_offset 4
 5452              		.cfi_offset 7, -4
 5453 1aca 83B0     		sub	sp, sp, #12
 5454              	.LCFI259:
 5455              		.cfi_def_cfa_offset 16
 5456 1acc 00AF     		add	r7, sp, #0
 5457              	.LCFI260:
 5458              		.cfi_def_cfa_register 7
 5459 1ace 7860     		str	r0, [r7, #4]
 5460 1ad0 0B46     		mov	r3, r1
 5461 1ad2 FB70     		strb	r3, [r7, #3]
3111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 5462              		.loc 1 3115 0
 5463 1ad4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5464 1ad6 002B     		cmp	r3, #0
 5465 1ad8 08D0     		beq	.L154
3116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 5466              		.loc 1 3118 0
 5467 1ada 7B68     		ldr	r3, [r7, #4]
 5468 1adc 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5469 1ade 9BB2     		uxth	r3, r3
 5470 1ae0 43F08003 		orr	r3, r3, #128
 5471 1ae4 9AB2     		uxth	r2, r3
 5472 1ae6 7B68     		ldr	r3, [r7, #4]
 5473 1ae8 9A80     		strh	r2, [r3, #4]	@ movhi
 5474 1aea 07E0     		b	.L153
 5475              	.L154:
3119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 5476              		.loc 1 3123 0
 5477 1aec 7B68     		ldr	r3, [r7, #4]
 5478 1aee 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5479 1af0 9BB2     		uxth	r3, r3
 5480 1af2 23F08003 		bic	r3, r3, #128
 5481 1af6 9AB2     		uxth	r2, r3
 5482 1af8 7B68     		ldr	r3, [r7, #4]
 5483 1afa 9A80     		strh	r2, [r3, #4]	@ movhi
 5484              	.L153:
3124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5485              		.loc 1 3125 0
 5486 1afc 07F10C07 		add	r7, r7, #12
 5487 1b00 BD46     		mov	sp, r7
 5488 1b02 80BC     		pop	{r7}
 5489 1b04 7047     		bx	lr
 5490              		.cfi_endproc
 5491              	.LFE196:
 5493 1b06 00BF     		.align	2
 5494              		.global	TIM_RemapConfig
 5495              		.thumb
 5496              		.thumb_func
 5498              	TIM_RemapConfig:
 5499              	.LFB197:
3126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5500              		.loc 1 3161 0
 5501              		.cfi_startproc
 5502              		@ args = 0, pretend = 0, frame = 8
 5503              		@ frame_needed = 1, uses_anonymous_args = 0
 5504              		@ link register save eliminated.
 5505 1b08 80B4     		push	{r7}
 5506              	.LCFI261:
 5507              		.cfi_def_cfa_offset 4
 5508              		.cfi_offset 7, -4
 5509 1b0a 83B0     		sub	sp, sp, #12
 5510              	.LCFI262:
 5511              		.cfi_def_cfa_offset 16
 5512 1b0c 00AF     		add	r7, sp, #0
 5513              	.LCFI263:
 5514              		.cfi_def_cfa_register 7
 5515 1b0e 7860     		str	r0, [r7, #4]
 5516 1b10 0B46     		mov	r3, r1
 5517 1b12 7B80     		strh	r3, [r7, #2]	@ movhi
3162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 5518              		.loc 1 3167 0
 5519 1b14 7B68     		ldr	r3, [r7, #4]
 5520 1b16 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5521 1b18 A3F85020 		strh	r2, [r3, #80]	@ movhi
3168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5522              		.loc 1 3168 0
 5523 1b1c 07F10C07 		add	r7, r7, #12
 5524 1b20 BD46     		mov	sp, r7
 5525 1b22 80BC     		pop	{r7}
 5526 1b24 7047     		bx	lr
 5527              		.cfi_endproc
 5528              	.LFE197:
 5530 1b26 00BF     		.align	2
 5531              		.thumb
 5532              		.thumb_func
 5534              	TI1_Config:
 5535              	.LFB198:
3169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5536              		.loc 1 3193 0
 5537              		.cfi_startproc
 5538              		@ args = 0, pretend = 0, frame = 24
 5539              		@ frame_needed = 1, uses_anonymous_args = 0
 5540              		@ link register save eliminated.
 5541 1b28 80B4     		push	{r7}
 5542              	.LCFI264:
 5543              		.cfi_def_cfa_offset 4
 5544              		.cfi_offset 7, -4
 5545 1b2a 87B0     		sub	sp, sp, #28
 5546              	.LCFI265:
 5547              		.cfi_def_cfa_offset 32
 5548 1b2c 00AF     		add	r7, sp, #0
 5549              	.LCFI266:
 5550              		.cfi_def_cfa_register 7
 5551 1b2e F860     		str	r0, [r7, #12]
 5552 1b30 7981     		strh	r1, [r7, #10]	@ movhi
 5553 1b32 3A81     		strh	r2, [r7, #8]	@ movhi
 5554 1b34 FB80     		strh	r3, [r7, #6]	@ movhi
3194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 5555              		.loc 1 3194 0
 5556 1b36 4FF00003 		mov	r3, #0
 5557 1b3a FB82     		strh	r3, [r7, #22]	@ movhi
 5558 1b3c 4FF00003 		mov	r3, #0
 5559 1b40 BB82     		strh	r3, [r7, #20]	@ movhi
3195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 5560              		.loc 1 3197 0
 5561 1b42 FB68     		ldr	r3, [r7, #12]
 5562 1b44 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5563 1b46 9BB2     		uxth	r3, r3
 5564 1b48 23F00103 		bic	r3, r3, #1
 5565 1b4c 9AB2     		uxth	r2, r3
 5566 1b4e FB68     		ldr	r3, [r7, #12]
 5567 1b50 1A84     		strh	r2, [r3, #32]	@ movhi
3198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5568              		.loc 1 3198 0
 5569 1b52 FB68     		ldr	r3, [r7, #12]
 5570 1b54 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5571 1b56 FB82     		strh	r3, [r7, #22]	@ movhi
3199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5572              		.loc 1 3199 0
 5573 1b58 FB68     		ldr	r3, [r7, #12]
 5574 1b5a 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5575 1b5c BB82     		strh	r3, [r7, #20]	@ movhi
3200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 5576              		.loc 1 3202 0
 5577 1b5e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5578 1b60 23F0F303 		bic	r3, r3, #243
 5579 1b64 FB82     		strh	r3, [r7, #22]	@ movhi
3203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5580              		.loc 1 3203 0
 5581 1b66 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5582 1b68 4FEA0313 		lsl	r3, r3, #4
 5583 1b6c 9AB2     		uxth	r2, r3
 5584 1b6e 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5585 1b70 1343     		orrs	r3, r3, r2
 5586 1b72 9AB2     		uxth	r2, r3
 5587 1b74 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5588 1b76 1343     		orrs	r3, r3, r2
 5589 1b78 FB82     		strh	r3, [r7, #22]	@ movhi
3204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 5590              		.loc 1 3206 0
 5591 1b7a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5592 1b7c 23F00A03 		bic	r3, r3, #10
 5593 1b80 BB82     		strh	r3, [r7, #20]	@ movhi
3207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 5594              		.loc 1 3207 0
 5595 1b82 7A89     		ldrh	r2, [r7, #10]	@ movhi
 5596 1b84 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5597 1b86 1343     		orrs	r3, r3, r2
 5598 1b88 9BB2     		uxth	r3, r3
 5599 1b8a 43F00103 		orr	r3, r3, #1
 5600 1b8e BB82     		strh	r3, [r7, #20]	@ movhi
3208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5601              		.loc 1 3210 0
 5602 1b90 FB68     		ldr	r3, [r7, #12]
 5603 1b92 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5604 1b94 1A83     		strh	r2, [r3, #24]	@ movhi
3211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5605              		.loc 1 3211 0
 5606 1b96 FB68     		ldr	r3, [r7, #12]
 5607 1b98 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5608 1b9a 1A84     		strh	r2, [r3, #32]	@ movhi
3212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5609              		.loc 1 3212 0
 5610 1b9c 07F11C07 		add	r7, r7, #28
 5611 1ba0 BD46     		mov	sp, r7
 5612 1ba2 80BC     		pop	{r7}
 5613 1ba4 7047     		bx	lr
 5614              		.cfi_endproc
 5615              	.LFE198:
 5617 1ba6 00BF     		.align	2
 5618              		.thumb
 5619              		.thumb_func
 5621              	TI2_Config:
 5622              	.LFB199:
3213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5623              		.loc 1 3234 0
 5624              		.cfi_startproc
 5625              		@ args = 0, pretend = 0, frame = 24
 5626              		@ frame_needed = 1, uses_anonymous_args = 0
 5627              		@ link register save eliminated.
 5628 1ba8 80B4     		push	{r7}
 5629              	.LCFI267:
 5630              		.cfi_def_cfa_offset 4
 5631              		.cfi_offset 7, -4
 5632 1baa 87B0     		sub	sp, sp, #28
 5633              	.LCFI268:
 5634              		.cfi_def_cfa_offset 32
 5635 1bac 00AF     		add	r7, sp, #0
 5636              	.LCFI269:
 5637              		.cfi_def_cfa_register 7
 5638 1bae F860     		str	r0, [r7, #12]
 5639 1bb0 7981     		strh	r1, [r7, #10]	@ movhi
 5640 1bb2 3A81     		strh	r2, [r7, #8]	@ movhi
 5641 1bb4 FB80     		strh	r3, [r7, #6]	@ movhi
3235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 5642              		.loc 1 3235 0
 5643 1bb6 4FF00003 		mov	r3, #0
 5644 1bba FB82     		strh	r3, [r7, #22]	@ movhi
 5645 1bbc 4FF00003 		mov	r3, #0
 5646 1bc0 BB82     		strh	r3, [r7, #20]	@ movhi
 5647 1bc2 4FF00003 		mov	r3, #0
 5648 1bc6 7B82     		strh	r3, [r7, #18]	@ movhi
3236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 5649              		.loc 1 3238 0
 5650 1bc8 FB68     		ldr	r3, [r7, #12]
 5651 1bca 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5652 1bcc 9BB2     		uxth	r3, r3
 5653 1bce 23F01003 		bic	r3, r3, #16
 5654 1bd2 9AB2     		uxth	r2, r3
 5655 1bd4 FB68     		ldr	r3, [r7, #12]
 5656 1bd6 1A84     		strh	r2, [r3, #32]	@ movhi
3239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5657              		.loc 1 3239 0
 5658 1bd8 FB68     		ldr	r3, [r7, #12]
 5659 1bda 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5660 1bdc FB82     		strh	r3, [r7, #22]	@ movhi
3240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5661              		.loc 1 3240 0
 5662 1bde FB68     		ldr	r3, [r7, #12]
 5663 1be0 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5664 1be2 BB82     		strh	r3, [r7, #20]	@ movhi
3241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 5665              		.loc 1 3241 0
 5666 1be4 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5667 1be6 4FEA0313 		lsl	r3, r3, #4
 5668 1bea 7B82     		strh	r3, [r7, #18]	@ movhi
3242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5669              		.loc 1 3244 0
 5670 1bec FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5671 1bee 23F44073 		bic	r3, r3, #768
 5672 1bf2 4FEA0353 		lsl	r3, r3, #20
 5673 1bf6 4FEA1353 		lsr	r3, r3, #20
 5674 1bfa FB82     		strh	r3, [r7, #22]	@ movhi
3245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 5675              		.loc 1 3245 0
 5676 1bfc FB88     		ldrh	r3, [r7, #6]	@ movhi
 5677 1bfe 4FEA0333 		lsl	r3, r3, #12
 5678 1c02 9AB2     		uxth	r2, r3
 5679 1c04 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5680 1c06 1343     		orrs	r3, r3, r2
 5681 1c08 FB82     		strh	r3, [r7, #22]	@ movhi
3246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 5682              		.loc 1 3246 0
 5683 1c0a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5684 1c0c 4FEA0323 		lsl	r3, r3, #8
 5685 1c10 9AB2     		uxth	r2, r3
 5686 1c12 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5687 1c14 1343     		orrs	r3, r3, r2
 5688 1c16 FB82     		strh	r3, [r7, #22]	@ movhi
3247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 5689              		.loc 1 3249 0
 5690 1c18 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5691 1c1a 23F0A003 		bic	r3, r3, #160
 5692 1c1e BB82     		strh	r3, [r7, #20]	@ movhi
3250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 5693              		.loc 1 3250 0
 5694 1c20 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5695 1c22 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5696 1c24 1343     		orrs	r3, r3, r2
 5697 1c26 9BB2     		uxth	r3, r3
 5698 1c28 43F01003 		orr	r3, r3, #16
 5699 1c2c BB82     		strh	r3, [r7, #20]	@ movhi
3251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 5700              		.loc 1 3253 0
 5701 1c2e FB68     		ldr	r3, [r7, #12]
 5702 1c30 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5703 1c32 1A83     		strh	r2, [r3, #24]	@ movhi
3254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5704              		.loc 1 3254 0
 5705 1c34 FB68     		ldr	r3, [r7, #12]
 5706 1c36 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5707 1c38 1A84     		strh	r2, [r3, #32]	@ movhi
3255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5708              		.loc 1 3255 0
 5709 1c3a 07F11C07 		add	r7, r7, #28
 5710 1c3e BD46     		mov	sp, r7
 5711 1c40 80BC     		pop	{r7}
 5712 1c42 7047     		bx	lr
 5713              		.cfi_endproc
 5714              	.LFE199:
 5716              		.align	2
 5717              		.thumb
 5718              		.thumb_func
 5720              	TI3_Config:
 5721              	.LFB200:
3256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5722              		.loc 1 3276 0
 5723              		.cfi_startproc
 5724              		@ args = 0, pretend = 0, frame = 24
 5725              		@ frame_needed = 1, uses_anonymous_args = 0
 5726              		@ link register save eliminated.
 5727 1c44 80B4     		push	{r7}
 5728              	.LCFI270:
 5729              		.cfi_def_cfa_offset 4
 5730              		.cfi_offset 7, -4
 5731 1c46 87B0     		sub	sp, sp, #28
 5732              	.LCFI271:
 5733              		.cfi_def_cfa_offset 32
 5734 1c48 00AF     		add	r7, sp, #0
 5735              	.LCFI272:
 5736              		.cfi_def_cfa_register 7
 5737 1c4a F860     		str	r0, [r7, #12]
 5738 1c4c 7981     		strh	r1, [r7, #10]	@ movhi
 5739 1c4e 3A81     		strh	r2, [r7, #8]	@ movhi
 5740 1c50 FB80     		strh	r3, [r7, #6]	@ movhi
3277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5741              		.loc 1 3277 0
 5742 1c52 4FF00003 		mov	r3, #0
 5743 1c56 FB82     		strh	r3, [r7, #22]	@ movhi
 5744 1c58 4FF00003 		mov	r3, #0
 5745 1c5c BB82     		strh	r3, [r7, #20]	@ movhi
 5746 1c5e 4FF00003 		mov	r3, #0
 5747 1c62 7B82     		strh	r3, [r7, #18]	@ movhi
3278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 5748              		.loc 1 3280 0
 5749 1c64 FB68     		ldr	r3, [r7, #12]
 5750 1c66 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5751 1c68 9BB2     		uxth	r3, r3
 5752 1c6a 23F48073 		bic	r3, r3, #256
 5753 1c6e 9AB2     		uxth	r2, r3
 5754 1c70 FB68     		ldr	r3, [r7, #12]
 5755 1c72 1A84     		strh	r2, [r3, #32]	@ movhi
3281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5756              		.loc 1 3281 0
 5757 1c74 FB68     		ldr	r3, [r7, #12]
 5758 1c76 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5759 1c78 FB82     		strh	r3, [r7, #22]	@ movhi
3282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5760              		.loc 1 3282 0
 5761 1c7a FB68     		ldr	r3, [r7, #12]
 5762 1c7c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5763 1c7e BB82     		strh	r3, [r7, #20]	@ movhi
3283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 5764              		.loc 1 3283 0
 5765 1c80 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5766 1c82 4FEA0323 		lsl	r3, r3, #8
 5767 1c86 7B82     		strh	r3, [r7, #18]	@ movhi
3284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 5768              		.loc 1 3286 0
 5769 1c88 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5770 1c8a 23F0F303 		bic	r3, r3, #243
 5771 1c8e FB82     		strh	r3, [r7, #22]	@ movhi
3287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5772              		.loc 1 3287 0
 5773 1c90 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5774 1c92 4FEA0313 		lsl	r3, r3, #4
 5775 1c96 9AB2     		uxth	r2, r3
 5776 1c98 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5777 1c9a 1343     		orrs	r3, r3, r2
 5778 1c9c 9AB2     		uxth	r2, r3
 5779 1c9e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5780 1ca0 1343     		orrs	r3, r3, r2
 5781 1ca2 FB82     		strh	r3, [r7, #22]	@ movhi
3288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 5782              		.loc 1 3290 0
 5783 1ca4 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5784 1ca6 23F42063 		bic	r3, r3, #2560
 5785 1caa BB82     		strh	r3, [r7, #20]	@ movhi
3291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 5786              		.loc 1 3291 0
 5787 1cac 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5788 1cae BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5789 1cb0 1343     		orrs	r3, r3, r2
 5790 1cb2 9BB2     		uxth	r3, r3
 5791 1cb4 43F48073 		orr	r3, r3, #256
 5792 1cb8 BB82     		strh	r3, [r7, #20]	@ movhi
3292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5793              		.loc 1 3294 0
 5794 1cba FB68     		ldr	r3, [r7, #12]
 5795 1cbc FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5796 1cbe 9A83     		strh	r2, [r3, #28]	@ movhi
3295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5797              		.loc 1 3295 0
 5798 1cc0 FB68     		ldr	r3, [r7, #12]
 5799 1cc2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5800 1cc4 1A84     		strh	r2, [r3, #32]	@ movhi
3296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5801              		.loc 1 3296 0
 5802 1cc6 07F11C07 		add	r7, r7, #28
 5803 1cca BD46     		mov	sp, r7
 5804 1ccc 80BC     		pop	{r7}
 5805 1cce 7047     		bx	lr
 5806              		.cfi_endproc
 5807              	.LFE200:
 5809              		.align	2
 5810              		.thumb
 5811              		.thumb_func
 5813              	TI4_Config:
 5814              	.LFB201:
3297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5815              		.loc 1 3317 0
 5816              		.cfi_startproc
 5817              		@ args = 0, pretend = 0, frame = 24
 5818              		@ frame_needed = 1, uses_anonymous_args = 0
 5819              		@ link register save eliminated.
 5820 1cd0 80B4     		push	{r7}
 5821              	.LCFI273:
 5822              		.cfi_def_cfa_offset 4
 5823              		.cfi_offset 7, -4
 5824 1cd2 87B0     		sub	sp, sp, #28
 5825              	.LCFI274:
 5826              		.cfi_def_cfa_offset 32
 5827 1cd4 00AF     		add	r7, sp, #0
 5828              	.LCFI275:
 5829              		.cfi_def_cfa_register 7
 5830 1cd6 F860     		str	r0, [r7, #12]
 5831 1cd8 7981     		strh	r1, [r7, #10]	@ movhi
 5832 1cda 3A81     		strh	r2, [r7, #8]	@ movhi
 5833 1cdc FB80     		strh	r3, [r7, #6]	@ movhi
3318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5834              		.loc 1 3318 0
 5835 1cde 4FF00003 		mov	r3, #0
 5836 1ce2 FB82     		strh	r3, [r7, #22]	@ movhi
 5837 1ce4 4FF00003 		mov	r3, #0
 5838 1ce8 BB82     		strh	r3, [r7, #20]	@ movhi
 5839 1cea 4FF00003 		mov	r3, #0
 5840 1cee 7B82     		strh	r3, [r7, #18]	@ movhi
3319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 5841              		.loc 1 3321 0
 5842 1cf0 FB68     		ldr	r3, [r7, #12]
 5843 1cf2 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5844 1cf4 9BB2     		uxth	r3, r3
 5845 1cf6 23F48053 		bic	r3, r3, #4096
 5846 1cfa 9AB2     		uxth	r2, r3
 5847 1cfc FB68     		ldr	r3, [r7, #12]
 5848 1cfe 1A84     		strh	r2, [r3, #32]	@ movhi
3322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5849              		.loc 1 3322 0
 5850 1d00 FB68     		ldr	r3, [r7, #12]
 5851 1d02 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5852 1d04 FB82     		strh	r3, [r7, #22]	@ movhi
3323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5853              		.loc 1 3323 0
 5854 1d06 FB68     		ldr	r3, [r7, #12]
 5855 1d08 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5856 1d0a BB82     		strh	r3, [r7, #20]	@ movhi
3324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 5857              		.loc 1 3324 0
 5858 1d0c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5859 1d0e 4FEA0333 		lsl	r3, r3, #12
 5860 1d12 7B82     		strh	r3, [r7, #18]	@ movhi
3325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5861              		.loc 1 3327 0
 5862 1d14 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5863 1d16 23F44073 		bic	r3, r3, #768
 5864 1d1a 4FEA0353 		lsl	r3, r3, #20
 5865 1d1e 4FEA1353 		lsr	r3, r3, #20
 5866 1d22 FB82     		strh	r3, [r7, #22]	@ movhi
3328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 5867              		.loc 1 3328 0
 5868 1d24 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5869 1d26 4FEA0323 		lsl	r3, r3, #8
 5870 1d2a 9AB2     		uxth	r2, r3
 5871 1d2c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5872 1d2e 1343     		orrs	r3, r3, r2
 5873 1d30 FB82     		strh	r3, [r7, #22]	@ movhi
3329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 5874              		.loc 1 3329 0
 5875 1d32 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5876 1d34 4FEA0333 		lsl	r3, r3, #12
 5877 1d38 9AB2     		uxth	r2, r3
 5878 1d3a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5879 1d3c 1343     		orrs	r3, r3, r2
 5880 1d3e FB82     		strh	r3, [r7, #22]	@ movhi
3330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 5881              		.loc 1 3332 0
 5882 1d40 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5883 1d42 23F40053 		bic	r3, r3, #8192
 5884 1d46 4FEA4343 		lsl	r3, r3, #17
 5885 1d4a 4FEA5343 		lsr	r3, r3, #17
 5886 1d4e BB82     		strh	r3, [r7, #20]	@ movhi
3333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 5887              		.loc 1 3333 0
 5888 1d50 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5889 1d52 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5890 1d54 1343     		orrs	r3, r3, r2
 5891 1d56 9BB2     		uxth	r3, r3
 5892 1d58 43F48053 		orr	r3, r3, #4096
 5893 1d5c BB82     		strh	r3, [r7, #20]	@ movhi
3334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5894              		.loc 1 3336 0
 5895 1d5e FB68     		ldr	r3, [r7, #12]
 5896 1d60 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5897 1d62 9A83     		strh	r2, [r3, #28]	@ movhi
3337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 5898              		.loc 1 3337 0
 5899 1d64 FB68     		ldr	r3, [r7, #12]
 5900 1d66 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5901 1d68 1A84     		strh	r2, [r3, #32]	@ movhi
3338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5902              		.loc 1 3338 0
 5903 1d6a 07F11C07 		add	r7, r7, #28
 5904 1d6e BD46     		mov	sp, r7
 5905 1d70 80BC     		pop	{r7}
 5906 1d72 7047     		bx	lr
 5907              		.cfi_endproc
 5908              	.LFE201:
 5910              	.Letext0:
 5911              		.file 2 "c:\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib/gcc/arm-none-eabi
 5912              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 5913              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_tim.h
 5914              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:19     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:24     .text:00000000 TIM_DeInit
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:276    .text:00000238 TIM_TimeBaseInit
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:421    .text:0000032c TIM_TimeBaseStructInit
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:472    .text:00000368 TIM_PrescalerConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:515    .text:00000390 TIM_CounterModeConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:568    .text:000003c8 TIM_SetCounter
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:604    .text:000003e4 TIM_SetAutoreload
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:640    .text:00000400 TIM_GetCounter
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:675    .text:00000418 TIM_GetPrescaler
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:711    .text:00000434 TIM_UpdateDisableConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:767    .text:00000474 TIM_UpdateRequestConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:823    .text:000004b4 TIM_ARRPreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:879    .text:000004f4 TIM_SelectOnePulseMode
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:929    .text:0000052c TIM_SetClockDivision
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:979    .text:00000564 TIM_Cmd
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1035   .text:000005a4 TIM_OC1Init
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1195   .text:000006a0 TIM_OC2Init
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1369   .text:000007c8 TIM_OC3Init
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1541   .text:000008e8 TIM_OC4Init
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1679   .text:000009c8 TIM_OCStructInit
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1742   .text:00000a1c TIM_SelectOCxM
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1864   .text:00000adc TIM_SetCompare1
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1900   .text:00000af8 TIM_SetCompare2
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1936   .text:00000b14 TIM_SetCompare3
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:1972   .text:00000b30 TIM_SetCompare4
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2008   .text:00000b4c TIM_ForcedOC1Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2061   .text:00000b84 TIM_ForcedOC2Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2116   .text:00000bc4 TIM_ForcedOC3Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2169   .text:00000bfc TIM_ForcedOC4Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2224   .text:00000c3c TIM_OC1PreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2277   .text:00000c74 TIM_OC2PreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2332   .text:00000cb4 TIM_OC3PreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2385   .text:00000cec TIM_OC4PreloadConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2440   .text:00000d2c TIM_OC1FastConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2493   .text:00000d64 TIM_OC2FastConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2548   .text:00000da4 TIM_OC3FastConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2601   .text:00000ddc TIM_OC4FastConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2656   .text:00000e1c TIM_ClearOC1Ref
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2709   .text:00000e54 TIM_ClearOC2Ref
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2765   .text:00000e98 TIM_ClearOC3Ref
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2818   .text:00000ed0 TIM_ClearOC4Ref
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2874   .text:00000f14 TIM_OC1PolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2927   .text:00000f4c TIM_OC1NPolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:2980   .text:00000f84 TIM_OC2PolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3035   .text:00000fc4 TIM_OC2NPolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3090   .text:00001004 TIM_OC3PolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3145   .text:00001044 TIM_OC3NPolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3200   .text:00001084 TIM_OC4PolarityConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3255   .text:000010c4 TIM_CCxCmd
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3321   .text:00001120 TIM_CCxNCmd
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3387   .text:0000117c TIM_ICInit
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5534   .text:00001b28 TI1_Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3840   .text:00001384 TIM_SetIC1Prescaler
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5621   .text:00001ba8 TI2_Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3890   .text:000013bc TIM_SetIC2Prescaler
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5720   .text:00001c44 TI3_Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3942   .text:000013f8 TIM_SetIC3Prescaler
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5813   .text:00001cd0 TI4_Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3992   .text:00001430 TIM_SetIC4Prescaler
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3516   .text:00001224 TIM_ICStructInit
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3567   .text:00001260 TIM_PWMIConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3700   .text:00001324 TIM_GetCapture1
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3735   .text:0000133c TIM_GetCapture2
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3770   .text:00001354 TIM_GetCapture3
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:3805   .text:0000136c TIM_GetCapture4
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4044   .text:0000146c TIM_BDTRConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4115   .text:000014bc TIM_BDTRStructInit
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4174   .text:00001508 TIM_CtrlPWMOutputs
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4232   .text:00001558 TIM_SelectCOM
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4288   .text:00001598 TIM_CCPreloadControl
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4344   .text:000015d8 TIM_ITConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4406   .text:00001620 TIM_GenerateEvent
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4443   .text:0000163c TIM_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4500   .text:0000167c TIM_ClearFlag
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4539   .text:000016a0 TIM_GetITStatus
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4614   .text:00001700 TIM_ClearITPendingBit
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4653   .text:00001724 TIM_DMAConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4695   .text:0000174c TIM_DMACmd
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4757   .text:00001794 TIM_SelectCCDMA
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4813   .text:000017d4 TIM_InternalClockConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4852   .text:000017f8 TIM_ITRxExternalClockConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5077   .text:00001908 TIM_SelectInputTrigger
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4897   .text:00001828 TIM_TIxExternalClockConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:4964   .text:00001880 TIM_ETRClockMode1Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5280   .text:000019e8 TIM_ETRConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5030   .text:000018d4 TIM_ETRClockMode2Config
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5130   .text:00001940 TIM_SelectOutputTrigger
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5180   .text:00001978 TIM_SelectSlaveMode
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5230   .text:000019b0 TIM_SelectMasterSlaveMode
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5342   .text:00001a34 TIM_EncoderInterfaceConfig
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5442   .text:00001ac8 TIM_SelectHallSensor
C:\Users\Alex\AppData\Local\Temp\ccgDHqnI.s:5498   .text:00001b08 TIM_RemapConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
