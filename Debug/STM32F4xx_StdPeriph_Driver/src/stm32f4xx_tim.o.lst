   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.TI1_Config,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	TI1_Config:
  24              	.LFB198:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is the counter
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
1037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
1040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
1043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
1059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
1075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
1090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
1105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
1127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
1130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
1156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
1159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
1185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
1188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
1213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
1216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
1242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
1245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
1272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
1275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
1301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
1304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
1330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
1333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
1360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
1363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
1391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
1394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
1421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
1424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
1451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
1454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
1480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
1483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
1501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
1510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
1513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
1539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
1542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
1559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
1568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
1571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
1598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
1624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
1652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
1679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
1705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
1706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
1732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
1733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
1750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
1756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
1759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
1760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
1763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
1781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
1788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
1791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
1794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
1811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
1818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
1821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
1824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
1900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
1909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
1918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
1921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
1930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
1947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
1948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
1949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
1950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
1951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
1952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
1964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
1965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
1966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
1972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
1974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
1978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
1981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
1983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
1987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
1989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
1992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
1997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
1999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
2004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
2009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
2011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
2026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
2041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
2055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
2069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
2090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
2093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
2115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
2118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
2139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
2142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
2157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
2163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
2166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
2222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
2223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
2224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
2225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
2237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
2238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
2239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
2240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
2241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
2242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
2243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
2262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
2267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
2287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
2292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
2304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
2311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
2316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
2361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
2370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
2375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
2399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
2405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
2432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
2433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
2439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
2441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
2445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
2447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
2474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
2479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
2503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
2504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
2509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
2511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
2512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
2514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
2518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
2520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
2548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
2587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
2607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
2616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
2621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
2638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
2641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
2646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
2677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
2699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
2702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
2731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
2733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
2737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
2740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
2742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
2765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
2773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
2776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
2779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
2782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
2785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
2786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
2789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
2819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
2822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
2879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
2886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
2889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
2892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
2895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
2927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
2929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
2951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
2954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
2974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
2977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
2978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
2999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
3000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
3008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
3011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
3014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
3017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
3018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
3057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
3058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
3059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
3060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
3069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
3072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
3075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
3078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
3079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
3082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
3083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
3086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
3087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
3090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
3093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
3096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
3097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
3108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
3113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
3116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
3121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
3123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
3159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
3165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
3166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  26              		.loc 1 3190 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 4, -12
3191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
3192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
  37              		.loc 1 3194 0
  38 0002 048C     		ldrh	r4, [r0, #32]
  39 0004 24F00104 		bic	r4, r4, #1
  40 0008 2404     		lsls	r4, r4, #16
  41 000a 240C     		lsrs	r4, r4, #16
  42 000c 0484     		strh	r4, [r0, #32]	@ movhi
3195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  43              		.loc 1 3195 0
  44 000e 058B     		ldrh	r5, [r0, #24]
3196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
  45              		.loc 1 3196 0
  46 0010 048C     		ldrh	r4, [r0, #32]
3195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  47              		.loc 1 3195 0
  48 0012 ADB2     		uxth	r5, r5
  49              	.LVL1:
3197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
  50              		.loc 1 3199 0
  51 0014 25F0F305 		bic	r5, r5, #243
  52              	.LVL2:
3196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
  53              		.loc 1 3196 0
  54 0018 A4B2     		uxth	r4, r4
  55              	.LVL3:
3200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  56              		.loc 1 3200 0
  57 001a 2A43     		orrs	r2, r2, r5
  58              	.LVL4:
  59 001c 42EA0312 		orr	r2, r2, r3, lsl #4
3201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  60              		.loc 1 3203 0
  61 0020 24F00A03 		bic	r3, r4, #10
  62              	.LVL5:
3204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  63              		.loc 1 3204 0
  64 0024 43F00103 		orr	r3, r3, #1
3200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  65              		.loc 1 3200 0
  66 0028 92B2     		uxth	r2, r2
  67              	.LVL6:
  68              		.loc 1 3204 0
  69 002a 1943     		orrs	r1, r1, r3
  70              	.LVL7:
3205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
  71              		.loc 1 3207 0
  72 002c 0283     		strh	r2, [r0, #24]	@ movhi
3208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
  73              		.loc 1 3208 0
  74 002e 0184     		strh	r1, [r0, #32]	@ movhi
3209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
  75              		.loc 1 3209 0
  76 0030 30BD     		pop	{r4, r5, pc}
  77              		.cfi_endproc
  78              	.LFE198:
  80              		.section	.text.TI2_Config,"ax",%progbits
  81              		.align	1
  82              		.thumb
  83              		.thumb_func
  85              	TI2_Config:
  86              	.LFB199:
3210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  87              		.loc 1 3231 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL8:
  92 0000 30B5     		push	{r4, r5, lr}
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 12
  95              		.cfi_offset 14, -4
  96              		.cfi_offset 5, -8
  97              		.cfi_offset 4, -12
3232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
3233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
  98              		.loc 1 3235 0
  99 0002 058C     		ldrh	r5, [r0, #32]
 100 0004 25F01005 		bic	r5, r5, #16
 101 0008 2D04     		lsls	r5, r5, #16
 102 000a 2D0C     		lsrs	r5, r5, #16
 103 000c 0584     		strh	r5, [r0, #32]	@ movhi
3236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 104              		.loc 1 3236 0
 105 000e 048B     		ldrh	r4, [r0, #24]
 106              	.LVL9:
3237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 107              		.loc 1 3237 0
 108 0010 058C     		ldrh	r5, [r0, #32]
3238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
3239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 109              		.loc 1 3241 0
 110 0012 24F44074 		bic	r4, r4, #768
 111              	.LVL10:
 112 0016 2405     		lsls	r4, r4, #20
 113 0018 240D     		lsrs	r4, r4, #20
3237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 114              		.loc 1 3237 0
 115 001a ADB2     		uxth	r5, r5
 116              	.LVL11:
3242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 117              		.loc 1 3242 0
 118 001c 44EA0222 		orr	r2, r4, r2, lsl #8
 119              	.LVL12:
3243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 120              		.loc 1 3243 0
 121 0020 42EA0332 		orr	r2, r2, r3, lsl #12
3244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 122              		.loc 1 3246 0
 123 0024 25F0A003 		bic	r3, r5, #160
 124              	.LVL13:
3247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 125              		.loc 1 3247 0
 126 0028 43F01003 		orr	r3, r3, #16
 127 002c 43EA0111 		orr	r1, r3, r1, lsl #4
 128              	.LVL14:
3243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 129              		.loc 1 3243 0
 130 0030 92B2     		uxth	r2, r2
 131              	.LVL15:
 132              		.loc 1 3247 0
 133 0032 89B2     		uxth	r1, r1
 134              	.LVL16:
3248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 135              		.loc 1 3250 0
 136 0034 0283     		strh	r2, [r0, #24]	@ movhi
3251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 137              		.loc 1 3251 0
 138 0036 0184     		strh	r1, [r0, #32]	@ movhi
3252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 139              		.loc 1 3252 0
 140 0038 30BD     		pop	{r4, r5, pc}
 141              		.cfi_endproc
 142              	.LFE199:
 144              		.section	.text.TIM_DeInit,"ax",%progbits
 145              		.align	1
 146              		.global	TIM_DeInit
 147              		.thumb
 148              		.thumb_func
 150              	TIM_DeInit:
 151              	.LFB110:
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 152              		.loc 1 195 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              	.LVL17:
 157 0000 08B5     		push	{r3, lr}
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 14, -4
 161              		.cfi_offset 3, -8
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
 162              		.loc 1 199 0
 163 0002 474B     		ldr	r3, .L20
 164 0004 9842     		cmp	r0, r3
 165 0006 05D1     		bne	.L4
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 166              		.loc 1 201 0
 167 0008 0120     		movs	r0, #1
 168              	.LVL18:
 169 000a 0146     		mov	r1, r0
 170 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 171              		.loc 1 202 0
 172 0010 0120     		movs	r0, #1
 173 0012 3DE0     		b	.L18
 174              	.LVL19:
 175              	.L4:
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
 176              		.loc 1 204 0
 177 0014 B0F1804F 		cmp	r0, #1073741824
 178 0018 05D1     		bne	.L5
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 179              		.loc 1 206 0
 180 001a 0120     		movs	r0, #1
 181              	.LVL20:
 182 001c 0146     		mov	r1, r0
 183 001e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 184              		.loc 1 207 0
 185 0022 0120     		movs	r0, #1
 186 0024 76E0     		b	.L19
 187              	.LVL21:
 188              	.L5:
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
 189              		.loc 1 209 0
 190 0026 3F4B     		ldr	r3, .L20+4
 191 0028 9842     		cmp	r0, r3
 192 002a 05D1     		bne	.L6
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 193              		.loc 1 211 0
 194 002c 0220     		movs	r0, #2
 195              	.LVL22:
 196 002e 0121     		movs	r1, #1
 197 0030 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 198              		.loc 1 212 0
 199 0034 0220     		movs	r0, #2
 200 0036 6DE0     		b	.L19
 201              	.LVL23:
 202              	.L6:
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
 203              		.loc 1 214 0
 204 0038 3B4B     		ldr	r3, .L20+8
 205 003a 9842     		cmp	r0, r3
 206 003c 05D1     		bne	.L7
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 207              		.loc 1 216 0
 208 003e 0420     		movs	r0, #4
 209              	.LVL24:
 210 0040 0121     		movs	r1, #1
 211 0042 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 212              		.loc 1 217 0
 213 0046 0420     		movs	r0, #4
 214 0048 64E0     		b	.L19
 215              	.LVL25:
 216              	.L7:
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 217              		.loc 1 219 0
 218 004a 384B     		ldr	r3, .L20+12
 219 004c 9842     		cmp	r0, r3
 220 004e 05D1     		bne	.L8
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 221              		.loc 1 221 0
 222 0050 0820     		movs	r0, #8
 223              	.LVL26:
 224 0052 0121     		movs	r1, #1
 225 0054 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 226              		.loc 1 222 0
 227 0058 0820     		movs	r0, #8
 228 005a 5BE0     		b	.L19
 229              	.LVL27:
 230              	.L8:
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 231              		.loc 1 224 0
 232 005c 344B     		ldr	r3, .L20+16
 233 005e 9842     		cmp	r0, r3
 234 0060 05D1     		bne	.L9
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 235              		.loc 1 226 0
 236 0062 1020     		movs	r0, #16
 237              	.LVL28:
 238 0064 0121     		movs	r1, #1
 239 0066 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 240              		.loc 1 227 0
 241 006a 1020     		movs	r0, #16
 242 006c 52E0     		b	.L19
 243              	.LVL29:
 244              	.L9:
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 245              		.loc 1 229 0
 246 006e 314B     		ldr	r3, .L20+20
 247 0070 9842     		cmp	r0, r3
 248 0072 05D1     		bne	.L10
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 249              		.loc 1 231 0
 250 0074 2020     		movs	r0, #32
 251              	.LVL30:
 252 0076 0121     		movs	r1, #1
 253 0078 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 254              		.loc 1 232 0
 255 007c 2020     		movs	r0, #32
 256 007e 49E0     		b	.L19
 257              	.LVL31:
 258              	.L10:
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 259              		.loc 1 234 0
 260 0080 2D4B     		ldr	r3, .L20+24
 261 0082 9842     		cmp	r0, r3
 262 0084 09D1     		bne	.L11
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 263              		.loc 1 236 0
 264 0086 0220     		movs	r0, #2
 265              	.LVL32:
 266 0088 0121     		movs	r1, #1
 267 008a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 268              		.loc 1 237 0
 269 008e 0220     		movs	r0, #2
 270              	.L18:
 271 0090 0021     		movs	r1, #0
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 272              		.loc 1 272 0
 273 0092 BDE80840 		pop	{r3, lr}
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 274              		.loc 1 237 0
 275 0096 FFF7FEBF 		b	RCC_APB2PeriphResetCmd
 276              	.LVL33:
 277              	.L11:
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 278              		.loc 1 239 0
 279 009a 284B     		ldr	r3, .L20+28
 280 009c 9842     		cmp	r0, r3
 281 009e 07D1     		bne	.L12
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 282              		.loc 1 241 0
 283 00a0 4FF48030 		mov	r0, #65536
 284              	.LVL34:
 285 00a4 0121     		movs	r1, #1
 286 00a6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 287              		.loc 1 242 0
 288 00aa 4FF48030 		mov	r0, #65536
 289 00ae EFE7     		b	.L18
 290              	.LVL35:
 291              	.L12:
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 292              		.loc 1 244 0
 293 00b0 234B     		ldr	r3, .L20+32
 294 00b2 9842     		cmp	r0, r3
 295 00b4 07D1     		bne	.L13
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 296              		.loc 1 246 0
 297 00b6 4FF40030 		mov	r0, #131072
 298              	.LVL36:
 299 00ba 0121     		movs	r1, #1
 300 00bc FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 301              		.loc 1 247 0
 302 00c0 4FF40030 		mov	r0, #131072
 303 00c4 E4E7     		b	.L18
 304              	.LVL37:
 305              	.L13:
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 306              		.loc 1 249 0
 307 00c6 1F4B     		ldr	r3, .L20+36
 308 00c8 9842     		cmp	r0, r3
 309 00ca 07D1     		bne	.L14
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 310              		.loc 1 251 0
 311 00cc 4FF48020 		mov	r0, #262144
 312              	.LVL38:
 313 00d0 0121     		movs	r1, #1
 314 00d2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 315              		.loc 1 252 0
 316 00d6 4FF48020 		mov	r0, #262144
 317 00da D9E7     		b	.L18
 318              	.LVL39:
 319              	.L14:
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 320              		.loc 1 254 0
 321 00dc 1A4B     		ldr	r3, .L20+40
 322 00de 9842     		cmp	r0, r3
 323 00e0 05D1     		bne	.L15
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 324              		.loc 1 256 0
 325 00e2 4020     		movs	r0, #64
 326              	.LVL40:
 327 00e4 0121     		movs	r1, #1
 328 00e6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 329              		.loc 1 257 0
 330 00ea 4020     		movs	r0, #64
 331 00ec 12E0     		b	.L19
 332              	.LVL41:
 333              	.L15:
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 334              		.loc 1 259 0
 335 00ee 174B     		ldr	r3, .L20+44
 336 00f0 9842     		cmp	r0, r3
 337 00f2 05D1     		bne	.L16
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 338              		.loc 1 261 0
 339 00f4 8020     		movs	r0, #128
 340              	.LVL42:
 341 00f6 0121     		movs	r1, #1
 342 00f8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 343              		.loc 1 262 0
 344 00fc 8020     		movs	r0, #128
 345 00fe 09E0     		b	.L19
 346              	.LVL43:
 347              	.L16:
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 348              		.loc 1 266 0
 349 0100 134B     		ldr	r3, .L20+48
 350 0102 9842     		cmp	r0, r3
 351 0104 0BD1     		bne	.L3
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 352              		.loc 1 268 0
 353 0106 4FF48070 		mov	r0, #256
 354              	.LVL44:
 355 010a 0121     		movs	r1, #1
 356 010c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 357              		.loc 1 269 0
 358 0110 4FF48070 		mov	r0, #256
 359              	.L19:
 360 0114 0021     		movs	r1, #0
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 361              		.loc 1 272 0
 362 0116 BDE80840 		pop	{r3, lr}
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 363              		.loc 1 269 0
 364 011a FFF7FEBF 		b	RCC_APB1PeriphResetCmd
 365              	.LVL45:
 366              	.L3:
 367 011e 08BD     		pop	{r3, pc}
 368              	.L21:
 369              		.align	2
 370              	.L20:
 371 0120 00000140 		.word	1073807360
 372 0124 00040040 		.word	1073742848
 373 0128 00080040 		.word	1073743872
 374 012c 000C0040 		.word	1073744896
 375 0130 00100040 		.word	1073745920
 376 0134 00140040 		.word	1073746944
 377 0138 00040140 		.word	1073808384
 378 013c 00400140 		.word	1073823744
 379 0140 00440140 		.word	1073824768
 380 0144 00480140 		.word	1073825792
 381 0148 00180040 		.word	1073747968
 382 014c 001C0040 		.word	1073748992
 383 0150 00200040 		.word	1073750016
 384              		.cfi_endproc
 385              	.LFE110:
 387              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 388              		.align	1
 389              		.global	TIM_TimeBaseInit
 390              		.thumb
 391              		.thumb_func
 393              	TIM_TimeBaseInit:
 394              	.LFB111:
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 395              		.loc 1 283 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              	.LVL46:
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 400              		.loc 1 293 0
 401 0000 234A     		ldr	r2, .L27
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 402              		.loc 1 291 0
 403 0002 0388     		ldrh	r3, [r0, #0]
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 404              		.loc 1 293 0
 405 0004 C2EB000C 		rsb	ip, r2, r0
 406 0008 DCF10002 		rsbs	r2, ip, #0
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 407              		.loc 1 283 0
 408 000c 30B5     		push	{r4, r5, lr}
 409              	.LCFI3:
 410              		.cfi_def_cfa_offset 12
 411              		.cfi_offset 14, -4
 412              		.cfi_offset 5, -8
 413              		.cfi_offset 4, -12
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 414              		.loc 1 293 0
 415 000e 214C     		ldr	r4, .L27+4
 416 0010 42EB0C02 		adc	r2, r2, ip
 417 0014 A042     		cmp	r0, r4
 418 0016 08BF     		it	eq
 419 0018 42F00102 		orreq	r2, r2, #1
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 420              		.loc 1 291 0
 421 001c 9BB2     		uxth	r3, r3
 422              	.LVL47:
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 423              		.loc 1 293 0
 424 001e C2B9     		cbnz	r2, .L23
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 425              		.loc 1 294 0
 426 0020 A0F18045 		sub	r5, r0, #1073741824
 427 0024 6C42     		rsbs	r4, r5, #0
 428 0026 44EB0504 		adc	r4, r4, r5
 429 002a 1B4D     		ldr	r5, .L27+8
 430 002c A842     		cmp	r0, r5
 431 002e 08BF     		it	eq
 432 0030 44F00104 		orreq	r4, r4, #1
 433 0034 6CB9     		cbnz	r4, .L23
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 434              		.loc 1 295 0
 435 0036 194C     		ldr	r4, .L27+12
 436 0038 C4EB000C 		rsb	ip, r4, r0
 437 003c DCF10004 		rsbs	r4, ip, #0
 438 0040 44EB0C04 		adc	r4, r4, ip
 439 0044 05F50065 		add	r5, r5, #2048
 440 0048 A842     		cmp	r0, r5
 441 004a 08BF     		it	eq
 442 004c 44F00104 		orreq	r4, r4, #1
 443 0050 1CB1     		cbz	r4, .L24
 444              	.L23:
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 445              		.loc 1 299 0
 446 0052 4C88     		ldrh	r4, [r1, #2]
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 447              		.loc 1 298 0
 448 0054 23F07003 		bic	r3, r3, #112
 449              	.LVL48:
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 450              		.loc 1 299 0
 451 0058 2343     		orrs	r3, r3, r4
 452              	.LVL49:
 453              	.L24:
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 454              		.loc 1 302 0
 455 005a 114C     		ldr	r4, .L27+16
 456 005c 114D     		ldr	r5, .L27+20
 457 005e 041B     		subs	r4, r0, r4
 458 0060 18BF     		it	ne
 459 0062 0124     		movne	r4, #1
 460 0064 A842     		cmp	r0, r5
 461 0066 0CBF     		ite	eq
 462 0068 0024     		moveq	r4, #0
 463 006a 04F00104 		andne	r4, r4, #1
 464 006e 24B1     		cbz	r4, .L25
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 465              		.loc 1 305 0
 466 0070 23F44073 		bic	r3, r3, #768
 467              	.LVL50:
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 468              		.loc 1 306 0
 469 0074 0C89     		ldrh	r4, [r1, #8]
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 470              		.loc 1 305 0
 471 0076 9BB2     		uxth	r3, r3
 472              	.LVL51:
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 473              		.loc 1 306 0
 474 0078 2343     		orrs	r3, r3, r4
 475              	.LVL52:
 476              	.L25:
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 477              		.loc 1 309 0
 478 007a 0380     		strh	r3, [r0, #0]	@ movhi
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 479              		.loc 1 312 0
 480 007c 4B68     		ldr	r3, [r1, #4]
 481              	.LVL53:
 482 007e C362     		str	r3, [r0, #44]
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 483              		.loc 1 315 0
 484 0080 0B88     		ldrh	r3, [r1, #0]
 485 0082 0385     		strh	r3, [r0, #40]	@ movhi
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 486              		.loc 1 317 0
 487 0084 0AB1     		cbz	r2, .L26
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 488              		.loc 1 320 0
 489 0086 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 490 0088 0386     		strh	r3, [r0, #48]	@ movhi
 491              	.L26:
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 492              		.loc 1 325 0
 493 008a 0123     		movs	r3, #1
 494 008c 8382     		strh	r3, [r0, #20]	@ movhi
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 495              		.loc 1 326 0
 496 008e 30BD     		pop	{r4, r5, pc}
 497              	.L28:
 498              		.align	2
 499              	.L27:
 500 0090 00000140 		.word	1073807360
 501 0094 00040140 		.word	1073808384
 502 0098 00040040 		.word	1073742848
 503 009c 00080040 		.word	1073743872
 504 00a0 00100040 		.word	1073745920
 505 00a4 00140040 		.word	1073746944
 506              		.cfi_endproc
 507              	.LFE111:
 509              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 510              		.align	1
 511              		.global	TIM_TimeBaseStructInit
 512              		.thumb
 513              		.thumb_func
 515              	TIM_TimeBaseStructInit:
 516              	.LFB112:
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 517              		.loc 1 335 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522              	.LVL54:
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 523              		.loc 1 337 0
 524 0000 4FF0FF33 		mov	r3, #-1
 525 0004 4360     		str	r3, [r0, #4]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 526              		.loc 1 338 0
 527 0006 0023     		movs	r3, #0
 528 0008 0380     		strh	r3, [r0, #0]	@ movhi
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 529              		.loc 1 339 0
 530 000a 0381     		strh	r3, [r0, #8]	@ movhi
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 531              		.loc 1 340 0
 532 000c 4380     		strh	r3, [r0, #2]	@ movhi
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 533              		.loc 1 341 0
 534 000e 8372     		strb	r3, [r0, #10]
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 535              		.loc 1 342 0
 536 0010 7047     		bx	lr
 537              		.cfi_endproc
 538              	.LFE112:
 540              		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 541              		.align	1
 542              		.global	TIM_PrescalerConfig
 543              		.thumb
 544              		.thumb_func
 546              	TIM_PrescalerConfig:
 547              	.LFB113:
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 548              		.loc 1 355 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553              	.LVL55:
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 554              		.loc 1 360 0
 555 0000 0185     		strh	r1, [r0, #40]	@ movhi
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 556              		.loc 1 362 0
 557 0002 8282     		strh	r2, [r0, #20]	@ movhi
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 558              		.loc 1 363 0
 559 0004 7047     		bx	lr
 560              		.cfi_endproc
 561              	.LFE113:
 563              		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 564              		.align	1
 565              		.global	TIM_CounterModeConfig
 566              		.thumb
 567              		.thumb_func
 569              	TIM_CounterModeConfig:
 570              	.LFB114:
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 571              		.loc 1 378 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576              	.LVL56:
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 577              		.loc 1 385 0
 578 0000 0388     		ldrh	r3, [r0, #0]
 579              	.LVL57:
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 580              		.loc 1 388 0
 581 0002 23F07003 		bic	r3, r3, #112
 582              	.LVL58:
 583 0006 1B04     		lsls	r3, r3, #16
 584 0008 1B0C     		lsrs	r3, r3, #16
 585              	.LVL59:
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 586              		.loc 1 391 0
 587 000a 0B43     		orrs	r3, r3, r1
 588              	.LVL60:
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 589              		.loc 1 394 0
 590 000c 0380     		strh	r3, [r0, #0]	@ movhi
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 591              		.loc 1 395 0
 592 000e 7047     		bx	lr
 593              		.cfi_endproc
 594              	.LFE114:
 596              		.section	.text.TIM_SetCounter,"ax",%progbits
 597              		.align	1
 598              		.global	TIM_SetCounter
 599              		.thumb
 600              		.thumb_func
 602              	TIM_SetCounter:
 603              	.LFB115:
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 604              		.loc 1 404 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609              	.LVL61:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 610              		.loc 1 409 0
 611 0000 4162     		str	r1, [r0, #36]
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 612              		.loc 1 410 0
 613 0002 7047     		bx	lr
 614              		.cfi_endproc
 615              	.LFE115:
 617              		.section	.text.TIM_SetAutoreload,"ax",%progbits
 618              		.align	1
 619              		.global	TIM_SetAutoreload
 620              		.thumb
 621              		.thumb_func
 623              	TIM_SetAutoreload:
 624              	.LFB116:
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 625              		.loc 1 419 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL62:
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 631              		.loc 1 424 0
 632 0000 C162     		str	r1, [r0, #44]
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 633              		.loc 1 425 0
 634 0002 7047     		bx	lr
 635              		.cfi_endproc
 636              	.LFE116:
 638              		.section	.text.TIM_GetCounter,"ax",%progbits
 639              		.align	1
 640              		.global	TIM_GetCounter
 641              		.thumb
 642              		.thumb_func
 644              	TIM_GetCounter:
 645              	.LFB117:
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 646              		.loc 1 433 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651              	.LVL63:
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 652              		.loc 1 438 0
 653 0000 406A     		ldr	r0, [r0, #36]
 654              	.LVL64:
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 655              		.loc 1 439 0
 656 0002 7047     		bx	lr
 657              		.cfi_endproc
 658              	.LFE117:
 660              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 661              		.align	1
 662              		.global	TIM_GetPrescaler
 663              		.thumb
 664              		.thumb_func
 666              	TIM_GetPrescaler:
 667              	.LFB118:
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 668              		.loc 1 447 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673              	.LVL65:
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 674              		.loc 1 452 0
 675 0000 008D     		ldrh	r0, [r0, #40]
 676              	.LVL66:
 677 0002 80B2     		uxth	r0, r0
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 678              		.loc 1 453 0
 679 0004 7047     		bx	lr
 680              		.cfi_endproc
 681              	.LFE118:
 683              		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 684              		.align	1
 685              		.global	TIM_UpdateDisableConfig
 686              		.thumb
 687              		.thumb_func
 689              	TIM_UpdateDisableConfig:
 690              	.LFB119:
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 691              		.loc 1 463 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 696              	.LVL67:
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 697              		.loc 1 471 0
 698 0000 0388     		ldrh	r3, [r0, #0]
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 699              		.loc 1 468 0
 700 0002 19B1     		cbz	r1, .L37
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 701              		.loc 1 471 0
 702 0004 9BB2     		uxth	r3, r3
 703 0006 43F00203 		orr	r3, r3, #2
 704 000a 03E0     		b	.L39
 705              	.L37:
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 706              		.loc 1 476 0
 707 000c 23F00203 		bic	r3, r3, #2
 708 0010 1B04     		lsls	r3, r3, #16
 709 0012 1B0C     		lsrs	r3, r3, #16
 710              	.L39:
 711 0014 0380     		strh	r3, [r0, #0]	@ movhi
 712 0016 7047     		bx	lr
 713              		.cfi_endproc
 714              	.LFE119:
 716              		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 717              		.align	1
 718              		.global	TIM_UpdateRequestConfig
 719              		.thumb
 720              		.thumb_func
 722              	TIM_UpdateRequestConfig:
 723              	.LFB120:
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 724              		.loc 1 492 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728              		@ link register save eliminated.
 729              	.LVL68:
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 730              		.loc 1 500 0
 731 0000 0388     		ldrh	r3, [r0, #0]
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 732              		.loc 1 497 0
 733 0002 19B1     		cbz	r1, .L41
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 734              		.loc 1 500 0
 735 0004 9BB2     		uxth	r3, r3
 736 0006 43F00403 		orr	r3, r3, #4
 737 000a 03E0     		b	.L43
 738              	.L41:
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 739              		.loc 1 505 0
 740 000c 23F00403 		bic	r3, r3, #4
 741 0010 1B04     		lsls	r3, r3, #16
 742 0012 1B0C     		lsrs	r3, r3, #16
 743              	.L43:
 744 0014 0380     		strh	r3, [r0, #0]	@ movhi
 745 0016 7047     		bx	lr
 746              		.cfi_endproc
 747              	.LFE120:
 749              		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 750              		.align	1
 751              		.global	TIM_ARRPreloadConfig
 752              		.thumb
 753              		.thumb_func
 755              	TIM_ARRPreloadConfig:
 756              	.LFB121:
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 757              		.loc 1 517 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762              	.LVL69:
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 763              		.loc 1 525 0
 764 0000 0388     		ldrh	r3, [r0, #0]
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 765              		.loc 1 522 0
 766 0002 19B1     		cbz	r1, .L45
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 767              		.loc 1 525 0
 768 0004 9BB2     		uxth	r3, r3
 769 0006 43F08003 		orr	r3, r3, #128
 770 000a 03E0     		b	.L47
 771              	.L45:
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 772              		.loc 1 530 0
 773 000c 23F08003 		bic	r3, r3, #128
 774 0010 1B04     		lsls	r3, r3, #16
 775 0012 1B0C     		lsrs	r3, r3, #16
 776              	.L47:
 777 0014 0380     		strh	r3, [r0, #0]	@ movhi
 778 0016 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE121:
 782              		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 783              		.align	1
 784              		.global	TIM_SelectOnePulseMode
 785              		.thumb
 786              		.thumb_func
 788              	TIM_SelectOnePulseMode:
 789              	.LFB122:
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 790              		.loc 1 544 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795              	.LVL70:
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 796              		.loc 1 550 0
 797 0000 0388     		ldrh	r3, [r0, #0]
 798 0002 23F00803 		bic	r3, r3, #8
 799 0006 1B04     		lsls	r3, r3, #16
 800 0008 1B0C     		lsrs	r3, r3, #16
 801 000a 0380     		strh	r3, [r0, #0]	@ movhi
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 802              		.loc 1 553 0
 803 000c 0388     		ldrh	r3, [r0, #0]
 804 000e 9BB2     		uxth	r3, r3
 805 0010 1943     		orrs	r1, r1, r3
 806              	.LVL71:
 807 0012 0180     		strh	r1, [r0, #0]	@ movhi
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 808              		.loc 1 554 0
 809 0014 7047     		bx	lr
 810              		.cfi_endproc
 811              	.LFE122:
 813              		.section	.text.TIM_SetClockDivision,"ax",%progbits
 814              		.align	1
 815              		.global	TIM_SetClockDivision
 816              		.thumb
 817              		.thumb_func
 819              	TIM_SetClockDivision:
 820              	.LFB123:
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 821              		.loc 1 567 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 826              	.LVL72:
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 827              		.loc 1 573 0
 828 0000 0388     		ldrh	r3, [r0, #0]
 829 0002 23F44073 		bic	r3, r3, #768
 830 0006 1B04     		lsls	r3, r3, #16
 831 0008 1B0C     		lsrs	r3, r3, #16
 832 000a 0380     		strh	r3, [r0, #0]	@ movhi
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 833              		.loc 1 576 0
 834 000c 0388     		ldrh	r3, [r0, #0]
 835 000e 9BB2     		uxth	r3, r3
 836 0010 1943     		orrs	r1, r1, r3
 837              	.LVL73:
 838 0012 0180     		strh	r1, [r0, #0]	@ movhi
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 839              		.loc 1 577 0
 840 0014 7047     		bx	lr
 841              		.cfi_endproc
 842              	.LFE123:
 844              		.section	.text.TIM_Cmd,"ax",%progbits
 845              		.align	1
 846              		.global	TIM_Cmd
 847              		.thumb
 848              		.thumb_func
 850              	TIM_Cmd:
 851              	.LFB124:
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 852              		.loc 1 587 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857              	.LVL74:
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 858              		.loc 1 595 0
 859 0000 0388     		ldrh	r3, [r0, #0]
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 860              		.loc 1 592 0
 861 0002 19B1     		cbz	r1, .L51
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 862              		.loc 1 595 0
 863 0004 9BB2     		uxth	r3, r3
 864 0006 43F00103 		orr	r3, r3, #1
 865 000a 03E0     		b	.L53
 866              	.L51:
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 867              		.loc 1 600 0
 868 000c 23F00103 		bic	r3, r3, #1
 869 0010 1B04     		lsls	r3, r3, #16
 870 0012 1B0C     		lsrs	r3, r3, #16
 871              	.L53:
 872 0014 0380     		strh	r3, [r0, #0]	@ movhi
 873 0016 7047     		bx	lr
 874              		.cfi_endproc
 875              	.LFE124:
 877              		.section	.text.TIM_OC1Init,"ax",%progbits
 878              		.align	1
 879              		.global	TIM_OC1Init
 880              		.thumb
 881              		.thumb_func
 883              	TIM_OC1Init:
 884              	.LFB125:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 885              		.loc 1 666 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 0, uses_anonymous_args = 0
 889              	.LVL75:
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 890              		.loc 1 676 0
 891 0000 038C     		ldrh	r3, [r0, #32]
 892 0002 23F00103 		bic	r3, r3, #1
 893 0006 1B04     		lsls	r3, r3, #16
 894 0008 1B0C     		lsrs	r3, r3, #16
 895 000a 0384     		strh	r3, [r0, #32]	@ movhi
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 896              		.loc 1 666 0
 897 000c 70B5     		push	{r4, r5, r6, lr}
 898              	.LCFI4:
 899              		.cfi_def_cfa_offset 16
 900              		.cfi_offset 14, -4
 901              		.cfi_offset 6, -8
 902              		.cfi_offset 5, -12
 903              		.cfi_offset 4, -16
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 904              		.loc 1 679 0
 905 000e 038C     		ldrh	r3, [r0, #32]
 906              	.LVL76:
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 907              		.loc 1 681 0
 908 0010 8488     		ldrh	r4, [r0, #4]
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 909              		.loc 1 684 0
 910 0012 028B     		ldrh	r2, [r0, #24]
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 911              		.loc 1 690 0
 912 0014 0D88     		ldrh	r5, [r1, #0]
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 913              		.loc 1 695 0
 914 0016 4E88     		ldrh	r6, [r1, #2]
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 915              		.loc 1 688 0
 916 0018 22F07302 		bic	r2, r2, #115
 917 001c 1204     		lsls	r2, r2, #16
 918 001e 120C     		lsrs	r2, r2, #16
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 919              		.loc 1 690 0
 920 0020 2A43     		orrs	r2, r2, r5
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 921              		.loc 1 695 0
 922 0022 8D89     		ldrh	r5, [r1, #12]
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 923              		.loc 1 693 0
 924 0024 23F00203 		bic	r3, r3, #2
 925              	.LVL77:
 926 0028 1B04     		lsls	r3, r3, #16
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 927              		.loc 1 695 0
 928 002a 3543     		orrs	r5, r5, r6
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 929              		.loc 1 693 0
 930 002c 1B0C     		lsrs	r3, r3, #16
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 931              		.loc 1 695 0
 932 002e ADB2     		uxth	r5, r5
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 933              		.loc 1 698 0
 934 0030 2B43     		orrs	r3, r3, r5
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 935              		.loc 1 700 0
 936 0032 104D     		ldr	r5, .L56
 937 0034 461B     		subs	r6, r0, r5
 938 0036 7542     		rsbs	r5, r6, #0
 939 0038 45EB0605 		adc	r5, r5, r6
 940 003c 0E4E     		ldr	r6, .L56+4
 941 003e B042     		cmp	r0, r6
 942 0040 08BF     		it	eq
 943 0042 45F00105 		orreq	r5, r5, #1
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 944              		.loc 1 681 0
 945 0046 A4B2     		uxth	r4, r4
 946              	.LVL78:
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 947              		.loc 1 700 0
 948 0048 75B1     		cbz	r5, .L55
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 949              		.loc 1 710 0
 950 004a CD89     		ldrh	r5, [r1, #14]
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 951              		.loc 1 720 0
 952 004c 4E8A     		ldrh	r6, [r1, #18]
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 953              		.loc 1 708 0
 954 004e 23F00803 		bic	r3, r3, #8
 955              	.LVL79:
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 956              		.loc 1 710 0
 957 0052 2B43     		orrs	r3, r3, r5
 958              	.LVL80:
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 959              		.loc 1 715 0
 960 0054 8D88     		ldrh	r5, [r1, #4]
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 961              		.loc 1 712 0
 962 0056 23F00403 		bic	r3, r3, #4
 963              	.LVL81:
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 964              		.loc 1 715 0
 965 005a 2B43     		orrs	r3, r3, r5
 966              	.LVL82:
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 967              		.loc 1 720 0
 968 005c 0D8A     		ldrh	r5, [r1, #16]
 969 005e 3543     		orrs	r5, r5, r6
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 970              		.loc 1 718 0
 971 0060 24F44074 		bic	r4, r4, #768
 972              	.LVL83:
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 973              		.loc 1 720 0
 974 0064 ADB2     		uxth	r5, r5
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 975              		.loc 1 722 0
 976 0066 2C43     		orrs	r4, r4, r5
 977              	.LVL84:
 978              	.L55:
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 979              		.loc 1 725 0
 980 0068 8480     		strh	r4, [r0, #4]	@ movhi
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 981              		.loc 1 728 0
 982 006a 0283     		strh	r2, [r0, #24]	@ movhi
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 983              		.loc 1 731 0
 984 006c 8A68     		ldr	r2, [r1, #8]
 985              	.LVL85:
 986 006e 4263     		str	r2, [r0, #52]
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 987              		.loc 1 734 0
 988 0070 0384     		strh	r3, [r0, #32]	@ movhi
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 989              		.loc 1 735 0
 990 0072 70BD     		pop	{r4, r5, r6, pc}
 991              	.L57:
 992              		.align	2
 993              	.L56:
 994 0074 00000140 		.word	1073807360
 995 0078 00040140 		.word	1073808384
 996              		.cfi_endproc
 997              	.LFE125:
 999              		.section	.text.TIM_OC2Init,"ax",%progbits
 1000              		.align	1
 1001              		.global	TIM_OC2Init
 1002              		.thumb
 1003              		.thumb_func
 1005              	TIM_OC2Init:
 1006              	.LFB126:
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1007              		.loc 1 747 0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 1011              	.LVL86:
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1012              		.loc 1 757 0
 1013 0000 038C     		ldrh	r3, [r0, #32]
 1014 0002 23F01003 		bic	r3, r3, #16
 1015 0006 1B04     		lsls	r3, r3, #16
 1016 0008 1B0C     		lsrs	r3, r3, #16
 1017 000a 0384     		strh	r3, [r0, #32]	@ movhi
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1018              		.loc 1 747 0
 1019 000c 70B5     		push	{r4, r5, r6, lr}
 1020              	.LCFI5:
 1021              		.cfi_def_cfa_offset 16
 1022              		.cfi_offset 14, -4
 1023              		.cfi_offset 6, -8
 1024              		.cfi_offset 5, -12
 1025              		.cfi_offset 4, -16
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1026              		.loc 1 760 0
 1027 000e 038C     		ldrh	r3, [r0, #32]
 1028              	.LVL87:
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1029              		.loc 1 762 0
 1030 0010 8288     		ldrh	r2, [r0, #4]
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1031              		.loc 1 765 0
 1032 0012 048B     		ldrh	r4, [r0, #24]
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1033              		.loc 1 772 0
 1034 0014 0D88     		ldrh	r5, [r1, #0]
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1035              		.loc 1 782 0
 1036 0016 1D4E     		ldr	r6, .L60
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1037              		.loc 1 769 0
 1038 0018 24F4E644 		bic	r4, r4, #29440
 1039 001c 2404     		lsls	r4, r4, #16
 1040 001e 240C     		lsrs	r4, r4, #16
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1041              		.loc 1 775 0
 1042 0020 23F02003 		bic	r3, r3, #32
 1043              	.LVL88:
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1044              		.loc 1 772 0
 1045 0024 44EA0524 		orr	r4, r4, r5, lsl #8
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1046              		.loc 1 775 0
 1047 0028 1B04     		lsls	r3, r3, #16
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1048              		.loc 1 777 0
 1049 002a 8D89     		ldrh	r5, [r1, #12]
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1050              		.loc 1 775 0
 1051 002c 1B0C     		lsrs	r3, r3, #16
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1052              		.loc 1 777 0
 1053 002e 43EA0513 		orr	r3, r3, r5, lsl #4
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1054              		.loc 1 780 0
 1055 0032 4D88     		ldrh	r5, [r1, #2]
 1056 0034 43EA0513 		orr	r3, r3, r5, lsl #4
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1057              		.loc 1 782 0
 1058 0038 154D     		ldr	r5, .L60+4
 1059 003a C5EB000C 		rsb	ip, r5, r0
 1060 003e DCF10005 		rsbs	r5, ip, #0
 1061 0042 45EB0C05 		adc	r5, r5, ip
 1062 0046 B042     		cmp	r0, r6
 1063 0048 08BF     		it	eq
 1064 004a 45F00105 		orreq	r5, r5, #1
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1065              		.loc 1 762 0
 1066 004e 92B2     		uxth	r2, r2
 1067              	.LVL89:
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1068              		.loc 1 772 0
 1069 0050 A4B2     		uxth	r4, r4
 1070              	.LVL90:
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1071              		.loc 1 780 0
 1072 0052 9BB2     		uxth	r3, r3
 1073              	.LVL91:
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1074              		.loc 1 782 0
 1075 0054 A5B1     		cbz	r5, .L59
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1076              		.loc 1 792 0
 1077 0056 CD89     		ldrh	r5, [r1, #14]
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1078              		.loc 1 790 0
 1079 0058 23F08003 		bic	r3, r3, #128
 1080              	.LVL92:
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1081              		.loc 1 792 0
 1082 005c 43EA0513 		orr	r3, r3, r5, lsl #4
 1083              	.LVL93:
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1084              		.loc 1 794 0
 1085 0060 4FF6BF75 		movw	r5, #65471
 1086 0064 1D40     		ands	r5, r5, r3
 1087              	.LVL94:
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1088              		.loc 1 797 0
 1089 0066 8B88     		ldrh	r3, [r1, #4]
 1090 0068 45EA0313 		orr	r3, r5, r3, lsl #4
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1091              		.loc 1 802 0
 1092 006c 0D8A     		ldrh	r5, [r1, #16]
 1093              	.LVL95:
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1094              		.loc 1 800 0
 1095 006e 22F44062 		bic	r2, r2, #3072
 1096              	.LVL96:
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1097              		.loc 1 802 0
 1098 0072 42EA8502 		orr	r2, r2, r5, lsl #2
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1099              		.loc 1 804 0
 1100 0076 4D8A     		ldrh	r5, [r1, #18]
 1101 0078 42EA8502 		orr	r2, r2, r5, lsl #2
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1102              		.loc 1 797 0
 1103 007c 9BB2     		uxth	r3, r3
 1104              	.LVL97:
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1105              		.loc 1 804 0
 1106 007e 92B2     		uxth	r2, r2
 1107              	.LVL98:
 1108              	.L59:
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1109              		.loc 1 807 0
 1110 0080 8280     		strh	r2, [r0, #4]	@ movhi
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1111              		.loc 1 813 0
 1112 0082 8A68     		ldr	r2, [r1, #8]
 1113              	.LVL99:
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1114              		.loc 1 810 0
 1115 0084 0483     		strh	r4, [r0, #24]	@ movhi
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1116              		.loc 1 813 0
 1117 0086 8263     		str	r2, [r0, #56]
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1118              		.loc 1 816 0
 1119 0088 0384     		strh	r3, [r0, #32]	@ movhi
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1120              		.loc 1 817 0
 1121 008a 70BD     		pop	{r4, r5, r6, pc}
 1122              	.L61:
 1123              		.align	2
 1124              	.L60:
 1125 008c 00040140 		.word	1073808384
 1126 0090 00000140 		.word	1073807360
 1127              		.cfi_endproc
 1128              	.LFE126:
 1130              		.section	.text.TIM_OC3Init,"ax",%progbits
 1131              		.align	1
 1132              		.global	TIM_OC3Init
 1133              		.thumb
 1134              		.thumb_func
 1136              	TIM_OC3Init:
 1137              	.LFB127:
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1138              		.loc 1 828 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              	.LVL100:
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1143              		.loc 1 838 0
 1144 0000 038C     		ldrh	r3, [r0, #32]
 1145 0002 23F48073 		bic	r3, r3, #256
 1146 0006 1B04     		lsls	r3, r3, #16
 1147 0008 1B0C     		lsrs	r3, r3, #16
 1148 000a 0384     		strh	r3, [r0, #32]	@ movhi
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1149              		.loc 1 828 0
 1150 000c 70B5     		push	{r4, r5, r6, lr}
 1151              	.LCFI6:
 1152              		.cfi_def_cfa_offset 16
 1153              		.cfi_offset 14, -4
 1154              		.cfi_offset 6, -8
 1155              		.cfi_offset 5, -12
 1156              		.cfi_offset 4, -16
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1157              		.loc 1 841 0
 1158 000e 038C     		ldrh	r3, [r0, #32]
 1159              	.LVL101:
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1160              		.loc 1 843 0
 1161 0010 8288     		ldrh	r2, [r0, #4]
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1162              		.loc 1 846 0
 1163 0012 848B     		ldrh	r4, [r0, #28]
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1164              		.loc 1 852 0
 1165 0014 0D88     		ldrh	r5, [r1, #0]
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1166              		.loc 1 850 0
 1167 0016 24F07304 		bic	r4, r4, #115
 1168 001a 2404     		lsls	r4, r4, #16
 1169 001c 240C     		lsrs	r4, r4, #16
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1170              		.loc 1 855 0
 1171 001e 23F40073 		bic	r3, r3, #512
 1172              	.LVL102:
 1173 0022 1B04     		lsls	r3, r3, #16
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1174              		.loc 1 852 0
 1175 0024 2C43     		orrs	r4, r4, r5
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1176              		.loc 1 857 0
 1177 0026 8D89     		ldrh	r5, [r1, #12]
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1178              		.loc 1 855 0
 1179 0028 1B0C     		lsrs	r3, r3, #16
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1180              		.loc 1 857 0
 1181 002a 43EA0523 		orr	r3, r3, r5, lsl #8
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1182              		.loc 1 860 0
 1183 002e 4D88     		ldrh	r5, [r1, #2]
 1184 0030 43EA0523 		orr	r3, r3, r5, lsl #8
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1185              		.loc 1 862 0
 1186 0034 134D     		ldr	r5, .L64
 1187 0036 461B     		subs	r6, r0, r5
 1188 0038 7542     		rsbs	r5, r6, #0
 1189 003a 45EB0605 		adc	r5, r5, r6
 1190 003e 124E     		ldr	r6, .L64+4
 1191 0040 B042     		cmp	r0, r6
 1192 0042 08BF     		it	eq
 1193 0044 45F00105 		orreq	r5, r5, #1
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1194              		.loc 1 843 0
 1195 0048 92B2     		uxth	r2, r2
 1196              	.LVL103:
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1197              		.loc 1 860 0
 1198 004a 9BB2     		uxth	r3, r3
 1199              	.LVL104:
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1200              		.loc 1 862 0
 1201 004c A5B1     		cbz	r5, .L63
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1202              		.loc 1 872 0
 1203 004e CD89     		ldrh	r5, [r1, #14]
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1204              		.loc 1 870 0
 1205 0050 23F40063 		bic	r3, r3, #2048
 1206              	.LVL105:
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1207              		.loc 1 872 0
 1208 0054 43EA0523 		orr	r3, r3, r5, lsl #8
 1209              	.LVL106:
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1210              		.loc 1 874 0
 1211 0058 4FF6FF35 		movw	r5, #64511
 1212 005c 1D40     		ands	r5, r5, r3
 1213              	.LVL107:
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1214              		.loc 1 877 0
 1215 005e 8B88     		ldrh	r3, [r1, #4]
 1216 0060 45EA0323 		orr	r3, r5, r3, lsl #8
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1217              		.loc 1 882 0
 1218 0064 0D8A     		ldrh	r5, [r1, #16]
 1219              	.LVL108:
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1220              		.loc 1 880 0
 1221 0066 22F44052 		bic	r2, r2, #12288
 1222              	.LVL109:
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1223              		.loc 1 882 0
 1224 006a 42EA0512 		orr	r2, r2, r5, lsl #4
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1225              		.loc 1 884 0
 1226 006e 4D8A     		ldrh	r5, [r1, #18]
 1227 0070 42EA0512 		orr	r2, r2, r5, lsl #4
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1228              		.loc 1 877 0
 1229 0074 9BB2     		uxth	r3, r3
 1230              	.LVL110:
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1231              		.loc 1 884 0
 1232 0076 92B2     		uxth	r2, r2
 1233              	.LVL111:
 1234              	.L63:
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1235              		.loc 1 887 0
 1236 0078 8280     		strh	r2, [r0, #4]	@ movhi
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1237              		.loc 1 893 0
 1238 007a 8A68     		ldr	r2, [r1, #8]
 1239              	.LVL112:
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1240              		.loc 1 890 0
 1241 007c 8483     		strh	r4, [r0, #28]	@ movhi
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1242              		.loc 1 893 0
 1243 007e C263     		str	r2, [r0, #60]
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1244              		.loc 1 896 0
 1245 0080 0384     		strh	r3, [r0, #32]	@ movhi
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1246              		.loc 1 897 0
 1247 0082 70BD     		pop	{r4, r5, r6, pc}
 1248              	.L65:
 1249              		.align	2
 1250              	.L64:
 1251 0084 00000140 		.word	1073807360
 1252 0088 00040140 		.word	1073808384
 1253              		.cfi_endproc
 1254              	.LFE127:
 1256              		.section	.text.TIM_OC4Init,"ax",%progbits
 1257              		.align	1
 1258              		.global	TIM_OC4Init
 1259              		.thumb
 1260              		.thumb_func
 1262              	TIM_OC4Init:
 1263              	.LFB128:
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1264              		.loc 1 908 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              	.LVL113:
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1269              		.loc 1 918 0
 1270 0000 038C     		ldrh	r3, [r0, #32]
 1271 0002 23F48053 		bic	r3, r3, #4096
 1272 0006 1B04     		lsls	r3, r3, #16
 1273 0008 1B0C     		lsrs	r3, r3, #16
 1274 000a 0384     		strh	r3, [r0, #32]	@ movhi
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1275              		.loc 1 908 0
 1276 000c 70B5     		push	{r4, r5, r6, lr}
 1277              	.LCFI7:
 1278              		.cfi_def_cfa_offset 16
 1279              		.cfi_offset 14, -4
 1280              		.cfi_offset 6, -8
 1281              		.cfi_offset 5, -12
 1282              		.cfi_offset 4, -16
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1283              		.loc 1 921 0
 1284 000e 038C     		ldrh	r3, [r0, #32]
 1285              	.LVL114:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1286              		.loc 1 923 0
 1287 0010 8488     		ldrh	r4, [r0, #4]
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1288              		.loc 1 926 0
 1289 0012 828B     		ldrh	r2, [r0, #28]
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1290              		.loc 1 933 0
 1291 0014 0D88     		ldrh	r5, [r1, #0]
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1292              		.loc 1 943 0
 1293 0016 164E     		ldr	r6, .L68
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1294              		.loc 1 930 0
 1295 0018 22F4E642 		bic	r2, r2, #29440
 1296 001c 1204     		lsls	r2, r2, #16
 1297 001e 120C     		lsrs	r2, r2, #16
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1298              		.loc 1 936 0
 1299 0020 23F40053 		bic	r3, r3, #8192
 1300              	.LVL115:
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1301              		.loc 1 933 0
 1302 0024 42EA0522 		orr	r2, r2, r5, lsl #8
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1303              		.loc 1 936 0
 1304 0028 1B04     		lsls	r3, r3, #16
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1305              		.loc 1 938 0
 1306 002a 8D89     		ldrh	r5, [r1, #12]
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1307              		.loc 1 936 0
 1308 002c 1B0C     		lsrs	r3, r3, #16
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1309              		.loc 1 938 0
 1310 002e 43EA0533 		orr	r3, r3, r5, lsl #12
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1311              		.loc 1 941 0
 1312 0032 4D88     		ldrh	r5, [r1, #2]
 1313 0034 43EA0533 		orr	r3, r3, r5, lsl #12
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1314              		.loc 1 943 0
 1315 0038 0E4D     		ldr	r5, .L68+4
 1316 003a C5EB000C 		rsb	ip, r5, r0
 1317 003e DCF10005 		rsbs	r5, ip, #0
 1318 0042 45EB0C05 		adc	r5, r5, ip
 1319 0046 B042     		cmp	r0, r6
 1320 0048 08BF     		it	eq
 1321 004a 45F00105 		orreq	r5, r5, #1
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1322              		.loc 1 923 0
 1323 004e A4B2     		uxth	r4, r4
 1324              	.LVL116:
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1325              		.loc 1 933 0
 1326 0050 92B2     		uxth	r2, r2
 1327              	.LVL117:
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1328              		.loc 1 941 0
 1329 0052 9BB2     		uxth	r3, r3
 1330              	.LVL118:
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1331              		.loc 1 943 0
 1332 0054 2DB1     		cbz	r5, .L67
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1333              		.loc 1 949 0
 1334 0056 0D8A     		ldrh	r5, [r1, #16]
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1335              		.loc 1 947 0
 1336 0058 24F48044 		bic	r4, r4, #16384
 1337              	.LVL119:
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1338              		.loc 1 949 0
 1339 005c 44EA8514 		orr	r4, r4, r5, lsl #6
 1340              	.LVL120:
 1341 0060 A4B2     		uxth	r4, r4
 1342              	.LVL121:
 1343              	.L67:
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1344              		.loc 1 952 0
 1345 0062 8480     		strh	r4, [r0, #4]	@ movhi
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1346              		.loc 1 955 0
 1347 0064 8283     		strh	r2, [r0, #28]	@ movhi
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1348              		.loc 1 958 0
 1349 0066 8A68     		ldr	r2, [r1, #8]
 1350              	.LVL122:
 1351 0068 0264     		str	r2, [r0, #64]
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1352              		.loc 1 961 0
 1353 006a 0384     		strh	r3, [r0, #32]	@ movhi
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1354              		.loc 1 962 0
 1355 006c 70BD     		pop	{r4, r5, r6, pc}
 1356              	.L69:
 1357 006e 00BF     		.align	2
 1358              	.L68:
 1359 0070 00040140 		.word	1073808384
 1360 0074 00000140 		.word	1073807360
 1361              		.cfi_endproc
 1362              	.LFE128:
 1364              		.section	.text.TIM_OCStructInit,"ax",%progbits
 1365              		.align	1
 1366              		.global	TIM_OCStructInit
 1367              		.thumb
 1368              		.thumb_func
 1370              	TIM_OCStructInit:
 1371              	.LFB129:
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1372              		.loc 1 971 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              		@ link register save eliminated.
 1377              	.LVL123:
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1378              		.loc 1 973 0
 1379 0000 0023     		movs	r3, #0
 1380 0002 0380     		strh	r3, [r0, #0]	@ movhi
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1381              		.loc 1 974 0
 1382 0004 4380     		strh	r3, [r0, #2]	@ movhi
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1383              		.loc 1 975 0
 1384 0006 8380     		strh	r3, [r0, #4]	@ movhi
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1385              		.loc 1 976 0
 1386 0008 8360     		str	r3, [r0, #8]
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1387              		.loc 1 977 0
 1388 000a 8381     		strh	r3, [r0, #12]	@ movhi
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1389              		.loc 1 978 0
 1390 000c C381     		strh	r3, [r0, #14]	@ movhi
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1391              		.loc 1 979 0
 1392 000e 0382     		strh	r3, [r0, #16]	@ movhi
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1393              		.loc 1 980 0
 1394 0010 4382     		strh	r3, [r0, #18]	@ movhi
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1395              		.loc 1 981 0
 1396 0012 7047     		bx	lr
 1397              		.cfi_endproc
 1398              	.LFE129:
 1400              		.section	.text.TIM_SelectOCxM,"ax",%progbits
 1401              		.align	1
 1402              		.global	TIM_SelectOCxM
 1403              		.thumb
 1404              		.thumb_func
 1406              	TIM_SelectOCxM:
 1407              	.LFB130:
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1408              		.loc 1 1007 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              	.LVL124:
 1413 0000 30B5     		push	{r4, r5, lr}
 1414              	.LCFI8:
 1415              		.cfi_def_cfa_offset 12
 1416              		.cfi_offset 14, -4
 1417              		.cfi_offset 5, -8
 1418              		.cfi_offset 4, -12
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1419              		.loc 1 1022 0
 1420 0002 058C     		ldrh	r5, [r0, #32]
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1421              		.loc 1 1019 0
 1422 0004 0124     		movs	r4, #1
 1423 0006 8C40     		lsls	r4, r4, r1
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1424              		.loc 1 1022 0
 1425 0008 ADB2     		uxth	r5, r5
 1426 000a 25EA0404 		bic	r4, r5, r4
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 1427              		.loc 1 1017 0
 1428 000e 00F11803 		add	r3, r0, #24
 1429              	.LVL125:
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1430              		.loc 1 1022 0
 1431 0012 0484     		strh	r4, [r0, #32]	@ movhi
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1432              		.loc 1 1024 0
 1433 0014 D1F10100 		rsbs	r0, r1, #1
 1434              	.LVL126:
 1435 0018 38BF     		it	cc
 1436 001a 0020     		movcc	r0, #0
 1437 001c 0829     		cmp	r1, #8
 1438 001e 08BF     		it	eq
 1439 0020 40F00100 		orreq	r0, r0, #1
 1440 0024 38B1     		cbz	r0, .L72
 1441              	.LVL127:
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 1442              		.loc 1 1026 0
 1443 0026 4908     		lsrs	r1, r1, #1
 1444              	.LVL128:
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1445              		.loc 1 1029 0
 1446 0028 4FF68F70 		movw	r0, #65423
 1447 002c CC58     		ldr	r4, [r1, r3]
 1448 002e 2040     		ands	r0, r0, r4
 1449 0030 C850     		str	r0, [r1, r3]
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1450              		.loc 1 1032 0
 1451 0032 C858     		ldr	r0, [r1, r3]
 1452 0034 0AE0     		b	.L74
 1453              	.LVL129:
 1454              	.L72:
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1455              		.loc 1 1036 0
 1456 0036 0439     		subs	r1, r1, #4
 1457              	.LVL130:
 1458 0038 C1F34E01 		ubfx	r1, r1, #1, #15
 1459              	.LVL131:
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1460              		.loc 1 1039 0
 1461 003c 48F6FF70 		movw	r0, #36863
 1462 0040 CC58     		ldr	r4, [r1, r3]
 1463 0042 2040     		ands	r0, r0, r4
 1464 0044 C850     		str	r0, [r1, r3]
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1465              		.loc 1 1042 0
 1466 0046 1202     		lsls	r2, r2, #8
 1467              	.LVL132:
 1468 0048 C858     		ldr	r0, [r1, r3]
 1469 004a 92B2     		uxth	r2, r2
 1470              	.L74:
 1471 004c 0243     		orrs	r2, r2, r0
 1472 004e CA50     		str	r2, [r1, r3]
 1473 0050 30BD     		pop	{r4, r5, pc}
 1474              		.cfi_endproc
 1475              	.LFE130:
 1477              		.section	.text.TIM_SetCompare1,"ax",%progbits
 1478              		.align	1
 1479              		.global	TIM_SetCompare1
 1480              		.thumb
 1481              		.thumb_func
 1483              	TIM_SetCompare1:
 1484              	.LFB131:
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1485              		.loc 1 1053 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 0
 1488              		@ frame_needed = 0, uses_anonymous_args = 0
 1489              		@ link register save eliminated.
 1490              	.LVL133:
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 1491              		.loc 1 1058 0
 1492 0000 4163     		str	r1, [r0, #52]
1059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1493              		.loc 1 1059 0
 1494 0002 7047     		bx	lr
 1495              		.cfi_endproc
 1496              	.LFE131:
 1498              		.section	.text.TIM_SetCompare2,"ax",%progbits
 1499              		.align	1
 1500              		.global	TIM_SetCompare2
 1501              		.thumb
 1502              		.thumb_func
 1504              	TIM_SetCompare2:
 1505              	.LFB132:
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1506              		.loc 1 1069 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 1510              		@ link register save eliminated.
 1511              	.LVL134:
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 1512              		.loc 1 1074 0
 1513 0000 8163     		str	r1, [r0, #56]
1075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1514              		.loc 1 1075 0
 1515 0002 7047     		bx	lr
 1516              		.cfi_endproc
 1517              	.LFE132:
 1519              		.section	.text.TIM_SetCompare3,"ax",%progbits
 1520              		.align	1
 1521              		.global	TIM_SetCompare3
 1522              		.thumb
 1523              		.thumb_func
 1525              	TIM_SetCompare3:
 1526              	.LFB133:
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1527              		.loc 1 1084 0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531              		@ link register save eliminated.
 1532              	.LVL135:
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 1533              		.loc 1 1089 0
 1534 0000 C163     		str	r1, [r0, #60]
1090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1535              		.loc 1 1090 0
 1536 0002 7047     		bx	lr
 1537              		.cfi_endproc
 1538              	.LFE133:
 1540              		.section	.text.TIM_SetCompare4,"ax",%progbits
 1541              		.align	1
 1542              		.global	TIM_SetCompare4
 1543              		.thumb
 1544              		.thumb_func
 1546              	TIM_SetCompare4:
 1547              	.LFB134:
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1548              		.loc 1 1099 0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              		@ link register save eliminated.
 1553              	.LVL136:
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 1554              		.loc 1 1104 0
 1555 0000 0164     		str	r1, [r0, #64]
1105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1556              		.loc 1 1105 0
 1557 0002 7047     		bx	lr
 1558              		.cfi_endproc
 1559              	.LFE134:
 1561              		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 1562              		.align	1
 1563              		.global	TIM_ForcedOC1Config
 1564              		.thumb
 1565              		.thumb_func
 1567              	TIM_ForcedOC1Config:
 1568              	.LFB135:
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1569              		.loc 1 1117 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              		@ link register save eliminated.
 1574              	.LVL137:
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1575              		.loc 1 1123 0
 1576 0000 038B     		ldrh	r3, [r0, #24]
 1577              	.LVL138:
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 1578              		.loc 1 1126 0
 1579 0002 23F07003 		bic	r3, r3, #112
 1580              	.LVL139:
 1581 0006 1B04     		lsls	r3, r3, #16
 1582 0008 1B0C     		lsrs	r3, r3, #16
 1583              	.LVL140:
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 1584              		.loc 1 1129 0
 1585 000a 0B43     		orrs	r3, r3, r1
 1586              	.LVL141:
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1587              		.loc 1 1132 0
 1588 000c 0383     		strh	r3, [r0, #24]	@ movhi
1133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1589              		.loc 1 1133 0
 1590 000e 7047     		bx	lr
 1591              		.cfi_endproc
 1592              	.LFE135:
 1594              		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 1595              		.align	1
 1596              		.global	TIM_ForcedOC2Config
 1597              		.thumb
 1598              		.thumb_func
 1600              	TIM_ForcedOC2Config:
 1601              	.LFB136:
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1602              		.loc 1 1146 0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
 1606              		@ link register save eliminated.
 1607              	.LVL142:
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1608              		.loc 1 1152 0
 1609 0000 038B     		ldrh	r3, [r0, #24]
 1610              	.LVL143:
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 1611              		.loc 1 1155 0
 1612 0002 23F4E043 		bic	r3, r3, #28672
 1613              	.LVL144:
 1614 0006 1B04     		lsls	r3, r3, #16
 1615 0008 1B0C     		lsrs	r3, r3, #16
 1616              	.LVL145:
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 1617              		.loc 1 1158 0
 1618 000a 43EA0123 		orr	r3, r3, r1, lsl #8
 1619              	.LVL146:
 1620 000e 9BB2     		uxth	r3, r3
 1621              	.LVL147:
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1622              		.loc 1 1161 0
 1623 0010 0383     		strh	r3, [r0, #24]	@ movhi
1162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1624              		.loc 1 1162 0
 1625 0012 7047     		bx	lr
 1626              		.cfi_endproc
 1627              	.LFE136:
 1629              		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 1630              		.align	1
 1631              		.global	TIM_ForcedOC3Config
 1632              		.thumb
 1633              		.thumb_func
 1635              	TIM_ForcedOC3Config:
 1636              	.LFB137:
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1637              		.loc 1 1174 0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 0
 1640              		@ frame_needed = 0, uses_anonymous_args = 0
 1641              		@ link register save eliminated.
 1642              	.LVL148:
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1643              		.loc 1 1181 0
 1644 0000 838B     		ldrh	r3, [r0, #28]
 1645              	.LVL149:
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 1646              		.loc 1 1184 0
 1647 0002 23F07003 		bic	r3, r3, #112
 1648              	.LVL150:
 1649 0006 1B04     		lsls	r3, r3, #16
 1650 0008 1B0C     		lsrs	r3, r3, #16
 1651              	.LVL151:
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 1652              		.loc 1 1187 0
 1653 000a 0B43     		orrs	r3, r3, r1
 1654              	.LVL152:
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1655              		.loc 1 1190 0
 1656 000c 8383     		strh	r3, [r0, #28]	@ movhi
1191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1657              		.loc 1 1191 0
 1658 000e 7047     		bx	lr
 1659              		.cfi_endproc
 1660              	.LFE137:
 1662              		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 1663              		.align	1
 1664              		.global	TIM_ForcedOC4Config
 1665              		.thumb
 1666              		.thumb_func
 1668              	TIM_ForcedOC4Config:
 1669              	.LFB138:
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1670              		.loc 1 1203 0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 0, uses_anonymous_args = 0
 1674              		@ link register save eliminated.
 1675              	.LVL153:
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1676              		.loc 1 1209 0
 1677 0000 838B     		ldrh	r3, [r0, #28]
 1678              	.LVL154:
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 1679              		.loc 1 1212 0
 1680 0002 23F4E043 		bic	r3, r3, #28672
 1681              	.LVL155:
 1682 0006 1B04     		lsls	r3, r3, #16
 1683 0008 1B0C     		lsrs	r3, r3, #16
 1684              	.LVL156:
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 1685              		.loc 1 1215 0
 1686 000a 43EA0123 		orr	r3, r3, r1, lsl #8
 1687              	.LVL157:
 1688 000e 9BB2     		uxth	r3, r3
 1689              	.LVL158:
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1690              		.loc 1 1218 0
 1691 0010 8383     		strh	r3, [r0, #28]	@ movhi
1219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1692              		.loc 1 1219 0
 1693 0012 7047     		bx	lr
 1694              		.cfi_endproc
 1695              	.LFE138:
 1697              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 1698              		.align	1
 1699              		.global	TIM_OC1PreloadConfig
 1700              		.thumb
 1701              		.thumb_func
 1703              	TIM_OC1PreloadConfig:
 1704              	.LFB139:
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1705              		.loc 1 1231 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 0
 1708              		@ frame_needed = 0, uses_anonymous_args = 0
 1709              		@ link register save eliminated.
 1710              	.LVL159:
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1711              		.loc 1 1238 0
 1712 0000 038B     		ldrh	r3, [r0, #24]
 1713              	.LVL160:
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 1714              		.loc 1 1241 0
 1715 0002 23F00803 		bic	r3, r3, #8
 1716              	.LVL161:
 1717 0006 1B04     		lsls	r3, r3, #16
 1718 0008 1B0C     		lsrs	r3, r3, #16
 1719              	.LVL162:
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 1720              		.loc 1 1244 0
 1721 000a 0B43     		orrs	r3, r3, r1
 1722              	.LVL163:
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1723              		.loc 1 1247 0
 1724 000c 0383     		strh	r3, [r0, #24]	@ movhi
1248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1725              		.loc 1 1248 0
 1726 000e 7047     		bx	lr
 1727              		.cfi_endproc
 1728              	.LFE139:
 1730              		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 1731              		.align	1
 1732              		.global	TIM_OC2PreloadConfig
 1733              		.thumb
 1734              		.thumb_func
 1736              	TIM_OC2PreloadConfig:
 1737              	.LFB140:
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1738              		.loc 1 1261 0
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 0
 1741              		@ frame_needed = 0, uses_anonymous_args = 0
 1742              		@ link register save eliminated.
 1743              	.LVL164:
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1744              		.loc 1 1268 0
 1745 0000 038B     		ldrh	r3, [r0, #24]
 1746              	.LVL165:
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 1747              		.loc 1 1271 0
 1748 0002 23F40063 		bic	r3, r3, #2048
 1749              	.LVL166:
 1750 0006 1B04     		lsls	r3, r3, #16
 1751 0008 1B0C     		lsrs	r3, r3, #16
 1752              	.LVL167:
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 1753              		.loc 1 1274 0
 1754 000a 43EA0123 		orr	r3, r3, r1, lsl #8
 1755              	.LVL168:
 1756 000e 9BB2     		uxth	r3, r3
 1757              	.LVL169:
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1758              		.loc 1 1277 0
 1759 0010 0383     		strh	r3, [r0, #24]	@ movhi
1278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1760              		.loc 1 1278 0
 1761 0012 7047     		bx	lr
 1762              		.cfi_endproc
 1763              	.LFE140:
 1765              		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 1766              		.align	1
 1767              		.global	TIM_OC3PreloadConfig
 1768              		.thumb
 1769              		.thumb_func
 1771              	TIM_OC3PreloadConfig:
 1772              	.LFB141:
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1773              		.loc 1 1290 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              		@ link register save eliminated.
 1778              	.LVL170:
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1779              		.loc 1 1297 0
 1780 0000 838B     		ldrh	r3, [r0, #28]
 1781              	.LVL171:
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 1782              		.loc 1 1300 0
 1783 0002 23F00803 		bic	r3, r3, #8
 1784              	.LVL172:
 1785 0006 1B04     		lsls	r3, r3, #16
 1786 0008 1B0C     		lsrs	r3, r3, #16
 1787              	.LVL173:
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 1788              		.loc 1 1303 0
 1789 000a 0B43     		orrs	r3, r3, r1
 1790              	.LVL174:
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1791              		.loc 1 1306 0
 1792 000c 8383     		strh	r3, [r0, #28]	@ movhi
1307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1793              		.loc 1 1307 0
 1794 000e 7047     		bx	lr
 1795              		.cfi_endproc
 1796              	.LFE141:
 1798              		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 1799              		.align	1
 1800              		.global	TIM_OC4PreloadConfig
 1801              		.thumb
 1802              		.thumb_func
 1804              	TIM_OC4PreloadConfig:
 1805              	.LFB142:
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1806              		.loc 1 1319 0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 0
 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 1810              		@ link register save eliminated.
 1811              	.LVL175:
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1812              		.loc 1 1326 0
 1813 0000 838B     		ldrh	r3, [r0, #28]
 1814              	.LVL176:
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 1815              		.loc 1 1329 0
 1816 0002 23F40063 		bic	r3, r3, #2048
 1817              	.LVL177:
 1818 0006 1B04     		lsls	r3, r3, #16
 1819 0008 1B0C     		lsrs	r3, r3, #16
 1820              	.LVL178:
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 1821              		.loc 1 1332 0
 1822 000a 43EA0123 		orr	r3, r3, r1, lsl #8
 1823              	.LVL179:
 1824 000e 9BB2     		uxth	r3, r3
 1825              	.LVL180:
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1826              		.loc 1 1335 0
 1827 0010 8383     		strh	r3, [r0, #28]	@ movhi
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1828              		.loc 1 1336 0
 1829 0012 7047     		bx	lr
 1830              		.cfi_endproc
 1831              	.LFE142:
 1833              		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 1834              		.align	1
 1835              		.global	TIM_OC1FastConfig
 1836              		.thumb
 1837              		.thumb_func
 1839              	TIM_OC1FastConfig:
 1840              	.LFB143:
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1841              		.loc 1 1348 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
 1846              	.LVL181:
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1847              		.loc 1 1356 0
 1848 0000 038B     		ldrh	r3, [r0, #24]
 1849              	.LVL182:
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 1850              		.loc 1 1359 0
 1851 0002 23F00403 		bic	r3, r3, #4
 1852              	.LVL183:
 1853 0006 1B04     		lsls	r3, r3, #16
 1854 0008 1B0C     		lsrs	r3, r3, #16
 1855              	.LVL184:
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 1856              		.loc 1 1362 0
 1857 000a 0B43     		orrs	r3, r3, r1
 1858              	.LVL185:
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1859              		.loc 1 1365 0
 1860 000c 0383     		strh	r3, [r0, #24]	@ movhi
1366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1861              		.loc 1 1366 0
 1862 000e 7047     		bx	lr
 1863              		.cfi_endproc
 1864              	.LFE143:
 1866              		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 1867              		.align	1
 1868              		.global	TIM_OC2FastConfig
 1869              		.thumb
 1870              		.thumb_func
 1872              	TIM_OC2FastConfig:
 1873              	.LFB144:
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1874              		.loc 1 1379 0
 1875              		.cfi_startproc
 1876              		@ args = 0, pretend = 0, frame = 0
 1877              		@ frame_needed = 0, uses_anonymous_args = 0
 1878              		@ link register save eliminated.
 1879              	.LVL186:
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1880              		.loc 1 1387 0
 1881 0000 038B     		ldrh	r3, [r0, #24]
 1882              	.LVL187:
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 1883              		.loc 1 1390 0
 1884 0002 23F48063 		bic	r3, r3, #1024
 1885              	.LVL188:
 1886 0006 1B04     		lsls	r3, r3, #16
 1887 0008 1B0C     		lsrs	r3, r3, #16
 1888              	.LVL189:
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 1889              		.loc 1 1393 0
 1890 000a 43EA0123 		orr	r3, r3, r1, lsl #8
 1891              	.LVL190:
 1892 000e 9BB2     		uxth	r3, r3
 1893              	.LVL191:
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1894              		.loc 1 1396 0
 1895 0010 0383     		strh	r3, [r0, #24]	@ movhi
1397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1896              		.loc 1 1397 0
 1897 0012 7047     		bx	lr
 1898              		.cfi_endproc
 1899              	.LFE144:
 1901              		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 1902              		.align	1
 1903              		.global	TIM_OC3FastConfig
 1904              		.thumb
 1905              		.thumb_func
 1907              	TIM_OC3FastConfig:
 1908              	.LFB145:
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1909              		.loc 1 1409 0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 0
 1912              		@ frame_needed = 0, uses_anonymous_args = 0
 1913              		@ link register save eliminated.
 1914              	.LVL192:
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1915              		.loc 1 1417 0
 1916 0000 838B     		ldrh	r3, [r0, #28]
 1917              	.LVL193:
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 1918              		.loc 1 1420 0
 1919 0002 23F00403 		bic	r3, r3, #4
 1920              	.LVL194:
 1921 0006 1B04     		lsls	r3, r3, #16
 1922 0008 1B0C     		lsrs	r3, r3, #16
 1923              	.LVL195:
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 1924              		.loc 1 1423 0
 1925 000a 0B43     		orrs	r3, r3, r1
 1926              	.LVL196:
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1927              		.loc 1 1426 0
 1928 000c 8383     		strh	r3, [r0, #28]	@ movhi
1427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1929              		.loc 1 1427 0
 1930 000e 7047     		bx	lr
 1931              		.cfi_endproc
 1932              	.LFE145:
 1934              		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 1935              		.align	1
 1936              		.global	TIM_OC4FastConfig
 1937              		.thumb
 1938              		.thumb_func
 1940              	TIM_OC4FastConfig:
 1941              	.LFB146:
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1942              		.loc 1 1439 0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 0
 1945              		@ frame_needed = 0, uses_anonymous_args = 0
 1946              		@ link register save eliminated.
 1947              	.LVL197:
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 1948              		.loc 1 1447 0
 1949 0000 838B     		ldrh	r3, [r0, #28]
 1950              	.LVL198:
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 1951              		.loc 1 1450 0
 1952 0002 23F48063 		bic	r3, r3, #1024
 1953              	.LVL199:
 1954 0006 1B04     		lsls	r3, r3, #16
 1955 0008 1B0C     		lsrs	r3, r3, #16
 1956              	.LVL200:
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 1957              		.loc 1 1453 0
 1958 000a 43EA0123 		orr	r3, r3, r1, lsl #8
 1959              	.LVL201:
 1960 000e 9BB2     		uxth	r3, r3
 1961              	.LVL202:
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 1962              		.loc 1 1456 0
 1963 0010 8383     		strh	r3, [r0, #28]	@ movhi
1457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1964              		.loc 1 1457 0
 1965 0012 7047     		bx	lr
 1966              		.cfi_endproc
 1967              	.LFE146:
 1969              		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 1970              		.align	1
 1971              		.global	TIM_ClearOC1Ref
 1972              		.thumb
 1973              		.thumb_func
 1975              	TIM_ClearOC1Ref:
 1976              	.LFB147:
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1977              		.loc 1 1469 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
 1982              	.LVL203:
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 1983              		.loc 1 1476 0
 1984 0000 038B     		ldrh	r3, [r0, #24]
 1985              	.LVL204:
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 1986              		.loc 1 1479 0
 1987 0002 23F08003 		bic	r3, r3, #128
 1988              	.LVL205:
 1989 0006 1B04     		lsls	r3, r3, #16
 1990 0008 1B0C     		lsrs	r3, r3, #16
 1991              	.LVL206:
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 1992              		.loc 1 1482 0
 1993 000a 0B43     		orrs	r3, r3, r1
 1994              	.LVL207:
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 1995              		.loc 1 1485 0
 1996 000c 0383     		strh	r3, [r0, #24]	@ movhi
1486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1997              		.loc 1 1486 0
 1998 000e 7047     		bx	lr
 1999              		.cfi_endproc
 2000              	.LFE147:
 2002              		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2003              		.align	1
 2004              		.global	TIM_ClearOC2Ref
 2005              		.thumb
 2006              		.thumb_func
 2008              	TIM_ClearOC2Ref:
 2009              	.LFB148:
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2010              		.loc 1 1499 0
 2011              		.cfi_startproc
 2012              		@ args = 0, pretend = 0, frame = 0
 2013              		@ frame_needed = 0, uses_anonymous_args = 0
 2014              		@ link register save eliminated.
 2015              	.LVL208:
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2016              		.loc 1 1506 0
 2017 0000 038B     		ldrh	r3, [r0, #24]
 2018              	.LVL209:
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2019              		.loc 1 1512 0
 2020 0002 0902     		lsls	r1, r1, #8
 2021              	.LVL210:
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2022              		.loc 1 1509 0
 2023 0004 5B04     		lsls	r3, r3, #17
 2024              	.LVL211:
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2025              		.loc 1 1512 0
 2026 0006 41EA5341 		orr	r1, r1, r3, lsr #17
 2027 000a 89B2     		uxth	r1, r1
 2028              	.LVL212:
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2029              		.loc 1 1515 0
 2030 000c 0183     		strh	r1, [r0, #24]	@ movhi
1516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2031              		.loc 1 1516 0
 2032 000e 7047     		bx	lr
 2033              		.cfi_endproc
 2034              	.LFE148:
 2036              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2037              		.align	1
 2038              		.global	TIM_ClearOC3Ref
 2039              		.thumb
 2040              		.thumb_func
 2042              	TIM_ClearOC3Ref:
 2043              	.LFB149:
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2044              		.loc 1 1528 0
 2045              		.cfi_startproc
 2046              		@ args = 0, pretend = 0, frame = 0
 2047              		@ frame_needed = 0, uses_anonymous_args = 0
 2048              		@ link register save eliminated.
 2049              	.LVL213:
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2050              		.loc 1 1535 0
 2051 0000 838B     		ldrh	r3, [r0, #28]
 2052              	.LVL214:
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2053              		.loc 1 1538 0
 2054 0002 23F08003 		bic	r3, r3, #128
 2055              	.LVL215:
 2056 0006 1B04     		lsls	r3, r3, #16
 2057 0008 1B0C     		lsrs	r3, r3, #16
 2058              	.LVL216:
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2059              		.loc 1 1541 0
 2060 000a 0B43     		orrs	r3, r3, r1
 2061              	.LVL217:
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2062              		.loc 1 1544 0
 2063 000c 8383     		strh	r3, [r0, #28]	@ movhi
1545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2064              		.loc 1 1545 0
 2065 000e 7047     		bx	lr
 2066              		.cfi_endproc
 2067              	.LFE149:
 2069              		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2070              		.align	1
 2071              		.global	TIM_ClearOC4Ref
 2072              		.thumb
 2073              		.thumb_func
 2075              	TIM_ClearOC4Ref:
 2076              	.LFB150:
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2077              		.loc 1 1557 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 0
 2080              		@ frame_needed = 0, uses_anonymous_args = 0
 2081              		@ link register save eliminated.
 2082              	.LVL218:
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2083              		.loc 1 1564 0
 2084 0000 838B     		ldrh	r3, [r0, #28]
 2085              	.LVL219:
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2086              		.loc 1 1570 0
 2087 0002 0902     		lsls	r1, r1, #8
 2088              	.LVL220:
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2089              		.loc 1 1567 0
 2090 0004 5B04     		lsls	r3, r3, #17
 2091              	.LVL221:
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2092              		.loc 1 1570 0
 2093 0006 41EA5341 		orr	r1, r1, r3, lsr #17
 2094 000a 89B2     		uxth	r1, r1
 2095              	.LVL222:
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2096              		.loc 1 1573 0
 2097 000c 8183     		strh	r1, [r0, #28]	@ movhi
1574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2098              		.loc 1 1574 0
 2099 000e 7047     		bx	lr
 2100              		.cfi_endproc
 2101              	.LFE150:
 2103              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2104              		.align	1
 2105              		.global	TIM_OC1PolarityConfig
 2106              		.thumb
 2107              		.thumb_func
 2109              	TIM_OC1PolarityConfig:
 2110              	.LFB151:
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2111              		.loc 1 1586 0
 2112              		.cfi_startproc
 2113              		@ args = 0, pretend = 0, frame = 0
 2114              		@ frame_needed = 0, uses_anonymous_args = 0
 2115              		@ link register save eliminated.
 2116              	.LVL223:
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2117              		.loc 1 1593 0
 2118 0000 038C     		ldrh	r3, [r0, #32]
 2119              	.LVL224:
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2120              		.loc 1 1596 0
 2121 0002 23F00203 		bic	r3, r3, #2
 2122              	.LVL225:
 2123 0006 1B04     		lsls	r3, r3, #16
 2124 0008 1B0C     		lsrs	r3, r3, #16
 2125              	.LVL226:
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2126              		.loc 1 1597 0
 2127 000a 0B43     		orrs	r3, r3, r1
 2128              	.LVL227:
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2129              		.loc 1 1600 0
 2130 000c 0384     		strh	r3, [r0, #32]	@ movhi
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2131              		.loc 1 1601 0
 2132 000e 7047     		bx	lr
 2133              		.cfi_endproc
 2134              	.LFE151:
 2136              		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2137              		.align	1
 2138              		.global	TIM_OC1NPolarityConfig
 2139              		.thumb
 2140              		.thumb_func
 2142              	TIM_OC1NPolarityConfig:
 2143              	.LFB152:
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2144              		.loc 1 1613 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 0
 2147              		@ frame_needed = 0, uses_anonymous_args = 0
 2148              		@ link register save eliminated.
 2149              	.LVL228:
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2150              		.loc 1 1619 0
 2151 0000 038C     		ldrh	r3, [r0, #32]
 2152              	.LVL229:
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 2153              		.loc 1 1622 0
 2154 0002 23F00803 		bic	r3, r3, #8
 2155              	.LVL230:
 2156 0006 1B04     		lsls	r3, r3, #16
 2157 0008 1B0C     		lsrs	r3, r3, #16
 2158              	.LVL231:
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2159              		.loc 1 1623 0
 2160 000a 0B43     		orrs	r3, r3, r1
 2161              	.LVL232:
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2162              		.loc 1 1626 0
 2163 000c 0384     		strh	r3, [r0, #32]	@ movhi
1627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2164              		.loc 1 1627 0
 2165 000e 7047     		bx	lr
 2166              		.cfi_endproc
 2167              	.LFE152:
 2169              		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 2170              		.align	1
 2171              		.global	TIM_OC2PolarityConfig
 2172              		.thumb
 2173              		.thumb_func
 2175              	TIM_OC2PolarityConfig:
 2176              	.LFB153:
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2177              		.loc 1 1640 0
 2178              		.cfi_startproc
 2179              		@ args = 0, pretend = 0, frame = 0
 2180              		@ frame_needed = 0, uses_anonymous_args = 0
 2181              		@ link register save eliminated.
 2182              	.LVL233:
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2183              		.loc 1 1647 0
 2184 0000 038C     		ldrh	r3, [r0, #32]
 2185              	.LVL234:
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 2186              		.loc 1 1650 0
 2187 0002 23F02003 		bic	r3, r3, #32
 2188              	.LVL235:
 2189 0006 1B04     		lsls	r3, r3, #16
 2190 0008 1B0C     		lsrs	r3, r3, #16
 2191              	.LVL236:
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 2192              		.loc 1 1651 0
 2193 000a 43EA0113 		orr	r3, r3, r1, lsl #4
 2194              	.LVL237:
 2195 000e 9BB2     		uxth	r3, r3
 2196              	.LVL238:
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2197              		.loc 1 1654 0
 2198 0010 0384     		strh	r3, [r0, #32]	@ movhi
1655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2199              		.loc 1 1655 0
 2200 0012 7047     		bx	lr
 2201              		.cfi_endproc
 2202              	.LFE153:
 2204              		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 2205              		.align	1
 2206              		.global	TIM_OC2NPolarityConfig
 2207              		.thumb
 2208              		.thumb_func
 2210              	TIM_OC2NPolarityConfig:
 2211              	.LFB154:
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2212              		.loc 1 1667 0
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 0
 2215              		@ frame_needed = 0, uses_anonymous_args = 0
 2216              		@ link register save eliminated.
 2217              	.LVL239:
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2218              		.loc 1 1674 0
 2219 0000 038C     		ldrh	r3, [r0, #32]
 2220              	.LVL240:
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 2221              		.loc 1 1677 0
 2222 0002 23F08003 		bic	r3, r3, #128
 2223              	.LVL241:
 2224 0006 1B04     		lsls	r3, r3, #16
 2225 0008 1B0C     		lsrs	r3, r3, #16
 2226              	.LVL242:
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 2227              		.loc 1 1678 0
 2228 000a 43EA0113 		orr	r3, r3, r1, lsl #4
 2229              	.LVL243:
 2230 000e 9BB2     		uxth	r3, r3
 2231              	.LVL244:
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2232              		.loc 1 1681 0
 2233 0010 0384     		strh	r3, [r0, #32]	@ movhi
1682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2234              		.loc 1 1682 0
 2235 0012 7047     		bx	lr
 2236              		.cfi_endproc
 2237              	.LFE154:
 2239              		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 2240              		.align	1
 2241              		.global	TIM_OC3PolarityConfig
 2242              		.thumb
 2243              		.thumb_func
 2245              	TIM_OC3PolarityConfig:
 2246              	.LFB155:
1694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2247              		.loc 1 1694 0
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
 2251              		@ link register save eliminated.
 2252              	.LVL245:
1701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2253              		.loc 1 1701 0
 2254 0000 038C     		ldrh	r3, [r0, #32]
 2255              	.LVL246:
1704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 2256              		.loc 1 1704 0
 2257 0002 23F40073 		bic	r3, r3, #512
 2258              	.LVL247:
 2259 0006 1B04     		lsls	r3, r3, #16
 2260 0008 1B0C     		lsrs	r3, r3, #16
 2261              	.LVL248:
1705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 2262              		.loc 1 1705 0
 2263 000a 43EA0123 		orr	r3, r3, r1, lsl #8
 2264              	.LVL249:
 2265 000e 9BB2     		uxth	r3, r3
 2266              	.LVL250:
1708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2267              		.loc 1 1708 0
 2268 0010 0384     		strh	r3, [r0, #32]	@ movhi
1709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2269              		.loc 1 1709 0
 2270 0012 7047     		bx	lr
 2271              		.cfi_endproc
 2272              	.LFE155:
 2274              		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 2275              		.align	1
 2276              		.global	TIM_OC3NPolarityConfig
 2277              		.thumb
 2278              		.thumb_func
 2280              	TIM_OC3NPolarityConfig:
 2281              	.LFB156:
1721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2282              		.loc 1 1721 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 0
 2285              		@ frame_needed = 0, uses_anonymous_args = 0
 2286              		@ link register save eliminated.
 2287              	.LVL251:
1728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2288              		.loc 1 1728 0
 2289 0000 038C     		ldrh	r3, [r0, #32]
 2290              	.LVL252:
1731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 2291              		.loc 1 1731 0
 2292 0002 23F40063 		bic	r3, r3, #2048
 2293              	.LVL253:
 2294 0006 1B04     		lsls	r3, r3, #16
 2295 0008 1B0C     		lsrs	r3, r3, #16
 2296              	.LVL254:
1732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 2297              		.loc 1 1732 0
 2298 000a 43EA0123 		orr	r3, r3, r1, lsl #8
 2299              	.LVL255:
 2300 000e 9BB2     		uxth	r3, r3
 2301              	.LVL256:
1735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2302              		.loc 1 1735 0
 2303 0010 0384     		strh	r3, [r0, #32]	@ movhi
1736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2304              		.loc 1 1736 0
 2305 0012 7047     		bx	lr
 2306              		.cfi_endproc
 2307              	.LFE156:
 2309              		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 2310              		.align	1
 2311              		.global	TIM_OC4PolarityConfig
 2312              		.thumb
 2313              		.thumb_func
 2315              	TIM_OC4PolarityConfig:
 2316              	.LFB157:
1748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2317              		.loc 1 1748 0
 2318              		.cfi_startproc
 2319              		@ args = 0, pretend = 0, frame = 0
 2320              		@ frame_needed = 0, uses_anonymous_args = 0
 2321              		@ link register save eliminated.
 2322              	.LVL257:
1755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2323              		.loc 1 1755 0
 2324 0000 038C     		ldrh	r3, [r0, #32]
 2325              	.LVL258:
1758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 2326              		.loc 1 1758 0
 2327 0002 23F40053 		bic	r3, r3, #8192
 2328              	.LVL259:
 2329 0006 1B04     		lsls	r3, r3, #16
 2330 0008 1B0C     		lsrs	r3, r3, #16
 2331              	.LVL260:
1759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 2332              		.loc 1 1759 0
 2333 000a 43EA0133 		orr	r3, r3, r1, lsl #12
 2334              	.LVL261:
 2335 000e 9BB2     		uxth	r3, r3
 2336              	.LVL262:
1762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2337              		.loc 1 1762 0
 2338 0010 0384     		strh	r3, [r0, #32]	@ movhi
1763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2339              		.loc 1 1763 0
 2340 0012 7047     		bx	lr
 2341              		.cfi_endproc
 2342              	.LFE157:
 2344              		.section	.text.TIM_CCxCmd,"ax",%progbits
 2345              		.align	1
 2346              		.global	TIM_CCxCmd
 2347              		.thumb
 2348              		.thumb_func
 2350              	TIM_CCxCmd:
 2351              	.LFB158:
1779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2352              		.loc 1 1779 0
 2353              		.cfi_startproc
 2354              		@ args = 0, pretend = 0, frame = 0
 2355              		@ frame_needed = 0, uses_anonymous_args = 0
 2356              	.LVL263:
 2357 0000 10B5     		push	{r4, lr}
 2358              	.LCFI9:
 2359              		.cfi_def_cfa_offset 8
 2360              		.cfi_offset 14, -4
 2361              		.cfi_offset 4, -8
1790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 2362              		.loc 1 1790 0
 2363 0002 048C     		ldrh	r4, [r0, #32]
1787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 2364              		.loc 1 1787 0
 2365 0004 0123     		movs	r3, #1
 2366 0006 8B40     		lsls	r3, r3, r1
1790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 2367              		.loc 1 1790 0
 2368 0008 A4B2     		uxth	r4, r4
 2369 000a 24EA0303 		bic	r3, r4, r3
 2370 000e 0384     		strh	r3, [r0, #32]	@ movhi
1793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 2371              		.loc 1 1793 0
 2372 0010 038C     		ldrh	r3, [r0, #32]
 2373 0012 12FA01F1 		lsls	r1, r2, r1
 2374              	.LVL264:
 2375 0016 1943     		orrs	r1, r1, r3
 2376 0018 89B2     		uxth	r1, r1
 2377 001a 0184     		strh	r1, [r0, #32]	@ movhi
1794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2378              		.loc 1 1794 0
 2379 001c 10BD     		pop	{r4, pc}
 2380              		.cfi_endproc
 2381              	.LFE158:
 2383              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 2384              		.align	1
 2385              		.global	TIM_CCxNCmd
 2386              		.thumb
 2387              		.thumb_func
 2389              	TIM_CCxNCmd:
 2390              	.LFB159:
1809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2391              		.loc 1 1809 0
 2392              		.cfi_startproc
 2393              		@ args = 0, pretend = 0, frame = 0
 2394              		@ frame_needed = 0, uses_anonymous_args = 0
 2395              	.LVL265:
 2396 0000 10B5     		push	{r4, lr}
 2397              	.LCFI10:
 2398              		.cfi_def_cfa_offset 8
 2399              		.cfi_offset 14, -4
 2400              		.cfi_offset 4, -8
1820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 2401              		.loc 1 1820 0
 2402 0002 048C     		ldrh	r4, [r0, #32]
1817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 2403              		.loc 1 1817 0
 2404 0004 0423     		movs	r3, #4
 2405 0006 8B40     		lsls	r3, r3, r1
1820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 2406              		.loc 1 1820 0
 2407 0008 A4B2     		uxth	r4, r4
 2408 000a 24EA0303 		bic	r3, r4, r3
 2409 000e 0384     		strh	r3, [r0, #32]	@ movhi
1823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 2410              		.loc 1 1823 0
 2411 0010 038C     		ldrh	r3, [r0, #32]
 2412 0012 12FA01F1 		lsls	r1, r2, r1
 2413              	.LVL266:
 2414 0016 1943     		orrs	r1, r1, r3
 2415 0018 89B2     		uxth	r1, r1
 2416 001a 0184     		strh	r1, [r0, #32]	@ movhi
1824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2417              		.loc 1 1824 0
 2418 001c 10BD     		pop	{r4, pc}
 2419              		.cfi_endproc
 2420              	.LFE159:
 2422              		.section	.text.TIM_ICStructInit,"ax",%progbits
 2423              		.align	1
 2424              		.global	TIM_ICStructInit
 2425              		.thumb
 2426              		.thumb_func
 2428              	TIM_ICStructInit:
 2429              	.LFB161:
1944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2430              		.loc 1 1944 0
 2431              		.cfi_startproc
 2432              		@ args = 0, pretend = 0, frame = 0
 2433              		@ frame_needed = 0, uses_anonymous_args = 0
 2434              		@ link register save eliminated.
 2435              	.LVL267:
1946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 2436              		.loc 1 1946 0
 2437 0000 0023     		movs	r3, #0
1948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 2438              		.loc 1 1948 0
 2439 0002 0122     		movs	r2, #1
1946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 2440              		.loc 1 1946 0
 2441 0004 0380     		strh	r3, [r0, #0]	@ movhi
1947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 2442              		.loc 1 1947 0
 2443 0006 4380     		strh	r3, [r0, #2]	@ movhi
1948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 2444              		.loc 1 1948 0
 2445 0008 8280     		strh	r2, [r0, #4]	@ movhi
1949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 2446              		.loc 1 1949 0
 2447 000a C380     		strh	r3, [r0, #6]	@ movhi
1950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 2448              		.loc 1 1950 0
 2449 000c 0381     		strh	r3, [r0, #8]	@ movhi
1951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2450              		.loc 1 1951 0
 2451 000e 7047     		bx	lr
 2452              		.cfi_endproc
 2453              	.LFE161:
 2455              		.section	.text.TIM_GetCapture1,"ax",%progbits
 2456              		.align	1
 2457              		.global	TIM_GetCapture1
 2458              		.thumb
 2459              		.thumb_func
 2461              	TIM_GetCapture1:
 2462              	.LFB163:
2020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2463              		.loc 1 2020 0
 2464              		.cfi_startproc
 2465              		@ args = 0, pretend = 0, frame = 0
 2466              		@ frame_needed = 0, uses_anonymous_args = 0
 2467              		@ link register save eliminated.
 2468              	.LVL268:
2025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 2469              		.loc 1 2025 0
 2470 0000 406B     		ldr	r0, [r0, #52]
 2471              	.LVL269:
2026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2472              		.loc 1 2026 0
 2473 0002 7047     		bx	lr
 2474              		.cfi_endproc
 2475              	.LFE163:
 2477              		.section	.text.TIM_GetCapture2,"ax",%progbits
 2478              		.align	1
 2479              		.global	TIM_GetCapture2
 2480              		.thumb
 2481              		.thumb_func
 2483              	TIM_GetCapture2:
 2484              	.LFB164:
2035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2485              		.loc 1 2035 0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 0
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489              		@ link register save eliminated.
 2490              	.LVL270:
2040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 2491              		.loc 1 2040 0
 2492 0000 806B     		ldr	r0, [r0, #56]
 2493              	.LVL271:
2041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2494              		.loc 1 2041 0
 2495 0002 7047     		bx	lr
 2496              		.cfi_endproc
 2497              	.LFE164:
 2499              		.section	.text.TIM_GetCapture3,"ax",%progbits
 2500              		.align	1
 2501              		.global	TIM_GetCapture3
 2502              		.thumb
 2503              		.thumb_func
 2505              	TIM_GetCapture3:
 2506              	.LFB165:
2049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2507              		.loc 1 2049 0
 2508              		.cfi_startproc
 2509              		@ args = 0, pretend = 0, frame = 0
 2510              		@ frame_needed = 0, uses_anonymous_args = 0
 2511              		@ link register save eliminated.
 2512              	.LVL272:
2054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 2513              		.loc 1 2054 0
 2514 0000 C06B     		ldr	r0, [r0, #60]
 2515              	.LVL273:
2055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2516              		.loc 1 2055 0
 2517 0002 7047     		bx	lr
 2518              		.cfi_endproc
 2519              	.LFE165:
 2521              		.section	.text.TIM_GetCapture4,"ax",%progbits
 2522              		.align	1
 2523              		.global	TIM_GetCapture4
 2524              		.thumb
 2525              		.thumb_func
 2527              	TIM_GetCapture4:
 2528              	.LFB166:
2063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2529              		.loc 1 2063 0
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 0
 2532              		@ frame_needed = 0, uses_anonymous_args = 0
 2533              		@ link register save eliminated.
 2534              	.LVL274:
2068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 2535              		.loc 1 2068 0
 2536 0000 006C     		ldr	r0, [r0, #64]
 2537              	.LVL275:
2069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2538              		.loc 1 2069 0
 2539 0002 7047     		bx	lr
 2540              		.cfi_endproc
 2541              	.LFE166:
 2543              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 2544              		.align	1
 2545              		.global	TIM_SetIC1Prescaler
 2546              		.thumb
 2547              		.thumb_func
 2549              	TIM_SetIC1Prescaler:
 2550              	.LFB167:
2083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2551              		.loc 1 2083 0
 2552              		.cfi_startproc
 2553              		@ args = 0, pretend = 0, frame = 0
 2554              		@ frame_needed = 0, uses_anonymous_args = 0
 2555              		@ link register save eliminated.
 2556              	.LVL276:
2089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 2557              		.loc 1 2089 0
 2558 0000 038B     		ldrh	r3, [r0, #24]
 2559 0002 23F00C03 		bic	r3, r3, #12
 2560 0006 1B04     		lsls	r3, r3, #16
 2561 0008 1B0C     		lsrs	r3, r3, #16
 2562 000a 0383     		strh	r3, [r0, #24]	@ movhi
2092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 2563              		.loc 1 2092 0
 2564 000c 038B     		ldrh	r3, [r0, #24]
 2565 000e 9BB2     		uxth	r3, r3
 2566 0010 1943     		orrs	r1, r1, r3
 2567              	.LVL277:
 2568 0012 0183     		strh	r1, [r0, #24]	@ movhi
2093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2569              		.loc 1 2093 0
 2570 0014 7047     		bx	lr
 2571              		.cfi_endproc
 2572              	.LFE167:
 2574              		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 2575              		.align	1
 2576              		.global	TIM_SetIC2Prescaler
 2577              		.thumb
 2578              		.thumb_func
 2580              	TIM_SetIC2Prescaler:
 2581              	.LFB168:
2108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2582              		.loc 1 2108 0
 2583              		.cfi_startproc
 2584              		@ args = 0, pretend = 0, frame = 0
 2585              		@ frame_needed = 0, uses_anonymous_args = 0
 2586              		@ link register save eliminated.
 2587              	.LVL278:
2114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 2588              		.loc 1 2114 0
 2589 0000 038B     		ldrh	r3, [r0, #24]
 2590 0002 23F44063 		bic	r3, r3, #3072
 2591 0006 1B04     		lsls	r3, r3, #16
 2592 0008 1B0C     		lsrs	r3, r3, #16
 2593 000a 0383     		strh	r3, [r0, #24]	@ movhi
2117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 2594              		.loc 1 2117 0
 2595 000c 038B     		ldrh	r3, [r0, #24]
 2596 000e 9BB2     		uxth	r3, r3
 2597 0010 43EA0121 		orr	r1, r3, r1, lsl #8
 2598              	.LVL279:
 2599 0014 89B2     		uxth	r1, r1
 2600 0016 0183     		strh	r1, [r0, #24]	@ movhi
2118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2601              		.loc 1 2118 0
 2602 0018 7047     		bx	lr
 2603              		.cfi_endproc
 2604              	.LFE168:
 2606              		.section	.text.TIM_PWMIConfig,"ax",%progbits
 2607              		.align	1
 2608              		.global	TIM_PWMIConfig
 2609              		.thumb
 2610              		.thumb_func
 2612              	TIM_PWMIConfig:
 2613              	.LFB162:
1963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2614              		.loc 1 1963 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 0
 2617              		@ frame_needed = 0, uses_anonymous_args = 0
 2618              	.LVL280:
 2619 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2620              	.LCFI11:
 2621              		.cfi_def_cfa_offset 24
 2622              		.cfi_offset 14, -4
 2623              		.cfi_offset 7, -8
 2624              		.cfi_offset 6, -12
 2625              		.cfi_offset 5, -16
 2626              		.cfi_offset 4, -20
 2627              		.cfi_offset 3, -24
1963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2628              		.loc 1 1963 0
 2629 0002 0C46     		mov	r4, r1
 2630 0004 0546     		mov	r5, r0
1971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 2631              		.loc 1 1971 0
 2632 0006 4988     		ldrh	r1, [r1, #2]
 2633              	.LVL281:
1980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 2634              		.loc 1 1980 0
 2635 0008 A288     		ldrh	r2, [r4, #4]
1988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 2636              		.loc 1 1988 0
 2637 000a 2088     		ldrh	r0, [r4, #0]
 2638              	.LVL282:
 2639 000c 2389     		ldrh	r3, [r4, #8]
1973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 2640              		.loc 1 1973 0
 2641 000e 0029     		cmp	r1, #0
 2642 0010 0CBF     		ite	eq
 2643 0012 0227     		moveq	r7, #2
 2644 0014 0027     		movne	r7, #0
 2645              	.LVL283:
1982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 2646              		.loc 1 1982 0
 2647 0016 012A     		cmp	r2, #1
 2648 0018 14BF     		ite	ne
 2649 001a 0126     		movne	r6, #1
 2650 001c 0226     		moveq	r6, #2
 2651              	.LVL284:
1988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 2652              		.loc 1 1988 0
 2653 001e 90B9     		cbnz	r0, .L114
1991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 2654              		.loc 1 1991 0
 2655 0020 2846     		mov	r0, r5
 2656 0022 FFF7FEFF 		bl	TI1_Config
1994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2657              		.loc 1 1994 0
 2658 0026 E188     		ldrh	r1, [r4, #6]
 2659 0028 2846     		mov	r0, r5
 2660 002a FFF7FEFF 		bl	TIM_SetIC1Prescaler
1996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 2661              		.loc 1 1996 0
 2662 002e 2846     		mov	r0, r5
 2663 0030 3946     		mov	r1, r7
 2664 0032 2389     		ldrh	r3, [r4, #8]
 2665 0034 3246     		mov	r2, r6
 2666 0036 FFF7FEFF 		bl	TI2_Config
1998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2667              		.loc 1 1998 0
 2668 003a E188     		ldrh	r1, [r4, #6]
 2669 003c 2846     		mov	r0, r5
2012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2670              		.loc 1 2012 0
 2671 003e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
1998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2672              		.loc 1 1998 0
 2673 0042 FFF7FEBF 		b	TIM_SetIC2Prescaler
 2674              	.L114:
2003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 2675              		.loc 1 2003 0
 2676 0046 2846     		mov	r0, r5
 2677 0048 FFF7FEFF 		bl	TI2_Config
2006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2678              		.loc 1 2006 0
 2679 004c E188     		ldrh	r1, [r4, #6]
 2680 004e 2846     		mov	r0, r5
 2681 0050 FFF7FEFF 		bl	TIM_SetIC2Prescaler
2008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 2682              		.loc 1 2008 0
 2683 0054 2846     		mov	r0, r5
 2684 0056 3946     		mov	r1, r7
 2685 0058 2389     		ldrh	r3, [r4, #8]
 2686 005a 3246     		mov	r2, r6
 2687 005c FFF7FEFF 		bl	TI1_Config
2010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2688              		.loc 1 2010 0
 2689 0060 E188     		ldrh	r1, [r4, #6]
 2690 0062 2846     		mov	r0, r5
2012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2691              		.loc 1 2012 0
 2692 0064 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
2010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2693              		.loc 1 2010 0
 2694 0068 FFF7FEBF 		b	TIM_SetIC1Prescaler
 2695              		.cfi_endproc
 2696              	.LFE162:
 2698              		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 2699              		.align	1
 2700              		.global	TIM_SetIC3Prescaler
 2701              		.thumb
 2702              		.thumb_func
 2704              	TIM_SetIC3Prescaler:
 2705              	.LFB169:
2132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2706              		.loc 1 2132 0
 2707              		.cfi_startproc
 2708              		@ args = 0, pretend = 0, frame = 0
 2709              		@ frame_needed = 0, uses_anonymous_args = 0
 2710              		@ link register save eliminated.
 2711              	.LVL285:
2138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 2712              		.loc 1 2138 0
 2713 0000 838B     		ldrh	r3, [r0, #28]
 2714 0002 23F00C03 		bic	r3, r3, #12
 2715 0006 1B04     		lsls	r3, r3, #16
 2716 0008 1B0C     		lsrs	r3, r3, #16
 2717 000a 8383     		strh	r3, [r0, #28]	@ movhi
2141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 2718              		.loc 1 2141 0
 2719 000c 838B     		ldrh	r3, [r0, #28]
 2720 000e 9BB2     		uxth	r3, r3
 2721 0010 1943     		orrs	r1, r1, r3
 2722              	.LVL286:
 2723 0012 8183     		strh	r1, [r0, #28]	@ movhi
2142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2724              		.loc 1 2142 0
 2725 0014 7047     		bx	lr
 2726              		.cfi_endproc
 2727              	.LFE169:
 2729              		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 2730              		.align	1
 2731              		.global	TIM_SetIC4Prescaler
 2732              		.thumb
 2733              		.thumb_func
 2735              	TIM_SetIC4Prescaler:
 2736              	.LFB170:
2156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 2737              		.loc 1 2156 0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 0
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
 2741              		@ link register save eliminated.
 2742              	.LVL287:
2162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 2743              		.loc 1 2162 0
 2744 0000 838B     		ldrh	r3, [r0, #28]
 2745 0002 23F44063 		bic	r3, r3, #3072
 2746 0006 1B04     		lsls	r3, r3, #16
 2747 0008 1B0C     		lsrs	r3, r3, #16
 2748 000a 8383     		strh	r3, [r0, #28]	@ movhi
2165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 2749              		.loc 1 2165 0
 2750 000c 838B     		ldrh	r3, [r0, #28]
 2751 000e 9BB2     		uxth	r3, r3
 2752 0010 43EA0121 		orr	r1, r3, r1, lsl #8
 2753              	.LVL288:
 2754 0014 89B2     		uxth	r1, r1
 2755 0016 8183     		strh	r1, [r0, #28]	@ movhi
2166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2756              		.loc 1 2166 0
 2757 0018 7047     		bx	lr
 2758              		.cfi_endproc
 2759              	.LFE170:
 2761              		.section	.text.TIM_ICInit,"ax",%progbits
 2762              		.align	1
 2763              		.global	TIM_ICInit
 2764              		.thumb
 2765              		.thumb_func
 2767              	TIM_ICInit:
 2768              	.LFB160:
1891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2769              		.loc 1 1891 0
 2770              		.cfi_startproc
 2771              		@ args = 0, pretend = 0, frame = 0
 2772              		@ frame_needed = 0, uses_anonymous_args = 0
 2773              	.LVL289:
 2774 0000 70B5     		push	{r4, r5, r6, lr}
 2775              	.LCFI12:
 2776              		.cfi_def_cfa_offset 16
 2777              		.cfi_offset 14, -4
 2778              		.cfi_offset 6, -8
 2779              		.cfi_offset 5, -12
 2780              		.cfi_offset 4, -16
1899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 2781              		.loc 1 1899 0
 2782 0002 0B88     		ldrh	r3, [r1, #0]
1891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2783              		.loc 1 1891 0
 2784 0004 0D46     		mov	r5, r1
 2785 0006 0446     		mov	r4, r0
 2786 0008 4988     		ldrh	r1, [r1, #2]
 2787              	.LVL290:
 2788 000a AA88     		ldrh	r2, [r5, #4]
1899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 2789              		.loc 1 1899 0
 2790 000c 43B9     		cbnz	r3, .L120
1902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2791              		.loc 1 1902 0
 2792 000e 2B89     		ldrh	r3, [r5, #8]
 2793 0010 FFF7FEFF 		bl	TI1_Config
 2794              	.LVL291:
1906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2795              		.loc 1 1906 0
 2796 0014 E988     		ldrh	r1, [r5, #6]
 2797 0016 2046     		mov	r0, r4
1935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2798              		.loc 1 1935 0
 2799 0018 BDE87040 		pop	{r4, r5, r6, lr}
1906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2800              		.loc 1 1906 0
 2801 001c FFF7FEBF 		b	TIM_SetIC1Prescaler
 2802              	.L120:
1908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 2803              		.loc 1 1908 0
 2804 0020 042B     		cmp	r3, #4
 2805 0022 08D1     		bne	.L121
1911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 2806              		.loc 1 1911 0
 2807 0024 2B89     		ldrh	r3, [r5, #8]
 2808 0026 FFF7FEFF 		bl	TI2_Config
1915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2809              		.loc 1 1915 0
 2810 002a E988     		ldrh	r1, [r5, #6]
 2811 002c 2046     		mov	r0, r4
1935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2812              		.loc 1 1935 0
 2813 002e BDE87040 		pop	{r4, r5, r6, lr}
1915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2814              		.loc 1 1915 0
 2815 0032 FFF7FEBF 		b	TIM_SetIC2Prescaler
 2816              	.L121:
1917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 2817              		.loc 1 1917 0
 2818 0036 082B     		cmp	r3, #8
 2819 0038 2E89     		ldrh	r6, [r5, #8]
 2820              	.LBB10:
 2821              	.LBB11:
3253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
3274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
3275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 2822              		.loc 1 3277 0
 2823 003a 038C     		ldrh	r3, [r0, #32]
 2824              	.LBE11:
 2825              	.LBE10:
1917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 2826              		.loc 1 1917 0
 2827 003c 1DD1     		bne	.L122
 2828              	.LVL292:
 2829              	.LBB13:
 2830              	.LBB12:
 2831              		.loc 1 3277 0
 2832 003e 23F48073 		bic	r3, r3, #256
 2833 0042 1B04     		lsls	r3, r3, #16
 2834 0044 1B0C     		lsrs	r3, r3, #16
 2835 0046 0384     		strh	r3, [r0, #32]	@ movhi
3278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2836              		.loc 1 3278 0
 2837 0048 808B     		ldrh	r0, [r0, #28]
3279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2838              		.loc 1 3279 0
 2839 004a 238C     		ldrh	r3, [r4, #32]
3278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2840              		.loc 1 3278 0
 2841 004c 80B2     		uxth	r0, r0
 2842              	.LVL293:
 2843              		.loc 1 3279 0
 2844 004e 9BB2     		uxth	r3, r3
 2845              	.LVL294:
3280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
3281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 2846              		.loc 1 3283 0
 2847 0050 20F0F300 		bic	r0, r0, #243
 2848              	.LVL295:
3284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
3285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 2849              		.loc 1 3287 0
 2850 0054 23F42063 		bic	r3, r3, #2560
 2851              	.LVL296:
3284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 2852              		.loc 1 3284 0
 2853 0058 40EA0616 		orr	r6, r0, r6, lsl #4
 2854              	.LVL297:
3288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 2855              		.loc 1 3288 0
 2856 005c 43EA0121 		orr	r1, r3, r1, lsl #8
 2857              	.LVL298:
3284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 2858              		.loc 1 3284 0
 2859 0060 B6B2     		uxth	r6, r6
 2860              		.loc 1 3288 0
 2861 0062 89B2     		uxth	r1, r1
3284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 2862              		.loc 1 3284 0
 2863 0064 3243     		orrs	r2, r2, r6
 2864              	.LVL299:
 2865              		.loc 1 3288 0
 2866 0066 41F48071 		orr	r1, r1, #256
 2867              	.LVL300:
3289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2868              		.loc 1 3291 0
 2869 006a A283     		strh	r2, [r4, #28]	@ movhi
3292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2870              		.loc 1 3292 0
 2871 006c 2184     		strh	r1, [r4, #32]	@ movhi
 2872              	.LBE12:
 2873              	.LBE13:
1924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2874              		.loc 1 1924 0
 2875 006e E988     		ldrh	r1, [r5, #6]
 2876              	.LVL301:
 2877 0070 2046     		mov	r0, r4
1935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2878              		.loc 1 1935 0
 2879 0072 BDE87040 		pop	{r4, r5, r6, lr}
1924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2880              		.loc 1 1924 0
 2881 0076 FFF7FEBF 		b	TIM_SetIC3Prescaler
 2882              	.LVL302:
 2883              	.L122:
 2884              	.LBB14:
 2885              	.LBB15:
3293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
3294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
3315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
3316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 2886              		.loc 1 3318 0
 2887 007a 23F48053 		bic	r3, r3, #4096
 2888 007e 1B04     		lsls	r3, r3, #16
 2889 0080 1B0C     		lsrs	r3, r3, #16
 2890 0082 0384     		strh	r3, [r0, #32]	@ movhi
3319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2891              		.loc 1 3319 0
 2892 0084 808B     		ldrh	r0, [r0, #28]
 2893              	.LVL303:
3320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2894              		.loc 1 3320 0
 2895 0086 238C     		ldrh	r3, [r4, #32]
 2896              	.LVL304:
3321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
3322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 2897              		.loc 1 3324 0
 2898 0088 20F44070 		bic	r0, r0, #768
 2899              	.LVL305:
3325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
3326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
3327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 2900              		.loc 1 3329 0
 2901 008c 23F40053 		bic	r3, r3, #8192
 2902              	.LVL306:
3324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 2903              		.loc 1 3324 0
 2904 0090 0005     		lsls	r0, r0, #20
 2905              		.loc 1 3329 0
 2906 0092 5B04     		lsls	r3, r3, #17
3324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 2907              		.loc 1 3324 0
 2908 0094 000D     		lsrs	r0, r0, #20
 2909              	.LVL307:
 2910              		.loc 1 3329 0
 2911 0096 5B0C     		lsrs	r3, r3, #17
3325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 2912              		.loc 1 3325 0
 2913 0098 40EA0222 		orr	r2, r0, r2, lsl #8
 2914              	.LVL308:
3330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 2915              		.loc 1 3330 0
 2916 009c 43EA0133 		orr	r3, r3, r1, lsl #12
3326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 2917              		.loc 1 3326 0
 2918 00a0 42EA0632 		orr	r2, r2, r6, lsl #12
 2919              	.LVL309:
 2920              		.loc 1 3330 0
 2921 00a4 9BB2     		uxth	r3, r3
 2922              	.LBE15:
 2923              	.LBE14:
1933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2924              		.loc 1 1933 0
 2925 00a6 E988     		ldrh	r1, [r5, #6]
 2926              	.LVL310:
 2927              	.LBB18:
 2928              	.LBB16:
3326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 2929              		.loc 1 3326 0
 2930 00a8 92B2     		uxth	r2, r2
 2931              	.LVL311:
 2932              		.loc 1 3330 0
 2933 00aa 43F48053 		orr	r3, r3, #4096
 2934              	.LVL312:
 2935              	.LBE16:
 2936              	.LBE18:
1933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2937              		.loc 1 1933 0
 2938 00ae 2046     		mov	r0, r4
 2939              	.LBB19:
 2940              	.LBB17:
3331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2941              		.loc 1 3333 0
 2942 00b0 A283     		strh	r2, [r4, #28]	@ movhi
3334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 2943              		.loc 1 3334 0
 2944 00b2 2384     		strh	r3, [r4, #32]	@ movhi
 2945              	.LBE17:
 2946              	.LBE19:
1935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2947              		.loc 1 1935 0
 2948 00b4 BDE87040 		pop	{r4, r5, r6, lr}
1933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 2949              		.loc 1 1933 0
 2950 00b8 FFF7FEBF 		b	TIM_SetIC4Prescaler
 2951              	.LVL313:
 2952              	.LVL314:
 2953              		.cfi_endproc
 2954              	.LFE160:
 2956              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 2957              		.align	1
 2958              		.global	TIM_BDTRConfig
 2959              		.thumb
 2960              		.thumb_func
 2962              	TIM_BDTRConfig:
 2963              	.LFB171:
2209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2964              		.loc 1 2209 0
 2965              		.cfi_startproc
 2966              		@ args = 0, pretend = 0, frame = 0
 2967              		@ frame_needed = 0, uses_anonymous_args = 0
 2968              		@ link register save eliminated.
 2969              	.LVL315:
2221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 2970              		.loc 1 2221 0
 2971 0000 4A88     		ldrh	r2, [r1, #2]
 2972 0002 0B88     		ldrh	r3, [r1, #0]
 2973 0004 1343     		orrs	r3, r3, r2
 2974 0006 8A88     		ldrh	r2, [r1, #4]
 2975 0008 1343     		orrs	r3, r3, r2
 2976 000a CA88     		ldrh	r2, [r1, #6]
 2977 000c 1343     		orrs	r3, r3, r2
 2978 000e 0A89     		ldrh	r2, [r1, #8]
 2979 0010 1343     		orrs	r3, r3, r2
 2980 0012 4A89     		ldrh	r2, [r1, #10]
 2981 0014 1343     		orrs	r3, r3, r2
 2982 0016 8A89     		ldrh	r2, [r1, #12]
 2983 0018 1343     		orrs	r3, r3, r2
 2984 001a 9BB2     		uxth	r3, r3
 2985 001c A0F84430 		strh	r3, [r0, #68]	@ movhi
2225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2986              		.loc 1 2225 0
 2987 0020 7047     		bx	lr
 2988              		.cfi_endproc
 2989              	.LFE171:
 2991              		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 2992              		.align	1
 2993              		.global	TIM_BDTRStructInit
 2994              		.thumb
 2995              		.thumb_func
 2997              	TIM_BDTRStructInit:
 2998              	.LFB172:
2234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2999              		.loc 1 2234 0
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 0
 3002              		@ frame_needed = 0, uses_anonymous_args = 0
 3003              		@ link register save eliminated.
 3004              	.LVL316:
2236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 3005              		.loc 1 2236 0
 3006 0000 0023     		movs	r3, #0
 3007 0002 0380     		strh	r3, [r0, #0]	@ movhi
2237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 3008              		.loc 1 2237 0
 3009 0004 4380     		strh	r3, [r0, #2]	@ movhi
2238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 3010              		.loc 1 2238 0
 3011 0006 8380     		strh	r3, [r0, #4]	@ movhi
2239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 3012              		.loc 1 2239 0
 3013 0008 C380     		strh	r3, [r0, #6]	@ movhi
2240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 3014              		.loc 1 2240 0
 3015 000a 0381     		strh	r3, [r0, #8]	@ movhi
2241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 3016              		.loc 1 2241 0
 3017 000c 4381     		strh	r3, [r0, #10]	@ movhi
2242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 3018              		.loc 1 2242 0
 3019 000e 8381     		strh	r3, [r0, #12]	@ movhi
2243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3020              		.loc 1 2243 0
 3021 0010 7047     		bx	lr
 3022              		.cfi_endproc
 3023              	.LFE172:
 3025              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 3026              		.align	1
 3027              		.global	TIM_CtrlPWMOutputs
 3028              		.thumb
 3029              		.thumb_func
 3031              	TIM_CtrlPWMOutputs:
 3032              	.LFB173:
2253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3033              		.loc 1 2253 0
 3034              		.cfi_startproc
 3035              		@ args = 0, pretend = 0, frame = 0
 3036              		@ frame_needed = 0, uses_anonymous_args = 0
 3037              		@ link register save eliminated.
 3038              	.LVL317:
2261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 3039              		.loc 1 2261 0
 3040 0000 B0F84430 		ldrh	r3, [r0, #68]
2258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3041              		.loc 1 2258 0
 3042 0004 29B1     		cbz	r1, .L126
2261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 3043              		.loc 1 2261 0
 3044 0006 6FEA4343 		mvn	r3, r3, lsl #17
 3045 000a 6FEA5343 		mvn	r3, r3, lsr #17
 3046 000e 9BB2     		uxth	r3, r3
 3047 0010 01E0     		b	.L128
 3048              	.L126:
2266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 3049              		.loc 1 2266 0
 3050 0012 5B04     		lsls	r3, r3, #17
 3051 0014 5B0C     		lsrs	r3, r3, #17
 3052              	.L128:
 3053 0016 A0F84430 		strh	r3, [r0, #68]	@ movhi
 3054 001a 7047     		bx	lr
 3055              		.cfi_endproc
 3056              	.LFE173:
 3058              		.section	.text.TIM_SelectCOM,"ax",%progbits
 3059              		.align	1
 3060              		.global	TIM_SelectCOM
 3061              		.thumb
 3062              		.thumb_func
 3064              	TIM_SelectCOM:
 3065              	.LFB174:
2278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3066              		.loc 1 2278 0
 3067              		.cfi_startproc
 3068              		@ args = 0, pretend = 0, frame = 0
 3069              		@ frame_needed = 0, uses_anonymous_args = 0
 3070              		@ link register save eliminated.
 3071              	.LVL318:
2286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 3072              		.loc 1 2286 0
 3073 0000 8388     		ldrh	r3, [r0, #4]
2283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3074              		.loc 1 2283 0
 3075 0002 19B1     		cbz	r1, .L130
2286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 3076              		.loc 1 2286 0
 3077 0004 9BB2     		uxth	r3, r3
 3078 0006 43F00403 		orr	r3, r3, #4
 3079 000a 03E0     		b	.L132
 3080              	.L130:
2291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 3081              		.loc 1 2291 0
 3082 000c 23F00403 		bic	r3, r3, #4
 3083 0010 1B04     		lsls	r3, r3, #16
 3084 0012 1B0C     		lsrs	r3, r3, #16
 3085              	.L132:
 3086 0014 8380     		strh	r3, [r0, #4]	@ movhi
 3087 0016 7047     		bx	lr
 3088              		.cfi_endproc
 3089              	.LFE174:
 3091              		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 3092              		.align	1
 3093              		.global	TIM_CCPreloadControl
 3094              		.thumb
 3095              		.thumb_func
 3097              	TIM_CCPreloadControl:
 3098              	.LFB175:
2303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 3099              		.loc 1 2303 0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 0
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103              		@ link register save eliminated.
 3104              	.LVL319:
2310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 3105              		.loc 1 2310 0
 3106 0000 8388     		ldrh	r3, [r0, #4]
2307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3107              		.loc 1 2307 0
 3108 0002 19B1     		cbz	r1, .L134
2310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 3109              		.loc 1 2310 0
 3110 0004 9BB2     		uxth	r3, r3
 3111 0006 43F00103 		orr	r3, r3, #1
 3112 000a 03E0     		b	.L136
 3113              	.L134:
2315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 3114              		.loc 1 2315 0
 3115 000c 23F00103 		bic	r3, r3, #1
 3116 0010 1B04     		lsls	r3, r3, #16
 3117 0012 1B0C     		lsrs	r3, r3, #16
 3118              	.L136:
 3119 0014 8380     		strh	r3, [r0, #4]	@ movhi
 3120 0016 7047     		bx	lr
 3121              		.cfi_endproc
 3122              	.LFE175:
 3124              		.section	.text.TIM_ITConfig,"ax",%progbits
 3125              		.align	1
 3126              		.global	TIM_ITConfig
 3127              		.thumb
 3128              		.thumb_func
 3130              	TIM_ITConfig:
 3131              	.LFB176:
2360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 3132              		.loc 1 2360 0
 3133              		.cfi_startproc
 3134              		@ args = 0, pretend = 0, frame = 0
 3135              		@ frame_needed = 0, uses_anonymous_args = 0
 3136              		@ link register save eliminated.
 3137              	.LVL320:
2369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 3138              		.loc 1 2369 0
 3139 0000 8389     		ldrh	r3, [r0, #12]
 3140 0002 9BB2     		uxth	r3, r3
2366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3141              		.loc 1 2366 0
 3142 0004 0AB1     		cbz	r2, .L138
2369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 3143              		.loc 1 2369 0
 3144 0006 1943     		orrs	r1, r1, r3
 3145              	.LVL321:
 3146 0008 01E0     		b	.L140
 3147              	.LVL322:
 3148              	.L138:
2374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 3149              		.loc 1 2374 0
 3150 000a 23EA0101 		bic	r1, r3, r1
 3151              	.LVL323:
 3152              	.L140:
 3153 000e 8181     		strh	r1, [r0, #12]	@ movhi
 3154 0010 7047     		bx	lr
 3155              		.cfi_endproc
 3156              	.LFE176:
 3158              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 3159              		.align	1
 3160              		.global	TIM_GenerateEvent
 3161              		.thumb
 3162              		.thumb_func
 3164              	TIM_GenerateEvent:
 3165              	.LFB177:
2398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 3166              		.loc 1 2398 0
 3167              		.cfi_startproc
 3168              		@ args = 0, pretend = 0, frame = 0
 3169              		@ frame_needed = 0, uses_anonymous_args = 0
 3170              		@ link register save eliminated.
 3171              	.LVL324:
2404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 3172              		.loc 1 2404 0
 3173 0000 8182     		strh	r1, [r0, #20]	@ movhi
2405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3174              		.loc 1 2405 0
 3175 0002 7047     		bx	lr
 3176              		.cfi_endproc
 3177              	.LFE177:
 3179              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 3180              		.align	1
 3181              		.global	TIM_GetFlagStatus
 3182              		.thumb
 3183              		.thumb_func
 3185              	TIM_GetFlagStatus:
 3186              	.LFB178:
2431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 3187              		.loc 1 2431 0
 3188              		.cfi_startproc
 3189              		@ args = 0, pretend = 0, frame = 0
 3190              		@ frame_needed = 0, uses_anonymous_args = 0
 3191              		@ link register save eliminated.
 3192              	.LVL325:
2438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 3193              		.loc 1 2438 0
 3194 0000 038A     		ldrh	r3, [r0, #16]
 3195              	.LVL326:
2440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 3196              		.loc 1 2440 0
 3197 0002 1942     		tst	r1, r3
2446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 3198              		.loc 1 2446 0
 3199 0004 0CBF     		ite	eq
 3200 0006 0020     		moveq	r0, #0
 3201 0008 0120     		movne	r0, #1
 3202              	.LVL327:
2447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3203              		.loc 1 2447 0
 3204 000a 7047     		bx	lr
 3205              		.cfi_endproc
 3206              	.LFE178:
 3208              		.section	.text.TIM_ClearFlag,"ax",%progbits
 3209              		.align	1
 3210              		.global	TIM_ClearFlag
 3211              		.thumb
 3212              		.thumb_func
 3214              	TIM_ClearFlag:
 3215              	.LFB179:
2473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 3216              		.loc 1 2473 0
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 0
 3219              		@ frame_needed = 0, uses_anonymous_args = 0
 3220              		@ link register save eliminated.
 3221              	.LVL328:
2478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 3222              		.loc 1 2478 0
 3223 0000 C943     		mvns	r1, r1
 3224              	.LVL329:
 3225 0002 89B2     		uxth	r1, r1
 3226 0004 0182     		strh	r1, [r0, #16]	@ movhi
2479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3227              		.loc 1 2479 0
 3228 0006 7047     		bx	lr
 3229              		.cfi_endproc
 3230              	.LFE179:
 3232              		.section	.text.TIM_GetITStatus,"ax",%progbits
 3233              		.align	1
 3234              		.global	TIM_GetITStatus
 3235              		.thumb
 3236              		.thumb_func
 3238              	TIM_GetITStatus:
 3239              	.LFB180:
2501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3240              		.loc 1 2501 0
 3241              		.cfi_startproc
 3242              		@ args = 0, pretend = 0, frame = 0
 3243              		@ frame_needed = 0, uses_anonymous_args = 0
 3244              		@ link register save eliminated.
 3245              	.LVL330:
2508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 3246              		.loc 1 2508 0
 3247 0000 038A     		ldrh	r3, [r0, #16]
 3248              	.LVL331:
2510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 3249              		.loc 1 2510 0
 3250 0002 8289     		ldrh	r2, [r0, #12]
 3251              	.LVL332:
2511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 3252              		.loc 1 2511 0
 3253 0004 1142     		tst	r1, r2
 3254 0006 0CBF     		ite	eq
 3255 0008 0020     		moveq	r0, #0
 3256 000a 0120     		movne	r0, #1
 3257              	.LVL333:
 3258 000c 1942     		tst	r1, r3
2519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 3259              		.loc 1 2519 0
 3260 000e 0CBF     		ite	eq
 3261 0010 0020     		moveq	r0, #0
 3262 0012 00F00100 		andne	r0, r0, #1
2520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3263              		.loc 1 2520 0
 3264 0016 7047     		bx	lr
 3265              		.cfi_endproc
 3266              	.LFE180:
 3268              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 3269              		.align	1
 3270              		.global	TIM_ClearITPendingBit
 3271              		.thumb
 3272              		.thumb_func
 3274              	TIM_ClearITPendingBit:
 3275              	.LFB181:
2542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3276              		.loc 1 2542 0
 3277              		.cfi_startproc
 3278              		@ args = 0, pretend = 0, frame = 0
 3279              		@ frame_needed = 0, uses_anonymous_args = 0
 3280              		@ link register save eliminated.
 3281              	.LVL334:
2547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 3282              		.loc 1 2547 0
 3283 0000 C943     		mvns	r1, r1
 3284              	.LVL335:
 3285 0002 89B2     		uxth	r1, r1
 3286 0004 0182     		strh	r1, [r0, #16]	@ movhi
2548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3287              		.loc 1 2548 0
 3288 0006 7047     		bx	lr
 3289              		.cfi_endproc
 3290              	.LFE181:
 3292              		.section	.text.TIM_DMAConfig,"ax",%progbits
 3293              		.align	1
 3294              		.global	TIM_DMAConfig
 3295              		.thumb
 3296              		.thumb_func
 3298              	TIM_DMAConfig:
 3299              	.LFB182:
2579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3300              		.loc 1 2579 0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
 3304              		@ link register save eliminated.
 3305              	.LVL336:
2586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 3306              		.loc 1 2586 0
 3307 0000 1143     		orrs	r1, r1, r2
 3308              	.LVL337:
 3309 0002 A0F84810 		strh	r1, [r0, #72]	@ movhi
2587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3310              		.loc 1 2587 0
 3311 0006 7047     		bx	lr
 3312              		.cfi_endproc
 3313              	.LFE182:
 3315              		.section	.text.TIM_DMACmd,"ax",%progbits
 3316              		.align	1
 3317              		.global	TIM_DMACmd
 3318              		.thumb
 3319              		.thumb_func
 3321              	TIM_DMACmd:
 3322              	.LFB183:
2606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 3323              		.loc 1 2606 0
 3324              		.cfi_startproc
 3325              		@ args = 0, pretend = 0, frame = 0
 3326              		@ frame_needed = 0, uses_anonymous_args = 0
 3327              		@ link register save eliminated.
 3328              	.LVL338:
2615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 3329              		.loc 1 2615 0
 3330 0000 8389     		ldrh	r3, [r0, #12]
 3331 0002 9BB2     		uxth	r3, r3
2612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3332              		.loc 1 2612 0
 3333 0004 0AB1     		cbz	r2, .L148
2615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 3334              		.loc 1 2615 0
 3335 0006 1943     		orrs	r1, r1, r3
 3336              	.LVL339:
 3337 0008 01E0     		b	.L150
 3338              	.LVL340:
 3339              	.L148:
2620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 3340              		.loc 1 2620 0
 3341 000a 23EA0101 		bic	r1, r3, r1
 3342              	.LVL341:
 3343              	.L150:
 3344 000e 8181     		strh	r1, [r0, #12]	@ movhi
 3345 0010 7047     		bx	lr
 3346              		.cfi_endproc
 3347              	.LFE183:
 3349              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 3350              		.align	1
 3351              		.global	TIM_SelectCCDMA
 3352              		.thumb
 3353              		.thumb_func
 3355              	TIM_SelectCCDMA:
 3356              	.LFB184:
2632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3357              		.loc 1 2632 0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 0, uses_anonymous_args = 0
 3361              		@ link register save eliminated.
 3362              	.LVL342:
2640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 3363              		.loc 1 2640 0
 3364 0000 8388     		ldrh	r3, [r0, #4]
2637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3365              		.loc 1 2637 0
 3366 0002 19B1     		cbz	r1, .L152
2640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 3367              		.loc 1 2640 0
 3368 0004 9BB2     		uxth	r3, r3
 3369 0006 43F00803 		orr	r3, r3, #8
 3370 000a 03E0     		b	.L154
 3371              	.L152:
2645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 3372              		.loc 1 2645 0
 3373 000c 23F00803 		bic	r3, r3, #8
 3374 0010 1B04     		lsls	r3, r3, #16
 3375 0012 1B0C     		lsrs	r3, r3, #16
 3376              	.L154:
 3377 0014 8380     		strh	r3, [r0, #4]	@ movhi
 3378 0016 7047     		bx	lr
 3379              		.cfi_endproc
 3380              	.LFE184:
 3382              		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 3383              		.align	1
 3384              		.global	TIM_InternalClockConfig
 3385              		.thumb
 3386              		.thumb_func
 3388              	TIM_InternalClockConfig:
 3389              	.LFB185:
2671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3390              		.loc 1 2671 0
 3391              		.cfi_startproc
 3392              		@ args = 0, pretend = 0, frame = 0
 3393              		@ frame_needed = 0, uses_anonymous_args = 0
 3394              		@ link register save eliminated.
 3395              	.LVL343:
2676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 3396              		.loc 1 2676 0
 3397 0000 0389     		ldrh	r3, [r0, #8]
 3398 0002 23F00703 		bic	r3, r3, #7
 3399 0006 1B04     		lsls	r3, r3, #16
 3400 0008 1B0C     		lsrs	r3, r3, #16
 3401 000a 0381     		strh	r3, [r0, #8]	@ movhi
2677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3402              		.loc 1 2677 0
 3403 000c 7047     		bx	lr
 3404              		.cfi_endproc
 3405              	.LFE185:
 3407              		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 3408              		.align	1
 3409              		.global	TIM_ITRxExternalClockConfig
 3410              		.thumb
 3411              		.thumb_func
 3413              	TIM_ITRxExternalClockConfig:
 3414              	.LFB186:
2692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3415              		.loc 1 2692 0
 3416              		.cfi_startproc
 3417              		@ args = 0, pretend = 0, frame = 0
 3418              		@ frame_needed = 0, uses_anonymous_args = 0
 3419              		@ link register save eliminated.
 3420              	.LVL344:
 3421              	.LBB20:
 3422              	.LBB21:
2885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3423              		.loc 1 2885 0
 3424 0000 0389     		ldrh	r3, [r0, #8]
 3425              	.LVL345:
2888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 3426              		.loc 1 2888 0
 3427 0002 23F07003 		bic	r3, r3, #112
 3428              	.LVL346:
 3429 0006 1B04     		lsls	r3, r3, #16
 3430 0008 1B0C     		lsrs	r3, r3, #16
 3431              	.LVL347:
2891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 3432              		.loc 1 2891 0
 3433 000a 0B43     		orrs	r3, r3, r1
 3434              	.LVL348:
2894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3435              		.loc 1 2894 0
 3436 000c 0381     		strh	r3, [r0, #8]	@ movhi
 3437              	.LBE21:
 3438              	.LBE20:
2701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 3439              		.loc 1 2701 0
 3440 000e 0389     		ldrh	r3, [r0, #8]
 3441              	.LVL349:
 3442 0010 9BB2     		uxth	r3, r3
 3443 0012 43F00703 		orr	r3, r3, #7
 3444 0016 0381     		strh	r3, [r0, #8]	@ movhi
2702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3445              		.loc 1 2702 0
 3446 0018 7047     		bx	lr
 3447              		.cfi_endproc
 3448              	.LFE186:
 3450              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 3451              		.align	1
 3452              		.global	TIM_TIxExternalClockConfig
 3453              		.thumb
 3454              		.thumb_func
 3456              	TIM_TIxExternalClockConfig:
 3457              	.LFB187:
2723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3458              		.loc 1 2723 0
 3459              		.cfi_startproc
 3460              		@ args = 0, pretend = 0, frame = 0
 3461              		@ frame_needed = 0, uses_anonymous_args = 0
 3462              	.LVL350:
 3463 0000 38B5     		push	{r3, r4, r5, lr}
 3464              	.LCFI13:
 3465              		.cfi_def_cfa_offset 16
 3466              		.cfi_offset 14, -4
 3467              		.cfi_offset 5, -8
 3468              		.cfi_offset 4, -12
 3469              		.cfi_offset 3, -16
2723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3470              		.loc 1 2723 0
 3471 0002 0D46     		mov	r5, r1
 3472 0004 1146     		mov	r1, r2
 3473              	.LVL351:
2732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 3474              		.loc 1 2732 0
 3475 0006 0122     		movs	r2, #1
 3476              	.LVL352:
2730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 3477              		.loc 1 2730 0
 3478 0008 602D     		cmp	r5, #96
2723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3479              		.loc 1 2723 0
 3480 000a 0446     		mov	r4, r0
2730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 3481              		.loc 1 2730 0
 3482 000c 02D1     		bne	.L158
2732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 3483              		.loc 1 2732 0
 3484 000e FFF7FEFF 		bl	TI2_Config
 3485              	.LVL353:
 3486 0012 01E0     		b	.L159
 3487              	.LVL354:
 3488              	.L158:
2736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 3489              		.loc 1 2736 0
 3490 0014 FFF7FEFF 		bl	TI1_Config
 3491              	.LVL355:
 3492              	.L159:
 3493              	.LBB22:
 3494              	.LBB23:
2885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3495              		.loc 1 2885 0
 3496 0018 2389     		ldrh	r3, [r4, #8]
 3497              	.LVL356:
2888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 3498              		.loc 1 2888 0
 3499 001a 23F07003 		bic	r3, r3, #112
 3500              	.LVL357:
 3501 001e 1B04     		lsls	r3, r3, #16
 3502 0020 1B0C     		lsrs	r3, r3, #16
 3503              	.LVL358:
2891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 3504              		.loc 1 2891 0
 3505 0022 1D43     		orrs	r5, r5, r3
 3506              	.LVL359:
2894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3507              		.loc 1 2894 0
 3508 0024 2581     		strh	r5, [r4, #8]	@ movhi
 3509              	.LBE23:
 3510              	.LBE22:
2741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 3511              		.loc 1 2741 0
 3512 0026 2389     		ldrh	r3, [r4, #8]
 3513 0028 9BB2     		uxth	r3, r3
 3514 002a 43F00703 		orr	r3, r3, #7
 3515 002e 2381     		strh	r3, [r4, #8]	@ movhi
2742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3516              		.loc 1 2742 0
 3517 0030 38BD     		pop	{r3, r4, r5, pc}
 3518              		.cfi_endproc
 3519              	.LFE187:
 3521              		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 3522              		.align	1
 3523              		.global	TIM_SelectInputTrigger
 3524              		.thumb
 3525              		.thumb_func
 3527              	TIM_SelectInputTrigger:
 3528              	.LFB190:
2877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3529              		.loc 1 2877 0
 3530              		.cfi_startproc
 3531              		@ args = 0, pretend = 0, frame = 0
 3532              		@ frame_needed = 0, uses_anonymous_args = 0
 3533              		@ link register save eliminated.
 3534              	.LVL360:
2885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3535              		.loc 1 2885 0
 3536 0000 0389     		ldrh	r3, [r0, #8]
 3537              	.LVL361:
2888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 3538              		.loc 1 2888 0
 3539 0002 23F07003 		bic	r3, r3, #112
 3540              	.LVL362:
 3541 0006 1B04     		lsls	r3, r3, #16
 3542 0008 1B0C     		lsrs	r3, r3, #16
 3543              	.LVL363:
2891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 3544              		.loc 1 2891 0
 3545 000a 0B43     		orrs	r3, r3, r1
 3546              	.LVL364:
2894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3547              		.loc 1 2894 0
 3548 000c 0381     		strh	r3, [r0, #8]	@ movhi
2895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3549              		.loc 1 2895 0
 3550 000e 7047     		bx	lr
 3551              		.cfi_endproc
 3552              	.LFE190:
 3554              		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 3555              		.align	1
 3556              		.global	TIM_SelectOutputTrigger
 3557              		.thumb
 3558              		.thumb_func
 3560              	TIM_SelectOutputTrigger:
 3561              	.LFB191:
2920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3562              		.loc 1 2920 0
 3563              		.cfi_startproc
 3564              		@ args = 0, pretend = 0, frame = 0
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              		@ link register save eliminated.
 3567              	.LVL365:
2926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 3568              		.loc 1 2926 0
 3569 0000 8388     		ldrh	r3, [r0, #4]
 3570 0002 23F07003 		bic	r3, r3, #112
 3571 0006 1B04     		lsls	r3, r3, #16
 3572 0008 1B0C     		lsrs	r3, r3, #16
 3573 000a 8380     		strh	r3, [r0, #4]	@ movhi
2928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 3574              		.loc 1 2928 0
 3575 000c 8388     		ldrh	r3, [r0, #4]
 3576 000e 9BB2     		uxth	r3, r3
 3577 0010 1943     		orrs	r1, r1, r3
 3578              	.LVL366:
 3579 0012 8180     		strh	r1, [r0, #4]	@ movhi
2929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3580              		.loc 1 2929 0
 3581 0014 7047     		bx	lr
 3582              		.cfi_endproc
 3583              	.LFE191:
 3585              		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 3586              		.align	1
 3587              		.global	TIM_SelectSlaveMode
 3588              		.thumb
 3589              		.thumb_func
 3591              	TIM_SelectSlaveMode:
 3592              	.LFB192:
2944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3593              		.loc 1 2944 0
 3594              		.cfi_startproc
 3595              		@ args = 0, pretend = 0, frame = 0
 3596              		@ frame_needed = 0, uses_anonymous_args = 0
 3597              		@ link register save eliminated.
 3598              	.LVL367:
2950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 3599              		.loc 1 2950 0
 3600 0000 0389     		ldrh	r3, [r0, #8]
 3601 0002 23F00703 		bic	r3, r3, #7
 3602 0006 1B04     		lsls	r3, r3, #16
 3603 0008 1B0C     		lsrs	r3, r3, #16
 3604 000a 0381     		strh	r3, [r0, #8]	@ movhi
2953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 3605              		.loc 1 2953 0
 3606 000c 0389     		ldrh	r3, [r0, #8]
 3607 000e 9BB2     		uxth	r3, r3
 3608 0010 1943     		orrs	r1, r1, r3
 3609              	.LVL368:
 3610 0012 0181     		strh	r1, [r0, #8]	@ movhi
2954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3611              		.loc 1 2954 0
 3612 0014 7047     		bx	lr
 3613              		.cfi_endproc
 3614              	.LFE192:
 3616              		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 3617              		.align	1
 3618              		.global	TIM_SelectMasterSlaveMode
 3619              		.thumb
 3620              		.thumb_func
 3622              	TIM_SelectMasterSlaveMode:
 3623              	.LFB193:
2967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3624              		.loc 1 2967 0
 3625              		.cfi_startproc
 3626              		@ args = 0, pretend = 0, frame = 0
 3627              		@ frame_needed = 0, uses_anonymous_args = 0
 3628              		@ link register save eliminated.
 3629              	.LVL369:
2973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 3630              		.loc 1 2973 0
 3631 0000 0389     		ldrh	r3, [r0, #8]
 3632 0002 23F08003 		bic	r3, r3, #128
 3633 0006 1B04     		lsls	r3, r3, #16
 3634 0008 1B0C     		lsrs	r3, r3, #16
 3635 000a 0381     		strh	r3, [r0, #8]	@ movhi
2976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 3636              		.loc 1 2976 0
 3637 000c 0389     		ldrh	r3, [r0, #8]
 3638 000e 9BB2     		uxth	r3, r3
 3639 0010 1943     		orrs	r1, r1, r3
 3640              	.LVL370:
 3641 0012 0181     		strh	r1, [r0, #8]	@ movhi
2977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3642              		.loc 1 2977 0
 3643 0014 7047     		bx	lr
 3644              		.cfi_endproc
 3645              	.LFE193:
 3647              		.section	.text.TIM_ETRConfig,"ax",%progbits
 3648              		.align	1
 3649              		.global	TIM_ETRConfig
 3650              		.thumb
 3651              		.thumb_func
 3653              	TIM_ETRConfig:
 3654              	.LFB194:
2998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3655              		.loc 1 2998 0
 3656              		.cfi_startproc
 3657              		@ args = 0, pretend = 0, frame = 0
 3658              		@ frame_needed = 0, uses_anonymous_args = 0
 3659              	.LVL371:
 3660 0000 10B5     		push	{r4, lr}
 3661              	.LCFI14:
 3662              		.cfi_def_cfa_offset 8
 3663              		.cfi_offset 14, -4
 3664              		.cfi_offset 4, -8
3007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3665              		.loc 1 3007 0
 3666 0002 0489     		ldrh	r4, [r0, #8]
 3667              	.LVL372:
3010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 3668              		.loc 1 3010 0
 3669 0004 E4B2     		uxtb	r4, r4
 3670              	.LVL373:
3013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 3671              		.loc 1 3013 0
 3672 0006 2143     		orrs	r1, r1, r4
 3673              	.LVL374:
 3674 0008 0A43     		orrs	r2, r2, r1
 3675              	.LVL375:
 3676 000a 42EA0322 		orr	r2, r2, r3, lsl #8
 3677 000e 92B2     		uxth	r2, r2
 3678              	.LVL376:
3016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3679              		.loc 1 3016 0
 3680 0010 0281     		strh	r2, [r0, #8]	@ movhi
3017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3681              		.loc 1 3017 0
 3682 0012 10BD     		pop	{r4, pc}
 3683              		.cfi_endproc
 3684              	.LFE194:
 3686              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 3687              		.align	1
 3688              		.global	TIM_ETRClockMode2Config
 3689              		.thumb
 3690              		.thumb_func
 3692              	TIM_ETRClockMode2Config:
 3693              	.LFB189:
2810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3694              		.loc 1 2810 0
 3695              		.cfi_startproc
 3696              		@ args = 0, pretend = 0, frame = 0
 3697              		@ frame_needed = 0, uses_anonymous_args = 0
 3698              	.LVL377:
 3699 0000 10B5     		push	{r4, lr}
 3700              	.LCFI15:
 3701              		.cfi_def_cfa_offset 8
 3702              		.cfi_offset 14, -4
 3703              		.cfi_offset 4, -8
2810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3704              		.loc 1 2810 0
 3705 0002 0446     		mov	r4, r0
2818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 3706              		.loc 1 2818 0
 3707 0004 FFF7FEFF 		bl	TIM_ETRConfig
 3708              	.LVL378:
2821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 3709              		.loc 1 2821 0
 3710 0008 2389     		ldrh	r3, [r4, #8]
 3711 000a 9BB2     		uxth	r3, r3
 3712 000c 43F48043 		orr	r3, r3, #16384
 3713 0010 2381     		strh	r3, [r4, #8]	@ movhi
2822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3714              		.loc 1 2822 0
 3715 0012 10BD     		pop	{r4, pc}
 3716              		.cfi_endproc
 3717              	.LFE189:
 3719              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 3720              		.align	1
 3721              		.global	TIM_ETRClockMode1Config
 3722              		.thumb
 3723              		.thumb_func
 3725              	TIM_ETRClockMode1Config:
 3726              	.LFB188:
2763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3727              		.loc 1 2763 0
 3728              		.cfi_startproc
 3729              		@ args = 0, pretend = 0, frame = 0
 3730              		@ frame_needed = 0, uses_anonymous_args = 0
 3731              	.LVL379:
 3732 0000 10B5     		push	{r4, lr}
 3733              	.LCFI16:
 3734              		.cfi_def_cfa_offset 8
 3735              		.cfi_offset 14, -4
 3736              		.cfi_offset 4, -8
2763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3737              		.loc 1 2763 0
 3738 0002 0446     		mov	r4, r0
2772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 3739              		.loc 1 2772 0
 3740 0004 FFF7FEFF 		bl	TIM_ETRConfig
 3741              	.LVL380:
2775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3742              		.loc 1 2775 0
 3743 0008 2389     		ldrh	r3, [r4, #8]
 3744              	.LVL381:
2781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 3745              		.loc 1 2781 0
 3746 000a 23F07703 		bic	r3, r3, #119
 3747              	.LVL382:
 3748 000e 1B04     		lsls	r3, r3, #16
 3749 0010 1B0C     		lsrs	r3, r3, #16
 3750              	.LVL383:
2785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 3751              		.loc 1 2785 0
 3752 0012 43F07703 		orr	r3, r3, #119
 3753              	.LVL384:
2788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3754              		.loc 1 2788 0
 3755 0016 2381     		strh	r3, [r4, #8]	@ movhi
2789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3756              		.loc 1 2789 0
 3757 0018 10BD     		pop	{r4, pc}
 3758              		.cfi_endproc
 3759              	.LFE188:
 3761              		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 3762              		.align	1
 3763              		.global	TIM_EncoderInterfaceConfig
 3764              		.thumb
 3765              		.thumb_func
 3767              	TIM_EncoderInterfaceConfig:
 3768              	.LFB195:
3056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3769              		.loc 1 3056 0
 3770              		.cfi_startproc
 3771              		@ args = 0, pretend = 0, frame = 0
 3772              		@ frame_needed = 0, uses_anonymous_args = 0
 3773              	.LVL385:
 3774 0000 70B5     		push	{r4, r5, r6, lr}
 3775              	.LCFI17:
 3776              		.cfi_def_cfa_offset 16
 3777              		.cfi_offset 14, -4
 3778              		.cfi_offset 6, -8
 3779              		.cfi_offset 5, -12
 3780              		.cfi_offset 4, -16
3068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 3781              		.loc 1 3068 0
 3782 0002 0589     		ldrh	r5, [r0, #8]
 3783              	.LVL386:
3071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 3784              		.loc 1 3071 0
 3785 0004 048B     		ldrh	r4, [r0, #24]
 3786              	.LVL387:
3074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3787              		.loc 1 3074 0
 3788 0006 068C     		ldrh	r6, [r0, #32]
3077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 3789              		.loc 1 3077 0
 3790 0008 25F00705 		bic	r5, r5, #7
 3791              	.LVL388:
 3792 000c 2D04     		lsls	r5, r5, #16
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 3793              		.loc 1 3081 0
 3794 000e 24F44074 		bic	r4, r4, #768
 3795              	.LVL389:
3077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 3796              		.loc 1 3077 0
 3797 0012 2D0C     		lsrs	r5, r5, #16
3074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3798              		.loc 1 3074 0
 3799 0014 B6B2     		uxth	r6, r6
 3800              	.LVL390:
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 3801              		.loc 1 3081 0
 3802 0016 24F00304 		bic	r4, r4, #3
3078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 3803              		.loc 1 3078 0
 3804 001a 2943     		orrs	r1, r1, r5
 3805              	.LVL391:
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 3806              		.loc 1 3081 0
 3807 001c 2404     		lsls	r4, r4, #16
3085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 3808              		.loc 1 3085 0
 3809 001e 26F02205 		bic	r5, r6, #34
3081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 3810              		.loc 1 3081 0
 3811 0022 240C     		lsrs	r4, r4, #16
 3812              	.LVL392:
3086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 3813              		.loc 1 3086 0
 3814 0024 2A43     		orrs	r2, r2, r5
 3815              	.LVL393:
3082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 3816              		.loc 1 3082 0
 3817 0026 44F48074 		orr	r4, r4, #256
 3818              	.LVL394:
3086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 3819              		.loc 1 3086 0
 3820 002a 42EA0312 		orr	r2, r2, r3, lsl #4
3082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 3821              		.loc 1 3082 0
 3822 002e 44F00104 		orr	r4, r4, #1
 3823              	.LVL395:
3086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 3824              		.loc 1 3086 0
 3825 0032 92B2     		uxth	r2, r2
 3826              	.LVL396:
3089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 3827              		.loc 1 3089 0
 3828 0034 0181     		strh	r1, [r0, #8]	@ movhi
3092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 3829              		.loc 1 3092 0
 3830 0036 0483     		strh	r4, [r0, #24]	@ movhi
3095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3831              		.loc 1 3095 0
 3832 0038 0284     		strh	r2, [r0, #32]	@ movhi
3096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3833              		.loc 1 3096 0
 3834 003a 70BD     		pop	{r4, r5, r6, pc}
 3835              		.cfi_endproc
 3836              	.LFE195:
 3838              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 3839              		.align	1
 3840              		.global	TIM_SelectHallSensor
 3841              		.thumb
 3842              		.thumb_func
 3844              	TIM_SelectHallSensor:
 3845              	.LFB196:
3107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3846              		.loc 1 3107 0
 3847              		.cfi_startproc
 3848              		@ args = 0, pretend = 0, frame = 0
 3849              		@ frame_needed = 0, uses_anonymous_args = 0
 3850              		@ link register save eliminated.
 3851              	.LVL397:
3115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 3852              		.loc 1 3115 0
 3853 0000 8388     		ldrh	r3, [r0, #4]
3112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 3854              		.loc 1 3112 0
 3855 0002 19B1     		cbz	r1, .L169
3115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 3856              		.loc 1 3115 0
 3857 0004 9BB2     		uxth	r3, r3
 3858 0006 43F08003 		orr	r3, r3, #128
 3859 000a 03E0     		b	.L171
 3860              	.L169:
3120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 3861              		.loc 1 3120 0
 3862 000c 23F08003 		bic	r3, r3, #128
 3863 0010 1B04     		lsls	r3, r3, #16
 3864 0012 1B0C     		lsrs	r3, r3, #16
 3865              	.L171:
 3866 0014 8380     		strh	r3, [r0, #4]	@ movhi
 3867 0016 7047     		bx	lr
 3868              		.cfi_endproc
 3869              	.LFE196:
 3871              		.section	.text.TIM_RemapConfig,"ax",%progbits
 3872              		.align	1
 3873              		.global	TIM_RemapConfig
 3874              		.thumb
 3875              		.thumb_func
 3877              	TIM_RemapConfig:
 3878              	.LFB197:
3158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3879              		.loc 1 3158 0
 3880              		.cfi_startproc
 3881              		@ args = 0, pretend = 0, frame = 0
 3882              		@ frame_needed = 0, uses_anonymous_args = 0
 3883              		@ link register save eliminated.
 3884              	.LVL398:
3164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 3885              		.loc 1 3164 0
 3886 0000 A0F85010 		strh	r1, [r0, #80]	@ movhi
3165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3887              		.loc 1 3165 0
 3888 0004 7047     		bx	lr
 3889              		.cfi_endproc
 3890              	.LFE197:
 3892              		.text
 3893              	.Letext0:
 3894              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 3895              		.file 3 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4x
 3896              		.file 4 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_
 3897              		.file 5 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
  C:\Temp\ccWUwiM1.s:19     .text.TI1_Config:00000000 $t
  C:\Temp\ccWUwiM1.s:23     .text.TI1_Config:00000000 TI1_Config
  C:\Temp\ccWUwiM1.s:81     .text.TI2_Config:00000000 $t
  C:\Temp\ccWUwiM1.s:85     .text.TI2_Config:00000000 TI2_Config
  C:\Temp\ccWUwiM1.s:145    .text.TIM_DeInit:00000000 $t
  C:\Temp\ccWUwiM1.s:150    .text.TIM_DeInit:00000000 TIM_DeInit
  C:\Temp\ccWUwiM1.s:371    .text.TIM_DeInit:00000120 $d
  C:\Temp\ccWUwiM1.s:388    .text.TIM_TimeBaseInit:00000000 $t
  C:\Temp\ccWUwiM1.s:393    .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
  C:\Temp\ccWUwiM1.s:500    .text.TIM_TimeBaseInit:00000090 $d
  C:\Temp\ccWUwiM1.s:510    .text.TIM_TimeBaseStructInit:00000000 $t
  C:\Temp\ccWUwiM1.s:515    .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
  C:\Temp\ccWUwiM1.s:541    .text.TIM_PrescalerConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:546    .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
  C:\Temp\ccWUwiM1.s:564    .text.TIM_CounterModeConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:569    .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
  C:\Temp\ccWUwiM1.s:597    .text.TIM_SetCounter:00000000 $t
  C:\Temp\ccWUwiM1.s:602    .text.TIM_SetCounter:00000000 TIM_SetCounter
  C:\Temp\ccWUwiM1.s:618    .text.TIM_SetAutoreload:00000000 $t
  C:\Temp\ccWUwiM1.s:623    .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
  C:\Temp\ccWUwiM1.s:639    .text.TIM_GetCounter:00000000 $t
  C:\Temp\ccWUwiM1.s:644    .text.TIM_GetCounter:00000000 TIM_GetCounter
  C:\Temp\ccWUwiM1.s:661    .text.TIM_GetPrescaler:00000000 $t
  C:\Temp\ccWUwiM1.s:666    .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
  C:\Temp\ccWUwiM1.s:684    .text.TIM_UpdateDisableConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:689    .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
  C:\Temp\ccWUwiM1.s:717    .text.TIM_UpdateRequestConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:722    .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
  C:\Temp\ccWUwiM1.s:750    .text.TIM_ARRPreloadConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:755    .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
  C:\Temp\ccWUwiM1.s:783    .text.TIM_SelectOnePulseMode:00000000 $t
  C:\Temp\ccWUwiM1.s:788    .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
  C:\Temp\ccWUwiM1.s:814    .text.TIM_SetClockDivision:00000000 $t
  C:\Temp\ccWUwiM1.s:819    .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
  C:\Temp\ccWUwiM1.s:845    .text.TIM_Cmd:00000000 $t
  C:\Temp\ccWUwiM1.s:850    .text.TIM_Cmd:00000000 TIM_Cmd
  C:\Temp\ccWUwiM1.s:878    .text.TIM_OC1Init:00000000 $t
  C:\Temp\ccWUwiM1.s:883    .text.TIM_OC1Init:00000000 TIM_OC1Init
  C:\Temp\ccWUwiM1.s:994    .text.TIM_OC1Init:00000074 $d
  C:\Temp\ccWUwiM1.s:1000   .text.TIM_OC2Init:00000000 $t
  C:\Temp\ccWUwiM1.s:1005   .text.TIM_OC2Init:00000000 TIM_OC2Init
  C:\Temp\ccWUwiM1.s:1125   .text.TIM_OC2Init:0000008c $d
  C:\Temp\ccWUwiM1.s:1131   .text.TIM_OC3Init:00000000 $t
  C:\Temp\ccWUwiM1.s:1136   .text.TIM_OC3Init:00000000 TIM_OC3Init
  C:\Temp\ccWUwiM1.s:1251   .text.TIM_OC3Init:00000084 $d
  C:\Temp\ccWUwiM1.s:1257   .text.TIM_OC4Init:00000000 $t
  C:\Temp\ccWUwiM1.s:1262   .text.TIM_OC4Init:00000000 TIM_OC4Init
  C:\Temp\ccWUwiM1.s:1359   .text.TIM_OC4Init:00000070 $d
  C:\Temp\ccWUwiM1.s:1365   .text.TIM_OCStructInit:00000000 $t
  C:\Temp\ccWUwiM1.s:1370   .text.TIM_OCStructInit:00000000 TIM_OCStructInit
  C:\Temp\ccWUwiM1.s:1401   .text.TIM_SelectOCxM:00000000 $t
  C:\Temp\ccWUwiM1.s:1406   .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
  C:\Temp\ccWUwiM1.s:1478   .text.TIM_SetCompare1:00000000 $t
  C:\Temp\ccWUwiM1.s:1483   .text.TIM_SetCompare1:00000000 TIM_SetCompare1
  C:\Temp\ccWUwiM1.s:1499   .text.TIM_SetCompare2:00000000 $t
  C:\Temp\ccWUwiM1.s:1504   .text.TIM_SetCompare2:00000000 TIM_SetCompare2
  C:\Temp\ccWUwiM1.s:1520   .text.TIM_SetCompare3:00000000 $t
  C:\Temp\ccWUwiM1.s:1525   .text.TIM_SetCompare3:00000000 TIM_SetCompare3
  C:\Temp\ccWUwiM1.s:1541   .text.TIM_SetCompare4:00000000 $t
  C:\Temp\ccWUwiM1.s:1546   .text.TIM_SetCompare4:00000000 TIM_SetCompare4
  C:\Temp\ccWUwiM1.s:1562   .text.TIM_ForcedOC1Config:00000000 $t
  C:\Temp\ccWUwiM1.s:1567   .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
  C:\Temp\ccWUwiM1.s:1595   .text.TIM_ForcedOC2Config:00000000 $t
  C:\Temp\ccWUwiM1.s:1600   .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
  C:\Temp\ccWUwiM1.s:1630   .text.TIM_ForcedOC3Config:00000000 $t
  C:\Temp\ccWUwiM1.s:1635   .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
  C:\Temp\ccWUwiM1.s:1663   .text.TIM_ForcedOC4Config:00000000 $t
  C:\Temp\ccWUwiM1.s:1668   .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
  C:\Temp\ccWUwiM1.s:1698   .text.TIM_OC1PreloadConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:1703   .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
  C:\Temp\ccWUwiM1.s:1731   .text.TIM_OC2PreloadConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:1736   .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
  C:\Temp\ccWUwiM1.s:1766   .text.TIM_OC3PreloadConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:1771   .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
  C:\Temp\ccWUwiM1.s:1799   .text.TIM_OC4PreloadConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:1804   .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
  C:\Temp\ccWUwiM1.s:1834   .text.TIM_OC1FastConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:1839   .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
  C:\Temp\ccWUwiM1.s:1867   .text.TIM_OC2FastConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:1872   .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
  C:\Temp\ccWUwiM1.s:1902   .text.TIM_OC3FastConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:1907   .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
  C:\Temp\ccWUwiM1.s:1935   .text.TIM_OC4FastConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:1940   .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
  C:\Temp\ccWUwiM1.s:1970   .text.TIM_ClearOC1Ref:00000000 $t
  C:\Temp\ccWUwiM1.s:1975   .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
  C:\Temp\ccWUwiM1.s:2003   .text.TIM_ClearOC2Ref:00000000 $t
  C:\Temp\ccWUwiM1.s:2008   .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
  C:\Temp\ccWUwiM1.s:2037   .text.TIM_ClearOC3Ref:00000000 $t
  C:\Temp\ccWUwiM1.s:2042   .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
  C:\Temp\ccWUwiM1.s:2070   .text.TIM_ClearOC4Ref:00000000 $t
  C:\Temp\ccWUwiM1.s:2075   .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
  C:\Temp\ccWUwiM1.s:2104   .text.TIM_OC1PolarityConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:2109   .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
  C:\Temp\ccWUwiM1.s:2137   .text.TIM_OC1NPolarityConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:2142   .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
  C:\Temp\ccWUwiM1.s:2170   .text.TIM_OC2PolarityConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:2175   .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
  C:\Temp\ccWUwiM1.s:2205   .text.TIM_OC2NPolarityConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:2210   .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
  C:\Temp\ccWUwiM1.s:2240   .text.TIM_OC3PolarityConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:2245   .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
  C:\Temp\ccWUwiM1.s:2275   .text.TIM_OC3NPolarityConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:2280   .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
  C:\Temp\ccWUwiM1.s:2310   .text.TIM_OC4PolarityConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:2315   .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
  C:\Temp\ccWUwiM1.s:2345   .text.TIM_CCxCmd:00000000 $t
  C:\Temp\ccWUwiM1.s:2350   .text.TIM_CCxCmd:00000000 TIM_CCxCmd
  C:\Temp\ccWUwiM1.s:2384   .text.TIM_CCxNCmd:00000000 $t
  C:\Temp\ccWUwiM1.s:2389   .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
  C:\Temp\ccWUwiM1.s:2423   .text.TIM_ICStructInit:00000000 $t
  C:\Temp\ccWUwiM1.s:2428   .text.TIM_ICStructInit:00000000 TIM_ICStructInit
  C:\Temp\ccWUwiM1.s:2456   .text.TIM_GetCapture1:00000000 $t
  C:\Temp\ccWUwiM1.s:2461   .text.TIM_GetCapture1:00000000 TIM_GetCapture1
  C:\Temp\ccWUwiM1.s:2478   .text.TIM_GetCapture2:00000000 $t
  C:\Temp\ccWUwiM1.s:2483   .text.TIM_GetCapture2:00000000 TIM_GetCapture2
  C:\Temp\ccWUwiM1.s:2500   .text.TIM_GetCapture3:00000000 $t
  C:\Temp\ccWUwiM1.s:2505   .text.TIM_GetCapture3:00000000 TIM_GetCapture3
  C:\Temp\ccWUwiM1.s:2522   .text.TIM_GetCapture4:00000000 $t
  C:\Temp\ccWUwiM1.s:2527   .text.TIM_GetCapture4:00000000 TIM_GetCapture4
  C:\Temp\ccWUwiM1.s:2544   .text.TIM_SetIC1Prescaler:00000000 $t
  C:\Temp\ccWUwiM1.s:2549   .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
  C:\Temp\ccWUwiM1.s:2575   .text.TIM_SetIC2Prescaler:00000000 $t
  C:\Temp\ccWUwiM1.s:2580   .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
  C:\Temp\ccWUwiM1.s:2607   .text.TIM_PWMIConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:2612   .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
  C:\Temp\ccWUwiM1.s:2699   .text.TIM_SetIC3Prescaler:00000000 $t
  C:\Temp\ccWUwiM1.s:2704   .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
  C:\Temp\ccWUwiM1.s:2730   .text.TIM_SetIC4Prescaler:00000000 $t
  C:\Temp\ccWUwiM1.s:2735   .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
  C:\Temp\ccWUwiM1.s:2762   .text.TIM_ICInit:00000000 $t
  C:\Temp\ccWUwiM1.s:2767   .text.TIM_ICInit:00000000 TIM_ICInit
  C:\Temp\ccWUwiM1.s:2957   .text.TIM_BDTRConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:2962   .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
  C:\Temp\ccWUwiM1.s:2992   .text.TIM_BDTRStructInit:00000000 $t
  C:\Temp\ccWUwiM1.s:2997   .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
  C:\Temp\ccWUwiM1.s:3026   .text.TIM_CtrlPWMOutputs:00000000 $t
  C:\Temp\ccWUwiM1.s:3031   .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
  C:\Temp\ccWUwiM1.s:3059   .text.TIM_SelectCOM:00000000 $t
  C:\Temp\ccWUwiM1.s:3064   .text.TIM_SelectCOM:00000000 TIM_SelectCOM
  C:\Temp\ccWUwiM1.s:3092   .text.TIM_CCPreloadControl:00000000 $t
  C:\Temp\ccWUwiM1.s:3097   .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
  C:\Temp\ccWUwiM1.s:3125   .text.TIM_ITConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:3130   .text.TIM_ITConfig:00000000 TIM_ITConfig
  C:\Temp\ccWUwiM1.s:3159   .text.TIM_GenerateEvent:00000000 $t
  C:\Temp\ccWUwiM1.s:3164   .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
  C:\Temp\ccWUwiM1.s:3180   .text.TIM_GetFlagStatus:00000000 $t
  C:\Temp\ccWUwiM1.s:3185   .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
  C:\Temp\ccWUwiM1.s:3209   .text.TIM_ClearFlag:00000000 $t
  C:\Temp\ccWUwiM1.s:3214   .text.TIM_ClearFlag:00000000 TIM_ClearFlag
  C:\Temp\ccWUwiM1.s:3233   .text.TIM_GetITStatus:00000000 $t
  C:\Temp\ccWUwiM1.s:3238   .text.TIM_GetITStatus:00000000 TIM_GetITStatus
  C:\Temp\ccWUwiM1.s:3269   .text.TIM_ClearITPendingBit:00000000 $t
  C:\Temp\ccWUwiM1.s:3274   .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit
  C:\Temp\ccWUwiM1.s:3293   .text.TIM_DMAConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:3298   .text.TIM_DMAConfig:00000000 TIM_DMAConfig
  C:\Temp\ccWUwiM1.s:3316   .text.TIM_DMACmd:00000000 $t
  C:\Temp\ccWUwiM1.s:3321   .text.TIM_DMACmd:00000000 TIM_DMACmd
  C:\Temp\ccWUwiM1.s:3350   .text.TIM_SelectCCDMA:00000000 $t
  C:\Temp\ccWUwiM1.s:3355   .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
  C:\Temp\ccWUwiM1.s:3383   .text.TIM_InternalClockConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:3388   .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
  C:\Temp\ccWUwiM1.s:3408   .text.TIM_ITRxExternalClockConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:3413   .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
  C:\Temp\ccWUwiM1.s:3451   .text.TIM_TIxExternalClockConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:3456   .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
  C:\Temp\ccWUwiM1.s:3522   .text.TIM_SelectInputTrigger:00000000 $t
  C:\Temp\ccWUwiM1.s:3527   .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
  C:\Temp\ccWUwiM1.s:3555   .text.TIM_SelectOutputTrigger:00000000 $t
  C:\Temp\ccWUwiM1.s:3560   .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
  C:\Temp\ccWUwiM1.s:3586   .text.TIM_SelectSlaveMode:00000000 $t
  C:\Temp\ccWUwiM1.s:3591   .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
  C:\Temp\ccWUwiM1.s:3617   .text.TIM_SelectMasterSlaveMode:00000000 $t
  C:\Temp\ccWUwiM1.s:3622   .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
  C:\Temp\ccWUwiM1.s:3648   .text.TIM_ETRConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:3653   .text.TIM_ETRConfig:00000000 TIM_ETRConfig
  C:\Temp\ccWUwiM1.s:3687   .text.TIM_ETRClockMode2Config:00000000 $t
  C:\Temp\ccWUwiM1.s:3692   .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
  C:\Temp\ccWUwiM1.s:3720   .text.TIM_ETRClockMode1Config:00000000 $t
  C:\Temp\ccWUwiM1.s:3725   .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
  C:\Temp\ccWUwiM1.s:3762   .text.TIM_EncoderInterfaceConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:3767   .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
  C:\Temp\ccWUwiM1.s:3839   .text.TIM_SelectHallSensor:00000000 $t
  C:\Temp\ccWUwiM1.s:3844   .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
  C:\Temp\ccWUwiM1.s:3872   .text.TIM_RemapConfig:00000000 $t
  C:\Temp\ccWUwiM1.s:3877   .text.TIM_RemapConfig:00000000 TIM_RemapConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
