   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_sdio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SDIO_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	SDIO_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	SDIO_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Initialization and Configuration
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - CE-ATA mode management
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - DMA transfers management
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Interrupts and flags management
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @verbatim
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                 How to use this driver
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          9. When using the DMA mode 
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Argument
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Index
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Response type
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Wait
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Read Operations
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Write Operations
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @endverbatim
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @attention
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */ 
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                  Initialization and Configuration functions
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  27              		.loc 1 260 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  39              		.loc 1 261 0
  40 0004 4FF40060 		mov	r0, #2048
  41 0008 4FF00101 		mov	r1, #1
  42 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  43              		.loc 1 262 0
  44 0010 4FF40060 		mov	r0, #2048
  45 0014 4FF00001 		mov	r1, #0
  46 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
  47              		.loc 1 263 0
  48 001c 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE110:
  52 001e 00BF     		.section	.text.SDIO_Init,"ax",%progbits
  53              		.align	2
  54              		.global	SDIO_Init
  55              		.thumb
  56              		.thumb_func
  58              	SDIO_Init:
  59              	.LFB111:
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  60              		.loc 1 273 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 16
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65 0000 80B4     		push	{r7}
  66              	.LCFI2:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 7, -4
  69 0002 85B0     		sub	sp, sp, #20
  70              	.LCFI3:
  71              		.cfi_def_cfa_offset 24
  72 0004 00AF     		add	r7, sp, #0
  73              	.LCFI4:
  74              		.cfi_def_cfa_register 7
  75 0006 7860     		str	r0, [r7, #4]
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
  76              		.loc 1 274 0
  77 0008 4FF00003 		mov	r3, #0
  78 000c FB60     		str	r3, [r7, #12]
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  79              		.loc 1 285 0
  80 000e 4FF43053 		mov	r3, #11264
  81 0012 C4F20103 		movt	r3, 16385
  82 0016 5B68     		ldr	r3, [r3, #4]
  83 0018 FB60     		str	r3, [r7, #12]
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  84              		.loc 1 288 0
  85 001a FB68     		ldr	r3, [r7, #12]
  86 001c 23F4FC43 		bic	r3, r3, #32256
  87 0020 23F0FF03 		bic	r3, r3, #255
  88 0024 FB60     		str	r3, [r7, #12]
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  89              		.loc 1 296 0
  90 0026 7B68     		ldr	r3, [r7, #4]
  91 0028 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  92 002a 1A46     		mov	r2, r3
  93 002c 7B68     		ldr	r3, [r7, #4]
  94 002e 9B68     		ldr	r3, [r3, #8]
  95 0030 1A43     		orrs	r2, r2, r3
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  96              		.loc 1 297 0
  97 0032 7B68     		ldr	r3, [r7, #4]
  98 0034 5B68     		ldr	r3, [r3, #4]
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  99              		.loc 1 296 0
 100 0036 1A43     		orrs	r2, r2, r3
 101              		.loc 1 297 0
 102 0038 7B68     		ldr	r3, [r7, #4]
 103 003a DB68     		ldr	r3, [r3, #12]
 104 003c 1A43     		orrs	r2, r2, r3
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 105              		.loc 1 298 0
 106 003e 7B68     		ldr	r3, [r7, #4]
 107 0040 1B68     		ldr	r3, [r3, #0]
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 108              		.loc 1 297 0
 109 0042 1A43     		orrs	r2, r2, r3
 110              		.loc 1 298 0
 111 0044 7B68     		ldr	r3, [r7, #4]
 112 0046 1B69     		ldr	r3, [r3, #16]
 113 0048 1343     		orrs	r3, r3, r2
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 114              		.loc 1 296 0
 115 004a FA68     		ldr	r2, [r7, #12]
 116 004c 1343     		orrs	r3, r3, r2
 117 004e FB60     		str	r3, [r7, #12]
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 118              		.loc 1 301 0
 119 0050 4FF43053 		mov	r3, #11264
 120 0054 C4F20103 		movt	r3, 16385
 121 0058 FA68     		ldr	r2, [r7, #12]
 122 005a 5A60     		str	r2, [r3, #4]
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 123              		.loc 1 302 0
 124 005c 07F11407 		add	r7, r7, #20
 125 0060 BD46     		mov	sp, r7
 126 0062 80BC     		pop	{r7}
 127 0064 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE111:
 131 0066 00BF     		.section	.text.SDIO_StructInit,"ax",%progbits
 132              		.align	2
 133              		.global	SDIO_StructInit
 134              		.thumb
 135              		.thumb_func
 137              	SDIO_StructInit:
 138              	.LFB112:
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         will be initialized.
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 139              		.loc 1 311 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 8
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 0000 80B4     		push	{r7}
 145              	.LCFI5:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 7, -4
 148 0002 83B0     		sub	sp, sp, #12
 149              	.LCFI6:
 150              		.cfi_def_cfa_offset 16
 151 0004 00AF     		add	r7, sp, #0
 152              	.LCFI7:
 153              		.cfi_def_cfa_register 7
 154 0006 7860     		str	r0, [r7, #4]
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 155              		.loc 1 313 0
 156 0008 7B68     		ldr	r3, [r7, #4]
 157 000a 4FF00002 		mov	r2, #0
 158 000e 1A75     		strb	r2, [r3, #20]
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 159              		.loc 1 314 0
 160 0010 7B68     		ldr	r3, [r7, #4]
 161 0012 4FF00002 		mov	r2, #0
 162 0016 1A60     		str	r2, [r3, #0]
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 163              		.loc 1 315 0
 164 0018 7B68     		ldr	r3, [r7, #4]
 165 001a 4FF00002 		mov	r2, #0
 166 001e 5A60     		str	r2, [r3, #4]
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 167              		.loc 1 316 0
 168 0020 7B68     		ldr	r3, [r7, #4]
 169 0022 4FF00002 		mov	r2, #0
 170 0026 9A60     		str	r2, [r3, #8]
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 171              		.loc 1 317 0
 172 0028 7B68     		ldr	r3, [r7, #4]
 173 002a 4FF00002 		mov	r2, #0
 174 002e DA60     		str	r2, [r3, #12]
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 175              		.loc 1 318 0
 176 0030 7B68     		ldr	r3, [r7, #4]
 177 0032 4FF00002 		mov	r2, #0
 178 0036 1A61     		str	r2, [r3, #16]
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 179              		.loc 1 319 0
 180 0038 07F10C07 		add	r7, r7, #12
 181 003c BD46     		mov	sp, r7
 182 003e 80BC     		pop	{r7}
 183 0040 7047     		bx	lr
 184              		.cfi_endproc
 185              	.LFE112:
 187 0042 00BF     		.section	.text.SDIO_ClockCmd,"ax",%progbits
 188              		.align	2
 189              		.global	SDIO_ClockCmd
 190              		.thumb
 191              		.thumb_func
 193              	SDIO_ClockCmd:
 194              	.LFB113:
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 195              		.loc 1 328 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200 0000 80B4     		push	{r7}
 201              	.LCFI8:
 202              		.cfi_def_cfa_offset 4
 203              		.cfi_offset 7, -4
 204 0002 83B0     		sub	sp, sp, #12
 205              	.LCFI9:
 206              		.cfi_def_cfa_offset 16
 207 0004 00AF     		add	r7, sp, #0
 208              	.LCFI10:
 209              		.cfi_def_cfa_register 7
 210 0006 0346     		mov	r3, r0
 211 0008 FB71     		strb	r3, [r7, #7]
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 212              		.loc 1 332 0
 213 000a 48F2A003 		movw	r3, #32928
 214 000e C4F22523 		movt	r3, 16933
 215 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 216 0014 1A60     		str	r2, [r3, #0]
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 217              		.loc 1 333 0
 218 0016 07F10C07 		add	r7, r7, #12
 219 001a BD46     		mov	sp, r7
 220 001c 80BC     		pop	{r7}
 221 001e 7047     		bx	lr
 222              		.cfi_endproc
 223              	.LFE113:
 225              		.section	.text.SDIO_SetPowerState,"ax",%progbits
 226              		.align	2
 227              		.global	SDIO_SetPowerState
 228              		.thumb
 229              		.thumb_func
 231              	SDIO_SetPowerState:
 232              	.LFB114:
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 233              		.loc 1 344 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0000 80B4     		push	{r7}
 239              	.LCFI11:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 83B0     		sub	sp, sp, #12
 243              	.LCFI12:
 244              		.cfi_def_cfa_offset 16
 245 0004 00AF     		add	r7, sp, #0
 246              	.LCFI13:
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 249              		.loc 1 348 0
 250 0008 4FF43053 		mov	r3, #11264
 251 000c C4F20103 		movt	r3, 16385
 252 0010 7A68     		ldr	r2, [r7, #4]
 253 0012 1A60     		str	r2, [r3, #0]
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 254              		.loc 1 349 0
 255 0014 07F10C07 		add	r7, r7, #12
 256 0018 BD46     		mov	sp, r7
 257 001a 80BC     		pop	{r7}
 258 001c 7047     		bx	lr
 259              		.cfi_endproc
 260              	.LFE114:
 262 001e 00BF     		.section	.text.SDIO_GetPowerState,"ax",%progbits
 263              		.align	2
 264              		.global	SDIO_GetPowerState
 265              		.thumb
 266              		.thumb_func
 268              	SDIO_GetPowerState:
 269              	.LFB115:
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         following values:
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 270              		.loc 1 361 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275 0000 80B4     		push	{r7}
 276              	.LCFI14:
 277              		.cfi_def_cfa_offset 4
 278              		.cfi_offset 7, -4
 279 0002 00AF     		add	r7, sp, #0
 280              	.LCFI15:
 281              		.cfi_def_cfa_register 7
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 282              		.loc 1 362 0
 283 0004 4FF43053 		mov	r3, #11264
 284 0008 C4F20103 		movt	r3, 16385
 285 000c 1B68     		ldr	r3, [r3, #0]
 286 000e 03F00303 		and	r3, r3, #3
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 287              		.loc 1 363 0
 288 0012 1846     		mov	r0, r3
 289 0014 BD46     		mov	sp, r7
 290 0016 80BC     		pop	{r7}
 291 0018 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE115:
 295 001a 00BF     		.section	.text.SDIO_SendCommand,"ax",%progbits
 296              		.align	2
 297              		.global	SDIO_SendCommand
 298              		.thumb
 299              		.thumb_func
 301              	SDIO_SendCommand:
 302              	.LFB116:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Command path state machine (CPSM) management functions
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         command.
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 303              		.loc 1 393 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 16
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              	.LCFI16:
 310              		.cfi_def_cfa_offset 4
 311              		.cfi_offset 7, -4
 312 0002 85B0     		sub	sp, sp, #20
 313              	.LCFI17:
 314              		.cfi_def_cfa_offset 24
 315 0004 00AF     		add	r7, sp, #0
 316              	.LCFI18:
 317              		.cfi_def_cfa_register 7
 318 0006 7860     		str	r0, [r7, #4]
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 319              		.loc 1 394 0
 320 0008 4FF00003 		mov	r3, #0
 321 000c FB60     		str	r3, [r7, #12]
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 322              		.loc 1 404 0
 323 000e 4FF43053 		mov	r3, #11264
 324 0012 C4F20103 		movt	r3, 16385
 325 0016 7A68     		ldr	r2, [r7, #4]
 326 0018 1268     		ldr	r2, [r2, #0]
 327 001a 9A60     		str	r2, [r3, #8]
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 328              		.loc 1 408 0
 329 001c 4FF43053 		mov	r3, #11264
 330 0020 C4F20103 		movt	r3, 16385
 331 0024 DB68     		ldr	r3, [r3, #12]
 332 0026 FB60     		str	r3, [r7, #12]
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 333              		.loc 1 410 0
 334 0028 FB68     		ldr	r3, [r7, #12]
 335 002a 23F4FE63 		bic	r3, r3, #2032
 336 002e 23F00F03 		bic	r3, r3, #15
 337 0032 FB60     		str	r3, [r7, #12]
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 338              		.loc 1 415 0
 339 0034 7B68     		ldr	r3, [r7, #4]
 340 0036 5A68     		ldr	r2, [r3, #4]
 341 0038 7B68     		ldr	r3, [r7, #4]
 342 003a 9B68     		ldr	r3, [r3, #8]
 343 003c 1A43     		orrs	r2, r2, r3
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 344              		.loc 1 416 0
 345 003e 7B68     		ldr	r3, [r7, #4]
 346 0040 DB68     		ldr	r3, [r3, #12]
 347 0042 1A43     		orrs	r2, r2, r3
 348 0044 7B68     		ldr	r3, [r7, #4]
 349 0046 1B69     		ldr	r3, [r3, #16]
 350 0048 1343     		orrs	r3, r3, r2
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 351              		.loc 1 415 0
 352 004a FA68     		ldr	r2, [r7, #12]
 353 004c 1343     		orrs	r3, r3, r2
 354 004e FB60     		str	r3, [r7, #12]
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 355              		.loc 1 419 0
 356 0050 4FF43053 		mov	r3, #11264
 357 0054 C4F20103 		movt	r3, 16385
 358 0058 FA68     		ldr	r2, [r7, #12]
 359 005a DA60     		str	r2, [r3, #12]
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 360              		.loc 1 420 0
 361 005c 07F11407 		add	r7, r7, #20
 362 0060 BD46     		mov	sp, r7
 363 0062 80BC     		pop	{r7}
 364 0064 7047     		bx	lr
 365              		.cfi_endproc
 366              	.LFE116:
 368 0066 00BF     		.section	.text.SDIO_CmdStructInit,"ax",%progbits
 369              		.align	2
 370              		.global	SDIO_CmdStructInit
 371              		.thumb
 372              		.thumb_func
 374              	SDIO_CmdStructInit:
 375              	.LFB117:
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 376              		.loc 1 429 0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 8
 379              		@ frame_needed = 1, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 381 0000 80B4     		push	{r7}
 382              	.LCFI19:
 383              		.cfi_def_cfa_offset 4
 384              		.cfi_offset 7, -4
 385 0002 83B0     		sub	sp, sp, #12
 386              	.LCFI20:
 387              		.cfi_def_cfa_offset 16
 388 0004 00AF     		add	r7, sp, #0
 389              	.LCFI21:
 390              		.cfi_def_cfa_register 7
 391 0006 7860     		str	r0, [r7, #4]
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 392              		.loc 1 431 0
 393 0008 7B68     		ldr	r3, [r7, #4]
 394 000a 4FF00002 		mov	r2, #0
 395 000e 1A60     		str	r2, [r3, #0]
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 396              		.loc 1 432 0
 397 0010 7B68     		ldr	r3, [r7, #4]
 398 0012 4FF00002 		mov	r2, #0
 399 0016 5A60     		str	r2, [r3, #4]
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 400              		.loc 1 433 0
 401 0018 7B68     		ldr	r3, [r7, #4]
 402 001a 4FF00002 		mov	r2, #0
 403 001e 9A60     		str	r2, [r3, #8]
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 404              		.loc 1 434 0
 405 0020 7B68     		ldr	r3, [r7, #4]
 406 0022 4FF00002 		mov	r2, #0
 407 0026 DA60     		str	r2, [r3, #12]
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 408              		.loc 1 435 0
 409 0028 7B68     		ldr	r3, [r7, #4]
 410 002a 4FF00002 		mov	r2, #0
 411 002e 1A61     		str	r2, [r3, #16]
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 412              		.loc 1 436 0
 413 0030 07F10C07 		add	r7, r7, #12
 414 0034 BD46     		mov	sp, r7
 415 0036 80BC     		pop	{r7}
 416 0038 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE117:
 420 003a 00BF     		.section	.text.SDIO_GetCommandResponse,"ax",%progbits
 421              		.align	2
 422              		.global	SDIO_GetCommandResponse
 423              		.thumb
 424              		.thumb_func
 426              	SDIO_GetCommandResponse:
 427              	.LFB118:
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 428              		.loc 1 444 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              	.LCFI22:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              	.LCFI23:
 439              		.cfi_def_cfa_register 7
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 440              		.loc 1 445 0
 441 0004 4FF43053 		mov	r3, #11264
 442 0008 C4F20103 		movt	r3, 16385
 443 000c 1B69     		ldr	r3, [r3, #16]
 444 000e DBB2     		uxtb	r3, r3
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 445              		.loc 1 446 0
 446 0010 1846     		mov	r0, r3
 447 0012 BD46     		mov	sp, r7
 448 0014 80BC     		pop	{r7}
 449 0016 7047     		bx	lr
 450              		.cfi_endproc
 451              	.LFE118:
 453              		.section	.text.SDIO_GetResponse,"ax",%progbits
 454              		.align	2
 455              		.global	SDIO_GetResponse
 456              		.thumb
 457              		.thumb_func
 459              	SDIO_GetResponse:
 460              	.LFB119:
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 461              		.loc 1 459 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 16
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 0000 80B4     		push	{r7}
 467              	.LCFI24:
 468              		.cfi_def_cfa_offset 4
 469              		.cfi_offset 7, -4
 470 0002 85B0     		sub	sp, sp, #20
 471              	.LCFI25:
 472              		.cfi_def_cfa_offset 24
 473 0004 00AF     		add	r7, sp, #0
 474              	.LCFI26:
 475              		.cfi_def_cfa_register 7
 476 0006 7860     		str	r0, [r7, #4]
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 477              		.loc 1 460 0
 478 0008 4FF00003 		mov	r3, #0
 479 000c FB60     		str	r3, [r7, #12]
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 480              		.loc 1 465 0
 481 000e 7A68     		ldr	r2, [r7, #4]
 482 0010 42F61443 		movw	r3, #11284
 483 0014 C4F20103 		movt	r3, 16385
 484 0018 D318     		adds	r3, r2, r3
 485 001a FB60     		str	r3, [r7, #12]
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 486              		.loc 1 467 0
 487 001c FB68     		ldr	r3, [r7, #12]
 488 001e 1B68     		ldr	r3, [r3, #0]
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 489              		.loc 1 468 0
 490 0020 1846     		mov	r0, r3
 491 0022 07F11407 		add	r7, r7, #20
 492 0026 BD46     		mov	sp, r7
 493 0028 80BC     		pop	{r7}
 494 002a 7047     		bx	lr
 495              		.cfi_endproc
 496              	.LFE119:
 498              		.section	.text.SDIO_DataConfig,"ax",%progbits
 499              		.align	2
 500              		.global	SDIO_DataConfig
 501              		.thumb
 502              		.thumb_func
 504              	SDIO_DataConfig:
 505              	.LFB120:
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Data path state machine (DPSM) management functions
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 506              		.loc 1 497 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 16
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511 0000 80B4     		push	{r7}
 512              	.LCFI27:
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 7, -4
 515 0002 85B0     		sub	sp, sp, #20
 516              	.LCFI28:
 517              		.cfi_def_cfa_offset 24
 518 0004 00AF     		add	r7, sp, #0
 519              	.LCFI29:
 520              		.cfi_def_cfa_register 7
 521 0006 7860     		str	r0, [r7, #4]
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 522              		.loc 1 498 0
 523 0008 4FF00003 		mov	r3, #0
 524 000c FB60     		str	r3, [r7, #12]
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 525              		.loc 1 509 0
 526 000e 4FF43053 		mov	r3, #11264
 527 0012 C4F20103 		movt	r3, 16385
 528 0016 7A68     		ldr	r2, [r7, #4]
 529 0018 1268     		ldr	r2, [r2, #0]
 530 001a 5A62     		str	r2, [r3, #36]
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 531              		.loc 1 513 0
 532 001c 4FF43053 		mov	r3, #11264
 533 0020 C4F20103 		movt	r3, 16385
 534 0024 7A68     		ldr	r2, [r7, #4]
 535 0026 5268     		ldr	r2, [r2, #4]
 536 0028 9A62     		str	r2, [r3, #40]
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 537              		.loc 1 517 0
 538 002a 4FF43053 		mov	r3, #11264
 539 002e C4F20103 		movt	r3, 16385
 540 0032 DB6A     		ldr	r3, [r3, #44]
 541 0034 FB60     		str	r3, [r7, #12]
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 542              		.loc 1 519 0
 543 0036 FB68     		ldr	r3, [r7, #12]
 544 0038 23F0F703 		bic	r3, r3, #247
 545 003c FB60     		str	r3, [r7, #12]
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 546              		.loc 1 524 0
 547 003e 7B68     		ldr	r3, [r7, #4]
 548 0040 9A68     		ldr	r2, [r3, #8]
 549 0042 7B68     		ldr	r3, [r7, #4]
 550 0044 DB68     		ldr	r3, [r3, #12]
 551 0046 1A43     		orrs	r2, r2, r3
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 552              		.loc 1 525 0
 553 0048 7B68     		ldr	r3, [r7, #4]
 554 004a 1B69     		ldr	r3, [r3, #16]
 555 004c 1A43     		orrs	r2, r2, r3
 556 004e 7B68     		ldr	r3, [r7, #4]
 557 0050 5B69     		ldr	r3, [r3, #20]
 558 0052 1343     		orrs	r3, r3, r2
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 559              		.loc 1 524 0
 560 0054 FA68     		ldr	r2, [r7, #12]
 561 0056 1343     		orrs	r3, r3, r2
 562 0058 FB60     		str	r3, [r7, #12]
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 563              		.loc 1 528 0
 564 005a 4FF43053 		mov	r3, #11264
 565 005e C4F20103 		movt	r3, 16385
 566 0062 FA68     		ldr	r2, [r7, #12]
 567 0064 DA62     		str	r2, [r3, #44]
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 568              		.loc 1 529 0
 569 0066 07F11407 		add	r7, r7, #20
 570 006a BD46     		mov	sp, r7
 571 006c 80BC     		pop	{r7}
 572 006e 7047     		bx	lr
 573              		.cfi_endproc
 574              	.LFE120:
 576              		.section	.text.SDIO_DataStructInit,"ax",%progbits
 577              		.align	2
 578              		.global	SDIO_DataStructInit
 579              		.thumb
 580              		.thumb_func
 582              	SDIO_DataStructInit:
 583              	.LFB121:
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 584              		.loc 1 538 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 8
 587              		@ frame_needed = 1, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589 0000 80B4     		push	{r7}
 590              	.LCFI30:
 591              		.cfi_def_cfa_offset 4
 592              		.cfi_offset 7, -4
 593 0002 83B0     		sub	sp, sp, #12
 594              	.LCFI31:
 595              		.cfi_def_cfa_offset 16
 596 0004 00AF     		add	r7, sp, #0
 597              	.LCFI32:
 598              		.cfi_def_cfa_register 7
 599 0006 7860     		str	r0, [r7, #4]
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 600              		.loc 1 540 0
 601 0008 7B68     		ldr	r3, [r7, #4]
 602 000a 4FF0FF32 		mov	r2, #-1
 603 000e 1A60     		str	r2, [r3, #0]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 604              		.loc 1 541 0
 605 0010 7B68     		ldr	r3, [r7, #4]
 606 0012 4FF00002 		mov	r2, #0
 607 0016 5A60     		str	r2, [r3, #4]
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 608              		.loc 1 542 0
 609 0018 7B68     		ldr	r3, [r7, #4]
 610 001a 4FF00002 		mov	r2, #0
 611 001e 9A60     		str	r2, [r3, #8]
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 612              		.loc 1 543 0
 613 0020 7B68     		ldr	r3, [r7, #4]
 614 0022 4FF00002 		mov	r2, #0
 615 0026 DA60     		str	r2, [r3, #12]
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 616              		.loc 1 544 0
 617 0028 7B68     		ldr	r3, [r7, #4]
 618 002a 4FF00002 		mov	r2, #0
 619 002e 1A61     		str	r2, [r3, #16]
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 620              		.loc 1 545 0
 621 0030 7B68     		ldr	r3, [r7, #4]
 622 0032 4FF00002 		mov	r2, #0
 623 0036 5A61     		str	r2, [r3, #20]
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 624              		.loc 1 546 0
 625 0038 07F10C07 		add	r7, r7, #12
 626 003c BD46     		mov	sp, r7
 627 003e 80BC     		pop	{r7}
 628 0040 7047     		bx	lr
 629              		.cfi_endproc
 630              	.LFE121:
 632 0042 00BF     		.section	.text.SDIO_GetDataCounter,"ax",%progbits
 633              		.align	2
 634              		.global	SDIO_GetDataCounter
 635              		.thumb
 636              		.thumb_func
 638              	SDIO_GetDataCounter:
 639              	.LFB122:
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 640              		.loc 1 554 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645 0000 80B4     		push	{r7}
 646              	.LCFI33:
 647              		.cfi_def_cfa_offset 4
 648              		.cfi_offset 7, -4
 649 0002 00AF     		add	r7, sp, #0
 650              	.LCFI34:
 651              		.cfi_def_cfa_register 7
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 652              		.loc 1 555 0
 653 0004 4FF43053 		mov	r3, #11264
 654 0008 C4F20103 		movt	r3, 16385
 655 000c 1B6B     		ldr	r3, [r3, #48]
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 656              		.loc 1 556 0
 657 000e 1846     		mov	r0, r3
 658 0010 BD46     		mov	sp, r7
 659 0012 80BC     		pop	{r7}
 660 0014 7047     		bx	lr
 661              		.cfi_endproc
 662              	.LFE122:
 664 0016 00BF     		.section	.text.SDIO_ReadData,"ax",%progbits
 665              		.align	2
 666              		.global	SDIO_ReadData
 667              		.thumb
 668              		.thumb_func
 670              	SDIO_ReadData:
 671              	.LFB123:
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Data received
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 672              		.loc 1 564 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              	.LCFI35:
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 7, -4
 681 0002 00AF     		add	r7, sp, #0
 682              	.LCFI36:
 683              		.cfi_def_cfa_register 7
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 684              		.loc 1 565 0
 685 0004 4FF43053 		mov	r3, #11264
 686 0008 C4F20103 		movt	r3, 16385
 687 000c D3F88030 		ldr	r3, [r3, #128]
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 688              		.loc 1 566 0
 689 0010 1846     		mov	r0, r3
 690 0012 BD46     		mov	sp, r7
 691 0014 80BC     		pop	{r7}
 692 0016 7047     		bx	lr
 693              		.cfi_endproc
 694              	.LFE123:
 696              		.section	.text.SDIO_WriteData,"ax",%progbits
 697              		.align	2
 698              		.global	SDIO_WriteData
 699              		.thumb
 700              		.thumb_func
 702              	SDIO_WriteData:
 703              	.LFB124:
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 704              		.loc 1 574 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 8
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709 0000 80B4     		push	{r7}
 710              	.LCFI37:
 711              		.cfi_def_cfa_offset 4
 712              		.cfi_offset 7, -4
 713 0002 83B0     		sub	sp, sp, #12
 714              	.LCFI38:
 715              		.cfi_def_cfa_offset 16
 716 0004 00AF     		add	r7, sp, #0
 717              	.LCFI39:
 718              		.cfi_def_cfa_register 7
 719 0006 7860     		str	r0, [r7, #4]
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 720              		.loc 1 575 0
 721 0008 4FF43053 		mov	r3, #11264
 722 000c C4F20103 		movt	r3, 16385
 723 0010 7A68     		ldr	r2, [r7, #4]
 724 0012 C3F88020 		str	r2, [r3, #128]
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 725              		.loc 1 576 0
 726 0016 07F10C07 		add	r7, r7, #12
 727 001a BD46     		mov	sp, r7
 728 001c 80BC     		pop	{r7}
 729 001e 7047     		bx	lr
 730              		.cfi_endproc
 731              	.LFE124:
 733              		.section	.text.SDIO_GetFIFOCount,"ax",%progbits
 734              		.align	2
 735              		.global	SDIO_GetFIFOCount
 736              		.thumb
 737              		.thumb_func
 739              	SDIO_GetFIFOCount:
 740              	.LFB125:
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 741              		.loc 1 584 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746 0000 80B4     		push	{r7}
 747              	.LCFI40:
 748              		.cfi_def_cfa_offset 4
 749              		.cfi_offset 7, -4
 750 0002 00AF     		add	r7, sp, #0
 751              	.LCFI41:
 752              		.cfi_def_cfa_register 7
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 753              		.loc 1 585 0
 754 0004 4FF43053 		mov	r3, #11264
 755 0008 C4F20103 		movt	r3, 16385
 756 000c 9B6C     		ldr	r3, [r3, #72]
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 757              		.loc 1 586 0
 758 000e 1846     		mov	r0, r3
 759 0010 BD46     		mov	sp, r7
 760 0012 80BC     		pop	{r7}
 761 0014 7047     		bx	lr
 762              		.cfi_endproc
 763              	.LFE125:
 765 0016 00BF     		.section	.text.SDIO_StartSDIOReadWait,"ax",%progbits
 766              		.align	2
 767              		.global	SDIO_StartSDIOReadWait
 768              		.thumb
 769              		.thumb_func
 771              	SDIO_StartSDIOReadWait:
 772              	.LFB126:
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               SDIO IO Cards mode management functions
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 773              		.loc 1 613 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 8
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778 0000 80B4     		push	{r7}
 779              	.LCFI42:
 780              		.cfi_def_cfa_offset 4
 781              		.cfi_offset 7, -4
 782 0002 83B0     		sub	sp, sp, #12
 783              	.LCFI43:
 784              		.cfi_def_cfa_offset 16
 785 0004 00AF     		add	r7, sp, #0
 786              	.LCFI44:
 787              		.cfi_def_cfa_register 7
 788 0006 0346     		mov	r3, r0
 789 0008 FB71     		strb	r3, [r7, #7]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 790              		.loc 1 617 0
 791 000a 48F2A053 		movw	r3, #34208
 792 000e C4F22523 		movt	r3, 16933
 793 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 794 0014 1A60     		str	r2, [r3, #0]
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 795              		.loc 1 618 0
 796 0016 07F10C07 		add	r7, r7, #12
 797 001a BD46     		mov	sp, r7
 798 001c 80BC     		pop	{r7}
 799 001e 7047     		bx	lr
 800              		.cfi_endproc
 801              	.LFE126:
 803              		.section	.text.SDIO_StopSDIOReadWait,"ax",%progbits
 804              		.align	2
 805              		.global	SDIO_StopSDIOReadWait
 806              		.thumb
 807              		.thumb_func
 809              	SDIO_StopSDIOReadWait:
 810              	.LFB127:
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 811              		.loc 1 627 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816 0000 80B4     		push	{r7}
 817              	.LCFI45:
 818              		.cfi_def_cfa_offset 4
 819              		.cfi_offset 7, -4
 820 0002 83B0     		sub	sp, sp, #12
 821              	.LCFI46:
 822              		.cfi_def_cfa_offset 16
 823 0004 00AF     		add	r7, sp, #0
 824              	.LCFI47:
 825              		.cfi_def_cfa_register 7
 826 0006 0346     		mov	r3, r0
 827 0008 FB71     		strb	r3, [r7, #7]
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 828              		.loc 1 631 0
 829 000a 48F2A453 		movw	r3, #34212
 830 000e C4F22523 		movt	r3, 16933
 831 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 832 0014 1A60     		str	r2, [r3, #0]
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 833              		.loc 1 632 0
 834 0016 07F10C07 		add	r7, r7, #12
 835 001a BD46     		mov	sp, r7
 836 001c 80BC     		pop	{r7}
 837 001e 7047     		bx	lr
 838              		.cfi_endproc
 839              	.LFE127:
 841              		.section	.text.SDIO_SetSDIOReadWaitMode,"ax",%progbits
 842              		.align	2
 843              		.global	SDIO_SetSDIOReadWaitMode
 844              		.thumb
 845              		.thumb_func
 847              	SDIO_SetSDIOReadWaitMode:
 848              	.LFB128:
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 849              		.loc 1 643 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 8
 852              		@ frame_needed = 1, uses_anonymous_args = 0
 853              		@ link register save eliminated.
 854 0000 80B4     		push	{r7}
 855              	.LCFI48:
 856              		.cfi_def_cfa_offset 4
 857              		.cfi_offset 7, -4
 858 0002 83B0     		sub	sp, sp, #12
 859              	.LCFI49:
 860              		.cfi_def_cfa_offset 16
 861 0004 00AF     		add	r7, sp, #0
 862              	.LCFI50:
 863              		.cfi_def_cfa_register 7
 864 0006 7860     		str	r0, [r7, #4]
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 865              		.loc 1 647 0
 866 0008 48F2A853 		movw	r3, #34216
 867 000c C4F22523 		movt	r3, 16933
 868 0010 7A68     		ldr	r2, [r7, #4]
 869 0012 1A60     		str	r2, [r3, #0]
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 870              		.loc 1 648 0
 871 0014 07F10C07 		add	r7, r7, #12
 872 0018 BD46     		mov	sp, r7
 873 001a 80BC     		pop	{r7}
 874 001c 7047     		bx	lr
 875              		.cfi_endproc
 876              	.LFE128:
 878 001e 00BF     		.section	.text.SDIO_SetSDIOOperation,"ax",%progbits
 879              		.align	2
 880              		.global	SDIO_SetSDIOOperation
 881              		.thumb
 882              		.thumb_func
 884              	SDIO_SetSDIOOperation:
 885              	.LFB129:
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 886              		.loc 1 657 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 8
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 0000 80B4     		push	{r7}
 892              	.LCFI51:
 893              		.cfi_def_cfa_offset 4
 894              		.cfi_offset 7, -4
 895 0002 83B0     		sub	sp, sp, #12
 896              	.LCFI52:
 897              		.cfi_def_cfa_offset 16
 898 0004 00AF     		add	r7, sp, #0
 899              	.LCFI53:
 900              		.cfi_def_cfa_register 7
 901 0006 0346     		mov	r3, r0
 902 0008 FB71     		strb	r3, [r7, #7]
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 903              		.loc 1 661 0
 904 000a 48F2AC53 		movw	r3, #34220
 905 000e C4F22523 		movt	r3, 16933
 906 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 907 0014 1A60     		str	r2, [r3, #0]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 908              		.loc 1 662 0
 909 0016 07F10C07 		add	r7, r7, #12
 910 001a BD46     		mov	sp, r7
 911 001c 80BC     		pop	{r7}
 912 001e 7047     		bx	lr
 913              		.cfi_endproc
 914              	.LFE129:
 916              		.section	.text.SDIO_SendSDIOSuspendCmd,"ax",%progbits
 917              		.align	2
 918              		.global	SDIO_SendSDIOSuspendCmd
 919              		.thumb
 920              		.thumb_func
 922              	SDIO_SendSDIOSuspendCmd:
 923              	.LFB130:
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 924              		.loc 1 671 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 8
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928              		@ link register save eliminated.
 929 0000 80B4     		push	{r7}
 930              	.LCFI54:
 931              		.cfi_def_cfa_offset 4
 932              		.cfi_offset 7, -4
 933 0002 83B0     		sub	sp, sp, #12
 934              	.LCFI55:
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
 937              	.LCFI56:
 938              		.cfi_def_cfa_register 7
 939 0006 0346     		mov	r3, r0
 940 0008 FB71     		strb	r3, [r7, #7]
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 941              		.loc 1 675 0
 942 000a 48F2AC13 		movw	r3, #33196
 943 000e C4F22523 		movt	r3, 16933
 944 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 945 0014 1A60     		str	r2, [r3, #0]
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 946              		.loc 1 676 0
 947 0016 07F10C07 		add	r7, r7, #12
 948 001a BD46     		mov	sp, r7
 949 001c 80BC     		pop	{r7}
 950 001e 7047     		bx	lr
 951              		.cfi_endproc
 952              	.LFE130:
 954              		.section	.text.SDIO_CommandCompletionCmd,"ax",%progbits
 955              		.align	2
 956              		.global	SDIO_CommandCompletionCmd
 957              		.thumb
 958              		.thumb_func
 960              	SDIO_CommandCompletionCmd:
 961              	.LFB131:
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               CE-ATA mode management functions
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 962              		.loc 1 703 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 8
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966              		@ link register save eliminated.
 967 0000 80B4     		push	{r7}
 968              	.LCFI57:
 969              		.cfi_def_cfa_offset 4
 970              		.cfi_offset 7, -4
 971 0002 83B0     		sub	sp, sp, #12
 972              	.LCFI58:
 973              		.cfi_def_cfa_offset 16
 974 0004 00AF     		add	r7, sp, #0
 975              	.LCFI59:
 976              		.cfi_def_cfa_register 7
 977 0006 0346     		mov	r3, r0
 978 0008 FB71     		strb	r3, [r7, #7]
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 979              		.loc 1 707 0
 980 000a 48F2B013 		movw	r3, #33200
 981 000e C4F22523 		movt	r3, 16933
 982 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 983 0014 1A60     		str	r2, [r3, #0]
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 984              		.loc 1 708 0
 985 0016 07F10C07 		add	r7, r7, #12
 986 001a BD46     		mov	sp, r7
 987 001c 80BC     		pop	{r7}
 988 001e 7047     		bx	lr
 989              		.cfi_endproc
 990              	.LFE131:
 992              		.section	.text.SDIO_CEATAITCmd,"ax",%progbits
 993              		.align	2
 994              		.global	SDIO_CEATAITCmd
 995              		.thumb
 996              		.thumb_func
 998              	SDIO_CEATAITCmd:
 999              	.LFB132:
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1000              		.loc 1 717 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 8
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004              		@ link register save eliminated.
 1005 0000 80B4     		push	{r7}
 1006              	.LCFI60:
 1007              		.cfi_def_cfa_offset 4
 1008              		.cfi_offset 7, -4
 1009 0002 83B0     		sub	sp, sp, #12
 1010              	.LCFI61:
 1011              		.cfi_def_cfa_offset 16
 1012 0004 00AF     		add	r7, sp, #0
 1013              	.LCFI62:
 1014              		.cfi_def_cfa_register 7
 1015 0006 0346     		mov	r3, r0
 1016 0008 FB71     		strb	r3, [r7, #7]
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 1017              		.loc 1 721 0
 1018 000a 48F2B413 		movw	r3, #33204
 1019 000e C4F22523 		movt	r3, 16933
 1020 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1021 0014 02F00102 		and	r2, r2, #1
 1022 0018 002A     		cmp	r2, #0
 1023 001a 14BF     		ite	ne
 1024 001c 0022     		movne	r2, #0
 1025 001e 0122     		moveq	r2, #1
 1026 0020 1A60     		str	r2, [r3, #0]
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1027              		.loc 1 722 0
 1028 0022 07F10C07 		add	r7, r7, #12
 1029 0026 BD46     		mov	sp, r7
 1030 0028 80BC     		pop	{r7}
 1031 002a 7047     		bx	lr
 1032              		.cfi_endproc
 1033              	.LFE132:
 1035              		.section	.text.SDIO_SendCEATACmd,"ax",%progbits
 1036              		.align	2
 1037              		.global	SDIO_SendCEATACmd
 1038              		.thumb
 1039              		.thumb_func
 1041              	SDIO_SendCEATACmd:
 1042              	.LFB133:
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1043              		.loc 1 731 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 8
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047              		@ link register save eliminated.
 1048 0000 80B4     		push	{r7}
 1049              	.LCFI63:
 1050              		.cfi_def_cfa_offset 4
 1051              		.cfi_offset 7, -4
 1052 0002 83B0     		sub	sp, sp, #12
 1053              	.LCFI64:
 1054              		.cfi_def_cfa_offset 16
 1055 0004 00AF     		add	r7, sp, #0
 1056              	.LCFI65:
 1057              		.cfi_def_cfa_register 7
 1058 0006 0346     		mov	r3, r0
 1059 0008 FB71     		strb	r3, [r7, #7]
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 1060              		.loc 1 735 0
 1061 000a 48F2B813 		movw	r3, #33208
 1062 000e C4F22523 		movt	r3, 16933
 1063 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1064 0014 1A60     		str	r2, [r3, #0]
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1065              		.loc 1 736 0
 1066 0016 07F10C07 		add	r7, r7, #12
 1067 001a BD46     		mov	sp, r7
 1068 001c 80BC     		pop	{r7}
 1069 001e 7047     		bx	lr
 1070              		.cfi_endproc
 1071              	.LFE133:
 1073              		.section	.text.SDIO_DMACmd,"ax",%progbits
 1074              		.align	2
 1075              		.global	SDIO_DMACmd
 1076              		.thumb
 1077              		.thumb_func
 1079              	SDIO_DMACmd:
 1080              	.LFB134:
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               DMA transfers management functions
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1081              		.loc 1 763 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 8
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086 0000 80B4     		push	{r7}
 1087              	.LCFI66:
 1088              		.cfi_def_cfa_offset 4
 1089              		.cfi_offset 7, -4
 1090 0002 83B0     		sub	sp, sp, #12
 1091              	.LCFI67:
 1092              		.cfi_def_cfa_offset 16
 1093 0004 00AF     		add	r7, sp, #0
 1094              	.LCFI68:
 1095              		.cfi_def_cfa_register 7
 1096 0006 0346     		mov	r3, r0
 1097 0008 FB71     		strb	r3, [r7, #7]
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 1098              		.loc 1 767 0
 1099 000a 48F28C53 		movw	r3, #34188
 1100 000e C4F22523 		movt	r3, 16933
 1101 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1102 0014 1A60     		str	r2, [r3, #0]
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1103              		.loc 1 768 0
 1104 0016 07F10C07 		add	r7, r7, #12
 1105 001a BD46     		mov	sp, r7
 1106 001c 80BC     		pop	{r7}
 1107 001e 7047     		bx	lr
 1108              		.cfi_endproc
 1109              	.LFE134:
 1111              		.section	.text.SDIO_ITConfig,"ax",%progbits
 1112              		.align	2
 1113              		.global	SDIO_ITConfig
 1114              		.thumb
 1115              		.thumb_func
 1117              	SDIO_ITConfig:
 1118              	.LFB135:
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                        Interrupts and flags management functions
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None 
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1119              		.loc 1 821 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 8
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123              		@ link register save eliminated.
 1124 0000 80B4     		push	{r7}
 1125              	.LCFI69:
 1126              		.cfi_def_cfa_offset 4
 1127              		.cfi_offset 7, -4
 1128 0002 83B0     		sub	sp, sp, #12
 1129              	.LCFI70:
 1130              		.cfi_def_cfa_offset 16
 1131 0004 00AF     		add	r7, sp, #0
 1132              	.LCFI71:
 1133              		.cfi_def_cfa_register 7
 1134 0006 7860     		str	r0, [r7, #4]
 1135 0008 0B46     		mov	r3, r1
 1136 000a FB70     		strb	r3, [r7, #3]
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 1137              		.loc 1 826 0
 1138 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1139 000e 002B     		cmp	r3, #0
 1140 0010 0DD0     		beq	.L27
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 1141              		.loc 1 829 0
 1142 0012 4FF43053 		mov	r3, #11264
 1143 0016 C4F20103 		movt	r3, 16385
 1144 001a 4FF43052 		mov	r2, #11264
 1145 001e C4F20102 		movt	r2, 16385
 1146 0022 D26B     		ldr	r2, [r2, #60]
 1147 0024 1146     		mov	r1, r2
 1148 0026 7A68     		ldr	r2, [r7, #4]
 1149 0028 0A43     		orrs	r2, r2, r1
 1150 002a DA63     		str	r2, [r3, #60]
 1151 002c 0EE0     		b	.L26
 1152              	.L27:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 1153              		.loc 1 834 0
 1154 002e 4FF43053 		mov	r3, #11264
 1155 0032 C4F20103 		movt	r3, 16385
 1156 0036 4FF43052 		mov	r2, #11264
 1157 003a C4F20102 		movt	r2, 16385
 1158 003e D26B     		ldr	r2, [r2, #60]
 1159 0040 1146     		mov	r1, r2
 1160 0042 7A68     		ldr	r2, [r7, #4]
 1161 0044 6FEA0202 		mvn	r2, r2
 1162 0048 0A40     		ands	r2, r2, r1
 1163 004a DA63     		str	r2, [r3, #60]
 1164              	.L26:
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   } 
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1165              		.loc 1 836 0
 1166 004c 07F10C07 		add	r7, r7, #12
 1167 0050 BD46     		mov	sp, r7
 1168 0052 80BC     		pop	{r7}
 1169 0054 7047     		bx	lr
 1170              		.cfi_endproc
 1171              	.LFE135:
 1173 0056 00BF     		.section	.text.SDIO_GetFlagStatus,"ax",%progbits
 1174              		.align	2
 1175              		.global	SDIO_GetFlagStatus
 1176              		.thumb
 1177              		.thumb_func
 1179              	SDIO_GetFlagStatus:
 1180              	.LFB136:
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1181              		.loc 1 869 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 16
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185              		@ link register save eliminated.
 1186 0000 80B4     		push	{r7}
 1187              	.LCFI72:
 1188              		.cfi_def_cfa_offset 4
 1189              		.cfi_offset 7, -4
 1190 0002 85B0     		sub	sp, sp, #20
 1191              	.LCFI73:
 1192              		.cfi_def_cfa_offset 24
 1193 0004 00AF     		add	r7, sp, #0
 1194              	.LCFI74:
 1195              		.cfi_def_cfa_register 7
 1196 0006 7860     		str	r0, [r7, #4]
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 1197              		.loc 1 870 0
 1198 0008 4FF00003 		mov	r3, #0
 1199 000c FB73     		strb	r3, [r7, #15]
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 1200              		.loc 1 875 0
 1201 000e 4FF43053 		mov	r3, #11264
 1202 0012 C4F20103 		movt	r3, 16385
 1203 0016 5B6B     		ldr	r3, [r3, #52]
 1204 0018 1A46     		mov	r2, r3
 1205 001a 7B68     		ldr	r3, [r7, #4]
 1206 001c 1340     		ands	r3, r3, r2
 1207 001e 002B     		cmp	r3, #0
 1208 0020 03D0     		beq	.L30
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1209              		.loc 1 877 0
 1210 0022 4FF00103 		mov	r3, #1
 1211 0026 FB73     		strb	r3, [r7, #15]
 1212 0028 02E0     		b	.L31
 1213              	.L30:
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1214              		.loc 1 881 0
 1215 002a 4FF00003 		mov	r3, #0
 1216 002e FB73     		strb	r3, [r7, #15]
 1217              	.L31:
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1218              		.loc 1 883 0
 1219 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1220              		.loc 1 884 0
 1221 0032 1846     		mov	r0, r3
 1222 0034 07F11407 		add	r7, r7, #20
 1223 0038 BD46     		mov	sp, r7
 1224 003a 80BC     		pop	{r7}
 1225 003c 7047     		bx	lr
 1226              		.cfi_endproc
 1227              	.LFE136:
 1229 003e 00BF     		.section	.text.SDIO_ClearFlag,"ax",%progbits
 1230              		.align	2
 1231              		.global	SDIO_ClearFlag
 1232              		.thumb
 1233              		.thumb_func
 1235              	SDIO_ClearFlag:
 1236              	.LFB137:
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1237              		.loc 1 906 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 8
 1240              		@ frame_needed = 1, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 1242 0000 80B4     		push	{r7}
 1243              	.LCFI75:
 1244              		.cfi_def_cfa_offset 4
 1245              		.cfi_offset 7, -4
 1246 0002 83B0     		sub	sp, sp, #12
 1247              	.LCFI76:
 1248              		.cfi_def_cfa_offset 16
 1249 0004 00AF     		add	r7, sp, #0
 1250              	.LCFI77:
 1251              		.cfi_def_cfa_register 7
 1252 0006 7860     		str	r0, [r7, #4]
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 1253              		.loc 1 910 0
 1254 0008 4FF43053 		mov	r3, #11264
 1255 000c C4F20103 		movt	r3, 16385
 1256 0010 7A68     		ldr	r2, [r7, #4]
 1257 0012 9A63     		str	r2, [r3, #56]
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1258              		.loc 1 911 0
 1259 0014 07F10C07 		add	r7, r7, #12
 1260 0018 BD46     		mov	sp, r7
 1261 001a 80BC     		pop	{r7}
 1262 001c 7047     		bx	lr
 1263              		.cfi_endproc
 1264              	.LFE137:
 1266 001e 00BF     		.section	.text.SDIO_GetITStatus,"ax",%progbits
 1267              		.align	2
 1268              		.global	SDIO_GetITStatus
 1269              		.thumb
 1270              		.thumb_func
 1272              	SDIO_GetITStatus:
 1273              	.LFB138:
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1274              		.loc 1 945 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 16
 1277              		@ frame_needed = 1, uses_anonymous_args = 0
 1278              		@ link register save eliminated.
 1279 0000 80B4     		push	{r7}
 1280              	.LCFI78:
 1281              		.cfi_def_cfa_offset 4
 1282              		.cfi_offset 7, -4
 1283 0002 85B0     		sub	sp, sp, #20
 1284              	.LCFI79:
 1285              		.cfi_def_cfa_offset 24
 1286 0004 00AF     		add	r7, sp, #0
 1287              	.LCFI80:
 1288              		.cfi_def_cfa_register 7
 1289 0006 7860     		str	r0, [r7, #4]
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 1290              		.loc 1 946 0
 1291 0008 4FF00003 		mov	r3, #0
 1292 000c FB73     		strb	r3, [r7, #15]
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 1293              		.loc 1 950 0
 1294 000e 4FF43053 		mov	r3, #11264
 1295 0012 C4F20103 		movt	r3, 16385
 1296 0016 5B6B     		ldr	r3, [r3, #52]
 1297 0018 1A46     		mov	r2, r3
 1298 001a 7B68     		ldr	r3, [r7, #4]
 1299 001c 1340     		ands	r3, r3, r2
 1300 001e 002B     		cmp	r3, #0
 1301 0020 03D0     		beq	.L34
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1302              		.loc 1 952 0
 1303 0022 4FF00103 		mov	r3, #1
 1304 0026 FB73     		strb	r3, [r7, #15]
 1305 0028 02E0     		b	.L35
 1306              	.L34:
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1307              		.loc 1 956 0
 1308 002a 4FF00003 		mov	r3, #0
 1309 002e FB73     		strb	r3, [r7, #15]
 1310              	.L35:
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1311              		.loc 1 958 0
 1312 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1313              		.loc 1 959 0
 1314 0032 1846     		mov	r0, r3
 1315 0034 07F11407 		add	r7, r7, #20
 1316 0038 BD46     		mov	sp, r7
 1317 003a 80BC     		pop	{r7}
 1318 003c 7047     		bx	lr
 1319              		.cfi_endproc
 1320              	.LFE138:
 1322 003e 00BF     		.section	.text.SDIO_ClearITPendingBit,"ax",%progbits
 1323              		.align	2
 1324              		.global	SDIO_ClearITPendingBit
 1325              		.thumb
 1326              		.thumb_func
 1328              	SDIO_ClearITPendingBit:
 1329              	.LFB139:
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1330              		.loc 1 981 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 8
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 1335 0000 80B4     		push	{r7}
 1336              	.LCFI81:
 1337              		.cfi_def_cfa_offset 4
 1338              		.cfi_offset 7, -4
 1339 0002 83B0     		sub	sp, sp, #12
 1340              	.LCFI82:
 1341              		.cfi_def_cfa_offset 16
 1342 0004 00AF     		add	r7, sp, #0
 1343              	.LCFI83:
 1344              		.cfi_def_cfa_register 7
 1345 0006 7860     		str	r0, [r7, #4]
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 1346              		.loc 1 985 0
 1347 0008 4FF43053 		mov	r3, #11264
 1348 000c C4F20103 		movt	r3, 16385
 1349 0010 7A68     		ldr	r2, [r7, #4]
 1350 0012 9A63     		str	r2, [r3, #56]
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1351              		.loc 1 986 0
 1352 0014 07F10C07 		add	r7, r7, #12
 1353 0018 BD46     		mov	sp, r7
 1354 001a 80BC     		pop	{r7}
 1355 001c 7047     		bx	lr
 1356              		.cfi_endproc
 1357              	.LFE139:
 1359 001e 00BF     		.text
 1360              	.Letext0:
 1361              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 1362              		.file 3 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Devi
 1363              		.file 4 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_S
 1364              		.file 5 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_sdio.c
  C:\Temp\ccJzirAi.s:19     .text.SDIO_DeInit:00000000 $t
  C:\Temp\ccJzirAi.s:24     .text.SDIO_DeInit:00000000 SDIO_DeInit
  C:\Temp\ccJzirAi.s:53     .text.SDIO_Init:00000000 $t
  C:\Temp\ccJzirAi.s:58     .text.SDIO_Init:00000000 SDIO_Init
  C:\Temp\ccJzirAi.s:132    .text.SDIO_StructInit:00000000 $t
  C:\Temp\ccJzirAi.s:137    .text.SDIO_StructInit:00000000 SDIO_StructInit
  C:\Temp\ccJzirAi.s:188    .text.SDIO_ClockCmd:00000000 $t
  C:\Temp\ccJzirAi.s:193    .text.SDIO_ClockCmd:00000000 SDIO_ClockCmd
  C:\Temp\ccJzirAi.s:226    .text.SDIO_SetPowerState:00000000 $t
  C:\Temp\ccJzirAi.s:231    .text.SDIO_SetPowerState:00000000 SDIO_SetPowerState
  C:\Temp\ccJzirAi.s:263    .text.SDIO_GetPowerState:00000000 $t
  C:\Temp\ccJzirAi.s:268    .text.SDIO_GetPowerState:00000000 SDIO_GetPowerState
  C:\Temp\ccJzirAi.s:296    .text.SDIO_SendCommand:00000000 $t
  C:\Temp\ccJzirAi.s:301    .text.SDIO_SendCommand:00000000 SDIO_SendCommand
  C:\Temp\ccJzirAi.s:369    .text.SDIO_CmdStructInit:00000000 $t
  C:\Temp\ccJzirAi.s:374    .text.SDIO_CmdStructInit:00000000 SDIO_CmdStructInit
  C:\Temp\ccJzirAi.s:421    .text.SDIO_GetCommandResponse:00000000 $t
  C:\Temp\ccJzirAi.s:426    .text.SDIO_GetCommandResponse:00000000 SDIO_GetCommandResponse
  C:\Temp\ccJzirAi.s:454    .text.SDIO_GetResponse:00000000 $t
  C:\Temp\ccJzirAi.s:459    .text.SDIO_GetResponse:00000000 SDIO_GetResponse
  C:\Temp\ccJzirAi.s:499    .text.SDIO_DataConfig:00000000 $t
  C:\Temp\ccJzirAi.s:504    .text.SDIO_DataConfig:00000000 SDIO_DataConfig
  C:\Temp\ccJzirAi.s:577    .text.SDIO_DataStructInit:00000000 $t
  C:\Temp\ccJzirAi.s:582    .text.SDIO_DataStructInit:00000000 SDIO_DataStructInit
  C:\Temp\ccJzirAi.s:633    .text.SDIO_GetDataCounter:00000000 $t
  C:\Temp\ccJzirAi.s:638    .text.SDIO_GetDataCounter:00000000 SDIO_GetDataCounter
  C:\Temp\ccJzirAi.s:665    .text.SDIO_ReadData:00000000 $t
  C:\Temp\ccJzirAi.s:670    .text.SDIO_ReadData:00000000 SDIO_ReadData
  C:\Temp\ccJzirAi.s:697    .text.SDIO_WriteData:00000000 $t
  C:\Temp\ccJzirAi.s:702    .text.SDIO_WriteData:00000000 SDIO_WriteData
  C:\Temp\ccJzirAi.s:734    .text.SDIO_GetFIFOCount:00000000 $t
  C:\Temp\ccJzirAi.s:739    .text.SDIO_GetFIFOCount:00000000 SDIO_GetFIFOCount
  C:\Temp\ccJzirAi.s:766    .text.SDIO_StartSDIOReadWait:00000000 $t
  C:\Temp\ccJzirAi.s:771    .text.SDIO_StartSDIOReadWait:00000000 SDIO_StartSDIOReadWait
  C:\Temp\ccJzirAi.s:804    .text.SDIO_StopSDIOReadWait:00000000 $t
  C:\Temp\ccJzirAi.s:809    .text.SDIO_StopSDIOReadWait:00000000 SDIO_StopSDIOReadWait
  C:\Temp\ccJzirAi.s:842    .text.SDIO_SetSDIOReadWaitMode:00000000 $t
  C:\Temp\ccJzirAi.s:847    .text.SDIO_SetSDIOReadWaitMode:00000000 SDIO_SetSDIOReadWaitMode
  C:\Temp\ccJzirAi.s:879    .text.SDIO_SetSDIOOperation:00000000 $t
  C:\Temp\ccJzirAi.s:884    .text.SDIO_SetSDIOOperation:00000000 SDIO_SetSDIOOperation
  C:\Temp\ccJzirAi.s:917    .text.SDIO_SendSDIOSuspendCmd:00000000 $t
  C:\Temp\ccJzirAi.s:922    .text.SDIO_SendSDIOSuspendCmd:00000000 SDIO_SendSDIOSuspendCmd
  C:\Temp\ccJzirAi.s:955    .text.SDIO_CommandCompletionCmd:00000000 $t
  C:\Temp\ccJzirAi.s:960    .text.SDIO_CommandCompletionCmd:00000000 SDIO_CommandCompletionCmd
  C:\Temp\ccJzirAi.s:993    .text.SDIO_CEATAITCmd:00000000 $t
  C:\Temp\ccJzirAi.s:998    .text.SDIO_CEATAITCmd:00000000 SDIO_CEATAITCmd
  C:\Temp\ccJzirAi.s:1036   .text.SDIO_SendCEATACmd:00000000 $t
  C:\Temp\ccJzirAi.s:1041   .text.SDIO_SendCEATACmd:00000000 SDIO_SendCEATACmd
  C:\Temp\ccJzirAi.s:1074   .text.SDIO_DMACmd:00000000 $t
  C:\Temp\ccJzirAi.s:1079   .text.SDIO_DMACmd:00000000 SDIO_DMACmd
  C:\Temp\ccJzirAi.s:1112   .text.SDIO_ITConfig:00000000 $t
  C:\Temp\ccJzirAi.s:1117   .text.SDIO_ITConfig:00000000 SDIO_ITConfig
  C:\Temp\ccJzirAi.s:1174   .text.SDIO_GetFlagStatus:00000000 $t
  C:\Temp\ccJzirAi.s:1179   .text.SDIO_GetFlagStatus:00000000 SDIO_GetFlagStatus
  C:\Temp\ccJzirAi.s:1230   .text.SDIO_ClearFlag:00000000 $t
  C:\Temp\ccJzirAi.s:1235   .text.SDIO_ClearFlag:00000000 SDIO_ClearFlag
  C:\Temp\ccJzirAi.s:1267   .text.SDIO_GetITStatus:00000000 $t
  C:\Temp\ccJzirAi.s:1272   .text.SDIO_GetITStatus:00000000 SDIO_GetITStatus
  C:\Temp\ccJzirAi.s:1323   .text.SDIO_ClearITPendingBit:00000000 $t
  C:\Temp\ccJzirAi.s:1328   .text.SDIO_ClearITPendingBit:00000000 SDIO_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
