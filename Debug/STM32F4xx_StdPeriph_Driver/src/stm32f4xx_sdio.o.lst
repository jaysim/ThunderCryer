   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_sdio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	SDIO_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	SDIO_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Initialization and Configuration
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - CE-ATA mode management
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - DMA transfers management
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Interrupts and flags management
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @verbatim
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                 How to use this driver
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          9. When using the DMA mode 
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Argument
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Index
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Response type
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Wait
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Read Operations
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Write Operations
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @endverbatim
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @attention
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */ 
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                  Initialization and Configuration functions
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  27              		.loc 1 260 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  39              		.loc 1 261 0
  40 0004 4FF40060 		mov	r0, #2048
  41 0008 4FF00101 		mov	r1, #1
  42 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  43              		.loc 1 262 0
  44 0010 4FF40060 		mov	r0, #2048
  45 0014 4FF00001 		mov	r1, #0
  46 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
  47              		.loc 1 263 0
  48 001c 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE110:
  52 001e 00BF     		.align	2
  53              		.global	SDIO_Init
  54              		.thumb
  55              		.thumb_func
  57              	SDIO_Init:
  58              	.LFB111:
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  59              		.loc 1 273 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 16
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64 0020 80B4     		push	{r7}
  65              	.LCFI2:
  66              		.cfi_def_cfa_offset 4
  67              		.cfi_offset 7, -4
  68 0022 85B0     		sub	sp, sp, #20
  69              	.LCFI3:
  70              		.cfi_def_cfa_offset 24
  71 0024 00AF     		add	r7, sp, #0
  72              	.LCFI4:
  73              		.cfi_def_cfa_register 7
  74 0026 7860     		str	r0, [r7, #4]
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
  75              		.loc 1 274 0
  76 0028 4FF00003 		mov	r3, #0
  77 002c FB60     		str	r3, [r7, #12]
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  78              		.loc 1 285 0
  79 002e 4FF43053 		mov	r3, #11264
  80 0032 C4F20103 		movt	r3, 16385
  81 0036 5B68     		ldr	r3, [r3, #4]
  82 0038 FB60     		str	r3, [r7, #12]
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  83              		.loc 1 288 0
  84 003a FB68     		ldr	r3, [r7, #12]
  85 003c 23F4FC43 		bic	r3, r3, #32256
  86 0040 23F0FF03 		bic	r3, r3, #255
  87 0044 FB60     		str	r3, [r7, #12]
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  88              		.loc 1 296 0
  89 0046 7B68     		ldr	r3, [r7, #4]
  90 0048 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  91 004a 1A46     		mov	r2, r3
  92 004c 7B68     		ldr	r3, [r7, #4]
  93 004e 9B68     		ldr	r3, [r3, #8]
  94 0050 1A43     		orrs	r2, r2, r3
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  95              		.loc 1 297 0
  96 0052 7B68     		ldr	r3, [r7, #4]
  97 0054 5B68     		ldr	r3, [r3, #4]
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  98              		.loc 1 296 0
  99 0056 1A43     		orrs	r2, r2, r3
 100              		.loc 1 297 0
 101 0058 7B68     		ldr	r3, [r7, #4]
 102 005a DB68     		ldr	r3, [r3, #12]
 103 005c 1A43     		orrs	r2, r2, r3
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 104              		.loc 1 298 0
 105 005e 7B68     		ldr	r3, [r7, #4]
 106 0060 1B68     		ldr	r3, [r3, #0]
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 107              		.loc 1 297 0
 108 0062 1A43     		orrs	r2, r2, r3
 109              		.loc 1 298 0
 110 0064 7B68     		ldr	r3, [r7, #4]
 111 0066 1B69     		ldr	r3, [r3, #16]
 112 0068 1343     		orrs	r3, r3, r2
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 113              		.loc 1 296 0
 114 006a FA68     		ldr	r2, [r7, #12]
 115 006c 1343     		orrs	r3, r3, r2
 116 006e FB60     		str	r3, [r7, #12]
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 117              		.loc 1 301 0
 118 0070 4FF43053 		mov	r3, #11264
 119 0074 C4F20103 		movt	r3, 16385
 120 0078 FA68     		ldr	r2, [r7, #12]
 121 007a 5A60     		str	r2, [r3, #4]
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 122              		.loc 1 302 0
 123 007c 07F11407 		add	r7, r7, #20
 124 0080 BD46     		mov	sp, r7
 125 0082 80BC     		pop	{r7}
 126 0084 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE111:
 130 0086 00BF     		.align	2
 131              		.global	SDIO_StructInit
 132              		.thumb
 133              		.thumb_func
 135              	SDIO_StructInit:
 136              	.LFB112:
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         will be initialized.
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 137              		.loc 1 311 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 8
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142 0088 80B4     		push	{r7}
 143              	.LCFI5:
 144              		.cfi_def_cfa_offset 4
 145              		.cfi_offset 7, -4
 146 008a 83B0     		sub	sp, sp, #12
 147              	.LCFI6:
 148              		.cfi_def_cfa_offset 16
 149 008c 00AF     		add	r7, sp, #0
 150              	.LCFI7:
 151              		.cfi_def_cfa_register 7
 152 008e 7860     		str	r0, [r7, #4]
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 153              		.loc 1 313 0
 154 0090 7B68     		ldr	r3, [r7, #4]
 155 0092 4FF00002 		mov	r2, #0
 156 0096 1A75     		strb	r2, [r3, #20]
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 157              		.loc 1 314 0
 158 0098 7B68     		ldr	r3, [r7, #4]
 159 009a 4FF00002 		mov	r2, #0
 160 009e 1A60     		str	r2, [r3, #0]
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 161              		.loc 1 315 0
 162 00a0 7B68     		ldr	r3, [r7, #4]
 163 00a2 4FF00002 		mov	r2, #0
 164 00a6 5A60     		str	r2, [r3, #4]
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 165              		.loc 1 316 0
 166 00a8 7B68     		ldr	r3, [r7, #4]
 167 00aa 4FF00002 		mov	r2, #0
 168 00ae 9A60     		str	r2, [r3, #8]
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 169              		.loc 1 317 0
 170 00b0 7B68     		ldr	r3, [r7, #4]
 171 00b2 4FF00002 		mov	r2, #0
 172 00b6 DA60     		str	r2, [r3, #12]
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 173              		.loc 1 318 0
 174 00b8 7B68     		ldr	r3, [r7, #4]
 175 00ba 4FF00002 		mov	r2, #0
 176 00be 1A61     		str	r2, [r3, #16]
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 177              		.loc 1 319 0
 178 00c0 07F10C07 		add	r7, r7, #12
 179 00c4 BD46     		mov	sp, r7
 180 00c6 80BC     		pop	{r7}
 181 00c8 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE112:
 185 00ca 00BF     		.align	2
 186              		.global	SDIO_ClockCmd
 187              		.thumb
 188              		.thumb_func
 190              	SDIO_ClockCmd:
 191              	.LFB113:
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 192              		.loc 1 328 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 00cc 80B4     		push	{r7}
 198              	.LCFI8:
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 7, -4
 201 00ce 83B0     		sub	sp, sp, #12
 202              	.LCFI9:
 203              		.cfi_def_cfa_offset 16
 204 00d0 00AF     		add	r7, sp, #0
 205              	.LCFI10:
 206              		.cfi_def_cfa_register 7
 207 00d2 0346     		mov	r3, r0
 208 00d4 FB71     		strb	r3, [r7, #7]
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 209              		.loc 1 332 0
 210 00d6 48F2A003 		movw	r3, #32928
 211 00da C4F22523 		movt	r3, 16933
 212 00de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 213 00e0 1A60     		str	r2, [r3, #0]
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 214              		.loc 1 333 0
 215 00e2 07F10C07 		add	r7, r7, #12
 216 00e6 BD46     		mov	sp, r7
 217 00e8 80BC     		pop	{r7}
 218 00ea 7047     		bx	lr
 219              		.cfi_endproc
 220              	.LFE113:
 222              		.align	2
 223              		.global	SDIO_SetPowerState
 224              		.thumb
 225              		.thumb_func
 227              	SDIO_SetPowerState:
 228              	.LFB114:
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 229              		.loc 1 344 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234 00ec 80B4     		push	{r7}
 235              	.LCFI11:
 236              		.cfi_def_cfa_offset 4
 237              		.cfi_offset 7, -4
 238 00ee 83B0     		sub	sp, sp, #12
 239              	.LCFI12:
 240              		.cfi_def_cfa_offset 16
 241 00f0 00AF     		add	r7, sp, #0
 242              	.LCFI13:
 243              		.cfi_def_cfa_register 7
 244 00f2 7860     		str	r0, [r7, #4]
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 245              		.loc 1 348 0
 246 00f4 4FF43053 		mov	r3, #11264
 247 00f8 C4F20103 		movt	r3, 16385
 248 00fc 7A68     		ldr	r2, [r7, #4]
 249 00fe 1A60     		str	r2, [r3, #0]
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 250              		.loc 1 349 0
 251 0100 07F10C07 		add	r7, r7, #12
 252 0104 BD46     		mov	sp, r7
 253 0106 80BC     		pop	{r7}
 254 0108 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE114:
 258 010a 00BF     		.align	2
 259              		.global	SDIO_GetPowerState
 260              		.thumb
 261              		.thumb_func
 263              	SDIO_GetPowerState:
 264              	.LFB115:
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         following values:
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 265              		.loc 1 361 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270 010c 80B4     		push	{r7}
 271              	.LCFI14:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 010e 00AF     		add	r7, sp, #0
 275              	.LCFI15:
 276              		.cfi_def_cfa_register 7
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 277              		.loc 1 362 0
 278 0110 4FF43053 		mov	r3, #11264
 279 0114 C4F20103 		movt	r3, 16385
 280 0118 1B68     		ldr	r3, [r3, #0]
 281 011a 03F00303 		and	r3, r3, #3
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 282              		.loc 1 363 0
 283 011e 1846     		mov	r0, r3
 284 0120 BD46     		mov	sp, r7
 285 0122 80BC     		pop	{r7}
 286 0124 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE115:
 290 0126 00BF     		.align	2
 291              		.global	SDIO_SendCommand
 292              		.thumb
 293              		.thumb_func
 295              	SDIO_SendCommand:
 296              	.LFB116:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Command path state machine (CPSM) management functions
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         command.
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 297              		.loc 1 393 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 16
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302 0128 80B4     		push	{r7}
 303              	.LCFI16:
 304              		.cfi_def_cfa_offset 4
 305              		.cfi_offset 7, -4
 306 012a 85B0     		sub	sp, sp, #20
 307              	.LCFI17:
 308              		.cfi_def_cfa_offset 24
 309 012c 00AF     		add	r7, sp, #0
 310              	.LCFI18:
 311              		.cfi_def_cfa_register 7
 312 012e 7860     		str	r0, [r7, #4]
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 313              		.loc 1 394 0
 314 0130 4FF00003 		mov	r3, #0
 315 0134 FB60     		str	r3, [r7, #12]
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 316              		.loc 1 404 0
 317 0136 4FF43053 		mov	r3, #11264
 318 013a C4F20103 		movt	r3, 16385
 319 013e 7A68     		ldr	r2, [r7, #4]
 320 0140 1268     		ldr	r2, [r2, #0]
 321 0142 9A60     		str	r2, [r3, #8]
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 322              		.loc 1 408 0
 323 0144 4FF43053 		mov	r3, #11264
 324 0148 C4F20103 		movt	r3, 16385
 325 014c DB68     		ldr	r3, [r3, #12]
 326 014e FB60     		str	r3, [r7, #12]
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 327              		.loc 1 410 0
 328 0150 FB68     		ldr	r3, [r7, #12]
 329 0152 23F4FE63 		bic	r3, r3, #2032
 330 0156 23F00F03 		bic	r3, r3, #15
 331 015a FB60     		str	r3, [r7, #12]
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 332              		.loc 1 415 0
 333 015c 7B68     		ldr	r3, [r7, #4]
 334 015e 5A68     		ldr	r2, [r3, #4]
 335 0160 7B68     		ldr	r3, [r7, #4]
 336 0162 9B68     		ldr	r3, [r3, #8]
 337 0164 1A43     		orrs	r2, r2, r3
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 338              		.loc 1 416 0
 339 0166 7B68     		ldr	r3, [r7, #4]
 340 0168 DB68     		ldr	r3, [r3, #12]
 341 016a 1A43     		orrs	r2, r2, r3
 342 016c 7B68     		ldr	r3, [r7, #4]
 343 016e 1B69     		ldr	r3, [r3, #16]
 344 0170 1343     		orrs	r3, r3, r2
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 345              		.loc 1 415 0
 346 0172 FA68     		ldr	r2, [r7, #12]
 347 0174 1343     		orrs	r3, r3, r2
 348 0176 FB60     		str	r3, [r7, #12]
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 349              		.loc 1 419 0
 350 0178 4FF43053 		mov	r3, #11264
 351 017c C4F20103 		movt	r3, 16385
 352 0180 FA68     		ldr	r2, [r7, #12]
 353 0182 DA60     		str	r2, [r3, #12]
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 354              		.loc 1 420 0
 355 0184 07F11407 		add	r7, r7, #20
 356 0188 BD46     		mov	sp, r7
 357 018a 80BC     		pop	{r7}
 358 018c 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE116:
 362 018e 00BF     		.align	2
 363              		.global	SDIO_CmdStructInit
 364              		.thumb
 365              		.thumb_func
 367              	SDIO_CmdStructInit:
 368              	.LFB117:
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 369              		.loc 1 429 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 8
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 0190 80B4     		push	{r7}
 375              	.LCFI19:
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0192 83B0     		sub	sp, sp, #12
 379              	.LCFI20:
 380              		.cfi_def_cfa_offset 16
 381 0194 00AF     		add	r7, sp, #0
 382              	.LCFI21:
 383              		.cfi_def_cfa_register 7
 384 0196 7860     		str	r0, [r7, #4]
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 385              		.loc 1 431 0
 386 0198 7B68     		ldr	r3, [r7, #4]
 387 019a 4FF00002 		mov	r2, #0
 388 019e 1A60     		str	r2, [r3, #0]
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 389              		.loc 1 432 0
 390 01a0 7B68     		ldr	r3, [r7, #4]
 391 01a2 4FF00002 		mov	r2, #0
 392 01a6 5A60     		str	r2, [r3, #4]
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 393              		.loc 1 433 0
 394 01a8 7B68     		ldr	r3, [r7, #4]
 395 01aa 4FF00002 		mov	r2, #0
 396 01ae 9A60     		str	r2, [r3, #8]
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 397              		.loc 1 434 0
 398 01b0 7B68     		ldr	r3, [r7, #4]
 399 01b2 4FF00002 		mov	r2, #0
 400 01b6 DA60     		str	r2, [r3, #12]
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 401              		.loc 1 435 0
 402 01b8 7B68     		ldr	r3, [r7, #4]
 403 01ba 4FF00002 		mov	r2, #0
 404 01be 1A61     		str	r2, [r3, #16]
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 405              		.loc 1 436 0
 406 01c0 07F10C07 		add	r7, r7, #12
 407 01c4 BD46     		mov	sp, r7
 408 01c6 80BC     		pop	{r7}
 409 01c8 7047     		bx	lr
 410              		.cfi_endproc
 411              	.LFE117:
 413 01ca 00BF     		.align	2
 414              		.global	SDIO_GetCommandResponse
 415              		.thumb
 416              		.thumb_func
 418              	SDIO_GetCommandResponse:
 419              	.LFB118:
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 420              		.loc 1 444 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425 01cc 80B4     		push	{r7}
 426              	.LCFI22:
 427              		.cfi_def_cfa_offset 4
 428              		.cfi_offset 7, -4
 429 01ce 00AF     		add	r7, sp, #0
 430              	.LCFI23:
 431              		.cfi_def_cfa_register 7
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 432              		.loc 1 445 0
 433 01d0 4FF43053 		mov	r3, #11264
 434 01d4 C4F20103 		movt	r3, 16385
 435 01d8 1B69     		ldr	r3, [r3, #16]
 436 01da DBB2     		uxtb	r3, r3
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 437              		.loc 1 446 0
 438 01dc 1846     		mov	r0, r3
 439 01de BD46     		mov	sp, r7
 440 01e0 80BC     		pop	{r7}
 441 01e2 7047     		bx	lr
 442              		.cfi_endproc
 443              	.LFE118:
 445              		.align	2
 446              		.global	SDIO_GetResponse
 447              		.thumb
 448              		.thumb_func
 450              	SDIO_GetResponse:
 451              	.LFB119:
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 452              		.loc 1 459 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 16
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457 01e4 80B4     		push	{r7}
 458              	.LCFI24:
 459              		.cfi_def_cfa_offset 4
 460              		.cfi_offset 7, -4
 461 01e6 85B0     		sub	sp, sp, #20
 462              	.LCFI25:
 463              		.cfi_def_cfa_offset 24
 464 01e8 00AF     		add	r7, sp, #0
 465              	.LCFI26:
 466              		.cfi_def_cfa_register 7
 467 01ea 7860     		str	r0, [r7, #4]
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 468              		.loc 1 460 0
 469 01ec 4FF00003 		mov	r3, #0
 470 01f0 FB60     		str	r3, [r7, #12]
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 471              		.loc 1 465 0
 472 01f2 7A68     		ldr	r2, [r7, #4]
 473 01f4 42F61443 		movw	r3, #11284
 474 01f8 C4F20103 		movt	r3, 16385
 475 01fc D318     		adds	r3, r2, r3
 476 01fe FB60     		str	r3, [r7, #12]
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 477              		.loc 1 467 0
 478 0200 FB68     		ldr	r3, [r7, #12]
 479 0202 1B68     		ldr	r3, [r3, #0]
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 480              		.loc 1 468 0
 481 0204 1846     		mov	r0, r3
 482 0206 07F11407 		add	r7, r7, #20
 483 020a BD46     		mov	sp, r7
 484 020c 80BC     		pop	{r7}
 485 020e 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE119:
 489              		.align	2
 490              		.global	SDIO_DataConfig
 491              		.thumb
 492              		.thumb_func
 494              	SDIO_DataConfig:
 495              	.LFB120:
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Data path state machine (DPSM) management functions
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 496              		.loc 1 497 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 16
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501 0210 80B4     		push	{r7}
 502              	.LCFI27:
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 7, -4
 505 0212 85B0     		sub	sp, sp, #20
 506              	.LCFI28:
 507              		.cfi_def_cfa_offset 24
 508 0214 00AF     		add	r7, sp, #0
 509              	.LCFI29:
 510              		.cfi_def_cfa_register 7
 511 0216 7860     		str	r0, [r7, #4]
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 512              		.loc 1 498 0
 513 0218 4FF00003 		mov	r3, #0
 514 021c FB60     		str	r3, [r7, #12]
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 515              		.loc 1 509 0
 516 021e 4FF43053 		mov	r3, #11264
 517 0222 C4F20103 		movt	r3, 16385
 518 0226 7A68     		ldr	r2, [r7, #4]
 519 0228 1268     		ldr	r2, [r2, #0]
 520 022a 5A62     		str	r2, [r3, #36]
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 521              		.loc 1 513 0
 522 022c 4FF43053 		mov	r3, #11264
 523 0230 C4F20103 		movt	r3, 16385
 524 0234 7A68     		ldr	r2, [r7, #4]
 525 0236 5268     		ldr	r2, [r2, #4]
 526 0238 9A62     		str	r2, [r3, #40]
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 527              		.loc 1 517 0
 528 023a 4FF43053 		mov	r3, #11264
 529 023e C4F20103 		movt	r3, 16385
 530 0242 DB6A     		ldr	r3, [r3, #44]
 531 0244 FB60     		str	r3, [r7, #12]
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 532              		.loc 1 519 0
 533 0246 FB68     		ldr	r3, [r7, #12]
 534 0248 23F0F703 		bic	r3, r3, #247
 535 024c FB60     		str	r3, [r7, #12]
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 536              		.loc 1 524 0
 537 024e 7B68     		ldr	r3, [r7, #4]
 538 0250 9A68     		ldr	r2, [r3, #8]
 539 0252 7B68     		ldr	r3, [r7, #4]
 540 0254 DB68     		ldr	r3, [r3, #12]
 541 0256 1A43     		orrs	r2, r2, r3
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 542              		.loc 1 525 0
 543 0258 7B68     		ldr	r3, [r7, #4]
 544 025a 1B69     		ldr	r3, [r3, #16]
 545 025c 1A43     		orrs	r2, r2, r3
 546 025e 7B68     		ldr	r3, [r7, #4]
 547 0260 5B69     		ldr	r3, [r3, #20]
 548 0262 1343     		orrs	r3, r3, r2
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 549              		.loc 1 524 0
 550 0264 FA68     		ldr	r2, [r7, #12]
 551 0266 1343     		orrs	r3, r3, r2
 552 0268 FB60     		str	r3, [r7, #12]
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 553              		.loc 1 528 0
 554 026a 4FF43053 		mov	r3, #11264
 555 026e C4F20103 		movt	r3, 16385
 556 0272 FA68     		ldr	r2, [r7, #12]
 557 0274 DA62     		str	r2, [r3, #44]
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 558              		.loc 1 529 0
 559 0276 07F11407 		add	r7, r7, #20
 560 027a BD46     		mov	sp, r7
 561 027c 80BC     		pop	{r7}
 562 027e 7047     		bx	lr
 563              		.cfi_endproc
 564              	.LFE120:
 566              		.align	2
 567              		.global	SDIO_DataStructInit
 568              		.thumb
 569              		.thumb_func
 571              	SDIO_DataStructInit:
 572              	.LFB121:
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 573              		.loc 1 538 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 8
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578 0280 80B4     		push	{r7}
 579              	.LCFI30:
 580              		.cfi_def_cfa_offset 4
 581              		.cfi_offset 7, -4
 582 0282 83B0     		sub	sp, sp, #12
 583              	.LCFI31:
 584              		.cfi_def_cfa_offset 16
 585 0284 00AF     		add	r7, sp, #0
 586              	.LCFI32:
 587              		.cfi_def_cfa_register 7
 588 0286 7860     		str	r0, [r7, #4]
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 589              		.loc 1 540 0
 590 0288 7B68     		ldr	r3, [r7, #4]
 591 028a 4FF0FF32 		mov	r2, #-1
 592 028e 1A60     		str	r2, [r3, #0]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 593              		.loc 1 541 0
 594 0290 7B68     		ldr	r3, [r7, #4]
 595 0292 4FF00002 		mov	r2, #0
 596 0296 5A60     		str	r2, [r3, #4]
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 597              		.loc 1 542 0
 598 0298 7B68     		ldr	r3, [r7, #4]
 599 029a 4FF00002 		mov	r2, #0
 600 029e 9A60     		str	r2, [r3, #8]
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 601              		.loc 1 543 0
 602 02a0 7B68     		ldr	r3, [r7, #4]
 603 02a2 4FF00002 		mov	r2, #0
 604 02a6 DA60     		str	r2, [r3, #12]
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 605              		.loc 1 544 0
 606 02a8 7B68     		ldr	r3, [r7, #4]
 607 02aa 4FF00002 		mov	r2, #0
 608 02ae 1A61     		str	r2, [r3, #16]
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 609              		.loc 1 545 0
 610 02b0 7B68     		ldr	r3, [r7, #4]
 611 02b2 4FF00002 		mov	r2, #0
 612 02b6 5A61     		str	r2, [r3, #20]
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 613              		.loc 1 546 0
 614 02b8 07F10C07 		add	r7, r7, #12
 615 02bc BD46     		mov	sp, r7
 616 02be 80BC     		pop	{r7}
 617 02c0 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE121:
 621 02c2 00BF     		.align	2
 622              		.global	SDIO_GetDataCounter
 623              		.thumb
 624              		.thumb_func
 626              	SDIO_GetDataCounter:
 627              	.LFB122:
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 628              		.loc 1 554 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633 02c4 80B4     		push	{r7}
 634              	.LCFI33:
 635              		.cfi_def_cfa_offset 4
 636              		.cfi_offset 7, -4
 637 02c6 00AF     		add	r7, sp, #0
 638              	.LCFI34:
 639              		.cfi_def_cfa_register 7
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 640              		.loc 1 555 0
 641 02c8 4FF43053 		mov	r3, #11264
 642 02cc C4F20103 		movt	r3, 16385
 643 02d0 1B6B     		ldr	r3, [r3, #48]
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 644              		.loc 1 556 0
 645 02d2 1846     		mov	r0, r3
 646 02d4 BD46     		mov	sp, r7
 647 02d6 80BC     		pop	{r7}
 648 02d8 7047     		bx	lr
 649              		.cfi_endproc
 650              	.LFE122:
 652 02da 00BF     		.align	2
 653              		.global	SDIO_ReadData
 654              		.thumb
 655              		.thumb_func
 657              	SDIO_ReadData:
 658              	.LFB123:
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Data received
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 659              		.loc 1 564 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664 02dc 80B4     		push	{r7}
 665              	.LCFI35:
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 7, -4
 668 02de 00AF     		add	r7, sp, #0
 669              	.LCFI36:
 670              		.cfi_def_cfa_register 7
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 671              		.loc 1 565 0
 672 02e0 4FF43053 		mov	r3, #11264
 673 02e4 C4F20103 		movt	r3, 16385
 674 02e8 D3F88030 		ldr	r3, [r3, #128]
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 675              		.loc 1 566 0
 676 02ec 1846     		mov	r0, r3
 677 02ee BD46     		mov	sp, r7
 678 02f0 80BC     		pop	{r7}
 679 02f2 7047     		bx	lr
 680              		.cfi_endproc
 681              	.LFE123:
 683              		.align	2
 684              		.global	SDIO_WriteData
 685              		.thumb
 686              		.thumb_func
 688              	SDIO_WriteData:
 689              	.LFB124:
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 690              		.loc 1 574 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 8
 693              		@ frame_needed = 1, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 695 02f4 80B4     		push	{r7}
 696              	.LCFI37:
 697              		.cfi_def_cfa_offset 4
 698              		.cfi_offset 7, -4
 699 02f6 83B0     		sub	sp, sp, #12
 700              	.LCFI38:
 701              		.cfi_def_cfa_offset 16
 702 02f8 00AF     		add	r7, sp, #0
 703              	.LCFI39:
 704              		.cfi_def_cfa_register 7
 705 02fa 7860     		str	r0, [r7, #4]
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 706              		.loc 1 575 0
 707 02fc 4FF43053 		mov	r3, #11264
 708 0300 C4F20103 		movt	r3, 16385
 709 0304 7A68     		ldr	r2, [r7, #4]
 710 0306 C3F88020 		str	r2, [r3, #128]
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 711              		.loc 1 576 0
 712 030a 07F10C07 		add	r7, r7, #12
 713 030e BD46     		mov	sp, r7
 714 0310 80BC     		pop	{r7}
 715 0312 7047     		bx	lr
 716              		.cfi_endproc
 717              	.LFE124:
 719              		.align	2
 720              		.global	SDIO_GetFIFOCount
 721              		.thumb
 722              		.thumb_func
 724              	SDIO_GetFIFOCount:
 725              	.LFB125:
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 726              		.loc 1 584 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731 0314 80B4     		push	{r7}
 732              	.LCFI40:
 733              		.cfi_def_cfa_offset 4
 734              		.cfi_offset 7, -4
 735 0316 00AF     		add	r7, sp, #0
 736              	.LCFI41:
 737              		.cfi_def_cfa_register 7
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 738              		.loc 1 585 0
 739 0318 4FF43053 		mov	r3, #11264
 740 031c C4F20103 		movt	r3, 16385
 741 0320 9B6C     		ldr	r3, [r3, #72]
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 742              		.loc 1 586 0
 743 0322 1846     		mov	r0, r3
 744 0324 BD46     		mov	sp, r7
 745 0326 80BC     		pop	{r7}
 746 0328 7047     		bx	lr
 747              		.cfi_endproc
 748              	.LFE125:
 750 032a 00BF     		.align	2
 751              		.global	SDIO_StartSDIOReadWait
 752              		.thumb
 753              		.thumb_func
 755              	SDIO_StartSDIOReadWait:
 756              	.LFB126:
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               SDIO IO Cards mode management functions
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 757              		.loc 1 613 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 8
 760              		@ frame_needed = 1, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762 032c 80B4     		push	{r7}
 763              	.LCFI42:
 764              		.cfi_def_cfa_offset 4
 765              		.cfi_offset 7, -4
 766 032e 83B0     		sub	sp, sp, #12
 767              	.LCFI43:
 768              		.cfi_def_cfa_offset 16
 769 0330 00AF     		add	r7, sp, #0
 770              	.LCFI44:
 771              		.cfi_def_cfa_register 7
 772 0332 0346     		mov	r3, r0
 773 0334 FB71     		strb	r3, [r7, #7]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 774              		.loc 1 617 0
 775 0336 48F2A053 		movw	r3, #34208
 776 033a C4F22523 		movt	r3, 16933
 777 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 778 0340 1A60     		str	r2, [r3, #0]
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 779              		.loc 1 618 0
 780 0342 07F10C07 		add	r7, r7, #12
 781 0346 BD46     		mov	sp, r7
 782 0348 80BC     		pop	{r7}
 783 034a 7047     		bx	lr
 784              		.cfi_endproc
 785              	.LFE126:
 787              		.align	2
 788              		.global	SDIO_StopSDIOReadWait
 789              		.thumb
 790              		.thumb_func
 792              	SDIO_StopSDIOReadWait:
 793              	.LFB127:
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 794              		.loc 1 627 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 034c 80B4     		push	{r7}
 800              	.LCFI45:
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 034e 83B0     		sub	sp, sp, #12
 804              	.LCFI46:
 805              		.cfi_def_cfa_offset 16
 806 0350 00AF     		add	r7, sp, #0
 807              	.LCFI47:
 808              		.cfi_def_cfa_register 7
 809 0352 0346     		mov	r3, r0
 810 0354 FB71     		strb	r3, [r7, #7]
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 811              		.loc 1 631 0
 812 0356 48F2A453 		movw	r3, #34212
 813 035a C4F22523 		movt	r3, 16933
 814 035e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 815 0360 1A60     		str	r2, [r3, #0]
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 816              		.loc 1 632 0
 817 0362 07F10C07 		add	r7, r7, #12
 818 0366 BD46     		mov	sp, r7
 819 0368 80BC     		pop	{r7}
 820 036a 7047     		bx	lr
 821              		.cfi_endproc
 822              	.LFE127:
 824              		.align	2
 825              		.global	SDIO_SetSDIOReadWaitMode
 826              		.thumb
 827              		.thumb_func
 829              	SDIO_SetSDIOReadWaitMode:
 830              	.LFB128:
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 831              		.loc 1 643 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 8
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835              		@ link register save eliminated.
 836 036c 80B4     		push	{r7}
 837              	.LCFI48:
 838              		.cfi_def_cfa_offset 4
 839              		.cfi_offset 7, -4
 840 036e 83B0     		sub	sp, sp, #12
 841              	.LCFI49:
 842              		.cfi_def_cfa_offset 16
 843 0370 00AF     		add	r7, sp, #0
 844              	.LCFI50:
 845              		.cfi_def_cfa_register 7
 846 0372 7860     		str	r0, [r7, #4]
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 847              		.loc 1 647 0
 848 0374 48F2A853 		movw	r3, #34216
 849 0378 C4F22523 		movt	r3, 16933
 850 037c 7A68     		ldr	r2, [r7, #4]
 851 037e 1A60     		str	r2, [r3, #0]
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 852              		.loc 1 648 0
 853 0380 07F10C07 		add	r7, r7, #12
 854 0384 BD46     		mov	sp, r7
 855 0386 80BC     		pop	{r7}
 856 0388 7047     		bx	lr
 857              		.cfi_endproc
 858              	.LFE128:
 860 038a 00BF     		.align	2
 861              		.global	SDIO_SetSDIOOperation
 862              		.thumb
 863              		.thumb_func
 865              	SDIO_SetSDIOOperation:
 866              	.LFB129:
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 867              		.loc 1 657 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 8
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872 038c 80B4     		push	{r7}
 873              	.LCFI51:
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 038e 83B0     		sub	sp, sp, #12
 877              	.LCFI52:
 878              		.cfi_def_cfa_offset 16
 879 0390 00AF     		add	r7, sp, #0
 880              	.LCFI53:
 881              		.cfi_def_cfa_register 7
 882 0392 0346     		mov	r3, r0
 883 0394 FB71     		strb	r3, [r7, #7]
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 884              		.loc 1 661 0
 885 0396 48F2AC53 		movw	r3, #34220
 886 039a C4F22523 		movt	r3, 16933
 887 039e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 888 03a0 1A60     		str	r2, [r3, #0]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 889              		.loc 1 662 0
 890 03a2 07F10C07 		add	r7, r7, #12
 891 03a6 BD46     		mov	sp, r7
 892 03a8 80BC     		pop	{r7}
 893 03aa 7047     		bx	lr
 894              		.cfi_endproc
 895              	.LFE129:
 897              		.align	2
 898              		.global	SDIO_SendSDIOSuspendCmd
 899              		.thumb
 900              		.thumb_func
 902              	SDIO_SendSDIOSuspendCmd:
 903              	.LFB130:
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 904              		.loc 1 671 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 8
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 909 03ac 80B4     		push	{r7}
 910              	.LCFI54:
 911              		.cfi_def_cfa_offset 4
 912              		.cfi_offset 7, -4
 913 03ae 83B0     		sub	sp, sp, #12
 914              	.LCFI55:
 915              		.cfi_def_cfa_offset 16
 916 03b0 00AF     		add	r7, sp, #0
 917              	.LCFI56:
 918              		.cfi_def_cfa_register 7
 919 03b2 0346     		mov	r3, r0
 920 03b4 FB71     		strb	r3, [r7, #7]
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 921              		.loc 1 675 0
 922 03b6 48F2AC13 		movw	r3, #33196
 923 03ba C4F22523 		movt	r3, 16933
 924 03be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 925 03c0 1A60     		str	r2, [r3, #0]
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 926              		.loc 1 676 0
 927 03c2 07F10C07 		add	r7, r7, #12
 928 03c6 BD46     		mov	sp, r7
 929 03c8 80BC     		pop	{r7}
 930 03ca 7047     		bx	lr
 931              		.cfi_endproc
 932              	.LFE130:
 934              		.align	2
 935              		.global	SDIO_CommandCompletionCmd
 936              		.thumb
 937              		.thumb_func
 939              	SDIO_CommandCompletionCmd:
 940              	.LFB131:
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               CE-ATA mode management functions
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 941              		.loc 1 703 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 8
 944              		@ frame_needed = 1, uses_anonymous_args = 0
 945              		@ link register save eliminated.
 946 03cc 80B4     		push	{r7}
 947              	.LCFI57:
 948              		.cfi_def_cfa_offset 4
 949              		.cfi_offset 7, -4
 950 03ce 83B0     		sub	sp, sp, #12
 951              	.LCFI58:
 952              		.cfi_def_cfa_offset 16
 953 03d0 00AF     		add	r7, sp, #0
 954              	.LCFI59:
 955              		.cfi_def_cfa_register 7
 956 03d2 0346     		mov	r3, r0
 957 03d4 FB71     		strb	r3, [r7, #7]
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 958              		.loc 1 707 0
 959 03d6 48F2B013 		movw	r3, #33200
 960 03da C4F22523 		movt	r3, 16933
 961 03de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 962 03e0 1A60     		str	r2, [r3, #0]
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 963              		.loc 1 708 0
 964 03e2 07F10C07 		add	r7, r7, #12
 965 03e6 BD46     		mov	sp, r7
 966 03e8 80BC     		pop	{r7}
 967 03ea 7047     		bx	lr
 968              		.cfi_endproc
 969              	.LFE131:
 971              		.align	2
 972              		.global	SDIO_CEATAITCmd
 973              		.thumb
 974              		.thumb_func
 976              	SDIO_CEATAITCmd:
 977              	.LFB132:
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 978              		.loc 1 717 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 8
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983 03ec 80B4     		push	{r7}
 984              	.LCFI60:
 985              		.cfi_def_cfa_offset 4
 986              		.cfi_offset 7, -4
 987 03ee 83B0     		sub	sp, sp, #12
 988              	.LCFI61:
 989              		.cfi_def_cfa_offset 16
 990 03f0 00AF     		add	r7, sp, #0
 991              	.LCFI62:
 992              		.cfi_def_cfa_register 7
 993 03f2 0346     		mov	r3, r0
 994 03f4 FB71     		strb	r3, [r7, #7]
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 995              		.loc 1 721 0
 996 03f6 48F2B413 		movw	r3, #33204
 997 03fa C4F22523 		movt	r3, 16933
 998 03fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 999 0400 02F00102 		and	r2, r2, #1
 1000 0404 002A     		cmp	r2, #0
 1001 0406 14BF     		ite	ne
 1002 0408 0022     		movne	r2, #0
 1003 040a 0122     		moveq	r2, #1
 1004 040c 1A60     		str	r2, [r3, #0]
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1005              		.loc 1 722 0
 1006 040e 07F10C07 		add	r7, r7, #12
 1007 0412 BD46     		mov	sp, r7
 1008 0414 80BC     		pop	{r7}
 1009 0416 7047     		bx	lr
 1010              		.cfi_endproc
 1011              	.LFE132:
 1013              		.align	2
 1014              		.global	SDIO_SendCEATACmd
 1015              		.thumb
 1016              		.thumb_func
 1018              	SDIO_SendCEATACmd:
 1019              	.LFB133:
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1020              		.loc 1 731 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 8
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024              		@ link register save eliminated.
 1025 0418 80B4     		push	{r7}
 1026              	.LCFI63:
 1027              		.cfi_def_cfa_offset 4
 1028              		.cfi_offset 7, -4
 1029 041a 83B0     		sub	sp, sp, #12
 1030              	.LCFI64:
 1031              		.cfi_def_cfa_offset 16
 1032 041c 00AF     		add	r7, sp, #0
 1033              	.LCFI65:
 1034              		.cfi_def_cfa_register 7
 1035 041e 0346     		mov	r3, r0
 1036 0420 FB71     		strb	r3, [r7, #7]
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 1037              		.loc 1 735 0
 1038 0422 48F2B813 		movw	r3, #33208
 1039 0426 C4F22523 		movt	r3, 16933
 1040 042a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1041 042c 1A60     		str	r2, [r3, #0]
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1042              		.loc 1 736 0
 1043 042e 07F10C07 		add	r7, r7, #12
 1044 0432 BD46     		mov	sp, r7
 1045 0434 80BC     		pop	{r7}
 1046 0436 7047     		bx	lr
 1047              		.cfi_endproc
 1048              	.LFE133:
 1050              		.align	2
 1051              		.global	SDIO_DMACmd
 1052              		.thumb
 1053              		.thumb_func
 1055              	SDIO_DMACmd:
 1056              	.LFB134:
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               DMA transfers management functions
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1057              		.loc 1 763 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 8
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062 0438 80B4     		push	{r7}
 1063              	.LCFI66:
 1064              		.cfi_def_cfa_offset 4
 1065              		.cfi_offset 7, -4
 1066 043a 83B0     		sub	sp, sp, #12
 1067              	.LCFI67:
 1068              		.cfi_def_cfa_offset 16
 1069 043c 00AF     		add	r7, sp, #0
 1070              	.LCFI68:
 1071              		.cfi_def_cfa_register 7
 1072 043e 0346     		mov	r3, r0
 1073 0440 FB71     		strb	r3, [r7, #7]
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 1074              		.loc 1 767 0
 1075 0442 48F28C53 		movw	r3, #34188
 1076 0446 C4F22523 		movt	r3, 16933
 1077 044a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1078 044c 1A60     		str	r2, [r3, #0]
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1079              		.loc 1 768 0
 1080 044e 07F10C07 		add	r7, r7, #12
 1081 0452 BD46     		mov	sp, r7
 1082 0454 80BC     		pop	{r7}
 1083 0456 7047     		bx	lr
 1084              		.cfi_endproc
 1085              	.LFE134:
 1087              		.align	2
 1088              		.global	SDIO_ITConfig
 1089              		.thumb
 1090              		.thumb_func
 1092              	SDIO_ITConfig:
 1093              	.LFB135:
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                        Interrupts and flags management functions
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None 
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1094              		.loc 1 821 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 8
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 0458 80B4     		push	{r7}
 1100              	.LCFI69:
 1101              		.cfi_def_cfa_offset 4
 1102              		.cfi_offset 7, -4
 1103 045a 83B0     		sub	sp, sp, #12
 1104              	.LCFI70:
 1105              		.cfi_def_cfa_offset 16
 1106 045c 00AF     		add	r7, sp, #0
 1107              	.LCFI71:
 1108              		.cfi_def_cfa_register 7
 1109 045e 7860     		str	r0, [r7, #4]
 1110 0460 0B46     		mov	r3, r1
 1111 0462 FB70     		strb	r3, [r7, #3]
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 1112              		.loc 1 826 0
 1113 0464 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1114 0466 002B     		cmp	r3, #0
 1115 0468 0DD0     		beq	.L27
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 1116              		.loc 1 829 0
 1117 046a 4FF43053 		mov	r3, #11264
 1118 046e C4F20103 		movt	r3, 16385
 1119 0472 4FF43052 		mov	r2, #11264
 1120 0476 C4F20102 		movt	r2, 16385
 1121 047a D26B     		ldr	r2, [r2, #60]
 1122 047c 1146     		mov	r1, r2
 1123 047e 7A68     		ldr	r2, [r7, #4]
 1124 0480 0A43     		orrs	r2, r2, r1
 1125 0482 DA63     		str	r2, [r3, #60]
 1126 0484 0EE0     		b	.L26
 1127              	.L27:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 1128              		.loc 1 834 0
 1129 0486 4FF43053 		mov	r3, #11264
 1130 048a C4F20103 		movt	r3, 16385
 1131 048e 4FF43052 		mov	r2, #11264
 1132 0492 C4F20102 		movt	r2, 16385
 1133 0496 D26B     		ldr	r2, [r2, #60]
 1134 0498 1146     		mov	r1, r2
 1135 049a 7A68     		ldr	r2, [r7, #4]
 1136 049c 6FEA0202 		mvn	r2, r2
 1137 04a0 0A40     		ands	r2, r2, r1
 1138 04a2 DA63     		str	r2, [r3, #60]
 1139              	.L26:
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   } 
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1140              		.loc 1 836 0
 1141 04a4 07F10C07 		add	r7, r7, #12
 1142 04a8 BD46     		mov	sp, r7
 1143 04aa 80BC     		pop	{r7}
 1144 04ac 7047     		bx	lr
 1145              		.cfi_endproc
 1146              	.LFE135:
 1148 04ae 00BF     		.align	2
 1149              		.global	SDIO_GetFlagStatus
 1150              		.thumb
 1151              		.thumb_func
 1153              	SDIO_GetFlagStatus:
 1154              	.LFB136:
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1155              		.loc 1 869 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 16
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160 04b0 80B4     		push	{r7}
 1161              	.LCFI72:
 1162              		.cfi_def_cfa_offset 4
 1163              		.cfi_offset 7, -4
 1164 04b2 85B0     		sub	sp, sp, #20
 1165              	.LCFI73:
 1166              		.cfi_def_cfa_offset 24
 1167 04b4 00AF     		add	r7, sp, #0
 1168              	.LCFI74:
 1169              		.cfi_def_cfa_register 7
 1170 04b6 7860     		str	r0, [r7, #4]
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 1171              		.loc 1 870 0
 1172 04b8 4FF00003 		mov	r3, #0
 1173 04bc FB73     		strb	r3, [r7, #15]
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 1174              		.loc 1 875 0
 1175 04be 4FF43053 		mov	r3, #11264
 1176 04c2 C4F20103 		movt	r3, 16385
 1177 04c6 5B6B     		ldr	r3, [r3, #52]
 1178 04c8 1A46     		mov	r2, r3
 1179 04ca 7B68     		ldr	r3, [r7, #4]
 1180 04cc 1340     		ands	r3, r3, r2
 1181 04ce 002B     		cmp	r3, #0
 1182 04d0 03D0     		beq	.L30
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1183              		.loc 1 877 0
 1184 04d2 4FF00103 		mov	r3, #1
 1185 04d6 FB73     		strb	r3, [r7, #15]
 1186 04d8 02E0     		b	.L31
 1187              	.L30:
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1188              		.loc 1 881 0
 1189 04da 4FF00003 		mov	r3, #0
 1190 04de FB73     		strb	r3, [r7, #15]
 1191              	.L31:
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1192              		.loc 1 883 0
 1193 04e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1194              		.loc 1 884 0
 1195 04e2 1846     		mov	r0, r3
 1196 04e4 07F11407 		add	r7, r7, #20
 1197 04e8 BD46     		mov	sp, r7
 1198 04ea 80BC     		pop	{r7}
 1199 04ec 7047     		bx	lr
 1200              		.cfi_endproc
 1201              	.LFE136:
 1203 04ee 00BF     		.align	2
 1204              		.global	SDIO_ClearFlag
 1205              		.thumb
 1206              		.thumb_func
 1208              	SDIO_ClearFlag:
 1209              	.LFB137:
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1210              		.loc 1 906 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 8
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215 04f0 80B4     		push	{r7}
 1216              	.LCFI75:
 1217              		.cfi_def_cfa_offset 4
 1218              		.cfi_offset 7, -4
 1219 04f2 83B0     		sub	sp, sp, #12
 1220              	.LCFI76:
 1221              		.cfi_def_cfa_offset 16
 1222 04f4 00AF     		add	r7, sp, #0
 1223              	.LCFI77:
 1224              		.cfi_def_cfa_register 7
 1225 04f6 7860     		str	r0, [r7, #4]
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 1226              		.loc 1 910 0
 1227 04f8 4FF43053 		mov	r3, #11264
 1228 04fc C4F20103 		movt	r3, 16385
 1229 0500 7A68     		ldr	r2, [r7, #4]
 1230 0502 9A63     		str	r2, [r3, #56]
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1231              		.loc 1 911 0
 1232 0504 07F10C07 		add	r7, r7, #12
 1233 0508 BD46     		mov	sp, r7
 1234 050a 80BC     		pop	{r7}
 1235 050c 7047     		bx	lr
 1236              		.cfi_endproc
 1237              	.LFE137:
 1239 050e 00BF     		.align	2
 1240              		.global	SDIO_GetITStatus
 1241              		.thumb
 1242              		.thumb_func
 1244              	SDIO_GetITStatus:
 1245              	.LFB138:
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1246              		.loc 1 945 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 16
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
 1250              		@ link register save eliminated.
 1251 0510 80B4     		push	{r7}
 1252              	.LCFI78:
 1253              		.cfi_def_cfa_offset 4
 1254              		.cfi_offset 7, -4
 1255 0512 85B0     		sub	sp, sp, #20
 1256              	.LCFI79:
 1257              		.cfi_def_cfa_offset 24
 1258 0514 00AF     		add	r7, sp, #0
 1259              	.LCFI80:
 1260              		.cfi_def_cfa_register 7
 1261 0516 7860     		str	r0, [r7, #4]
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 1262              		.loc 1 946 0
 1263 0518 4FF00003 		mov	r3, #0
 1264 051c FB73     		strb	r3, [r7, #15]
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 1265              		.loc 1 950 0
 1266 051e 4FF43053 		mov	r3, #11264
 1267 0522 C4F20103 		movt	r3, 16385
 1268 0526 5B6B     		ldr	r3, [r3, #52]
 1269 0528 1A46     		mov	r2, r3
 1270 052a 7B68     		ldr	r3, [r7, #4]
 1271 052c 1340     		ands	r3, r3, r2
 1272 052e 002B     		cmp	r3, #0
 1273 0530 03D0     		beq	.L34
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1274              		.loc 1 952 0
 1275 0532 4FF00103 		mov	r3, #1
 1276 0536 FB73     		strb	r3, [r7, #15]
 1277 0538 02E0     		b	.L35
 1278              	.L34:
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1279              		.loc 1 956 0
 1280 053a 4FF00003 		mov	r3, #0
 1281 053e FB73     		strb	r3, [r7, #15]
 1282              	.L35:
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1283              		.loc 1 958 0
 1284 0540 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1285              		.loc 1 959 0
 1286 0542 1846     		mov	r0, r3
 1287 0544 07F11407 		add	r7, r7, #20
 1288 0548 BD46     		mov	sp, r7
 1289 054a 80BC     		pop	{r7}
 1290 054c 7047     		bx	lr
 1291              		.cfi_endproc
 1292              	.LFE138:
 1294 054e 00BF     		.align	2
 1295              		.global	SDIO_ClearITPendingBit
 1296              		.thumb
 1297              		.thumb_func
 1299              	SDIO_ClearITPendingBit:
 1300              	.LFB139:
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1301              		.loc 1 981 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 8
 1304              		@ frame_needed = 1, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306 0550 80B4     		push	{r7}
 1307              	.LCFI81:
 1308              		.cfi_def_cfa_offset 4
 1309              		.cfi_offset 7, -4
 1310 0552 83B0     		sub	sp, sp, #12
 1311              	.LCFI82:
 1312              		.cfi_def_cfa_offset 16
 1313 0554 00AF     		add	r7, sp, #0
 1314              	.LCFI83:
 1315              		.cfi_def_cfa_register 7
 1316 0556 7860     		str	r0, [r7, #4]
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 1317              		.loc 1 985 0
 1318 0558 4FF43053 		mov	r3, #11264
 1319 055c C4F20103 		movt	r3, 16385
 1320 0560 7A68     		ldr	r2, [r7, #4]
 1321 0562 9A63     		str	r2, [r3, #56]
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1322              		.loc 1 986 0
 1323 0564 07F10C07 		add	r7, r7, #12
 1324 0568 BD46     		mov	sp, r7
 1325 056a 80BC     		pop	{r7}
 1326 056c 7047     		bx	lr
 1327              		.cfi_endproc
 1328              	.LFE139:
 1330              	.Letext0:
 1331              		.file 2 "c:\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib/gcc/arm-none-eabi
 1332              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 1333              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_sdio.
 1334              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_sdio.c
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:19     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:24     .text:00000000 SDIO_DeInit
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:57     .text:00000020 SDIO_Init
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:135    .text:00000088 SDIO_StructInit
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:190    .text:000000cc SDIO_ClockCmd
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:227    .text:000000ec SDIO_SetPowerState
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:263    .text:0000010c SDIO_GetPowerState
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:295    .text:00000128 SDIO_SendCommand
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:367    .text:00000190 SDIO_CmdStructInit
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:418    .text:000001cc SDIO_GetCommandResponse
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:450    .text:000001e4 SDIO_GetResponse
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:494    .text:00000210 SDIO_DataConfig
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:571    .text:00000280 SDIO_DataStructInit
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:626    .text:000002c4 SDIO_GetDataCounter
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:657    .text:000002dc SDIO_ReadData
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:688    .text:000002f4 SDIO_WriteData
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:724    .text:00000314 SDIO_GetFIFOCount
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:755    .text:0000032c SDIO_StartSDIOReadWait
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:792    .text:0000034c SDIO_StopSDIOReadWait
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:829    .text:0000036c SDIO_SetSDIOReadWaitMode
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:865    .text:0000038c SDIO_SetSDIOOperation
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:902    .text:000003ac SDIO_SendSDIOSuspendCmd
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:939    .text:000003cc SDIO_CommandCompletionCmd
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:976    .text:000003ec SDIO_CEATAITCmd
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:1018   .text:00000418 SDIO_SendCEATACmd
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:1055   .text:00000438 SDIO_DMACmd
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:1092   .text:00000458 SDIO_ITConfig
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:1153   .text:000004b0 SDIO_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:1208   .text:000004f0 SDIO_ClearFlag
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:1244   .text:00000510 SDIO_GetITStatus
C:\Users\Alex\AppData\Local\Temp\cc6pE4kK.s:1299   .text:00000550 SDIO_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
