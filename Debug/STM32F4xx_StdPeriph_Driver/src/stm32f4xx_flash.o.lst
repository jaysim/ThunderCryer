   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_flash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	FLASH_SetLatency
  20              		.thumb
  21              		.thumb_func
  23              	FLASH_SetLatency:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @file    stm32f4xx_flash.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          functionalities of the FLASH peripheral:
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - FLASH Interface configuration
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - FLASH Memory Programming
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - Option Bytes Programming
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - Interrupts and flags management
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  @verbatim
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          ===================================================================
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                 How to use this driver
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          ===================================================================
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                           
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This driver provides functions to configure and program the FLASH 
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          memory of all STM32F4xx devices.
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          These functions are split in 4 groups:
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * 
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           1. FLASH Interface configuration functions: this group includes the
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              management of the following features:
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set the latency
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Enable/Disable the prefetch buffer
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Enable/Disable the Instruction cache and the Data cache
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Reset the Instruction cache and the Data cache
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           2. FLASH Memory Programming functions: this group includes all needed
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              functions to erase and program the main memory:
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Lock and Unlock the FLASH interface
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Erase function: Erase sector, erase all sectors
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Program functions: byte, half word, word and double word
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           3. Option Bytes Programming functions: this group includes all needed
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              functions to manage the Option Bytes:
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set/Reset the write protection
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set the Read protection Level
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set the BOR level
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Program the user Option Bytes
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Launch the Option Bytes loader
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           4. Interrupts and flags management functions: this group 
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              includes all needed functions to:
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Enable/Disable the FLASH interrupt sources
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Get flags status
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Clear flags
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Get FLASH operation status
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Wait for last FLASH operation
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * 
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  @endverbatim
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                      
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   ******************************************************************************
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @attention
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   ******************************************************************************
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Includes ------------------------------------------------------------------*/
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** #include "stm32f4xx_flash.h"
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH 
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief FLASH driver modules
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */ 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private typedef -----------------------------------------------------------*/
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private define ------------------------------------------------------------*/ 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** #define SECTOR_MASK               ((uint32_t)0xFFFFFF07)
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private macro -------------------------------------------------------------*/
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private variables ---------------------------------------------------------*/
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private function prototypes -----------------------------------------------*/
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private functions ---------------------------------------------------------*/
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Private_Functions
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */ 
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group1 FLASH Interface configuration functions
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  @brief   FLASH Interface configuration functions 
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                        FLASH Interface configuration functions
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    This group includes the following functions:
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_SetLatency(uint32_t FLASH_Latency)
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****        To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****        must be correctly programmed according to the frequency of the CPU clock 
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       (HCLK) and the supply voltage of the device.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+     
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|     
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|           
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|   
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  | 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|   
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 120|72 < HCLK <= 90  |64 < HCLK <= 80  |
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |5WS(6CPU cycle)|      NA        |      NA        |90 < HCLK <= 108 |80 < HCLK <= 96  | 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |6WS(7CPU cycle)|      NA        |      NA        |108 < HCLK <= 120|96 < HCLK <= 112 | 
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |7WS(8CPU cycle)|      NA        |      NA        |     NA          |112 < HCLK <= 120| 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |***************|****************|****************|*****************|*****************|***********
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   | voltage ra
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   | with Exter
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |Max Parallelism|      x32       |               x16                |       x8        |          x
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |PSIZE[1:0]     |      10        |               01                 |       00        |           
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------------------
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_InstructionCacheCmd(FunctionalState NewState)
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_DataCacheCmd(FunctionalState NewState)
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_InstructionCacheReset(void)
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_DataCacheReset(void)
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    The unlock sequence is not needed for these functions.
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Sets the code latency value.
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_Latency: specifies the FLASH Latency value.
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_0: FLASH Zero Latency cycle
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_1: FLASH One Latency cycle
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_2: FLASH Two Latency cycles
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_3: FLASH Three Latency cycles
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_4: FLASH Four Latency cycles 
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_5: FLASH Five Latency cycles 
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_6: FLASH Six Latency cycles
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_7: FLASH Seven Latency cycles      
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_SetLatency(uint32_t FLASH_Latency)
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
  26              		.loc 1 165 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_LATENCY(FLASH_Latency));
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Perform Byte access to FLASH_ACR[8:0] to set the Latency value */
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)ACR_BYTE0_ADDRESS = (uint8_t)FLASH_Latency;
  42              		.loc 1 170 0
  43 0008 4FF47053 		mov	r3, #15360
  44 000c C4F20203 		movt	r3, 16386
  45 0010 7A68     		ldr	r2, [r7, #4]
  46 0012 D2B2     		uxtb	r2, r2
  47 0014 1A70     		strb	r2, [r3, #0]
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
  48              		.loc 1 171 0
  49 0016 07F10C07 		add	r7, r7, #12
  50 001a BD46     		mov	sp, r7
  51 001c 80BC     		pop	{r7}
  52 001e 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE110:
  56              		.align	2
  57              		.global	FLASH_PrefetchBufferCmd
  58              		.thumb
  59              		.thumb_func
  61              	FLASH_PrefetchBufferCmd:
  62              	.LFB111:
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Prefetch Buffer.
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Prefetch Buffer.
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
  63              		.loc 1 180 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 8
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0020 80B4     		push	{r7}
  69              	.LCFI3:
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 7, -4
  72 0022 83B0     		sub	sp, sp, #12
  73              	.LCFI4:
  74              		.cfi_def_cfa_offset 16
  75 0024 00AF     		add	r7, sp, #0
  76              	.LCFI5:
  77              		.cfi_def_cfa_register 7
  78 0026 0346     		mov	r3, r0
  79 0028 FB71     		strb	r3, [r7, #7]
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Enable or disable the Prefetch Buffer */
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
  80              		.loc 1 185 0
  81 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  82 002c 002B     		cmp	r3, #0
  83 002e 0CD0     		beq	.L3
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_PRFTEN;
  84              		.loc 1 187 0
  85 0030 4FF47053 		mov	r3, #15360
  86 0034 C4F20203 		movt	r3, 16386
  87 0038 4FF47052 		mov	r2, #15360
  88 003c C4F20202 		movt	r2, 16386
  89 0040 1268     		ldr	r2, [r2, #0]
  90 0042 42F48072 		orr	r2, r2, #256
  91 0046 1A60     		str	r2, [r3, #0]
  92 0048 0BE0     		b	.L2
  93              	.L3:
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_PRFTEN);
  94              		.loc 1 191 0
  95 004a 4FF47053 		mov	r3, #15360
  96 004e C4F20203 		movt	r3, 16386
  97 0052 4FF47052 		mov	r2, #15360
  98 0056 C4F20202 		movt	r2, 16386
  99 005a 1268     		ldr	r2, [r2, #0]
 100 005c 22F48072 		bic	r2, r2, #256
 101 0060 1A60     		str	r2, [r3, #0]
 102              	.L2:
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 103              		.loc 1 193 0
 104 0062 07F10C07 		add	r7, r7, #12
 105 0066 BD46     		mov	sp, r7
 106 0068 80BC     		pop	{r7}
 107 006a 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE111:
 111              		.align	2
 112              		.global	FLASH_InstructionCacheCmd
 113              		.thumb
 114              		.thumb_func
 116              	FLASH_InstructionCacheCmd:
 117              	.LFB112:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Instruction Cache feature.
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Instruction Cache.
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_InstructionCacheCmd(FunctionalState NewState)
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 118              		.loc 1 202 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 8
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123 006c 80B4     		push	{r7}
 124              	.LCFI6:
 125              		.cfi_def_cfa_offset 4
 126              		.cfi_offset 7, -4
 127 006e 83B0     		sub	sp, sp, #12
 128              	.LCFI7:
 129              		.cfi_def_cfa_offset 16
 130 0070 00AF     		add	r7, sp, #0
 131              	.LCFI8:
 132              		.cfi_def_cfa_register 7
 133 0072 0346     		mov	r3, r0
 134 0074 FB71     		strb	r3, [r7, #7]
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 135              		.loc 1 206 0
 136 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 137 0078 002B     		cmp	r3, #0
 138 007a 0CD0     		beq	.L6
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_ICEN;
 139              		.loc 1 208 0
 140 007c 4FF47053 		mov	r3, #15360
 141 0080 C4F20203 		movt	r3, 16386
 142 0084 4FF47052 		mov	r2, #15360
 143 0088 C4F20202 		movt	r2, 16386
 144 008c 1268     		ldr	r2, [r2, #0]
 145 008e 42F40072 		orr	r2, r2, #512
 146 0092 1A60     		str	r2, [r3, #0]
 147 0094 0BE0     		b	.L5
 148              	.L6:
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_ICEN);
 149              		.loc 1 212 0
 150 0096 4FF47053 		mov	r3, #15360
 151 009a C4F20203 		movt	r3, 16386
 152 009e 4FF47052 		mov	r2, #15360
 153 00a2 C4F20202 		movt	r2, 16386
 154 00a6 1268     		ldr	r2, [r2, #0]
 155 00a8 22F40072 		bic	r2, r2, #512
 156 00ac 1A60     		str	r2, [r3, #0]
 157              	.L5:
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 158              		.loc 1 214 0
 159 00ae 07F10C07 		add	r7, r7, #12
 160 00b2 BD46     		mov	sp, r7
 161 00b4 80BC     		pop	{r7}
 162 00b6 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE112:
 166              		.align	2
 167              		.global	FLASH_DataCacheCmd
 168              		.thumb
 169              		.thumb_func
 171              	FLASH_DataCacheCmd:
 172              	.LFB113:
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Data Cache feature.
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Data Cache.
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_DataCacheCmd(FunctionalState NewState)
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 173              		.loc 1 223 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 8
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178 00b8 80B4     		push	{r7}
 179              	.LCFI9:
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
 182 00ba 83B0     		sub	sp, sp, #12
 183              	.LCFI10:
 184              		.cfi_def_cfa_offset 16
 185 00bc 00AF     		add	r7, sp, #0
 186              	.LCFI11:
 187              		.cfi_def_cfa_register 7
 188 00be 0346     		mov	r3, r0
 189 00c0 FB71     		strb	r3, [r7, #7]
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 190              		.loc 1 227 0
 191 00c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 192 00c4 002B     		cmp	r3, #0
 193 00c6 0CD0     		beq	.L9
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_DCEN;
 194              		.loc 1 229 0
 195 00c8 4FF47053 		mov	r3, #15360
 196 00cc C4F20203 		movt	r3, 16386
 197 00d0 4FF47052 		mov	r2, #15360
 198 00d4 C4F20202 		movt	r2, 16386
 199 00d8 1268     		ldr	r2, [r2, #0]
 200 00da 42F48062 		orr	r2, r2, #1024
 201 00de 1A60     		str	r2, [r3, #0]
 202 00e0 0BE0     		b	.L8
 203              	.L9:
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_DCEN);
 204              		.loc 1 233 0
 205 00e2 4FF47053 		mov	r3, #15360
 206 00e6 C4F20203 		movt	r3, 16386
 207 00ea 4FF47052 		mov	r2, #15360
 208 00ee C4F20202 		movt	r2, 16386
 209 00f2 1268     		ldr	r2, [r2, #0]
 210 00f4 22F48062 		bic	r2, r2, #1024
 211 00f8 1A60     		str	r2, [r3, #0]
 212              	.L8:
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 213              		.loc 1 235 0
 214 00fa 07F10C07 		add	r7, r7, #12
 215 00fe BD46     		mov	sp, r7
 216 0100 80BC     		pop	{r7}
 217 0102 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE113:
 221              		.align	2
 222              		.global	FLASH_InstructionCacheReset
 223              		.thumb
 224              		.thumb_func
 226              	FLASH_InstructionCacheReset:
 227              	.LFB114:
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Resets the Instruction Cache.
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used only when the Instruction Cache is disabled.  
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_InstructionCacheReset(void)
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 228              		.loc 1 244 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 1, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233 0104 80B4     		push	{r7}
 234              	.LCFI12:
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 7, -4
 237 0106 00AF     		add	r7, sp, #0
 238              	.LCFI13:
 239              		.cfi_def_cfa_register 7
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_ICRST;
 240              		.loc 1 245 0
 241 0108 4FF47053 		mov	r3, #15360
 242 010c C4F20203 		movt	r3, 16386
 243 0110 4FF47052 		mov	r2, #15360
 244 0114 C4F20202 		movt	r2, 16386
 245 0118 1268     		ldr	r2, [r2, #0]
 246 011a 42F40062 		orr	r2, r2, #2048
 247 011e 1A60     		str	r2, [r3, #0]
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 248              		.loc 1 246 0
 249 0120 BD46     		mov	sp, r7
 250 0122 80BC     		pop	{r7}
 251 0124 7047     		bx	lr
 252              		.cfi_endproc
 253              	.LFE114:
 255 0126 00BF     		.align	2
 256              		.global	FLASH_DataCacheReset
 257              		.thumb
 258              		.thumb_func
 260              	FLASH_DataCacheReset:
 261              	.LFB115:
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Resets the Data Cache.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used only when the Data Cache is disabled.  
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_DataCacheReset(void)
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 262              		.loc 1 255 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267 0128 80B4     		push	{r7}
 268              	.LCFI14:
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 012a 00AF     		add	r7, sp, #0
 272              	.LCFI15:
 273              		.cfi_def_cfa_register 7
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_DCRST;
 274              		.loc 1 256 0
 275 012c 4FF47053 		mov	r3, #15360
 276 0130 C4F20203 		movt	r3, 16386
 277 0134 4FF47052 		mov	r2, #15360
 278 0138 C4F20202 		movt	r2, 16386
 279 013c 1268     		ldr	r2, [r2, #0]
 280 013e 42F48052 		orr	r2, r2, #4096
 281 0142 1A60     		str	r2, [r3, #0]
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 282              		.loc 1 257 0
 283 0144 BD46     		mov	sp, r7
 284 0146 80BC     		pop	{r7}
 285 0148 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE115:
 289 014a 00BF     		.align	2
 290              		.global	FLASH_Unlock
 291              		.thumb
 292              		.thumb_func
 294              	FLASH_Unlock:
 295              	.LFB116:
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @}
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group2 FLASH Memory Programming functions
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *  @brief   FLASH Memory Programming functions
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                       FLASH Memory Programming functions
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================   
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    This group includes the following functions:
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_Unlock(void)
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_Lock(void)
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    Any operation of erase or program should follow these steps:
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    1. Call the FLASH_Unlock() function to enable the FLASH control register access
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    2. Call the desired function to erase sector(s) or program data
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    3. Call the FLASH_Lock() function to disable the FLASH control register access
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       (recommended to protect the FLASH memory against possible unwanted operation)
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH control register access
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_Unlock(void)
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 296              		.loc 1 299 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301 014c 80B4     		push	{r7}
 302              	.LCFI16:
 303              		.cfi_def_cfa_offset 4
 304              		.cfi_offset 7, -4
 305 014e 00AF     		add	r7, sp, #0
 306              	.LCFI17:
 307              		.cfi_def_cfa_register 7
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 308              		.loc 1 300 0
 309 0150 4FF47053 		mov	r3, #15360
 310 0154 C4F20203 		movt	r3, 16386
 311 0158 1B69     		ldr	r3, [r3, #16]
 312 015a 002B     		cmp	r3, #0
 313 015c 11DA     		bge	.L13
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Authorize the FLASH Registers access */
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY1;
 314              		.loc 1 303 0
 315 015e 4FF47053 		mov	r3, #15360
 316 0162 C4F20203 		movt	r3, 16386
 317 0166 40F22312 		movw	r2, #291
 318 016a C4F26752 		movt	r2, 17767
 319 016e 5A60     		str	r2, [r3, #4]
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 320              		.loc 1 304 0
 321 0170 4FF47053 		mov	r3, #15360
 322 0174 C4F20203 		movt	r3, 16386
 323 0178 48F6AB12 		movw	r2, #35243
 324 017c CCF6EF52 		movt	r2, 52719
 325 0180 5A60     		str	r2, [r3, #4]
 326              	.L13:
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 327              		.loc 1 306 0
 328 0182 BD46     		mov	sp, r7
 329 0184 80BC     		pop	{r7}
 330 0186 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE116:
 334              		.align	2
 335              		.global	FLASH_Lock
 336              		.thumb
 337              		.thumb_func
 339              	FLASH_Lock:
 340              	.LFB117:
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Locks the FLASH control register access
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_Lock(void)
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 341              		.loc 1 314 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346 0188 80B4     		push	{r7}
 347              	.LCFI18:
 348              		.cfi_def_cfa_offset 4
 349              		.cfi_offset 7, -4
 350 018a 00AF     		add	r7, sp, #0
 351              	.LCFI19:
 352              		.cfi_def_cfa_register 7
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->CR |= FLASH_CR_LOCK;
 353              		.loc 1 316 0
 354 018c 4FF47053 		mov	r3, #15360
 355 0190 C4F20203 		movt	r3, 16386
 356 0194 4FF47052 		mov	r2, #15360
 357 0198 C4F20202 		movt	r2, 16386
 358 019c 1269     		ldr	r2, [r2, #16]
 359 019e 42F00042 		orr	r2, r2, #-2147483648
 360 01a2 1A61     		str	r2, [r3, #16]
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 361              		.loc 1 317 0
 362 01a4 BD46     		mov	sp, r7
 363 01a6 80BC     		pop	{r7}
 364 01a8 7047     		bx	lr
 365              		.cfi_endproc
 366              	.LFE117:
 368 01aa 00BF     		.align	2
 369              		.global	FLASH_EraseSector
 370              		.thumb
 371              		.thumb_func
 373              	FLASH_EraseSector:
 374              	.LFB118:
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Erases a specified FLASH Sector.
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *   
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_Sector: The Sector number to be erased.
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be a value between FLASH_Sector_0 and FLASH_Sector_11
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *    
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *       
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 375              		.loc 1 340 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 16
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 01ac 80B5     		push	{r7, lr}
 380              	.LCFI20:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 14, -4
 383              		.cfi_offset 7, -8
 384 01ae 84B0     		sub	sp, sp, #16
 385              	.LCFI21:
 386              		.cfi_def_cfa_offset 24
 387 01b0 00AF     		add	r7, sp, #0
 388              	.LCFI22:
 389              		.cfi_def_cfa_register 7
 390 01b2 7860     		str	r0, [r7, #4]
 391 01b4 0B46     		mov	r3, r1
 392 01b6 FB70     		strb	r3, [r7, #3]
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 393              		.loc 1 341 0
 394 01b8 4FF00003 		mov	r3, #0
 395 01bc FB60     		str	r3, [r7, #12]
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 396              		.loc 1 342 0
 397 01be 4FF00803 		mov	r3, #8
 398 01c2 FB72     		strb	r3, [r7, #11]
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_SECTOR(FLASH_Sector));
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 399              		.loc 1 348 0
 400 01c4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 401 01c6 002B     		cmp	r3, #0
 402 01c8 03D1     		bne	.L17
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 403              		.loc 1 350 0
 404 01ca 4FF00003 		mov	r3, #0
 405 01ce FB60     		str	r3, [r7, #12]
 406 01d0 10E0     		b	.L18
 407              	.L17:
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 408              		.loc 1 352 0
 409 01d2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 410 01d4 012B     		cmp	r3, #1
 411 01d6 03D1     		bne	.L19
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 412              		.loc 1 354 0
 413 01d8 4FF48073 		mov	r3, #256
 414 01dc FB60     		str	r3, [r7, #12]
 415 01de 09E0     		b	.L18
 416              	.L19:
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 417              		.loc 1 356 0
 418 01e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 419 01e2 022B     		cmp	r3, #2
 420 01e4 03D1     		bne	.L20
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 421              		.loc 1 358 0
 422 01e6 4FF40073 		mov	r3, #512
 423 01ea FB60     		str	r3, [r7, #12]
 424 01ec 02E0     		b	.L18
 425              	.L20:
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 426              		.loc 1 362 0
 427 01ee 4FF44073 		mov	r3, #768
 428 01f2 FB60     		str	r3, [r7, #12]
 429              	.L18:
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 430              		.loc 1 365 0
 431 01f4 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 432 01f8 0346     		mov	r3, r0
 433 01fa FB72     		strb	r3, [r7, #11]
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 434              		.loc 1 367 0
 435 01fc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 436 01fe 082B     		cmp	r3, #8
 437 0200 5BD1     		bne	.L21
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   { 
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase the sector */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 438              		.loc 1 370 0
 439 0202 4FF47053 		mov	r3, #15360
 440 0206 C4F20203 		movt	r3, 16386
 441 020a 4FF47052 		mov	r2, #15360
 442 020e C4F20202 		movt	r2, 16386
 443 0212 1269     		ldr	r2, [r2, #16]
 444 0214 22F44072 		bic	r2, r2, #768
 445 0218 1A61     		str	r2, [r3, #16]
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 446              		.loc 1 371 0
 447 021a 4FF47053 		mov	r3, #15360
 448 021e C4F20203 		movt	r3, 16386
 449 0222 4FF47052 		mov	r2, #15360
 450 0226 C4F20202 		movt	r2, 16386
 451 022a 1269     		ldr	r2, [r2, #16]
 452 022c 1146     		mov	r1, r2
 453 022e FA68     		ldr	r2, [r7, #12]
 454 0230 0A43     		orrs	r2, r2, r1
 455 0232 1A61     		str	r2, [r3, #16]
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 456              		.loc 1 372 0
 457 0234 4FF47053 		mov	r3, #15360
 458 0238 C4F20203 		movt	r3, 16386
 459 023c 4FF47052 		mov	r2, #15360
 460 0240 C4F20202 		movt	r2, 16386
 461 0244 1269     		ldr	r2, [r2, #16]
 462 0246 22F0F802 		bic	r2, r2, #248
 463 024a 1A61     		str	r2, [r3, #16]
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 464              		.loc 1 373 0
 465 024c 4FF47053 		mov	r3, #15360
 466 0250 C4F20203 		movt	r3, 16386
 467 0254 4FF47052 		mov	r2, #15360
 468 0258 C4F20202 		movt	r2, 16386
 469 025c 1269     		ldr	r2, [r2, #16]
 470 025e 1146     		mov	r1, r2
 471 0260 7A68     		ldr	r2, [r7, #4]
 472 0262 0A43     		orrs	r2, r2, r1
 473 0264 42F00202 		orr	r2, r2, #2
 474 0268 1A61     		str	r2, [r3, #16]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 475              		.loc 1 374 0
 476 026a 4FF47053 		mov	r3, #15360
 477 026e C4F20203 		movt	r3, 16386
 478 0272 4FF47052 		mov	r2, #15360
 479 0276 C4F20202 		movt	r2, 16386
 480 027a 1269     		ldr	r2, [r2, #16]
 481 027c 42F48032 		orr	r2, r2, #65536
 482 0280 1A61     		str	r2, [r3, #16]
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 483              		.loc 1 377 0
 484 0282 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 485 0286 0346     		mov	r3, r0
 486 0288 FB72     		strb	r3, [r7, #11]
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the SER Bit */
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_SER);
 487              		.loc 1 380 0
 488 028a 4FF47053 		mov	r3, #15360
 489 028e C4F20203 		movt	r3, 16386
 490 0292 4FF47052 		mov	r2, #15360
 491 0296 C4F20202 		movt	r2, 16386
 492 029a 1269     		ldr	r2, [r2, #16]
 493 029c 22F00202 		bic	r2, r2, #2
 494 02a0 1A61     		str	r2, [r3, #16]
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 495              		.loc 1 381 0
 496 02a2 4FF47053 		mov	r3, #15360
 497 02a6 C4F20203 		movt	r3, 16386
 498 02aa 4FF47052 		mov	r2, #15360
 499 02ae C4F20202 		movt	r2, 16386
 500 02b2 1269     		ldr	r2, [r2, #16]
 501 02b4 22F0F802 		bic	r2, r2, #248
 502 02b8 1A61     		str	r2, [r3, #16]
 503              	.L21:
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 504              		.loc 1 384 0
 505 02ba FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 506              		.loc 1 385 0
 507 02bc 1846     		mov	r0, r3
 508 02be 07F11007 		add	r7, r7, #16
 509 02c2 BD46     		mov	sp, r7
 510 02c4 80BD     		pop	{r7, pc}
 511              		.cfi_endproc
 512              	.LFE118:
 514 02c6 00BF     		.align	2
 515              		.global	FLASH_EraseAllSectors
 516              		.thumb
 517              		.thumb_func
 519              	FLASH_EraseAllSectors:
 520              	.LFB119:
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Erases all FLASH Sectors.
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *    
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *       
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 521              		.loc 1 405 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 16
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525 02c8 80B5     		push	{r7, lr}
 526              	.LCFI23:
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 14, -4
 529              		.cfi_offset 7, -8
 530 02ca 84B0     		sub	sp, sp, #16
 531              	.LCFI24:
 532              		.cfi_def_cfa_offset 24
 533 02cc 00AF     		add	r7, sp, #0
 534              	.LCFI25:
 535              		.cfi_def_cfa_register 7
 536 02ce 0346     		mov	r3, r0
 537 02d0 FB71     		strb	r3, [r7, #7]
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 538              		.loc 1 406 0
 539 02d2 4FF00003 		mov	r3, #0
 540 02d6 FB60     		str	r3, [r7, #12]
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 541              		.loc 1 407 0
 542 02d8 4FF00803 		mov	r3, #8
 543 02dc FB72     		strb	r3, [r7, #11]
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 544              		.loc 1 410 0
 545 02de FFF7FEFF 		bl	FLASH_WaitForLastOperation
 546 02e2 0346     		mov	r3, r0
 547 02e4 FB72     		strb	r3, [r7, #11]
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 548              		.loc 1 413 0
 549 02e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 550 02e8 002B     		cmp	r3, #0
 551 02ea 03D1     		bne	.L23
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 552              		.loc 1 415 0
 553 02ec 4FF00003 		mov	r3, #0
 554 02f0 FB60     		str	r3, [r7, #12]
 555 02f2 10E0     		b	.L24
 556              	.L23:
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 557              		.loc 1 417 0
 558 02f4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 559 02f6 012B     		cmp	r3, #1
 560 02f8 03D1     		bne	.L25
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 561              		.loc 1 419 0
 562 02fa 4FF48073 		mov	r3, #256
 563 02fe FB60     		str	r3, [r7, #12]
 564 0300 09E0     		b	.L24
 565              	.L25:
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 566              		.loc 1 421 0
 567 0302 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 568 0304 022B     		cmp	r3, #2
 569 0306 03D1     		bne	.L26
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 570              		.loc 1 423 0
 571 0308 4FF40073 		mov	r3, #512
 572 030c FB60     		str	r3, [r7, #12]
 573 030e 02E0     		b	.L24
 574              	.L26:
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 575              		.loc 1 427 0
 576 0310 4FF44073 		mov	r3, #768
 577 0314 FB60     		str	r3, [r7, #12]
 578              	.L24:
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 579              		.loc 1 429 0
 580 0316 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 581 0318 082B     		cmp	r3, #8
 582 031a 40D1     		bne	.L27
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase all sectors */
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR &= CR_PSIZE_MASK;
 583              		.loc 1 432 0
 584 031c 4FF47053 		mov	r3, #15360
 585 0320 C4F20203 		movt	r3, 16386
 586 0324 4FF47052 		mov	r2, #15360
 587 0328 C4F20202 		movt	r2, 16386
 588 032c 1269     		ldr	r2, [r2, #16]
 589 032e 22F44072 		bic	r2, r2, #768
 590 0332 1A61     		str	r2, [r3, #16]
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 591              		.loc 1 433 0
 592 0334 4FF47053 		mov	r3, #15360
 593 0338 C4F20203 		movt	r3, 16386
 594 033c 4FF47052 		mov	r2, #15360
 595 0340 C4F20202 		movt	r2, 16386
 596 0344 1269     		ldr	r2, [r2, #16]
 597 0346 1146     		mov	r1, r2
 598 0348 FA68     		ldr	r2, [r7, #12]
 599 034a 0A43     		orrs	r2, r2, r1
 600 034c 1A61     		str	r2, [r3, #16]
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER;
 601              		.loc 1 434 0
 602 034e 4FF47053 		mov	r3, #15360
 603 0352 C4F20203 		movt	r3, 16386
 604 0356 4FF47052 		mov	r2, #15360
 605 035a C4F20202 		movt	r2, 16386
 606 035e 1269     		ldr	r2, [r2, #16]
 607 0360 42F00402 		orr	r2, r2, #4
 608 0364 1A61     		str	r2, [r3, #16]
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 609              		.loc 1 435 0
 610 0366 4FF47053 		mov	r3, #15360
 611 036a C4F20203 		movt	r3, 16386
 612 036e 4FF47052 		mov	r2, #15360
 613 0372 C4F20202 		movt	r2, 16386
 614 0376 1269     		ldr	r2, [r2, #16]
 615 0378 42F48032 		orr	r2, r2, #65536
 616 037c 1A61     		str	r2, [r3, #16]
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 617              		.loc 1 438 0
 618 037e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 619 0382 0346     		mov	r3, r0
 620 0384 FB72     		strb	r3, [r7, #11]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER);
 621              		.loc 1 441 0
 622 0386 4FF47053 		mov	r3, #15360
 623 038a C4F20203 		movt	r3, 16386
 624 038e 4FF47052 		mov	r2, #15360
 625 0392 C4F20202 		movt	r2, 16386
 626 0396 1269     		ldr	r2, [r2, #16]
 627 0398 22F00402 		bic	r2, r2, #4
 628 039c 1A61     		str	r2, [r3, #16]
 629              	.L27:
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }   
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 630              		.loc 1 445 0
 631 039e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 632              		.loc 1 446 0
 633 03a0 1846     		mov	r0, r3
 634 03a2 07F11007 		add	r7, r7, #16
 635 03a6 BD46     		mov	sp, r7
 636 03a8 80BD     		pop	{r7, pc}
 637              		.cfi_endproc
 638              	.LFE119:
 640 03aa 00BF     		.align	2
 641              		.global	FLASH_ProgramDoubleWord
 642              		.thumb
 643              		.thumb_func
 645              	FLASH_ProgramDoubleWord:
 646              	.LFB120:
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a double word (64-bit) at a specified address.
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         2.7V to 3.6V and an External Vpp is present.           
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 647              		.loc 1 458 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 24
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651 03ac 80B5     		push	{r7, lr}
 652              	.LCFI26:
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 14, -4
 655              		.cfi_offset 7, -8
 656 03ae 86B0     		sub	sp, sp, #24
 657              	.LCFI27:
 658              		.cfi_def_cfa_offset 32
 659 03b0 00AF     		add	r7, sp, #0
 660              	.LCFI28:
 661              		.cfi_def_cfa_register 7
 662 03b2 F860     		str	r0, [r7, #12]
 663 03b4 C7E90023 		strd	r2, [r7]
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 664              		.loc 1 459 0
 665 03b8 4FF00803 		mov	r3, #8
 666 03bc FB75     		strb	r3, [r7, #23]
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 667              		.loc 1 465 0
 668 03be FFF7FEFF 		bl	FLASH_WaitForLastOperation
 669 03c2 0346     		mov	r3, r0
 670 03c4 FB75     		strb	r3, [r7, #23]
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 671              		.loc 1 467 0
 672 03c6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 673 03c8 082B     		cmp	r3, #8
 674 03ca 38D1     		bne	.L29
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 675              		.loc 1 470 0
 676 03cc 4FF47053 		mov	r3, #15360
 677 03d0 C4F20203 		movt	r3, 16386
 678 03d4 4FF47052 		mov	r2, #15360
 679 03d8 C4F20202 		movt	r2, 16386
 680 03dc 1269     		ldr	r2, [r2, #16]
 681 03de 22F44072 		bic	r2, r2, #768
 682 03e2 1A61     		str	r2, [r3, #16]
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 683              		.loc 1 471 0
 684 03e4 4FF47053 		mov	r3, #15360
 685 03e8 C4F20203 		movt	r3, 16386
 686 03ec 4FF47052 		mov	r2, #15360
 687 03f0 C4F20202 		movt	r2, 16386
 688 03f4 1269     		ldr	r2, [r2, #16]
 689 03f6 42F44072 		orr	r2, r2, #768
 690 03fa 1A61     		str	r2, [r3, #16]
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 691              		.loc 1 472 0
 692 03fc 4FF47053 		mov	r3, #15360
 693 0400 C4F20203 		movt	r3, 16386
 694 0404 4FF47052 		mov	r2, #15360
 695 0408 C4F20202 		movt	r2, 16386
 696 040c 1269     		ldr	r2, [r2, #16]
 697 040e 42F00102 		orr	r2, r2, #1
 698 0412 1A61     		str	r2, [r3, #16]
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint64_t*)Address = Data;
 699              		.loc 1 474 0
 700 0414 F968     		ldr	r1, [r7, #12]
 701 0416 D7E90023 		ldrd	r2, [r7]
 702 041a C1E90023 		strd	r2, [r1]
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 703              		.loc 1 477 0
 704 041e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 705 0422 0346     		mov	r3, r0
 706 0424 FB75     		strb	r3, [r7, #23]
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 707              		.loc 1 480 0
 708 0426 4FF47053 		mov	r3, #15360
 709 042a C4F20203 		movt	r3, 16386
 710 042e 4FF47052 		mov	r2, #15360
 711 0432 C4F20202 		movt	r2, 16386
 712 0436 1269     		ldr	r2, [r2, #16]
 713 0438 22F00102 		bic	r2, r2, #1
 714 043c 1A61     		str	r2, [r3, #16]
 715              	.L29:
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 716              		.loc 1 483 0
 717 043e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 718              		.loc 1 484 0
 719 0440 1846     		mov	r0, r3
 720 0442 07F11807 		add	r7, r7, #24
 721 0446 BD46     		mov	sp, r7
 722 0448 80BD     		pop	{r7, pc}
 723              		.cfi_endproc
 724              	.LFE120:
 726 044a 00BF     		.align	2
 727              		.global	FLASH_ProgramWord
 728              		.thumb
 729              		.thumb_func
 731              	FLASH_ProgramWord:
 732              	.LFB121:
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a word (32-bit) at a specified address.
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.7V to 3.6V. 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 733              		.loc 1 496 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 16
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737 044c 80B5     		push	{r7, lr}
 738              	.LCFI29:
 739              		.cfi_def_cfa_offset 8
 740              		.cfi_offset 14, -4
 741              		.cfi_offset 7, -8
 742 044e 84B0     		sub	sp, sp, #16
 743              	.LCFI30:
 744              		.cfi_def_cfa_offset 24
 745 0450 00AF     		add	r7, sp, #0
 746              	.LCFI31:
 747              		.cfi_def_cfa_register 7
 748 0452 7860     		str	r0, [r7, #4]
 749 0454 3960     		str	r1, [r7, #0]
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 750              		.loc 1 497 0
 751 0456 4FF00803 		mov	r3, #8
 752 045a FB73     		strb	r3, [r7, #15]
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 753              		.loc 1 503 0
 754 045c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 755 0460 0346     		mov	r3, r0
 756 0462 FB73     		strb	r3, [r7, #15]
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 757              		.loc 1 505 0
 758 0464 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 759 0466 082B     		cmp	r3, #8
 760 0468 36D1     		bne	.L31
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 761              		.loc 1 508 0
 762 046a 4FF47053 		mov	r3, #15360
 763 046e C4F20203 		movt	r3, 16386
 764 0472 4FF47052 		mov	r2, #15360
 765 0476 C4F20202 		movt	r2, 16386
 766 047a 1269     		ldr	r2, [r2, #16]
 767 047c 22F44072 		bic	r2, r2, #768
 768 0480 1A61     		str	r2, [r3, #16]
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 769              		.loc 1 509 0
 770 0482 4FF47053 		mov	r3, #15360
 771 0486 C4F20203 		movt	r3, 16386
 772 048a 4FF47052 		mov	r2, #15360
 773 048e C4F20202 		movt	r2, 16386
 774 0492 1269     		ldr	r2, [r2, #16]
 775 0494 42F40072 		orr	r2, r2, #512
 776 0498 1A61     		str	r2, [r3, #16]
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 777              		.loc 1 510 0
 778 049a 4FF47053 		mov	r3, #15360
 779 049e C4F20203 		movt	r3, 16386
 780 04a2 4FF47052 		mov	r2, #15360
 781 04a6 C4F20202 		movt	r2, 16386
 782 04aa 1269     		ldr	r2, [r2, #16]
 783 04ac 42F00102 		orr	r2, r2, #1
 784 04b0 1A61     		str	r2, [r3, #16]
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint32_t*)Address = Data;
 785              		.loc 1 512 0
 786 04b2 7B68     		ldr	r3, [r7, #4]
 787 04b4 3A68     		ldr	r2, [r7, #0]
 788 04b6 1A60     		str	r2, [r3, #0]
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 789              		.loc 1 515 0
 790 04b8 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 791 04bc 0346     		mov	r3, r0
 792 04be FB73     		strb	r3, [r7, #15]
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 793              		.loc 1 518 0
 794 04c0 4FF47053 		mov	r3, #15360
 795 04c4 C4F20203 		movt	r3, 16386
 796 04c8 4FF47052 		mov	r2, #15360
 797 04cc C4F20202 		movt	r2, 16386
 798 04d0 1269     		ldr	r2, [r2, #16]
 799 04d2 22F00102 		bic	r2, r2, #1
 800 04d6 1A61     		str	r2, [r3, #16]
 801              	.L31:
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 802              		.loc 1 521 0
 803 04d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 804              		.loc 1 522 0
 805 04da 1846     		mov	r0, r3
 806 04dc 07F11007 		add	r7, r7, #16
 807 04e0 BD46     		mov	sp, r7
 808 04e2 80BD     		pop	{r7, pc}
 809              		.cfi_endproc
 810              	.LFE121:
 812              		.align	2
 813              		.global	FLASH_ProgramHalfWord
 814              		.thumb
 815              		.thumb_func
 817              	FLASH_ProgramHalfWord:
 818              	.LFB122:
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a half word (16-bit) at a specified address. 
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.1V to 3.6V.         
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 819              		.loc 1 534 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 16
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 04e4 80B5     		push	{r7, lr}
 824              	.LCFI32:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 14, -4
 827              		.cfi_offset 7, -8
 828 04e6 84B0     		sub	sp, sp, #16
 829              	.LCFI33:
 830              		.cfi_def_cfa_offset 24
 831 04e8 00AF     		add	r7, sp, #0
 832              	.LCFI34:
 833              		.cfi_def_cfa_register 7
 834 04ea 7860     		str	r0, [r7, #4]
 835 04ec 0B46     		mov	r3, r1
 836 04ee 7B80     		strh	r3, [r7, #2]	@ movhi
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 837              		.loc 1 535 0
 838 04f0 4FF00803 		mov	r3, #8
 839 04f4 FB73     		strb	r3, [r7, #15]
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 840              		.loc 1 541 0
 841 04f6 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 842 04fa 0346     		mov	r3, r0
 843 04fc FB73     		strb	r3, [r7, #15]
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 844              		.loc 1 543 0
 845 04fe FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 846 0500 082B     		cmp	r3, #8
 847 0502 36D1     		bne	.L33
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 848              		.loc 1 546 0
 849 0504 4FF47053 		mov	r3, #15360
 850 0508 C4F20203 		movt	r3, 16386
 851 050c 4FF47052 		mov	r2, #15360
 852 0510 C4F20202 		movt	r2, 16386
 853 0514 1269     		ldr	r2, [r2, #16]
 854 0516 22F44072 		bic	r2, r2, #768
 855 051a 1A61     		str	r2, [r3, #16]
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 856              		.loc 1 547 0
 857 051c 4FF47053 		mov	r3, #15360
 858 0520 C4F20203 		movt	r3, 16386
 859 0524 4FF47052 		mov	r2, #15360
 860 0528 C4F20202 		movt	r2, 16386
 861 052c 1269     		ldr	r2, [r2, #16]
 862 052e 42F48072 		orr	r2, r2, #256
 863 0532 1A61     		str	r2, [r3, #16]
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 864              		.loc 1 548 0
 865 0534 4FF47053 		mov	r3, #15360
 866 0538 C4F20203 		movt	r3, 16386
 867 053c 4FF47052 		mov	r2, #15360
 868 0540 C4F20202 		movt	r2, 16386
 869 0544 1269     		ldr	r2, [r2, #16]
 870 0546 42F00102 		orr	r2, r2, #1
 871 054a 1A61     		str	r2, [r3, #16]
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint16_t*)Address = Data;
 872              		.loc 1 550 0
 873 054c 7B68     		ldr	r3, [r7, #4]
 874 054e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 875 0550 1A80     		strh	r2, [r3, #0]	@ movhi
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 876              		.loc 1 553 0
 877 0552 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 878 0556 0346     		mov	r3, r0
 879 0558 FB73     		strb	r3, [r7, #15]
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 880              		.loc 1 556 0
 881 055a 4FF47053 		mov	r3, #15360
 882 055e C4F20203 		movt	r3, 16386
 883 0562 4FF47052 		mov	r2, #15360
 884 0566 C4F20202 		movt	r2, 16386
 885 056a 1269     		ldr	r2, [r2, #16]
 886 056c 22F00102 		bic	r2, r2, #1
 887 0570 1A61     		str	r2, [r3, #16]
 888              	.L33:
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 889              		.loc 1 559 0
 890 0572 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 891              		.loc 1 560 0
 892 0574 1846     		mov	r0, r3
 893 0576 07F11007 		add	r7, r7, #16
 894 057a BD46     		mov	sp, r7
 895 057c 80BD     		pop	{r7, pc}
 896              		.cfi_endproc
 897              	.LFE122:
 899 057e 00BF     		.align	2
 900              		.global	FLASH_ProgramByte
 901              		.thumb
 902              		.thumb_func
 904              	FLASH_ProgramByte:
 905              	.LFB123:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a byte (8-bit) at a specified address.
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function can be used within all the device supply voltage ranges.               
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 906              		.loc 1 572 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 16
 909              		@ frame_needed = 1, uses_anonymous_args = 0
 910 0580 80B5     		push	{r7, lr}
 911              	.LCFI35:
 912              		.cfi_def_cfa_offset 8
 913              		.cfi_offset 14, -4
 914              		.cfi_offset 7, -8
 915 0582 84B0     		sub	sp, sp, #16
 916              	.LCFI36:
 917              		.cfi_def_cfa_offset 24
 918 0584 00AF     		add	r7, sp, #0
 919              	.LCFI37:
 920              		.cfi_def_cfa_register 7
 921 0586 7860     		str	r0, [r7, #4]
 922 0588 0B46     		mov	r3, r1
 923 058a FB70     		strb	r3, [r7, #3]
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 924              		.loc 1 573 0
 925 058c 4FF00803 		mov	r3, #8
 926 0590 FB73     		strb	r3, [r7, #15]
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 927              		.loc 1 579 0
 928 0592 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 929 0596 0346     		mov	r3, r0
 930 0598 FB73     		strb	r3, [r7, #15]
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 931              		.loc 1 581 0
 932 059a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 933 059c 082B     		cmp	r3, #8
 934 059e 34D1     		bne	.L35
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 935              		.loc 1 584 0
 936 05a0 4FF47053 		mov	r3, #15360
 937 05a4 C4F20203 		movt	r3, 16386
 938 05a8 4FF47052 		mov	r2, #15360
 939 05ac C4F20202 		movt	r2, 16386
 940 05b0 1269     		ldr	r2, [r2, #16]
 941 05b2 22F44072 		bic	r2, r2, #768
 942 05b6 1A61     		str	r2, [r3, #16]
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 943              		.loc 1 585 0
 944 05b8 4FF47053 		mov	r3, #15360
 945 05bc C4F20203 		movt	r3, 16386
 946 05c0 4FF47052 		mov	r2, #15360
 947 05c4 C4F20202 		movt	r2, 16386
 948 05c8 1269     		ldr	r2, [r2, #16]
 949 05ca 1A61     		str	r2, [r3, #16]
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 950              		.loc 1 586 0
 951 05cc 4FF47053 		mov	r3, #15360
 952 05d0 C4F20203 		movt	r3, 16386
 953 05d4 4FF47052 		mov	r2, #15360
 954 05d8 C4F20202 		movt	r2, 16386
 955 05dc 1269     		ldr	r2, [r2, #16]
 956 05de 42F00102 		orr	r2, r2, #1
 957 05e2 1A61     		str	r2, [r3, #16]
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)Address = Data;
 958              		.loc 1 588 0
 959 05e4 7B68     		ldr	r3, [r7, #4]
 960 05e6 FA78     		ldrb	r2, [r7, #3]
 961 05e8 1A70     		strb	r2, [r3, #0]
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 962              		.loc 1 591 0
 963 05ea FFF7FEFF 		bl	FLASH_WaitForLastOperation
 964 05ee 0346     		mov	r3, r0
 965 05f0 FB73     		strb	r3, [r7, #15]
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 966              		.loc 1 594 0
 967 05f2 4FF47053 		mov	r3, #15360
 968 05f6 C4F20203 		movt	r3, 16386
 969 05fa 4FF47052 		mov	r2, #15360
 970 05fe C4F20202 		movt	r2, 16386
 971 0602 1269     		ldr	r2, [r2, #16]
 972 0604 22F00102 		bic	r2, r2, #1
 973 0608 1A61     		str	r2, [r3, #16]
 974              	.L35:
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 975              		.loc 1 598 0
 976 060a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 977              		.loc 1 599 0
 978 060c 1846     		mov	r0, r3
 979 060e 07F11007 		add	r7, r7, #16
 980 0612 BD46     		mov	sp, r7
 981 0614 80BD     		pop	{r7, pc}
 982              		.cfi_endproc
 983              	.LFE123:
 985 0616 00BF     		.align	2
 986              		.global	FLASH_OB_Unlock
 987              		.thumb
 988              		.thumb_func
 990              	FLASH_OB_Unlock:
 991              	.LFB124:
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @}
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group3 Option Bytes Programming functions
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *  @brief   Option Bytes Programming functions 
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                         Option Bytes Programming functions
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================  
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    This group includes the following functions:
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_Unlock(void)
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_Lock(void)
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_RDPConfig(uint8_t OB_RDP)
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_BORConfig(uint8_t OB_BOR)
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - FLASH_Status FLASH_ProgramOTP(uint32_t Address, uint32_t Data)							
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - FLASH_Status FLASH_OB_Launch(void)
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint32_t FLASH_OB_GetUser(void)						
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint8_t FLASH_OB_GetWRP(void)						
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint8_t FLASH_OB_GetRDP(void)							
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint8_t FLASH_OB_GetBOR(void)
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    Any operation of erase or program should follow these steps:
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    1. Call the FLASH_OB_Unlock() function to enable the FLASH option control register access
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    2. Call one or several functions to program the desired Option Bytes:
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState) => to Enable/Disable 
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         the desired sector write protection
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_RDPConfig(uint8_t OB_RDP) => to set the desired read Protection Level
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY) => to configur
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         the user Option Bytes.
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_BORConfig(uint8_t OB_BOR) => to set the BOR Level 			 
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    3. Once all needed Option Bytes to be programmed are correctly written, call the
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       FLASH_OB_Launch() function to launch the Option Bytes programming process.
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      @note When changing the IWDG mode from HW to SW or from SW to HW, a system 
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****            reset is needed to make the change effective.  
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    4. Call the FLASH_OB_Lock() function to disable the FLASH option control register
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       access (recommended to protect the Option Bytes against possible unwanted operations)
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH Option Control Registers access.
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_Unlock(void)
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 992              		.loc 1 657 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996              		@ link register save eliminated.
 997 0618 80B4     		push	{r7}
 998              	.LCFI38:
 999              		.cfi_def_cfa_offset 4
 1000              		.cfi_offset 7, -4
 1001 061a 00AF     		add	r7, sp, #0
 1002              	.LCFI39:
 1003              		.cfi_def_cfa_register 7
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 1004              		.loc 1 658 0
 1005 061c 4FF47053 		mov	r3, #15360
 1006 0620 C4F20203 		movt	r3, 16386
 1007 0624 5B69     		ldr	r3, [r3, #20]
 1008 0626 03F00103 		and	r3, r3, #1
 1009 062a DBB2     		uxtb	r3, r3
 1010 062c 002B     		cmp	r3, #0
 1011 062e 11D0     		beq	.L36
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Authorizes the Option Byte register programming */
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY1;
 1012              		.loc 1 661 0
 1013 0630 4FF47053 		mov	r3, #15360
 1014 0634 C4F20203 		movt	r3, 16386
 1015 0638 42F63B22 		movw	r2, #10811
 1016 063c C0F61902 		movt	r2, 2073
 1017 0640 9A60     		str	r2, [r3, #8]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 1018              		.loc 1 662 0
 1019 0642 4FF47053 		mov	r3, #15360
 1020 0646 C4F20203 		movt	r3, 16386
 1021 064a 46F67F62 		movw	r2, #28287
 1022 064e C4F65D42 		movt	r2, 19549
 1023 0652 9A60     		str	r2, [r3, #8]
 1024              	.L36:
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1025              		.loc 1 664 0
 1026 0654 BD46     		mov	sp, r7
 1027 0656 80BC     		pop	{r7}
 1028 0658 7047     		bx	lr
 1029              		.cfi_endproc
 1030              	.LFE124:
 1032 065a 00BF     		.align	2
 1033              		.global	FLASH_OB_Lock
 1034              		.thumb
 1035              		.thumb_func
 1037              	FLASH_OB_Lock:
 1038              	.LFB125:
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Locks the FLASH Option Control Registers access.
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_Lock(void)
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1039              		.loc 1 672 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044 065c 80B4     		push	{r7}
 1045              	.LCFI40:
 1046              		.cfi_def_cfa_offset 4
 1047              		.cfi_offset 7, -4
 1048 065e 00AF     		add	r7, sp, #0
 1049              	.LCFI41:
 1050              		.cfi_def_cfa_register 7
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 1051              		.loc 1 674 0
 1052 0660 4FF47053 		mov	r3, #15360
 1053 0664 C4F20203 		movt	r3, 16386
 1054 0668 4FF47052 		mov	r2, #15360
 1055 066c C4F20202 		movt	r2, 16386
 1056 0670 5269     		ldr	r2, [r2, #20]
 1057 0672 42F00102 		orr	r2, r2, #1
 1058 0676 5A61     		str	r2, [r3, #20]
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1059              		.loc 1 675 0
 1060 0678 BD46     		mov	sp, r7
 1061 067a 80BC     		pop	{r7}
 1062 067c 7047     		bx	lr
 1063              		.cfi_endproc
 1064              	.LFE125:
 1066 067e 00BF     		.align	2
 1067              		.global	FLASH_OB_WRPConfig
 1068              		.thumb
 1069              		.thumb_func
 1071              	FLASH_OB_WRPConfig:
 1072              	.LFB126:
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the write protection of the desired sectors
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_WRP: specifies the sector(s) to be write protected or unprotected.
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_WRP: A value between OB_WRP_Sector0 and OB_WRP_Sector11                     
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_WRP_Sector_All
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None  
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** { 
 1073              		.loc 1 688 0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 16
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077 0680 80B5     		push	{r7, lr}
 1078              	.LCFI42:
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 14, -4
 1081              		.cfi_offset 7, -8
 1082 0682 84B0     		sub	sp, sp, #16
 1083              	.LCFI43:
 1084              		.cfi_def_cfa_offset 24
 1085 0684 00AF     		add	r7, sp, #0
 1086              	.LCFI44:
 1087              		.cfi_def_cfa_register 7
 1088 0686 7860     		str	r0, [r7, #4]
 1089 0688 0B46     		mov	r3, r1
 1090 068a FB70     		strb	r3, [r7, #3]
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1091              		.loc 1 689 0
 1092 068c 4FF00803 		mov	r3, #8
 1093 0690 FB73     		strb	r3, [r7, #15]
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_WRP(OB_WRP));
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1094              		.loc 1 695 0
 1095 0692 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1096 0696 0346     		mov	r3, r0
 1097 0698 FB73     		strb	r3, [r7, #15]
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 1098              		.loc 1 697 0
 1099 069a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1100 069c 082B     		cmp	r3, #8
 1101 069e 24D1     		bne	.L39
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   { 
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     if(NewState != DISABLE)
 1102              		.loc 1 699 0
 1103 06a0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1104 06a2 002B     		cmp	r3, #0
 1105 06a4 12D0     		beq	.L41
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     {
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~OB_WRP);
 1106              		.loc 1 701 0
 1107 06a6 43F61643 		movw	r3, #15382
 1108 06aa C4F20203 		movt	r3, 16386
 1109 06ae 43F61642 		movw	r2, #15382
 1110 06b2 C4F20202 		movt	r2, 16386
 1111 06b6 1288     		ldrh	r2, [r2, #0]	@ movhi
 1112 06b8 91B2     		uxth	r1, r2
 1113 06ba 7A68     		ldr	r2, [r7, #4]
 1114 06bc 92B2     		uxth	r2, r2
 1115 06be 6FEA0202 		mvn	r2, r2
 1116 06c2 92B2     		uxth	r2, r2
 1117 06c4 0A40     		ands	r2, r2, r1
 1118 06c6 92B2     		uxth	r2, r2
 1119 06c8 1A80     		strh	r2, [r3, #0]	@ movhi
 1120 06ca 0EE0     		b	.L39
 1121              	.L41:
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     else
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     {
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)OB_WRP;
 1122              		.loc 1 705 0
 1123 06cc 43F61643 		movw	r3, #15382
 1124 06d0 C4F20203 		movt	r3, 16386
 1125 06d4 43F61642 		movw	r2, #15382
 1126 06d8 C4F20202 		movt	r2, 16386
 1127 06dc 1288     		ldrh	r2, [r2, #0]	@ movhi
 1128 06de 91B2     		uxth	r1, r2
 1129 06e0 7A68     		ldr	r2, [r7, #4]
 1130 06e2 92B2     		uxth	r2, r2
 1131 06e4 0A43     		orrs	r2, r2, r1
 1132 06e6 92B2     		uxth	r2, r2
 1133 06e8 1A80     		strh	r2, [r3, #0]	@ movhi
 1134              	.L39:
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1135              		.loc 1 708 0
 1136 06ea 07F11007 		add	r7, r7, #16
 1137 06ee BD46     		mov	sp, r7
 1138 06f0 80BD     		pop	{r7, pc}
 1139              		.cfi_endproc
 1140              	.LFE126:
 1142 06f2 00BF     		.align	2
 1143              		.global	FLASH_OB_RDPConfig
 1144              		.thumb
 1145              		.thumb_func
 1147              	FLASH_OB_RDPConfig:
 1148              	.LFB127:
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Sets the read protection level.
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_RDP: specifies the read protection level.
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_0: No protection
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_1: Read protection of the memory
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_2: Full chip protection
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *   
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * !!!Warning!!! When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *    
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_RDPConfig(uint8_t OB_RDP)
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1149              		.loc 1 723 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 16
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 06f4 80B5     		push	{r7, lr}
 1154              	.LCFI45:
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 14, -4
 1157              		.cfi_offset 7, -8
 1158 06f6 84B0     		sub	sp, sp, #16
 1159              	.LCFI46:
 1160              		.cfi_def_cfa_offset 24
 1161 06f8 00AF     		add	r7, sp, #0
 1162              	.LCFI47:
 1163              		.cfi_def_cfa_register 7
 1164 06fa 0346     		mov	r3, r0
 1165 06fc FB71     		strb	r3, [r7, #7]
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1166              		.loc 1 724 0
 1167 06fe 4FF00803 		mov	r3, #8
 1168 0702 FB73     		strb	r3, [r7, #15]
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_RDP(OB_RDP));
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1169              		.loc 1 729 0
 1170 0704 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1171 0708 0346     		mov	r3, r0
 1172 070a FB73     		strb	r3, [r7, #15]
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 1173              		.loc 1 731 0
 1174 070c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1175 070e 082B     		cmp	r3, #8
 1176 0710 05D1     		bne	.L42
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)OPTCR_BYTE1_ADDRESS = OB_RDP;
 1177              		.loc 1 733 0
 1178 0712 43F61543 		movw	r3, #15381
 1179 0716 C4F20203 		movt	r3, 16386
 1180 071a FA79     		ldrb	r2, [r7, #7]
 1181 071c 1A70     		strb	r2, [r3, #0]
 1182              	.L42:
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1183              		.loc 1 736 0
 1184 071e 07F11007 		add	r7, r7, #16
 1185 0722 BD46     		mov	sp, r7
 1186 0724 80BD     		pop	{r7, pc}
 1187              		.cfi_endproc
 1188              	.LFE127:
 1190 0726 00BF     		.align	2
 1191              		.global	FLASH_OB_UserConfig
 1192              		.thumb
 1193              		.thumb_func
 1195              	FLASH_OB_UserConfig:
 1196              	.LFB128:
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.    
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_IWDG: Selects the IWDG mode
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_IWDG_SW: Software IWDG selected
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_IWDG_HW: Hardware IWDG selected
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_STOP: Reset event when entering STOP mode.
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STOP_NoRST: No reset generated when entering in STOP
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STOP_RST: Reset generated when entering in STOP
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_STDBY: Reset event when entering Standby mode.
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STDBY_NoRST: No reset generated when entering in STANDBY
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STDBY_RST: Reset generated when entering in STANDBY
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1197              		.loc 1 755 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 16
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 0728 80B5     		push	{r7, lr}
 1202              	.LCFI48:
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 14, -4
 1205              		.cfi_offset 7, -8
 1206 072a 84B0     		sub	sp, sp, #16
 1207              	.LCFI49:
 1208              		.cfi_def_cfa_offset 24
 1209 072c 00AF     		add	r7, sp, #0
 1210              	.LCFI50:
 1211              		.cfi_def_cfa_register 7
 1212 072e 1346     		mov	r3, r2
 1213 0730 0246     		mov	r2, r0
 1214 0732 FA71     		strb	r2, [r7, #7]
 1215 0734 0A46     		mov	r2, r1
 1216 0736 BA71     		strb	r2, [r7, #6]
 1217 0738 7B71     		strb	r3, [r7, #5]
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
 1218              		.loc 1 756 0
 1219 073a 4FF0FF03 		mov	r3, #255
 1220 073e FB73     		strb	r3, [r7, #15]
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
 1221              		.loc 1 757 0
 1222 0740 4FF00803 		mov	r3, #8
 1223 0744 BB73     		strb	r3, [r7, #14]
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1224              		.loc 1 765 0
 1225 0746 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1226 074a 0346     		mov	r3, r0
 1227 074c BB73     		strb	r3, [r7, #14]
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 1228              		.loc 1 767 0
 1229 074e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1230 0750 082B     		cmp	r3, #8
 1231 0752 17D1     		bne	.L44
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   { 
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Mask OPTLOCK, OPTSTRT and BOR_LEV bits */
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0F); 
 1232              		.loc 1 770 0
 1233 0754 43F61443 		movw	r3, #15380
 1234 0758 C4F20203 		movt	r3, 16386
 1235 075c 1B78     		ldrb	r3, [r3, #0]
 1236 075e DBB2     		uxtb	r3, r3
 1237 0760 03F00F03 		and	r3, r3, #15
 1238 0764 FB73     		strb	r3, [r7, #15]
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Update User Option Byte */
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = OB_IWDG | (uint8_t)(OB_STDBY | (uint8_t)(OB_STOP | ((uin
 1239              		.loc 1 773 0
 1240 0766 43F61443 		movw	r3, #15380
 1241 076a C4F20203 		movt	r3, 16386
 1242 076e B979     		ldrb	r1, [r7, #6]
 1243 0770 FA7B     		ldrb	r2, [r7, #15]
 1244 0772 0A43     		orrs	r2, r2, r1
 1245 0774 D1B2     		uxtb	r1, r2
 1246 0776 7A79     		ldrb	r2, [r7, #5]
 1247 0778 0A43     		orrs	r2, r2, r1
 1248 077a D1B2     		uxtb	r1, r2
 1249 077c FA79     		ldrb	r2, [r7, #7]
 1250 077e 0A43     		orrs	r2, r2, r1
 1251 0780 D2B2     		uxtb	r2, r2
 1252 0782 1A70     		strb	r2, [r3, #0]
 1253              	.L44:
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1254              		.loc 1 775 0
 1255 0784 07F11007 		add	r7, r7, #16
 1256 0788 BD46     		mov	sp, r7
 1257 078a 80BD     		pop	{r7, pc}
 1258              		.cfi_endproc
 1259              	.LFE128:
 1261              		.align	2
 1262              		.global	FLASH_OB_BORConfig
 1263              		.thumb
 1264              		.thumb_func
 1266              	FLASH_OB_BORConfig:
 1267              	.LFB129:
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Sets the BOR Level. 
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_BOR: specifies the Option Bytes BOR Reset Level.
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_OFF: Supply voltage ranges from 1.62 to 2.1 V
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_BORConfig(uint8_t OB_BOR)
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1268              		.loc 1 788 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 8
 1271              		@ frame_needed = 1, uses_anonymous_args = 0
 1272              		@ link register save eliminated.
 1273 078c 80B4     		push	{r7}
 1274              	.LCFI51:
 1275              		.cfi_def_cfa_offset 4
 1276              		.cfi_offset 7, -4
 1277 078e 83B0     		sub	sp, sp, #12
 1278              	.LCFI52:
 1279              		.cfi_def_cfa_offset 16
 1280 0790 00AF     		add	r7, sp, #0
 1281              	.LCFI53:
 1282              		.cfi_def_cfa_register 7
 1283 0792 0346     		mov	r3, r0
 1284 0794 FB71     		strb	r3, [r7, #7]
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_BOR(OB_BOR));
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the BOR Level */
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BOR_LEV);
 1285              		.loc 1 793 0
 1286 0796 43F61443 		movw	r3, #15380
 1287 079a C4F20203 		movt	r3, 16386
 1288 079e 43F61442 		movw	r2, #15380
 1289 07a2 C4F20202 		movt	r2, 16386
 1290 07a6 1278     		ldrb	r2, [r2, #0]
 1291 07a8 D2B2     		uxtb	r2, r2
 1292 07aa 22F00C02 		bic	r2, r2, #12
 1293 07ae D2B2     		uxtb	r2, r2
 1294 07b0 1A70     		strb	r2, [r3, #0]
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= OB_BOR;
 1295              		.loc 1 794 0
 1296 07b2 43F61443 		movw	r3, #15380
 1297 07b6 C4F20203 		movt	r3, 16386
 1298 07ba 43F61442 		movw	r2, #15380
 1299 07be C4F20202 		movt	r2, 16386
 1300 07c2 1278     		ldrb	r2, [r2, #0]
 1301 07c4 D1B2     		uxtb	r1, r2
 1302 07c6 FA79     		ldrb	r2, [r7, #7]
 1303 07c8 0A43     		orrs	r2, r2, r1
 1304 07ca D2B2     		uxtb	r2, r2
 1305 07cc 1A70     		strb	r2, [r3, #0]
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1306              		.loc 1 796 0
 1307 07ce 07F10C07 		add	r7, r7, #12
 1308 07d2 BD46     		mov	sp, r7
 1309 07d4 80BC     		pop	{r7}
 1310 07d6 7047     		bx	lr
 1311              		.cfi_endproc
 1312              	.LFE129:
 1314              		.align	2
 1315              		.global	FLASH_OB_Launch
 1316              		.thumb
 1317              		.thumb_func
 1319              	FLASH_OB_Launch:
 1320              	.LFB130:
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Launch the option byte loading.
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_OB_Launch(void)
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1321              		.loc 1 805 0
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 8
 1324              		@ frame_needed = 1, uses_anonymous_args = 0
 1325 07d8 80B5     		push	{r7, lr}
 1326              	.LCFI54:
 1327              		.cfi_def_cfa_offset 8
 1328              		.cfi_offset 14, -4
 1329              		.cfi_offset 7, -8
 1330 07da 82B0     		sub	sp, sp, #8
 1331              	.LCFI55:
 1332              		.cfi_def_cfa_offset 16
 1333 07dc 00AF     		add	r7, sp, #0
 1334              	.LCFI56:
 1335              		.cfi_def_cfa_register 7
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1336              		.loc 1 806 0
 1337 07de 4FF00803 		mov	r3, #8
 1338 07e2 FB71     		strb	r3, [r7, #7]
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the OPTSTRT bit in OPTCR register */
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= FLASH_OPTCR_OPTSTRT;
 1339              		.loc 1 809 0
 1340 07e4 43F61443 		movw	r3, #15380
 1341 07e8 C4F20203 		movt	r3, 16386
 1342 07ec 43F61442 		movw	r2, #15380
 1343 07f0 C4F20202 		movt	r2, 16386
 1344 07f4 1278     		ldrb	r2, [r2, #0]
 1345 07f6 D2B2     		uxtb	r2, r2
 1346 07f8 42F00202 		orr	r2, r2, #2
 1347 07fc D2B2     		uxtb	r2, r2
 1348 07fe 1A70     		strb	r2, [r3, #0]
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1349              		.loc 1 812 0
 1350 0800 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1351 0804 0346     		mov	r3, r0
 1352 0806 FB71     		strb	r3, [r7, #7]
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 1353              		.loc 1 814 0
 1354 0808 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1355              		.loc 1 815 0
 1356 080a 1846     		mov	r0, r3
 1357 080c 07F10807 		add	r7, r7, #8
 1358 0810 BD46     		mov	sp, r7
 1359 0812 80BD     		pop	{r7, pc}
 1360              		.cfi_endproc
 1361              	.LFE130:
 1363              		.align	2
 1364              		.global	FLASH_OB_GetUser
 1365              		.thumb
 1366              		.thumb_func
 1368              	FLASH_OB_GetUser:
 1369              	.LFB131:
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH User Option Bytes values.
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1)
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         and RST_STDBY(Bit2).
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetUser(void)
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1370              		.loc 1 824 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 1, uses_anonymous_args = 0
 1374              		@ link register save eliminated.
 1375 0814 80B4     		push	{r7}
 1376              	.LCFI57:
 1377              		.cfi_def_cfa_offset 4
 1378              		.cfi_offset 7, -4
 1379 0816 00AF     		add	r7, sp, #0
 1380              	.LCFI58:
 1381              		.cfi_def_cfa_register 7
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the User Option Byte */
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return (uint8_t)(FLASH->OPTCR >> 5);
 1382              		.loc 1 826 0
 1383 0818 4FF47053 		mov	r3, #15360
 1384 081c C4F20203 		movt	r3, 16386
 1385 0820 5B69     		ldr	r3, [r3, #20]
 1386 0822 4FEA5313 		lsr	r3, r3, #5
 1387 0826 DBB2     		uxtb	r3, r3
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1388              		.loc 1 827 0
 1389 0828 1846     		mov	r0, r3
 1390 082a BD46     		mov	sp, r7
 1391 082c 80BC     		pop	{r7}
 1392 082e 7047     		bx	lr
 1393              		.cfi_endproc
 1394              	.LFE131:
 1396              		.align	2
 1397              		.global	FLASH_OB_GetWRP
 1398              		.thumb
 1399              		.thumb_func
 1401              	FLASH_OB_GetWRP:
 1402              	.LFB132:
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value.
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The FLASH Write Protection  Option Bytes value
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetWRP(void)
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1403              		.loc 1 835 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 1, uses_anonymous_args = 0
 1407              		@ link register save eliminated.
 1408 0830 80B4     		push	{r7}
 1409              	.LCFI59:
 1410              		.cfi_def_cfa_offset 4
 1411              		.cfi_offset 7, -4
 1412 0832 00AF     		add	r7, sp, #0
 1413              	.LCFI60:
 1414              		.cfi_def_cfa_register 7
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the FLASH write protection Register value */
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 1415              		.loc 1 837 0
 1416 0834 43F61643 		movw	r3, #15382
 1417 0838 C4F20203 		movt	r3, 16386
 1418 083c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 1419 083e 9BB2     		uxth	r3, r3
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1420              		.loc 1 838 0
 1421 0840 1846     		mov	r0, r3
 1422 0842 BD46     		mov	sp, r7
 1423 0844 80BC     		pop	{r7}
 1424 0846 7047     		bx	lr
 1425              		.cfi_endproc
 1426              	.LFE132:
 1428              		.align	2
 1429              		.global	FLASH_OB_GetRDP
 1430              		.thumb
 1431              		.thumb_func
 1433              	FLASH_OB_GetRDP:
 1434              	.LFB133:
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Read Protection level.
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH ReadOut Protection Status:
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - SET, when OB_RDP_Level_1 or OB_RDP_Level_2 is set
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - RESET, when OB_RDP_Level_0 is set
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FlagStatus FLASH_OB_GetRDP(void)
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1435              		.loc 1 848 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 8
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439              		@ link register save eliminated.
 1440 0848 80B4     		push	{r7}
 1441              	.LCFI61:
 1442              		.cfi_def_cfa_offset 4
 1443              		.cfi_offset 7, -4
 1444 084a 83B0     		sub	sp, sp, #12
 1445              	.LCFI62:
 1446              		.cfi_def_cfa_offset 16
 1447 084c 00AF     		add	r7, sp, #0
 1448              	.LCFI63:
 1449              		.cfi_def_cfa_register 7
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FlagStatus readstatus = RESET;
 1450              		.loc 1 849 0
 1451 084e 4FF00003 		mov	r3, #0
 1452 0852 FB71     		strb	r3, [r7, #7]
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if ((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) != (uint8_t)OB_RDP_Level_0))
 1453              		.loc 1 851 0
 1454 0854 43F61543 		movw	r3, #15381
 1455 0858 C4F20203 		movt	r3, 16386
 1456 085c 1B78     		ldrb	r3, [r3, #0]
 1457 085e DBB2     		uxtb	r3, r3
 1458 0860 AA2B     		cmp	r3, #170
 1459 0862 03D0     		beq	.L51
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     readstatus = SET;
 1460              		.loc 1 853 0
 1461 0864 4FF00103 		mov	r3, #1
 1462 0868 FB71     		strb	r3, [r7, #7]
 1463 086a 02E0     		b	.L52
 1464              	.L51:
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     readstatus = RESET;
 1465              		.loc 1 857 0
 1466 086c 4FF00003 		mov	r3, #0
 1467 0870 FB71     		strb	r3, [r7, #7]
 1468              	.L52:
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return readstatus;
 1469              		.loc 1 859 0
 1470 0872 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1471              		.loc 1 860 0
 1472 0874 1846     		mov	r0, r3
 1473 0876 07F10C07 		add	r7, r7, #12
 1474 087a BD46     		mov	sp, r7
 1475 087c 80BC     		pop	{r7}
 1476 087e 7047     		bx	lr
 1477              		.cfi_endproc
 1478              	.LFE133:
 1480              		.align	2
 1481              		.global	FLASH_OB_GetBOR
 1482              		.thumb
 1483              		.thumb_func
 1485              	FLASH_OB_GetBOR:
 1486              	.LFB134:
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH BOR level.
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The FLASH BOR level:
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_OFF   : Supply voltage ranges from 1.62 to 2.1 V  
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetBOR(void)
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1487              		.loc 1 872 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 0
 1490              		@ frame_needed = 1, uses_anonymous_args = 0
 1491              		@ link register save eliminated.
 1492 0880 80B4     		push	{r7}
 1493              	.LCFI64:
 1494              		.cfi_def_cfa_offset 4
 1495              		.cfi_offset 7, -4
 1496 0882 00AF     		add	r7, sp, #0
 1497              	.LCFI65:
 1498              		.cfi_def_cfa_register 7
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the FLASH BOR level */
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return (uint8_t)(*(__IO uint8_t *)(OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0C);
 1499              		.loc 1 874 0
 1500 0884 43F61443 		movw	r3, #15380
 1501 0888 C4F20203 		movt	r3, 16386
 1502 088c 1B78     		ldrb	r3, [r3, #0]
 1503 088e DBB2     		uxtb	r3, r3
 1504 0890 03F00C03 		and	r3, r3, #12
 1505 0894 DBB2     		uxtb	r3, r3
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1506              		.loc 1 875 0
 1507 0896 1846     		mov	r0, r3
 1508 0898 BD46     		mov	sp, r7
 1509 089a 80BC     		pop	{r7}
 1510 089c 7047     		bx	lr
 1511              		.cfi_endproc
 1512              	.LFE134:
 1514 089e 00BF     		.align	2
 1515              		.global	FLASH_ITConfig
 1516              		.thumb
 1517              		.thumb_func
 1519              	FLASH_ITConfig:
 1520              	.LFB135:
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @}
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group4 Interrupts and flags management functions
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *  @brief   Interrupts and flags management functions
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                   Interrupts and flags management functions
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================  
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the specified FLASH interrupts.
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_IT: specifies the FLASH interrupt sources to be enabled or disabled.
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_IT_ERR: FLASH Error Interrupt
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_IT_EOP: FLASH end of operation Interrupt
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None 
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState)
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1521              		.loc 1 902 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 8
 1524              		@ frame_needed = 1, uses_anonymous_args = 0
 1525              		@ link register save eliminated.
 1526 08a0 80B4     		push	{r7}
 1527              	.LCFI66:
 1528              		.cfi_def_cfa_offset 4
 1529              		.cfi_offset 7, -4
 1530 08a2 83B0     		sub	sp, sp, #12
 1531              	.LCFI67:
 1532              		.cfi_def_cfa_offset 16
 1533 08a4 00AF     		add	r7, sp, #0
 1534              	.LCFI68:
 1535              		.cfi_def_cfa_register 7
 1536 08a6 7860     		str	r0, [r7, #4]
 1537 08a8 0B46     		mov	r3, r1
 1538 08aa FB70     		strb	r3, [r7, #3]
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_IT(FLASH_IT)); 
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 1539              		.loc 1 907 0
 1540 08ac FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1541 08ae 002B     		cmp	r3, #0
 1542 08b0 0DD0     		beq	.L55
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Enable the interrupt sources */
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_IT;
 1543              		.loc 1 910 0
 1544 08b2 4FF47053 		mov	r3, #15360
 1545 08b6 C4F20203 		movt	r3, 16386
 1546 08ba 4FF47052 		mov	r2, #15360
 1547 08be C4F20202 		movt	r2, 16386
 1548 08c2 1269     		ldr	r2, [r2, #16]
 1549 08c4 1146     		mov	r1, r2
 1550 08c6 7A68     		ldr	r2, [r7, #4]
 1551 08c8 0A43     		orrs	r2, r2, r1
 1552 08ca 1A61     		str	r2, [r3, #16]
 1553 08cc 0EE0     		b	.L54
 1554              	.L55:
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Disable the interrupt sources */
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= ~(uint32_t)FLASH_IT;
 1555              		.loc 1 915 0
 1556 08ce 4FF47053 		mov	r3, #15360
 1557 08d2 C4F20203 		movt	r3, 16386
 1558 08d6 4FF47052 		mov	r2, #15360
 1559 08da C4F20202 		movt	r2, 16386
 1560 08de 1269     		ldr	r2, [r2, #16]
 1561 08e0 1146     		mov	r1, r2
 1562 08e2 7A68     		ldr	r2, [r7, #4]
 1563 08e4 6FEA0202 		mvn	r2, r2
 1564 08e8 0A40     		ands	r2, r2, r1
 1565 08ea 1A61     		str	r2, [r3, #16]
 1566              	.L54:
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1567              		.loc 1 917 0
 1568 08ec 07F10C07 		add	r7, r7, #12
 1569 08f0 BD46     		mov	sp, r7
 1570 08f2 80BC     		pop	{r7}
 1571 08f4 7047     		bx	lr
 1572              		.cfi_endproc
 1573              	.LFE135:
 1575 08f6 00BF     		.align	2
 1576              		.global	FLASH_GetFlagStatus
 1577              		.thumb
 1578              		.thumb_func
 1580              	FLASH_GetFlagStatus:
 1581              	.LFB136:
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Checks whether the specified FLASH flag is set or not.
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flag to check.
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_BSY: FLASH Busy flag
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The new state of FLASH_FLAG (SET or RESET).
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG)
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1582              		.loc 1 933 0
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 16
 1585              		@ frame_needed = 1, uses_anonymous_args = 0
 1586              		@ link register save eliminated.
 1587 08f8 80B4     		push	{r7}
 1588              	.LCFI69:
 1589              		.cfi_def_cfa_offset 4
 1590              		.cfi_offset 7, -4
 1591 08fa 85B0     		sub	sp, sp, #20
 1592              	.LCFI70:
 1593              		.cfi_def_cfa_offset 24
 1594 08fc 00AF     		add	r7, sp, #0
 1595              	.LCFI71:
 1596              		.cfi_def_cfa_register 7
 1597 08fe 7860     		str	r0, [r7, #4]
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FlagStatus bitstatus = RESET;
 1598              		.loc 1 934 0
 1599 0900 4FF00003 		mov	r3, #0
 1600 0904 FB73     		strb	r3, [r7, #15]
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG));
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
 1601              		.loc 1 938 0
 1602 0906 4FF47053 		mov	r3, #15360
 1603 090a C4F20203 		movt	r3, 16386
 1604 090e DB68     		ldr	r3, [r3, #12]
 1605 0910 1A46     		mov	r2, r3
 1606 0912 7B68     		ldr	r3, [r7, #4]
 1607 0914 1340     		ands	r3, r3, r2
 1608 0916 002B     		cmp	r3, #0
 1609 0918 03D0     		beq	.L58
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     bitstatus = SET;
 1610              		.loc 1 940 0
 1611 091a 4FF00103 		mov	r3, #1
 1612 091e FB73     		strb	r3, [r7, #15]
 1613 0920 02E0     		b	.L59
 1614              	.L58:
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     bitstatus = RESET;
 1615              		.loc 1 944 0
 1616 0922 4FF00003 		mov	r3, #0
 1617 0926 FB73     		strb	r3, [r7, #15]
 1618              	.L59:
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the new state of FLASH_FLAG (SET or RESET) */
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return bitstatus; 
 1619              		.loc 1 947 0
 1620 0928 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1621              		.loc 1 948 0
 1622 092a 1846     		mov	r0, r3
 1623 092c 07F11407 		add	r7, r7, #20
 1624 0930 BD46     		mov	sp, r7
 1625 0932 80BC     		pop	{r7}
 1626 0934 7047     		bx	lr
 1627              		.cfi_endproc
 1628              	.LFE136:
 1630 0936 00BF     		.align	2
 1631              		.global	FLASH_ClearFlag
 1632              		.thumb
 1633              		.thumb_func
 1635              	FLASH_ClearFlag:
 1636              	.LFB137:
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Clears the FLASH's pending flags.
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flags to clear.
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag 
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_ClearFlag(uint32_t FLASH_FLAG)
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1637              		.loc 1 963 0
 1638              		.cfi_startproc
 1639              		@ args = 0, pretend = 0, frame = 8
 1640              		@ frame_needed = 1, uses_anonymous_args = 0
 1641              		@ link register save eliminated.
 1642 0938 80B4     		push	{r7}
 1643              	.LCFI72:
 1644              		.cfi_def_cfa_offset 4
 1645              		.cfi_offset 7, -4
 1646 093a 83B0     		sub	sp, sp, #12
 1647              	.LCFI73:
 1648              		.cfi_def_cfa_offset 16
 1649 093c 00AF     		add	r7, sp, #0
 1650              	.LCFI74:
 1651              		.cfi_def_cfa_register 7
 1652 093e 7860     		str	r0, [r7, #4]
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG));
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Clear the flags */
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->SR = FLASH_FLAG;
 1653              		.loc 1 968 0
 1654 0940 4FF47053 		mov	r3, #15360
 1655 0944 C4F20203 		movt	r3, 16386
 1656 0948 7A68     		ldr	r2, [r7, #4]
 1657 094a DA60     		str	r2, [r3, #12]
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1658              		.loc 1 969 0
 1659 094c 07F10C07 		add	r7, r7, #12
 1660 0950 BD46     		mov	sp, r7
 1661 0952 80BC     		pop	{r7}
 1662 0954 7047     		bx	lr
 1663              		.cfi_endproc
 1664              	.LFE137:
 1666 0956 00BF     		.align	2
 1667              		.global	FLASH_GetStatus
 1668              		.thumb
 1669              		.thumb_func
 1671              	FLASH_GetStatus:
 1672              	.LFB138:
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Status.
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_GetStatus(void)
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1673              		.loc 1 978 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 8
 1676              		@ frame_needed = 1, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
 1678 0958 80B4     		push	{r7}
 1679              	.LCFI75:
 1680              		.cfi_def_cfa_offset 4
 1681              		.cfi_offset 7, -4
 1682 095a 83B0     		sub	sp, sp, #12
 1683              	.LCFI76:
 1684              		.cfi_def_cfa_offset 16
 1685 095c 00AF     		add	r7, sp, #0
 1686              	.LCFI77:
 1687              		.cfi_def_cfa_register 7
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status flashstatus = FLASH_COMPLETE;
 1688              		.loc 1 979 0
 1689 095e 4FF00803 		mov	r3, #8
 1690 0962 FB71     		strb	r3, [r7, #7]
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 1691              		.loc 1 981 0
 1692 0964 4FF47053 		mov	r3, #15360
 1693 0968 C4F20203 		movt	r3, 16386
 1694 096c DB68     		ldr	r3, [r3, #12]
 1695 096e 03F48033 		and	r3, r3, #65536
 1696 0972 002B     		cmp	r3, #0
 1697 0974 03D0     		beq	.L62
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     flashstatus = FLASH_BUSY;
 1698              		.loc 1 983 0
 1699 0976 4FF00103 		mov	r3, #1
 1700 097a FB71     		strb	r3, [r7, #7]
 1701 097c 29E0     		b	.L63
 1702              	.L62:
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else 
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {  
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     if((FLASH->SR & FLASH_FLAG_WRPERR) != (uint32_t)0x00)
 1703              		.loc 1 987 0
 1704 097e 4FF47053 		mov	r3, #15360
 1705 0982 C4F20203 		movt	r3, 16386
 1706 0986 DB68     		ldr	r3, [r3, #12]
 1707 0988 03F01003 		and	r3, r3, #16
 1708 098c 002B     		cmp	r3, #0
 1709 098e 03D0     		beq	.L64
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     { 
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       flashstatus = FLASH_ERROR_WRP;
 1710              		.loc 1 989 0
 1711 0990 4FF00503 		mov	r3, #5
 1712 0994 FB71     		strb	r3, [r7, #7]
 1713 0996 1CE0     		b	.L63
 1714              	.L64:
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     else 
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     {
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       if((FLASH->SR & (uint32_t)0xEF) != (uint32_t)0x00)
 1715              		.loc 1 993 0
 1716 0998 4FF47053 		mov	r3, #15360
 1717 099c C4F20203 		movt	r3, 16386
 1718 09a0 DB68     		ldr	r3, [r3, #12]
 1719 09a2 03F0EF03 		and	r3, r3, #239
 1720 09a6 002B     		cmp	r3, #0
 1721 09a8 03D0     		beq	.L65
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       {
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         flashstatus = FLASH_ERROR_PROGRAM; 
 1722              		.loc 1 995 0
 1723 09aa 4FF00603 		mov	r3, #6
 1724 09ae FB71     		strb	r3, [r7, #7]
 1725 09b0 0FE0     		b	.L63
 1726              	.L65:
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       }
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       else
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       {
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         if((FLASH->SR & FLASH_FLAG_OPERR) != (uint32_t)0x00)
 1727              		.loc 1 999 0
 1728 09b2 4FF47053 		mov	r3, #15360
 1729 09b6 C4F20203 		movt	r3, 16386
 1730 09ba DB68     		ldr	r3, [r3, #12]
 1731 09bc 03F00203 		and	r3, r3, #2
 1732 09c0 002B     		cmp	r3, #0
 1733 09c2 03D0     		beq	.L66
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         {
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****           flashstatus = FLASH_ERROR_OPERATION;
 1734              		.loc 1 1001 0
 1735 09c4 4FF00703 		mov	r3, #7
 1736 09c8 FB71     		strb	r3, [r7, #7]
 1737 09ca 02E0     		b	.L63
 1738              	.L66:
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         }
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         else
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         {
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****           flashstatus = FLASH_COMPLETE;
 1739              		.loc 1 1005 0
 1740 09cc 4FF00803 		mov	r3, #8
 1741 09d0 FB71     		strb	r3, [r7, #7]
 1742              	.L63:
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         }
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       }
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the FLASH Status */
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return flashstatus;
 1743              		.loc 1 1011 0
 1744 09d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1745              		.loc 1 1012 0
 1746 09d4 1846     		mov	r0, r3
 1747 09d6 07F10C07 		add	r7, r7, #12
 1748 09da BD46     		mov	sp, r7
 1749 09dc 80BC     		pop	{r7}
 1750 09de 7047     		bx	lr
 1751              		.cfi_endproc
 1752              	.LFE138:
 1754              		.align	2
 1755              		.global	FLASH_WaitForLastOperation
 1756              		.thumb
 1757              		.thumb_func
 1759              	FLASH_WaitForLastOperation:
 1760              	.LFB139:
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Waits for a FLASH operation to complete.
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_WaitForLastOperation(void)
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** { 
 1761              		.loc 1 1021 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 8
 1764              		@ frame_needed = 1, uses_anonymous_args = 0
 1765 09e0 80B5     		push	{r7, lr}
 1766              	.LCFI78:
 1767              		.cfi_def_cfa_offset 8
 1768              		.cfi_offset 14, -4
 1769              		.cfi_offset 7, -8
 1770 09e2 82B0     		sub	sp, sp, #8
 1771              	.LCFI79:
 1772              		.cfi_def_cfa_offset 16
 1773 09e4 00AF     		add	r7, sp, #0
 1774              	.LCFI80:
 1775              		.cfi_def_cfa_register 7
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   __IO FLASH_Status status = FLASH_COMPLETE;
 1776              		.loc 1 1022 0
 1777 09e6 4FF00803 		mov	r3, #8
 1778 09ea FB71     		strb	r3, [r7, #7]
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check for the FLASH Status */
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_GetStatus();
 1779              		.loc 1 1025 0
 1780 09ec FFF7FEFF 		bl	FLASH_GetStatus
 1781 09f0 0346     		mov	r3, r0
 1782 09f2 FB71     		strb	r3, [r7, #7]
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      flag will be set */
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   while(status == FLASH_BUSY)
 1783              		.loc 1 1030 0
 1784 09f4 03E0     		b	.L68
 1785              	.L69:
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_GetStatus();
 1786              		.loc 1 1032 0
 1787 09f6 FFF7FEFF 		bl	FLASH_GetStatus
 1788 09fa 0346     		mov	r3, r0
 1789 09fc FB71     		strb	r3, [r7, #7]
 1790              	.L68:
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   while(status == FLASH_BUSY)
 1791              		.loc 1 1030 0 discriminator 1
 1792 09fe FB79     		ldrb	r3, [r7, #7]
 1793 0a00 DBB2     		uxtb	r3, r3
 1794 0a02 012B     		cmp	r3, #1
 1795 0a04 F7D0     		beq	.L69
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the operation status */
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 1796              		.loc 1 1035 0
 1797 0a06 FB79     		ldrb	r3, [r7, #7]
 1798 0a08 DBB2     		uxtb	r3, r3
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1799              		.loc 1 1036 0
 1800 0a0a 1846     		mov	r0, r3
 1801 0a0c 07F10807 		add	r7, r7, #8
 1802 0a10 BD46     		mov	sp, r7
 1803 0a12 80BD     		pop	{r7, pc}
 1804              		.cfi_endproc
 1805              	.LFE139:
 1807              	.Letext0:
 1808              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 1809              		.file 3 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm3
 1810              		.file 4 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f
 1811              		.file 5 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_flash.c
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:18     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:23     .text:00000000 FLASH_SetLatency
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:61     .text:00000020 FLASH_PrefetchBufferCmd
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:116    .text:0000006c FLASH_InstructionCacheCmd
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:171    .text:000000b8 FLASH_DataCacheCmd
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:226    .text:00000104 FLASH_InstructionCacheReset
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:260    .text:00000128 FLASH_DataCacheReset
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:294    .text:0000014c FLASH_Unlock
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:339    .text:00000188 FLASH_Lock
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:373    .text:000001ac FLASH_EraseSector
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1759   .text:000009e0 FLASH_WaitForLastOperation
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:519    .text:000002c8 FLASH_EraseAllSectors
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:645    .text:000003ac FLASH_ProgramDoubleWord
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:731    .text:0000044c FLASH_ProgramWord
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:817    .text:000004e4 FLASH_ProgramHalfWord
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:904    .text:00000580 FLASH_ProgramByte
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:990    .text:00000618 FLASH_OB_Unlock
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1037   .text:0000065c FLASH_OB_Lock
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1071   .text:00000680 FLASH_OB_WRPConfig
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1147   .text:000006f4 FLASH_OB_RDPConfig
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1195   .text:00000728 FLASH_OB_UserConfig
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1266   .text:0000078c FLASH_OB_BORConfig
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1319   .text:000007d8 FLASH_OB_Launch
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1368   .text:00000814 FLASH_OB_GetUser
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1401   .text:00000830 FLASH_OB_GetWRP
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1433   .text:00000848 FLASH_OB_GetRDP
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1485   .text:00000880 FLASH_OB_GetBOR
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1519   .text:000008a0 FLASH_ITConfig
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1580   .text:000008f8 FLASH_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1635   .text:00000938 FLASH_ClearFlag
C:\Users\Alex\AppData\Local\Temp\cc5HyPWj.s:1671   .text:00000958 FLASH_GetStatus
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
