   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_flash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.FLASH_SetLatency,"ax",%progbits
  19              		.align	1
  20              		.global	FLASH_SetLatency
  21              		.thumb
  22              		.thumb_func
  24              	FLASH_SetLatency:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @file    stm32f4xx_flash.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          functionalities of the FLASH peripheral:
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - FLASH Interface configuration
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - FLASH Memory Programming
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - Option Bytes Programming
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - Interrupts and flags management
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  @verbatim
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          ===================================================================
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                 How to use this driver
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          ===================================================================
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                           
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This driver provides functions to configure and program the FLASH 
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          memory of all STM32F4xx devices.
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          These functions are split in 4 groups:
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * 
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           1. FLASH Interface configuration functions: this group includes the
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              management of the following features:
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set the latency
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Enable/Disable the prefetch buffer
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Enable/Disable the Instruction cache and the Data cache
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Reset the Instruction cache and the Data cache
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           2. FLASH Memory Programming functions: this group includes all needed
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              functions to erase and program the main memory:
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Lock and Unlock the FLASH interface
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Erase function: Erase sector, erase all sectors
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Program functions: byte, half word, word and double word
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           3. Option Bytes Programming functions: this group includes all needed
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              functions to manage the Option Bytes:
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set/Reset the write protection
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set the Read protection Level
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set the BOR level
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Program the user Option Bytes
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Launch the Option Bytes loader
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           4. Interrupts and flags management functions: this group 
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              includes all needed functions to:
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Enable/Disable the FLASH interrupt sources
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Get flags status
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Clear flags
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Get FLASH operation status
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Wait for last FLASH operation
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * 
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  @endverbatim
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                      
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   ******************************************************************************
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @attention
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   ******************************************************************************
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Includes ------------------------------------------------------------------*/
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** #include "stm32f4xx_flash.h"
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH 
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief FLASH driver modules
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */ 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private typedef -----------------------------------------------------------*/
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private define ------------------------------------------------------------*/ 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** #define SECTOR_MASK               ((uint32_t)0xFFFFFF07)
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private macro -------------------------------------------------------------*/
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private variables ---------------------------------------------------------*/
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private function prototypes -----------------------------------------------*/
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private functions ---------------------------------------------------------*/
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Private_Functions
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */ 
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group1 FLASH Interface configuration functions
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  @brief   FLASH Interface configuration functions 
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                        FLASH Interface configuration functions
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    This group includes the following functions:
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_SetLatency(uint32_t FLASH_Latency)
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****        To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****        must be correctly programmed according to the frequency of the CPU clock 
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       (HCLK) and the supply voltage of the device.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+     
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|     
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|           
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|   
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  | 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|   
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 120|72 < HCLK <= 90  |64 < HCLK <= 80  |
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |5WS(6CPU cycle)|      NA        |      NA        |90 < HCLK <= 108 |80 < HCLK <= 96  | 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |6WS(7CPU cycle)|      NA        |      NA        |108 < HCLK <= 120|96 < HCLK <= 112 | 
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |7WS(8CPU cycle)|      NA        |      NA        |     NA          |112 < HCLK <= 120| 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |***************|****************|****************|*****************|*****************|***********
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   | voltage ra
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   | with Exter
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |Max Parallelism|      x32       |               x16                |       x8        |          x
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |PSIZE[1:0]     |      10        |               01                 |       00        |           
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------------------
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_InstructionCacheCmd(FunctionalState NewState)
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_DataCacheCmd(FunctionalState NewState)
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_InstructionCacheReset(void)
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_DataCacheReset(void)
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    The unlock sequence is not needed for these functions.
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Sets the code latency value.
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_Latency: specifies the FLASH Latency value.
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_0: FLASH Zero Latency cycle
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_1: FLASH One Latency cycle
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_2: FLASH Two Latency cycles
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_3: FLASH Three Latency cycles
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_4: FLASH Four Latency cycles 
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_5: FLASH Five Latency cycles 
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_6: FLASH Six Latency cycles
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_7: FLASH Seven Latency cycles      
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_SetLatency(uint32_t FLASH_Latency)
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
  27              		.loc 1 165 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_LATENCY(FLASH_Latency));
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Perform Byte access to FLASH_ACR[8:0] to set the Latency value */
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)ACR_BYTE0_ADDRESS = (uint8_t)FLASH_Latency;
  33              		.loc 1 170 0
  34 0000 014B     		ldr	r3, .L2
  35 0002 C0B2     		uxtb	r0, r0
  36              	.LVL1:
  37 0004 1870     		strb	r0, [r3, #0]
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
  38              		.loc 1 171 0
  39 0006 7047     		bx	lr
  40              	.L3:
  41              		.align	2
  42              	.L2:
  43 0008 003C0240 		.word	1073888256
  44              		.cfi_endproc
  45              	.LFE110:
  47              		.section	.text.FLASH_PrefetchBufferCmd,"ax",%progbits
  48              		.align	1
  49              		.global	FLASH_PrefetchBufferCmd
  50              		.thumb
  51              		.thumb_func
  53              	FLASH_PrefetchBufferCmd:
  54              	.LFB111:
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Prefetch Buffer.
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Prefetch Buffer.
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
  55              		.loc 1 180 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL2:
  61 0000 044B     		ldr	r3, .L8
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Enable or disable the Prefetch Buffer */
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_PRFTEN;
  62              		.loc 1 187 0
  63 0002 1A68     		ldr	r2, [r3, #0]
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
  64              		.loc 1 185 0
  65 0004 10B1     		cbz	r0, .L5
  66              		.loc 1 187 0
  67 0006 42F48072 		orr	r2, r2, #256
  68 000a 01E0     		b	.L7
  69              	.L5:
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_PRFTEN);
  70              		.loc 1 191 0
  71 000c 22F48072 		bic	r2, r2, #256
  72              	.L7:
  73 0010 1A60     		str	r2, [r3, #0]
  74 0012 7047     		bx	lr
  75              	.L9:
  76              		.align	2
  77              	.L8:
  78 0014 003C0240 		.word	1073888256
  79              		.cfi_endproc
  80              	.LFE111:
  82              		.section	.text.FLASH_InstructionCacheCmd,"ax",%progbits
  83              		.align	1
  84              		.global	FLASH_InstructionCacheCmd
  85              		.thumb
  86              		.thumb_func
  88              	FLASH_InstructionCacheCmd:
  89              	.LFB112:
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Instruction Cache feature.
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Instruction Cache.
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_InstructionCacheCmd(FunctionalState NewState)
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
  90              		.loc 1 202 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.LVL3:
  96 0000 044B     		ldr	r3, .L14
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_ICEN;
  97              		.loc 1 208 0
  98 0002 1A68     		ldr	r2, [r3, #0]
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
  99              		.loc 1 206 0
 100 0004 10B1     		cbz	r0, .L11
 101              		.loc 1 208 0
 102 0006 42F40072 		orr	r2, r2, #512
 103 000a 01E0     		b	.L13
 104              	.L11:
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_ICEN);
 105              		.loc 1 212 0
 106 000c 22F40072 		bic	r2, r2, #512
 107              	.L13:
 108 0010 1A60     		str	r2, [r3, #0]
 109 0012 7047     		bx	lr
 110              	.L15:
 111              		.align	2
 112              	.L14:
 113 0014 003C0240 		.word	1073888256
 114              		.cfi_endproc
 115              	.LFE112:
 117              		.section	.text.FLASH_DataCacheCmd,"ax",%progbits
 118              		.align	1
 119              		.global	FLASH_DataCacheCmd
 120              		.thumb
 121              		.thumb_func
 123              	FLASH_DataCacheCmd:
 124              	.LFB113:
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Data Cache feature.
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Data Cache.
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_DataCacheCmd(FunctionalState NewState)
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 125              		.loc 1 223 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.LVL4:
 131 0000 044B     		ldr	r3, .L20
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_DCEN;
 132              		.loc 1 229 0
 133 0002 1A68     		ldr	r2, [r3, #0]
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 134              		.loc 1 227 0
 135 0004 10B1     		cbz	r0, .L17
 136              		.loc 1 229 0
 137 0006 42F48062 		orr	r2, r2, #1024
 138 000a 01E0     		b	.L19
 139              	.L17:
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_DCEN);
 140              		.loc 1 233 0
 141 000c 22F48062 		bic	r2, r2, #1024
 142              	.L19:
 143 0010 1A60     		str	r2, [r3, #0]
 144 0012 7047     		bx	lr
 145              	.L21:
 146              		.align	2
 147              	.L20:
 148 0014 003C0240 		.word	1073888256
 149              		.cfi_endproc
 150              	.LFE113:
 152              		.section	.text.FLASH_InstructionCacheReset,"ax",%progbits
 153              		.align	1
 154              		.global	FLASH_InstructionCacheReset
 155              		.thumb
 156              		.thumb_func
 158              	FLASH_InstructionCacheReset:
 159              	.LFB114:
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Resets the Instruction Cache.
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used only when the Instruction Cache is disabled.  
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_InstructionCacheReset(void)
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 160              		.loc 1 244 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_ICRST;
 165              		.loc 1 245 0
 166 0000 024B     		ldr	r3, .L23
 167 0002 1A68     		ldr	r2, [r3, #0]
 168 0004 42F40062 		orr	r2, r2, #2048
 169 0008 1A60     		str	r2, [r3, #0]
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 170              		.loc 1 246 0
 171 000a 7047     		bx	lr
 172              	.L24:
 173              		.align	2
 174              	.L23:
 175 000c 003C0240 		.word	1073888256
 176              		.cfi_endproc
 177              	.LFE114:
 179              		.section	.text.FLASH_DataCacheReset,"ax",%progbits
 180              		.align	1
 181              		.global	FLASH_DataCacheReset
 182              		.thumb
 183              		.thumb_func
 185              	FLASH_DataCacheReset:
 186              	.LFB115:
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Resets the Data Cache.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used only when the Data Cache is disabled.  
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_DataCacheReset(void)
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 187              		.loc 1 255 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_DCRST;
 192              		.loc 1 256 0
 193 0000 024B     		ldr	r3, .L26
 194 0002 1A68     		ldr	r2, [r3, #0]
 195 0004 42F48052 		orr	r2, r2, #4096
 196 0008 1A60     		str	r2, [r3, #0]
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 197              		.loc 1 257 0
 198 000a 7047     		bx	lr
 199              	.L27:
 200              		.align	2
 201              	.L26:
 202 000c 003C0240 		.word	1073888256
 203              		.cfi_endproc
 204              	.LFE115:
 206              		.section	.text.FLASH_Unlock,"ax",%progbits
 207              		.align	1
 208              		.global	FLASH_Unlock
 209              		.thumb
 210              		.thumb_func
 212              	FLASH_Unlock:
 213              	.LFB116:
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @}
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group2 FLASH Memory Programming functions
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *  @brief   FLASH Memory Programming functions
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                       FLASH Memory Programming functions
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================   
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    This group includes the following functions:
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_Unlock(void)
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_Lock(void)
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    Any operation of erase or program should follow these steps:
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    1. Call the FLASH_Unlock() function to enable the FLASH control register access
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    2. Call the desired function to erase sector(s) or program data
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    3. Call the FLASH_Lock() function to disable the FLASH control register access
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       (recommended to protect the FLASH memory against possible unwanted operation)
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH control register access
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_Unlock(void)
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 214              		.loc 1 299 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 219              		.loc 1 300 0
 220 0000 044B     		ldr	r3, .L30
 221 0002 1A69     		ldr	r2, [r3, #16]
 222 0004 002A     		cmp	r2, #0
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Authorize the FLASH Registers access */
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY1;
 223              		.loc 1 303 0
 224 0006 BFBF     		itttt	lt
 225 0008 034A     		ldrlt	r2, .L30+4
 226 000a 5A60     		strlt	r2, [r3, #4]
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 227              		.loc 1 304 0
 228 000c 02F18832 		addlt	r2, r2, #-2004318072
 229 0010 5A60     		strlt	r2, [r3, #4]
 230 0012 7047     		bx	lr
 231              	.L31:
 232              		.align	2
 233              	.L30:
 234 0014 003C0240 		.word	1073888256
 235 0018 23016745 		.word	1164378403
 236              		.cfi_endproc
 237              	.LFE116:
 239              		.section	.text.FLASH_Lock,"ax",%progbits
 240              		.align	1
 241              		.global	FLASH_Lock
 242              		.thumb
 243              		.thumb_func
 245              	FLASH_Lock:
 246              	.LFB117:
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Locks the FLASH control register access
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_Lock(void)
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 247              		.loc 1 314 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->CR |= FLASH_CR_LOCK;
 252              		.loc 1 316 0
 253 0000 024B     		ldr	r3, .L33
 254 0002 1A69     		ldr	r2, [r3, #16]
 255 0004 42F00042 		orr	r2, r2, #-2147483648
 256 0008 1A61     		str	r2, [r3, #16]
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 257              		.loc 1 317 0
 258 000a 7047     		bx	lr
 259              	.L34:
 260              		.align	2
 261              	.L33:
 262 000c 003C0240 		.word	1073888256
 263              		.cfi_endproc
 264              	.LFE117:
 266              		.section	.text.FLASH_OB_Unlock,"ax",%progbits
 267              		.align	1
 268              		.global	FLASH_OB_Unlock
 269              		.thumb
 270              		.thumb_func
 272              	FLASH_OB_Unlock:
 273              	.LFB124:
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Erases a specified FLASH Sector.
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *   
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_Sector: The Sector number to be erased.
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be a value between FLASH_Sector_0 and FLASH_Sector_11
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *    
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *       
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_SECTOR(FLASH_Sector));
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   { 
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase the sector */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the SER Bit */
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_SER);
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Erases all FLASH Sectors.
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *    
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *       
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase all sectors */
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR &= CR_PSIZE_MASK;
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER;
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER);
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }   
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a double word (64-bit) at a specified address.
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         2.7V to 3.6V and an External Vpp is present.           
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint64_t*)Address = Data;
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a word (32-bit) at a specified address.
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.7V to 3.6V. 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint32_t*)Address = Data;
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a half word (16-bit) at a specified address. 
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.1V to 3.6V.         
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint16_t*)Address = Data;
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a byte (8-bit) at a specified address.
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function can be used within all the device supply voltage ranges.               
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)Address = Data;
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @}
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group3 Option Bytes Programming functions
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *  @brief   Option Bytes Programming functions 
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                         Option Bytes Programming functions
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================  
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    This group includes the following functions:
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_Unlock(void)
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_Lock(void)
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_RDPConfig(uint8_t OB_RDP)
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_BORConfig(uint8_t OB_BOR)
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - FLASH_Status FLASH_ProgramOTP(uint32_t Address, uint32_t Data)							
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - FLASH_Status FLASH_OB_Launch(void)
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint32_t FLASH_OB_GetUser(void)						
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint8_t FLASH_OB_GetWRP(void)						
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint8_t FLASH_OB_GetRDP(void)							
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint8_t FLASH_OB_GetBOR(void)
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    Any operation of erase or program should follow these steps:
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    1. Call the FLASH_OB_Unlock() function to enable the FLASH option control register access
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    2. Call one or several functions to program the desired Option Bytes:
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState) => to Enable/Disable 
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         the desired sector write protection
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_RDPConfig(uint8_t OB_RDP) => to set the desired read Protection Level
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY) => to configur
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         the user Option Bytes.
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_BORConfig(uint8_t OB_BOR) => to set the BOR Level 			 
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    3. Once all needed Option Bytes to be programmed are correctly written, call the
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       FLASH_OB_Launch() function to launch the Option Bytes programming process.
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      @note When changing the IWDG mode from HW to SW or from SW to HW, a system 
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****            reset is needed to make the change effective.  
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    4. Call the FLASH_OB_Lock() function to disable the FLASH option control register
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       access (recommended to protect the Option Bytes against possible unwanted operations)
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH Option Control Registers access.
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_Unlock(void)
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 274              		.loc 1 657 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 279              		.loc 1 658 0
 280 0000 044B     		ldr	r3, .L37
 281 0002 5A69     		ldr	r2, [r3, #20]
 282 0004 D207     		lsls	r2, r2, #31
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Authorizes the Option Byte register programming */
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY1;
 283              		.loc 1 661 0
 284 0006 41BF     		itttt	mi
 285 0008 034A     		ldrmi	r2, .L37+4
 286 000a 9A60     		strmi	r2, [r3, #8]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 287              		.loc 1 662 0
 288 000c 02F14432 		addmi	r2, r2, #1145324612
 289 0010 9A60     		strmi	r2, [r3, #8]
 290 0012 7047     		bx	lr
 291              	.L38:
 292              		.align	2
 293              	.L37:
 294 0014 003C0240 		.word	1073888256
 295 0018 3B2A1908 		.word	135866939
 296              		.cfi_endproc
 297              	.LFE124:
 299              		.section	.text.FLASH_OB_Lock,"ax",%progbits
 300              		.align	1
 301              		.global	FLASH_OB_Lock
 302              		.thumb
 303              		.thumb_func
 305              	FLASH_OB_Lock:
 306              	.LFB125:
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Locks the FLASH Option Control Registers access.
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_Lock(void)
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 307              		.loc 1 672 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 312              		.loc 1 674 0
 313 0000 024B     		ldr	r3, .L40
 314 0002 5A69     		ldr	r2, [r3, #20]
 315 0004 42F00102 		orr	r2, r2, #1
 316 0008 5A61     		str	r2, [r3, #20]
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 317              		.loc 1 675 0
 318 000a 7047     		bx	lr
 319              	.L41:
 320              		.align	2
 321              	.L40:
 322 000c 003C0240 		.word	1073888256
 323              		.cfi_endproc
 324              	.LFE125:
 326              		.section	.text.FLASH_OB_BORConfig,"ax",%progbits
 327              		.align	1
 328              		.global	FLASH_OB_BORConfig
 329              		.thumb
 330              		.thumb_func
 332              	FLASH_OB_BORConfig:
 333              	.LFB129:
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the write protection of the desired sectors
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_WRP: specifies the sector(s) to be write protected or unprotected.
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_WRP: A value between OB_WRP_Sector0 and OB_WRP_Sector11                     
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_WRP_Sector_All
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None  
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** { 
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_WRP(OB_WRP));
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   { 
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     if(NewState != DISABLE)
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     {
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~OB_WRP);
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     else
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     {
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)OB_WRP;
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Sets the read protection level.
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_RDP: specifies the read protection level.
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_0: No protection
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_1: Read protection of the memory
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_2: Full chip protection
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *   
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * !!!Warning!!! When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *    
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_RDPConfig(uint8_t OB_RDP)
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_RDP(OB_RDP));
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)OPTCR_BYTE1_ADDRESS = OB_RDP;
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.    
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_IWDG: Selects the IWDG mode
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_IWDG_SW: Software IWDG selected
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_IWDG_HW: Hardware IWDG selected
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_STOP: Reset event when entering STOP mode.
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STOP_NoRST: No reset generated when entering in STOP
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STOP_RST: Reset generated when entering in STOP
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_STDBY: Reset event when entering Standby mode.
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STDBY_NoRST: No reset generated when entering in STANDBY
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STDBY_RST: Reset generated when entering in STANDBY
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   { 
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Mask OPTLOCK, OPTSTRT and BOR_LEV bits */
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0F); 
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Update User Option Byte */
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = OB_IWDG | (uint8_t)(OB_STDBY | (uint8_t)(OB_STOP | ((uin
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Sets the BOR Level. 
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_BOR: specifies the Option Bytes BOR Reset Level.
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_OFF: Supply voltage ranges from 1.62 to 2.1 V
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_BORConfig(uint8_t OB_BOR)
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 334              		.loc 1 788 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339              	.LVL5:
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_BOR(OB_BOR));
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the BOR Level */
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BOR_LEV);
 340              		.loc 1 793 0
 341 0000 044B     		ldr	r3, .L43
 342 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 343 0004 02F0F302 		and	r2, r2, #243
 344 0008 1A70     		strb	r2, [r3, #0]
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= OB_BOR;
 345              		.loc 1 794 0
 346 000a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 347 000c 1043     		orrs	r0, r0, r2
 348              	.LVL6:
 349 000e 1870     		strb	r0, [r3, #0]
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 350              		.loc 1 796 0
 351 0010 7047     		bx	lr
 352              	.L44:
 353 0012 00BF     		.align	2
 354              	.L43:
 355 0014 143C0240 		.word	1073888276
 356              		.cfi_endproc
 357              	.LFE129:
 359              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 360              		.align	1
 361              		.global	FLASH_OB_GetUser
 362              		.thumb
 363              		.thumb_func
 365              	FLASH_OB_GetUser:
 366              	.LFB131:
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Launch the option byte loading.
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_OB_Launch(void)
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the OPTSTRT bit in OPTCR register */
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= FLASH_OPTCR_OPTSTRT;
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH User Option Bytes values.
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1)
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         and RST_STDBY(Bit2).
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetUser(void)
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 367              		.loc 1 824 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the User Option Byte */
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return (uint8_t)(FLASH->OPTCR >> 5);
 372              		.loc 1 826 0
 373 0000 024B     		ldr	r3, .L46
 374 0002 5869     		ldr	r0, [r3, #20]
 375 0004 C0F34710 		ubfx	r0, r0, #5, #8
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 376              		.loc 1 827 0
 377 0008 7047     		bx	lr
 378              	.L47:
 379 000a 00BF     		.align	2
 380              	.L46:
 381 000c 003C0240 		.word	1073888256
 382              		.cfi_endproc
 383              	.LFE131:
 385              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 386              		.align	1
 387              		.global	FLASH_OB_GetWRP
 388              		.thumb
 389              		.thumb_func
 391              	FLASH_OB_GetWRP:
 392              	.LFB132:
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value.
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The FLASH Write Protection  Option Bytes value
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetWRP(void)
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 393              		.loc 1 835 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the FLASH write protection Register value */
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 398              		.loc 1 837 0
 399 0000 014B     		ldr	r3, .L49
 400 0002 1888     		ldrh	r0, [r3, #0]
 401 0004 80B2     		uxth	r0, r0
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 402              		.loc 1 838 0
 403 0006 7047     		bx	lr
 404              	.L50:
 405              		.align	2
 406              	.L49:
 407 0008 163C0240 		.word	1073888278
 408              		.cfi_endproc
 409              	.LFE132:
 411              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 412              		.align	1
 413              		.global	FLASH_OB_GetRDP
 414              		.thumb
 415              		.thumb_func
 417              	FLASH_OB_GetRDP:
 418              	.LFB133:
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Read Protection level.
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH ReadOut Protection Status:
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - SET, when OB_RDP_Level_1 or OB_RDP_Level_2 is set
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - RESET, when OB_RDP_Level_0 is set
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FlagStatus FLASH_OB_GetRDP(void)
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 419              		.loc 1 848 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424              	.LVL7:
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FlagStatus readstatus = RESET;
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if ((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) != (uint8_t)OB_RDP_Level_0))
 425              		.loc 1 851 0
 426 0000 024B     		ldr	r3, .L52
 427 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 428              	.LVL8:
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     readstatus = SET;
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     readstatus = RESET;
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return readstatus;
 429              		.loc 1 859 0
 430 0004 AA38     		subs	r0, r0, #170
 431              	.LVL9:
 432 0006 18BF     		it	ne
 433 0008 0120     		movne	r0, #1
 434              	.LVL10:
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 435              		.loc 1 860 0
 436 000a 7047     		bx	lr
 437              	.L53:
 438              		.align	2
 439              	.L52:
 440 000c 153C0240 		.word	1073888277
 441              		.cfi_endproc
 442              	.LFE133:
 444              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 445              		.align	1
 446              		.global	FLASH_OB_GetBOR
 447              		.thumb
 448              		.thumb_func
 450              	FLASH_OB_GetBOR:
 451              	.LFB134:
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH BOR level.
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The FLASH BOR level:
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_OFF   : Supply voltage ranges from 1.62 to 2.1 V  
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetBOR(void)
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 452              		.loc 1 872 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 0, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the FLASH BOR level */
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return (uint8_t)(*(__IO uint8_t *)(OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0C);
 457              		.loc 1 874 0
 458 0000 024B     		ldr	r3, .L55
 459 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 460 0004 00F00C00 		and	r0, r0, #12
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 461              		.loc 1 875 0
 462 0008 7047     		bx	lr
 463              	.L56:
 464 000a 00BF     		.align	2
 465              	.L55:
 466 000c 143C0240 		.word	1073888276
 467              		.cfi_endproc
 468              	.LFE134:
 470              		.section	.text.FLASH_ITConfig,"ax",%progbits
 471              		.align	1
 472              		.global	FLASH_ITConfig
 473              		.thumb
 474              		.thumb_func
 476              	FLASH_ITConfig:
 477              	.LFB135:
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @}
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group4 Interrupts and flags management functions
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *  @brief   Interrupts and flags management functions
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                   Interrupts and flags management functions
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================  
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the specified FLASH interrupts.
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_IT: specifies the FLASH interrupt sources to be enabled or disabled.
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_IT_ERR: FLASH Error Interrupt
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_IT_EOP: FLASH end of operation Interrupt
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None 
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState)
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 478              		.loc 1 902 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483              	.LVL11:
 484 0000 044B     		ldr	r3, .L61
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_IT(FLASH_IT)); 
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Enable the interrupt sources */
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_IT;
 485              		.loc 1 910 0
 486 0002 1A69     		ldr	r2, [r3, #16]
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 487              		.loc 1 907 0
 488 0004 09B1     		cbz	r1, .L58
 489              		.loc 1 910 0
 490 0006 1043     		orrs	r0, r0, r2
 491              	.LVL12:
 492 0008 01E0     		b	.L60
 493              	.LVL13:
 494              	.L58:
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Disable the interrupt sources */
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= ~(uint32_t)FLASH_IT;
 495              		.loc 1 915 0
 496 000a 22EA0000 		bic	r0, r2, r0
 497              	.LVL14:
 498              	.L60:
 499 000e 1861     		str	r0, [r3, #16]
 500 0010 7047     		bx	lr
 501              	.L62:
 502 0012 00BF     		.align	2
 503              	.L61:
 504 0014 003C0240 		.word	1073888256
 505              		.cfi_endproc
 506              	.LFE135:
 508              		.section	.text.FLASH_GetFlagStatus,"ax",%progbits
 509              		.align	1
 510              		.global	FLASH_GetFlagStatus
 511              		.thumb
 512              		.thumb_func
 514              	FLASH_GetFlagStatus:
 515              	.LFB136:
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Checks whether the specified FLASH flag is set or not.
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flag to check.
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_BSY: FLASH Busy flag
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The new state of FLASH_FLAG (SET or RESET).
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG)
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 516              		.loc 1 933 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521              	.LVL15:
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FlagStatus bitstatus = RESET;
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG));
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
 522              		.loc 1 938 0
 523 0000 034B     		ldr	r3, .L64
 524 0002 DB68     		ldr	r3, [r3, #12]
 525              	.LVL16:
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     bitstatus = SET;
 526              		.loc 1 940 0
 527 0004 1842     		tst	r0, r3
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     bitstatus = RESET;
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the new state of FLASH_FLAG (SET or RESET) */
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return bitstatus; 
 528              		.loc 1 947 0
 529 0006 0CBF     		ite	eq
 530 0008 0020     		moveq	r0, #0
 531 000a 0120     		movne	r0, #1
 532              	.LVL17:
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 533              		.loc 1 948 0
 534 000c 7047     		bx	lr
 535              	.L65:
 536 000e 00BF     		.align	2
 537              	.L64:
 538 0010 003C0240 		.word	1073888256
 539              		.cfi_endproc
 540              	.LFE136:
 542              		.section	.text.FLASH_ClearFlag,"ax",%progbits
 543              		.align	1
 544              		.global	FLASH_ClearFlag
 545              		.thumb
 546              		.thumb_func
 548              	FLASH_ClearFlag:
 549              	.LFB137:
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Clears the FLASH's pending flags.
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flags to clear.
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag 
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_ClearFlag(uint32_t FLASH_FLAG)
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 550              		.loc 1 963 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 555              	.LVL18:
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG));
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Clear the flags */
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->SR = FLASH_FLAG;
 556              		.loc 1 968 0
 557 0000 014B     		ldr	r3, .L67
 558 0002 D860     		str	r0, [r3, #12]
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 559              		.loc 1 969 0
 560 0004 7047     		bx	lr
 561              	.L68:
 562 0006 00BF     		.align	2
 563              	.L67:
 564 0008 003C0240 		.word	1073888256
 565              		.cfi_endproc
 566              	.LFE137:
 568              		.section	.text.FLASH_GetStatus,"ax",%progbits
 569              		.align	1
 570              		.global	FLASH_GetStatus
 571              		.thumb
 572              		.thumb_func
 574              	FLASH_GetStatus:
 575              	.LFB138:
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Status.
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_GetStatus(void)
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 576              		.loc 1 978 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 581              	.LVL19:
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status flashstatus = FLASH_COMPLETE;
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 582              		.loc 1 981 0
 583 0000 0B4B     		ldr	r3, .L76
 584 0002 DA68     		ldr	r2, [r3, #12]
 585 0004 D003     		lsls	r0, r2, #15
 586 0006 0DD4     		bmi	.L72
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     flashstatus = FLASH_BUSY;
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else 
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {  
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     if((FLASH->SR & FLASH_FLAG_WRPERR) != (uint32_t)0x00)
 587              		.loc 1 987 0
 588 0008 DA68     		ldr	r2, [r3, #12]
 589 000a D106     		lsls	r1, r2, #27
 590 000c 0CD4     		bmi	.L73
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     { 
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       flashstatus = FLASH_ERROR_WRP;
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     else 
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     {
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       if((FLASH->SR & (uint32_t)0xEF) != (uint32_t)0x00)
 591              		.loc 1 993 0
 592 000e DA68     		ldr	r2, [r3, #12]
 593 0010 12F0EF0F 		tst	r2, #239
 594 0014 0AD1     		bne	.L74
 595              	.LBB4:
 596              	.LBB5:
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       {
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         flashstatus = FLASH_ERROR_PROGRAM; 
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       }
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       else
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       {
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         if((FLASH->SR & FLASH_FLAG_OPERR) != (uint32_t)0x00)
 597              		.loc 1 999 0
 598 0016 DB68     		ldr	r3, [r3, #12]
 599 0018 13F0020F 		tst	r3, #2
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         {
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****           flashstatus = FLASH_ERROR_OPERATION;
 600              		.loc 1 1001 0
 601 001c 0CBF     		ite	eq
 602 001e 0820     		moveq	r0, #8
 603 0020 0720     		movne	r0, #7
 604 0022 7047     		bx	lr
 605              	.L72:
 606              	.LBE5:
 607              	.LBE4:
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     flashstatus = FLASH_BUSY;
 608              		.loc 1 983 0
 609 0024 0120     		movs	r0, #1
 610 0026 7047     		bx	lr
 611              	.L73:
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       flashstatus = FLASH_ERROR_WRP;
 612              		.loc 1 989 0
 613 0028 0520     		movs	r0, #5
 614 002a 7047     		bx	lr
 615              	.L74:
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         flashstatus = FLASH_ERROR_PROGRAM; 
 616              		.loc 1 995 0
 617 002c 0620     		movs	r0, #6
 618              	.LVL20:
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         }
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         else
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         {
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****           flashstatus = FLASH_COMPLETE;
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         }
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       }
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the FLASH Status */
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return flashstatus;
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 619              		.loc 1 1012 0
 620 002e 7047     		bx	lr
 621              	.L77:
 622              		.align	2
 623              	.L76:
 624 0030 003C0240 		.word	1073888256
 625              		.cfi_endproc
 626              	.LFE138:
 628              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 629              		.align	1
 630              		.global	FLASH_WaitForLastOperation
 631              		.thumb
 632              		.thumb_func
 634              	FLASH_WaitForLastOperation:
 635              	.LFB139:
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Waits for a FLASH operation to complete.
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_WaitForLastOperation(void)
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** { 
 636              		.loc 1 1021 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 8
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640 0000 07B5     		push	{r0, r1, r2, lr}
 641              	.LCFI0:
 642              		.cfi_def_cfa_offset 16
 643              		.cfi_offset 14, -4
 644              		.cfi_offset 2, -8
 645              		.cfi_offset 1, -12
 646              		.cfi_offset 0, -16
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   __IO FLASH_Status status = FLASH_COMPLETE;
 647              		.loc 1 1022 0
 648 0002 0823     		movs	r3, #8
 649 0004 8DF80730 		strb	r3, [sp, #7]
 650              	.LVL21:
 651              	.L80:
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check for the FLASH Status */
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_GetStatus();
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      flag will be set */
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   while(status == FLASH_BUSY)
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_GetStatus();
 652              		.loc 1 1032 0
 653 0008 FFF7FEFF 		bl	FLASH_GetStatus
 654 000c 8DF80700 		strb	r0, [sp, #7]
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   while(status == FLASH_BUSY)
 655              		.loc 1 1030 0
 656 0010 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 657              	.LVL22:
 658 0014 012B     		cmp	r3, #1
 659 0016 F7D0     		beq	.L80
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the operation status */
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 660              		.loc 1 1035 0
 661 0018 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 662              	.LVL23:
 663              	.LVL24:
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 664              		.loc 1 1036 0
 665 001c 0EBD     		pop	{r1, r2, r3, pc}
 666              		.cfi_endproc
 667              	.LFE139:
 669              		.section	.text.FLASH_OB_Launch,"ax",%progbits
 670              		.align	1
 671              		.global	FLASH_OB_Launch
 672              		.thumb
 673              		.thumb_func
 675              	FLASH_OB_Launch:
 676              	.LFB130:
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 677              		.loc 1 805 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682              	.LVL25:
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= FLASH_OPTCR_OPTSTRT;
 683              		.loc 1 809 0
 684 0000 034B     		ldr	r3, .L82
 685 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 686 0004 42F00202 		orr	r2, r2, #2
 687 0008 1A70     		strb	r2, [r3, #0]
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 688              		.loc 1 815 0
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 689              		.loc 1 812 0
 690 000a FFF7FEBF 		b	FLASH_WaitForLastOperation
 691              	.L83:
 692 000e 00BF     		.align	2
 693              	.L82:
 694 0010 143C0240 		.word	1073888276
 695              		.cfi_endproc
 696              	.LFE130:
 698              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 699              		.align	1
 700              		.global	FLASH_OB_UserConfig
 701              		.thumb
 702              		.thumb_func
 704              	FLASH_OB_UserConfig:
 705              	.LFB128:
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 706              		.loc 1 755 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              	.LVL26:
 711 0000 70B5     		push	{r4, r5, r6, lr}
 712              	.LCFI1:
 713              		.cfi_def_cfa_offset 16
 714              		.cfi_offset 14, -4
 715              		.cfi_offset 6, -8
 716              		.cfi_offset 5, -12
 717              		.cfi_offset 4, -16
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 718              		.loc 1 755 0
 719 0002 0446     		mov	r4, r0
 720 0004 0D46     		mov	r5, r1
 721 0006 1646     		mov	r6, r2
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 722              		.loc 1 765 0
 723 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 724              	.LVL27:
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 725              		.loc 1 767 0
 726 000c 0828     		cmp	r0, #8
 727 000e 07D1     		bne	.L84
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0F); 
 728              		.loc 1 770 0
 729 0010 044B     		ldr	r3, .L86
 730 0012 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 731              	.LVL28:
 732 0014 02F00F02 		and	r2, r2, #15
 733              	.LVL29:
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = OB_IWDG | (uint8_t)(OB_STDBY | (uint8_t)(OB_STOP | ((uin
 734              		.loc 1 773 0
 735 0018 1443     		orrs	r4, r4, r2
 736 001a 2543     		orrs	r5, r5, r4
 737 001c 2E43     		orrs	r6, r6, r5
 738 001e 1E70     		strb	r6, [r3, #0]
 739              	.L84:
 740 0020 70BD     		pop	{r4, r5, r6, pc}
 741              	.L87:
 742 0022 00BF     		.align	2
 743              	.L86:
 744 0024 143C0240 		.word	1073888276
 745              		.cfi_endproc
 746              	.LFE128:
 748              		.section	.text.FLASH_OB_RDPConfig,"ax",%progbits
 749              		.align	1
 750              		.global	FLASH_OB_RDPConfig
 751              		.thumb
 752              		.thumb_func
 754              	FLASH_OB_RDPConfig:
 755              	.LFB127:
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 756              		.loc 1 723 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760              	.LVL30:
 761 0000 10B5     		push	{r4, lr}
 762              	.LCFI2:
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 14, -4
 765              		.cfi_offset 4, -8
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 766              		.loc 1 723 0
 767 0002 0446     		mov	r4, r0
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 768              		.loc 1 729 0
 769 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 770              	.LVL31:
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 771              		.loc 1 731 0
 772 0008 0828     		cmp	r0, #8
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)OPTCR_BYTE1_ADDRESS = OB_RDP;
 773              		.loc 1 733 0
 774 000a 04BF     		itt	eq
 775 000c 014B     		ldreq	r3, .L90
 776 000e 1C70     		strbeq	r4, [r3, #0]
 777 0010 10BD     		pop	{r4, pc}
 778              	.L91:
 779 0012 00BF     		.align	2
 780              	.L90:
 781 0014 153C0240 		.word	1073888277
 782              		.cfi_endproc
 783              	.LFE127:
 785              		.section	.text.FLASH_OB_WRPConfig,"ax",%progbits
 786              		.align	1
 787              		.global	FLASH_OB_WRPConfig
 788              		.thumb
 789              		.thumb_func
 791              	FLASH_OB_WRPConfig:
 792              	.LFB126:
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** { 
 793              		.loc 1 688 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL32:
 798 0000 38B5     		push	{r3, r4, r5, lr}
 799              	.LCFI3:
 800              		.cfi_def_cfa_offset 16
 801              		.cfi_offset 14, -4
 802              		.cfi_offset 5, -8
 803              		.cfi_offset 4, -12
 804              		.cfi_offset 3, -16
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** { 
 805              		.loc 1 688 0
 806 0002 0446     		mov	r4, r0
 807 0004 0D46     		mov	r5, r1
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 808              		.loc 1 695 0
 809 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 810              	.LVL33:
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 811              		.loc 1 697 0
 812 000a 0828     		cmp	r0, #8
 813 000c 0AD1     		bne	.L92
 814 000e 064B     		ldr	r3, .L95
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~OB_WRP);
 815              		.loc 1 701 0
 816 0010 1A88     		ldrh	r2, [r3, #0]
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     if(NewState != DISABLE)
 817              		.loc 1 699 0
 818 0012 25B1     		cbz	r5, .L94
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~OB_WRP);
 819              		.loc 1 701 0
 820 0014 92B2     		uxth	r2, r2
 821 0016 22EA0404 		bic	r4, r2, r4
 822              	.LVL34:
 823 001a 1C80     		strh	r4, [r3, #0]	@ movhi
 824 001c 38BD     		pop	{r3, r4, r5, pc}
 825              	.LVL35:
 826              	.L94:
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)OB_WRP;
 827              		.loc 1 705 0
 828 001e 1443     		orrs	r4, r4, r2
 829              	.LVL36:
 830 0020 A4B2     		uxth	r4, r4
 831 0022 1C80     		strh	r4, [r3, #0]	@ movhi
 832              	.L92:
 833 0024 38BD     		pop	{r3, r4, r5, pc}
 834              	.L96:
 835 0026 00BF     		.align	2
 836              	.L95:
 837 0028 163C0240 		.word	1073888278
 838              		.cfi_endproc
 839              	.LFE126:
 841              		.section	.text.FLASH_ProgramByte,"ax",%progbits
 842              		.align	1
 843              		.global	FLASH_ProgramByte
 844              		.thumb
 845              		.thumb_func
 847              	FLASH_ProgramByte:
 848              	.LFB123:
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 849              		.loc 1 572 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              	.LVL37:
 854 0000 70B5     		push	{r4, r5, r6, lr}
 855              	.LCFI4:
 856              		.cfi_def_cfa_offset 16
 857              		.cfi_offset 14, -4
 858              		.cfi_offset 6, -8
 859              		.cfi_offset 5, -12
 860              		.cfi_offset 4, -16
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 861              		.loc 1 572 0
 862 0002 0446     		mov	r4, r0
 863 0004 0E46     		mov	r6, r1
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 864              		.loc 1 579 0
 865 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 866              	.LVL38:
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 867              		.loc 1 581 0
 868 000a 0828     		cmp	r0, #8
 869 000c 11D1     		bne	.L98
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 870              		.loc 1 584 0
 871 000e 094D     		ldr	r5, .L99
 872 0010 2B69     		ldr	r3, [r5, #16]
 873 0012 23F44073 		bic	r3, r3, #768
 874 0016 2B61     		str	r3, [r5, #16]
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 875              		.loc 1 585 0
 876 0018 2B69     		ldr	r3, [r5, #16]
 877 001a 2B61     		str	r3, [r5, #16]
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 878              		.loc 1 586 0
 879 001c 2B69     		ldr	r3, [r5, #16]
 880 001e 43F00103 		orr	r3, r3, #1
 881 0022 2B61     		str	r3, [r5, #16]
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)Address = Data;
 882              		.loc 1 588 0
 883 0024 2670     		strb	r6, [r4, #0]
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 884              		.loc 1 591 0
 885 0026 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 886              	.LVL39:
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 887              		.loc 1 594 0
 888 002a 2B69     		ldr	r3, [r5, #16]
 889 002c 23F00103 		bic	r3, r3, #1
 890 0030 2B61     		str	r3, [r5, #16]
 891              	.LVL40:
 892              	.L98:
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 893              		.loc 1 599 0
 894 0032 70BD     		pop	{r4, r5, r6, pc}
 895              	.L100:
 896              		.align	2
 897              	.L99:
 898 0034 003C0240 		.word	1073888256
 899              		.cfi_endproc
 900              	.LFE123:
 902              		.section	.text.FLASH_ProgramHalfWord,"ax",%progbits
 903              		.align	1
 904              		.global	FLASH_ProgramHalfWord
 905              		.thumb
 906              		.thumb_func
 908              	FLASH_ProgramHalfWord:
 909              	.LFB122:
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 910              		.loc 1 534 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              	.LVL41:
 915 0000 70B5     		push	{r4, r5, r6, lr}
 916              	.LCFI5:
 917              		.cfi_def_cfa_offset 16
 918              		.cfi_offset 14, -4
 919              		.cfi_offset 6, -8
 920              		.cfi_offset 5, -12
 921              		.cfi_offset 4, -16
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 922              		.loc 1 534 0
 923 0002 0446     		mov	r4, r0
 924 0004 0E46     		mov	r6, r1
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 925              		.loc 1 541 0
 926 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 927              	.LVL42:
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 928              		.loc 1 543 0
 929 000a 0828     		cmp	r0, #8
 930 000c 13D1     		bne	.L102
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 931              		.loc 1 546 0
 932 000e 0A4D     		ldr	r5, .L103
 933 0010 2B69     		ldr	r3, [r5, #16]
 934 0012 23F44073 		bic	r3, r3, #768
 935 0016 2B61     		str	r3, [r5, #16]
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 936              		.loc 1 547 0
 937 0018 2B69     		ldr	r3, [r5, #16]
 938 001a 43F48073 		orr	r3, r3, #256
 939 001e 2B61     		str	r3, [r5, #16]
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 940              		.loc 1 548 0
 941 0020 2B69     		ldr	r3, [r5, #16]
 942 0022 43F00103 		orr	r3, r3, #1
 943 0026 2B61     		str	r3, [r5, #16]
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint16_t*)Address = Data;
 944              		.loc 1 550 0
 945 0028 2680     		strh	r6, [r4, #0]	@ movhi
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 946              		.loc 1 553 0
 947 002a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 948              	.LVL43:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 949              		.loc 1 556 0
 950 002e 2B69     		ldr	r3, [r5, #16]
 951 0030 23F00103 		bic	r3, r3, #1
 952 0034 2B61     		str	r3, [r5, #16]
 953              	.LVL44:
 954              	.L102:
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 955              		.loc 1 560 0
 956 0036 70BD     		pop	{r4, r5, r6, pc}
 957              	.L104:
 958              		.align	2
 959              	.L103:
 960 0038 003C0240 		.word	1073888256
 961              		.cfi_endproc
 962              	.LFE122:
 964              		.section	.text.FLASH_ProgramWord,"ax",%progbits
 965              		.align	1
 966              		.global	FLASH_ProgramWord
 967              		.thumb
 968              		.thumb_func
 970              	FLASH_ProgramWord:
 971              	.LFB121:
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 972              		.loc 1 496 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              	.LVL45:
 977 0000 70B5     		push	{r4, r5, r6, lr}
 978              	.LCFI6:
 979              		.cfi_def_cfa_offset 16
 980              		.cfi_offset 14, -4
 981              		.cfi_offset 6, -8
 982              		.cfi_offset 5, -12
 983              		.cfi_offset 4, -16
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 984              		.loc 1 496 0
 985 0002 0446     		mov	r4, r0
 986 0004 0E46     		mov	r6, r1
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 987              		.loc 1 503 0
 988 0006 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 989              	.LVL46:
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 990              		.loc 1 505 0
 991 000a 0828     		cmp	r0, #8
 992 000c 13D1     		bne	.L106
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 993              		.loc 1 508 0
 994 000e 0A4D     		ldr	r5, .L107
 995 0010 2B69     		ldr	r3, [r5, #16]
 996 0012 23F44073 		bic	r3, r3, #768
 997 0016 2B61     		str	r3, [r5, #16]
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 998              		.loc 1 509 0
 999 0018 2B69     		ldr	r3, [r5, #16]
 1000 001a 43F40073 		orr	r3, r3, #512
 1001 001e 2B61     		str	r3, [r5, #16]
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1002              		.loc 1 510 0
 1003 0020 2B69     		ldr	r3, [r5, #16]
 1004 0022 43F00103 		orr	r3, r3, #1
 1005 0026 2B61     		str	r3, [r5, #16]
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint32_t*)Address = Data;
 1006              		.loc 1 512 0
 1007 0028 2660     		str	r6, [r4, #0]
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 1008              		.loc 1 515 0
 1009 002a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1010              	.LVL47:
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 1011              		.loc 1 518 0
 1012 002e 2B69     		ldr	r3, [r5, #16]
 1013 0030 23F00103 		bic	r3, r3, #1
 1014 0034 2B61     		str	r3, [r5, #16]
 1015              	.LVL48:
 1016              	.L106:
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1017              		.loc 1 522 0
 1018 0036 70BD     		pop	{r4, r5, r6, pc}
 1019              	.L108:
 1020              		.align	2
 1021              	.L107:
 1022 0038 003C0240 		.word	1073888256
 1023              		.cfi_endproc
 1024              	.LFE121:
 1026              		.section	.text.FLASH_ProgramDoubleWord,"ax",%progbits
 1027              		.align	1
 1028              		.global	FLASH_ProgramDoubleWord
 1029              		.thumb
 1030              		.thumb_func
 1032              	FLASH_ProgramDoubleWord:
 1033              	.LFB120:
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1034              		.loc 1 458 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              	.LVL49:
 1039 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1040              	.LCFI7:
 1041              		.cfi_def_cfa_offset 24
 1042              		.cfi_offset 14, -4
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 6, -12
 1045              		.cfi_offset 5, -16
 1046              		.cfi_offset 4, -20
 1047              		.cfi_offset 3, -24
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1048              		.loc 1 458 0
 1049 0002 0646     		mov	r6, r0
 1050 0004 1446     		mov	r4, r2
 1051 0006 1D46     		mov	r5, r3
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1052              		.loc 1 465 0
 1053 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1054              	.LVL50:
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 1055              		.loc 1 467 0
 1056 000c 0828     		cmp	r0, #8
 1057 000e 14D1     		bne	.L110
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 1058              		.loc 1 470 0
 1059 0010 0A4F     		ldr	r7, .L111
 1060 0012 3B69     		ldr	r3, [r7, #16]
 1061 0014 23F44073 		bic	r3, r3, #768
 1062 0018 3B61     		str	r3, [r7, #16]
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 1063              		.loc 1 471 0
 1064 001a 3B69     		ldr	r3, [r7, #16]
 1065 001c 43F44073 		orr	r3, r3, #768
 1066 0020 3B61     		str	r3, [r7, #16]
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 1067              		.loc 1 472 0
 1068 0022 3B69     		ldr	r3, [r7, #16]
 1069 0024 43F00103 		orr	r3, r3, #1
 1070 0028 3B61     		str	r3, [r7, #16]
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint64_t*)Address = Data;
 1071              		.loc 1 474 0
 1072 002a C6E90045 		strd	r4, [r6]
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 1073              		.loc 1 477 0
 1074 002e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1075              	.LVL51:
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 1076              		.loc 1 480 0
 1077 0032 3B69     		ldr	r3, [r7, #16]
 1078 0034 23F00103 		bic	r3, r3, #1
 1079 0038 3B61     		str	r3, [r7, #16]
 1080              	.LVL52:
 1081              	.L110:
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1082              		.loc 1 484 0
 1083 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1084              	.L112:
 1085              		.align	2
 1086              	.L111:
 1087 003c 003C0240 		.word	1073888256
 1088              		.cfi_endproc
 1089              	.LFE120:
 1091              		.section	.text.FLASH_EraseAllSectors,"ax",%progbits
 1092              		.align	1
 1093              		.global	FLASH_EraseAllSectors
 1094              		.thumb
 1095              		.thumb_func
 1097              	FLASH_EraseAllSectors:
 1098              	.LFB119:
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1099              		.loc 1 405 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              	.LVL53:
 1104 0000 10B5     		push	{r4, lr}
 1105              	.LCFI8:
 1106              		.cfi_def_cfa_offset 8
 1107              		.cfi_offset 14, -4
 1108              		.cfi_offset 4, -8
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1109              		.loc 1 405 0
 1110 0002 0446     		mov	r4, r0
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1111              		.loc 1 410 0
 1112 0004 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1113              	.LVL54:
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 1114              		.loc 1 415 0
 1115 0008 2346     		mov	r3, r4
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1116              		.loc 1 410 0
 1117 000a 0246     		mov	r2, r0
 1118              	.LVL55:
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 1119              		.loc 1 413 0
 1120 000c 54B1     		cbz	r4, .L114
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 1121              		.loc 1 417 0
 1122 000e 012C     		cmp	r4, #1
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 1123              		.loc 1 419 0
 1124 0010 08BF     		it	eq
 1125 0012 4FF48073 		moveq	r3, #256
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 1126              		.loc 1 417 0
 1127 0016 05D0     		beq	.L114
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 1128              		.loc 1 423 0
 1129 0018 022C     		cmp	r4, #2
 1130 001a 14BF     		ite	ne
 1131 001c 4FF44073 		movne	r3, #768
 1132 0020 4FF40073 		moveq	r3, #512
 1133              	.L114:
 1134              	.LVL56:
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 1135              		.loc 1 429 0
 1136 0024 082A     		cmp	r2, #8
 1137 0026 15D1     		bne	.L115
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR &= CR_PSIZE_MASK;
 1138              		.loc 1 432 0
 1139 0028 0B4C     		ldr	r4, .L119
 1140 002a 2269     		ldr	r2, [r4, #16]
 1141 002c 22F44072 		bic	r2, r2, #768
 1142 0030 2261     		str	r2, [r4, #16]
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 1143              		.loc 1 433 0
 1144 0032 2269     		ldr	r2, [r4, #16]
 1145 0034 1343     		orrs	r3, r3, r2
 1146              	.LVL57:
 1147 0036 2361     		str	r3, [r4, #16]
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER;
 1148              		.loc 1 434 0
 1149 0038 2369     		ldr	r3, [r4, #16]
 1150 003a 43F00403 		orr	r3, r3, #4
 1151 003e 2361     		str	r3, [r4, #16]
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 1152              		.loc 1 435 0
 1153 0040 2369     		ldr	r3, [r4, #16]
 1154 0042 43F48033 		orr	r3, r3, #65536
 1155 0046 2361     		str	r3, [r4, #16]
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 1156              		.loc 1 438 0
 1157 0048 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1158              	.LVL58:
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER);
 1159              		.loc 1 441 0
 1160 004c 2369     		ldr	r3, [r4, #16]
 1161 004e 23F00403 		bic	r3, r3, #4
 1162 0052 2361     		str	r3, [r4, #16]
 1163              	.LVL59:
 1164              	.L115:
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1165              		.loc 1 446 0
 1166 0054 10BD     		pop	{r4, pc}
 1167              	.L120:
 1168 0056 00BF     		.align	2
 1169              	.L119:
 1170 0058 003C0240 		.word	1073888256
 1171              		.cfi_endproc
 1172              	.LFE119:
 1174              		.section	.text.FLASH_EraseSector,"ax",%progbits
 1175              		.align	1
 1176              		.global	FLASH_EraseSector
 1177              		.thumb
 1178              		.thumb_func
 1180              	FLASH_EraseSector:
 1181              	.LFB118:
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1182              		.loc 1 340 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 1186              	.LVL60:
 1187 0000 70B5     		push	{r4, r5, r6, lr}
 1188              	.LCFI9:
 1189              		.cfi_def_cfa_offset 16
 1190              		.cfi_offset 14, -4
 1191              		.cfi_offset 6, -8
 1192              		.cfi_offset 5, -12
 1193              		.cfi_offset 4, -16
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1194              		.loc 1 340 0
 1195 0002 0446     		mov	r4, r0
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 1196              		.loc 1 350 0
 1197 0004 0E46     		mov	r6, r1
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 1198              		.loc 1 348 0
 1199 0006 51B1     		cbz	r1, .L122
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 1200              		.loc 1 352 0
 1201 0008 0129     		cmp	r1, #1
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 1202              		.loc 1 354 0
 1203 000a 08BF     		it	eq
 1204 000c 4FF48076 		moveq	r6, #256
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 1205              		.loc 1 352 0
 1206 0010 05D0     		beq	.L122
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 1207              		.loc 1 358 0
 1208 0012 0229     		cmp	r1, #2
 1209 0014 14BF     		ite	ne
 1210 0016 4FF44076 		movne	r6, #768
 1211 001a 4FF40076 		moveq	r6, #512
 1212              	.L122:
 1213              	.LVL61:
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1214              		.loc 1 365 0
 1215 001e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1216              	.LVL62:
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 1217              		.loc 1 367 0
 1218 0022 0828     		cmp	r0, #8
 1219 0024 1ED1     		bne	.L123
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 1220              		.loc 1 370 0
 1221 0026 104D     		ldr	r5, .L127
 1222 0028 2B69     		ldr	r3, [r5, #16]
 1223 002a 23F44073 		bic	r3, r3, #768
 1224 002e 2B61     		str	r3, [r5, #16]
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 1225              		.loc 1 371 0
 1226 0030 2B69     		ldr	r3, [r5, #16]
 1227 0032 1E43     		orrs	r6, r6, r3
 1228              	.LVL63:
 1229 0034 2E61     		str	r6, [r5, #16]
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 1230              		.loc 1 372 0
 1231 0036 2B69     		ldr	r3, [r5, #16]
 1232 0038 23F0F803 		bic	r3, r3, #248
 1233 003c 2B61     		str	r3, [r5, #16]
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 1234              		.loc 1 373 0
 1235 003e 2B69     		ldr	r3, [r5, #16]
 1236 0040 43F00203 		orr	r3, r3, #2
 1237 0044 1C43     		orrs	r4, r4, r3
 1238              	.LVL64:
 1239 0046 2C61     		str	r4, [r5, #16]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 1240              		.loc 1 374 0
 1241 0048 2B69     		ldr	r3, [r5, #16]
 1242 004a 43F48033 		orr	r3, r3, #65536
 1243 004e 2B61     		str	r3, [r5, #16]
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 1244              		.loc 1 377 0
 1245 0050 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1246              	.LVL65:
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_SER);
 1247              		.loc 1 380 0
 1248 0054 2B69     		ldr	r3, [r5, #16]
 1249 0056 23F00203 		bic	r3, r3, #2
 1250 005a 2B61     		str	r3, [r5, #16]
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 1251              		.loc 1 381 0
 1252 005c 2B69     		ldr	r3, [r5, #16]
 1253 005e 23F0F803 		bic	r3, r3, #248
 1254 0062 2B61     		str	r3, [r5, #16]
 1255              	.LVL66:
 1256              	.L123:
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1257              		.loc 1 385 0
 1258 0064 70BD     		pop	{r4, r5, r6, pc}
 1259              	.L128:
 1260 0066 00BF     		.align	2
 1261              	.L127:
 1262 0068 003C0240 		.word	1073888256
 1263              		.cfi_endproc
 1264              	.LFE118:
 1266              		.text
 1267              	.Letext0:
 1268              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 1269              		.file 3 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4x
 1270              		.file 4 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_
 1271              		.file 5 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_flash.c
  C:\Temp\ccfpUG1r.s:19     .text.FLASH_SetLatency:00000000 $t
  C:\Temp\ccfpUG1r.s:24     .text.FLASH_SetLatency:00000000 FLASH_SetLatency
  C:\Temp\ccfpUG1r.s:43     .text.FLASH_SetLatency:00000008 $d
  C:\Temp\ccfpUG1r.s:48     .text.FLASH_PrefetchBufferCmd:00000000 $t
  C:\Temp\ccfpUG1r.s:53     .text.FLASH_PrefetchBufferCmd:00000000 FLASH_PrefetchBufferCmd
  C:\Temp\ccfpUG1r.s:78     .text.FLASH_PrefetchBufferCmd:00000014 $d
  C:\Temp\ccfpUG1r.s:83     .text.FLASH_InstructionCacheCmd:00000000 $t
  C:\Temp\ccfpUG1r.s:88     .text.FLASH_InstructionCacheCmd:00000000 FLASH_InstructionCacheCmd
  C:\Temp\ccfpUG1r.s:113    .text.FLASH_InstructionCacheCmd:00000014 $d
  C:\Temp\ccfpUG1r.s:118    .text.FLASH_DataCacheCmd:00000000 $t
  C:\Temp\ccfpUG1r.s:123    .text.FLASH_DataCacheCmd:00000000 FLASH_DataCacheCmd
  C:\Temp\ccfpUG1r.s:148    .text.FLASH_DataCacheCmd:00000014 $d
  C:\Temp\ccfpUG1r.s:153    .text.FLASH_InstructionCacheReset:00000000 $t
  C:\Temp\ccfpUG1r.s:158    .text.FLASH_InstructionCacheReset:00000000 FLASH_InstructionCacheReset
  C:\Temp\ccfpUG1r.s:175    .text.FLASH_InstructionCacheReset:0000000c $d
  C:\Temp\ccfpUG1r.s:180    .text.FLASH_DataCacheReset:00000000 $t
  C:\Temp\ccfpUG1r.s:185    .text.FLASH_DataCacheReset:00000000 FLASH_DataCacheReset
  C:\Temp\ccfpUG1r.s:202    .text.FLASH_DataCacheReset:0000000c $d
  C:\Temp\ccfpUG1r.s:207    .text.FLASH_Unlock:00000000 $t
  C:\Temp\ccfpUG1r.s:212    .text.FLASH_Unlock:00000000 FLASH_Unlock
  C:\Temp\ccfpUG1r.s:234    .text.FLASH_Unlock:00000014 $d
  C:\Temp\ccfpUG1r.s:240    .text.FLASH_Lock:00000000 $t
  C:\Temp\ccfpUG1r.s:245    .text.FLASH_Lock:00000000 FLASH_Lock
  C:\Temp\ccfpUG1r.s:262    .text.FLASH_Lock:0000000c $d
  C:\Temp\ccfpUG1r.s:267    .text.FLASH_OB_Unlock:00000000 $t
  C:\Temp\ccfpUG1r.s:272    .text.FLASH_OB_Unlock:00000000 FLASH_OB_Unlock
  C:\Temp\ccfpUG1r.s:294    .text.FLASH_OB_Unlock:00000014 $d
  C:\Temp\ccfpUG1r.s:300    .text.FLASH_OB_Lock:00000000 $t
  C:\Temp\ccfpUG1r.s:305    .text.FLASH_OB_Lock:00000000 FLASH_OB_Lock
  C:\Temp\ccfpUG1r.s:322    .text.FLASH_OB_Lock:0000000c $d
  C:\Temp\ccfpUG1r.s:327    .text.FLASH_OB_BORConfig:00000000 $t
  C:\Temp\ccfpUG1r.s:332    .text.FLASH_OB_BORConfig:00000000 FLASH_OB_BORConfig
  C:\Temp\ccfpUG1r.s:355    .text.FLASH_OB_BORConfig:00000014 $d
  C:\Temp\ccfpUG1r.s:360    .text.FLASH_OB_GetUser:00000000 $t
  C:\Temp\ccfpUG1r.s:365    .text.FLASH_OB_GetUser:00000000 FLASH_OB_GetUser
  C:\Temp\ccfpUG1r.s:381    .text.FLASH_OB_GetUser:0000000c $d
  C:\Temp\ccfpUG1r.s:386    .text.FLASH_OB_GetWRP:00000000 $t
  C:\Temp\ccfpUG1r.s:391    .text.FLASH_OB_GetWRP:00000000 FLASH_OB_GetWRP
  C:\Temp\ccfpUG1r.s:407    .text.FLASH_OB_GetWRP:00000008 $d
  C:\Temp\ccfpUG1r.s:412    .text.FLASH_OB_GetRDP:00000000 $t
  C:\Temp\ccfpUG1r.s:417    .text.FLASH_OB_GetRDP:00000000 FLASH_OB_GetRDP
  C:\Temp\ccfpUG1r.s:440    .text.FLASH_OB_GetRDP:0000000c $d
  C:\Temp\ccfpUG1r.s:445    .text.FLASH_OB_GetBOR:00000000 $t
  C:\Temp\ccfpUG1r.s:450    .text.FLASH_OB_GetBOR:00000000 FLASH_OB_GetBOR
  C:\Temp\ccfpUG1r.s:466    .text.FLASH_OB_GetBOR:0000000c $d
  C:\Temp\ccfpUG1r.s:471    .text.FLASH_ITConfig:00000000 $t
  C:\Temp\ccfpUG1r.s:476    .text.FLASH_ITConfig:00000000 FLASH_ITConfig
  C:\Temp\ccfpUG1r.s:504    .text.FLASH_ITConfig:00000014 $d
  C:\Temp\ccfpUG1r.s:509    .text.FLASH_GetFlagStatus:00000000 $t
  C:\Temp\ccfpUG1r.s:514    .text.FLASH_GetFlagStatus:00000000 FLASH_GetFlagStatus
  C:\Temp\ccfpUG1r.s:538    .text.FLASH_GetFlagStatus:00000010 $d
  C:\Temp\ccfpUG1r.s:543    .text.FLASH_ClearFlag:00000000 $t
  C:\Temp\ccfpUG1r.s:548    .text.FLASH_ClearFlag:00000000 FLASH_ClearFlag
  C:\Temp\ccfpUG1r.s:564    .text.FLASH_ClearFlag:00000008 $d
  C:\Temp\ccfpUG1r.s:569    .text.FLASH_GetStatus:00000000 $t
  C:\Temp\ccfpUG1r.s:574    .text.FLASH_GetStatus:00000000 FLASH_GetStatus
  C:\Temp\ccfpUG1r.s:624    .text.FLASH_GetStatus:00000030 $d
  C:\Temp\ccfpUG1r.s:629    .text.FLASH_WaitForLastOperation:00000000 $t
  C:\Temp\ccfpUG1r.s:634    .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
  C:\Temp\ccfpUG1r.s:670    .text.FLASH_OB_Launch:00000000 $t
  C:\Temp\ccfpUG1r.s:675    .text.FLASH_OB_Launch:00000000 FLASH_OB_Launch
  C:\Temp\ccfpUG1r.s:694    .text.FLASH_OB_Launch:00000010 $d
  C:\Temp\ccfpUG1r.s:699    .text.FLASH_OB_UserConfig:00000000 $t
  C:\Temp\ccfpUG1r.s:704    .text.FLASH_OB_UserConfig:00000000 FLASH_OB_UserConfig
  C:\Temp\ccfpUG1r.s:744    .text.FLASH_OB_UserConfig:00000024 $d
  C:\Temp\ccfpUG1r.s:749    .text.FLASH_OB_RDPConfig:00000000 $t
  C:\Temp\ccfpUG1r.s:754    .text.FLASH_OB_RDPConfig:00000000 FLASH_OB_RDPConfig
  C:\Temp\ccfpUG1r.s:781    .text.FLASH_OB_RDPConfig:00000014 $d
  C:\Temp\ccfpUG1r.s:786    .text.FLASH_OB_WRPConfig:00000000 $t
  C:\Temp\ccfpUG1r.s:791    .text.FLASH_OB_WRPConfig:00000000 FLASH_OB_WRPConfig
  C:\Temp\ccfpUG1r.s:837    .text.FLASH_OB_WRPConfig:00000028 $d
  C:\Temp\ccfpUG1r.s:842    .text.FLASH_ProgramByte:00000000 $t
  C:\Temp\ccfpUG1r.s:847    .text.FLASH_ProgramByte:00000000 FLASH_ProgramByte
  C:\Temp\ccfpUG1r.s:898    .text.FLASH_ProgramByte:00000034 $d
  C:\Temp\ccfpUG1r.s:903    .text.FLASH_ProgramHalfWord:00000000 $t
  C:\Temp\ccfpUG1r.s:908    .text.FLASH_ProgramHalfWord:00000000 FLASH_ProgramHalfWord
  C:\Temp\ccfpUG1r.s:960    .text.FLASH_ProgramHalfWord:00000038 $d
  C:\Temp\ccfpUG1r.s:965    .text.FLASH_ProgramWord:00000000 $t
  C:\Temp\ccfpUG1r.s:970    .text.FLASH_ProgramWord:00000000 FLASH_ProgramWord
  C:\Temp\ccfpUG1r.s:1022   .text.FLASH_ProgramWord:00000038 $d
  C:\Temp\ccfpUG1r.s:1027   .text.FLASH_ProgramDoubleWord:00000000 $t
  C:\Temp\ccfpUG1r.s:1032   .text.FLASH_ProgramDoubleWord:00000000 FLASH_ProgramDoubleWord
  C:\Temp\ccfpUG1r.s:1087   .text.FLASH_ProgramDoubleWord:0000003c $d
  C:\Temp\ccfpUG1r.s:1092   .text.FLASH_EraseAllSectors:00000000 $t
  C:\Temp\ccfpUG1r.s:1097   .text.FLASH_EraseAllSectors:00000000 FLASH_EraseAllSectors
  C:\Temp\ccfpUG1r.s:1170   .text.FLASH_EraseAllSectors:00000058 $d
  C:\Temp\ccfpUG1r.s:1175   .text.FLASH_EraseSector:00000000 $t
  C:\Temp\ccfpUG1r.s:1180   .text.FLASH_EraseSector:00000000 FLASH_EraseSector
  C:\Temp\ccfpUG1r.s:1262   .text.FLASH_EraseSector:00000068 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
