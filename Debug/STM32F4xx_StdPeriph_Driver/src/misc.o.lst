   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"misc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_PriorityGroupConfig,"ax",%progbits
  19              		.align	1
  20              		.global	NVIC_PriorityGroupConfig
  21              		.thumb
  22              		.thumb_func
  24              	NVIC_PriorityGroupConfig:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/misc.c"
   1:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @file    misc.c
   4:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          to CMSIS functions).
   9:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          
  10:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @verbatim   
  11:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                               
  12:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  13:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                        How to configure Interrupts using driver 
  14:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  15:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * 
  16:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            This section provide functions allowing to configure the NVIC interrupts (IRQ).
  17:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            The Cortex-M4 exceptions are managed by CMSIS functions.
  18:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  19:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            1. Configure the NVIC Priority Grouping using NVIC_PriorityGroupConfig()
  20:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                function according to the following table.
  21:../STM32F4xx_StdPeriph_Driver/src/misc.c ****  
  22:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  The table below gives the allowed values of the pre-emption priority and subpriority according
  23:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  to the Priority Grouping configuration performed by NVIC_PriorityGroupConfig function
  24:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  25:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *      NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  26:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  27:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_0  |                0                  |            0-15             | 0
  28:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 4
  29:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  30:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_1  |                0-1                |            0-7              | 1
  31:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 3
  32:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  33:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_2  |                0-3                |            0-3              | 2
  34:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 2
  35:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  36:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_3  |                0-7                |            0-1              | 3
  37:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 1
  38:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  39:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_4  |                0-15               |            0                | 4
  40:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 0
  41:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  42:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  43:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            2. Enable and Configure the priority of the selected IRQ Channels using NVIC_Init() 
  44:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  45:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
  46:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *        The pending IRQ priority will be managed only by the subpriority.
  47:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  48:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  IRQ priority order (sorted by highest to lowest priority):
  49:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest pre-emption priority
  50:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest subpriority
  51:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest hardware priority (IRQ number)
  52:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  53:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @endverbatim
  54:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  55:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  56:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @attention
  57:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  58:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  59:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  60:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  61:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  62:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  63:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  64:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  65:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  66:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  67:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  68:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  69:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Includes ------------------------------------------------------------------*/
  70:../STM32F4xx_StdPeriph_Driver/src/misc.c **** #include "misc.h"
  71:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  72:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  73:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  74:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  75:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  76:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC 
  77:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief MISC driver modules
  78:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  79:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  80:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  81:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private typedef -----------------------------------------------------------*/
  82:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private define ------------------------------------------------------------*/
  83:../STM32F4xx_StdPeriph_Driver/src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  84:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  85:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private macro -------------------------------------------------------------*/
  86:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private variables ---------------------------------------------------------*/
  87:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private function prototypes -----------------------------------------------*/
  88:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private functions ---------------------------------------------------------*/
  89:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  90:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Functions
  91:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  92:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  93:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  94:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
  95:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  96:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  97:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
  98:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  99:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                4 bits for subpriority
 100:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
 101:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                3 bits for subpriority
 102:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
 103:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                2 bits for subpriority
 104:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
 105:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                1 bits for subpriority
 106:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
 107:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                0 bits for subpriority
 108:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 109:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 110:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 111:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 112:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
 113:../STM32F4xx_StdPeriph_Driver/src/misc.c **** {
  27              		.loc 1 113 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 114:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 115:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 116:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 117:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 118:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  33              		.loc 1 118 0
  34 0000 40F0BE60 		orr	r0, r0, #99614720
  35              	.LVL1:
  36 0004 024B     		ldr	r3, .L2
  37 0006 40F42020 		orr	r0, r0, #655360
  38 000a D860     		str	r0, [r3, #12]
 119:../STM32F4xx_StdPeriph_Driver/src/misc.c **** }
  39              		.loc 1 119 0
  40 000c 7047     		bx	lr
  41              	.L3:
  42 000e 00BF     		.align	2
  43              	.L2:
  44 0010 00ED00E0 		.word	-536810240
  45              		.cfi_endproc
  46              	.LFE110:
  48              		.section	.text.NVIC_Init,"ax",%progbits
  49              		.align	1
  50              		.global	NVIC_Init
  51              		.thumb
  52              		.thumb_func
  54              	NVIC_Init:
  55              	.LFB111:
 120:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 122:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 123:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         parameters in the NVIC_InitStruct.
 124:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 125:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         function should be called before. 
 126:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 127:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 128:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 129:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 130:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 131:../STM32F4xx_StdPeriph_Driver/src/misc.c **** {
  56              		.loc 1 131 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              	.LVL2:
 132:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
 133:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 134:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 135:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 136:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 137:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 138:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 139:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  61              		.loc 1 139 0
  62 0000 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 131:../STM32F4xx_StdPeriph_Driver/src/misc.c **** {
  63              		.loc 1 131 0
  64 0002 10B5     		push	{r4, lr}
  65              	.LCFI0:
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 14, -4
  68              		.cfi_offset 4, -8
  69              		.loc 1 139 0
  70 0004 FBB1     		cbz	r3, .L5
 140:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 141:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 142:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  71              		.loc 1 142 0
  72 0006 164B     		ldr	r3, .L8
 143:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppre = (0x4 - tmppriority);
 144:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 145:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 146:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  73              		.loc 1 146 0
  74 0008 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 142:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  75              		.loc 1 142 0
  76 000a DB68     		ldr	r3, [r3, #12]
 147:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
  77              		.loc 1 147 0
  78 000c 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
 142:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  79              		.loc 1 142 0
  80 000e DB43     		mvns	r3, r3
  81 0010 C3F30223 		ubfx	r3, r3, #8, #3
  82              	.LVL3:
 143:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppre = (0x4 - tmppriority);
  83              		.loc 1 143 0
  84 0014 C3F10401 		rsb	r1, r3, #4
 146:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  85              		.loc 1 146 0
  86 0018 C9B2     		uxtb	r1, r1
  87 001a 12FA01F1 		lsls	r1, r2, r1
 144:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
  88              		.loc 1 144 0
  89 001e 0F22     		movs	r2, #15
  90 0020 1A41     		asrs	r2, r2, r3
 146:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  91              		.loc 1 146 0
  92 0022 C9B2     		uxtb	r1, r1
  93              	.LVL4:
  94              		.loc 1 147 0
  95 0024 2240     		ands	r2, r2, r4
  96 0026 0A43     		orrs	r2, r2, r1
  97              	.LVL5:
 148:../STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 149:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
 150:../STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 151:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
  98              		.loc 1 151 0
  99 0028 0E4B     		ldr	r3, .L8+4
 100              	.LVL6:
 101 002a 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
 149:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
 102              		.loc 1 149 0
 103 002c 1201     		lsls	r2, r2, #4
 104              	.LVL7:
 105              		.loc 1 151 0
 106 002e CB18     		adds	r3, r1, r3
 149:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
 107              		.loc 1 149 0
 108 0030 D2B2     		uxtb	r2, r2
 109              	.LVL8:
 110              		.loc 1 151 0
 111 0032 83F80023 		strb	r2, [r3, #768]
 152:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 153:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 154:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 112              		.loc 1 154 0
 113 0036 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 155:../STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 114              		.loc 1 155 0
 115 0038 0122     		movs	r2, #1
 116              	.LVL9:
 154:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 117              		.loc 1 154 0
 118 003a 5909     		lsrs	r1, r3, #5
 119              		.loc 1 155 0
 120 003c 03F01F03 		and	r3, r3, #31
 121 0040 12FA03F3 		lsls	r3, r2, r3
 122 0044 07E0     		b	.L7
 123              	.LVL10:
 124              	.L5:
 156:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 157:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 158:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 159:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 160:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 125              		.loc 1 160 0
 126 0046 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 161:../STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 127              		.loc 1 161 0
 128 0048 0122     		movs	r2, #1
 160:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 129              		.loc 1 160 0
 130 004a 5909     		lsrs	r1, r3, #5
 131              		.loc 1 161 0
 132 004c 03F01F03 		and	r3, r3, #31
 133 0050 12FA03F3 		lsls	r3, r2, r3
 160:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 134              		.loc 1 160 0
 135 0054 2031     		adds	r1, r1, #32
 136              	.LVL11:
 137              	.L7:
 138 0056 034A     		ldr	r2, .L8+4
 139 0058 42F82130 		str	r3, [r2, r1, lsl #2]
 140 005c 10BD     		pop	{r4, pc}
 141              	.L9:
 142 005e 00BF     		.align	2
 143              	.L8:
 144 0060 00ED00E0 		.word	-536810240
 145 0064 00E100E0 		.word	-536813312
 146              		.cfi_endproc
 147              	.LFE111:
 149              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 150              		.align	1
 151              		.global	NVIC_SetVectorTable
 152              		.thumb
 153              		.thumb_func
 155              	NVIC_SetVectorTable:
 156              	.LFB112:
 162:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 163:../STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 164:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 165:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 166:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Sets the vector table location and Offset.
 167:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 168:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 169:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_RAM: Vector Table in internal SRAM.
 170:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_FLASH: Vector Table in internal FLASH.
 171:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x200.
 172:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 173:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 174:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 175:../STM32F4xx_StdPeriph_Driver/src/misc.c **** { 
 157              		.loc 1 175 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162              	.LVL12:
 176:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 177:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 178:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 179:../STM32F4xx_StdPeriph_Driver/src/misc.c ****    
 180:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 163              		.loc 1 180 0
 164 0000 21F06041 		bic	r1, r1, #-536870912
 165              	.LVL13:
 166 0004 21F07F01 		bic	r1, r1, #127
 167 0008 014B     		ldr	r3, .L11
 168 000a 0843     		orrs	r0, r0, r1
 169              	.LVL14:
 170 000c 9860     		str	r0, [r3, #8]
 181:../STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 171              		.loc 1 181 0
 172 000e 7047     		bx	lr
 173              	.L12:
 174              		.align	2
 175              	.L11:
 176 0010 00ED00E0 		.word	-536810240
 177              		.cfi_endproc
 178              	.LFE112:
 180              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 181              		.align	1
 182              		.global	NVIC_SystemLPConfig
 183              		.thumb
 184              		.thumb_func
 186              	NVIC_SystemLPConfig:
 187              	.LFB113:
 182:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 183:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 184:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 185:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 186:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 187:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SEVONPEND: Low Power SEV on Pend.
 188:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP: Low Power DEEPSLEEP request.
 189:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT: Low Power Sleep on Exit.
 190:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 191:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 193:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 194:../STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 188              		.loc 1 194 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193              	.LVL15:
 194 0000 044B     		ldr	r3, .L17
 195:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 196:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 197:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 198:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 199:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 200:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 201:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR |= LowPowerMode;
 195              		.loc 1 201 0
 196 0002 1A69     		ldr	r2, [r3, #16]
 199:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 197              		.loc 1 199 0
 198 0004 09B1     		cbz	r1, .L14
 199              		.loc 1 201 0
 200 0006 1043     		orrs	r0, r0, r2
 201              	.LVL16:
 202 0008 01E0     		b	.L16
 203              	.LVL17:
 204              	.L14:
 202:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 203:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 204:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 205:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 205              		.loc 1 205 0
 206 000a 22EA0000 		bic	r0, r2, r0
 207              	.LVL18:
 208              	.L16:
 209 000e 1861     		str	r0, [r3, #16]
 210 0010 7047     		bx	lr
 211              	.L18:
 212 0012 00BF     		.align	2
 213              	.L17:
 214 0014 00ED00E0 		.word	-536810240
 215              		.cfi_endproc
 216              	.LFE113:
 218              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 219              		.align	1
 220              		.global	SysTick_CLKSourceConfig
 221              		.thumb
 222              		.thumb_func
 224              	SysTick_CLKSourceConfig:
 225              	.LFB114:
 206:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 207:../STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 208:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 209:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 210:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the SysTick clock source.
 211:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 212:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 213:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 214:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 215:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 216:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 217:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 218:../STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 226              		.loc 1 218 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231              	.LVL19:
 232 0000 044B     		ldr	r3, .L23
 219:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 220:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 221:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 222:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 223:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 233              		.loc 1 223 0
 234 0002 1A68     		ldr	r2, [r3, #0]
 221:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 235              		.loc 1 221 0
 236 0004 0428     		cmp	r0, #4
 237              		.loc 1 223 0
 238 0006 0CBF     		ite	eq
 239 0008 42F00402 		orreq	r2, r2, #4
 224:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 225:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 226:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 227:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 240              		.loc 1 227 0
 241 000c 22F00402 		bicne	r2, r2, #4
 242 0010 1A60     		str	r2, [r3, #0]
 243 0012 7047     		bx	lr
 244              	.L24:
 245              		.align	2
 246              	.L23:
 247 0014 10E000E0 		.word	-536813552
 248              		.cfi_endproc
 249              	.LFE114:
 251              		.text
 252              	.Letext0:
 253              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 254              		.file 3 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Include/core_cm4.h"
 255              		.file 4 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4x
 256              		.file 5 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\STM32F4xx_StdPeriph_Driver\\inc/misc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 misc.c
  C:\Temp\ccbMa3oJ.s:19     .text.NVIC_PriorityGroupConfig:00000000 $t
  C:\Temp\ccbMa3oJ.s:24     .text.NVIC_PriorityGroupConfig:00000000 NVIC_PriorityGroupConfig
  C:\Temp\ccbMa3oJ.s:44     .text.NVIC_PriorityGroupConfig:00000010 $d
  C:\Temp\ccbMa3oJ.s:49     .text.NVIC_Init:00000000 $t
  C:\Temp\ccbMa3oJ.s:54     .text.NVIC_Init:00000000 NVIC_Init
  C:\Temp\ccbMa3oJ.s:144    .text.NVIC_Init:00000060 $d
  C:\Temp\ccbMa3oJ.s:150    .text.NVIC_SetVectorTable:00000000 $t
  C:\Temp\ccbMa3oJ.s:155    .text.NVIC_SetVectorTable:00000000 NVIC_SetVectorTable
  C:\Temp\ccbMa3oJ.s:176    .text.NVIC_SetVectorTable:00000010 $d
  C:\Temp\ccbMa3oJ.s:181    .text.NVIC_SystemLPConfig:00000000 $t
  C:\Temp\ccbMa3oJ.s:186    .text.NVIC_SystemLPConfig:00000000 NVIC_SystemLPConfig
  C:\Temp\ccbMa3oJ.s:214    .text.NVIC_SystemLPConfig:00000014 $d
  C:\Temp\ccbMa3oJ.s:219    .text.SysTick_CLKSourceConfig:00000000 $t
  C:\Temp\ccbMa3oJ.s:224    .text.SysTick_CLKSourceConfig:00000000 SysTick_CLKSourceConfig
  C:\Temp\ccbMa3oJ.s:247    .text.SysTick_CLKSourceConfig:00000014 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
