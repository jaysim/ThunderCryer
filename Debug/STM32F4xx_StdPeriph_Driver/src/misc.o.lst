   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"misc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_PriorityGroupConfig,"ax",%progbits
  19              		.align	2
  20              		.global	NVIC_PriorityGroupConfig
  21              		.thumb
  22              		.thumb_func
  24              	NVIC_PriorityGroupConfig:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/misc.c"
   1:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @file    misc.c
   4:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          to CMSIS functions).
   9:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          
  10:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @verbatim   
  11:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                               
  12:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  13:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                        How to configure Interrupts using driver 
  14:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  15:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * 
  16:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            This section provide functions allowing to configure the NVIC interrupts (IRQ).
  17:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            The Cortex-M4 exceptions are managed by CMSIS functions.
  18:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  19:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            1. Configure the NVIC Priority Grouping using NVIC_PriorityGroupConfig()
  20:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                function according to the following table.
  21:../STM32F4xx_StdPeriph_Driver/src/misc.c ****  
  22:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  The table below gives the allowed values of the pre-emption priority and subpriority according
  23:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  to the Priority Grouping configuration performed by NVIC_PriorityGroupConfig function
  24:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  25:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *      NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  26:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  27:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_0  |                0                  |            0-15             | 0
  28:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 4
  29:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  30:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_1  |                0-1                |            0-7              | 1
  31:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 3
  32:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  33:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_2  |                0-3                |            0-3              | 2
  34:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 2
  35:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  36:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_3  |                0-7                |            0-1              | 3
  37:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 1
  38:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  39:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_4  |                0-15               |            0                | 4
  40:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 0
  41:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  42:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  43:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            2. Enable and Configure the priority of the selected IRQ Channels using NVIC_Init() 
  44:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  45:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
  46:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *        The pending IRQ priority will be managed only by the subpriority.
  47:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  48:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  IRQ priority order (sorted by highest to lowest priority):
  49:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest pre-emption priority
  50:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest subpriority
  51:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest hardware priority (IRQ number)
  52:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  53:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @endverbatim
  54:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  55:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  56:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @attention
  57:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  58:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  59:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  60:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  61:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  62:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  63:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  64:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  65:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  66:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  67:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  68:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  69:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Includes ------------------------------------------------------------------*/
  70:../STM32F4xx_StdPeriph_Driver/src/misc.c **** #include "misc.h"
  71:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  72:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  73:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  74:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  75:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  76:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC 
  77:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief MISC driver modules
  78:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  79:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  80:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  81:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private typedef -----------------------------------------------------------*/
  82:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private define ------------------------------------------------------------*/
  83:../STM32F4xx_StdPeriph_Driver/src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  84:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  85:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private macro -------------------------------------------------------------*/
  86:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private variables ---------------------------------------------------------*/
  87:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private function prototypes -----------------------------------------------*/
  88:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private functions ---------------------------------------------------------*/
  89:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  90:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Functions
  91:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  92:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  93:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  94:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
  95:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  96:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  97:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
  98:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  99:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                4 bits for subpriority
 100:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
 101:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                3 bits for subpriority
 102:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
 103:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                2 bits for subpriority
 104:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
 105:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                1 bits for subpriority
 106:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
 107:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                0 bits for subpriority
 108:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 109:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 110:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 111:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 112:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
 113:../STM32F4xx_StdPeriph_Driver/src/misc.c **** {
  27              		.loc 1 113 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 114:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 115:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 116:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 117:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 118:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  43              		.loc 1 118 0
  44 0008 4FF46D43 		mov	r3, #60672
  45 000c CEF20003 		movt	r3, 57344
  46 0010 7A68     		ldr	r2, [r7, #4]
  47 0012 42F0BE62 		orr	r2, r2, #99614720
  48 0016 42F42022 		orr	r2, r2, #655360
  49 001a DA60     		str	r2, [r3, #12]
 119:../STM32F4xx_StdPeriph_Driver/src/misc.c **** }
  50              		.loc 1 119 0
  51 001c 07F10C07 		add	r7, r7, #12
  52 0020 BD46     		mov	sp, r7
  53 0022 80BC     		pop	{r7}
  54 0024 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE110:
  58 0026 00BF     		.section	.text.NVIC_Init,"ax",%progbits
  59              		.align	2
  60              		.global	NVIC_Init
  61              		.thumb
  62              		.thumb_func
  64              	NVIC_Init:
  65              	.LFB111:
 120:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 122:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 123:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         parameters in the NVIC_InitStruct.
 124:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 125:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         function should be called before. 
 126:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 127:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 128:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 129:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 130:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 131:../STM32F4xx_StdPeriph_Driver/src/misc.c **** {
  66              		.loc 1 131 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 16
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71 0000 80B4     		push	{r7}
  72              	.LCFI3:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 7, -4
  75 0002 85B0     		sub	sp, sp, #20
  76              	.LCFI4:
  77              		.cfi_def_cfa_offset 24
  78 0004 00AF     		add	r7, sp, #0
  79              	.LCFI5:
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 132:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
  82              		.loc 1 132 0
  83 0008 4FF00003 		mov	r3, #0
  84 000c FB73     		strb	r3, [r7, #15]
  85 000e 4FF00003 		mov	r3, #0
  86 0012 BB73     		strb	r3, [r7, #14]
  87 0014 4FF00F03 		mov	r3, #15
  88 0018 7B73     		strb	r3, [r7, #13]
 133:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 134:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 135:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 136:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 137:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 138:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 139:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  89              		.loc 1 139 0
  90 001a 7B68     		ldr	r3, [r7, #4]
  91 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
  92 001e 002B     		cmp	r3, #0
  93 0020 45D0     		beq	.L3
 140:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 141:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 142:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  94              		.loc 1 142 0
  95 0022 4FF46D43 		mov	r3, #60672
  96 0026 CEF20003 		movt	r3, 57344
  97 002a DB68     		ldr	r3, [r3, #12]
  98 002c 6FEA0303 		mvn	r3, r3
  99 0030 03F4E063 		and	r3, r3, #1792
 100 0034 4FEA1323 		lsr	r3, r3, #8
 101 0038 FB73     		strb	r3, [r7, #15]
 143:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppre = (0x4 - tmppriority);
 102              		.loc 1 143 0
 103 003a FB7B     		ldrb	r3, [r7, #15]
 104 003c C3F10403 		rsb	r3, r3, #4
 105 0040 BB73     		strb	r3, [r7, #14]
 144:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 106              		.loc 1 144 0
 107 0042 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 108 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 109 0046 42FA03F3 		asr	r3, r2, r3
 110 004a 7B73     		strb	r3, [r7, #13]
 145:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 146:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 111              		.loc 1 146 0
 112 004c 7B68     		ldr	r3, [r7, #4]
 113 004e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 114 0050 1A46     		mov	r2, r3
 115 0052 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 116 0054 02FA03F3 		lsl	r3, r2, r3
 117 0058 FB73     		strb	r3, [r7, #15]
 147:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
 118              		.loc 1 147 0
 119 005a 7B68     		ldr	r3, [r7, #4]
 120 005c 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 121 005e 7B7B     		ldrb	r3, [r7, #13]
 122 0060 1340     		ands	r3, r3, r2
 123 0062 DAB2     		uxtb	r2, r3
 124 0064 FB7B     		ldrb	r3, [r7, #15]
 125 0066 1343     		orrs	r3, r3, r2
 126 0068 FB73     		strb	r3, [r7, #15]
 148:../STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 149:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
 127              		.loc 1 149 0
 128 006a FB7B     		ldrb	r3, [r7, #15]
 129 006c 4FEA0313 		lsl	r3, r3, #4
 130 0070 FB73     		strb	r3, [r7, #15]
 150:../STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 151:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 131              		.loc 1 151 0
 132 0072 4FF46143 		mov	r3, #57600
 133 0076 CEF20003 		movt	r3, 57344
 134 007a 7A68     		ldr	r2, [r7, #4]
 135 007c 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 136 007e 9B18     		adds	r3, r3, r2
 137 0080 FA7B     		ldrb	r2, [r7, #15]
 138 0082 83F80023 		strb	r2, [r3, #768]
 152:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 153:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 154:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 139              		.loc 1 154 0
 140 0086 4FF46143 		mov	r3, #57600
 141 008a CEF20003 		movt	r3, 57344
 142 008e 7A68     		ldr	r2, [r7, #4]
 143 0090 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 144 0092 4FEA5212 		lsr	r2, r2, #5
 145 0096 D2B2     		uxtb	r2, r2
 155:../STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 146              		.loc 1 155 0
 147 0098 7968     		ldr	r1, [r7, #4]
 148 009a 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 149 009c 01F01F01 		and	r1, r1, #31
 150 00a0 4FF00100 		mov	r0, #1
 151 00a4 00FA01F1 		lsl	r1, r0, r1
 154:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 152              		.loc 1 154 0
 153 00a8 43F82210 		str	r1, [r3, r2, lsl #2]
 154 00ac 14E0     		b	.L2
 155              	.L3:
 156:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 157:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 158:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 159:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 160:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 156              		.loc 1 160 0
 157 00ae 4FF46143 		mov	r3, #57600
 158 00b2 CEF20003 		movt	r3, 57344
 159 00b6 7A68     		ldr	r2, [r7, #4]
 160 00b8 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 161 00ba 4FEA5212 		lsr	r2, r2, #5
 162 00be D2B2     		uxtb	r2, r2
 161:../STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 163              		.loc 1 161 0
 164 00c0 7968     		ldr	r1, [r7, #4]
 165 00c2 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 166 00c4 01F01F01 		and	r1, r1, #31
 167 00c8 4FF00100 		mov	r0, #1
 168 00cc 00FA01F1 		lsl	r1, r0, r1
 160:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 169              		.loc 1 160 0
 170 00d0 02F12002 		add	r2, r2, #32
 171 00d4 43F82210 		str	r1, [r3, r2, lsl #2]
 172              	.L2:
 162:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 163:../STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 173              		.loc 1 163 0
 174 00d8 07F11407 		add	r7, r7, #20
 175 00dc BD46     		mov	sp, r7
 176 00de 80BC     		pop	{r7}
 177 00e0 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE111:
 181 00e2 00BF     		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 182              		.align	2
 183              		.global	NVIC_SetVectorTable
 184              		.thumb
 185              		.thumb_func
 187              	NVIC_SetVectorTable:
 188              	.LFB112:
 164:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 165:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 166:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Sets the vector table location and Offset.
 167:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 168:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 169:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_RAM: Vector Table in internal SRAM.
 170:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_FLASH: Vector Table in internal FLASH.
 171:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x200.
 172:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 173:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 174:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 175:../STM32F4xx_StdPeriph_Driver/src/misc.c **** { 
 189              		.loc 1 175 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              	.LCFI6:
 196              		.cfi_def_cfa_offset 4
 197              		.cfi_offset 7, -4
 198 0002 83B0     		sub	sp, sp, #12
 199              	.LCFI7:
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI8:
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 205 0008 3960     		str	r1, [r7, #0]
 176:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 177:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 178:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 179:../STM32F4xx_StdPeriph_Driver/src/misc.c ****    
 180:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 206              		.loc 1 180 0
 207 000a 4FF46D43 		mov	r3, #60672
 208 000e CEF20003 		movt	r3, 57344
 209 0012 3A68     		ldr	r2, [r7, #0]
 210 0014 22F06042 		bic	r2, r2, #-536870912
 211 0018 22F07F02 		bic	r2, r2, #127
 212 001c 7968     		ldr	r1, [r7, #4]
 213 001e 0A43     		orrs	r2, r2, r1
 214 0020 9A60     		str	r2, [r3, #8]
 181:../STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 215              		.loc 1 181 0
 216 0022 07F10C07 		add	r7, r7, #12
 217 0026 BD46     		mov	sp, r7
 218 0028 80BC     		pop	{r7}
 219 002a 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE112:
 223              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 224              		.align	2
 225              		.global	NVIC_SystemLPConfig
 226              		.thumb
 227              		.thumb_func
 229              	NVIC_SystemLPConfig:
 230              	.LFB113:
 182:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 183:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 184:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 185:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 186:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 187:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SEVONPEND: Low Power SEV on Pend.
 188:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP: Low Power DEEPSLEEP request.
 189:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT: Low Power Sleep on Exit.
 190:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 191:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 193:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 194:../STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 231              		.loc 1 194 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 8
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236 0000 80B4     		push	{r7}
 237              	.LCFI9:
 238              		.cfi_def_cfa_offset 4
 239              		.cfi_offset 7, -4
 240 0002 83B0     		sub	sp, sp, #12
 241              	.LCFI10:
 242              		.cfi_def_cfa_offset 16
 243 0004 00AF     		add	r7, sp, #0
 244              	.LCFI11:
 245              		.cfi_def_cfa_register 7
 246 0006 0246     		mov	r2, r0
 247 0008 0B46     		mov	r3, r1
 248 000a FA71     		strb	r2, [r7, #7]
 249 000c BB71     		strb	r3, [r7, #6]
 195:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 196:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 197:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 198:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 199:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 250              		.loc 1 199 0
 251 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 252 0010 002B     		cmp	r3, #0
 253 0012 0DD0     		beq	.L7
 200:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 201:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR |= LowPowerMode;
 254              		.loc 1 201 0
 255 0014 4FF46D43 		mov	r3, #60672
 256 0018 CEF20003 		movt	r3, 57344
 257 001c 4FF46D42 		mov	r2, #60672
 258 0020 CEF20002 		movt	r2, 57344
 259 0024 1269     		ldr	r2, [r2, #16]
 260 0026 1146     		mov	r1, r2
 261 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 262 002a 0A43     		orrs	r2, r2, r1
 263 002c 1A61     		str	r2, [r3, #16]
 264 002e 0EE0     		b	.L6
 265              	.L7:
 202:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 203:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 204:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 205:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 266              		.loc 1 205 0
 267 0030 4FF46D43 		mov	r3, #60672
 268 0034 CEF20003 		movt	r3, 57344
 269 0038 4FF46D42 		mov	r2, #60672
 270 003c CEF20002 		movt	r2, 57344
 271 0040 1269     		ldr	r2, [r2, #16]
 272 0042 1146     		mov	r1, r2
 273 0044 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 274 0046 6FEA0202 		mvn	r2, r2
 275 004a 0A40     		ands	r2, r2, r1
 276 004c 1A61     		str	r2, [r3, #16]
 277              	.L6:
 206:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 207:../STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 278              		.loc 1 207 0
 279 004e 07F10C07 		add	r7, r7, #12
 280 0052 BD46     		mov	sp, r7
 281 0054 80BC     		pop	{r7}
 282 0056 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE113:
 286              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 287              		.align	2
 288              		.global	SysTick_CLKSourceConfig
 289              		.thumb
 290              		.thumb_func
 292              	SysTick_CLKSourceConfig:
 293              	.LFB114:
 208:../STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 209:../STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 210:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the SysTick clock source.
 211:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 212:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 213:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 214:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 215:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 216:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 217:../STM32F4xx_StdPeriph_Driver/src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 218:../STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 294              		.loc 1 218 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 8
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 299 0000 80B4     		push	{r7}
 300              	.LCFI12:
 301              		.cfi_def_cfa_offset 4
 302              		.cfi_offset 7, -4
 303 0002 83B0     		sub	sp, sp, #12
 304              	.LCFI13:
 305              		.cfi_def_cfa_offset 16
 306 0004 00AF     		add	r7, sp, #0
 307              	.LCFI14:
 308              		.cfi_def_cfa_register 7
 309 0006 7860     		str	r0, [r7, #4]
 219:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 220:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 221:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 310              		.loc 1 221 0
 311 0008 7B68     		ldr	r3, [r7, #4]
 312 000a 042B     		cmp	r3, #4
 313 000c 0CD1     		bne	.L10
 222:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 223:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 314              		.loc 1 223 0
 315 000e 4EF21003 		movw	r3, #57360
 316 0012 CEF20003 		movt	r3, 57344
 317 0016 4EF21002 		movw	r2, #57360
 318 001a CEF20002 		movt	r2, 57344
 319 001e 1268     		ldr	r2, [r2, #0]
 320 0020 42F00402 		orr	r2, r2, #4
 321 0024 1A60     		str	r2, [r3, #0]
 322 0026 0BE0     		b	.L9
 323              	.L10:
 224:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 225:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 226:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 227:../STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 324              		.loc 1 227 0
 325 0028 4EF21003 		movw	r3, #57360
 326 002c CEF20003 		movt	r3, 57344
 327 0030 4EF21002 		movw	r2, #57360
 328 0034 CEF20002 		movt	r2, 57344
 329 0038 1268     		ldr	r2, [r2, #0]
 330 003a 22F00402 		bic	r2, r2, #4
 331 003e 1A60     		str	r2, [r3, #0]
 332              	.L9:
 228:../STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 229:../STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 333              		.loc 1 229 0
 334 0040 07F10C07 		add	r7, r7, #12
 335 0044 BD46     		mov	sp, r7
 336 0046 80BC     		pop	{r7}
 337 0048 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE114:
 341 004a 00BF     		.text
 342              	.Letext0:
 343              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 344              		.file 3 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Incl
 345              		.file 4 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Devi
 346              		.file 5 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_S
DEFINED SYMBOLS
                            *ABS*:00000000 misc.c
  C:\Temp\ccUtwcQa.s:19     .text.NVIC_PriorityGroupConfig:00000000 $t
  C:\Temp\ccUtwcQa.s:24     .text.NVIC_PriorityGroupConfig:00000000 NVIC_PriorityGroupConfig
  C:\Temp\ccUtwcQa.s:59     .text.NVIC_Init:00000000 $t
  C:\Temp\ccUtwcQa.s:64     .text.NVIC_Init:00000000 NVIC_Init
  C:\Temp\ccUtwcQa.s:182    .text.NVIC_SetVectorTable:00000000 $t
  C:\Temp\ccUtwcQa.s:187    .text.NVIC_SetVectorTable:00000000 NVIC_SetVectorTable
  C:\Temp\ccUtwcQa.s:224    .text.NVIC_SystemLPConfig:00000000 $t
  C:\Temp\ccUtwcQa.s:229    .text.NVIC_SystemLPConfig:00000000 NVIC_SystemLPConfig
  C:\Temp\ccUtwcQa.s:287    .text.SysTick_CLKSourceConfig:00000000 $t
  C:\Temp\ccUtwcQa.s:292    .text.SysTick_CLKSourceConfig:00000000 SysTick_CLKSourceConfig
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
