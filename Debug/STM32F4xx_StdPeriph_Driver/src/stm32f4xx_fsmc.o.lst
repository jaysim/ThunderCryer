   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_fsmc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	FSMC_NORSRAMDeInit
  21              		.thumb
  22              		.thumb_func
  24              	FSMC_NORSRAMDeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @file    stm32f4xx_fsmc.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  * @brief    This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          functionalities of the FSMC peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with SRAM, PSRAM, NOR and OneNAND memories
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with NAND memories
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with 16-bit PC Card compatible memories  
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interrupts and flags management   
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @attention
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Includes ------------------------------------------------------------------*/
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #include "stm32f4xx_fsmc.h"
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #include "stm32f4xx_rcc.h"
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief FSMC driver modules
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */ 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private typedef -----------------------------------------------------------*/
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private define ------------------------------------------------------------*/
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* --------------------- FSMC registers bit mask ---------------------------- */
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* FSMC BCRx Mask */
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_MBKEN_SET          ((uint32_t)0x00000001)
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_MBKEN_RESET        ((uint32_t)0x000FFFFE)
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_FACCEN_SET         ((uint32_t)0x00000040)
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* FSMC PCRx Mask */
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_PBKEN_SET          ((uint32_t)0x00000004)
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_PBKEN_RESET        ((uint32_t)0x000FFFFB)
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_ECCEN_SET          ((uint32_t)0x00000040)
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_ECCEN_RESET        ((uint32_t)0x000FFFBF)
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_MEMORYTYPE_NAND    ((uint32_t)0x00000008)
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private macro -------------------------------------------------------------*/
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private variables ---------------------------------------------------------*/
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private function prototypes -----------------------------------------------*/
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private functions ---------------------------------------------------------*/
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Private_Functions
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group1 NOR/SRAM Controller functions
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   NOR/SRAM Controller functions 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     NOR/SRAM Controller functions
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  SRAM, PSRAM, NOR or OneNAND memory connected to the NOR/SRAM Bank:
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_NORSRAMInitTypeDef structure, for example:
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_NORSRAMInitStructure variable with the allowed values of
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the NOR/SRAM Controller by calling the function
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the NOR/SRAM Bank, for example:
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM2, ENABLE);  
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the NOR/SRAM Bank. 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC NOR/SRAM Banks registers to their default 
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *   reset values.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMDeInit(uint32_t FSMC_Bank)
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
  27              		.loc 1 117 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameter */
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank1_NORSRAM1 */
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank1_NORSRAM1)
  43              		.loc 1 122 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 07D1     		bne	.L2
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030DB;    
  47              		.loc 1 124 0
  48 000e 4FF02043 		mov	r3, #-1610612736
  49 0012 7A68     		ldr	r2, [r7, #4]
  50 0014 43F2DB01 		movw	r1, #12507
  51 0018 43F82210 		str	r1, [r3, r2, lsl #2]
  52 001c 06E0     		b	.L3
  53              	.L2:
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank1_NORSRAM2,  FSMC_Bank1_NORSRAM3 or FSMC_Bank1_NORSRAM4 */
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {   
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030D2; 
  54              		.loc 1 129 0
  55 001e 4FF02043 		mov	r3, #-1610612736
  56 0022 7A68     		ldr	r2, [r7, #4]
  57 0024 43F2D201 		movw	r1, #12498
  58 0028 43F82210 		str	r1, [r3, r2, lsl #2]
  59              	.L3:
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_Bank + 1] = 0x0FFFFFFF;
  60              		.loc 1 131 0
  61 002c 4FF02043 		mov	r3, #-1610612736
  62 0030 7A68     		ldr	r2, [r7, #4]
  63 0032 02F10102 		add	r2, r2, #1
  64 0036 6FF07041 		mvn	r1, #-268435456
  65 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1E->BWTR[FSMC_Bank] = 0x0FFFFFFF;  
  66              		.loc 1 132 0
  67 003e 4FF48273 		mov	r3, #260
  68 0042 CAF20003 		movt	r3, 40960
  69 0046 7A68     		ldr	r2, [r7, #4]
  70 0048 6FF07041 		mvn	r1, #-268435456
  71 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
  72              		.loc 1 133 0
  73 0050 07F10C07 		add	r7, r7, #12
  74 0054 BD46     		mov	sp, r7
  75 0056 80BC     		pop	{r7}
  76 0058 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE110:
  80 005a 00BF     		.align	2
  81              		.global	FSMC_NORSRAMInit
  82              		.thumb
  83              		.thumb_func
  85              	FSMC_NORSRAMInit:
  86              	.LFB111:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC NOR/SRAM Banks according to the specified
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         parameters in the FSMC_NORSRAMInitStruct.
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct : pointer to a FSMC_NORSRAMInitTypeDef structure
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         that contains the configuration information for the FSMC NOR/SRAM 
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         specified Banks.                       
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** { 
  87              		.loc 1 144 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 8
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92 005c 80B4     		push	{r7}
  93              	.LCFI3:
  94              		.cfi_def_cfa_offset 4
  95              		.cfi_offset 7, -4
  96 005e 83B0     		sub	sp, sp, #12
  97              	.LCFI4:
  98              		.cfi_def_cfa_offset 16
  99 0060 00AF     		add	r7, sp, #0
 100              	.LCFI5:
 101              		.cfi_def_cfa_register 7
 102 0062 7860     		str	r0, [r7, #4]
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_NORSRAMInitStruct->FSMC_Bank));
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MUX(FSMC_NORSRAMInitStruct->FSMC_DataAddressMux));
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MEMORY(FSMC_NORSRAMInitStruct->FSMC_MemoryType));
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MEMORY_WIDTH(FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth));
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_BURSTMODE(FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode));
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ASYNWAIT(FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait));
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_POLARITY(FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity));
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRAP_MODE(FSMC_NORSRAMInitStruct->FSMC_WrapMode));
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_SIGNAL_ACTIVE(FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive));
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRITE_OPERATION(FSMC_NORSRAMInitStruct->FSMC_WriteOperation));
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAITE_SIGNAL(FSMC_NORSRAMInitStruct->FSMC_WaitSignal));
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_EXTENDED_MODE(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode));
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRITE_BURST(FSMC_NORSRAMInitStruct->FSMC_WriteBurst));  
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_A
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Data
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TURNAROUND_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Bus
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLa
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessM
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM control register configuration */ 
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 103              		.loc 1 168 0
 104 0064 4FF02043 		mov	r3, #-1610612736
 105 0068 7A68     		ldr	r2, [r7, #4]
 106 006a 1268     		ldr	r2, [r2, #0]
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
 107              		.loc 1 169 0
 108 006c 7968     		ldr	r1, [r7, #4]
 109 006e 4868     		ldr	r0, [r1, #4]
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
 110              		.loc 1 170 0
 111 0070 7968     		ldr	r1, [r7, #4]
 112 0072 8968     		ldr	r1, [r1, #8]
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
 113              		.loc 1 169 0
 114 0074 0843     		orrs	r0, r0, r1
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
 115              		.loc 1 171 0
 116 0076 7968     		ldr	r1, [r7, #4]
 117 0078 C968     		ldr	r1, [r1, #12]
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
 118              		.loc 1 170 0
 119 007a 0843     		orrs	r0, r0, r1
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
 120              		.loc 1 172 0
 121 007c 7968     		ldr	r1, [r7, #4]
 122 007e 0969     		ldr	r1, [r1, #16]
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
 123              		.loc 1 171 0
 124 0080 0843     		orrs	r0, r0, r1
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
 125              		.loc 1 173 0
 126 0082 7968     		ldr	r1, [r7, #4]
 127 0084 4969     		ldr	r1, [r1, #20]
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
 128              		.loc 1 172 0
 129 0086 0843     		orrs	r0, r0, r1
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
 130              		.loc 1 174 0
 131 0088 7968     		ldr	r1, [r7, #4]
 132 008a 8969     		ldr	r1, [r1, #24]
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
 133              		.loc 1 173 0
 134 008c 0843     		orrs	r0, r0, r1
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
 135              		.loc 1 175 0
 136 008e 7968     		ldr	r1, [r7, #4]
 137 0090 C969     		ldr	r1, [r1, #28]
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
 138              		.loc 1 174 0
 139 0092 0843     		orrs	r0, r0, r1
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 140              		.loc 1 176 0
 141 0094 7968     		ldr	r1, [r7, #4]
 142 0096 096A     		ldr	r1, [r1, #32]
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
 143              		.loc 1 175 0
 144 0098 0843     		orrs	r0, r0, r1
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 145              		.loc 1 177 0
 146 009a 7968     		ldr	r1, [r7, #4]
 147 009c 496A     		ldr	r1, [r1, #36]
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 148              		.loc 1 176 0
 149 009e 0843     		orrs	r0, r0, r1
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 150              		.loc 1 178 0
 151 00a0 7968     		ldr	r1, [r7, #4]
 152 00a2 896A     		ldr	r1, [r1, #40]
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 153              		.loc 1 177 0
 154 00a4 0843     		orrs	r0, r0, r1
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 155              		.loc 1 179 0
 156 00a6 7968     		ldr	r1, [r7, #4]
 157 00a8 C96A     		ldr	r1, [r1, #44]
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 158              		.loc 1 178 0
 159 00aa 0843     		orrs	r0, r0, r1
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteBurst;
 160              		.loc 1 180 0
 161 00ac 7968     		ldr	r1, [r7, #4]
 162 00ae 096B     		ldr	r1, [r1, #48]
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 163              		.loc 1 179 0
 164 00b0 0143     		orrs	r1, r1, r0
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 165              		.loc 1 168 0
 166 00b2 43F82210 		str	r1, [r3, r2, lsl #2]
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_MemoryType == FSMC_MemoryType_NOR)
 167              		.loc 1 181 0
 168 00b6 7B68     		ldr	r3, [r7, #4]
 169 00b8 9B68     		ldr	r3, [r3, #8]
 170 00ba 082B     		cmp	r3, #8
 171 00bc 0DD1     		bne	.L5
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (uint32_t)BCR_FACCEN_SET;
 172              		.loc 1 183 0
 173 00be 4FF02043 		mov	r3, #-1610612736
 174 00c2 7A68     		ldr	r2, [r7, #4]
 175 00c4 1268     		ldr	r2, [r2, #0]
 176 00c6 4FF02041 		mov	r1, #-1610612736
 177 00ca 7868     		ldr	r0, [r7, #4]
 178 00cc 0068     		ldr	r0, [r0, #0]
 179 00ce 51F82010 		ldr	r1, [r1, r0, lsl #2]
 180 00d2 41F04001 		orr	r1, r1, #64
 181 00d6 43F82210 		str	r1, [r3, r2, lsl #2]
 182              	.L5:
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM timing register configuration */
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 183              		.loc 1 186 0
 184 00da 4FF02043 		mov	r3, #-1610612736
 185 00de 7A68     		ldr	r2, [r7, #4]
 186 00e0 1268     		ldr	r2, [r2, #0]
 187 00e2 02F10102 		add	r2, r2, #1
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 188              		.loc 1 187 0
 189 00e6 7968     		ldr	r1, [r7, #4]
 190 00e8 496B     		ldr	r1, [r1, #52]
 191 00ea 0868     		ldr	r0, [r1, #0]
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 192              		.loc 1 188 0
 193 00ec 7968     		ldr	r1, [r7, #4]
 194 00ee 496B     		ldr	r1, [r1, #52]
 195 00f0 4968     		ldr	r1, [r1, #4]
 196 00f2 4FEA0111 		lsl	r1, r1, #4
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 197              		.loc 1 187 0
 198 00f6 0843     		orrs	r0, r0, r1
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 199              		.loc 1 189 0
 200 00f8 7968     		ldr	r1, [r7, #4]
 201 00fa 496B     		ldr	r1, [r1, #52]
 202 00fc 8968     		ldr	r1, [r1, #8]
 203 00fe 4FEA0121 		lsl	r1, r1, #8
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 204              		.loc 1 188 0
 205 0102 0843     		orrs	r0, r0, r1
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 206              		.loc 1 190 0
 207 0104 7968     		ldr	r1, [r7, #4]
 208 0106 496B     		ldr	r1, [r1, #52]
 209 0108 C968     		ldr	r1, [r1, #12]
 210 010a 4FEA0141 		lsl	r1, r1, #16
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 211              		.loc 1 189 0
 212 010e 0843     		orrs	r0, r0, r1
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 213              		.loc 1 191 0
 214 0110 7968     		ldr	r1, [r7, #4]
 215 0112 496B     		ldr	r1, [r1, #52]
 216 0114 0969     		ldr	r1, [r1, #16]
 217 0116 4FEA0151 		lsl	r1, r1, #20
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 218              		.loc 1 190 0
 219 011a 0843     		orrs	r0, r0, r1
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 220              		.loc 1 192 0
 221 011c 7968     		ldr	r1, [r7, #4]
 222 011e 496B     		ldr	r1, [r1, #52]
 223 0120 4969     		ldr	r1, [r1, #20]
 224 0122 4FEA0161 		lsl	r1, r1, #24
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 225              		.loc 1 191 0
 226 0126 0843     		orrs	r0, r0, r1
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****              FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode;
 227              		.loc 1 193 0
 228 0128 7968     		ldr	r1, [r7, #4]
 229 012a 496B     		ldr	r1, [r1, #52]
 230 012c 8969     		ldr	r1, [r1, #24]
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 231              		.loc 1 192 0
 232 012e 0143     		orrs	r1, r1, r0
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 233              		.loc 1 186 0
 234 0130 43F82210 		str	r1, [r3, r2, lsl #2]
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM timing register for write configuration, if extended mode is used */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode == FSMC_ExtendedMode_Enable)
 235              		.loc 1 197 0
 236 0134 7B68     		ldr	r3, [r7, #4]
 237 0136 DB6A     		ldr	r3, [r3, #44]
 238 0138 B3F5804F 		cmp	r3, #16384
 239 013c 27D1     		bne	.L6
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Ad
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Add
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSe
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision))
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLate
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMod
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 240              		.loc 1 205 0
 241 013e 4FF48273 		mov	r3, #260
 242 0142 CAF20003 		movt	r3, 40960
 243 0146 7A68     		ldr	r2, [r7, #4]
 244 0148 1268     		ldr	r2, [r2, #0]
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 245              		.loc 1 206 0
 246 014a 7968     		ldr	r1, [r7, #4]
 247 014c 896B     		ldr	r1, [r1, #56]
 248 014e 0868     		ldr	r0, [r1, #0]
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 249              		.loc 1 207 0
 250 0150 7968     		ldr	r1, [r7, #4]
 251 0152 896B     		ldr	r1, [r1, #56]
 252 0154 4968     		ldr	r1, [r1, #4]
 253 0156 4FEA0111 		lsl	r1, r1, #4
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 254              		.loc 1 206 0
 255 015a 0843     		orrs	r0, r0, r1
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 256              		.loc 1 208 0
 257 015c 7968     		ldr	r1, [r7, #4]
 258 015e 896B     		ldr	r1, [r1, #56]
 259 0160 8968     		ldr	r1, [r1, #8]
 260 0162 4FEA0121 		lsl	r1, r1, #8
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 261              		.loc 1 207 0
 262 0166 0843     		orrs	r0, r0, r1
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 263              		.loc 1 209 0
 264 0168 7968     		ldr	r1, [r7, #4]
 265 016a 896B     		ldr	r1, [r1, #56]
 266 016c 0969     		ldr	r1, [r1, #16]
 267 016e 4FEA0151 		lsl	r1, r1, #20
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 268              		.loc 1 208 0
 269 0172 0843     		orrs	r0, r0, r1
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 270              		.loc 1 210 0
 271 0174 7968     		ldr	r1, [r7, #4]
 272 0176 896B     		ldr	r1, [r1, #56]
 273 0178 4969     		ldr	r1, [r1, #20]
 274 017a 4FEA0161 		lsl	r1, r1, #24
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 275              		.loc 1 209 0
 276 017e 0843     		orrs	r0, r0, r1
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode;
 277              		.loc 1 211 0
 278 0180 7968     		ldr	r1, [r7, #4]
 279 0182 896B     		ldr	r1, [r1, #56]
 280 0184 8969     		ldr	r1, [r1, #24]
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 281              		.loc 1 210 0
 282 0186 0143     		orrs	r1, r1, r0
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 283              		.loc 1 205 0
 284 0188 43F82210 		str	r1, [r3, r2, lsl #2]
 285 018c 09E0     		b	.L4
 286              	.L6:
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 0x0FFFFFFF;
 287              		.loc 1 215 0
 288 018e 4FF48273 		mov	r3, #260
 289 0192 CAF20003 		movt	r3, 40960
 290 0196 7A68     		ldr	r2, [r7, #4]
 291 0198 1268     		ldr	r2, [r2, #0]
 292 019a 6FF07041 		mvn	r1, #-268435456
 293 019e 43F82210 		str	r1, [r3, r2, lsl #2]
 294              	.L4:
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 295              		.loc 1 217 0
 296 01a2 07F10C07 		add	r7, r7, #12
 297 01a6 BD46     		mov	sp, r7
 298 01a8 80BC     		pop	{r7}
 299 01aa 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE111:
 303              		.align	2
 304              		.global	FSMC_NORSRAMStructInit
 305              		.thumb
 306              		.thumb_func
 308              	FSMC_NORSRAMStructInit:
 309              	.LFB112:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_NORSRAMInitStruct member with its default value.
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct: pointer to a FSMC_NORSRAMInitTypeDef structure 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         which will be initialized.
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {  
 310              		.loc 1 226 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 8
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315 01ac 80B4     		push	{r7}
 316              	.LCFI6:
 317              		.cfi_def_cfa_offset 4
 318              		.cfi_offset 7, -4
 319 01ae 83B0     		sub	sp, sp, #12
 320              	.LCFI7:
 321              		.cfi_def_cfa_offset 16
 322 01b0 00AF     		add	r7, sp, #0
 323              	.LCFI8:
 324              		.cfi_def_cfa_register 7
 325 01b2 7860     		str	r0, [r7, #4]
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset NOR/SRAM Init structure parameters values */
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_Bank = FSMC_Bank1_NORSRAM1;
 326              		.loc 1 228 0
 327 01b4 7B68     		ldr	r3, [r7, #4]
 328 01b6 4FF00002 		mov	r2, #0
 329 01ba 1A60     		str	r2, [r3, #0]
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_DataAddressMux = FSMC_DataAddressMux_Enable;
 330              		.loc 1 229 0
 331 01bc 7B68     		ldr	r3, [r7, #4]
 332 01be 4FF00202 		mov	r2, #2
 333 01c2 5A60     		str	r2, [r3, #4]
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryType = FSMC_MemoryType_SRAM;
 334              		.loc 1 230 0
 335 01c4 7B68     		ldr	r3, [r7, #4]
 336 01c6 4FF00002 		mov	r2, #0
 337 01ca 9A60     		str	r2, [r3, #8]
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 338              		.loc 1 231 0
 339 01cc 7B68     		ldr	r3, [r7, #4]
 340 01ce 4FF00002 		mov	r2, #0
 341 01d2 DA60     		str	r2, [r3, #12]
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
 342              		.loc 1 232 0
 343 01d4 7B68     		ldr	r3, [r7, #4]
 344 01d6 4FF00002 		mov	r2, #0
 345 01da 1A61     		str	r2, [r3, #16]
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;
 346              		.loc 1 233 0
 347 01dc 7B68     		ldr	r3, [r7, #4]
 348 01de 4FF00002 		mov	r2, #0
 349 01e2 5A61     		str	r2, [r3, #20]
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
 350              		.loc 1 234 0
 351 01e4 7B68     		ldr	r3, [r7, #4]
 352 01e6 4FF00002 		mov	r2, #0
 353 01ea 9A61     		str	r2, [r3, #24]
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
 354              		.loc 1 235 0
 355 01ec 7B68     		ldr	r3, [r7, #4]
 356 01ee 4FF00002 		mov	r2, #0
 357 01f2 DA61     		str	r2, [r3, #28]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
 358              		.loc 1 236 0
 359 01f4 7B68     		ldr	r3, [r7, #4]
 360 01f6 4FF00002 		mov	r2, #0
 361 01fa 1A62     		str	r2, [r3, #32]
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
 362              		.loc 1 237 0
 363 01fc 7B68     		ldr	r3, [r7, #4]
 364 01fe 4FF48052 		mov	r2, #4096
 365 0202 5A62     		str	r2, [r3, #36]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
 366              		.loc 1 238 0
 367 0204 7B68     		ldr	r3, [r7, #4]
 368 0206 4FF40052 		mov	r2, #8192
 369 020a 9A62     		str	r2, [r3, #40]
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
 370              		.loc 1 239 0
 371 020c 7B68     		ldr	r3, [r7, #4]
 372 020e 4FF00002 		mov	r2, #0
 373 0212 DA62     		str	r2, [r3, #44]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteBurst = FSMC_WriteBurst_Disable;
 374              		.loc 1 240 0
 375 0214 7B68     		ldr	r3, [r7, #4]
 376 0216 4FF00002 		mov	r2, #0
 377 021a 1A63     		str	r2, [r3, #48]
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 378              		.loc 1 241 0
 379 021c 7B68     		ldr	r3, [r7, #4]
 380 021e 5B6B     		ldr	r3, [r3, #52]
 381 0220 4FF00F02 		mov	r2, #15
 382 0224 1A60     		str	r2, [r3, #0]
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 383              		.loc 1 242 0
 384 0226 7B68     		ldr	r3, [r7, #4]
 385 0228 5B6B     		ldr	r3, [r3, #52]
 386 022a 4FF00F02 		mov	r2, #15
 387 022e 5A60     		str	r2, [r3, #4]
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 388              		.loc 1 243 0
 389 0230 7B68     		ldr	r3, [r7, #4]
 390 0232 5B6B     		ldr	r3, [r3, #52]
 391 0234 4FF0FF02 		mov	r2, #255
 392 0238 9A60     		str	r2, [r3, #8]
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 393              		.loc 1 244 0
 394 023a 7B68     		ldr	r3, [r7, #4]
 395 023c 5B6B     		ldr	r3, [r3, #52]
 396 023e 4FF00F02 		mov	r2, #15
 397 0242 DA60     		str	r2, [r3, #12]
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision = 0xF;
 398              		.loc 1 245 0
 399 0244 7B68     		ldr	r3, [r7, #4]
 400 0246 5B6B     		ldr	r3, [r3, #52]
 401 0248 4FF00F02 		mov	r2, #15
 402 024c 1A61     		str	r2, [r3, #16]
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency = 0xF;
 403              		.loc 1 246 0
 404 024e 7B68     		ldr	r3, [r7, #4]
 405 0250 5B6B     		ldr	r3, [r3, #52]
 406 0252 4FF00F02 		mov	r2, #15
 407 0256 5A61     		str	r2, [r3, #20]
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A; 
 408              		.loc 1 247 0
 409 0258 7B68     		ldr	r3, [r7, #4]
 410 025a 5B6B     		ldr	r3, [r3, #52]
 411 025c 4FF00002 		mov	r2, #0
 412 0260 9A61     		str	r2, [r3, #24]
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 413              		.loc 1 248 0
 414 0262 7B68     		ldr	r3, [r7, #4]
 415 0264 9B6B     		ldr	r3, [r3, #56]
 416 0266 4FF00F02 		mov	r2, #15
 417 026a 1A60     		str	r2, [r3, #0]
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 418              		.loc 1 249 0
 419 026c 7B68     		ldr	r3, [r7, #4]
 420 026e 9B6B     		ldr	r3, [r3, #56]
 421 0270 4FF00F02 		mov	r2, #15
 422 0274 5A60     		str	r2, [r3, #4]
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 423              		.loc 1 250 0
 424 0276 7B68     		ldr	r3, [r7, #4]
 425 0278 9B6B     		ldr	r3, [r3, #56]
 426 027a 4FF0FF02 		mov	r2, #255
 427 027e 9A60     		str	r2, [r3, #8]
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 428              		.loc 1 251 0
 429 0280 7B68     		ldr	r3, [r7, #4]
 430 0282 9B6B     		ldr	r3, [r3, #56]
 431 0284 4FF00F02 		mov	r2, #15
 432 0288 DA60     		str	r2, [r3, #12]
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision = 0xF;
 433              		.loc 1 252 0
 434 028a 7B68     		ldr	r3, [r7, #4]
 435 028c 9B6B     		ldr	r3, [r3, #56]
 436 028e 4FF00F02 		mov	r2, #15
 437 0292 1A61     		str	r2, [r3, #16]
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency = 0xF;
 438              		.loc 1 253 0
 439 0294 7B68     		ldr	r3, [r7, #4]
 440 0296 9B6B     		ldr	r3, [r3, #56]
 441 0298 4FF00F02 		mov	r2, #15
 442 029c 5A61     		str	r2, [r3, #20]
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A;
 443              		.loc 1 254 0
 444 029e 7B68     		ldr	r3, [r7, #4]
 445 02a0 9B6B     		ldr	r3, [r3, #56]
 446 02a2 4FF00002 		mov	r2, #0
 447 02a6 9A61     		str	r2, [r3, #24]
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 448              		.loc 1 255 0
 449 02a8 07F10C07 		add	r7, r7, #12
 450 02ac BD46     		mov	sp, r7
 451 02ae 80BC     		pop	{r7}
 452 02b0 7047     		bx	lr
 453              		.cfi_endproc
 454              	.LFE112:
 456 02b2 00BF     		.align	2
 457              		.global	FSMC_NORSRAMCmd
 458              		.thumb
 459              		.thumb_func
 461              	FSMC_NORSRAMCmd:
 462              	.LFB113:
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified NOR/SRAM Memory Bank.
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 463              		.loc 1 269 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 8
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468 02b4 80B4     		push	{r7}
 469              	.LCFI9:
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 7, -4
 472 02b6 83B0     		sub	sp, sp, #12
 473              	.LCFI10:
 474              		.cfi_def_cfa_offset 16
 475 02b8 00AF     		add	r7, sp, #0
 476              	.LCFI11:
 477              		.cfi_def_cfa_register 7
 478 02ba 7860     		str	r0, [r7, #4]
 479 02bc 0B46     		mov	r3, r1
 480 02be FB70     		strb	r3, [r7, #3]
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 481              		.loc 1 273 0
 482 02c0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 483 02c2 002B     		cmp	r3, #0
 484 02c4 0CD0     		beq	.L10
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NOR/SRAM Bank by setting the PBKEN bit in the BCRx register */
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] |= BCR_MBKEN_SET;
 485              		.loc 1 276 0
 486 02c6 4FF02043 		mov	r3, #-1610612736
 487 02ca 4FF02042 		mov	r2, #-1610612736
 488 02ce 7968     		ldr	r1, [r7, #4]
 489 02d0 52F82120 		ldr	r2, [r2, r1, lsl #2]
 490 02d4 42F00101 		orr	r1, r2, #1
 491 02d8 7A68     		ldr	r2, [r7, #4]
 492 02da 43F82210 		str	r1, [r3, r2, lsl #2]
 493 02de 0FE0     		b	.L9
 494              	.L10:
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NOR/SRAM Bank by clearing the PBKEN bit in the BCRx register */
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] &= BCR_MBKEN_RESET;
 495              		.loc 1 281 0
 496 02e0 4FF02042 		mov	r2, #-1610612736
 497 02e4 4FF02043 		mov	r3, #-1610612736
 498 02e8 7968     		ldr	r1, [r7, #4]
 499 02ea 53F82130 		ldr	r3, [r3, r1, lsl #2]
 500 02ee 1946     		mov	r1, r3
 501 02f0 4FF6FE73 		movw	r3, #65534
 502 02f4 C0F20F03 		movt	r3, 15
 503 02f8 0B40     		ands	r3, r3, r1
 504 02fa 7968     		ldr	r1, [r7, #4]
 505 02fc 42F82130 		str	r3, [r2, r1, lsl #2]
 506              	.L9:
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 507              		.loc 1 283 0
 508 0300 07F10C07 		add	r7, r7, #12
 509 0304 BD46     		mov	sp, r7
 510 0306 80BC     		pop	{r7}
 511 0308 7047     		bx	lr
 512              		.cfi_endproc
 513              	.LFE113:
 515 030a 00BF     		.align	2
 516              		.global	FSMC_NANDDeInit
 517              		.thumb
 518              		.thumb_func
 520              	FSMC_NANDDeInit:
 521              	.LFB114:
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group2 NAND Controller functions
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   NAND Controller functions 
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     NAND Controller functions
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  8-bit or 16-bit NAND memory connected to the NAND Bank:
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_NANDInitTypeDef structure, for example:
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDInitTypeDef  FSMC_NANDInitStructure;
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_NANDInitStructure variable with the allowed values of
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the NAND Controller by calling the function
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDInit(&FSMC_NANDInitStructure); 
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the NAND Bank, for example:
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDCmd(FSMC_Bank3_NAND, ENABLE);  
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the NAND Bank. 
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @note To enable the Error Correction Code (ECC), you have to use the function
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDECCCmd(FSMC_Bank3_NAND, ENABLE);  
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and to get the current ECC value you have to use the function
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           ECCval = FSMC_GetECC(FSMC_Bank3_NAND); 
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC NAND Banks registers to their default reset values.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND 
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDDeInit(uint32_t FSMC_Bank)
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 522              		.loc 1 340 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 8
 525              		@ frame_needed = 1, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527 030c 80B4     		push	{r7}
 528              	.LCFI12:
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 7, -4
 531 030e 83B0     		sub	sp, sp, #12
 532              	.LCFI13:
 533              		.cfi_def_cfa_offset 16
 534 0310 00AF     		add	r7, sp, #0
 535              	.LCFI14:
 536              		.cfi_def_cfa_register 7
 537 0312 7860     		str	r0, [r7, #4]
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameter */
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 538              		.loc 1 344 0
 539 0314 7B68     		ldr	r3, [r7, #4]
 540 0316 102B     		cmp	r3, #16
 541 0318 1CD1     		bne	.L13
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Set the FSMC_Bank2 registers to their reset values */
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PCR2 = 0x00000018;
 542              		.loc 1 347 0
 543 031a 4FF06003 		mov	r3, #96
 544 031e CAF20003 		movt	r3, 40960
 545 0322 4FF01802 		mov	r2, #24
 546 0326 1A60     		str	r2, [r3, #0]
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 = 0x00000040;
 547              		.loc 1 348 0
 548 0328 4FF06003 		mov	r3, #96
 549 032c CAF20003 		movt	r3, 40960
 550 0330 4FF04002 		mov	r2, #64
 551 0334 5A60     		str	r2, [r3, #4]
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PMEM2 = 0xFCFCFCFC;
 552              		.loc 1 349 0
 553 0336 4FF06003 		mov	r3, #96
 554 033a CAF20003 		movt	r3, 40960
 555 033e 4FF0FC32 		mov	r2, #-50529028
 556 0342 9A60     		str	r2, [r3, #8]
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PATT2 = 0xFCFCFCFC;  
 557              		.loc 1 350 0
 558 0344 4FF06003 		mov	r3, #96
 559 0348 CAF20003 		movt	r3, 40960
 560 034c 4FF0FC32 		mov	r2, #-50529028
 561 0350 DA60     		str	r2, [r3, #12]
 562 0352 1BE0     		b	.L12
 563              	.L13:
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank3_NAND */  
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Set the FSMC_Bank3 registers to their reset values */
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PCR3 = 0x00000018;
 564              		.loc 1 356 0
 565 0354 4FF08003 		mov	r3, #128
 566 0358 CAF20003 		movt	r3, 40960
 567 035c 4FF01802 		mov	r2, #24
 568 0360 1A60     		str	r2, [r3, #0]
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 = 0x00000040;
 569              		.loc 1 357 0
 570 0362 4FF08003 		mov	r3, #128
 571 0366 CAF20003 		movt	r3, 40960
 572 036a 4FF04002 		mov	r2, #64
 573 036e 5A60     		str	r2, [r3, #4]
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PMEM3 = 0xFCFCFCFC;
 574              		.loc 1 358 0
 575 0370 4FF08003 		mov	r3, #128
 576 0374 CAF20003 		movt	r3, 40960
 577 0378 4FF0FC32 		mov	r2, #-50529028
 578 037c 9A60     		str	r2, [r3, #8]
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PATT3 = 0xFCFCFCFC; 
 579              		.loc 1 359 0
 580 037e 4FF08003 		mov	r3, #128
 581 0382 CAF20003 		movt	r3, 40960
 582 0386 4FF0FC32 		mov	r2, #-50529028
 583 038a DA60     		str	r2, [r3, #12]
 584              	.L12:
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 585              		.loc 1 361 0
 586 038c 07F10C07 		add	r7, r7, #12
 587 0390 BD46     		mov	sp, r7
 588 0392 80BC     		pop	{r7}
 589 0394 7047     		bx	lr
 590              		.cfi_endproc
 591              	.LFE114:
 593 0396 00BF     		.align	2
 594              		.global	FSMC_NANDInit
 595              		.thumb
 596              		.thumb_func
 598              	FSMC_NANDInit:
 599              	.LFB115:
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC NAND Banks according to the specified parameters
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         in the FSMC_NANDInitStruct.
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NANDInitStruct : pointer to a FSMC_NANDInitTypeDef structure that
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         contains the configuration information for the FSMC NAND specified Banks.              
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 600              		.loc 1 371 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 24
 603              		@ frame_needed = 1, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605 0398 80B4     		push	{r7}
 606              	.LCFI15:
 607              		.cfi_def_cfa_offset 4
 608              		.cfi_offset 7, -4
 609 039a 87B0     		sub	sp, sp, #28
 610              	.LCFI16:
 611              		.cfi_def_cfa_offset 32
 612 039c 00AF     		add	r7, sp, #0
 613              	.LCFI17:
 614              		.cfi_def_cfa_register 7
 615 039e 7860     		str	r0, [r7, #4]
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmppcr = 0x00000000, tmppmem = 0x00000000, tmppatt = 0x00000000; 
 616              		.loc 1 372 0
 617 03a0 4FF00003 		mov	r3, #0
 618 03a4 7B61     		str	r3, [r7, #20]
 619 03a6 4FF00003 		mov	r3, #0
 620 03aa 3B61     		str	r3, [r7, #16]
 621 03ac 4FF00003 		mov	r3, #0
 622 03b0 FB60     		str	r3, [r7, #12]
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_NAND_BANK(FSMC_NANDInitStruct->FSMC_Bank));
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_WAIT_FEATURE(FSMC_NANDInitStruct->FSMC_Waitfeature));
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_MEMORY_WIDTH(FSMC_NANDInitStruct->FSMC_MemoryDataWidth));
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_ECC_STATE(FSMC_NANDInitStruct->FSMC_ECC));
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_ECCPAGE_SIZE(FSMC_NANDInitStruct->FSMC_ECCPageSize));
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_TCLR_TIME(FSMC_NANDInitStruct->FSMC_TCLRSetupTime));
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_TAR_TIME(FSMC_NANDInitStruct->FSMC_TARSetupTime));
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupT
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupT
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTim
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSet
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSet
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetup
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the tmppcr value according to FSMC_NANDInitStruct parameters */
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 623              		.loc 1 392 0
 624 03b2 7B68     		ldr	r3, [r7, #4]
 625 03b4 5A68     		ldr	r2, [r3, #4]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             PCR_MEMORYTYPE_NAND |
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 626              		.loc 1 394 0
 627 03b6 7B68     		ldr	r3, [r7, #4]
 628 03b8 9B68     		ldr	r3, [r3, #8]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             PCR_MEMORYTYPE_NAND |
 629              		.loc 1 393 0
 630 03ba 1A43     		orrs	r2, r2, r3
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 631              		.loc 1 395 0
 632 03bc 7B68     		ldr	r3, [r7, #4]
 633 03be DB68     		ldr	r3, [r3, #12]
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 634              		.loc 1 394 0
 635 03c0 1A43     		orrs	r2, r2, r3
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 636              		.loc 1 396 0
 637 03c2 7B68     		ldr	r3, [r7, #4]
 638 03c4 1B69     		ldr	r3, [r3, #16]
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 639              		.loc 1 395 0
 640 03c6 1A43     		orrs	r2, r2, r3
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 641              		.loc 1 397 0
 642 03c8 7B68     		ldr	r3, [r7, #4]
 643 03ca 5B69     		ldr	r3, [r3, #20]
 644 03cc 4FEA4323 		lsl	r3, r3, #9
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 645              		.loc 1 396 0
 646 03d0 1A43     		orrs	r2, r2, r3
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
 647              		.loc 1 398 0
 648 03d2 7B68     		ldr	r3, [r7, #4]
 649 03d4 9B69     		ldr	r3, [r3, #24]
 650 03d6 4FEA4333 		lsl	r3, r3, #13
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 651              		.loc 1 397 0
 652 03da 1343     		orrs	r3, r3, r2
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 653              		.loc 1 392 0
 654 03dc 43F00803 		orr	r3, r3, #8
 655 03e0 7B61     		str	r3, [r7, #20]
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 656              		.loc 1 401 0
 657 03e2 7B68     		ldr	r3, [r7, #4]
 658 03e4 DB69     		ldr	r3, [r3, #28]
 659 03e6 1A68     		ldr	r2, [r3, #0]
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 660              		.loc 1 402 0
 661 03e8 7B68     		ldr	r3, [r7, #4]
 662 03ea DB69     		ldr	r3, [r3, #28]
 663 03ec 5B68     		ldr	r3, [r3, #4]
 664 03ee 4FEA0323 		lsl	r3, r3, #8
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 665              		.loc 1 401 0
 666 03f2 1A43     		orrs	r2, r2, r3
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 667              		.loc 1 403 0
 668 03f4 7B68     		ldr	r3, [r7, #4]
 669 03f6 DB69     		ldr	r3, [r3, #28]
 670 03f8 9B68     		ldr	r3, [r3, #8]
 671 03fa 4FEA0343 		lsl	r3, r3, #16
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 672              		.loc 1 402 0
 673 03fe 1A43     		orrs	r2, r2, r3
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
 674              		.loc 1 404 0
 675 0400 7B68     		ldr	r3, [r7, #4]
 676 0402 DB69     		ldr	r3, [r3, #28]
 677 0404 DB68     		ldr	r3, [r3, #12]
 678 0406 4FEA0363 		lsl	r3, r3, #24
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 679              		.loc 1 401 0
 680 040a 1343     		orrs	r3, r3, r2
 681 040c 3B61     		str	r3, [r7, #16]
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 682              		.loc 1 407 0
 683 040e 7B68     		ldr	r3, [r7, #4]
 684 0410 1B6A     		ldr	r3, [r3, #32]
 685 0412 1A68     		ldr	r2, [r3, #0]
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 686              		.loc 1 408 0
 687 0414 7B68     		ldr	r3, [r7, #4]
 688 0416 1B6A     		ldr	r3, [r3, #32]
 689 0418 5B68     		ldr	r3, [r3, #4]
 690 041a 4FEA0323 		lsl	r3, r3, #8
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 691              		.loc 1 407 0
 692 041e 1A43     		orrs	r2, r2, r3
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 693              		.loc 1 409 0
 694 0420 7B68     		ldr	r3, [r7, #4]
 695 0422 1B6A     		ldr	r3, [r3, #32]
 696 0424 9B68     		ldr	r3, [r3, #8]
 697 0426 4FEA0343 		lsl	r3, r3, #16
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 698              		.loc 1 408 0
 699 042a 1A43     		orrs	r2, r2, r3
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);
 700              		.loc 1 410 0
 701 042c 7B68     		ldr	r3, [r7, #4]
 702 042e 1B6A     		ldr	r3, [r3, #32]
 703 0430 DB68     		ldr	r3, [r3, #12]
 704 0432 4FEA0363 		lsl	r3, r3, #24
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 705              		.loc 1 407 0
 706 0436 1343     		orrs	r3, r3, r2
 707 0438 FB60     		str	r3, [r7, #12]
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NANDInitStruct->FSMC_Bank == FSMC_Bank2_NAND)
 708              		.loc 1 412 0
 709 043a 7B68     		ldr	r3, [r7, #4]
 710 043c 1B68     		ldr	r3, [r3, #0]
 711 043e 102B     		cmp	r3, #16
 712 0440 12D1     		bne	.L16
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* FSMC_Bank2_NAND registers configuration */
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PCR2 = tmppcr;
 713              		.loc 1 415 0
 714 0442 4FF06003 		mov	r3, #96
 715 0446 CAF20003 		movt	r3, 40960
 716 044a 7A69     		ldr	r2, [r7, #20]
 717 044c 1A60     		str	r2, [r3, #0]
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PMEM2 = tmppmem;
 718              		.loc 1 416 0
 719 044e 4FF06003 		mov	r3, #96
 720 0452 CAF20003 		movt	r3, 40960
 721 0456 3A69     		ldr	r2, [r7, #16]
 722 0458 9A60     		str	r2, [r3, #8]
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PATT2 = tmppatt;
 723              		.loc 1 417 0
 724 045a 4FF06003 		mov	r3, #96
 725 045e CAF20003 		movt	r3, 40960
 726 0462 FA68     		ldr	r2, [r7, #12]
 727 0464 DA60     		str	r2, [r3, #12]
 728 0466 11E0     		b	.L15
 729              	.L16:
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* FSMC_Bank3_NAND registers configuration */
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PCR3 = tmppcr;
 730              		.loc 1 422 0
 731 0468 4FF08003 		mov	r3, #128
 732 046c CAF20003 		movt	r3, 40960
 733 0470 7A69     		ldr	r2, [r7, #20]
 734 0472 1A60     		str	r2, [r3, #0]
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PMEM3 = tmppmem;
 735              		.loc 1 423 0
 736 0474 4FF08003 		mov	r3, #128
 737 0478 CAF20003 		movt	r3, 40960
 738 047c 3A69     		ldr	r2, [r7, #16]
 739 047e 9A60     		str	r2, [r3, #8]
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PATT3 = tmppatt;
 740              		.loc 1 424 0
 741 0480 4FF08003 		mov	r3, #128
 742 0484 CAF20003 		movt	r3, 40960
 743 0488 FA68     		ldr	r2, [r7, #12]
 744 048a DA60     		str	r2, [r3, #12]
 745              	.L15:
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 746              		.loc 1 426 0
 747 048c 07F11C07 		add	r7, r7, #28
 748 0490 BD46     		mov	sp, r7
 749 0492 80BC     		pop	{r7}
 750 0494 7047     		bx	lr
 751              		.cfi_endproc
 752              	.LFE115:
 754 0496 00BF     		.align	2
 755              		.global	FSMC_NANDStructInit
 756              		.thumb
 757              		.thumb_func
 759              	FSMC_NANDStructInit:
 760              	.LFB116:
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_NANDInitStruct member with its default value.
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NANDInitStruct: pointer to a FSMC_NANDInitTypeDef structure which
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         will be initialized.
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** { 
 761              		.loc 1 436 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 8
 764              		@ frame_needed = 1, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766 0498 80B4     		push	{r7}
 767              	.LCFI18:
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 049a 83B0     		sub	sp, sp, #12
 771              	.LCFI19:
 772              		.cfi_def_cfa_offset 16
 773 049c 00AF     		add	r7, sp, #0
 774              	.LCFI20:
 775              		.cfi_def_cfa_register 7
 776 049e 7860     		str	r0, [r7, #4]
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset NAND Init structure parameters values */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Bank = FSMC_Bank2_NAND;
 777              		.loc 1 438 0
 778 04a0 7B68     		ldr	r3, [r7, #4]
 779 04a2 4FF01002 		mov	r2, #16
 780 04a6 1A60     		str	r2, [r3, #0]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 781              		.loc 1 439 0
 782 04a8 7B68     		ldr	r3, [r7, #4]
 783 04aa 4FF00002 		mov	r2, #0
 784 04ae 5A60     		str	r2, [r3, #4]
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 785              		.loc 1 440 0
 786 04b0 7B68     		ldr	r3, [r7, #4]
 787 04b2 4FF00002 		mov	r2, #0
 788 04b6 9A60     		str	r2, [r3, #8]
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECC = FSMC_ECC_Disable;
 789              		.loc 1 441 0
 790 04b8 7B68     		ldr	r3, [r7, #4]
 791 04ba 4FF00002 		mov	r2, #0
 792 04be DA60     		str	r2, [r3, #12]
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECCPageSize = FSMC_ECCPageSize_256Bytes;
 793              		.loc 1 442 0
 794 04c0 7B68     		ldr	r3, [r7, #4]
 795 04c2 4FF00002 		mov	r2, #0
 796 04c6 1A61     		str	r2, [r3, #16]
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TCLRSetupTime = 0x0;
 797              		.loc 1 443 0
 798 04c8 7B68     		ldr	r3, [r7, #4]
 799 04ca 4FF00002 		mov	r2, #0
 800 04ce 5A61     		str	r2, [r3, #20]
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TARSetupTime = 0x0;
 801              		.loc 1 444 0
 802 04d0 7B68     		ldr	r3, [r7, #4]
 803 04d2 4FF00002 		mov	r2, #0
 804 04d6 9A61     		str	r2, [r3, #24]
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 805              		.loc 1 445 0
 806 04d8 7B68     		ldr	r3, [r7, #4]
 807 04da DB69     		ldr	r3, [r3, #28]
 808 04dc 4FF0FC02 		mov	r2, #252
 809 04e0 1A60     		str	r2, [r3, #0]
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 810              		.loc 1 446 0
 811 04e2 7B68     		ldr	r3, [r7, #4]
 812 04e4 DB69     		ldr	r3, [r3, #28]
 813 04e6 4FF0FC02 		mov	r2, #252
 814 04ea 5A60     		str	r2, [r3, #4]
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 815              		.loc 1 447 0
 816 04ec 7B68     		ldr	r3, [r7, #4]
 817 04ee DB69     		ldr	r3, [r3, #28]
 818 04f0 4FF0FC02 		mov	r2, #252
 819 04f4 9A60     		str	r2, [r3, #8]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 820              		.loc 1 448 0
 821 04f6 7B68     		ldr	r3, [r7, #4]
 822 04f8 DB69     		ldr	r3, [r3, #28]
 823 04fa 4FF0FC02 		mov	r2, #252
 824 04fe DA60     		str	r2, [r3, #12]
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 825              		.loc 1 449 0
 826 0500 7B68     		ldr	r3, [r7, #4]
 827 0502 1B6A     		ldr	r3, [r3, #32]
 828 0504 4FF0FC02 		mov	r2, #252
 829 0508 1A60     		str	r2, [r3, #0]
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 830              		.loc 1 450 0
 831 050a 7B68     		ldr	r3, [r7, #4]
 832 050c 1B6A     		ldr	r3, [r3, #32]
 833 050e 4FF0FC02 		mov	r2, #252
 834 0512 5A60     		str	r2, [r3, #4]
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 835              		.loc 1 451 0
 836 0514 7B68     		ldr	r3, [r7, #4]
 837 0516 1B6A     		ldr	r3, [r3, #32]
 838 0518 4FF0FC02 		mov	r2, #252
 839 051c 9A60     		str	r2, [r3, #8]
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	  
 840              		.loc 1 452 0
 841 051e 7B68     		ldr	r3, [r7, #4]
 842 0520 1B6A     		ldr	r3, [r3, #32]
 843 0522 4FF0FC02 		mov	r2, #252
 844 0526 DA60     		str	r2, [r3, #12]
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 845              		.loc 1 453 0
 846 0528 07F10C07 		add	r7, r7, #12
 847 052c BD46     		mov	sp, r7
 848 052e 80BC     		pop	{r7}
 849 0530 7047     		bx	lr
 850              		.cfi_endproc
 851              	.LFE116:
 853 0532 00BF     		.align	2
 854              		.global	FSMC_NANDCmd
 855              		.thumb
 856              		.thumb_func
 858              	FSMC_NANDCmd:
 859              	.LFB117:
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified NAND Memory Bank.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 860              		.loc 1 465 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 8
 863              		@ frame_needed = 1, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 865 0534 80B4     		push	{r7}
 866              	.LCFI21:
 867              		.cfi_def_cfa_offset 4
 868              		.cfi_offset 7, -4
 869 0536 83B0     		sub	sp, sp, #12
 870              	.LCFI22:
 871              		.cfi_def_cfa_offset 16
 872 0538 00AF     		add	r7, sp, #0
 873              	.LCFI23:
 874              		.cfi_def_cfa_register 7
 875 053a 7860     		str	r0, [r7, #4]
 876 053c 0B46     		mov	r3, r1
 877 053e FB70     		strb	r3, [r7, #3]
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 878              		.loc 1 469 0
 879 0540 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 880 0542 002B     		cmp	r3, #0
 881 0544 1CD0     		beq	.L20
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NAND Bank by setting the PBKEN bit in the PCRx register */
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 882              		.loc 1 472 0
 883 0546 7B68     		ldr	r3, [r7, #4]
 884 0548 102B     		cmp	r3, #16
 885 054a 0CD1     		bne	.L21
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_PBKEN_SET;
 886              		.loc 1 474 0
 887 054c 4FF06003 		mov	r3, #96
 888 0550 CAF20003 		movt	r3, 40960
 889 0554 4FF06002 		mov	r2, #96
 890 0558 CAF20002 		movt	r2, 40960
 891 055c 1268     		ldr	r2, [r2, #0]
 892 055e 42F00402 		orr	r2, r2, #4
 893 0562 1A60     		str	r2, [r3, #0]
 894 0564 30E0     		b	.L19
 895              	.L21:
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_PBKEN_SET;
 896              		.loc 1 478 0
 897 0566 4FF08003 		mov	r3, #128
 898 056a CAF20003 		movt	r3, 40960
 899 056e 4FF08002 		mov	r2, #128
 900 0572 CAF20002 		movt	r2, 40960
 901 0576 1268     		ldr	r2, [r2, #0]
 902 0578 42F00402 		orr	r2, r2, #4
 903 057c 1A60     		str	r2, [r3, #0]
 904 057e 23E0     		b	.L19
 905              	.L20:
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NAND Bank by clearing the PBKEN bit in the PCRx register */
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 906              		.loc 1 484 0
 907 0580 7B68     		ldr	r3, [r7, #4]
 908 0582 102B     		cmp	r3, #16
 909 0584 10D1     		bne	.L23
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_PBKEN_RESET;
 910              		.loc 1 486 0
 911 0586 4FF06002 		mov	r2, #96
 912 058a CAF20002 		movt	r2, 40960
 913 058e 4FF06003 		mov	r3, #96
 914 0592 CAF20003 		movt	r3, 40960
 915 0596 1B68     		ldr	r3, [r3, #0]
 916 0598 1946     		mov	r1, r3
 917 059a 4FF6FB73 		movw	r3, #65531
 918 059e C0F20F03 		movt	r3, 15
 919 05a2 0B40     		ands	r3, r3, r1
 920 05a4 1360     		str	r3, [r2, #0]
 921 05a6 0FE0     		b	.L19
 922              	.L23:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_PBKEN_RESET;
 923              		.loc 1 490 0
 924 05a8 4FF08002 		mov	r2, #128
 925 05ac CAF20002 		movt	r2, 40960
 926 05b0 4FF08003 		mov	r3, #128
 927 05b4 CAF20003 		movt	r3, 40960
 928 05b8 1B68     		ldr	r3, [r3, #0]
 929 05ba 1946     		mov	r1, r3
 930 05bc 4FF6FB73 		movw	r3, #65531
 931 05c0 C0F20F03 		movt	r3, 15
 932 05c4 0B40     		ands	r3, r3, r1
 933 05c6 1360     		str	r3, [r2, #0]
 934              	.L19:
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 935              		.loc 1 493 0
 936 05c8 07F10C07 		add	r7, r7, #12
 937 05cc BD46     		mov	sp, r7
 938 05ce 80BC     		pop	{r7}
 939 05d0 7047     		bx	lr
 940              		.cfi_endproc
 941              	.LFE117:
 943 05d2 00BF     		.align	2
 944              		.global	FSMC_NANDECCCmd
 945              		.thumb
 946              		.thumb_func
 948              	FSMC_NANDECCCmd:
 949              	.LFB118:
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the FSMC NAND ECC feature.
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC NAND ECC feature.  
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDECCCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 950              		.loc 1 505 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 8
 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955 05d4 80B4     		push	{r7}
 956              	.LCFI24:
 957              		.cfi_def_cfa_offset 4
 958              		.cfi_offset 7, -4
 959 05d6 83B0     		sub	sp, sp, #12
 960              	.LCFI25:
 961              		.cfi_def_cfa_offset 16
 962 05d8 00AF     		add	r7, sp, #0
 963              	.LCFI26:
 964              		.cfi_def_cfa_register 7
 965 05da 7860     		str	r0, [r7, #4]
 966 05dc 0B46     		mov	r3, r1
 967 05de FB70     		strb	r3, [r7, #3]
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 968              		.loc 1 509 0
 969 05e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 970 05e2 002B     		cmp	r3, #0
 971 05e4 1CD0     		beq	.L25
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NAND Bank ECC function by setting the ECCEN bit in the PCRx register */
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 972              		.loc 1 512 0
 973 05e6 7B68     		ldr	r3, [r7, #4]
 974 05e8 102B     		cmp	r3, #16
 975 05ea 0CD1     		bne	.L26
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_ECCEN_SET;
 976              		.loc 1 514 0
 977 05ec 4FF06003 		mov	r3, #96
 978 05f0 CAF20003 		movt	r3, 40960
 979 05f4 4FF06002 		mov	r2, #96
 980 05f8 CAF20002 		movt	r2, 40960
 981 05fc 1268     		ldr	r2, [r2, #0]
 982 05fe 42F04002 		orr	r2, r2, #64
 983 0602 1A60     		str	r2, [r3, #0]
 984 0604 30E0     		b	.L24
 985              	.L26:
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_ECCEN_SET;
 986              		.loc 1 518 0
 987 0606 4FF08003 		mov	r3, #128
 988 060a CAF20003 		movt	r3, 40960
 989 060e 4FF08002 		mov	r2, #128
 990 0612 CAF20002 		movt	r2, 40960
 991 0616 1268     		ldr	r2, [r2, #0]
 992 0618 42F04002 		orr	r2, r2, #64
 993 061c 1A60     		str	r2, [r3, #0]
 994 061e 23E0     		b	.L24
 995              	.L25:
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NAND Bank ECC function by clearing the ECCEN bit in the PCRx register *
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 996              		.loc 1 524 0
 997 0620 7B68     		ldr	r3, [r7, #4]
 998 0622 102B     		cmp	r3, #16
 999 0624 10D1     		bne	.L28
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_ECCEN_RESET;
 1000              		.loc 1 526 0
 1001 0626 4FF06002 		mov	r2, #96
 1002 062a CAF20002 		movt	r2, 40960
 1003 062e 4FF06003 		mov	r3, #96
 1004 0632 CAF20003 		movt	r3, 40960
 1005 0636 1B68     		ldr	r3, [r3, #0]
 1006 0638 1946     		mov	r1, r3
 1007 063a 4FF6BF73 		movw	r3, #65471
 1008 063e C0F20F03 		movt	r3, 15
 1009 0642 0B40     		ands	r3, r3, r1
 1010 0644 1360     		str	r3, [r2, #0]
 1011 0646 0FE0     		b	.L24
 1012              	.L28:
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_ECCEN_RESET;
 1013              		.loc 1 530 0
 1014 0648 4FF08002 		mov	r2, #128
 1015 064c CAF20002 		movt	r2, 40960
 1016 0650 4FF08003 		mov	r3, #128
 1017 0654 CAF20003 		movt	r3, 40960
 1018 0658 1B68     		ldr	r3, [r3, #0]
 1019 065a 1946     		mov	r1, r3
 1020 065c 4FF6BF73 		movw	r3, #65471
 1021 0660 C0F20F03 		movt	r3, 15
 1022 0664 0B40     		ands	r3, r3, r1
 1023 0666 1360     		str	r3, [r2, #0]
 1024              	.L24:
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1025              		.loc 1 533 0
 1026 0668 07F10C07 		add	r7, r7, #12
 1027 066c BD46     		mov	sp, r7
 1028 066e 80BC     		pop	{r7}
 1029 0670 7047     		bx	lr
 1030              		.cfi_endproc
 1031              	.LFE118:
 1033 0672 00BF     		.align	2
 1034              		.global	FSMC_GetECC
 1035              		.thumb
 1036              		.thumb_func
 1038              	FSMC_GetECC:
 1039              	.LFB119:
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Returns the error correction code register value.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The Error Correction Code (ECC) value.
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** uint32_t FSMC_GetECC(uint32_t FSMC_Bank)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1040              		.loc 1 544 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 16
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 1045 0674 80B4     		push	{r7}
 1046              	.LCFI27:
 1047              		.cfi_def_cfa_offset 4
 1048              		.cfi_offset 7, -4
 1049 0676 85B0     		sub	sp, sp, #20
 1050              	.LCFI28:
 1051              		.cfi_def_cfa_offset 24
 1052 0678 00AF     		add	r7, sp, #0
 1053              	.LCFI29:
 1054              		.cfi_def_cfa_register 7
 1055 067a 7860     		str	r0, [r7, #4]
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t eccval = 0x00000000;
 1056              		.loc 1 545 0
 1057 067c 4FF00003 		mov	r3, #0
 1058 0680 FB60     		str	r3, [r7, #12]
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1059              		.loc 1 547 0
 1060 0682 7B68     		ldr	r3, [r7, #4]
 1061 0684 102B     		cmp	r3, #16
 1062 0686 06D1     		bne	.L30
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Get the ECCR2 register value */
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     eccval = FSMC_Bank2->ECCR2;
 1063              		.loc 1 550 0
 1064 0688 4FF06003 		mov	r3, #96
 1065 068c CAF20003 		movt	r3, 40960
 1066 0690 5B69     		ldr	r3, [r3, #20]
 1067 0692 FB60     		str	r3, [r7, #12]
 1068 0694 05E0     		b	.L31
 1069              	.L30:
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Get the ECCR3 register value */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     eccval = FSMC_Bank3->ECCR3;
 1070              		.loc 1 555 0
 1071 0696 4FF08003 		mov	r3, #128
 1072 069a CAF20003 		movt	r3, 40960
 1073 069e 5B69     		ldr	r3, [r3, #20]
 1074 06a0 FB60     		str	r3, [r7, #12]
 1075              	.L31:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Return the error correction code value */
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return(eccval);
 1076              		.loc 1 558 0
 1077 06a2 FB68     		ldr	r3, [r7, #12]
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1078              		.loc 1 559 0
 1079 06a4 1846     		mov	r0, r3
 1080 06a6 07F11407 		add	r7, r7, #20
 1081 06aa BD46     		mov	sp, r7
 1082 06ac 80BC     		pop	{r7}
 1083 06ae 7047     		bx	lr
 1084              		.cfi_endproc
 1085              	.LFE119:
 1087              		.align	2
 1088              		.global	FSMC_PCCARDDeInit
 1089              		.thumb
 1090              		.thumb_func
 1092              	FSMC_PCCARDDeInit:
 1093              	.LFB120:
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group3 PCCARD Controller functions
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   PCCARD Controller functions 
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     PCCARD Controller functions
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  16-bit PC Card compatible memory connected to the PCCARD Bank:
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_PCCARDInitTypeDef structure, for example:
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDInitTypeDef  FSMC_PCCARDInitStructure;
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_PCCARDInitStructure variable with the allowed values of
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the PCCARD Controller by calling the function
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDInit(&FSMC_PCCARDInitStructure); 
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the PCCARD Bank:
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDCmd(ENABLE);  
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the PCCARD Bank. 
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC PCCARD Bank registers to their default reset values.
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  None                       
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDDeInit(void)
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1094              		.loc 1 608 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 06b0 80B4     		push	{r7}
 1100              	.LCFI30:
 1101              		.cfi_def_cfa_offset 4
 1102              		.cfi_offset 7, -4
 1103 06b2 00AF     		add	r7, sp, #0
 1104              	.LCFI31:
 1105              		.cfi_def_cfa_register 7
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the FSMC_Bank4 registers to their reset values */
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = 0x00000018; 
 1106              		.loc 1 610 0
 1107 06b4 4FF0A003 		mov	r3, #160
 1108 06b8 CAF20003 		movt	r3, 40960
 1109 06bc 4FF01802 		mov	r2, #24
 1110 06c0 1A60     		str	r2, [r3, #0]
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->SR4 = 0x00000000;	
 1111              		.loc 1 611 0
 1112 06c2 4FF0A003 		mov	r3, #160
 1113 06c6 CAF20003 		movt	r3, 40960
 1114 06ca 4FF00002 		mov	r2, #0
 1115 06ce 5A60     		str	r2, [r3, #4]
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = 0xFCFCFCFC;
 1116              		.loc 1 612 0
 1117 06d0 4FF0A003 		mov	r3, #160
 1118 06d4 CAF20003 		movt	r3, 40960
 1119 06d8 4FF0FC32 		mov	r2, #-50529028
 1120 06dc 9A60     		str	r2, [r3, #8]
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = 0xFCFCFCFC;
 1121              		.loc 1 613 0
 1122 06de 4FF0A003 		mov	r3, #160
 1123 06e2 CAF20003 		movt	r3, 40960
 1124 06e6 4FF0FC32 		mov	r2, #-50529028
 1125 06ea DA60     		str	r2, [r3, #12]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = 0xFCFCFCFC;
 1126              		.loc 1 614 0
 1127 06ec 4FF0A003 		mov	r3, #160
 1128 06f0 CAF20003 		movt	r3, 40960
 1129 06f4 4FF0FC32 		mov	r2, #-50529028
 1130 06f8 1A61     		str	r2, [r3, #16]
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1131              		.loc 1 615 0
 1132 06fa BD46     		mov	sp, r7
 1133 06fc 80BC     		pop	{r7}
 1134 06fe 7047     		bx	lr
 1135              		.cfi_endproc
 1136              	.LFE120:
 1138              		.align	2
 1139              		.global	FSMC_PCCARDInit
 1140              		.thumb
 1141              		.thumb_func
 1143              	FSMC_PCCARDInit:
 1144              	.LFB121:
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC PCCARD Bank according to the specified parameters
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         in the FSMC_PCCARDInitStruct.
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_PCCARDInitStruct : pointer to a FSMC_PCCARDInitTypeDef structure
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         that contains the configuration information for the FSMC PCCARD Bank.                  
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1145              		.loc 1 625 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 8
 1148              		@ frame_needed = 1, uses_anonymous_args = 0
 1149              		@ link register save eliminated.
 1150 0700 80B4     		push	{r7}
 1151              	.LCFI32:
 1152              		.cfi_def_cfa_offset 4
 1153              		.cfi_offset 7, -4
 1154 0702 83B0     		sub	sp, sp, #12
 1155              	.LCFI33:
 1156              		.cfi_def_cfa_offset 16
 1157 0704 00AF     		add	r7, sp, #0
 1158              	.LCFI34:
 1159              		.cfi_def_cfa_register 7
 1160 0706 7860     		str	r0, [r7, #4]
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_FEATURE(FSMC_PCCARDInitStruct->FSMC_Waitfeature));
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TCLR_TIME(FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime));
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TAR_TIME(FSMC_PCCARDInitStruct->FSMC_TARSetupTime));
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTi
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetu
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetu
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupT
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_Setu
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitS
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldS
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSet
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime))
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTim
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTim
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime)
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 1161              		.loc 1 646 0
 1162 0708 4FF0A003 		mov	r3, #160
 1163 070c CAF20003 		movt	r3, 40960
 1164 0710 7A68     		ldr	r2, [r7, #4]
 1165 0712 1168     		ldr	r1, [r2, #0]
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 1166              		.loc 1 648 0
 1167 0714 7A68     		ldr	r2, [r7, #4]
 1168 0716 5268     		ldr	r2, [r2, #4]
 1169 0718 4FEA4222 		lsl	r2, r2, #9
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 1170              		.loc 1 647 0
 1171 071c 1143     		orrs	r1, r1, r2
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
 1172              		.loc 1 649 0
 1173 071e 7A68     		ldr	r2, [r7, #4]
 1174 0720 9268     		ldr	r2, [r2, #8]
 1175 0722 4FEA4232 		lsl	r2, r2, #13
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 1176              		.loc 1 648 0
 1177 0726 0A43     		orrs	r2, r2, r1
 1178 0728 42F01002 		orr	r2, r2, #16
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 1179              		.loc 1 646 0
 1180 072c 1A60     		str	r2, [r3, #0]
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1181              		.loc 1 652 0
 1182 072e 4FF0A003 		mov	r3, #160
 1183 0732 CAF20003 		movt	r3, 40960
 1184 0736 7A68     		ldr	r2, [r7, #4]
 1185 0738 D268     		ldr	r2, [r2, #12]
 1186 073a 1168     		ldr	r1, [r2, #0]
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 1187              		.loc 1 653 0
 1188 073c 7A68     		ldr	r2, [r7, #4]
 1189 073e D268     		ldr	r2, [r2, #12]
 1190 0740 5268     		ldr	r2, [r2, #4]
 1191 0742 4FEA0222 		lsl	r2, r2, #8
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1192              		.loc 1 652 0
 1193 0746 1143     		orrs	r1, r1, r2
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 1194              		.loc 1 654 0
 1195 0748 7A68     		ldr	r2, [r7, #4]
 1196 074a D268     		ldr	r2, [r2, #12]
 1197 074c 9268     		ldr	r2, [r2, #8]
 1198 074e 4FEA0242 		lsl	r2, r2, #16
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 1199              		.loc 1 653 0
 1200 0752 1143     		orrs	r1, r1, r2
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24
 1201              		.loc 1 655 0
 1202 0754 7A68     		ldr	r2, [r7, #4]
 1203 0756 D268     		ldr	r2, [r2, #12]
 1204 0758 D268     		ldr	r2, [r2, #12]
 1205 075a 4FEA0262 		lsl	r2, r2, #24
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 1206              		.loc 1 654 0
 1207 075e 0A43     		orrs	r2, r2, r1
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1208              		.loc 1 652 0
 1209 0760 9A60     		str	r2, [r3, #8]
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1210              		.loc 1 658 0
 1211 0762 4FF0A003 		mov	r3, #160
 1212 0766 CAF20003 		movt	r3, 40960
 1213 076a 7A68     		ldr	r2, [r7, #4]
 1214 076c 1269     		ldr	r2, [r2, #16]
 1215 076e 1168     		ldr	r1, [r2, #0]
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 1216              		.loc 1 659 0
 1217 0770 7A68     		ldr	r2, [r7, #4]
 1218 0772 1269     		ldr	r2, [r2, #16]
 1219 0774 5268     		ldr	r2, [r2, #4]
 1220 0776 4FEA0222 		lsl	r2, r2, #8
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1221              		.loc 1 658 0
 1222 077a 1143     		orrs	r1, r1, r2
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 1223              		.loc 1 660 0
 1224 077c 7A68     		ldr	r2, [r7, #4]
 1225 077e 1269     		ldr	r2, [r2, #16]
 1226 0780 9268     		ldr	r2, [r2, #8]
 1227 0782 4FEA0242 		lsl	r2, r2, #16
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 1228              		.loc 1 659 0
 1229 0786 1143     		orrs	r1, r1, r2
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime <<
 1230              		.loc 1 661 0
 1231 0788 7A68     		ldr	r2, [r7, #4]
 1232 078a 1269     		ldr	r2, [r2, #16]
 1233 078c D268     		ldr	r2, [r2, #12]
 1234 078e 4FEA0262 		lsl	r2, r2, #24
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 1235              		.loc 1 660 0
 1236 0792 0A43     		orrs	r2, r2, r1
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1237              		.loc 1 658 0
 1238 0794 DA60     		str	r2, [r3, #12]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1239              		.loc 1 664 0
 1240 0796 4FF0A003 		mov	r3, #160
 1241 079a CAF20003 		movt	r3, 40960
 1242 079e 7A68     		ldr	r2, [r7, #4]
 1243 07a0 5269     		ldr	r2, [r2, #20]
 1244 07a2 1168     		ldr	r1, [r2, #0]
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1245              		.loc 1 665 0
 1246 07a4 7A68     		ldr	r2, [r7, #4]
 1247 07a6 5269     		ldr	r2, [r2, #20]
 1248 07a8 5268     		ldr	r2, [r2, #4]
 1249 07aa 4FEA0222 		lsl	r2, r2, #8
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1250              		.loc 1 664 0
 1251 07ae 1143     		orrs	r1, r1, r2
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1252              		.loc 1 666 0
 1253 07b0 7A68     		ldr	r2, [r7, #4]
 1254 07b2 5269     		ldr	r2, [r2, #20]
 1255 07b4 9268     		ldr	r2, [r2, #8]
 1256 07b6 4FEA0242 		lsl	r2, r2, #16
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1257              		.loc 1 665 0
 1258 07ba 1143     		orrs	r1, r1, r2
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime << 24);   
 1259              		.loc 1 667 0
 1260 07bc 7A68     		ldr	r2, [r7, #4]
 1261 07be 5269     		ldr	r2, [r2, #20]
 1262 07c0 D268     		ldr	r2, [r2, #12]
 1263 07c2 4FEA0262 		lsl	r2, r2, #24
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1264              		.loc 1 666 0
 1265 07c6 0A43     		orrs	r2, r2, r1
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1266              		.loc 1 664 0
 1267 07c8 1A61     		str	r2, [r3, #16]
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1268              		.loc 1 668 0
 1269 07ca 07F10C07 		add	r7, r7, #12
 1270 07ce BD46     		mov	sp, r7
 1271 07d0 80BC     		pop	{r7}
 1272 07d2 7047     		bx	lr
 1273              		.cfi_endproc
 1274              	.LFE121:
 1276              		.align	2
 1277              		.global	FSMC_PCCARDStructInit
 1278              		.thumb
 1279              		.thumb_func
 1281              	FSMC_PCCARDStructInit:
 1282              	.LFB122:
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_PCCARDInitStruct member with its default value.
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_PCCARDInitStruct: pointer to a FSMC_PCCARDInitTypeDef structure
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         which will be initialized.
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1283              		.loc 1 677 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 8
 1286              		@ frame_needed = 1, uses_anonymous_args = 0
 1287              		@ link register save eliminated.
 1288 07d4 80B4     		push	{r7}
 1289              	.LCFI35:
 1290              		.cfi_def_cfa_offset 4
 1291              		.cfi_offset 7, -4
 1292 07d6 83B0     		sub	sp, sp, #12
 1293              	.LCFI36:
 1294              		.cfi_def_cfa_offset 16
 1295 07d8 00AF     		add	r7, sp, #0
 1296              	.LCFI37:
 1297              		.cfi_def_cfa_register 7
 1298 07da 7860     		str	r0, [r7, #4]
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset PCCARD Init structure parameters values */
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 1299              		.loc 1 679 0
 1300 07dc 7B68     		ldr	r3, [r7, #4]
 1301 07de 4FF00002 		mov	r2, #0
 1302 07e2 1A60     		str	r2, [r3, #0]
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime = 0x0;
 1303              		.loc 1 680 0
 1304 07e4 7B68     		ldr	r3, [r7, #4]
 1305 07e6 4FF00002 		mov	r2, #0
 1306 07ea 5A60     		str	r2, [r3, #4]
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TARSetupTime = 0x0;
 1307              		.loc 1 681 0
 1308 07ec 7B68     		ldr	r3, [r7, #4]
 1309 07ee 4FF00002 		mov	r2, #0
 1310 07f2 9A60     		str	r2, [r3, #8]
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1311              		.loc 1 682 0
 1312 07f4 7B68     		ldr	r3, [r7, #4]
 1313 07f6 DB68     		ldr	r3, [r3, #12]
 1314 07f8 4FF0FC02 		mov	r2, #252
 1315 07fc 1A60     		str	r2, [r3, #0]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1316              		.loc 1 683 0
 1317 07fe 7B68     		ldr	r3, [r7, #4]
 1318 0800 DB68     		ldr	r3, [r3, #12]
 1319 0802 4FF0FC02 		mov	r2, #252
 1320 0806 5A60     		str	r2, [r3, #4]
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1321              		.loc 1 684 0
 1322 0808 7B68     		ldr	r3, [r7, #4]
 1323 080a DB68     		ldr	r3, [r3, #12]
 1324 080c 4FF0FC02 		mov	r2, #252
 1325 0810 9A60     		str	r2, [r3, #8]
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 1326              		.loc 1 685 0
 1327 0812 7B68     		ldr	r3, [r7, #4]
 1328 0814 DB68     		ldr	r3, [r3, #12]
 1329 0816 4FF0FC02 		mov	r2, #252
 1330 081a DA60     		str	r2, [r3, #12]
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1331              		.loc 1 686 0
 1332 081c 7B68     		ldr	r3, [r7, #4]
 1333 081e 1B69     		ldr	r3, [r3, #16]
 1334 0820 4FF0FC02 		mov	r2, #252
 1335 0824 1A60     		str	r2, [r3, #0]
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1336              		.loc 1 687 0
 1337 0826 7B68     		ldr	r3, [r7, #4]
 1338 0828 1B69     		ldr	r3, [r3, #16]
 1339 082a 4FF0FC02 		mov	r2, #252
 1340 082e 5A60     		str	r2, [r3, #4]
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1341              		.loc 1 688 0
 1342 0830 7B68     		ldr	r3, [r7, #4]
 1343 0832 1B69     		ldr	r3, [r3, #16]
 1344 0834 4FF0FC02 		mov	r2, #252
 1345 0838 9A60     		str	r2, [r3, #8]
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	
 1346              		.loc 1 689 0
 1347 083a 7B68     		ldr	r3, [r7, #4]
 1348 083c 1B69     		ldr	r3, [r3, #16]
 1349 083e 4FF0FC02 		mov	r2, #252
 1350 0842 DA60     		str	r2, [r3, #12]
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1351              		.loc 1 690 0
 1352 0844 7B68     		ldr	r3, [r7, #4]
 1353 0846 5B69     		ldr	r3, [r3, #20]
 1354 0848 4FF0FC02 		mov	r2, #252
 1355 084c 1A60     		str	r2, [r3, #0]
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1356              		.loc 1 691 0
 1357 084e 7B68     		ldr	r3, [r7, #4]
 1358 0850 5B69     		ldr	r3, [r3, #20]
 1359 0852 4FF0FC02 		mov	r2, #252
 1360 0856 5A60     		str	r2, [r3, #4]
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1361              		.loc 1 692 0
 1362 0858 7B68     		ldr	r3, [r7, #4]
 1363 085a 5B69     		ldr	r3, [r3, #20]
 1364 085c 4FF0FC02 		mov	r2, #252
 1365 0860 9A60     		str	r2, [r3, #8]
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 1366              		.loc 1 693 0
 1367 0862 7B68     		ldr	r3, [r7, #4]
 1368 0864 5B69     		ldr	r3, [r3, #20]
 1369 0866 4FF0FC02 		mov	r2, #252
 1370 086a DA60     		str	r2, [r3, #12]
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1371              		.loc 1 694 0
 1372 086c 07F10C07 		add	r7, r7, #12
 1373 0870 BD46     		mov	sp, r7
 1374 0872 80BC     		pop	{r7}
 1375 0874 7047     		bx	lr
 1376              		.cfi_endproc
 1377              	.LFE122:
 1379 0876 00BF     		.align	2
 1380              		.global	FSMC_PCCARDCmd
 1381              		.thumb
 1382              		.thumb_func
 1384              	FSMC_PCCARDCmd:
 1385              	.LFB123:
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the PCCARD Memory Bank.
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the PCCARD Memory Bank.  
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDCmd(FunctionalState NewState)
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1386              		.loc 1 703 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 8
 1389              		@ frame_needed = 1, uses_anonymous_args = 0
 1390              		@ link register save eliminated.
 1391 0878 80B4     		push	{r7}
 1392              	.LCFI38:
 1393              		.cfi_def_cfa_offset 4
 1394              		.cfi_offset 7, -4
 1395 087a 83B0     		sub	sp, sp, #12
 1396              	.LCFI39:
 1397              		.cfi_def_cfa_offset 16
 1398 087c 00AF     		add	r7, sp, #0
 1399              	.LCFI40:
 1400              		.cfi_def_cfa_register 7
 1401 087e 0346     		mov	r3, r0
 1402 0880 FB71     		strb	r3, [r7, #7]
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 1403              		.loc 1 706 0
 1404 0882 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1405 0884 002B     		cmp	r3, #0
 1406 0886 0CD0     		beq	.L36
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the PCCARD Bank by setting the PBKEN bit in the PCR4 register */
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->PCR4 |= PCR_PBKEN_SET;
 1407              		.loc 1 709 0
 1408 0888 4FF0A003 		mov	r3, #160
 1409 088c CAF20003 		movt	r3, 40960
 1410 0890 4FF0A002 		mov	r2, #160
 1411 0894 CAF20002 		movt	r2, 40960
 1412 0898 1268     		ldr	r2, [r2, #0]
 1413 089a 42F00402 		orr	r2, r2, #4
 1414 089e 1A60     		str	r2, [r3, #0]
 1415 08a0 0FE0     		b	.L35
 1416              	.L36:
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the PCCARD Bank by clearing the PBKEN bit in the PCR4 register */
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->PCR4 &= PCR_PBKEN_RESET;
 1417              		.loc 1 714 0
 1418 08a2 4FF0A002 		mov	r2, #160
 1419 08a6 CAF20002 		movt	r2, 40960
 1420 08aa 4FF0A003 		mov	r3, #160
 1421 08ae CAF20003 		movt	r3, 40960
 1422 08b2 1B68     		ldr	r3, [r3, #0]
 1423 08b4 1946     		mov	r1, r3
 1424 08b6 4FF6FB73 		movw	r3, #65531
 1425 08ba C0F20F03 		movt	r3, 15
 1426 08be 0B40     		ands	r3, r3, r1
 1427 08c0 1360     		str	r3, [r2, #0]
 1428              	.L35:
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1429              		.loc 1 716 0
 1430 08c2 07F10C07 		add	r7, r7, #12
 1431 08c6 BD46     		mov	sp, r7
 1432 08c8 80BC     		pop	{r7}
 1433 08ca 7047     		bx	lr
 1434              		.cfi_endproc
 1435              	.LFE123:
 1437              		.align	2
 1438              		.global	FSMC_ITConfig
 1439              		.thumb
 1440              		.thumb_func
 1442              	FSMC_ITConfig:
 1443              	.LFB124:
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group4  Interrupts and flags management functions
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief    Interrupts and flags management functions
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      Interrupts and flags management functions
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified FSMC interrupts.
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt sources to be enabled or disabled.
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the specified FSMC interrupts.
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ITConfig(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1444              		.loc 1 750 0
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 16
 1447              		@ frame_needed = 1, uses_anonymous_args = 0
 1448              		@ link register save eliminated.
 1449 08cc 80B4     		push	{r7}
 1450              	.LCFI41:
 1451              		.cfi_def_cfa_offset 4
 1452              		.cfi_offset 7, -4
 1453 08ce 85B0     		sub	sp, sp, #20
 1454              	.LCFI42:
 1455              		.cfi_def_cfa_offset 24
 1456 08d0 00AF     		add	r7, sp, #0
 1457              	.LCFI43:
 1458              		.cfi_def_cfa_register 7
 1459 08d2 F860     		str	r0, [r7, #12]
 1460 08d4 B960     		str	r1, [r7, #8]
 1461 08d6 1346     		mov	r3, r2
 1462 08d8 FB71     		strb	r3, [r7, #7]
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));	
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 1463              		.loc 1 755 0
 1464 08da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1465 08dc 002B     		cmp	r3, #0
 1466 08de 30D0     		beq	.L39
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank2 interrupts */
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 1467              		.loc 1 758 0
 1468 08e0 FB68     		ldr	r3, [r7, #12]
 1469 08e2 102B     		cmp	r3, #16
 1470 08e4 0DD1     		bne	.L40
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->SR2 |= FSMC_IT;
 1471              		.loc 1 760 0
 1472 08e6 4FF06003 		mov	r3, #96
 1473 08ea CAF20003 		movt	r3, 40960
 1474 08ee 4FF06002 		mov	r2, #96
 1475 08f2 CAF20002 		movt	r2, 40960
 1476 08f6 5268     		ldr	r2, [r2, #4]
 1477 08f8 1146     		mov	r1, r2
 1478 08fa BA68     		ldr	r2, [r7, #8]
 1479 08fc 0A43     		orrs	r2, r2, r1
 1480 08fe 5A60     		str	r2, [r3, #4]
 1481 0900 55E0     		b	.L38
 1482              	.L40:
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank3 interrupts */
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 1483              		.loc 1 763 0
 1484 0902 FB68     		ldr	r3, [r7, #12]
 1485 0904 B3F5807F 		cmp	r3, #256
 1486 0908 0DD1     		bne	.L42
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->SR3 |= FSMC_IT;
 1487              		.loc 1 765 0
 1488 090a 4FF08003 		mov	r3, #128
 1489 090e CAF20003 		movt	r3, 40960
 1490 0912 4FF08002 		mov	r2, #128
 1491 0916 CAF20002 		movt	r2, 40960
 1492 091a 5268     		ldr	r2, [r2, #4]
 1493 091c 1146     		mov	r1, r2
 1494 091e BA68     		ldr	r2, [r7, #8]
 1495 0920 0A43     		orrs	r2, r2, r1
 1496 0922 5A60     		str	r2, [r3, #4]
 1497 0924 43E0     		b	.L38
 1498              	.L42:
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank4 interrupts */
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank4->SR4 |= FSMC_IT;    
 1499              		.loc 1 770 0
 1500 0926 4FF0A003 		mov	r3, #160
 1501 092a CAF20003 		movt	r3, 40960
 1502 092e 4FF0A002 		mov	r2, #160
 1503 0932 CAF20002 		movt	r2, 40960
 1504 0936 5268     		ldr	r2, [r2, #4]
 1505 0938 1146     		mov	r1, r2
 1506 093a BA68     		ldr	r2, [r7, #8]
 1507 093c 0A43     		orrs	r2, r2, r1
 1508 093e 5A60     		str	r2, [r3, #4]
 1509 0940 35E0     		b	.L38
 1510              	.L39:
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank2 interrupts */
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 1511              		.loc 1 776 0
 1512 0942 FB68     		ldr	r3, [r7, #12]
 1513 0944 102B     		cmp	r3, #16
 1514 0946 0FD1     		bne	.L43
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->SR2 &= (uint32_t)~FSMC_IT;
 1515              		.loc 1 779 0
 1516 0948 4FF06003 		mov	r3, #96
 1517 094c CAF20003 		movt	r3, 40960
 1518 0950 4FF06002 		mov	r2, #96
 1519 0954 CAF20002 		movt	r2, 40960
 1520 0958 5268     		ldr	r2, [r2, #4]
 1521 095a 1146     		mov	r1, r2
 1522 095c BA68     		ldr	r2, [r7, #8]
 1523 095e 6FEA0202 		mvn	r2, r2
 1524 0962 0A40     		ands	r2, r2, r1
 1525 0964 5A60     		str	r2, [r3, #4]
 1526 0966 22E0     		b	.L38
 1527              	.L43:
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank3 interrupts */
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 1528              		.loc 1 782 0
 1529 0968 FB68     		ldr	r3, [r7, #12]
 1530 096a B3F5807F 		cmp	r3, #256
 1531 096e 0FD1     		bne	.L44
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->SR3 &= (uint32_t)~FSMC_IT;
 1532              		.loc 1 784 0
 1533 0970 4FF08003 		mov	r3, #128
 1534 0974 CAF20003 		movt	r3, 40960
 1535 0978 4FF08002 		mov	r2, #128
 1536 097c CAF20002 		movt	r2, 40960
 1537 0980 5268     		ldr	r2, [r2, #4]
 1538 0982 1146     		mov	r1, r2
 1539 0984 BA68     		ldr	r2, [r7, #8]
 1540 0986 6FEA0202 		mvn	r2, r2
 1541 098a 0A40     		ands	r2, r2, r1
 1542 098c 5A60     		str	r2, [r3, #4]
 1543 098e 0EE0     		b	.L38
 1544              	.L44:
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank4 interrupts */
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank4->SR4 &= (uint32_t)~FSMC_IT;    
 1545              		.loc 1 789 0
 1546 0990 4FF0A003 		mov	r3, #160
 1547 0994 CAF20003 		movt	r3, 40960
 1548 0998 4FF0A002 		mov	r2, #160
 1549 099c CAF20002 		movt	r2, 40960
 1550 09a0 5268     		ldr	r2, [r2, #4]
 1551 09a2 1146     		mov	r1, r2
 1552 09a4 BA68     		ldr	r2, [r7, #8]
 1553 09a6 6FEA0202 		mvn	r2, r2
 1554 09aa 0A40     		ands	r2, r2, r1
 1555 09ac 5A60     		str	r2, [r3, #4]
 1556              	.L38:
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1557              		.loc 1 792 0
 1558 09ae 07F11407 		add	r7, r7, #20
 1559 09b2 BD46     		mov	sp, r7
 1560 09b4 80BC     		pop	{r7}
 1561 09b6 7047     		bx	lr
 1562              		.cfi_endproc
 1563              	.LFE124:
 1565              		.align	2
 1566              		.global	FSMC_GetFlagStatus
 1567              		.thumb
 1568              		.thumb_func
 1570              	FSMC_GetFlagStatus:
 1571              	.LFB125:
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Checks whether the specified FSMC flag is set or not.
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to check.
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_RisingEdge: Rising edge detection Flag.
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_Level: Level detection Flag.
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FallingEdge: Falling edge detection Flag.
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FEMPT: Fifo empty Flag. 
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The new state of FSMC_FLAG (SET or RESET).
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** FlagStatus FSMC_GetFlagStatus(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1572              		.loc 1 810 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 16
 1575              		@ frame_needed = 1, uses_anonymous_args = 0
 1576              		@ link register save eliminated.
 1577 09b8 80B4     		push	{r7}
 1578              	.LCFI44:
 1579              		.cfi_def_cfa_offset 4
 1580              		.cfi_offset 7, -4
 1581 09ba 85B0     		sub	sp, sp, #20
 1582              	.LCFI45:
 1583              		.cfi_def_cfa_offset 24
 1584 09bc 00AF     		add	r7, sp, #0
 1585              	.LCFI46:
 1586              		.cfi_def_cfa_register 7
 1587 09be 7860     		str	r0, [r7, #4]
 1588 09c0 3960     		str	r1, [r7, #0]
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FlagStatus bitstatus = RESET;
 1589              		.loc 1 811 0
 1590 09c2 4FF00003 		mov	r3, #0
 1591 09c6 FB73     		strb	r3, [r7, #15]
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmpsr = 0x00000000;
 1592              		.loc 1 812 0
 1593 09c8 4FF00003 		mov	r3, #0
 1594 09cc BB60     		str	r3, [r7, #8]
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GET_FLAG(FSMC_FLAG));
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1595              		.loc 1 818 0
 1596 09ce 7B68     		ldr	r3, [r7, #4]
 1597 09d0 102B     		cmp	r3, #16
 1598 09d2 06D1     		bne	.L46
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 1599              		.loc 1 820 0
 1600 09d4 4FF06003 		mov	r3, #96
 1601 09d8 CAF20003 		movt	r3, 40960
 1602 09dc 5B68     		ldr	r3, [r3, #4]
 1603 09de BB60     		str	r3, [r7, #8]
 1604 09e0 10E0     		b	.L47
 1605              	.L46:
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1606              		.loc 1 822 0
 1607 09e2 7B68     		ldr	r3, [r7, #4]
 1608 09e4 B3F5807F 		cmp	r3, #256
 1609 09e8 06D1     		bne	.L48
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 1610              		.loc 1 824 0
 1611 09ea 4FF08003 		mov	r3, #128
 1612 09ee CAF20003 		movt	r3, 40960
 1613 09f2 5B68     		ldr	r3, [r3, #4]
 1614 09f4 BB60     		str	r3, [r7, #8]
 1615 09f6 05E0     		b	.L47
 1616              	.L48:
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 1617              		.loc 1 829 0
 1618 09f8 4FF0A003 		mov	r3, #160
 1619 09fc CAF20003 		movt	r3, 40960
 1620 0a00 5B68     		ldr	r3, [r3, #4]
 1621 0a02 BB60     		str	r3, [r7, #8]
 1622              	.L47:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   } 
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Get the flag status */
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if ((tmpsr & FSMC_FLAG) != (uint16_t)RESET )
 1623              		.loc 1 833 0
 1624 0a04 BA68     		ldr	r2, [r7, #8]
 1625 0a06 3B68     		ldr	r3, [r7, #0]
 1626 0a08 1340     		ands	r3, r3, r2
 1627 0a0a 002B     		cmp	r3, #0
 1628 0a0c 03D0     		beq	.L49
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = SET;
 1629              		.loc 1 835 0
 1630 0a0e 4FF00103 		mov	r3, #1
 1631 0a12 FB73     		strb	r3, [r7, #15]
 1632 0a14 02E0     		b	.L50
 1633              	.L49:
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = RESET;
 1634              		.loc 1 839 0
 1635 0a16 4FF00003 		mov	r3, #0
 1636 0a1a FB73     		strb	r3, [r7, #15]
 1637              	.L50:
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Return the flag status */
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return bitstatus;
 1638              		.loc 1 842 0
 1639 0a1c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1640              		.loc 1 843 0
 1641 0a1e 1846     		mov	r0, r3
 1642 0a20 07F11407 		add	r7, r7, #20
 1643 0a24 BD46     		mov	sp, r7
 1644 0a26 80BC     		pop	{r7}
 1645 0a28 7047     		bx	lr
 1646              		.cfi_endproc
 1647              	.LFE125:
 1649 0a2a 00BF     		.align	2
 1650              		.global	FSMC_ClearFlag
 1651              		.thumb
 1652              		.thumb_func
 1654              	FSMC_ClearFlag:
 1655              	.LFB126:
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Clears the FSMC's pending flags.
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to clear.
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_RisingEdge: Rising edge detection Flag.
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_Level: Level detection Flag.
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FallingEdge: Falling edge detection Flag.
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ClearFlag(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1656              		.loc 1 860 0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 8
 1659              		@ frame_needed = 1, uses_anonymous_args = 0
 1660              		@ link register save eliminated.
 1661 0a2c 80B4     		push	{r7}
 1662              	.LCFI47:
 1663              		.cfi_def_cfa_offset 4
 1664              		.cfi_offset 7, -4
 1665 0a2e 83B0     		sub	sp, sp, #12
 1666              	.LCFI48:
 1667              		.cfi_def_cfa_offset 16
 1668 0a30 00AF     		add	r7, sp, #0
 1669              	.LCFI49:
 1670              		.cfi_def_cfa_register 7
 1671 0a32 7860     		str	r0, [r7, #4]
 1672 0a34 3960     		str	r1, [r7, #0]
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  /* Check the parameters */
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_CLEAR_FLAG(FSMC_FLAG)) ;
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1673              		.loc 1 865 0
 1674 0a36 7B68     		ldr	r3, [r7, #4]
 1675 0a38 102B     		cmp	r3, #16
 1676 0a3a 0FD1     		bne	.L52
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 &= ~FSMC_FLAG; 
 1677              		.loc 1 867 0
 1678 0a3c 4FF06003 		mov	r3, #96
 1679 0a40 CAF20003 		movt	r3, 40960
 1680 0a44 4FF06002 		mov	r2, #96
 1681 0a48 CAF20002 		movt	r2, 40960
 1682 0a4c 5268     		ldr	r2, [r2, #4]
 1683 0a4e 1146     		mov	r1, r2
 1684 0a50 3A68     		ldr	r2, [r7, #0]
 1685 0a52 6FEA0202 		mvn	r2, r2
 1686 0a56 0A40     		ands	r2, r2, r1
 1687 0a58 5A60     		str	r2, [r3, #4]
 1688 0a5a 22E0     		b	.L51
 1689              	.L52:
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1690              		.loc 1 869 0
 1691 0a5c 7B68     		ldr	r3, [r7, #4]
 1692 0a5e B3F5807F 		cmp	r3, #256
 1693 0a62 0FD1     		bne	.L54
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 &= ~FSMC_FLAG;
 1694              		.loc 1 871 0
 1695 0a64 4FF08003 		mov	r3, #128
 1696 0a68 CAF20003 		movt	r3, 40960
 1697 0a6c 4FF08002 		mov	r2, #128
 1698 0a70 CAF20002 		movt	r2, 40960
 1699 0a74 5268     		ldr	r2, [r2, #4]
 1700 0a76 1146     		mov	r1, r2
 1701 0a78 3A68     		ldr	r2, [r7, #0]
 1702 0a7a 6FEA0202 		mvn	r2, r2
 1703 0a7e 0A40     		ands	r2, r2, r1
 1704 0a80 5A60     		str	r2, [r3, #4]
 1705 0a82 0EE0     		b	.L51
 1706              	.L54:
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->SR4 &= ~FSMC_FLAG;
 1707              		.loc 1 876 0
 1708 0a84 4FF0A003 		mov	r3, #160
 1709 0a88 CAF20003 		movt	r3, 40960
 1710 0a8c 4FF0A002 		mov	r2, #160
 1711 0a90 CAF20002 		movt	r2, 40960
 1712 0a94 5268     		ldr	r2, [r2, #4]
 1713 0a96 1146     		mov	r1, r2
 1714 0a98 3A68     		ldr	r2, [r7, #0]
 1715 0a9a 6FEA0202 		mvn	r2, r2
 1716 0a9e 0A40     		ands	r2, r2, r1
 1717 0aa0 5A60     		str	r2, [r3, #4]
 1718              	.L51:
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1719              		.loc 1 878 0
 1720 0aa2 07F10C07 		add	r7, r7, #12
 1721 0aa6 BD46     		mov	sp, r7
 1722 0aa8 80BC     		pop	{r7}
 1723 0aaa 7047     		bx	lr
 1724              		.cfi_endproc
 1725              	.LFE126:
 1727              		.align	2
 1728              		.global	FSMC_GetITStatus
 1729              		.thumb
 1730              		.thumb_func
 1732              	FSMC_GetITStatus:
 1733              	.LFB127:
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Checks whether the specified FSMC interrupt has occurred or not.
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt source to check.
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt. 
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The new state of FSMC_IT (SET or RESET).
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** ITStatus FSMC_GetITStatus(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1734              		.loc 1 895 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 24
 1737              		@ frame_needed = 1, uses_anonymous_args = 0
 1738              		@ link register save eliminated.
 1739 0aac 80B4     		push	{r7}
 1740              	.LCFI50:
 1741              		.cfi_def_cfa_offset 4
 1742              		.cfi_offset 7, -4
 1743 0aae 87B0     		sub	sp, sp, #28
 1744              	.LCFI51:
 1745              		.cfi_def_cfa_offset 32
 1746 0ab0 00AF     		add	r7, sp, #0
 1747              	.LCFI52:
 1748              		.cfi_def_cfa_register 7
 1749 0ab2 7860     		str	r0, [r7, #4]
 1750 0ab4 3960     		str	r1, [r7, #0]
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ITStatus bitstatus = RESET;
 1751              		.loc 1 896 0
 1752 0ab6 4FF00003 		mov	r3, #0
 1753 0aba FB75     		strb	r3, [r7, #23]
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmpsr = 0x0, itstatus = 0x0, itenable = 0x0; 
 1754              		.loc 1 897 0
 1755 0abc 4FF00003 		mov	r3, #0
 1756 0ac0 3B61     		str	r3, [r7, #16]
 1757 0ac2 4FF00003 		mov	r3, #0
 1758 0ac6 FB60     		str	r3, [r7, #12]
 1759 0ac8 4FF00003 		mov	r3, #0
 1760 0acc BB60     		str	r3, [r7, #8]
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GET_IT(FSMC_IT));
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1761              		.loc 1 903 0
 1762 0ace 7B68     		ldr	r3, [r7, #4]
 1763 0ad0 102B     		cmp	r3, #16
 1764 0ad2 06D1     		bne	.L56
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 1765              		.loc 1 905 0
 1766 0ad4 4FF06003 		mov	r3, #96
 1767 0ad8 CAF20003 		movt	r3, 40960
 1768 0adc 5B68     		ldr	r3, [r3, #4]
 1769 0ade 3B61     		str	r3, [r7, #16]
 1770 0ae0 10E0     		b	.L57
 1771              	.L56:
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1772              		.loc 1 907 0
 1773 0ae2 7B68     		ldr	r3, [r7, #4]
 1774 0ae4 B3F5807F 		cmp	r3, #256
 1775 0ae8 06D1     		bne	.L58
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 1776              		.loc 1 909 0
 1777 0aea 4FF08003 		mov	r3, #128
 1778 0aee CAF20003 		movt	r3, 40960
 1779 0af2 5B68     		ldr	r3, [r3, #4]
 1780 0af4 3B61     		str	r3, [r7, #16]
 1781 0af6 05E0     		b	.L57
 1782              	.L58:
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 1783              		.loc 1 914 0
 1784 0af8 4FF0A003 		mov	r3, #160
 1785 0afc CAF20003 		movt	r3, 40960
 1786 0b00 5B68     		ldr	r3, [r3, #4]
 1787 0b02 3B61     		str	r3, [r7, #16]
 1788              	.L57:
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   } 
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   itstatus = tmpsr & FSMC_IT;
 1789              		.loc 1 917 0
 1790 0b04 3A69     		ldr	r2, [r7, #16]
 1791 0b06 3B68     		ldr	r3, [r7, #0]
 1792 0b08 1340     		ands	r3, r3, r2
 1793 0b0a FB60     		str	r3, [r7, #12]
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   itenable = tmpsr & (FSMC_IT >> 3);
 1794              		.loc 1 919 0
 1795 0b0c 3B68     		ldr	r3, [r7, #0]
 1796 0b0e 4FEAD302 		lsr	r2, r3, #3
 1797 0b12 3B69     		ldr	r3, [r7, #16]
 1798 0b14 1340     		ands	r3, r3, r2
 1799 0b16 BB60     		str	r3, [r7, #8]
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if ((itstatus != (uint32_t)RESET)  && (itenable != (uint32_t)RESET))
 1800              		.loc 1 920 0
 1801 0b18 FB68     		ldr	r3, [r7, #12]
 1802 0b1a 002B     		cmp	r3, #0
 1803 0b1c 06D0     		beq	.L59
 1804              		.loc 1 920 0 is_stmt 0 discriminator 1
 1805 0b1e BB68     		ldr	r3, [r7, #8]
 1806 0b20 002B     		cmp	r3, #0
 1807 0b22 03D0     		beq	.L59
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = SET;
 1808              		.loc 1 922 0 is_stmt 1
 1809 0b24 4FF00103 		mov	r3, #1
 1810 0b28 FB75     		strb	r3, [r7, #23]
 1811 0b2a 02E0     		b	.L60
 1812              	.L59:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = RESET;
 1813              		.loc 1 926 0
 1814 0b2c 4FF00003 		mov	r3, #0
 1815 0b30 FB75     		strb	r3, [r7, #23]
 1816              	.L60:
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return bitstatus; 
 1817              		.loc 1 928 0
 1818 0b32 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1819              		.loc 1 929 0
 1820 0b34 1846     		mov	r0, r3
 1821 0b36 07F11C07 		add	r7, r7, #28
 1822 0b3a BD46     		mov	sp, r7
 1823 0b3c 80BC     		pop	{r7}
 1824 0b3e 7047     		bx	lr
 1825              		.cfi_endproc
 1826              	.LFE127:
 1828              		.align	2
 1829              		.global	FSMC_ClearITPendingBit
 1830              		.thumb
 1831              		.thumb_func
 1833              	FSMC_ClearITPendingBit:
 1834              	.LFB128:
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Clears the FSMC's interrupt pending bits.
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the interrupt pending bit to clear.
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ClearITPendingBit(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1835              		.loc 1 946 0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 8
 1838              		@ frame_needed = 1, uses_anonymous_args = 0
 1839              		@ link register save eliminated.
 1840 0b40 80B4     		push	{r7}
 1841              	.LCFI53:
 1842              		.cfi_def_cfa_offset 4
 1843              		.cfi_offset 7, -4
 1844 0b42 83B0     		sub	sp, sp, #12
 1845              	.LCFI54:
 1846              		.cfi_def_cfa_offset 16
 1847 0b44 00AF     		add	r7, sp, #0
 1848              	.LCFI55:
 1849              		.cfi_def_cfa_register 7
 1850 0b46 7860     		str	r0, [r7, #4]
 1851 0b48 3960     		str	r1, [r7, #0]
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1852              		.loc 1 951 0
 1853 0b4a 7B68     		ldr	r3, [r7, #4]
 1854 0b4c 102B     		cmp	r3, #16
 1855 0b4e 11D1     		bne	.L62
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 &= ~(FSMC_IT >> 3); 
 1856              		.loc 1 953 0
 1857 0b50 4FF06003 		mov	r3, #96
 1858 0b54 CAF20003 		movt	r3, 40960
 1859 0b58 4FF06002 		mov	r2, #96
 1860 0b5c CAF20002 		movt	r2, 40960
 1861 0b60 5268     		ldr	r2, [r2, #4]
 1862 0b62 1146     		mov	r1, r2
 1863 0b64 3A68     		ldr	r2, [r7, #0]
 1864 0b66 4FEAD202 		lsr	r2, r2, #3
 1865 0b6a 6FEA0202 		mvn	r2, r2
 1866 0b6e 0A40     		ands	r2, r2, r1
 1867 0b70 5A60     		str	r2, [r3, #4]
 1868 0b72 26E0     		b	.L61
 1869              	.L62:
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1870              		.loc 1 955 0
 1871 0b74 7B68     		ldr	r3, [r7, #4]
 1872 0b76 B3F5807F 		cmp	r3, #256
 1873 0b7a 11D1     		bne	.L64
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 &= ~(FSMC_IT >> 3);
 1874              		.loc 1 957 0
 1875 0b7c 4FF08003 		mov	r3, #128
 1876 0b80 CAF20003 		movt	r3, 40960
 1877 0b84 4FF08002 		mov	r2, #128
 1878 0b88 CAF20002 		movt	r2, 40960
 1879 0b8c 5268     		ldr	r2, [r2, #4]
 1880 0b8e 1146     		mov	r1, r2
 1881 0b90 3A68     		ldr	r2, [r7, #0]
 1882 0b92 4FEAD202 		lsr	r2, r2, #3
 1883 0b96 6FEA0202 		mvn	r2, r2
 1884 0b9a 0A40     		ands	r2, r2, r1
 1885 0b9c 5A60     		str	r2, [r3, #4]
 1886 0b9e 10E0     		b	.L61
 1887              	.L64:
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->SR4 &= ~(FSMC_IT >> 3);
 1888              		.loc 1 962 0
 1889 0ba0 4FF0A003 		mov	r3, #160
 1890 0ba4 CAF20003 		movt	r3, 40960
 1891 0ba8 4FF0A002 		mov	r2, #160
 1892 0bac CAF20002 		movt	r2, 40960
 1893 0bb0 5268     		ldr	r2, [r2, #4]
 1894 0bb2 1146     		mov	r1, r2
 1895 0bb4 3A68     		ldr	r2, [r7, #0]
 1896 0bb6 4FEAD202 		lsr	r2, r2, #3
 1897 0bba 6FEA0202 		mvn	r2, r2
 1898 0bbe 0A40     		ands	r2, r2, r1
 1899 0bc0 5A60     		str	r2, [r3, #4]
 1900              	.L61:
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1901              		.loc 1 964 0
 1902 0bc2 07F10C07 		add	r7, r7, #12
 1903 0bc6 BD46     		mov	sp, r7
 1904 0bc8 80BC     		pop	{r7}
 1905 0bca 7047     		bx	lr
 1906              		.cfi_endproc
 1907              	.LFE128:
 1909              	.Letext0:
 1910              		.file 2 "c:\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib/gcc/arm-none-eabi
 1911              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 1912              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_fsmc.
 1913              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_fsmc.c
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:19     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:24     .text:00000000 FSMC_NORSRAMDeInit
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:85     .text:0000005c FSMC_NORSRAMInit
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:308    .text:000001ac FSMC_NORSRAMStructInit
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:461    .text:000002b4 FSMC_NORSRAMCmd
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:520    .text:0000030c FSMC_NANDDeInit
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:598    .text:00000398 FSMC_NANDInit
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:759    .text:00000498 FSMC_NANDStructInit
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:858    .text:00000534 FSMC_NANDCmd
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:948    .text:000005d4 FSMC_NANDECCCmd
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1038   .text:00000674 FSMC_GetECC
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1092   .text:000006b0 FSMC_PCCARDDeInit
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1143   .text:00000700 FSMC_PCCARDInit
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1281   .text:000007d4 FSMC_PCCARDStructInit
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1384   .text:00000878 FSMC_PCCARDCmd
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1442   .text:000008cc FSMC_ITConfig
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1570   .text:000009b8 FSMC_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1654   .text:00000a2c FSMC_ClearFlag
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1732   .text:00000aac FSMC_GetITStatus
C:\Users\Alex\AppData\Local\Temp\ccIjsS1M.s:1833   .text:00000b40 FSMC_ClearITPendingBit
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
