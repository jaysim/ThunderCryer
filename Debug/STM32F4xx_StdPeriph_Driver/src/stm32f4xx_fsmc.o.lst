   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_fsmc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	FSMC_NORSRAMDeInit
  20              		.thumb
  21              		.thumb_func
  23              	FSMC_NORSRAMDeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @file    stm32f4xx_fsmc.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  * @brief    This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          functionalities of the FSMC peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with SRAM, PSRAM, NOR and OneNAND memories
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with NAND memories
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with 16-bit PC Card compatible memories  
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interrupts and flags management   
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @attention
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Includes ------------------------------------------------------------------*/
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #include "stm32f4xx_fsmc.h"
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #include "stm32f4xx_rcc.h"
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief FSMC driver modules
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */ 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private typedef -----------------------------------------------------------*/
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private define ------------------------------------------------------------*/
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* --------------------- FSMC registers bit mask ---------------------------- */
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* FSMC BCRx Mask */
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_MBKEN_SET          ((uint32_t)0x00000001)
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_MBKEN_RESET        ((uint32_t)0x000FFFFE)
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_FACCEN_SET         ((uint32_t)0x00000040)
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* FSMC PCRx Mask */
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_PBKEN_SET          ((uint32_t)0x00000004)
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_PBKEN_RESET        ((uint32_t)0x000FFFFB)
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_ECCEN_SET          ((uint32_t)0x00000040)
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_ECCEN_RESET        ((uint32_t)0x000FFFBF)
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_MEMORYTYPE_NAND    ((uint32_t)0x00000008)
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private macro -------------------------------------------------------------*/
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private variables ---------------------------------------------------------*/
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private function prototypes -----------------------------------------------*/
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private functions ---------------------------------------------------------*/
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Private_Functions
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group1 NOR/SRAM Controller functions
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   NOR/SRAM Controller functions 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     NOR/SRAM Controller functions
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  SRAM, PSRAM, NOR or OneNAND memory connected to the NOR/SRAM Bank:
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_NORSRAMInitTypeDef structure, for example:
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_NORSRAMInitStructure variable with the allowed values of
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the NOR/SRAM Controller by calling the function
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the NOR/SRAM Bank, for example:
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM2, ENABLE);  
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the NOR/SRAM Bank. 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC NOR/SRAM Banks registers to their default 
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *   reset values.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMDeInit(uint32_t FSMC_Bank)
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
  26              		.loc 1 117 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 80B4     		push	{r7}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameter */
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank1_NORSRAM1 */
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank1_NORSRAM1)
  42              		.loc 1 122 0
  43 0008 7B68     		ldr	r3, [r7, #4]
  44 000a 002B     		cmp	r3, #0
  45 000c 07D1     		bne	.L2
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030DB;    
  46              		.loc 1 124 0
  47 000e 4FF02043 		mov	r3, #-1610612736
  48 0012 7A68     		ldr	r2, [r7, #4]
  49 0014 43F2DB01 		movw	r1, #12507
  50 0018 43F82210 		str	r1, [r3, r2, lsl #2]
  51 001c 06E0     		b	.L3
  52              	.L2:
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank1_NORSRAM2,  FSMC_Bank1_NORSRAM3 or FSMC_Bank1_NORSRAM4 */
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {   
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030D2; 
  53              		.loc 1 129 0
  54 001e 4FF02043 		mov	r3, #-1610612736
  55 0022 7A68     		ldr	r2, [r7, #4]
  56 0024 43F2D201 		movw	r1, #12498
  57 0028 43F82210 		str	r1, [r3, r2, lsl #2]
  58              	.L3:
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_Bank + 1] = 0x0FFFFFFF;
  59              		.loc 1 131 0
  60 002c 4FF02043 		mov	r3, #-1610612736
  61 0030 7A68     		ldr	r2, [r7, #4]
  62 0032 02F10102 		add	r2, r2, #1
  63 0036 6FF07041 		mvn	r1, #-268435456
  64 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1E->BWTR[FSMC_Bank] = 0x0FFFFFFF;  
  65              		.loc 1 132 0
  66 003e 4FF48273 		mov	r3, #260
  67 0042 CAF20003 		movt	r3, 40960
  68 0046 7A68     		ldr	r2, [r7, #4]
  69 0048 6FF07041 		mvn	r1, #-268435456
  70 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
  71              		.loc 1 133 0
  72 0050 07F10C07 		add	r7, r7, #12
  73 0054 BD46     		mov	sp, r7
  74 0056 80BC     		pop	{r7}
  75 0058 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE110:
  79 005a 00BF     		.align	2
  80              		.global	FSMC_NORSRAMInit
  81              		.thumb
  82              		.thumb_func
  84              	FSMC_NORSRAMInit:
  85              	.LFB111:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC NOR/SRAM Banks according to the specified
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         parameters in the FSMC_NORSRAMInitStruct.
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct : pointer to a FSMC_NORSRAMInitTypeDef structure
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         that contains the configuration information for the FSMC NOR/SRAM 
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         specified Banks.                       
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** { 
  86              		.loc 1 144 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 005c 80B4     		push	{r7}
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 7, -4
  95 005e 83B0     		sub	sp, sp, #12
  96              	.LCFI4:
  97              		.cfi_def_cfa_offset 16
  98 0060 00AF     		add	r7, sp, #0
  99              	.LCFI5:
 100              		.cfi_def_cfa_register 7
 101 0062 7860     		str	r0, [r7, #4]
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_NORSRAMInitStruct->FSMC_Bank));
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MUX(FSMC_NORSRAMInitStruct->FSMC_DataAddressMux));
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MEMORY(FSMC_NORSRAMInitStruct->FSMC_MemoryType));
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MEMORY_WIDTH(FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth));
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_BURSTMODE(FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode));
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ASYNWAIT(FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait));
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_POLARITY(FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity));
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRAP_MODE(FSMC_NORSRAMInitStruct->FSMC_WrapMode));
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_SIGNAL_ACTIVE(FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive));
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRITE_OPERATION(FSMC_NORSRAMInitStruct->FSMC_WriteOperation));
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAITE_SIGNAL(FSMC_NORSRAMInitStruct->FSMC_WaitSignal));
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_EXTENDED_MODE(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode));
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRITE_BURST(FSMC_NORSRAMInitStruct->FSMC_WriteBurst));  
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_A
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Data
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TURNAROUND_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Bus
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLa
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessM
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM control register configuration */ 
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 102              		.loc 1 168 0
 103 0064 4FF02043 		mov	r3, #-1610612736
 104 0068 7A68     		ldr	r2, [r7, #4]
 105 006a 1268     		ldr	r2, [r2, #0]
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
 106              		.loc 1 169 0
 107 006c 7968     		ldr	r1, [r7, #4]
 108 006e 4868     		ldr	r0, [r1, #4]
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
 109              		.loc 1 170 0
 110 0070 7968     		ldr	r1, [r7, #4]
 111 0072 8968     		ldr	r1, [r1, #8]
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
 112              		.loc 1 169 0
 113 0074 0843     		orrs	r0, r0, r1
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
 114              		.loc 1 171 0
 115 0076 7968     		ldr	r1, [r7, #4]
 116 0078 C968     		ldr	r1, [r1, #12]
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
 117              		.loc 1 170 0
 118 007a 0843     		orrs	r0, r0, r1
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
 119              		.loc 1 172 0
 120 007c 7968     		ldr	r1, [r7, #4]
 121 007e 0969     		ldr	r1, [r1, #16]
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
 122              		.loc 1 171 0
 123 0080 0843     		orrs	r0, r0, r1
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
 124              		.loc 1 173 0
 125 0082 7968     		ldr	r1, [r7, #4]
 126 0084 4969     		ldr	r1, [r1, #20]
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
 127              		.loc 1 172 0
 128 0086 0843     		orrs	r0, r0, r1
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
 129              		.loc 1 174 0
 130 0088 7968     		ldr	r1, [r7, #4]
 131 008a 8969     		ldr	r1, [r1, #24]
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
 132              		.loc 1 173 0
 133 008c 0843     		orrs	r0, r0, r1
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
 134              		.loc 1 175 0
 135 008e 7968     		ldr	r1, [r7, #4]
 136 0090 C969     		ldr	r1, [r1, #28]
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
 137              		.loc 1 174 0
 138 0092 0843     		orrs	r0, r0, r1
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 139              		.loc 1 176 0
 140 0094 7968     		ldr	r1, [r7, #4]
 141 0096 096A     		ldr	r1, [r1, #32]
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
 142              		.loc 1 175 0
 143 0098 0843     		orrs	r0, r0, r1
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 144              		.loc 1 177 0
 145 009a 7968     		ldr	r1, [r7, #4]
 146 009c 496A     		ldr	r1, [r1, #36]
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 147              		.loc 1 176 0
 148 009e 0843     		orrs	r0, r0, r1
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 149              		.loc 1 178 0
 150 00a0 7968     		ldr	r1, [r7, #4]
 151 00a2 896A     		ldr	r1, [r1, #40]
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 152              		.loc 1 177 0
 153 00a4 0843     		orrs	r0, r0, r1
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 154              		.loc 1 179 0
 155 00a6 7968     		ldr	r1, [r7, #4]
 156 00a8 C96A     		ldr	r1, [r1, #44]
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 157              		.loc 1 178 0
 158 00aa 0843     		orrs	r0, r0, r1
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteBurst;
 159              		.loc 1 180 0
 160 00ac 7968     		ldr	r1, [r7, #4]
 161 00ae 096B     		ldr	r1, [r1, #48]
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 162              		.loc 1 179 0
 163 00b0 0143     		orrs	r1, r1, r0
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 164              		.loc 1 168 0
 165 00b2 43F82210 		str	r1, [r3, r2, lsl #2]
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_MemoryType == FSMC_MemoryType_NOR)
 166              		.loc 1 181 0
 167 00b6 7B68     		ldr	r3, [r7, #4]
 168 00b8 9B68     		ldr	r3, [r3, #8]
 169 00ba 082B     		cmp	r3, #8
 170 00bc 0DD1     		bne	.L5
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (uint32_t)BCR_FACCEN_SET;
 171              		.loc 1 183 0
 172 00be 4FF02043 		mov	r3, #-1610612736
 173 00c2 7A68     		ldr	r2, [r7, #4]
 174 00c4 1268     		ldr	r2, [r2, #0]
 175 00c6 4FF02041 		mov	r1, #-1610612736
 176 00ca 7868     		ldr	r0, [r7, #4]
 177 00cc 0068     		ldr	r0, [r0, #0]
 178 00ce 51F82010 		ldr	r1, [r1, r0, lsl #2]
 179 00d2 41F04001 		orr	r1, r1, #64
 180 00d6 43F82210 		str	r1, [r3, r2, lsl #2]
 181              	.L5:
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM timing register configuration */
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 182              		.loc 1 186 0
 183 00da 4FF02043 		mov	r3, #-1610612736
 184 00de 7A68     		ldr	r2, [r7, #4]
 185 00e0 1268     		ldr	r2, [r2, #0]
 186 00e2 02F10102 		add	r2, r2, #1
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 187              		.loc 1 187 0
 188 00e6 7968     		ldr	r1, [r7, #4]
 189 00e8 496B     		ldr	r1, [r1, #52]
 190 00ea 0868     		ldr	r0, [r1, #0]
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 191              		.loc 1 188 0
 192 00ec 7968     		ldr	r1, [r7, #4]
 193 00ee 496B     		ldr	r1, [r1, #52]
 194 00f0 4968     		ldr	r1, [r1, #4]
 195 00f2 4FEA0111 		lsl	r1, r1, #4
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 196              		.loc 1 187 0
 197 00f6 0843     		orrs	r0, r0, r1
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 198              		.loc 1 189 0
 199 00f8 7968     		ldr	r1, [r7, #4]
 200 00fa 496B     		ldr	r1, [r1, #52]
 201 00fc 8968     		ldr	r1, [r1, #8]
 202 00fe 4FEA0121 		lsl	r1, r1, #8
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 203              		.loc 1 188 0
 204 0102 0843     		orrs	r0, r0, r1
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 205              		.loc 1 190 0
 206 0104 7968     		ldr	r1, [r7, #4]
 207 0106 496B     		ldr	r1, [r1, #52]
 208 0108 C968     		ldr	r1, [r1, #12]
 209 010a 4FEA0141 		lsl	r1, r1, #16
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 210              		.loc 1 189 0
 211 010e 0843     		orrs	r0, r0, r1
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 212              		.loc 1 191 0
 213 0110 7968     		ldr	r1, [r7, #4]
 214 0112 496B     		ldr	r1, [r1, #52]
 215 0114 0969     		ldr	r1, [r1, #16]
 216 0116 4FEA0151 		lsl	r1, r1, #20
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 217              		.loc 1 190 0
 218 011a 0843     		orrs	r0, r0, r1
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 219              		.loc 1 192 0
 220 011c 7968     		ldr	r1, [r7, #4]
 221 011e 496B     		ldr	r1, [r1, #52]
 222 0120 4969     		ldr	r1, [r1, #20]
 223 0122 4FEA0161 		lsl	r1, r1, #24
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 224              		.loc 1 191 0
 225 0126 0843     		orrs	r0, r0, r1
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****              FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode;
 226              		.loc 1 193 0
 227 0128 7968     		ldr	r1, [r7, #4]
 228 012a 496B     		ldr	r1, [r1, #52]
 229 012c 8969     		ldr	r1, [r1, #24]
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 230              		.loc 1 192 0
 231 012e 0143     		orrs	r1, r1, r0
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 232              		.loc 1 186 0
 233 0130 43F82210 		str	r1, [r3, r2, lsl #2]
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM timing register for write configuration, if extended mode is used */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode == FSMC_ExtendedMode_Enable)
 234              		.loc 1 197 0
 235 0134 7B68     		ldr	r3, [r7, #4]
 236 0136 DB6A     		ldr	r3, [r3, #44]
 237 0138 B3F5804F 		cmp	r3, #16384
 238 013c 27D1     		bne	.L6
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Ad
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Add
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSe
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision))
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLate
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMod
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 239              		.loc 1 205 0
 240 013e 4FF48273 		mov	r3, #260
 241 0142 CAF20003 		movt	r3, 40960
 242 0146 7A68     		ldr	r2, [r7, #4]
 243 0148 1268     		ldr	r2, [r2, #0]
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 244              		.loc 1 206 0
 245 014a 7968     		ldr	r1, [r7, #4]
 246 014c 896B     		ldr	r1, [r1, #56]
 247 014e 0868     		ldr	r0, [r1, #0]
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 248              		.loc 1 207 0
 249 0150 7968     		ldr	r1, [r7, #4]
 250 0152 896B     		ldr	r1, [r1, #56]
 251 0154 4968     		ldr	r1, [r1, #4]
 252 0156 4FEA0111 		lsl	r1, r1, #4
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 253              		.loc 1 206 0
 254 015a 0843     		orrs	r0, r0, r1
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 255              		.loc 1 208 0
 256 015c 7968     		ldr	r1, [r7, #4]
 257 015e 896B     		ldr	r1, [r1, #56]
 258 0160 8968     		ldr	r1, [r1, #8]
 259 0162 4FEA0121 		lsl	r1, r1, #8
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 260              		.loc 1 207 0
 261 0166 0843     		orrs	r0, r0, r1
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 262              		.loc 1 209 0
 263 0168 7968     		ldr	r1, [r7, #4]
 264 016a 896B     		ldr	r1, [r1, #56]
 265 016c 0969     		ldr	r1, [r1, #16]
 266 016e 4FEA0151 		lsl	r1, r1, #20
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 267              		.loc 1 208 0
 268 0172 0843     		orrs	r0, r0, r1
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 269              		.loc 1 210 0
 270 0174 7968     		ldr	r1, [r7, #4]
 271 0176 896B     		ldr	r1, [r1, #56]
 272 0178 4969     		ldr	r1, [r1, #20]
 273 017a 4FEA0161 		lsl	r1, r1, #24
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 274              		.loc 1 209 0
 275 017e 0843     		orrs	r0, r0, r1
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode;
 276              		.loc 1 211 0
 277 0180 7968     		ldr	r1, [r7, #4]
 278 0182 896B     		ldr	r1, [r1, #56]
 279 0184 8969     		ldr	r1, [r1, #24]
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 280              		.loc 1 210 0
 281 0186 0143     		orrs	r1, r1, r0
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 282              		.loc 1 205 0
 283 0188 43F82210 		str	r1, [r3, r2, lsl #2]
 284 018c 09E0     		b	.L4
 285              	.L6:
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 0x0FFFFFFF;
 286              		.loc 1 215 0
 287 018e 4FF48273 		mov	r3, #260
 288 0192 CAF20003 		movt	r3, 40960
 289 0196 7A68     		ldr	r2, [r7, #4]
 290 0198 1268     		ldr	r2, [r2, #0]
 291 019a 6FF07041 		mvn	r1, #-268435456
 292 019e 43F82210 		str	r1, [r3, r2, lsl #2]
 293              	.L4:
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 294              		.loc 1 217 0
 295 01a2 07F10C07 		add	r7, r7, #12
 296 01a6 BD46     		mov	sp, r7
 297 01a8 80BC     		pop	{r7}
 298 01aa 7047     		bx	lr
 299              		.cfi_endproc
 300              	.LFE111:
 302              		.align	2
 303              		.global	FSMC_NORSRAMStructInit
 304              		.thumb
 305              		.thumb_func
 307              	FSMC_NORSRAMStructInit:
 308              	.LFB112:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_NORSRAMInitStruct member with its default value.
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct: pointer to a FSMC_NORSRAMInitTypeDef structure 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         which will be initialized.
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {  
 309              		.loc 1 226 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 01ac 80B4     		push	{r7}
 315              	.LCFI6:
 316              		.cfi_def_cfa_offset 4
 317              		.cfi_offset 7, -4
 318 01ae 83B0     		sub	sp, sp, #12
 319              	.LCFI7:
 320              		.cfi_def_cfa_offset 16
 321 01b0 00AF     		add	r7, sp, #0
 322              	.LCFI8:
 323              		.cfi_def_cfa_register 7
 324 01b2 7860     		str	r0, [r7, #4]
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset NOR/SRAM Init structure parameters values */
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_Bank = FSMC_Bank1_NORSRAM1;
 325              		.loc 1 228 0
 326 01b4 7B68     		ldr	r3, [r7, #4]
 327 01b6 4FF00002 		mov	r2, #0
 328 01ba 1A60     		str	r2, [r3, #0]
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_DataAddressMux = FSMC_DataAddressMux_Enable;
 329              		.loc 1 229 0
 330 01bc 7B68     		ldr	r3, [r7, #4]
 331 01be 4FF00202 		mov	r2, #2
 332 01c2 5A60     		str	r2, [r3, #4]
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryType = FSMC_MemoryType_SRAM;
 333              		.loc 1 230 0
 334 01c4 7B68     		ldr	r3, [r7, #4]
 335 01c6 4FF00002 		mov	r2, #0
 336 01ca 9A60     		str	r2, [r3, #8]
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 337              		.loc 1 231 0
 338 01cc 7B68     		ldr	r3, [r7, #4]
 339 01ce 4FF00002 		mov	r2, #0
 340 01d2 DA60     		str	r2, [r3, #12]
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
 341              		.loc 1 232 0
 342 01d4 7B68     		ldr	r3, [r7, #4]
 343 01d6 4FF00002 		mov	r2, #0
 344 01da 1A61     		str	r2, [r3, #16]
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;
 345              		.loc 1 233 0
 346 01dc 7B68     		ldr	r3, [r7, #4]
 347 01de 4FF00002 		mov	r2, #0
 348 01e2 5A61     		str	r2, [r3, #20]
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
 349              		.loc 1 234 0
 350 01e4 7B68     		ldr	r3, [r7, #4]
 351 01e6 4FF00002 		mov	r2, #0
 352 01ea 9A61     		str	r2, [r3, #24]
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
 353              		.loc 1 235 0
 354 01ec 7B68     		ldr	r3, [r7, #4]
 355 01ee 4FF00002 		mov	r2, #0
 356 01f2 DA61     		str	r2, [r3, #28]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
 357              		.loc 1 236 0
 358 01f4 7B68     		ldr	r3, [r7, #4]
 359 01f6 4FF00002 		mov	r2, #0
 360 01fa 1A62     		str	r2, [r3, #32]
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
 361              		.loc 1 237 0
 362 01fc 7B68     		ldr	r3, [r7, #4]
 363 01fe 4FF48052 		mov	r2, #4096
 364 0202 5A62     		str	r2, [r3, #36]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
 365              		.loc 1 238 0
 366 0204 7B68     		ldr	r3, [r7, #4]
 367 0206 4FF40052 		mov	r2, #8192
 368 020a 9A62     		str	r2, [r3, #40]
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
 369              		.loc 1 239 0
 370 020c 7B68     		ldr	r3, [r7, #4]
 371 020e 4FF00002 		mov	r2, #0
 372 0212 DA62     		str	r2, [r3, #44]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteBurst = FSMC_WriteBurst_Disable;
 373              		.loc 1 240 0
 374 0214 7B68     		ldr	r3, [r7, #4]
 375 0216 4FF00002 		mov	r2, #0
 376 021a 1A63     		str	r2, [r3, #48]
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 377              		.loc 1 241 0
 378 021c 7B68     		ldr	r3, [r7, #4]
 379 021e 5B6B     		ldr	r3, [r3, #52]
 380 0220 4FF00F02 		mov	r2, #15
 381 0224 1A60     		str	r2, [r3, #0]
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 382              		.loc 1 242 0
 383 0226 7B68     		ldr	r3, [r7, #4]
 384 0228 5B6B     		ldr	r3, [r3, #52]
 385 022a 4FF00F02 		mov	r2, #15
 386 022e 5A60     		str	r2, [r3, #4]
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 387              		.loc 1 243 0
 388 0230 7B68     		ldr	r3, [r7, #4]
 389 0232 5B6B     		ldr	r3, [r3, #52]
 390 0234 4FF0FF02 		mov	r2, #255
 391 0238 9A60     		str	r2, [r3, #8]
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 392              		.loc 1 244 0
 393 023a 7B68     		ldr	r3, [r7, #4]
 394 023c 5B6B     		ldr	r3, [r3, #52]
 395 023e 4FF00F02 		mov	r2, #15
 396 0242 DA60     		str	r2, [r3, #12]
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision = 0xF;
 397              		.loc 1 245 0
 398 0244 7B68     		ldr	r3, [r7, #4]
 399 0246 5B6B     		ldr	r3, [r3, #52]
 400 0248 4FF00F02 		mov	r2, #15
 401 024c 1A61     		str	r2, [r3, #16]
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency = 0xF;
 402              		.loc 1 246 0
 403 024e 7B68     		ldr	r3, [r7, #4]
 404 0250 5B6B     		ldr	r3, [r3, #52]
 405 0252 4FF00F02 		mov	r2, #15
 406 0256 5A61     		str	r2, [r3, #20]
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A; 
 407              		.loc 1 247 0
 408 0258 7B68     		ldr	r3, [r7, #4]
 409 025a 5B6B     		ldr	r3, [r3, #52]
 410 025c 4FF00002 		mov	r2, #0
 411 0260 9A61     		str	r2, [r3, #24]
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 412              		.loc 1 248 0
 413 0262 7B68     		ldr	r3, [r7, #4]
 414 0264 9B6B     		ldr	r3, [r3, #56]
 415 0266 4FF00F02 		mov	r2, #15
 416 026a 1A60     		str	r2, [r3, #0]
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 417              		.loc 1 249 0
 418 026c 7B68     		ldr	r3, [r7, #4]
 419 026e 9B6B     		ldr	r3, [r3, #56]
 420 0270 4FF00F02 		mov	r2, #15
 421 0274 5A60     		str	r2, [r3, #4]
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 422              		.loc 1 250 0
 423 0276 7B68     		ldr	r3, [r7, #4]
 424 0278 9B6B     		ldr	r3, [r3, #56]
 425 027a 4FF0FF02 		mov	r2, #255
 426 027e 9A60     		str	r2, [r3, #8]
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 427              		.loc 1 251 0
 428 0280 7B68     		ldr	r3, [r7, #4]
 429 0282 9B6B     		ldr	r3, [r3, #56]
 430 0284 4FF00F02 		mov	r2, #15
 431 0288 DA60     		str	r2, [r3, #12]
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision = 0xF;
 432              		.loc 1 252 0
 433 028a 7B68     		ldr	r3, [r7, #4]
 434 028c 9B6B     		ldr	r3, [r3, #56]
 435 028e 4FF00F02 		mov	r2, #15
 436 0292 1A61     		str	r2, [r3, #16]
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency = 0xF;
 437              		.loc 1 253 0
 438 0294 7B68     		ldr	r3, [r7, #4]
 439 0296 9B6B     		ldr	r3, [r3, #56]
 440 0298 4FF00F02 		mov	r2, #15
 441 029c 5A61     		str	r2, [r3, #20]
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A;
 442              		.loc 1 254 0
 443 029e 7B68     		ldr	r3, [r7, #4]
 444 02a0 9B6B     		ldr	r3, [r3, #56]
 445 02a2 4FF00002 		mov	r2, #0
 446 02a6 9A61     		str	r2, [r3, #24]
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 447              		.loc 1 255 0
 448 02a8 07F10C07 		add	r7, r7, #12
 449 02ac BD46     		mov	sp, r7
 450 02ae 80BC     		pop	{r7}
 451 02b0 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE112:
 455 02b2 00BF     		.align	2
 456              		.global	FSMC_NORSRAMCmd
 457              		.thumb
 458              		.thumb_func
 460              	FSMC_NORSRAMCmd:
 461              	.LFB113:
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified NOR/SRAM Memory Bank.
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 462              		.loc 1 269 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 8
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 467 02b4 80B4     		push	{r7}
 468              	.LCFI9:
 469              		.cfi_def_cfa_offset 4
 470              		.cfi_offset 7, -4
 471 02b6 83B0     		sub	sp, sp, #12
 472              	.LCFI10:
 473              		.cfi_def_cfa_offset 16
 474 02b8 00AF     		add	r7, sp, #0
 475              	.LCFI11:
 476              		.cfi_def_cfa_register 7
 477 02ba 7860     		str	r0, [r7, #4]
 478 02bc 0B46     		mov	r3, r1
 479 02be FB70     		strb	r3, [r7, #3]
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 480              		.loc 1 273 0
 481 02c0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 482 02c2 002B     		cmp	r3, #0
 483 02c4 0CD0     		beq	.L10
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NOR/SRAM Bank by setting the PBKEN bit in the BCRx register */
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] |= BCR_MBKEN_SET;
 484              		.loc 1 276 0
 485 02c6 4FF02043 		mov	r3, #-1610612736
 486 02ca 4FF02042 		mov	r2, #-1610612736
 487 02ce 7968     		ldr	r1, [r7, #4]
 488 02d0 52F82120 		ldr	r2, [r2, r1, lsl #2]
 489 02d4 42F00101 		orr	r1, r2, #1
 490 02d8 7A68     		ldr	r2, [r7, #4]
 491 02da 43F82210 		str	r1, [r3, r2, lsl #2]
 492 02de 0FE0     		b	.L9
 493              	.L10:
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NOR/SRAM Bank by clearing the PBKEN bit in the BCRx register */
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] &= BCR_MBKEN_RESET;
 494              		.loc 1 281 0
 495 02e0 4FF02042 		mov	r2, #-1610612736
 496 02e4 4FF02043 		mov	r3, #-1610612736
 497 02e8 7968     		ldr	r1, [r7, #4]
 498 02ea 53F82130 		ldr	r3, [r3, r1, lsl #2]
 499 02ee 1946     		mov	r1, r3
 500 02f0 4FF6FE73 		movw	r3, #65534
 501 02f4 C0F20F03 		movt	r3, 15
 502 02f8 0B40     		ands	r3, r3, r1
 503 02fa 7968     		ldr	r1, [r7, #4]
 504 02fc 42F82130 		str	r3, [r2, r1, lsl #2]
 505              	.L9:
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 506              		.loc 1 283 0
 507 0300 07F10C07 		add	r7, r7, #12
 508 0304 BD46     		mov	sp, r7
 509 0306 80BC     		pop	{r7}
 510 0308 7047     		bx	lr
 511              		.cfi_endproc
 512              	.LFE113:
 514 030a 00BF     		.align	2
 515              		.global	FSMC_NANDDeInit
 516              		.thumb
 517              		.thumb_func
 519              	FSMC_NANDDeInit:
 520              	.LFB114:
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group2 NAND Controller functions
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   NAND Controller functions 
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     NAND Controller functions
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  8-bit or 16-bit NAND memory connected to the NAND Bank:
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_NANDInitTypeDef structure, for example:
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDInitTypeDef  FSMC_NANDInitStructure;
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_NANDInitStructure variable with the allowed values of
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the NAND Controller by calling the function
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDInit(&FSMC_NANDInitStructure); 
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the NAND Bank, for example:
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDCmd(FSMC_Bank3_NAND, ENABLE);  
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the NAND Bank. 
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @note To enable the Error Correction Code (ECC), you have to use the function
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDECCCmd(FSMC_Bank3_NAND, ENABLE);  
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and to get the current ECC value you have to use the function
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           ECCval = FSMC_GetECC(FSMC_Bank3_NAND); 
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC NAND Banks registers to their default reset values.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND 
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDDeInit(uint32_t FSMC_Bank)
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 521              		.loc 1 340 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 8
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 526 030c 80B4     		push	{r7}
 527              	.LCFI12:
 528              		.cfi_def_cfa_offset 4
 529              		.cfi_offset 7, -4
 530 030e 83B0     		sub	sp, sp, #12
 531              	.LCFI13:
 532              		.cfi_def_cfa_offset 16
 533 0310 00AF     		add	r7, sp, #0
 534              	.LCFI14:
 535              		.cfi_def_cfa_register 7
 536 0312 7860     		str	r0, [r7, #4]
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameter */
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 537              		.loc 1 344 0
 538 0314 7B68     		ldr	r3, [r7, #4]
 539 0316 102B     		cmp	r3, #16
 540 0318 1CD1     		bne	.L13
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Set the FSMC_Bank2 registers to their reset values */
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PCR2 = 0x00000018;
 541              		.loc 1 347 0
 542 031a 4FF06003 		mov	r3, #96
 543 031e CAF20003 		movt	r3, 40960
 544 0322 4FF01802 		mov	r2, #24
 545 0326 1A60     		str	r2, [r3, #0]
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 = 0x00000040;
 546              		.loc 1 348 0
 547 0328 4FF06003 		mov	r3, #96
 548 032c CAF20003 		movt	r3, 40960
 549 0330 4FF04002 		mov	r2, #64
 550 0334 5A60     		str	r2, [r3, #4]
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PMEM2 = 0xFCFCFCFC;
 551              		.loc 1 349 0
 552 0336 4FF06003 		mov	r3, #96
 553 033a CAF20003 		movt	r3, 40960
 554 033e 4FF0FC32 		mov	r2, #-50529028
 555 0342 9A60     		str	r2, [r3, #8]
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PATT2 = 0xFCFCFCFC;  
 556              		.loc 1 350 0
 557 0344 4FF06003 		mov	r3, #96
 558 0348 CAF20003 		movt	r3, 40960
 559 034c 4FF0FC32 		mov	r2, #-50529028
 560 0350 DA60     		str	r2, [r3, #12]
 561 0352 1BE0     		b	.L12
 562              	.L13:
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank3_NAND */  
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Set the FSMC_Bank3 registers to their reset values */
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PCR3 = 0x00000018;
 563              		.loc 1 356 0
 564 0354 4FF08003 		mov	r3, #128
 565 0358 CAF20003 		movt	r3, 40960
 566 035c 4FF01802 		mov	r2, #24
 567 0360 1A60     		str	r2, [r3, #0]
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 = 0x00000040;
 568              		.loc 1 357 0
 569 0362 4FF08003 		mov	r3, #128
 570 0366 CAF20003 		movt	r3, 40960
 571 036a 4FF04002 		mov	r2, #64
 572 036e 5A60     		str	r2, [r3, #4]
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PMEM3 = 0xFCFCFCFC;
 573              		.loc 1 358 0
 574 0370 4FF08003 		mov	r3, #128
 575 0374 CAF20003 		movt	r3, 40960
 576 0378 4FF0FC32 		mov	r2, #-50529028
 577 037c 9A60     		str	r2, [r3, #8]
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PATT3 = 0xFCFCFCFC; 
 578              		.loc 1 359 0
 579 037e 4FF08003 		mov	r3, #128
 580 0382 CAF20003 		movt	r3, 40960
 581 0386 4FF0FC32 		mov	r2, #-50529028
 582 038a DA60     		str	r2, [r3, #12]
 583              	.L12:
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 584              		.loc 1 361 0
 585 038c 07F10C07 		add	r7, r7, #12
 586 0390 BD46     		mov	sp, r7
 587 0392 80BC     		pop	{r7}
 588 0394 7047     		bx	lr
 589              		.cfi_endproc
 590              	.LFE114:
 592 0396 00BF     		.align	2
 593              		.global	FSMC_NANDInit
 594              		.thumb
 595              		.thumb_func
 597              	FSMC_NANDInit:
 598              	.LFB115:
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC NAND Banks according to the specified parameters
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         in the FSMC_NANDInitStruct.
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NANDInitStruct : pointer to a FSMC_NANDInitTypeDef structure that
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         contains the configuration information for the FSMC NAND specified Banks.              
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 599              		.loc 1 371 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 24
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604 0398 80B4     		push	{r7}
 605              	.LCFI15:
 606              		.cfi_def_cfa_offset 4
 607              		.cfi_offset 7, -4
 608 039a 87B0     		sub	sp, sp, #28
 609              	.LCFI16:
 610              		.cfi_def_cfa_offset 32
 611 039c 00AF     		add	r7, sp, #0
 612              	.LCFI17:
 613              		.cfi_def_cfa_register 7
 614 039e 7860     		str	r0, [r7, #4]
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmppcr = 0x00000000, tmppmem = 0x00000000, tmppatt = 0x00000000; 
 615              		.loc 1 372 0
 616 03a0 4FF00003 		mov	r3, #0
 617 03a4 7B61     		str	r3, [r7, #20]
 618 03a6 4FF00003 		mov	r3, #0
 619 03aa 3B61     		str	r3, [r7, #16]
 620 03ac 4FF00003 		mov	r3, #0
 621 03b0 FB60     		str	r3, [r7, #12]
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_NAND_BANK(FSMC_NANDInitStruct->FSMC_Bank));
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_WAIT_FEATURE(FSMC_NANDInitStruct->FSMC_Waitfeature));
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_MEMORY_WIDTH(FSMC_NANDInitStruct->FSMC_MemoryDataWidth));
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_ECC_STATE(FSMC_NANDInitStruct->FSMC_ECC));
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_ECCPAGE_SIZE(FSMC_NANDInitStruct->FSMC_ECCPageSize));
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_TCLR_TIME(FSMC_NANDInitStruct->FSMC_TCLRSetupTime));
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_TAR_TIME(FSMC_NANDInitStruct->FSMC_TARSetupTime));
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupT
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupT
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTim
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSet
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSet
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetup
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the tmppcr value according to FSMC_NANDInitStruct parameters */
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 622              		.loc 1 392 0
 623 03b2 7B68     		ldr	r3, [r7, #4]
 624 03b4 5A68     		ldr	r2, [r3, #4]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             PCR_MEMORYTYPE_NAND |
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 625              		.loc 1 394 0
 626 03b6 7B68     		ldr	r3, [r7, #4]
 627 03b8 9B68     		ldr	r3, [r3, #8]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             PCR_MEMORYTYPE_NAND |
 628              		.loc 1 393 0
 629 03ba 1A43     		orrs	r2, r2, r3
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 630              		.loc 1 395 0
 631 03bc 7B68     		ldr	r3, [r7, #4]
 632 03be DB68     		ldr	r3, [r3, #12]
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 633              		.loc 1 394 0
 634 03c0 1A43     		orrs	r2, r2, r3
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 635              		.loc 1 396 0
 636 03c2 7B68     		ldr	r3, [r7, #4]
 637 03c4 1B69     		ldr	r3, [r3, #16]
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 638              		.loc 1 395 0
 639 03c6 1A43     		orrs	r2, r2, r3
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 640              		.loc 1 397 0
 641 03c8 7B68     		ldr	r3, [r7, #4]
 642 03ca 5B69     		ldr	r3, [r3, #20]
 643 03cc 4FEA4323 		lsl	r3, r3, #9
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 644              		.loc 1 396 0
 645 03d0 1A43     		orrs	r2, r2, r3
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
 646              		.loc 1 398 0
 647 03d2 7B68     		ldr	r3, [r7, #4]
 648 03d4 9B69     		ldr	r3, [r3, #24]
 649 03d6 4FEA4333 		lsl	r3, r3, #13
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 650              		.loc 1 397 0
 651 03da 1343     		orrs	r3, r3, r2
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 652              		.loc 1 392 0
 653 03dc 43F00803 		orr	r3, r3, #8
 654 03e0 7B61     		str	r3, [r7, #20]
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 655              		.loc 1 401 0
 656 03e2 7B68     		ldr	r3, [r7, #4]
 657 03e4 DB69     		ldr	r3, [r3, #28]
 658 03e6 1A68     		ldr	r2, [r3, #0]
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 659              		.loc 1 402 0
 660 03e8 7B68     		ldr	r3, [r7, #4]
 661 03ea DB69     		ldr	r3, [r3, #28]
 662 03ec 5B68     		ldr	r3, [r3, #4]
 663 03ee 4FEA0323 		lsl	r3, r3, #8
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 664              		.loc 1 401 0
 665 03f2 1A43     		orrs	r2, r2, r3
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 666              		.loc 1 403 0
 667 03f4 7B68     		ldr	r3, [r7, #4]
 668 03f6 DB69     		ldr	r3, [r3, #28]
 669 03f8 9B68     		ldr	r3, [r3, #8]
 670 03fa 4FEA0343 		lsl	r3, r3, #16
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 671              		.loc 1 402 0
 672 03fe 1A43     		orrs	r2, r2, r3
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
 673              		.loc 1 404 0
 674 0400 7B68     		ldr	r3, [r7, #4]
 675 0402 DB69     		ldr	r3, [r3, #28]
 676 0404 DB68     		ldr	r3, [r3, #12]
 677 0406 4FEA0363 		lsl	r3, r3, #24
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 678              		.loc 1 401 0
 679 040a 1343     		orrs	r3, r3, r2
 680 040c 3B61     		str	r3, [r7, #16]
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 681              		.loc 1 407 0
 682 040e 7B68     		ldr	r3, [r7, #4]
 683 0410 1B6A     		ldr	r3, [r3, #32]
 684 0412 1A68     		ldr	r2, [r3, #0]
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 685              		.loc 1 408 0
 686 0414 7B68     		ldr	r3, [r7, #4]
 687 0416 1B6A     		ldr	r3, [r3, #32]
 688 0418 5B68     		ldr	r3, [r3, #4]
 689 041a 4FEA0323 		lsl	r3, r3, #8
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 690              		.loc 1 407 0
 691 041e 1A43     		orrs	r2, r2, r3
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 692              		.loc 1 409 0
 693 0420 7B68     		ldr	r3, [r7, #4]
 694 0422 1B6A     		ldr	r3, [r3, #32]
 695 0424 9B68     		ldr	r3, [r3, #8]
 696 0426 4FEA0343 		lsl	r3, r3, #16
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 697              		.loc 1 408 0
 698 042a 1A43     		orrs	r2, r2, r3
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);
 699              		.loc 1 410 0
 700 042c 7B68     		ldr	r3, [r7, #4]
 701 042e 1B6A     		ldr	r3, [r3, #32]
 702 0430 DB68     		ldr	r3, [r3, #12]
 703 0432 4FEA0363 		lsl	r3, r3, #24
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 704              		.loc 1 407 0
 705 0436 1343     		orrs	r3, r3, r2
 706 0438 FB60     		str	r3, [r7, #12]
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NANDInitStruct->FSMC_Bank == FSMC_Bank2_NAND)
 707              		.loc 1 412 0
 708 043a 7B68     		ldr	r3, [r7, #4]
 709 043c 1B68     		ldr	r3, [r3, #0]
 710 043e 102B     		cmp	r3, #16
 711 0440 12D1     		bne	.L16
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* FSMC_Bank2_NAND registers configuration */
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PCR2 = tmppcr;
 712              		.loc 1 415 0
 713 0442 4FF06003 		mov	r3, #96
 714 0446 CAF20003 		movt	r3, 40960
 715 044a 7A69     		ldr	r2, [r7, #20]
 716 044c 1A60     		str	r2, [r3, #0]
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PMEM2 = tmppmem;
 717              		.loc 1 416 0
 718 044e 4FF06003 		mov	r3, #96
 719 0452 CAF20003 		movt	r3, 40960
 720 0456 3A69     		ldr	r2, [r7, #16]
 721 0458 9A60     		str	r2, [r3, #8]
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PATT2 = tmppatt;
 722              		.loc 1 417 0
 723 045a 4FF06003 		mov	r3, #96
 724 045e CAF20003 		movt	r3, 40960
 725 0462 FA68     		ldr	r2, [r7, #12]
 726 0464 DA60     		str	r2, [r3, #12]
 727 0466 11E0     		b	.L15
 728              	.L16:
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* FSMC_Bank3_NAND registers configuration */
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PCR3 = tmppcr;
 729              		.loc 1 422 0
 730 0468 4FF08003 		mov	r3, #128
 731 046c CAF20003 		movt	r3, 40960
 732 0470 7A69     		ldr	r2, [r7, #20]
 733 0472 1A60     		str	r2, [r3, #0]
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PMEM3 = tmppmem;
 734              		.loc 1 423 0
 735 0474 4FF08003 		mov	r3, #128
 736 0478 CAF20003 		movt	r3, 40960
 737 047c 3A69     		ldr	r2, [r7, #16]
 738 047e 9A60     		str	r2, [r3, #8]
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PATT3 = tmppatt;
 739              		.loc 1 424 0
 740 0480 4FF08003 		mov	r3, #128
 741 0484 CAF20003 		movt	r3, 40960
 742 0488 FA68     		ldr	r2, [r7, #12]
 743 048a DA60     		str	r2, [r3, #12]
 744              	.L15:
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 745              		.loc 1 426 0
 746 048c 07F11C07 		add	r7, r7, #28
 747 0490 BD46     		mov	sp, r7
 748 0492 80BC     		pop	{r7}
 749 0494 7047     		bx	lr
 750              		.cfi_endproc
 751              	.LFE115:
 753 0496 00BF     		.align	2
 754              		.global	FSMC_NANDStructInit
 755              		.thumb
 756              		.thumb_func
 758              	FSMC_NANDStructInit:
 759              	.LFB116:
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_NANDInitStruct member with its default value.
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NANDInitStruct: pointer to a FSMC_NANDInitTypeDef structure which
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         will be initialized.
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** { 
 760              		.loc 1 436 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 8
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 765 0498 80B4     		push	{r7}
 766              	.LCFI18:
 767              		.cfi_def_cfa_offset 4
 768              		.cfi_offset 7, -4
 769 049a 83B0     		sub	sp, sp, #12
 770              	.LCFI19:
 771              		.cfi_def_cfa_offset 16
 772 049c 00AF     		add	r7, sp, #0
 773              	.LCFI20:
 774              		.cfi_def_cfa_register 7
 775 049e 7860     		str	r0, [r7, #4]
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset NAND Init structure parameters values */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Bank = FSMC_Bank2_NAND;
 776              		.loc 1 438 0
 777 04a0 7B68     		ldr	r3, [r7, #4]
 778 04a2 4FF01002 		mov	r2, #16
 779 04a6 1A60     		str	r2, [r3, #0]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 780              		.loc 1 439 0
 781 04a8 7B68     		ldr	r3, [r7, #4]
 782 04aa 4FF00002 		mov	r2, #0
 783 04ae 5A60     		str	r2, [r3, #4]
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 784              		.loc 1 440 0
 785 04b0 7B68     		ldr	r3, [r7, #4]
 786 04b2 4FF00002 		mov	r2, #0
 787 04b6 9A60     		str	r2, [r3, #8]
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECC = FSMC_ECC_Disable;
 788              		.loc 1 441 0
 789 04b8 7B68     		ldr	r3, [r7, #4]
 790 04ba 4FF00002 		mov	r2, #0
 791 04be DA60     		str	r2, [r3, #12]
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECCPageSize = FSMC_ECCPageSize_256Bytes;
 792              		.loc 1 442 0
 793 04c0 7B68     		ldr	r3, [r7, #4]
 794 04c2 4FF00002 		mov	r2, #0
 795 04c6 1A61     		str	r2, [r3, #16]
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TCLRSetupTime = 0x0;
 796              		.loc 1 443 0
 797 04c8 7B68     		ldr	r3, [r7, #4]
 798 04ca 4FF00002 		mov	r2, #0
 799 04ce 5A61     		str	r2, [r3, #20]
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TARSetupTime = 0x0;
 800              		.loc 1 444 0
 801 04d0 7B68     		ldr	r3, [r7, #4]
 802 04d2 4FF00002 		mov	r2, #0
 803 04d6 9A61     		str	r2, [r3, #24]
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 804              		.loc 1 445 0
 805 04d8 7B68     		ldr	r3, [r7, #4]
 806 04da DB69     		ldr	r3, [r3, #28]
 807 04dc 4FF0FC02 		mov	r2, #252
 808 04e0 1A60     		str	r2, [r3, #0]
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 809              		.loc 1 446 0
 810 04e2 7B68     		ldr	r3, [r7, #4]
 811 04e4 DB69     		ldr	r3, [r3, #28]
 812 04e6 4FF0FC02 		mov	r2, #252
 813 04ea 5A60     		str	r2, [r3, #4]
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 814              		.loc 1 447 0
 815 04ec 7B68     		ldr	r3, [r7, #4]
 816 04ee DB69     		ldr	r3, [r3, #28]
 817 04f0 4FF0FC02 		mov	r2, #252
 818 04f4 9A60     		str	r2, [r3, #8]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 819              		.loc 1 448 0
 820 04f6 7B68     		ldr	r3, [r7, #4]
 821 04f8 DB69     		ldr	r3, [r3, #28]
 822 04fa 4FF0FC02 		mov	r2, #252
 823 04fe DA60     		str	r2, [r3, #12]
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 824              		.loc 1 449 0
 825 0500 7B68     		ldr	r3, [r7, #4]
 826 0502 1B6A     		ldr	r3, [r3, #32]
 827 0504 4FF0FC02 		mov	r2, #252
 828 0508 1A60     		str	r2, [r3, #0]
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 829              		.loc 1 450 0
 830 050a 7B68     		ldr	r3, [r7, #4]
 831 050c 1B6A     		ldr	r3, [r3, #32]
 832 050e 4FF0FC02 		mov	r2, #252
 833 0512 5A60     		str	r2, [r3, #4]
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 834              		.loc 1 451 0
 835 0514 7B68     		ldr	r3, [r7, #4]
 836 0516 1B6A     		ldr	r3, [r3, #32]
 837 0518 4FF0FC02 		mov	r2, #252
 838 051c 9A60     		str	r2, [r3, #8]
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	  
 839              		.loc 1 452 0
 840 051e 7B68     		ldr	r3, [r7, #4]
 841 0520 1B6A     		ldr	r3, [r3, #32]
 842 0522 4FF0FC02 		mov	r2, #252
 843 0526 DA60     		str	r2, [r3, #12]
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 844              		.loc 1 453 0
 845 0528 07F10C07 		add	r7, r7, #12
 846 052c BD46     		mov	sp, r7
 847 052e 80BC     		pop	{r7}
 848 0530 7047     		bx	lr
 849              		.cfi_endproc
 850              	.LFE116:
 852 0532 00BF     		.align	2
 853              		.global	FSMC_NANDCmd
 854              		.thumb
 855              		.thumb_func
 857              	FSMC_NANDCmd:
 858              	.LFB117:
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified NAND Memory Bank.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 859              		.loc 1 465 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 8
 862              		@ frame_needed = 1, uses_anonymous_args = 0
 863              		@ link register save eliminated.
 864 0534 80B4     		push	{r7}
 865              	.LCFI21:
 866              		.cfi_def_cfa_offset 4
 867              		.cfi_offset 7, -4
 868 0536 83B0     		sub	sp, sp, #12
 869              	.LCFI22:
 870              		.cfi_def_cfa_offset 16
 871 0538 00AF     		add	r7, sp, #0
 872              	.LCFI23:
 873              		.cfi_def_cfa_register 7
 874 053a 7860     		str	r0, [r7, #4]
 875 053c 0B46     		mov	r3, r1
 876 053e FB70     		strb	r3, [r7, #3]
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 877              		.loc 1 469 0
 878 0540 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 879 0542 002B     		cmp	r3, #0
 880 0544 1CD0     		beq	.L20
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NAND Bank by setting the PBKEN bit in the PCRx register */
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 881              		.loc 1 472 0
 882 0546 7B68     		ldr	r3, [r7, #4]
 883 0548 102B     		cmp	r3, #16
 884 054a 0CD1     		bne	.L21
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_PBKEN_SET;
 885              		.loc 1 474 0
 886 054c 4FF06003 		mov	r3, #96
 887 0550 CAF20003 		movt	r3, 40960
 888 0554 4FF06002 		mov	r2, #96
 889 0558 CAF20002 		movt	r2, 40960
 890 055c 1268     		ldr	r2, [r2, #0]
 891 055e 42F00402 		orr	r2, r2, #4
 892 0562 1A60     		str	r2, [r3, #0]
 893 0564 30E0     		b	.L19
 894              	.L21:
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_PBKEN_SET;
 895              		.loc 1 478 0
 896 0566 4FF08003 		mov	r3, #128
 897 056a CAF20003 		movt	r3, 40960
 898 056e 4FF08002 		mov	r2, #128
 899 0572 CAF20002 		movt	r2, 40960
 900 0576 1268     		ldr	r2, [r2, #0]
 901 0578 42F00402 		orr	r2, r2, #4
 902 057c 1A60     		str	r2, [r3, #0]
 903 057e 23E0     		b	.L19
 904              	.L20:
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NAND Bank by clearing the PBKEN bit in the PCRx register */
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 905              		.loc 1 484 0
 906 0580 7B68     		ldr	r3, [r7, #4]
 907 0582 102B     		cmp	r3, #16
 908 0584 10D1     		bne	.L23
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_PBKEN_RESET;
 909              		.loc 1 486 0
 910 0586 4FF06002 		mov	r2, #96
 911 058a CAF20002 		movt	r2, 40960
 912 058e 4FF06003 		mov	r3, #96
 913 0592 CAF20003 		movt	r3, 40960
 914 0596 1B68     		ldr	r3, [r3, #0]
 915 0598 1946     		mov	r1, r3
 916 059a 4FF6FB73 		movw	r3, #65531
 917 059e C0F20F03 		movt	r3, 15
 918 05a2 0B40     		ands	r3, r3, r1
 919 05a4 1360     		str	r3, [r2, #0]
 920 05a6 0FE0     		b	.L19
 921              	.L23:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_PBKEN_RESET;
 922              		.loc 1 490 0
 923 05a8 4FF08002 		mov	r2, #128
 924 05ac CAF20002 		movt	r2, 40960
 925 05b0 4FF08003 		mov	r3, #128
 926 05b4 CAF20003 		movt	r3, 40960
 927 05b8 1B68     		ldr	r3, [r3, #0]
 928 05ba 1946     		mov	r1, r3
 929 05bc 4FF6FB73 		movw	r3, #65531
 930 05c0 C0F20F03 		movt	r3, 15
 931 05c4 0B40     		ands	r3, r3, r1
 932 05c6 1360     		str	r3, [r2, #0]
 933              	.L19:
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 934              		.loc 1 493 0
 935 05c8 07F10C07 		add	r7, r7, #12
 936 05cc BD46     		mov	sp, r7
 937 05ce 80BC     		pop	{r7}
 938 05d0 7047     		bx	lr
 939              		.cfi_endproc
 940              	.LFE117:
 942 05d2 00BF     		.align	2
 943              		.global	FSMC_NANDECCCmd
 944              		.thumb
 945              		.thumb_func
 947              	FSMC_NANDECCCmd:
 948              	.LFB118:
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the FSMC NAND ECC feature.
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC NAND ECC feature.  
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDECCCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 949              		.loc 1 505 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 8
 952              		@ frame_needed = 1, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 954 05d4 80B4     		push	{r7}
 955              	.LCFI24:
 956              		.cfi_def_cfa_offset 4
 957              		.cfi_offset 7, -4
 958 05d6 83B0     		sub	sp, sp, #12
 959              	.LCFI25:
 960              		.cfi_def_cfa_offset 16
 961 05d8 00AF     		add	r7, sp, #0
 962              	.LCFI26:
 963              		.cfi_def_cfa_register 7
 964 05da 7860     		str	r0, [r7, #4]
 965 05dc 0B46     		mov	r3, r1
 966 05de FB70     		strb	r3, [r7, #3]
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 967              		.loc 1 509 0
 968 05e0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 969 05e2 002B     		cmp	r3, #0
 970 05e4 1CD0     		beq	.L25
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NAND Bank ECC function by setting the ECCEN bit in the PCRx register */
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 971              		.loc 1 512 0
 972 05e6 7B68     		ldr	r3, [r7, #4]
 973 05e8 102B     		cmp	r3, #16
 974 05ea 0CD1     		bne	.L26
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_ECCEN_SET;
 975              		.loc 1 514 0
 976 05ec 4FF06003 		mov	r3, #96
 977 05f0 CAF20003 		movt	r3, 40960
 978 05f4 4FF06002 		mov	r2, #96
 979 05f8 CAF20002 		movt	r2, 40960
 980 05fc 1268     		ldr	r2, [r2, #0]
 981 05fe 42F04002 		orr	r2, r2, #64
 982 0602 1A60     		str	r2, [r3, #0]
 983 0604 30E0     		b	.L24
 984              	.L26:
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_ECCEN_SET;
 985              		.loc 1 518 0
 986 0606 4FF08003 		mov	r3, #128
 987 060a CAF20003 		movt	r3, 40960
 988 060e 4FF08002 		mov	r2, #128
 989 0612 CAF20002 		movt	r2, 40960
 990 0616 1268     		ldr	r2, [r2, #0]
 991 0618 42F04002 		orr	r2, r2, #64
 992 061c 1A60     		str	r2, [r3, #0]
 993 061e 23E0     		b	.L24
 994              	.L25:
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NAND Bank ECC function by clearing the ECCEN bit in the PCRx register *
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 995              		.loc 1 524 0
 996 0620 7B68     		ldr	r3, [r7, #4]
 997 0622 102B     		cmp	r3, #16
 998 0624 10D1     		bne	.L28
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_ECCEN_RESET;
 999              		.loc 1 526 0
 1000 0626 4FF06002 		mov	r2, #96
 1001 062a CAF20002 		movt	r2, 40960
 1002 062e 4FF06003 		mov	r3, #96
 1003 0632 CAF20003 		movt	r3, 40960
 1004 0636 1B68     		ldr	r3, [r3, #0]
 1005 0638 1946     		mov	r1, r3
 1006 063a 4FF6BF73 		movw	r3, #65471
 1007 063e C0F20F03 		movt	r3, 15
 1008 0642 0B40     		ands	r3, r3, r1
 1009 0644 1360     		str	r3, [r2, #0]
 1010 0646 0FE0     		b	.L24
 1011              	.L28:
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_ECCEN_RESET;
 1012              		.loc 1 530 0
 1013 0648 4FF08002 		mov	r2, #128
 1014 064c CAF20002 		movt	r2, 40960
 1015 0650 4FF08003 		mov	r3, #128
 1016 0654 CAF20003 		movt	r3, 40960
 1017 0658 1B68     		ldr	r3, [r3, #0]
 1018 065a 1946     		mov	r1, r3
 1019 065c 4FF6BF73 		movw	r3, #65471
 1020 0660 C0F20F03 		movt	r3, 15
 1021 0664 0B40     		ands	r3, r3, r1
 1022 0666 1360     		str	r3, [r2, #0]
 1023              	.L24:
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1024              		.loc 1 533 0
 1025 0668 07F10C07 		add	r7, r7, #12
 1026 066c BD46     		mov	sp, r7
 1027 066e 80BC     		pop	{r7}
 1028 0670 7047     		bx	lr
 1029              		.cfi_endproc
 1030              	.LFE118:
 1032 0672 00BF     		.align	2
 1033              		.global	FSMC_GetECC
 1034              		.thumb
 1035              		.thumb_func
 1037              	FSMC_GetECC:
 1038              	.LFB119:
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Returns the error correction code register value.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The Error Correction Code (ECC) value.
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** uint32_t FSMC_GetECC(uint32_t FSMC_Bank)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1039              		.loc 1 544 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 16
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044 0674 80B4     		push	{r7}
 1045              	.LCFI27:
 1046              		.cfi_def_cfa_offset 4
 1047              		.cfi_offset 7, -4
 1048 0676 85B0     		sub	sp, sp, #20
 1049              	.LCFI28:
 1050              		.cfi_def_cfa_offset 24
 1051 0678 00AF     		add	r7, sp, #0
 1052              	.LCFI29:
 1053              		.cfi_def_cfa_register 7
 1054 067a 7860     		str	r0, [r7, #4]
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t eccval = 0x00000000;
 1055              		.loc 1 545 0
 1056 067c 4FF00003 		mov	r3, #0
 1057 0680 FB60     		str	r3, [r7, #12]
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1058              		.loc 1 547 0
 1059 0682 7B68     		ldr	r3, [r7, #4]
 1060 0684 102B     		cmp	r3, #16
 1061 0686 06D1     		bne	.L30
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Get the ECCR2 register value */
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     eccval = FSMC_Bank2->ECCR2;
 1062              		.loc 1 550 0
 1063 0688 4FF06003 		mov	r3, #96
 1064 068c CAF20003 		movt	r3, 40960
 1065 0690 5B69     		ldr	r3, [r3, #20]
 1066 0692 FB60     		str	r3, [r7, #12]
 1067 0694 05E0     		b	.L31
 1068              	.L30:
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Get the ECCR3 register value */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     eccval = FSMC_Bank3->ECCR3;
 1069              		.loc 1 555 0
 1070 0696 4FF08003 		mov	r3, #128
 1071 069a CAF20003 		movt	r3, 40960
 1072 069e 5B69     		ldr	r3, [r3, #20]
 1073 06a0 FB60     		str	r3, [r7, #12]
 1074              	.L31:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Return the error correction code value */
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return(eccval);
 1075              		.loc 1 558 0
 1076 06a2 FB68     		ldr	r3, [r7, #12]
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1077              		.loc 1 559 0
 1078 06a4 1846     		mov	r0, r3
 1079 06a6 07F11407 		add	r7, r7, #20
 1080 06aa BD46     		mov	sp, r7
 1081 06ac 80BC     		pop	{r7}
 1082 06ae 7047     		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE119:
 1086              		.align	2
 1087              		.global	FSMC_PCCARDDeInit
 1088              		.thumb
 1089              		.thumb_func
 1091              	FSMC_PCCARDDeInit:
 1092              	.LFB120:
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group3 PCCARD Controller functions
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   PCCARD Controller functions 
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     PCCARD Controller functions
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  16-bit PC Card compatible memory connected to the PCCARD Bank:
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_PCCARDInitTypeDef structure, for example:
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDInitTypeDef  FSMC_PCCARDInitStructure;
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_PCCARDInitStructure variable with the allowed values of
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the PCCARD Controller by calling the function
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDInit(&FSMC_PCCARDInitStructure); 
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the PCCARD Bank:
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDCmd(ENABLE);  
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the PCCARD Bank. 
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC PCCARD Bank registers to their default reset values.
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  None                       
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDDeInit(void)
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1093              		.loc 1 608 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 0
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097              		@ link register save eliminated.
 1098 06b0 80B4     		push	{r7}
 1099              	.LCFI30:
 1100              		.cfi_def_cfa_offset 4
 1101              		.cfi_offset 7, -4
 1102 06b2 00AF     		add	r7, sp, #0
 1103              	.LCFI31:
 1104              		.cfi_def_cfa_register 7
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the FSMC_Bank4 registers to their reset values */
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = 0x00000018; 
 1105              		.loc 1 610 0
 1106 06b4 4FF0A003 		mov	r3, #160
 1107 06b8 CAF20003 		movt	r3, 40960
 1108 06bc 4FF01802 		mov	r2, #24
 1109 06c0 1A60     		str	r2, [r3, #0]
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->SR4 = 0x00000000;	
 1110              		.loc 1 611 0
 1111 06c2 4FF0A003 		mov	r3, #160
 1112 06c6 CAF20003 		movt	r3, 40960
 1113 06ca 4FF00002 		mov	r2, #0
 1114 06ce 5A60     		str	r2, [r3, #4]
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = 0xFCFCFCFC;
 1115              		.loc 1 612 0
 1116 06d0 4FF0A003 		mov	r3, #160
 1117 06d4 CAF20003 		movt	r3, 40960
 1118 06d8 4FF0FC32 		mov	r2, #-50529028
 1119 06dc 9A60     		str	r2, [r3, #8]
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = 0xFCFCFCFC;
 1120              		.loc 1 613 0
 1121 06de 4FF0A003 		mov	r3, #160
 1122 06e2 CAF20003 		movt	r3, 40960
 1123 06e6 4FF0FC32 		mov	r2, #-50529028
 1124 06ea DA60     		str	r2, [r3, #12]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = 0xFCFCFCFC;
 1125              		.loc 1 614 0
 1126 06ec 4FF0A003 		mov	r3, #160
 1127 06f0 CAF20003 		movt	r3, 40960
 1128 06f4 4FF0FC32 		mov	r2, #-50529028
 1129 06f8 1A61     		str	r2, [r3, #16]
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1130              		.loc 1 615 0
 1131 06fa BD46     		mov	sp, r7
 1132 06fc 80BC     		pop	{r7}
 1133 06fe 7047     		bx	lr
 1134              		.cfi_endproc
 1135              	.LFE120:
 1137              		.align	2
 1138              		.global	FSMC_PCCARDInit
 1139              		.thumb
 1140              		.thumb_func
 1142              	FSMC_PCCARDInit:
 1143              	.LFB121:
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC PCCARD Bank according to the specified parameters
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         in the FSMC_PCCARDInitStruct.
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_PCCARDInitStruct : pointer to a FSMC_PCCARDInitTypeDef structure
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         that contains the configuration information for the FSMC PCCARD Bank.                  
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1144              		.loc 1 625 0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 8
 1147              		@ frame_needed = 1, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
 1149 0700 80B4     		push	{r7}
 1150              	.LCFI32:
 1151              		.cfi_def_cfa_offset 4
 1152              		.cfi_offset 7, -4
 1153 0702 83B0     		sub	sp, sp, #12
 1154              	.LCFI33:
 1155              		.cfi_def_cfa_offset 16
 1156 0704 00AF     		add	r7, sp, #0
 1157              	.LCFI34:
 1158              		.cfi_def_cfa_register 7
 1159 0706 7860     		str	r0, [r7, #4]
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_FEATURE(FSMC_PCCARDInitStruct->FSMC_Waitfeature));
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TCLR_TIME(FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime));
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TAR_TIME(FSMC_PCCARDInitStruct->FSMC_TARSetupTime));
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTi
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetu
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetu
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupT
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_Setu
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitS
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldS
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSet
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime))
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTim
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTim
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime)
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 1160              		.loc 1 646 0
 1161 0708 4FF0A003 		mov	r3, #160
 1162 070c CAF20003 		movt	r3, 40960
 1163 0710 7A68     		ldr	r2, [r7, #4]
 1164 0712 1168     		ldr	r1, [r2, #0]
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 1165              		.loc 1 648 0
 1166 0714 7A68     		ldr	r2, [r7, #4]
 1167 0716 5268     		ldr	r2, [r2, #4]
 1168 0718 4FEA4222 		lsl	r2, r2, #9
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 1169              		.loc 1 647 0
 1170 071c 1143     		orrs	r1, r1, r2
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
 1171              		.loc 1 649 0
 1172 071e 7A68     		ldr	r2, [r7, #4]
 1173 0720 9268     		ldr	r2, [r2, #8]
 1174 0722 4FEA4232 		lsl	r2, r2, #13
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 1175              		.loc 1 648 0
 1176 0726 0A43     		orrs	r2, r2, r1
 1177 0728 42F01002 		orr	r2, r2, #16
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 1178              		.loc 1 646 0
 1179 072c 1A60     		str	r2, [r3, #0]
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1180              		.loc 1 652 0
 1181 072e 4FF0A003 		mov	r3, #160
 1182 0732 CAF20003 		movt	r3, 40960
 1183 0736 7A68     		ldr	r2, [r7, #4]
 1184 0738 D268     		ldr	r2, [r2, #12]
 1185 073a 1168     		ldr	r1, [r2, #0]
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 1186              		.loc 1 653 0
 1187 073c 7A68     		ldr	r2, [r7, #4]
 1188 073e D268     		ldr	r2, [r2, #12]
 1189 0740 5268     		ldr	r2, [r2, #4]
 1190 0742 4FEA0222 		lsl	r2, r2, #8
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1191              		.loc 1 652 0
 1192 0746 1143     		orrs	r1, r1, r2
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 1193              		.loc 1 654 0
 1194 0748 7A68     		ldr	r2, [r7, #4]
 1195 074a D268     		ldr	r2, [r2, #12]
 1196 074c 9268     		ldr	r2, [r2, #8]
 1197 074e 4FEA0242 		lsl	r2, r2, #16
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 1198              		.loc 1 653 0
 1199 0752 1143     		orrs	r1, r1, r2
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24
 1200              		.loc 1 655 0
 1201 0754 7A68     		ldr	r2, [r7, #4]
 1202 0756 D268     		ldr	r2, [r2, #12]
 1203 0758 D268     		ldr	r2, [r2, #12]
 1204 075a 4FEA0262 		lsl	r2, r2, #24
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 1205              		.loc 1 654 0
 1206 075e 0A43     		orrs	r2, r2, r1
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1207              		.loc 1 652 0
 1208 0760 9A60     		str	r2, [r3, #8]
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1209              		.loc 1 658 0
 1210 0762 4FF0A003 		mov	r3, #160
 1211 0766 CAF20003 		movt	r3, 40960
 1212 076a 7A68     		ldr	r2, [r7, #4]
 1213 076c 1269     		ldr	r2, [r2, #16]
 1214 076e 1168     		ldr	r1, [r2, #0]
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 1215              		.loc 1 659 0
 1216 0770 7A68     		ldr	r2, [r7, #4]
 1217 0772 1269     		ldr	r2, [r2, #16]
 1218 0774 5268     		ldr	r2, [r2, #4]
 1219 0776 4FEA0222 		lsl	r2, r2, #8
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1220              		.loc 1 658 0
 1221 077a 1143     		orrs	r1, r1, r2
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 1222              		.loc 1 660 0
 1223 077c 7A68     		ldr	r2, [r7, #4]
 1224 077e 1269     		ldr	r2, [r2, #16]
 1225 0780 9268     		ldr	r2, [r2, #8]
 1226 0782 4FEA0242 		lsl	r2, r2, #16
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 1227              		.loc 1 659 0
 1228 0786 1143     		orrs	r1, r1, r2
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime <<
 1229              		.loc 1 661 0
 1230 0788 7A68     		ldr	r2, [r7, #4]
 1231 078a 1269     		ldr	r2, [r2, #16]
 1232 078c D268     		ldr	r2, [r2, #12]
 1233 078e 4FEA0262 		lsl	r2, r2, #24
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 1234              		.loc 1 660 0
 1235 0792 0A43     		orrs	r2, r2, r1
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1236              		.loc 1 658 0
 1237 0794 DA60     		str	r2, [r3, #12]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1238              		.loc 1 664 0
 1239 0796 4FF0A003 		mov	r3, #160
 1240 079a CAF20003 		movt	r3, 40960
 1241 079e 7A68     		ldr	r2, [r7, #4]
 1242 07a0 5269     		ldr	r2, [r2, #20]
 1243 07a2 1168     		ldr	r1, [r2, #0]
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1244              		.loc 1 665 0
 1245 07a4 7A68     		ldr	r2, [r7, #4]
 1246 07a6 5269     		ldr	r2, [r2, #20]
 1247 07a8 5268     		ldr	r2, [r2, #4]
 1248 07aa 4FEA0222 		lsl	r2, r2, #8
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1249              		.loc 1 664 0
 1250 07ae 1143     		orrs	r1, r1, r2
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1251              		.loc 1 666 0
 1252 07b0 7A68     		ldr	r2, [r7, #4]
 1253 07b2 5269     		ldr	r2, [r2, #20]
 1254 07b4 9268     		ldr	r2, [r2, #8]
 1255 07b6 4FEA0242 		lsl	r2, r2, #16
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1256              		.loc 1 665 0
 1257 07ba 1143     		orrs	r1, r1, r2
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime << 24);   
 1258              		.loc 1 667 0
 1259 07bc 7A68     		ldr	r2, [r7, #4]
 1260 07be 5269     		ldr	r2, [r2, #20]
 1261 07c0 D268     		ldr	r2, [r2, #12]
 1262 07c2 4FEA0262 		lsl	r2, r2, #24
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1263              		.loc 1 666 0
 1264 07c6 0A43     		orrs	r2, r2, r1
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1265              		.loc 1 664 0
 1266 07c8 1A61     		str	r2, [r3, #16]
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1267              		.loc 1 668 0
 1268 07ca 07F10C07 		add	r7, r7, #12
 1269 07ce BD46     		mov	sp, r7
 1270 07d0 80BC     		pop	{r7}
 1271 07d2 7047     		bx	lr
 1272              		.cfi_endproc
 1273              	.LFE121:
 1275              		.align	2
 1276              		.global	FSMC_PCCARDStructInit
 1277              		.thumb
 1278              		.thumb_func
 1280              	FSMC_PCCARDStructInit:
 1281              	.LFB122:
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_PCCARDInitStruct member with its default value.
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_PCCARDInitStruct: pointer to a FSMC_PCCARDInitTypeDef structure
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         which will be initialized.
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1282              		.loc 1 677 0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 8
 1285              		@ frame_needed = 1, uses_anonymous_args = 0
 1286              		@ link register save eliminated.
 1287 07d4 80B4     		push	{r7}
 1288              	.LCFI35:
 1289              		.cfi_def_cfa_offset 4
 1290              		.cfi_offset 7, -4
 1291 07d6 83B0     		sub	sp, sp, #12
 1292              	.LCFI36:
 1293              		.cfi_def_cfa_offset 16
 1294 07d8 00AF     		add	r7, sp, #0
 1295              	.LCFI37:
 1296              		.cfi_def_cfa_register 7
 1297 07da 7860     		str	r0, [r7, #4]
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset PCCARD Init structure parameters values */
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 1298              		.loc 1 679 0
 1299 07dc 7B68     		ldr	r3, [r7, #4]
 1300 07de 4FF00002 		mov	r2, #0
 1301 07e2 1A60     		str	r2, [r3, #0]
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime = 0x0;
 1302              		.loc 1 680 0
 1303 07e4 7B68     		ldr	r3, [r7, #4]
 1304 07e6 4FF00002 		mov	r2, #0
 1305 07ea 5A60     		str	r2, [r3, #4]
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TARSetupTime = 0x0;
 1306              		.loc 1 681 0
 1307 07ec 7B68     		ldr	r3, [r7, #4]
 1308 07ee 4FF00002 		mov	r2, #0
 1309 07f2 9A60     		str	r2, [r3, #8]
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1310              		.loc 1 682 0
 1311 07f4 7B68     		ldr	r3, [r7, #4]
 1312 07f6 DB68     		ldr	r3, [r3, #12]
 1313 07f8 4FF0FC02 		mov	r2, #252
 1314 07fc 1A60     		str	r2, [r3, #0]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1315              		.loc 1 683 0
 1316 07fe 7B68     		ldr	r3, [r7, #4]
 1317 0800 DB68     		ldr	r3, [r3, #12]
 1318 0802 4FF0FC02 		mov	r2, #252
 1319 0806 5A60     		str	r2, [r3, #4]
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1320              		.loc 1 684 0
 1321 0808 7B68     		ldr	r3, [r7, #4]
 1322 080a DB68     		ldr	r3, [r3, #12]
 1323 080c 4FF0FC02 		mov	r2, #252
 1324 0810 9A60     		str	r2, [r3, #8]
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 1325              		.loc 1 685 0
 1326 0812 7B68     		ldr	r3, [r7, #4]
 1327 0814 DB68     		ldr	r3, [r3, #12]
 1328 0816 4FF0FC02 		mov	r2, #252
 1329 081a DA60     		str	r2, [r3, #12]
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1330              		.loc 1 686 0
 1331 081c 7B68     		ldr	r3, [r7, #4]
 1332 081e 1B69     		ldr	r3, [r3, #16]
 1333 0820 4FF0FC02 		mov	r2, #252
 1334 0824 1A60     		str	r2, [r3, #0]
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1335              		.loc 1 687 0
 1336 0826 7B68     		ldr	r3, [r7, #4]
 1337 0828 1B69     		ldr	r3, [r3, #16]
 1338 082a 4FF0FC02 		mov	r2, #252
 1339 082e 5A60     		str	r2, [r3, #4]
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1340              		.loc 1 688 0
 1341 0830 7B68     		ldr	r3, [r7, #4]
 1342 0832 1B69     		ldr	r3, [r3, #16]
 1343 0834 4FF0FC02 		mov	r2, #252
 1344 0838 9A60     		str	r2, [r3, #8]
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	
 1345              		.loc 1 689 0
 1346 083a 7B68     		ldr	r3, [r7, #4]
 1347 083c 1B69     		ldr	r3, [r3, #16]
 1348 083e 4FF0FC02 		mov	r2, #252
 1349 0842 DA60     		str	r2, [r3, #12]
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1350              		.loc 1 690 0
 1351 0844 7B68     		ldr	r3, [r7, #4]
 1352 0846 5B69     		ldr	r3, [r3, #20]
 1353 0848 4FF0FC02 		mov	r2, #252
 1354 084c 1A60     		str	r2, [r3, #0]
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1355              		.loc 1 691 0
 1356 084e 7B68     		ldr	r3, [r7, #4]
 1357 0850 5B69     		ldr	r3, [r3, #20]
 1358 0852 4FF0FC02 		mov	r2, #252
 1359 0856 5A60     		str	r2, [r3, #4]
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1360              		.loc 1 692 0
 1361 0858 7B68     		ldr	r3, [r7, #4]
 1362 085a 5B69     		ldr	r3, [r3, #20]
 1363 085c 4FF0FC02 		mov	r2, #252
 1364 0860 9A60     		str	r2, [r3, #8]
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 1365              		.loc 1 693 0
 1366 0862 7B68     		ldr	r3, [r7, #4]
 1367 0864 5B69     		ldr	r3, [r3, #20]
 1368 0866 4FF0FC02 		mov	r2, #252
 1369 086a DA60     		str	r2, [r3, #12]
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1370              		.loc 1 694 0
 1371 086c 07F10C07 		add	r7, r7, #12
 1372 0870 BD46     		mov	sp, r7
 1373 0872 80BC     		pop	{r7}
 1374 0874 7047     		bx	lr
 1375              		.cfi_endproc
 1376              	.LFE122:
 1378 0876 00BF     		.align	2
 1379              		.global	FSMC_PCCARDCmd
 1380              		.thumb
 1381              		.thumb_func
 1383              	FSMC_PCCARDCmd:
 1384              	.LFB123:
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the PCCARD Memory Bank.
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the PCCARD Memory Bank.  
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDCmd(FunctionalState NewState)
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1385              		.loc 1 703 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 8
 1388              		@ frame_needed = 1, uses_anonymous_args = 0
 1389              		@ link register save eliminated.
 1390 0878 80B4     		push	{r7}
 1391              	.LCFI38:
 1392              		.cfi_def_cfa_offset 4
 1393              		.cfi_offset 7, -4
 1394 087a 83B0     		sub	sp, sp, #12
 1395              	.LCFI39:
 1396              		.cfi_def_cfa_offset 16
 1397 087c 00AF     		add	r7, sp, #0
 1398              	.LCFI40:
 1399              		.cfi_def_cfa_register 7
 1400 087e 0346     		mov	r3, r0
 1401 0880 FB71     		strb	r3, [r7, #7]
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 1402              		.loc 1 706 0
 1403 0882 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1404 0884 002B     		cmp	r3, #0
 1405 0886 0CD0     		beq	.L36
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the PCCARD Bank by setting the PBKEN bit in the PCR4 register */
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->PCR4 |= PCR_PBKEN_SET;
 1406              		.loc 1 709 0
 1407 0888 4FF0A003 		mov	r3, #160
 1408 088c CAF20003 		movt	r3, 40960
 1409 0890 4FF0A002 		mov	r2, #160
 1410 0894 CAF20002 		movt	r2, 40960
 1411 0898 1268     		ldr	r2, [r2, #0]
 1412 089a 42F00402 		orr	r2, r2, #4
 1413 089e 1A60     		str	r2, [r3, #0]
 1414 08a0 0FE0     		b	.L35
 1415              	.L36:
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the PCCARD Bank by clearing the PBKEN bit in the PCR4 register */
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->PCR4 &= PCR_PBKEN_RESET;
 1416              		.loc 1 714 0
 1417 08a2 4FF0A002 		mov	r2, #160
 1418 08a6 CAF20002 		movt	r2, 40960
 1419 08aa 4FF0A003 		mov	r3, #160
 1420 08ae CAF20003 		movt	r3, 40960
 1421 08b2 1B68     		ldr	r3, [r3, #0]
 1422 08b4 1946     		mov	r1, r3
 1423 08b6 4FF6FB73 		movw	r3, #65531
 1424 08ba C0F20F03 		movt	r3, 15
 1425 08be 0B40     		ands	r3, r3, r1
 1426 08c0 1360     		str	r3, [r2, #0]
 1427              	.L35:
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1428              		.loc 1 716 0
 1429 08c2 07F10C07 		add	r7, r7, #12
 1430 08c6 BD46     		mov	sp, r7
 1431 08c8 80BC     		pop	{r7}
 1432 08ca 7047     		bx	lr
 1433              		.cfi_endproc
 1434              	.LFE123:
 1436              		.align	2
 1437              		.global	FSMC_ITConfig
 1438              		.thumb
 1439              		.thumb_func
 1441              	FSMC_ITConfig:
 1442              	.LFB124:
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group4  Interrupts and flags management functions
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief    Interrupts and flags management functions
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      Interrupts and flags management functions
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified FSMC interrupts.
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt sources to be enabled or disabled.
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the specified FSMC interrupts.
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ITConfig(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1443              		.loc 1 750 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 16
 1446              		@ frame_needed = 1, uses_anonymous_args = 0
 1447              		@ link register save eliminated.
 1448 08cc 80B4     		push	{r7}
 1449              	.LCFI41:
 1450              		.cfi_def_cfa_offset 4
 1451              		.cfi_offset 7, -4
 1452 08ce 85B0     		sub	sp, sp, #20
 1453              	.LCFI42:
 1454              		.cfi_def_cfa_offset 24
 1455 08d0 00AF     		add	r7, sp, #0
 1456              	.LCFI43:
 1457              		.cfi_def_cfa_register 7
 1458 08d2 F860     		str	r0, [r7, #12]
 1459 08d4 B960     		str	r1, [r7, #8]
 1460 08d6 1346     		mov	r3, r2
 1461 08d8 FB71     		strb	r3, [r7, #7]
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));	
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 1462              		.loc 1 755 0
 1463 08da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1464 08dc 002B     		cmp	r3, #0
 1465 08de 30D0     		beq	.L39
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank2 interrupts */
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 1466              		.loc 1 758 0
 1467 08e0 FB68     		ldr	r3, [r7, #12]
 1468 08e2 102B     		cmp	r3, #16
 1469 08e4 0DD1     		bne	.L40
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->SR2 |= FSMC_IT;
 1470              		.loc 1 760 0
 1471 08e6 4FF06003 		mov	r3, #96
 1472 08ea CAF20003 		movt	r3, 40960
 1473 08ee 4FF06002 		mov	r2, #96
 1474 08f2 CAF20002 		movt	r2, 40960
 1475 08f6 5268     		ldr	r2, [r2, #4]
 1476 08f8 1146     		mov	r1, r2
 1477 08fa BA68     		ldr	r2, [r7, #8]
 1478 08fc 0A43     		orrs	r2, r2, r1
 1479 08fe 5A60     		str	r2, [r3, #4]
 1480 0900 55E0     		b	.L38
 1481              	.L40:
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank3 interrupts */
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 1482              		.loc 1 763 0
 1483 0902 FB68     		ldr	r3, [r7, #12]
 1484 0904 B3F5807F 		cmp	r3, #256
 1485 0908 0DD1     		bne	.L42
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->SR3 |= FSMC_IT;
 1486              		.loc 1 765 0
 1487 090a 4FF08003 		mov	r3, #128
 1488 090e CAF20003 		movt	r3, 40960
 1489 0912 4FF08002 		mov	r2, #128
 1490 0916 CAF20002 		movt	r2, 40960
 1491 091a 5268     		ldr	r2, [r2, #4]
 1492 091c 1146     		mov	r1, r2
 1493 091e BA68     		ldr	r2, [r7, #8]
 1494 0920 0A43     		orrs	r2, r2, r1
 1495 0922 5A60     		str	r2, [r3, #4]
 1496 0924 43E0     		b	.L38
 1497              	.L42:
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank4 interrupts */
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank4->SR4 |= FSMC_IT;    
 1498              		.loc 1 770 0
 1499 0926 4FF0A003 		mov	r3, #160
 1500 092a CAF20003 		movt	r3, 40960
 1501 092e 4FF0A002 		mov	r2, #160
 1502 0932 CAF20002 		movt	r2, 40960
 1503 0936 5268     		ldr	r2, [r2, #4]
 1504 0938 1146     		mov	r1, r2
 1505 093a BA68     		ldr	r2, [r7, #8]
 1506 093c 0A43     		orrs	r2, r2, r1
 1507 093e 5A60     		str	r2, [r3, #4]
 1508 0940 35E0     		b	.L38
 1509              	.L39:
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank2 interrupts */
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 1510              		.loc 1 776 0
 1511 0942 FB68     		ldr	r3, [r7, #12]
 1512 0944 102B     		cmp	r3, #16
 1513 0946 0FD1     		bne	.L43
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->SR2 &= (uint32_t)~FSMC_IT;
 1514              		.loc 1 779 0
 1515 0948 4FF06003 		mov	r3, #96
 1516 094c CAF20003 		movt	r3, 40960
 1517 0950 4FF06002 		mov	r2, #96
 1518 0954 CAF20002 		movt	r2, 40960
 1519 0958 5268     		ldr	r2, [r2, #4]
 1520 095a 1146     		mov	r1, r2
 1521 095c BA68     		ldr	r2, [r7, #8]
 1522 095e 6FEA0202 		mvn	r2, r2
 1523 0962 0A40     		ands	r2, r2, r1
 1524 0964 5A60     		str	r2, [r3, #4]
 1525 0966 22E0     		b	.L38
 1526              	.L43:
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank3 interrupts */
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 1527              		.loc 1 782 0
 1528 0968 FB68     		ldr	r3, [r7, #12]
 1529 096a B3F5807F 		cmp	r3, #256
 1530 096e 0FD1     		bne	.L44
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->SR3 &= (uint32_t)~FSMC_IT;
 1531              		.loc 1 784 0
 1532 0970 4FF08003 		mov	r3, #128
 1533 0974 CAF20003 		movt	r3, 40960
 1534 0978 4FF08002 		mov	r2, #128
 1535 097c CAF20002 		movt	r2, 40960
 1536 0980 5268     		ldr	r2, [r2, #4]
 1537 0982 1146     		mov	r1, r2
 1538 0984 BA68     		ldr	r2, [r7, #8]
 1539 0986 6FEA0202 		mvn	r2, r2
 1540 098a 0A40     		ands	r2, r2, r1
 1541 098c 5A60     		str	r2, [r3, #4]
 1542 098e 0EE0     		b	.L38
 1543              	.L44:
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank4 interrupts */
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank4->SR4 &= (uint32_t)~FSMC_IT;    
 1544              		.loc 1 789 0
 1545 0990 4FF0A003 		mov	r3, #160
 1546 0994 CAF20003 		movt	r3, 40960
 1547 0998 4FF0A002 		mov	r2, #160
 1548 099c CAF20002 		movt	r2, 40960
 1549 09a0 5268     		ldr	r2, [r2, #4]
 1550 09a2 1146     		mov	r1, r2
 1551 09a4 BA68     		ldr	r2, [r7, #8]
 1552 09a6 6FEA0202 		mvn	r2, r2
 1553 09aa 0A40     		ands	r2, r2, r1
 1554 09ac 5A60     		str	r2, [r3, #4]
 1555              	.L38:
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1556              		.loc 1 792 0
 1557 09ae 07F11407 		add	r7, r7, #20
 1558 09b2 BD46     		mov	sp, r7
 1559 09b4 80BC     		pop	{r7}
 1560 09b6 7047     		bx	lr
 1561              		.cfi_endproc
 1562              	.LFE124:
 1564              		.align	2
 1565              		.global	FSMC_GetFlagStatus
 1566              		.thumb
 1567              		.thumb_func
 1569              	FSMC_GetFlagStatus:
 1570              	.LFB125:
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Checks whether the specified FSMC flag is set or not.
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to check.
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_RisingEdge: Rising edge detection Flag.
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_Level: Level detection Flag.
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FallingEdge: Falling edge detection Flag.
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FEMPT: Fifo empty Flag. 
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The new state of FSMC_FLAG (SET or RESET).
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** FlagStatus FSMC_GetFlagStatus(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1571              		.loc 1 810 0
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 16
 1574              		@ frame_needed = 1, uses_anonymous_args = 0
 1575              		@ link register save eliminated.
 1576 09b8 80B4     		push	{r7}
 1577              	.LCFI44:
 1578              		.cfi_def_cfa_offset 4
 1579              		.cfi_offset 7, -4
 1580 09ba 85B0     		sub	sp, sp, #20
 1581              	.LCFI45:
 1582              		.cfi_def_cfa_offset 24
 1583 09bc 00AF     		add	r7, sp, #0
 1584              	.LCFI46:
 1585              		.cfi_def_cfa_register 7
 1586 09be 7860     		str	r0, [r7, #4]
 1587 09c0 3960     		str	r1, [r7, #0]
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FlagStatus bitstatus = RESET;
 1588              		.loc 1 811 0
 1589 09c2 4FF00003 		mov	r3, #0
 1590 09c6 FB73     		strb	r3, [r7, #15]
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmpsr = 0x00000000;
 1591              		.loc 1 812 0
 1592 09c8 4FF00003 		mov	r3, #0
 1593 09cc BB60     		str	r3, [r7, #8]
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GET_FLAG(FSMC_FLAG));
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1594              		.loc 1 818 0
 1595 09ce 7B68     		ldr	r3, [r7, #4]
 1596 09d0 102B     		cmp	r3, #16
 1597 09d2 06D1     		bne	.L46
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 1598              		.loc 1 820 0
 1599 09d4 4FF06003 		mov	r3, #96
 1600 09d8 CAF20003 		movt	r3, 40960
 1601 09dc 5B68     		ldr	r3, [r3, #4]
 1602 09de BB60     		str	r3, [r7, #8]
 1603 09e0 10E0     		b	.L47
 1604              	.L46:
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1605              		.loc 1 822 0
 1606 09e2 7B68     		ldr	r3, [r7, #4]
 1607 09e4 B3F5807F 		cmp	r3, #256
 1608 09e8 06D1     		bne	.L48
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 1609              		.loc 1 824 0
 1610 09ea 4FF08003 		mov	r3, #128
 1611 09ee CAF20003 		movt	r3, 40960
 1612 09f2 5B68     		ldr	r3, [r3, #4]
 1613 09f4 BB60     		str	r3, [r7, #8]
 1614 09f6 05E0     		b	.L47
 1615              	.L48:
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 1616              		.loc 1 829 0
 1617 09f8 4FF0A003 		mov	r3, #160
 1618 09fc CAF20003 		movt	r3, 40960
 1619 0a00 5B68     		ldr	r3, [r3, #4]
 1620 0a02 BB60     		str	r3, [r7, #8]
 1621              	.L47:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   } 
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Get the flag status */
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if ((tmpsr & FSMC_FLAG) != (uint16_t)RESET )
 1622              		.loc 1 833 0
 1623 0a04 BA68     		ldr	r2, [r7, #8]
 1624 0a06 3B68     		ldr	r3, [r7, #0]
 1625 0a08 1340     		ands	r3, r3, r2
 1626 0a0a 002B     		cmp	r3, #0
 1627 0a0c 03D0     		beq	.L49
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = SET;
 1628              		.loc 1 835 0
 1629 0a0e 4FF00103 		mov	r3, #1
 1630 0a12 FB73     		strb	r3, [r7, #15]
 1631 0a14 02E0     		b	.L50
 1632              	.L49:
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = RESET;
 1633              		.loc 1 839 0
 1634 0a16 4FF00003 		mov	r3, #0
 1635 0a1a FB73     		strb	r3, [r7, #15]
 1636              	.L50:
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Return the flag status */
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return bitstatus;
 1637              		.loc 1 842 0
 1638 0a1c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1639              		.loc 1 843 0
 1640 0a1e 1846     		mov	r0, r3
 1641 0a20 07F11407 		add	r7, r7, #20
 1642 0a24 BD46     		mov	sp, r7
 1643 0a26 80BC     		pop	{r7}
 1644 0a28 7047     		bx	lr
 1645              		.cfi_endproc
 1646              	.LFE125:
 1648 0a2a 00BF     		.align	2
 1649              		.global	FSMC_ClearFlag
 1650              		.thumb
 1651              		.thumb_func
 1653              	FSMC_ClearFlag:
 1654              	.LFB126:
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Clears the FSMC's pending flags.
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to clear.
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_RisingEdge: Rising edge detection Flag.
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_Level: Level detection Flag.
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FallingEdge: Falling edge detection Flag.
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ClearFlag(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1655              		.loc 1 860 0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 8
 1658              		@ frame_needed = 1, uses_anonymous_args = 0
 1659              		@ link register save eliminated.
 1660 0a2c 80B4     		push	{r7}
 1661              	.LCFI47:
 1662              		.cfi_def_cfa_offset 4
 1663              		.cfi_offset 7, -4
 1664 0a2e 83B0     		sub	sp, sp, #12
 1665              	.LCFI48:
 1666              		.cfi_def_cfa_offset 16
 1667 0a30 00AF     		add	r7, sp, #0
 1668              	.LCFI49:
 1669              		.cfi_def_cfa_register 7
 1670 0a32 7860     		str	r0, [r7, #4]
 1671 0a34 3960     		str	r1, [r7, #0]
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  /* Check the parameters */
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_CLEAR_FLAG(FSMC_FLAG)) ;
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1672              		.loc 1 865 0
 1673 0a36 7B68     		ldr	r3, [r7, #4]
 1674 0a38 102B     		cmp	r3, #16
 1675 0a3a 0FD1     		bne	.L52
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 &= ~FSMC_FLAG; 
 1676              		.loc 1 867 0
 1677 0a3c 4FF06003 		mov	r3, #96
 1678 0a40 CAF20003 		movt	r3, 40960
 1679 0a44 4FF06002 		mov	r2, #96
 1680 0a48 CAF20002 		movt	r2, 40960
 1681 0a4c 5268     		ldr	r2, [r2, #4]
 1682 0a4e 1146     		mov	r1, r2
 1683 0a50 3A68     		ldr	r2, [r7, #0]
 1684 0a52 6FEA0202 		mvn	r2, r2
 1685 0a56 0A40     		ands	r2, r2, r1
 1686 0a58 5A60     		str	r2, [r3, #4]
 1687 0a5a 22E0     		b	.L51
 1688              	.L52:
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1689              		.loc 1 869 0
 1690 0a5c 7B68     		ldr	r3, [r7, #4]
 1691 0a5e B3F5807F 		cmp	r3, #256
 1692 0a62 0FD1     		bne	.L54
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 &= ~FSMC_FLAG;
 1693              		.loc 1 871 0
 1694 0a64 4FF08003 		mov	r3, #128
 1695 0a68 CAF20003 		movt	r3, 40960
 1696 0a6c 4FF08002 		mov	r2, #128
 1697 0a70 CAF20002 		movt	r2, 40960
 1698 0a74 5268     		ldr	r2, [r2, #4]
 1699 0a76 1146     		mov	r1, r2
 1700 0a78 3A68     		ldr	r2, [r7, #0]
 1701 0a7a 6FEA0202 		mvn	r2, r2
 1702 0a7e 0A40     		ands	r2, r2, r1
 1703 0a80 5A60     		str	r2, [r3, #4]
 1704 0a82 0EE0     		b	.L51
 1705              	.L54:
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->SR4 &= ~FSMC_FLAG;
 1706              		.loc 1 876 0
 1707 0a84 4FF0A003 		mov	r3, #160
 1708 0a88 CAF20003 		movt	r3, 40960
 1709 0a8c 4FF0A002 		mov	r2, #160
 1710 0a90 CAF20002 		movt	r2, 40960
 1711 0a94 5268     		ldr	r2, [r2, #4]
 1712 0a96 1146     		mov	r1, r2
 1713 0a98 3A68     		ldr	r2, [r7, #0]
 1714 0a9a 6FEA0202 		mvn	r2, r2
 1715 0a9e 0A40     		ands	r2, r2, r1
 1716 0aa0 5A60     		str	r2, [r3, #4]
 1717              	.L51:
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1718              		.loc 1 878 0
 1719 0aa2 07F10C07 		add	r7, r7, #12
 1720 0aa6 BD46     		mov	sp, r7
 1721 0aa8 80BC     		pop	{r7}
 1722 0aaa 7047     		bx	lr
 1723              		.cfi_endproc
 1724              	.LFE126:
 1726              		.align	2
 1727              		.global	FSMC_GetITStatus
 1728              		.thumb
 1729              		.thumb_func
 1731              	FSMC_GetITStatus:
 1732              	.LFB127:
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Checks whether the specified FSMC interrupt has occurred or not.
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt source to check.
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt. 
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The new state of FSMC_IT (SET or RESET).
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** ITStatus FSMC_GetITStatus(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1733              		.loc 1 895 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 24
 1736              		@ frame_needed = 1, uses_anonymous_args = 0
 1737              		@ link register save eliminated.
 1738 0aac 80B4     		push	{r7}
 1739              	.LCFI50:
 1740              		.cfi_def_cfa_offset 4
 1741              		.cfi_offset 7, -4
 1742 0aae 87B0     		sub	sp, sp, #28
 1743              	.LCFI51:
 1744              		.cfi_def_cfa_offset 32
 1745 0ab0 00AF     		add	r7, sp, #0
 1746              	.LCFI52:
 1747              		.cfi_def_cfa_register 7
 1748 0ab2 7860     		str	r0, [r7, #4]
 1749 0ab4 3960     		str	r1, [r7, #0]
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ITStatus bitstatus = RESET;
 1750              		.loc 1 896 0
 1751 0ab6 4FF00003 		mov	r3, #0
 1752 0aba FB75     		strb	r3, [r7, #23]
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmpsr = 0x0, itstatus = 0x0, itenable = 0x0; 
 1753              		.loc 1 897 0
 1754 0abc 4FF00003 		mov	r3, #0
 1755 0ac0 3B61     		str	r3, [r7, #16]
 1756 0ac2 4FF00003 		mov	r3, #0
 1757 0ac6 FB60     		str	r3, [r7, #12]
 1758 0ac8 4FF00003 		mov	r3, #0
 1759 0acc BB60     		str	r3, [r7, #8]
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GET_IT(FSMC_IT));
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1760              		.loc 1 903 0
 1761 0ace 7B68     		ldr	r3, [r7, #4]
 1762 0ad0 102B     		cmp	r3, #16
 1763 0ad2 06D1     		bne	.L56
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 1764              		.loc 1 905 0
 1765 0ad4 4FF06003 		mov	r3, #96
 1766 0ad8 CAF20003 		movt	r3, 40960
 1767 0adc 5B68     		ldr	r3, [r3, #4]
 1768 0ade 3B61     		str	r3, [r7, #16]
 1769 0ae0 10E0     		b	.L57
 1770              	.L56:
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1771              		.loc 1 907 0
 1772 0ae2 7B68     		ldr	r3, [r7, #4]
 1773 0ae4 B3F5807F 		cmp	r3, #256
 1774 0ae8 06D1     		bne	.L58
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 1775              		.loc 1 909 0
 1776 0aea 4FF08003 		mov	r3, #128
 1777 0aee CAF20003 		movt	r3, 40960
 1778 0af2 5B68     		ldr	r3, [r3, #4]
 1779 0af4 3B61     		str	r3, [r7, #16]
 1780 0af6 05E0     		b	.L57
 1781              	.L58:
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 1782              		.loc 1 914 0
 1783 0af8 4FF0A003 		mov	r3, #160
 1784 0afc CAF20003 		movt	r3, 40960
 1785 0b00 5B68     		ldr	r3, [r3, #4]
 1786 0b02 3B61     		str	r3, [r7, #16]
 1787              	.L57:
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   } 
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   itstatus = tmpsr & FSMC_IT;
 1788              		.loc 1 917 0
 1789 0b04 3A69     		ldr	r2, [r7, #16]
 1790 0b06 3B68     		ldr	r3, [r7, #0]
 1791 0b08 1340     		ands	r3, r3, r2
 1792 0b0a FB60     		str	r3, [r7, #12]
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   itenable = tmpsr & (FSMC_IT >> 3);
 1793              		.loc 1 919 0
 1794 0b0c 3B68     		ldr	r3, [r7, #0]
 1795 0b0e 4FEAD302 		lsr	r2, r3, #3
 1796 0b12 3B69     		ldr	r3, [r7, #16]
 1797 0b14 1340     		ands	r3, r3, r2
 1798 0b16 BB60     		str	r3, [r7, #8]
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if ((itstatus != (uint32_t)RESET)  && (itenable != (uint32_t)RESET))
 1799              		.loc 1 920 0
 1800 0b18 FB68     		ldr	r3, [r7, #12]
 1801 0b1a 002B     		cmp	r3, #0
 1802 0b1c 06D0     		beq	.L59
 1803              		.loc 1 920 0 is_stmt 0 discriminator 1
 1804 0b1e BB68     		ldr	r3, [r7, #8]
 1805 0b20 002B     		cmp	r3, #0
 1806 0b22 03D0     		beq	.L59
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = SET;
 1807              		.loc 1 922 0 is_stmt 1
 1808 0b24 4FF00103 		mov	r3, #1
 1809 0b28 FB75     		strb	r3, [r7, #23]
 1810 0b2a 02E0     		b	.L60
 1811              	.L59:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = RESET;
 1812              		.loc 1 926 0
 1813 0b2c 4FF00003 		mov	r3, #0
 1814 0b30 FB75     		strb	r3, [r7, #23]
 1815              	.L60:
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return bitstatus; 
 1816              		.loc 1 928 0
 1817 0b32 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1818              		.loc 1 929 0
 1819 0b34 1846     		mov	r0, r3
 1820 0b36 07F11C07 		add	r7, r7, #28
 1821 0b3a BD46     		mov	sp, r7
 1822 0b3c 80BC     		pop	{r7}
 1823 0b3e 7047     		bx	lr
 1824              		.cfi_endproc
 1825              	.LFE127:
 1827              		.align	2
 1828              		.global	FSMC_ClearITPendingBit
 1829              		.thumb
 1830              		.thumb_func
 1832              	FSMC_ClearITPendingBit:
 1833              	.LFB128:
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Clears the FSMC's interrupt pending bits.
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the interrupt pending bit to clear.
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ClearITPendingBit(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1834              		.loc 1 946 0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 8
 1837              		@ frame_needed = 1, uses_anonymous_args = 0
 1838              		@ link register save eliminated.
 1839 0b40 80B4     		push	{r7}
 1840              	.LCFI53:
 1841              		.cfi_def_cfa_offset 4
 1842              		.cfi_offset 7, -4
 1843 0b42 83B0     		sub	sp, sp, #12
 1844              	.LCFI54:
 1845              		.cfi_def_cfa_offset 16
 1846 0b44 00AF     		add	r7, sp, #0
 1847              	.LCFI55:
 1848              		.cfi_def_cfa_register 7
 1849 0b46 7860     		str	r0, [r7, #4]
 1850 0b48 3960     		str	r1, [r7, #0]
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1851              		.loc 1 951 0
 1852 0b4a 7B68     		ldr	r3, [r7, #4]
 1853 0b4c 102B     		cmp	r3, #16
 1854 0b4e 11D1     		bne	.L62
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 &= ~(FSMC_IT >> 3); 
 1855              		.loc 1 953 0
 1856 0b50 4FF06003 		mov	r3, #96
 1857 0b54 CAF20003 		movt	r3, 40960
 1858 0b58 4FF06002 		mov	r2, #96
 1859 0b5c CAF20002 		movt	r2, 40960
 1860 0b60 5268     		ldr	r2, [r2, #4]
 1861 0b62 1146     		mov	r1, r2
 1862 0b64 3A68     		ldr	r2, [r7, #0]
 1863 0b66 4FEAD202 		lsr	r2, r2, #3
 1864 0b6a 6FEA0202 		mvn	r2, r2
 1865 0b6e 0A40     		ands	r2, r2, r1
 1866 0b70 5A60     		str	r2, [r3, #4]
 1867 0b72 26E0     		b	.L61
 1868              	.L62:
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1869              		.loc 1 955 0
 1870 0b74 7B68     		ldr	r3, [r7, #4]
 1871 0b76 B3F5807F 		cmp	r3, #256
 1872 0b7a 11D1     		bne	.L64
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 &= ~(FSMC_IT >> 3);
 1873              		.loc 1 957 0
 1874 0b7c 4FF08003 		mov	r3, #128
 1875 0b80 CAF20003 		movt	r3, 40960
 1876 0b84 4FF08002 		mov	r2, #128
 1877 0b88 CAF20002 		movt	r2, 40960
 1878 0b8c 5268     		ldr	r2, [r2, #4]
 1879 0b8e 1146     		mov	r1, r2
 1880 0b90 3A68     		ldr	r2, [r7, #0]
 1881 0b92 4FEAD202 		lsr	r2, r2, #3
 1882 0b96 6FEA0202 		mvn	r2, r2
 1883 0b9a 0A40     		ands	r2, r2, r1
 1884 0b9c 5A60     		str	r2, [r3, #4]
 1885 0b9e 10E0     		b	.L61
 1886              	.L64:
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->SR4 &= ~(FSMC_IT >> 3);
 1887              		.loc 1 962 0
 1888 0ba0 4FF0A003 		mov	r3, #160
 1889 0ba4 CAF20003 		movt	r3, 40960
 1890 0ba8 4FF0A002 		mov	r2, #160
 1891 0bac CAF20002 		movt	r2, 40960
 1892 0bb0 5268     		ldr	r2, [r2, #4]
 1893 0bb2 1146     		mov	r1, r2
 1894 0bb4 3A68     		ldr	r2, [r7, #0]
 1895 0bb6 4FEAD202 		lsr	r2, r2, #3
 1896 0bba 6FEA0202 		mvn	r2, r2
 1897 0bbe 0A40     		ands	r2, r2, r1
 1898 0bc0 5A60     		str	r2, [r3, #4]
 1899              	.L61:
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1900              		.loc 1 964 0
 1901 0bc2 07F10C07 		add	r7, r7, #12
 1902 0bc6 BD46     		mov	sp, r7
 1903 0bc8 80BC     		pop	{r7}
 1904 0bca 7047     		bx	lr
 1905              		.cfi_endproc
 1906              	.LFE128:
 1908              	.Letext0:
 1909              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 1910              		.file 3 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm3
 1911              		.file 4 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f
 1912              		.file 5 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_fsmc.c
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:18     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:23     .text:00000000 FSMC_NORSRAMDeInit
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:84     .text:0000005c FSMC_NORSRAMInit
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:307    .text:000001ac FSMC_NORSRAMStructInit
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:460    .text:000002b4 FSMC_NORSRAMCmd
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:519    .text:0000030c FSMC_NANDDeInit
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:597    .text:00000398 FSMC_NANDInit
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:758    .text:00000498 FSMC_NANDStructInit
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:857    .text:00000534 FSMC_NANDCmd
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:947    .text:000005d4 FSMC_NANDECCCmd
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1037   .text:00000674 FSMC_GetECC
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1091   .text:000006b0 FSMC_PCCARDDeInit
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1142   .text:00000700 FSMC_PCCARDInit
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1280   .text:000007d4 FSMC_PCCARDStructInit
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1383   .text:00000878 FSMC_PCCARDCmd
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1441   .text:000008cc FSMC_ITConfig
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1569   .text:000009b8 FSMC_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1653   .text:00000a2c FSMC_ClearFlag
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1731   .text:00000aac FSMC_GetITStatus
C:\Users\Alex\AppData\Local\Temp\ccPNoBA5.s:1832   .text:00000b40 FSMC_ClearITPendingBit
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
