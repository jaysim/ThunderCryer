   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_fsmc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.FSMC_NORSRAMDeInit,"ax",%progbits
  19              		.align	2
  20              		.global	FSMC_NORSRAMDeInit
  21              		.thumb
  22              		.thumb_func
  24              	FSMC_NORSRAMDeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @file    stm32f4xx_fsmc.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  * @brief    This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          functionalities of the FSMC peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with SRAM, PSRAM, NOR and OneNAND memories
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with NAND memories
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interface with 16-bit PC Card compatible memories  
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           - Interrupts and flags management   
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *           
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @attention
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ******************************************************************************
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Includes ------------------------------------------------------------------*/
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #include "stm32f4xx_fsmc.h"
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #include "stm32f4xx_rcc.h"
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief FSMC driver modules
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */ 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private typedef -----------------------------------------------------------*/
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private define ------------------------------------------------------------*/
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* --------------------- FSMC registers bit mask ---------------------------- */
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* FSMC BCRx Mask */
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_MBKEN_SET          ((uint32_t)0x00000001)
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_MBKEN_RESET        ((uint32_t)0x000FFFFE)
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define BCR_FACCEN_SET         ((uint32_t)0x00000040)
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* FSMC PCRx Mask */
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_PBKEN_SET          ((uint32_t)0x00000004)
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_PBKEN_RESET        ((uint32_t)0x000FFFFB)
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_ECCEN_SET          ((uint32_t)0x00000040)
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_ECCEN_RESET        ((uint32_t)0x000FFFBF)
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** #define PCR_MEMORYTYPE_NAND    ((uint32_t)0x00000008)
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private macro -------------------------------------------------------------*/
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private variables ---------------------------------------------------------*/
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private function prototypes -----------------------------------------------*/
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /* Private functions ---------------------------------------------------------*/
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Private_Functions
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group1 NOR/SRAM Controller functions
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   NOR/SRAM Controller functions 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     NOR/SRAM Controller functions
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  SRAM, PSRAM, NOR or OneNAND memory connected to the NOR/SRAM Bank:
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_NORSRAMInitTypeDef structure, for example:
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMInitTypeDef  FSMC_NORSRAMInitStructure;
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_NORSRAMInitStructure variable with the allowed values of
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the NOR/SRAM Controller by calling the function
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMInit(&FSMC_NORSRAMInitStructure); 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the NOR/SRAM Bank, for example:
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NORSRAMCmd(FSMC_Bank1_NORSRAM2, ENABLE);  
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the NOR/SRAM Bank. 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC NOR/SRAM Banks registers to their default 
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *   reset values.
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMDeInit(uint32_t FSMC_Bank)
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
  27              		.loc 1 117 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameter */
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank1_NORSRAM1 */
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank1_NORSRAM1)
  43              		.loc 1 122 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 07D1     		bne	.L2
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030DB;    
  47              		.loc 1 124 0
  48 000e 4FF02043 		mov	r3, #-1610612736
  49 0012 7A68     		ldr	r2, [r7, #4]
  50 0014 43F2DB01 		movw	r1, #12507
  51 0018 43F82210 		str	r1, [r3, r2, lsl #2]
  52 001c 06E0     		b	.L3
  53              	.L2:
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank1_NORSRAM2,  FSMC_Bank1_NORSRAM3 or FSMC_Bank1_NORSRAM4 */
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {   
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] = 0x000030D2; 
  54              		.loc 1 129 0
  55 001e 4FF02043 		mov	r3, #-1610612736
  56 0022 7A68     		ldr	r2, [r7, #4]
  57 0024 43F2D201 		movw	r1, #12498
  58 0028 43F82210 		str	r1, [r3, r2, lsl #2]
  59              	.L3:
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_Bank + 1] = 0x0FFFFFFF;
  60              		.loc 1 131 0
  61 002c 4FF02043 		mov	r3, #-1610612736
  62 0030 7A68     		ldr	r2, [r7, #4]
  63 0032 02F10102 		add	r2, r2, #1
  64 0036 6FF07041 		mvn	r1, #-268435456
  65 003a 43F82210 		str	r1, [r3, r2, lsl #2]
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1E->BWTR[FSMC_Bank] = 0x0FFFFFFF;  
  66              		.loc 1 132 0
  67 003e 4FF48273 		mov	r3, #260
  68 0042 CAF20003 		movt	r3, 40960
  69 0046 7A68     		ldr	r2, [r7, #4]
  70 0048 6FF07041 		mvn	r1, #-268435456
  71 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
  72              		.loc 1 133 0
  73 0050 07F10C07 		add	r7, r7, #12
  74 0054 BD46     		mov	sp, r7
  75 0056 80BC     		pop	{r7}
  76 0058 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE110:
  80 005a 00BF     		.section	.text.FSMC_NORSRAMInit,"ax",%progbits
  81              		.align	2
  82              		.global	FSMC_NORSRAMInit
  83              		.thumb
  84              		.thumb_func
  86              	FSMC_NORSRAMInit:
  87              	.LFB111:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC NOR/SRAM Banks according to the specified
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         parameters in the FSMC_NORSRAMInitStruct.
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct : pointer to a FSMC_NORSRAMInitTypeDef structure
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         that contains the configuration information for the FSMC NOR/SRAM 
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         specified Banks.                       
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** { 
  88              		.loc 1 144 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 8
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93 0000 80B4     		push	{r7}
  94              	.LCFI3:
  95              		.cfi_def_cfa_offset 4
  96              		.cfi_offset 7, -4
  97 0002 83B0     		sub	sp, sp, #12
  98              	.LCFI4:
  99              		.cfi_def_cfa_offset 16
 100 0004 00AF     		add	r7, sp, #0
 101              	.LCFI5:
 102              		.cfi_def_cfa_register 7
 103 0006 7860     		str	r0, [r7, #4]
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_NORSRAMInitStruct->FSMC_Bank));
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MUX(FSMC_NORSRAMInitStruct->FSMC_DataAddressMux));
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MEMORY(FSMC_NORSRAMInitStruct->FSMC_MemoryType));
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_MEMORY_WIDTH(FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth));
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_BURSTMODE(FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode));
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ASYNWAIT(FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait));
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_POLARITY(FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity));
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRAP_MODE(FSMC_NORSRAMInitStruct->FSMC_WrapMode));
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_SIGNAL_ACTIVE(FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive));
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRITE_OPERATION(FSMC_NORSRAMInitStruct->FSMC_WriteOperation));
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAITE_SIGNAL(FSMC_NORSRAMInitStruct->FSMC_WaitSignal));
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_EXTENDED_MODE(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode));
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WRITE_BURST(FSMC_NORSRAMInitStruct->FSMC_WriteBurst));  
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_A
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Data
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TURNAROUND_TIME(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_Bus
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLa
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessM
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM control register configuration */ 
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 104              		.loc 1 168 0
 105 0008 4FF02043 		mov	r3, #-1610612736
 106 000c 7A68     		ldr	r2, [r7, #4]
 107 000e 1268     		ldr	r2, [r2, #0]
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
 108              		.loc 1 169 0
 109 0010 7968     		ldr	r1, [r7, #4]
 110 0012 4868     		ldr	r0, [r1, #4]
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
 111              		.loc 1 170 0
 112 0014 7968     		ldr	r1, [r7, #4]
 113 0016 8968     		ldr	r1, [r1, #8]
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_DataAddressMux |
 114              		.loc 1 169 0
 115 0018 0843     		orrs	r0, r0, r1
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
 116              		.loc 1 171 0
 117 001a 7968     		ldr	r1, [r7, #4]
 118 001c C968     		ldr	r1, [r1, #12]
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryType |
 119              		.loc 1 170 0
 120 001e 0843     		orrs	r0, r0, r1
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
 121              		.loc 1 172 0
 122 0020 7968     		ldr	r1, [r7, #4]
 123 0022 0969     		ldr	r1, [r1, #16]
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth |
 124              		.loc 1 171 0
 125 0024 0843     		orrs	r0, r0, r1
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
 126              		.loc 1 173 0
 127 0026 7968     		ldr	r1, [r7, #4]
 128 0028 4969     		ldr	r1, [r1, #20]
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode |
 129              		.loc 1 172 0
 130 002a 0843     		orrs	r0, r0, r1
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
 131              		.loc 1 174 0
 132 002c 7968     		ldr	r1, [r7, #4]
 133 002e 8969     		ldr	r1, [r1, #24]
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait |
 134              		.loc 1 173 0
 135 0030 0843     		orrs	r0, r0, r1
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
 136              		.loc 1 175 0
 137 0032 7968     		ldr	r1, [r7, #4]
 138 0034 C969     		ldr	r1, [r1, #28]
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity |
 139              		.loc 1 174 0
 140 0036 0843     		orrs	r0, r0, r1
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 141              		.loc 1 176 0
 142 0038 7968     		ldr	r1, [r7, #4]
 143 003a 096A     		ldr	r1, [r1, #32]
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WrapMode |
 144              		.loc 1 175 0
 145 003c 0843     		orrs	r0, r0, r1
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 146              		.loc 1 177 0
 147 003e 7968     		ldr	r1, [r7, #4]
 148 0040 496A     		ldr	r1, [r1, #36]
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive |
 149              		.loc 1 176 0
 150 0042 0843     		orrs	r0, r0, r1
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 151              		.loc 1 178 0
 152 0044 7968     		ldr	r1, [r7, #4]
 153 0046 896A     		ldr	r1, [r1, #40]
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteOperation |
 154              		.loc 1 177 0
 155 0048 0843     		orrs	r0, r0, r1
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 156              		.loc 1 179 0
 157 004a 7968     		ldr	r1, [r7, #4]
 158 004c C96A     		ldr	r1, [r1, #44]
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WaitSignal |
 159              		.loc 1 178 0
 160 004e 0843     		orrs	r0, r0, r1
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_WriteBurst;
 161              		.loc 1 180 0
 162 0050 7968     		ldr	r1, [r7, #4]
 163 0052 096B     		ldr	r1, [r1, #48]
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NORSRAMInitStruct->FSMC_ExtendedMode |
 164              		.loc 1 179 0
 165 0054 0143     		orrs	r1, r1, r0
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 166              		.loc 1 168 0
 167 0056 43F82210 		str	r1, [r3, r2, lsl #2]
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_MemoryType == FSMC_MemoryType_NOR)
 168              		.loc 1 181 0
 169 005a 7B68     		ldr	r3, [r7, #4]
 170 005c 9B68     		ldr	r3, [r3, #8]
 171 005e 082B     		cmp	r3, #8
 172 0060 0DD1     		bne	.L5
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank] |= (uint32_t)BCR_FACCEN_SET;
 173              		.loc 1 183 0
 174 0062 4FF02043 		mov	r3, #-1610612736
 175 0066 7A68     		ldr	r2, [r7, #4]
 176 0068 1268     		ldr	r2, [r2, #0]
 177 006a 4FF02041 		mov	r1, #-1610612736
 178 006e 7868     		ldr	r0, [r7, #4]
 179 0070 0068     		ldr	r0, [r0, #0]
 180 0072 51F82010 		ldr	r1, [r1, r0, lsl #2]
 181 0076 41F04001 		orr	r1, r1, #64
 182 007a 43F82210 		str	r1, [r3, r2, lsl #2]
 183              	.L5:
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM timing register configuration */
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 184              		.loc 1 186 0
 185 007e 4FF02043 		mov	r3, #-1610612736
 186 0082 7A68     		ldr	r2, [r7, #4]
 187 0084 1268     		ldr	r2, [r2, #0]
 188 0086 02F10102 		add	r2, r2, #1
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 189              		.loc 1 187 0
 190 008a 7968     		ldr	r1, [r7, #4]
 191 008c 496B     		ldr	r1, [r1, #52]
 192 008e 0868     		ldr	r0, [r1, #0]
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 193              		.loc 1 188 0
 194 0090 7968     		ldr	r1, [r7, #4]
 195 0092 496B     		ldr	r1, [r1, #52]
 196 0094 4968     		ldr	r1, [r1, #4]
 197 0096 4FEA0111 		lsl	r1, r1, #4
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (uint32_t)FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime |
 198              		.loc 1 187 0
 199 009a 0843     		orrs	r0, r0, r1
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 200              		.loc 1 189 0
 201 009c 7968     		ldr	r1, [r7, #4]
 202 009e 496B     		ldr	r1, [r1, #52]
 203 00a0 8968     		ldr	r1, [r1, #8]
 204 00a2 4FEA0121 		lsl	r1, r1, #8
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime << 4) |
 205              		.loc 1 188 0
 206 00a6 0843     		orrs	r0, r0, r1
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 207              		.loc 1 190 0
 208 00a8 7968     		ldr	r1, [r7, #4]
 209 00aa 496B     		ldr	r1, [r1, #52]
 210 00ac C968     		ldr	r1, [r1, #12]
 211 00ae 4FEA0141 		lsl	r1, r1, #16
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime << 8) |
 212              		.loc 1 189 0
 213 00b2 0843     		orrs	r0, r0, r1
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 214              		.loc 1 191 0
 215 00b4 7968     		ldr	r1, [r7, #4]
 216 00b6 496B     		ldr	r1, [r1, #52]
 217 00b8 0969     		ldr	r1, [r1, #16]
 218 00ba 4FEA0151 		lsl	r1, r1, #20
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration << 16) 
 219              		.loc 1 190 0
 220 00be 0843     		orrs	r0, r0, r1
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 221              		.loc 1 192 0
 222 00c0 7968     		ldr	r1, [r7, #4]
 223 00c2 496B     		ldr	r1, [r1, #52]
 224 00c4 4969     		ldr	r1, [r1, #20]
 225 00c6 4FEA0161 		lsl	r1, r1, #24
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision << 20) |
 226              		.loc 1 191 0
 227 00ca 0843     		orrs	r0, r0, r1
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****              FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode;
 228              		.loc 1 193 0
 229 00cc 7968     		ldr	r1, [r7, #4]
 230 00ce 496B     		ldr	r1, [r1, #52]
 231 00d0 8969     		ldr	r1, [r1, #24]
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency << 24) |
 232              		.loc 1 192 0
 233 00d2 0143     		orrs	r1, r1, r0
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank1->BTCR[FSMC_NORSRAMInitStruct->FSMC_Bank+1] = 
 234              		.loc 1 186 0
 235 00d4 43F82210 		str	r1, [r3, r2, lsl #2]
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Bank1 NOR/SRAM timing register for write configuration, if extended mode is used */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NORSRAMInitStruct->FSMC_ExtendedMode == FSMC_ExtendedMode_Enable)
 236              		.loc 1 197 0
 237 00d8 7B68     		ldr	r3, [r7, #4]
 238 00da DB6A     		ldr	r3, [r3, #44]
 239 00dc B3F5804F 		cmp	r3, #16384
 240 00e0 27D1     		bne	.L6
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_SETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Ad
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ADDRESS_HOLD_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_Add
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_DATASETUP_TIME(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSe
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_CLK_DIV(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision))
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_DATA_LATENCY(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLate
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     assert_param(IS_FSMC_ACCESS_MODE(FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMod
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 241              		.loc 1 205 0
 242 00e2 4FF48273 		mov	r3, #260
 243 00e6 CAF20003 		movt	r3, 40960
 244 00ea 7A68     		ldr	r2, [r7, #4]
 245 00ec 1268     		ldr	r2, [r2, #0]
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 246              		.loc 1 206 0
 247 00ee 7968     		ldr	r1, [r7, #4]
 248 00f0 896B     		ldr	r1, [r1, #56]
 249 00f2 0868     		ldr	r0, [r1, #0]
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 250              		.loc 1 207 0
 251 00f4 7968     		ldr	r1, [r7, #4]
 252 00f6 896B     		ldr	r1, [r1, #56]
 253 00f8 4968     		ldr	r1, [r1, #4]
 254 00fa 4FEA0111 		lsl	r1, r1, #4
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (uint32_t)FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime |
 255              		.loc 1 206 0
 256 00fe 0843     		orrs	r0, r0, r1
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 257              		.loc 1 208 0
 258 0100 7968     		ldr	r1, [r7, #4]
 259 0102 896B     		ldr	r1, [r1, #56]
 260 0104 8968     		ldr	r1, [r1, #8]
 261 0106 4FEA0121 		lsl	r1, r1, #8
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime << 4 )|
 262              		.loc 1 207 0
 263 010a 0843     		orrs	r0, r0, r1
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 264              		.loc 1 209 0
 265 010c 7968     		ldr	r1, [r7, #4]
 266 010e 896B     		ldr	r1, [r1, #56]
 267 0110 0969     		ldr	r1, [r1, #16]
 268 0112 4FEA0151 		lsl	r1, r1, #20
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime << 8) |
 269              		.loc 1 208 0
 270 0116 0843     		orrs	r0, r0, r1
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 271              		.loc 1 210 0
 272 0118 7968     		ldr	r1, [r7, #4]
 273 011a 896B     		ldr	r1, [r1, #56]
 274 011c 4969     		ldr	r1, [r1, #20]
 275 011e 4FEA0161 		lsl	r1, r1, #24
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision << 20) |
 276              		.loc 1 209 0
 277 0122 0843     		orrs	r0, r0, r1
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode;
 278              		.loc 1 211 0
 279 0124 7968     		ldr	r1, [r7, #4]
 280 0126 896B     		ldr	r1, [r1, #56]
 281 0128 8969     		ldr	r1, [r1, #24]
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****               (FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency << 24) |
 282              		.loc 1 210 0
 283 012a 0143     		orrs	r1, r1, r0
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 
 284              		.loc 1 205 0
 285 012c 43F82210 		str	r1, [r3, r2, lsl #2]
 286 0130 09E0     		b	.L4
 287              	.L6:
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1E->BWTR[FSMC_NORSRAMInitStruct->FSMC_Bank] = 0x0FFFFFFF;
 288              		.loc 1 215 0
 289 0132 4FF48273 		mov	r3, #260
 290 0136 CAF20003 		movt	r3, 40960
 291 013a 7A68     		ldr	r2, [r7, #4]
 292 013c 1268     		ldr	r2, [r2, #0]
 293 013e 6FF07041 		mvn	r1, #-268435456
 294 0142 43F82210 		str	r1, [r3, r2, lsl #2]
 295              	.L4:
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 296              		.loc 1 217 0
 297 0146 07F10C07 		add	r7, r7, #12
 298 014a BD46     		mov	sp, r7
 299 014c 80BC     		pop	{r7}
 300 014e 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE111:
 304              		.section	.text.FSMC_NORSRAMStructInit,"ax",%progbits
 305              		.align	2
 306              		.global	FSMC_NORSRAMStructInit
 307              		.thumb
 308              		.thumb_func
 310              	FSMC_NORSRAMStructInit:
 311              	.LFB112:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_NORSRAMInitStruct member with its default value.
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NORSRAMInitStruct: pointer to a FSMC_NORSRAMInitTypeDef structure 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         which will be initialized.
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMStructInit(FSMC_NORSRAMInitTypeDef* FSMC_NORSRAMInitStruct)
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {  
 312              		.loc 1 226 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 83B0     		sub	sp, sp, #12
 322              	.LCFI7:
 323              		.cfi_def_cfa_offset 16
 324 0004 00AF     		add	r7, sp, #0
 325              	.LCFI8:
 326              		.cfi_def_cfa_register 7
 327 0006 7860     		str	r0, [r7, #4]
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset NOR/SRAM Init structure parameters values */
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_Bank = FSMC_Bank1_NORSRAM1;
 328              		.loc 1 228 0
 329 0008 7B68     		ldr	r3, [r7, #4]
 330 000a 4FF00002 		mov	r2, #0
 331 000e 1A60     		str	r2, [r3, #0]
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_DataAddressMux = FSMC_DataAddressMux_Enable;
 332              		.loc 1 229 0
 333 0010 7B68     		ldr	r3, [r7, #4]
 334 0012 4FF00202 		mov	r2, #2
 335 0016 5A60     		str	r2, [r3, #4]
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryType = FSMC_MemoryType_SRAM;
 336              		.loc 1 230 0
 337 0018 7B68     		ldr	r3, [r7, #4]
 338 001a 4FF00002 		mov	r2, #0
 339 001e 9A60     		str	r2, [r3, #8]
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 340              		.loc 1 231 0
 341 0020 7B68     		ldr	r3, [r7, #4]
 342 0022 4FF00002 		mov	r2, #0
 343 0026 DA60     		str	r2, [r3, #12]
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_BurstAccessMode = FSMC_BurstAccessMode_Disable;
 344              		.loc 1 232 0
 345 0028 7B68     		ldr	r3, [r7, #4]
 346 002a 4FF00002 		mov	r2, #0
 347 002e 1A61     		str	r2, [r3, #16]
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_AsynchronousWait = FSMC_AsynchronousWait_Disable;
 348              		.loc 1 233 0
 349 0030 7B68     		ldr	r3, [r7, #4]
 350 0032 4FF00002 		mov	r2, #0
 351 0036 5A61     		str	r2, [r3, #20]
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalPolarity = FSMC_WaitSignalPolarity_Low;
 352              		.loc 1 234 0
 353 0038 7B68     		ldr	r3, [r7, #4]
 354 003a 4FF00002 		mov	r2, #0
 355 003e 9A61     		str	r2, [r3, #24]
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WrapMode = FSMC_WrapMode_Disable;
 356              		.loc 1 235 0
 357 0040 7B68     		ldr	r3, [r7, #4]
 358 0042 4FF00002 		mov	r2, #0
 359 0046 DA61     		str	r2, [r3, #28]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignalActive = FSMC_WaitSignalActive_BeforeWaitState;
 360              		.loc 1 236 0
 361 0048 7B68     		ldr	r3, [r7, #4]
 362 004a 4FF00002 		mov	r2, #0
 363 004e 1A62     		str	r2, [r3, #32]
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteOperation = FSMC_WriteOperation_Enable;
 364              		.loc 1 237 0
 365 0050 7B68     		ldr	r3, [r7, #4]
 366 0052 4FF48052 		mov	r2, #4096
 367 0056 5A62     		str	r2, [r3, #36]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WaitSignal = FSMC_WaitSignal_Enable;
 368              		.loc 1 238 0
 369 0058 7B68     		ldr	r3, [r7, #4]
 370 005a 4FF40052 		mov	r2, #8192
 371 005e 9A62     		str	r2, [r3, #40]
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ExtendedMode = FSMC_ExtendedMode_Disable;
 372              		.loc 1 239 0
 373 0060 7B68     		ldr	r3, [r7, #4]
 374 0062 4FF00002 		mov	r2, #0
 375 0066 DA62     		str	r2, [r3, #44]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteBurst = FSMC_WriteBurst_Disable;
 376              		.loc 1 240 0
 377 0068 7B68     		ldr	r3, [r7, #4]
 378 006a 4FF00002 		mov	r2, #0
 379 006e 1A63     		str	r2, [r3, #48]
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 380              		.loc 1 241 0
 381 0070 7B68     		ldr	r3, [r7, #4]
 382 0072 5B6B     		ldr	r3, [r3, #52]
 383 0074 4FF00F02 		mov	r2, #15
 384 0078 1A60     		str	r2, [r3, #0]
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 385              		.loc 1 242 0
 386 007a 7B68     		ldr	r3, [r7, #4]
 387 007c 5B6B     		ldr	r3, [r3, #52]
 388 007e 4FF00F02 		mov	r2, #15
 389 0082 5A60     		str	r2, [r3, #4]
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 390              		.loc 1 243 0
 391 0084 7B68     		ldr	r3, [r7, #4]
 392 0086 5B6B     		ldr	r3, [r3, #52]
 393 0088 4FF0FF02 		mov	r2, #255
 394 008c 9A60     		str	r2, [r3, #8]
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 395              		.loc 1 244 0
 396 008e 7B68     		ldr	r3, [r7, #4]
 397 0090 5B6B     		ldr	r3, [r3, #52]
 398 0092 4FF00F02 		mov	r2, #15
 399 0096 DA60     		str	r2, [r3, #12]
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_CLKDivision = 0xF;
 400              		.loc 1 245 0
 401 0098 7B68     		ldr	r3, [r7, #4]
 402 009a 5B6B     		ldr	r3, [r3, #52]
 403 009c 4FF00F02 		mov	r2, #15
 404 00a0 1A61     		str	r2, [r3, #16]
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_DataLatency = 0xF;
 405              		.loc 1 246 0
 406 00a2 7B68     		ldr	r3, [r7, #4]
 407 00a4 5B6B     		ldr	r3, [r3, #52]
 408 00a6 4FF00F02 		mov	r2, #15
 409 00aa 5A61     		str	r2, [r3, #20]
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_ReadWriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A; 
 410              		.loc 1 247 0
 411 00ac 7B68     		ldr	r3, [r7, #4]
 412 00ae 5B6B     		ldr	r3, [r3, #52]
 413 00b0 4FF00002 		mov	r2, #0
 414 00b4 9A61     		str	r2, [r3, #24]
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressSetupTime = 0xF;
 415              		.loc 1 248 0
 416 00b6 7B68     		ldr	r3, [r7, #4]
 417 00b8 9B6B     		ldr	r3, [r3, #56]
 418 00ba 4FF00F02 		mov	r2, #15
 419 00be 1A60     		str	r2, [r3, #0]
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AddressHoldTime = 0xF;
 420              		.loc 1 249 0
 421 00c0 7B68     		ldr	r3, [r7, #4]
 422 00c2 9B6B     		ldr	r3, [r3, #56]
 423 00c4 4FF00F02 		mov	r2, #15
 424 00c8 5A60     		str	r2, [r3, #4]
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataSetupTime = 0xFF;
 425              		.loc 1 250 0
 426 00ca 7B68     		ldr	r3, [r7, #4]
 427 00cc 9B6B     		ldr	r3, [r3, #56]
 428 00ce 4FF0FF02 		mov	r2, #255
 429 00d2 9A60     		str	r2, [r3, #8]
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_BusTurnAroundDuration = 0xF;
 430              		.loc 1 251 0
 431 00d4 7B68     		ldr	r3, [r7, #4]
 432 00d6 9B6B     		ldr	r3, [r3, #56]
 433 00d8 4FF00F02 		mov	r2, #15
 434 00dc DA60     		str	r2, [r3, #12]
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_CLKDivision = 0xF;
 435              		.loc 1 252 0
 436 00de 7B68     		ldr	r3, [r7, #4]
 437 00e0 9B6B     		ldr	r3, [r3, #56]
 438 00e2 4FF00F02 		mov	r2, #15
 439 00e6 1A61     		str	r2, [r3, #16]
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_DataLatency = 0xF;
 440              		.loc 1 253 0
 441 00e8 7B68     		ldr	r3, [r7, #4]
 442 00ea 9B6B     		ldr	r3, [r3, #56]
 443 00ec 4FF00F02 		mov	r2, #15
 444 00f0 5A61     		str	r2, [r3, #20]
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NORSRAMInitStruct->FSMC_WriteTimingStruct->FSMC_AccessMode = FSMC_AccessMode_A;
 445              		.loc 1 254 0
 446 00f2 7B68     		ldr	r3, [r7, #4]
 447 00f4 9B6B     		ldr	r3, [r3, #56]
 448 00f6 4FF00002 		mov	r2, #0
 449 00fa 9A61     		str	r2, [r3, #24]
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 450              		.loc 1 255 0
 451 00fc 07F10C07 		add	r7, r7, #12
 452 0100 BD46     		mov	sp, r7
 453 0102 80BC     		pop	{r7}
 454 0104 7047     		bx	lr
 455              		.cfi_endproc
 456              	.LFE112:
 458 0106 00BF     		.section	.text.FSMC_NORSRAMCmd,"ax",%progbits
 459              		.align	2
 460              		.global	FSMC_NORSRAMCmd
 461              		.thumb
 462              		.thumb_func
 464              	FSMC_NORSRAMCmd:
 465              	.LFB113:
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified NOR/SRAM Memory Bank.
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM1: FSMC Bank1 NOR/SRAM1  
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM2: FSMC Bank1 NOR/SRAM2 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM3: FSMC Bank1 NOR/SRAM3 
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank1_NORSRAM4: FSMC Bank1 NOR/SRAM4 
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NORSRAMCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 466              		.loc 1 269 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471 0000 80B4     		push	{r7}
 472              	.LCFI9:
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 83B0     		sub	sp, sp, #12
 476              	.LCFI10:
 477              		.cfi_def_cfa_offset 16
 478 0004 00AF     		add	r7, sp, #0
 479              	.LCFI11:
 480              		.cfi_def_cfa_register 7
 481 0006 7860     		str	r0, [r7, #4]
 482 0008 0B46     		mov	r3, r1
 483 000a FB70     		strb	r3, [r7, #3]
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NORSRAM_BANK(FSMC_Bank));
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 484              		.loc 1 273 0
 485 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 486 000e 002B     		cmp	r3, #0
 487 0010 0CD0     		beq	.L10
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NOR/SRAM Bank by setting the PBKEN bit in the BCRx register */
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] |= BCR_MBKEN_SET;
 488              		.loc 1 276 0
 489 0012 4FF02043 		mov	r3, #-1610612736
 490 0016 4FF02042 		mov	r2, #-1610612736
 491 001a 7968     		ldr	r1, [r7, #4]
 492 001c 52F82120 		ldr	r2, [r2, r1, lsl #2]
 493 0020 42F00101 		orr	r1, r2, #1
 494 0024 7A68     		ldr	r2, [r7, #4]
 495 0026 43F82210 		str	r1, [r3, r2, lsl #2]
 496 002a 0FE0     		b	.L9
 497              	.L10:
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NOR/SRAM Bank by clearing the PBKEN bit in the BCRx register */
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank1->BTCR[FSMC_Bank] &= BCR_MBKEN_RESET;
 498              		.loc 1 281 0
 499 002c 4FF02042 		mov	r2, #-1610612736
 500 0030 4FF02043 		mov	r3, #-1610612736
 501 0034 7968     		ldr	r1, [r7, #4]
 502 0036 53F82130 		ldr	r3, [r3, r1, lsl #2]
 503 003a 1946     		mov	r1, r3
 504 003c 4FF6FE73 		movw	r3, #65534
 505 0040 C0F20F03 		movt	r3, 15
 506 0044 0B40     		ands	r3, r3, r1
 507 0046 7968     		ldr	r1, [r7, #4]
 508 0048 42F82130 		str	r3, [r2, r1, lsl #2]
 509              	.L9:
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 510              		.loc 1 283 0
 511 004c 07F10C07 		add	r7, r7, #12
 512 0050 BD46     		mov	sp, r7
 513 0052 80BC     		pop	{r7}
 514 0054 7047     		bx	lr
 515              		.cfi_endproc
 516              	.LFE113:
 518 0056 00BF     		.section	.text.FSMC_NANDDeInit,"ax",%progbits
 519              		.align	2
 520              		.global	FSMC_NANDDeInit
 521              		.thumb
 522              		.thumb_func
 524              	FSMC_NANDDeInit:
 525              	.LFB114:
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group2 NAND Controller functions
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   NAND Controller functions 
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     NAND Controller functions
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  8-bit or 16-bit NAND memory connected to the NAND Bank:
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_NANDInitTypeDef structure, for example:
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDInitTypeDef  FSMC_NANDInitStructure;
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_NANDInitStructure variable with the allowed values of
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the NAND Controller by calling the function
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDInit(&FSMC_NANDInitStructure); 
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the NAND Bank, for example:
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDCmd(FSMC_Bank3_NAND, ENABLE);  
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the NAND Bank. 
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @note To enable the Error Correction Code (ECC), you have to use the function
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_NANDECCCmd(FSMC_Bank3_NAND, ENABLE);  
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and to get the current ECC value you have to use the function
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           ECCval = FSMC_GetECC(FSMC_Bank3_NAND); 
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC NAND Banks registers to their default reset values.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND 
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDDeInit(uint32_t FSMC_Bank)
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 526              		.loc 1 340 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 8
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531 0000 80B4     		push	{r7}
 532              	.LCFI12:
 533              		.cfi_def_cfa_offset 4
 534              		.cfi_offset 7, -4
 535 0002 83B0     		sub	sp, sp, #12
 536              	.LCFI13:
 537              		.cfi_def_cfa_offset 16
 538 0004 00AF     		add	r7, sp, #0
 539              	.LCFI14:
 540              		.cfi_def_cfa_register 7
 541 0006 7860     		str	r0, [r7, #4]
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameter */
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 542              		.loc 1 344 0
 543 0008 7B68     		ldr	r3, [r7, #4]
 544 000a 102B     		cmp	r3, #16
 545 000c 1CD1     		bne	.L13
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Set the FSMC_Bank2 registers to their reset values */
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PCR2 = 0x00000018;
 546              		.loc 1 347 0
 547 000e 4FF06003 		mov	r3, #96
 548 0012 CAF20003 		movt	r3, 40960
 549 0016 4FF01802 		mov	r2, #24
 550 001a 1A60     		str	r2, [r3, #0]
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 = 0x00000040;
 551              		.loc 1 348 0
 552 001c 4FF06003 		mov	r3, #96
 553 0020 CAF20003 		movt	r3, 40960
 554 0024 4FF04002 		mov	r2, #64
 555 0028 5A60     		str	r2, [r3, #4]
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PMEM2 = 0xFCFCFCFC;
 556              		.loc 1 349 0
 557 002a 4FF06003 		mov	r3, #96
 558 002e CAF20003 		movt	r3, 40960
 559 0032 4FF0FC32 		mov	r2, #-50529028
 560 0036 9A60     		str	r2, [r3, #8]
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PATT2 = 0xFCFCFCFC;  
 561              		.loc 1 350 0
 562 0038 4FF06003 		mov	r3, #96
 563 003c CAF20003 		movt	r3, 40960
 564 0040 4FF0FC32 		mov	r2, #-50529028
 565 0044 DA60     		str	r2, [r3, #12]
 566 0046 1BE0     		b	.L12
 567              	.L13:
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank3_NAND */  
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Set the FSMC_Bank3 registers to their reset values */
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PCR3 = 0x00000018;
 568              		.loc 1 356 0
 569 0048 4FF08003 		mov	r3, #128
 570 004c CAF20003 		movt	r3, 40960
 571 0050 4FF01802 		mov	r2, #24
 572 0054 1A60     		str	r2, [r3, #0]
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 = 0x00000040;
 573              		.loc 1 357 0
 574 0056 4FF08003 		mov	r3, #128
 575 005a CAF20003 		movt	r3, 40960
 576 005e 4FF04002 		mov	r2, #64
 577 0062 5A60     		str	r2, [r3, #4]
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PMEM3 = 0xFCFCFCFC;
 578              		.loc 1 358 0
 579 0064 4FF08003 		mov	r3, #128
 580 0068 CAF20003 		movt	r3, 40960
 581 006c 4FF0FC32 		mov	r2, #-50529028
 582 0070 9A60     		str	r2, [r3, #8]
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PATT3 = 0xFCFCFCFC; 
 583              		.loc 1 359 0
 584 0072 4FF08003 		mov	r3, #128
 585 0076 CAF20003 		movt	r3, 40960
 586 007a 4FF0FC32 		mov	r2, #-50529028
 587 007e DA60     		str	r2, [r3, #12]
 588              	.L12:
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 589              		.loc 1 361 0
 590 0080 07F10C07 		add	r7, r7, #12
 591 0084 BD46     		mov	sp, r7
 592 0086 80BC     		pop	{r7}
 593 0088 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE114:
 597 008a 00BF     		.section	.text.FSMC_NANDInit,"ax",%progbits
 598              		.align	2
 599              		.global	FSMC_NANDInit
 600              		.thumb
 601              		.thumb_func
 603              	FSMC_NANDInit:
 604              	.LFB115:
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC NAND Banks according to the specified parameters
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         in the FSMC_NANDInitStruct.
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NANDInitStruct : pointer to a FSMC_NANDInitTypeDef structure that
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         contains the configuration information for the FSMC NAND specified Banks.              
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 605              		.loc 1 371 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 24
 608              		@ frame_needed = 1, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610 0000 80B4     		push	{r7}
 611              	.LCFI15:
 612              		.cfi_def_cfa_offset 4
 613              		.cfi_offset 7, -4
 614 0002 87B0     		sub	sp, sp, #28
 615              	.LCFI16:
 616              		.cfi_def_cfa_offset 32
 617 0004 00AF     		add	r7, sp, #0
 618              	.LCFI17:
 619              		.cfi_def_cfa_register 7
 620 0006 7860     		str	r0, [r7, #4]
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmppcr = 0x00000000, tmppmem = 0x00000000, tmppatt = 0x00000000; 
 621              		.loc 1 372 0
 622 0008 4FF00003 		mov	r3, #0
 623 000c 7B61     		str	r3, [r7, #20]
 624 000e 4FF00003 		mov	r3, #0
 625 0012 3B61     		str	r3, [r7, #16]
 626 0014 4FF00003 		mov	r3, #0
 627 0018 FB60     		str	r3, [r7, #12]
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_NAND_BANK(FSMC_NANDInitStruct->FSMC_Bank));
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_WAIT_FEATURE(FSMC_NANDInitStruct->FSMC_Waitfeature));
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_MEMORY_WIDTH(FSMC_NANDInitStruct->FSMC_MemoryDataWidth));
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_ECC_STATE(FSMC_NANDInitStruct->FSMC_ECC));
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_ECCPAGE_SIZE(FSMC_NANDInitStruct->FSMC_ECCPageSize));
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_TCLR_TIME(FSMC_NANDInitStruct->FSMC_TCLRSetupTime));
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param( IS_FSMC_TAR_TIME(FSMC_NANDInitStruct->FSMC_TARSetupTime));
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupT
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupT
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTim
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSet
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSet
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetup
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the tmppcr value according to FSMC_NANDInitStruct parameters */
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 628              		.loc 1 392 0
 629 001a 7B68     		ldr	r3, [r7, #4]
 630 001c 5A68     		ldr	r2, [r3, #4]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             PCR_MEMORYTYPE_NAND |
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 631              		.loc 1 394 0
 632 001e 7B68     		ldr	r3, [r7, #4]
 633 0020 9B68     		ldr	r3, [r3, #8]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             PCR_MEMORYTYPE_NAND |
 634              		.loc 1 393 0
 635 0022 1A43     		orrs	r2, r2, r3
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 636              		.loc 1 395 0
 637 0024 7B68     		ldr	r3, [r7, #4]
 638 0026 DB68     		ldr	r3, [r3, #12]
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_MemoryDataWidth |
 639              		.loc 1 394 0
 640 0028 1A43     		orrs	r2, r2, r3
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 641              		.loc 1 396 0
 642 002a 7B68     		ldr	r3, [r7, #4]
 643 002c 1B69     		ldr	r3, [r3, #16]
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECC |
 644              		.loc 1 395 0
 645 002e 1A43     		orrs	r2, r2, r3
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 646              		.loc 1 397 0
 647 0030 7B68     		ldr	r3, [r7, #4]
 648 0032 5B69     		ldr	r3, [r3, #20]
 649 0034 4FEA4323 		lsl	r3, r3, #9
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             FSMC_NANDInitStruct->FSMC_ECCPageSize |
 650              		.loc 1 396 0
 651 0038 1A43     		orrs	r2, r2, r3
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TARSetupTime << 13);
 652              		.loc 1 398 0
 653 003a 7B68     		ldr	r3, [r7, #4]
 654 003c 9B69     		ldr	r3, [r3, #24]
 655 003e 4FEA4333 		lsl	r3, r3, #13
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_TCLRSetupTime << 9 )|
 656              		.loc 1 397 0
 657 0042 1343     		orrs	r3, r3, r2
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppcr = (uint32_t)FSMC_NANDInitStruct->FSMC_Waitfeature |
 658              		.loc 1 392 0
 659 0044 43F00803 		orr	r3, r3, #8
 660 0048 7B61     		str	r3, [r7, #20]
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set tmppmem value according to FSMC_CommonSpaceTimingStructure parameters */
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 661              		.loc 1 401 0
 662 004a 7B68     		ldr	r3, [r7, #4]
 663 004c DB69     		ldr	r3, [r3, #28]
 664 004e 1A68     		ldr	r2, [r3, #0]
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 665              		.loc 1 402 0
 666 0050 7B68     		ldr	r3, [r7, #4]
 667 0052 DB69     		ldr	r3, [r3, #28]
 668 0054 5B68     		ldr	r3, [r3, #4]
 669 0056 4FEA0323 		lsl	r3, r3, #8
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 670              		.loc 1 401 0
 671 005a 1A43     		orrs	r2, r2, r3
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 672              		.loc 1 403 0
 673 005c 7B68     		ldr	r3, [r7, #4]
 674 005e DB69     		ldr	r3, [r3, #28]
 675 0060 9B68     		ldr	r3, [r3, #8]
 676 0062 4FEA0343 		lsl	r3, r3, #16
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 677              		.loc 1 402 0
 678 0066 1A43     		orrs	r2, r2, r3
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24); 
 679              		.loc 1 404 0
 680 0068 7B68     		ldr	r3, [r7, #4]
 681 006a DB69     		ldr	r3, [r3, #28]
 682 006c DB68     		ldr	r3, [r3, #12]
 683 006e 4FEA0363 		lsl	r3, r3, #24
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppmem = (uint32_t)FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime |
 684              		.loc 1 401 0
 685 0072 1343     		orrs	r3, r3, r2
 686 0074 3B61     		str	r3, [r7, #16]
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set tmppatt value according to FSMC_AttributeSpaceTimingStructure parameters */
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 687              		.loc 1 407 0
 688 0076 7B68     		ldr	r3, [r7, #4]
 689 0078 1B6A     		ldr	r3, [r3, #32]
 690 007a 1A68     		ldr	r2, [r3, #0]
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 691              		.loc 1 408 0
 692 007c 7B68     		ldr	r3, [r7, #4]
 693 007e 1B6A     		ldr	r3, [r3, #32]
 694 0080 5B68     		ldr	r3, [r3, #4]
 695 0082 4FEA0323 		lsl	r3, r3, #8
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 696              		.loc 1 407 0
 697 0086 1A43     		orrs	r2, r2, r3
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 698              		.loc 1 409 0
 699 0088 7B68     		ldr	r3, [r7, #4]
 700 008a 1B6A     		ldr	r3, [r3, #32]
 701 008c 9B68     		ldr	r3, [r3, #8]
 702 008e 4FEA0343 		lsl	r3, r3, #16
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 703              		.loc 1 408 0
 704 0092 1A43     		orrs	r2, r2, r3
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             (FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime << 24);
 705              		.loc 1 410 0
 706 0094 7B68     		ldr	r3, [r7, #4]
 707 0096 1B6A     		ldr	r3, [r3, #32]
 708 0098 DB68     		ldr	r3, [r3, #12]
 709 009a 4FEA0363 		lsl	r3, r3, #24
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   tmppatt = (uint32_t)FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime |
 710              		.loc 1 407 0
 711 009e 1343     		orrs	r3, r3, r2
 712 00a0 FB60     		str	r3, [r7, #12]
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_NANDInitStruct->FSMC_Bank == FSMC_Bank2_NAND)
 713              		.loc 1 412 0
 714 00a2 7B68     		ldr	r3, [r7, #4]
 715 00a4 1B68     		ldr	r3, [r3, #0]
 716 00a6 102B     		cmp	r3, #16
 717 00a8 12D1     		bne	.L16
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* FSMC_Bank2_NAND registers configuration */
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PCR2 = tmppcr;
 718              		.loc 1 415 0
 719 00aa 4FF06003 		mov	r3, #96
 720 00ae CAF20003 		movt	r3, 40960
 721 00b2 7A69     		ldr	r2, [r7, #20]
 722 00b4 1A60     		str	r2, [r3, #0]
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PMEM2 = tmppmem;
 723              		.loc 1 416 0
 724 00b6 4FF06003 		mov	r3, #96
 725 00ba CAF20003 		movt	r3, 40960
 726 00be 3A69     		ldr	r2, [r7, #16]
 727 00c0 9A60     		str	r2, [r3, #8]
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->PATT2 = tmppatt;
 728              		.loc 1 417 0
 729 00c2 4FF06003 		mov	r3, #96
 730 00c6 CAF20003 		movt	r3, 40960
 731 00ca FA68     		ldr	r2, [r7, #12]
 732 00cc DA60     		str	r2, [r3, #12]
 733 00ce 11E0     		b	.L15
 734              	.L16:
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* FSMC_Bank3_NAND registers configuration */
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PCR3 = tmppcr;
 735              		.loc 1 422 0
 736 00d0 4FF08003 		mov	r3, #128
 737 00d4 CAF20003 		movt	r3, 40960
 738 00d8 7A69     		ldr	r2, [r7, #20]
 739 00da 1A60     		str	r2, [r3, #0]
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PMEM3 = tmppmem;
 740              		.loc 1 423 0
 741 00dc 4FF08003 		mov	r3, #128
 742 00e0 CAF20003 		movt	r3, 40960
 743 00e4 3A69     		ldr	r2, [r7, #16]
 744 00e6 9A60     		str	r2, [r3, #8]
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->PATT3 = tmppatt;
 745              		.loc 1 424 0
 746 00e8 4FF08003 		mov	r3, #128
 747 00ec CAF20003 		movt	r3, 40960
 748 00f0 FA68     		ldr	r2, [r7, #12]
 749 00f2 DA60     		str	r2, [r3, #12]
 750              	.L15:
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 751              		.loc 1 426 0
 752 00f4 07F11C07 		add	r7, r7, #28
 753 00f8 BD46     		mov	sp, r7
 754 00fa 80BC     		pop	{r7}
 755 00fc 7047     		bx	lr
 756              		.cfi_endproc
 757              	.LFE115:
 759 00fe 00BF     		.section	.text.FSMC_NANDStructInit,"ax",%progbits
 760              		.align	2
 761              		.global	FSMC_NANDStructInit
 762              		.thumb
 763              		.thumb_func
 765              	FSMC_NANDStructInit:
 766              	.LFB116:
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_NANDInitStruct member with its default value.
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_NANDInitStruct: pointer to a FSMC_NANDInitTypeDef structure which
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         will be initialized.
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDStructInit(FSMC_NANDInitTypeDef* FSMC_NANDInitStruct)
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** { 
 767              		.loc 1 436 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 8
 770              		@ frame_needed = 1, uses_anonymous_args = 0
 771              		@ link register save eliminated.
 772 0000 80B4     		push	{r7}
 773              	.LCFI18:
 774              		.cfi_def_cfa_offset 4
 775              		.cfi_offset 7, -4
 776 0002 83B0     		sub	sp, sp, #12
 777              	.LCFI19:
 778              		.cfi_def_cfa_offset 16
 779 0004 00AF     		add	r7, sp, #0
 780              	.LCFI20:
 781              		.cfi_def_cfa_register 7
 782 0006 7860     		str	r0, [r7, #4]
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset NAND Init structure parameters values */
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Bank = FSMC_Bank2_NAND;
 783              		.loc 1 438 0
 784 0008 7B68     		ldr	r3, [r7, #4]
 785 000a 4FF01002 		mov	r2, #16
 786 000e 1A60     		str	r2, [r3, #0]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 787              		.loc 1 439 0
 788 0010 7B68     		ldr	r3, [r7, #4]
 789 0012 4FF00002 		mov	r2, #0
 790 0016 5A60     		str	r2, [r3, #4]
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_MemoryDataWidth = FSMC_MemoryDataWidth_8b;
 791              		.loc 1 440 0
 792 0018 7B68     		ldr	r3, [r7, #4]
 793 001a 4FF00002 		mov	r2, #0
 794 001e 9A60     		str	r2, [r3, #8]
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECC = FSMC_ECC_Disable;
 795              		.loc 1 441 0
 796 0020 7B68     		ldr	r3, [r7, #4]
 797 0022 4FF00002 		mov	r2, #0
 798 0026 DA60     		str	r2, [r3, #12]
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_ECCPageSize = FSMC_ECCPageSize_256Bytes;
 799              		.loc 1 442 0
 800 0028 7B68     		ldr	r3, [r7, #4]
 801 002a 4FF00002 		mov	r2, #0
 802 002e 1A61     		str	r2, [r3, #16]
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TCLRSetupTime = 0x0;
 803              		.loc 1 443 0
 804 0030 7B68     		ldr	r3, [r7, #4]
 805 0032 4FF00002 		mov	r2, #0
 806 0036 5A61     		str	r2, [r3, #20]
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_TARSetupTime = 0x0;
 807              		.loc 1 444 0
 808 0038 7B68     		ldr	r3, [r7, #4]
 809 003a 4FF00002 		mov	r2, #0
 810 003e 9A61     		str	r2, [r3, #24]
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 811              		.loc 1 445 0
 812 0040 7B68     		ldr	r3, [r7, #4]
 813 0042 DB69     		ldr	r3, [r3, #28]
 814 0044 4FF0FC02 		mov	r2, #252
 815 0048 1A60     		str	r2, [r3, #0]
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 816              		.loc 1 446 0
 817 004a 7B68     		ldr	r3, [r7, #4]
 818 004c DB69     		ldr	r3, [r3, #28]
 819 004e 4FF0FC02 		mov	r2, #252
 820 0052 5A60     		str	r2, [r3, #4]
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 821              		.loc 1 447 0
 822 0054 7B68     		ldr	r3, [r7, #4]
 823 0056 DB69     		ldr	r3, [r3, #28]
 824 0058 4FF0FC02 		mov	r2, #252
 825 005c 9A60     		str	r2, [r3, #8]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 826              		.loc 1 448 0
 827 005e 7B68     		ldr	r3, [r7, #4]
 828 0060 DB69     		ldr	r3, [r3, #28]
 829 0062 4FF0FC02 		mov	r2, #252
 830 0066 DA60     		str	r2, [r3, #12]
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 831              		.loc 1 449 0
 832 0068 7B68     		ldr	r3, [r7, #4]
 833 006a 1B6A     		ldr	r3, [r3, #32]
 834 006c 4FF0FC02 		mov	r2, #252
 835 0070 1A60     		str	r2, [r3, #0]
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 836              		.loc 1 450 0
 837 0072 7B68     		ldr	r3, [r7, #4]
 838 0074 1B6A     		ldr	r3, [r3, #32]
 839 0076 4FF0FC02 		mov	r2, #252
 840 007a 5A60     		str	r2, [r3, #4]
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 841              		.loc 1 451 0
 842 007c 7B68     		ldr	r3, [r7, #4]
 843 007e 1B6A     		ldr	r3, [r3, #32]
 844 0080 4FF0FC02 		mov	r2, #252
 845 0084 9A60     		str	r2, [r3, #8]
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_NANDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	  
 846              		.loc 1 452 0
 847 0086 7B68     		ldr	r3, [r7, #4]
 848 0088 1B6A     		ldr	r3, [r3, #32]
 849 008a 4FF0FC02 		mov	r2, #252
 850 008e DA60     		str	r2, [r3, #12]
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 851              		.loc 1 453 0
 852 0090 07F10C07 		add	r7, r7, #12
 853 0094 BD46     		mov	sp, r7
 854 0096 80BC     		pop	{r7}
 855 0098 7047     		bx	lr
 856              		.cfi_endproc
 857              	.LFE116:
 859 009a 00BF     		.section	.text.FSMC_NANDCmd,"ax",%progbits
 860              		.align	2
 861              		.global	FSMC_NANDCmd
 862              		.thumb
 863              		.thumb_func
 865              	FSMC_NANDCmd:
 866              	.LFB117:
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified NAND Memory Bank.
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC_Bank. This parameter can be: ENABLE or DISABLE.
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 867              		.loc 1 465 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 8
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872 0000 80B4     		push	{r7}
 873              	.LCFI21:
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 0002 83B0     		sub	sp, sp, #12
 877              	.LCFI22:
 878              		.cfi_def_cfa_offset 16
 879 0004 00AF     		add	r7, sp, #0
 880              	.LCFI23:
 881              		.cfi_def_cfa_register 7
 882 0006 7860     		str	r0, [r7, #4]
 883 0008 0B46     		mov	r3, r1
 884 000a FB70     		strb	r3, [r7, #3]
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 885              		.loc 1 469 0
 886 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 887 000e 002B     		cmp	r3, #0
 888 0010 1CD0     		beq	.L20
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NAND Bank by setting the PBKEN bit in the PCRx register */
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 889              		.loc 1 472 0
 890 0012 7B68     		ldr	r3, [r7, #4]
 891 0014 102B     		cmp	r3, #16
 892 0016 0CD1     		bne	.L21
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_PBKEN_SET;
 893              		.loc 1 474 0
 894 0018 4FF06003 		mov	r3, #96
 895 001c CAF20003 		movt	r3, 40960
 896 0020 4FF06002 		mov	r2, #96
 897 0024 CAF20002 		movt	r2, 40960
 898 0028 1268     		ldr	r2, [r2, #0]
 899 002a 42F00402 		orr	r2, r2, #4
 900 002e 1A60     		str	r2, [r3, #0]
 901 0030 30E0     		b	.L19
 902              	.L21:
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_PBKEN_SET;
 903              		.loc 1 478 0
 904 0032 4FF08003 		mov	r3, #128
 905 0036 CAF20003 		movt	r3, 40960
 906 003a 4FF08002 		mov	r2, #128
 907 003e CAF20002 		movt	r2, 40960
 908 0042 1268     		ldr	r2, [r2, #0]
 909 0044 42F00402 		orr	r2, r2, #4
 910 0048 1A60     		str	r2, [r3, #0]
 911 004a 23E0     		b	.L19
 912              	.L20:
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NAND Bank by clearing the PBKEN bit in the PCRx register */
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 913              		.loc 1 484 0
 914 004c 7B68     		ldr	r3, [r7, #4]
 915 004e 102B     		cmp	r3, #16
 916 0050 10D1     		bne	.L23
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_PBKEN_RESET;
 917              		.loc 1 486 0
 918 0052 4FF06002 		mov	r2, #96
 919 0056 CAF20002 		movt	r2, 40960
 920 005a 4FF06003 		mov	r3, #96
 921 005e CAF20003 		movt	r3, 40960
 922 0062 1B68     		ldr	r3, [r3, #0]
 923 0064 1946     		mov	r1, r3
 924 0066 4FF6FB73 		movw	r3, #65531
 925 006a C0F20F03 		movt	r3, 15
 926 006e 0B40     		ands	r3, r3, r1
 927 0070 1360     		str	r3, [r2, #0]
 928 0072 0FE0     		b	.L19
 929              	.L23:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_PBKEN_RESET;
 930              		.loc 1 490 0
 931 0074 4FF08002 		mov	r2, #128
 932 0078 CAF20002 		movt	r2, 40960
 933 007c 4FF08003 		mov	r3, #128
 934 0080 CAF20003 		movt	r3, 40960
 935 0084 1B68     		ldr	r3, [r3, #0]
 936 0086 1946     		mov	r1, r3
 937 0088 4FF6FB73 		movw	r3, #65531
 938 008c C0F20F03 		movt	r3, 15
 939 0090 0B40     		ands	r3, r3, r1
 940 0092 1360     		str	r3, [r2, #0]
 941              	.L19:
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 942              		.loc 1 493 0
 943 0094 07F10C07 		add	r7, r7, #12
 944 0098 BD46     		mov	sp, r7
 945 009a 80BC     		pop	{r7}
 946 009c 7047     		bx	lr
 947              		.cfi_endproc
 948              	.LFE117:
 950 009e 00BF     		.section	.text.FSMC_NANDECCCmd,"ax",%progbits
 951              		.align	2
 952              		.global	FSMC_NANDECCCmd
 953              		.thumb
 954              		.thumb_func
 956              	FSMC_NANDECCCmd:
 957              	.LFB118:
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the FSMC NAND ECC feature.
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the FSMC NAND ECC feature.  
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_NANDECCCmd(uint32_t FSMC_Bank, FunctionalState NewState)
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 958              		.loc 1 505 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 8
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962              		@ link register save eliminated.
 963 0000 80B4     		push	{r7}
 964              	.LCFI24:
 965              		.cfi_def_cfa_offset 4
 966              		.cfi_offset 7, -4
 967 0002 83B0     		sub	sp, sp, #12
 968              	.LCFI25:
 969              		.cfi_def_cfa_offset 16
 970 0004 00AF     		add	r7, sp, #0
 971              	.LCFI26:
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
 974 0008 0B46     		mov	r3, r1
 975 000a FB70     		strb	r3, [r7, #3]
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_NAND_BANK(FSMC_Bank));
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 976              		.loc 1 509 0
 977 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 978 000e 002B     		cmp	r3, #0
 979 0010 1CD0     		beq	.L25
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected NAND Bank ECC function by setting the ECCEN bit in the PCRx register */
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 980              		.loc 1 512 0
 981 0012 7B68     		ldr	r3, [r7, #4]
 982 0014 102B     		cmp	r3, #16
 983 0016 0CD1     		bne	.L26
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 |= PCR_ECCEN_SET;
 984              		.loc 1 514 0
 985 0018 4FF06003 		mov	r3, #96
 986 001c CAF20003 		movt	r3, 40960
 987 0020 4FF06002 		mov	r2, #96
 988 0024 CAF20002 		movt	r2, 40960
 989 0028 1268     		ldr	r2, [r2, #0]
 990 002a 42F04002 		orr	r2, r2, #64
 991 002e 1A60     		str	r2, [r3, #0]
 992 0030 30E0     		b	.L24
 993              	.L26:
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 |= PCR_ECCEN_SET;
 994              		.loc 1 518 0
 995 0032 4FF08003 		mov	r3, #128
 996 0036 CAF20003 		movt	r3, 40960
 997 003a 4FF08002 		mov	r2, #128
 998 003e CAF20002 		movt	r2, 40960
 999 0042 1268     		ldr	r2, [r2, #0]
 1000 0044 42F04002 		orr	r2, r2, #64
 1001 0048 1A60     		str	r2, [r3, #0]
 1002 004a 23E0     		b	.L24
 1003              	.L25:
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected NAND Bank ECC function by clearing the ECCEN bit in the PCRx register *
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 1004              		.loc 1 524 0
 1005 004c 7B68     		ldr	r3, [r7, #4]
 1006 004e 102B     		cmp	r3, #16
 1007 0050 10D1     		bne	.L28
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->PCR2 &= PCR_ECCEN_RESET;
 1008              		.loc 1 526 0
 1009 0052 4FF06002 		mov	r2, #96
 1010 0056 CAF20002 		movt	r2, 40960
 1011 005a 4FF06003 		mov	r3, #96
 1012 005e CAF20003 		movt	r3, 40960
 1013 0062 1B68     		ldr	r3, [r3, #0]
 1014 0064 1946     		mov	r1, r3
 1015 0066 4FF6BF73 		movw	r3, #65471
 1016 006a C0F20F03 		movt	r3, 15
 1017 006e 0B40     		ands	r3, r3, r1
 1018 0070 1360     		str	r3, [r2, #0]
 1019 0072 0FE0     		b	.L24
 1020              	.L28:
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->PCR3 &= PCR_ECCEN_RESET;
 1021              		.loc 1 530 0
 1022 0074 4FF08002 		mov	r2, #128
 1023 0078 CAF20002 		movt	r2, 40960
 1024 007c 4FF08003 		mov	r3, #128
 1025 0080 CAF20003 		movt	r3, 40960
 1026 0084 1B68     		ldr	r3, [r3, #0]
 1027 0086 1946     		mov	r1, r3
 1028 0088 4FF6BF73 		movw	r3, #65471
 1029 008c C0F20F03 		movt	r3, 15
 1030 0090 0B40     		ands	r3, r3, r1
 1031 0092 1360     		str	r3, [r2, #0]
 1032              	.L24:
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1033              		.loc 1 533 0
 1034 0094 07F10C07 		add	r7, r7, #12
 1035 0098 BD46     		mov	sp, r7
 1036 009a 80BC     		pop	{r7}
 1037 009c 7047     		bx	lr
 1038              		.cfi_endproc
 1039              	.LFE118:
 1041 009e 00BF     		.section	.text.FSMC_GetECC,"ax",%progbits
 1042              		.align	2
 1043              		.global	FSMC_GetECC
 1044              		.thumb
 1045              		.thumb_func
 1047              	FSMC_GetECC:
 1048              	.LFB119:
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Returns the error correction code register value.
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The Error Correction Code (ECC) value.
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** uint32_t FSMC_GetECC(uint32_t FSMC_Bank)
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1049              		.loc 1 544 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 16
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
 1054 0000 80B4     		push	{r7}
 1055              	.LCFI27:
 1056              		.cfi_def_cfa_offset 4
 1057              		.cfi_offset 7, -4
 1058 0002 85B0     		sub	sp, sp, #20
 1059              	.LCFI28:
 1060              		.cfi_def_cfa_offset 24
 1061 0004 00AF     		add	r7, sp, #0
 1062              	.LCFI29:
 1063              		.cfi_def_cfa_register 7
 1064 0006 7860     		str	r0, [r7, #4]
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t eccval = 0x00000000;
 1065              		.loc 1 545 0
 1066 0008 4FF00003 		mov	r3, #0
 1067 000c FB60     		str	r3, [r7, #12]
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1068              		.loc 1 547 0
 1069 000e 7B68     		ldr	r3, [r7, #4]
 1070 0010 102B     		cmp	r3, #16
 1071 0012 06D1     		bne	.L30
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Get the ECCR2 register value */
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     eccval = FSMC_Bank2->ECCR2;
 1072              		.loc 1 550 0
 1073 0014 4FF06003 		mov	r3, #96
 1074 0018 CAF20003 		movt	r3, 40960
 1075 001c 5B69     		ldr	r3, [r3, #20]
 1076 001e FB60     		str	r3, [r7, #12]
 1077 0020 05E0     		b	.L31
 1078              	.L30:
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Get the ECCR3 register value */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     eccval = FSMC_Bank3->ECCR3;
 1079              		.loc 1 555 0
 1080 0022 4FF08003 		mov	r3, #128
 1081 0026 CAF20003 		movt	r3, 40960
 1082 002a 5B69     		ldr	r3, [r3, #20]
 1083 002c FB60     		str	r3, [r7, #12]
 1084              	.L31:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Return the error correction code value */
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return(eccval);
 1085              		.loc 1 558 0
 1086 002e FB68     		ldr	r3, [r7, #12]
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1087              		.loc 1 559 0
 1088 0030 1846     		mov	r0, r3
 1089 0032 07F11407 		add	r7, r7, #20
 1090 0036 BD46     		mov	sp, r7
 1091 0038 80BC     		pop	{r7}
 1092 003a 7047     		bx	lr
 1093              		.cfi_endproc
 1094              	.LFE119:
 1096              		.section	.text.FSMC_PCCARDDeInit,"ax",%progbits
 1097              		.align	2
 1098              		.global	FSMC_PCCARDDeInit
 1099              		.thumb
 1100              		.thumb_func
 1102              	FSMC_PCCARDDeInit:
 1103              	.LFB120:
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group3 PCCARD Controller functions
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief   PCCARD Controller functions 
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                     PCCARD Controller functions
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  The following sequence should be followed to configure the FSMC to interface with
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  16-bit PC Card compatible memory connected to the PCCARD Bank:
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    1. Enable the clock for the FSMC and associated GPIOs using the following functions:
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB3PeriphClockCmd(RCC_AHB3Periph_FSMC, ENABLE);
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    2. FSMC pins configuration 
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Connect the involved FSMC pins to AF12 using the following function 
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_FSMC); 
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        - Configure these FSMC pins in alternate function mode by calling the function
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           GPIO_Init();    
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****        
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    3. Declare a FSMC_PCCARDInitTypeDef structure, for example:
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDInitTypeDef  FSMC_PCCARDInitStructure;
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       and fill the FSMC_PCCARDInitStructure variable with the allowed values of
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       the structure member.
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    4. Initialize the PCCARD Controller by calling the function
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDInit(&FSMC_PCCARDInitStructure); 
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    5. Then enable the PCCARD Bank:
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****           FSMC_PCCARDCmd(ENABLE);  
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****    6. At this stage you can read/write from/to the memory connected to the PCCARD Bank. 
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Deinitializes the FSMC PCCARD Bank registers to their default reset values.
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  None                       
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDDeInit(void)
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1104              		.loc 1 608 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 0
 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108              		@ link register save eliminated.
 1109 0000 80B4     		push	{r7}
 1110              	.LCFI30:
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 7, -4
 1113 0002 00AF     		add	r7, sp, #0
 1114              	.LCFI31:
 1115              		.cfi_def_cfa_register 7
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the FSMC_Bank4 registers to their reset values */
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = 0x00000018; 
 1116              		.loc 1 610 0
 1117 0004 4FF0A003 		mov	r3, #160
 1118 0008 CAF20003 		movt	r3, 40960
 1119 000c 4FF01802 		mov	r2, #24
 1120 0010 1A60     		str	r2, [r3, #0]
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->SR4 = 0x00000000;	
 1121              		.loc 1 611 0
 1122 0012 4FF0A003 		mov	r3, #160
 1123 0016 CAF20003 		movt	r3, 40960
 1124 001a 4FF00002 		mov	r2, #0
 1125 001e 5A60     		str	r2, [r3, #4]
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = 0xFCFCFCFC;
 1126              		.loc 1 612 0
 1127 0020 4FF0A003 		mov	r3, #160
 1128 0024 CAF20003 		movt	r3, 40960
 1129 0028 4FF0FC32 		mov	r2, #-50529028
 1130 002c 9A60     		str	r2, [r3, #8]
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = 0xFCFCFCFC;
 1131              		.loc 1 613 0
 1132 002e 4FF0A003 		mov	r3, #160
 1133 0032 CAF20003 		movt	r3, 40960
 1134 0036 4FF0FC32 		mov	r2, #-50529028
 1135 003a DA60     		str	r2, [r3, #12]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = 0xFCFCFCFC;
 1136              		.loc 1 614 0
 1137 003c 4FF0A003 		mov	r3, #160
 1138 0040 CAF20003 		movt	r3, 40960
 1139 0044 4FF0FC32 		mov	r2, #-50529028
 1140 0048 1A61     		str	r2, [r3, #16]
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1141              		.loc 1 615 0
 1142 004a BD46     		mov	sp, r7
 1143 004c 80BC     		pop	{r7}
 1144 004e 7047     		bx	lr
 1145              		.cfi_endproc
 1146              	.LFE120:
 1148              		.section	.text.FSMC_PCCARDInit,"ax",%progbits
 1149              		.align	2
 1150              		.global	FSMC_PCCARDInit
 1151              		.thumb
 1152              		.thumb_func
 1154              	FSMC_PCCARDInit:
 1155              	.LFB121:
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Initializes the FSMC PCCARD Bank according to the specified parameters
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         in the FSMC_PCCARDInitStruct.
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_PCCARDInitStruct : pointer to a FSMC_PCCARDInitTypeDef structure
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         that contains the configuration information for the FSMC PCCARD Bank.                  
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1156              		.loc 1 625 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 8
 1159              		@ frame_needed = 1, uses_anonymous_args = 0
 1160              		@ link register save eliminated.
 1161 0000 80B4     		push	{r7}
 1162              	.LCFI32:
 1163              		.cfi_def_cfa_offset 4
 1164              		.cfi_offset 7, -4
 1165 0002 83B0     		sub	sp, sp, #12
 1166              	.LCFI33:
 1167              		.cfi_def_cfa_offset 16
 1168 0004 00AF     		add	r7, sp, #0
 1169              	.LCFI34:
 1170              		.cfi_def_cfa_register 7
 1171 0006 7860     		str	r0, [r7, #4]
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_FEATURE(FSMC_PCCARDInitStruct->FSMC_Waitfeature));
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TCLR_TIME(FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime));
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_TAR_TIME(FSMC_PCCARDInitStruct->FSMC_TARSetupTime));
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTi
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetu
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetu
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupT
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_Setu
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitS
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldS
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSet
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_SETUP_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime))
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_WAIT_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTim
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HOLD_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTim
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_HIZ_TIME(FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime)
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set the PCR4 register value according to FSMC_PCCARDInitStruct parameters */
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 1172              		.loc 1 646 0
 1173 0008 4FF0A003 		mov	r3, #160
 1174 000c CAF20003 		movt	r3, 40960
 1175 0010 7A68     		ldr	r2, [r7, #4]
 1176 0012 1168     		ldr	r1, [r2, #0]
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 1177              		.loc 1 648 0
 1178 0014 7A68     		ldr	r2, [r7, #4]
 1179 0016 5268     		ldr	r2, [r2, #4]
 1180 0018 4FEA4222 		lsl	r2, r2, #9
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      FSMC_MemoryDataWidth_16b |  
 1181              		.loc 1 647 0
 1182 001c 1143     		orrs	r1, r1, r2
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TARSetupTime << 13);
 1183              		.loc 1 649 0
 1184 001e 7A68     		ldr	r2, [r7, #4]
 1185 0020 9268     		ldr	r2, [r2, #8]
 1186 0022 4FEA4232 		lsl	r2, r2, #13
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime << 9) |
 1187              		.loc 1 648 0
 1188 0026 0A43     		orrs	r2, r2, r1
 1189 0028 42F01002 		orr	r2, r2, #16
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PCR4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_Waitfeature |
 1190              		.loc 1 646 0
 1191 002c 1A60     		str	r2, [r3, #0]
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PMEM4 register value according to FSMC_CommonSpaceTimingStructure parameters */
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1192              		.loc 1 652 0
 1193 002e 4FF0A003 		mov	r3, #160
 1194 0032 CAF20003 		movt	r3, 40960
 1195 0036 7A68     		ldr	r2, [r7, #4]
 1196 0038 D268     		ldr	r2, [r2, #12]
 1197 003a 1168     		ldr	r1, [r2, #0]
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 1198              		.loc 1 653 0
 1199 003c 7A68     		ldr	r2, [r7, #4]
 1200 003e D268     		ldr	r2, [r2, #12]
 1201 0040 5268     		ldr	r2, [r2, #4]
 1202 0042 4FEA0222 		lsl	r2, r2, #8
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1203              		.loc 1 652 0
 1204 0046 1143     		orrs	r1, r1, r2
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 1205              		.loc 1 654 0
 1206 0048 7A68     		ldr	r2, [r7, #4]
 1207 004a D268     		ldr	r2, [r2, #12]
 1208 004c 9268     		ldr	r2, [r2, #8]
 1209 004e 4FEA0242 		lsl	r2, r2, #16
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime << 8
 1210              		.loc 1 653 0
 1211 0052 1143     		orrs	r1, r1, r2
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime << 24
 1212              		.loc 1 655 0
 1213 0054 7A68     		ldr	r2, [r7, #4]
 1214 0056 D268     		ldr	r2, [r2, #12]
 1215 0058 D268     		ldr	r2, [r2, #12]
 1216 005a 4FEA0262 		lsl	r2, r2, #24
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime << 1
 1217              		.loc 1 654 0
 1218 005e 0A43     		orrs	r2, r2, r1
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PMEM4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime
 1219              		.loc 1 652 0
 1220 0060 9A60     		str	r2, [r3, #8]
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PATT4 register value according to FSMC_AttributeSpaceTimingStructure parameters */
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1221              		.loc 1 658 0
 1222 0062 4FF0A003 		mov	r3, #160
 1223 0066 CAF20003 		movt	r3, 40960
 1224 006a 7A68     		ldr	r2, [r7, #4]
 1225 006c 1269     		ldr	r2, [r2, #16]
 1226 006e 1168     		ldr	r1, [r2, #0]
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 1227              		.loc 1 659 0
 1228 0070 7A68     		ldr	r2, [r7, #4]
 1229 0072 1269     		ldr	r2, [r2, #16]
 1230 0074 5268     		ldr	r2, [r2, #4]
 1231 0076 4FEA0222 		lsl	r2, r2, #8
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1232              		.loc 1 658 0
 1233 007a 1143     		orrs	r1, r1, r2
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 1234              		.loc 1 660 0
 1235 007c 7A68     		ldr	r2, [r7, #4]
 1236 007e 1269     		ldr	r2, [r2, #16]
 1237 0080 9268     		ldr	r2, [r2, #8]
 1238 0082 4FEA0242 		lsl	r2, r2, #16
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime <
 1239              		.loc 1 659 0
 1240 0086 1143     		orrs	r1, r1, r2
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime <<
 1241              		.loc 1 661 0
 1242 0088 7A68     		ldr	r2, [r7, #4]
 1243 008a 1269     		ldr	r2, [r2, #16]
 1244 008c D268     		ldr	r2, [r2, #12]
 1245 008e 4FEA0262 		lsl	r2, r2, #24
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                       (FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime <
 1246              		.loc 1 660 0
 1247 0092 0A43     		orrs	r2, r2, r1
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PATT4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupT
 1248              		.loc 1 658 0
 1249 0094 DA60     		str	r2, [r3, #12]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****             
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Set PIO4 register value according to FSMC_IOSpaceTimingStructure parameters */
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1250              		.loc 1 664 0
 1251 0096 4FF0A003 		mov	r3, #160
 1252 009a CAF20003 		movt	r3, 40960
 1253 009e 7A68     		ldr	r2, [r7, #4]
 1254 00a0 5269     		ldr	r2, [r2, #20]
 1255 00a2 1168     		ldr	r1, [r2, #0]
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1256              		.loc 1 665 0
 1257 00a4 7A68     		ldr	r2, [r7, #4]
 1258 00a6 5269     		ldr	r2, [r2, #20]
 1259 00a8 5268     		ldr	r2, [r2, #4]
 1260 00aa 4FEA0222 		lsl	r2, r2, #8
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1261              		.loc 1 664 0
 1262 00ae 1143     		orrs	r1, r1, r2
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1263              		.loc 1 666 0
 1264 00b0 7A68     		ldr	r2, [r7, #4]
 1265 00b2 5269     		ldr	r2, [r2, #20]
 1266 00b4 9268     		ldr	r2, [r2, #8]
 1267 00b6 4FEA0242 		lsl	r2, r2, #16
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime << 8) |
 1268              		.loc 1 665 0
 1269 00ba 1143     		orrs	r1, r1, r2
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime << 24);   
 1270              		.loc 1 667 0
 1271 00bc 7A68     		ldr	r2, [r7, #4]
 1272 00be 5269     		ldr	r2, [r2, #20]
 1273 00c0 D268     		ldr	r2, [r2, #12]
 1274 00c2 4FEA0262 		lsl	r2, r2, #24
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      (FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime << 16)|
 1275              		.loc 1 666 0
 1276 00c6 0A43     		orrs	r2, r2, r1
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_Bank4->PIO4 = (uint32_t)FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime |
 1277              		.loc 1 664 0
 1278 00c8 1A61     		str	r2, [r3, #16]
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1279              		.loc 1 668 0
 1280 00ca 07F10C07 		add	r7, r7, #12
 1281 00ce BD46     		mov	sp, r7
 1282 00d0 80BC     		pop	{r7}
 1283 00d2 7047     		bx	lr
 1284              		.cfi_endproc
 1285              	.LFE121:
 1287              		.section	.text.FSMC_PCCARDStructInit,"ax",%progbits
 1288              		.align	2
 1289              		.global	FSMC_PCCARDStructInit
 1290              		.thumb
 1291              		.thumb_func
 1293              	FSMC_PCCARDStructInit:
 1294              	.LFB122:
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Fills each FSMC_PCCARDInitStruct member with its default value.
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_PCCARDInitStruct: pointer to a FSMC_PCCARDInitTypeDef structure
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *         which will be initialized.
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDStructInit(FSMC_PCCARDInitTypeDef* FSMC_PCCARDInitStruct)
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1295              		.loc 1 677 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 8
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299              		@ link register save eliminated.
 1300 0000 80B4     		push	{r7}
 1301              	.LCFI35:
 1302              		.cfi_def_cfa_offset 4
 1303              		.cfi_offset 7, -4
 1304 0002 83B0     		sub	sp, sp, #12
 1305              	.LCFI36:
 1306              		.cfi_def_cfa_offset 16
 1307 0004 00AF     		add	r7, sp, #0
 1308              	.LCFI37:
 1309              		.cfi_def_cfa_register 7
 1310 0006 7860     		str	r0, [r7, #4]
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Reset PCCARD Init structure parameters values */
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_Waitfeature = FSMC_Waitfeature_Disable;
 1311              		.loc 1 679 0
 1312 0008 7B68     		ldr	r3, [r7, #4]
 1313 000a 4FF00002 		mov	r2, #0
 1314 000e 1A60     		str	r2, [r3, #0]
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TCLRSetupTime = 0x0;
 1315              		.loc 1 680 0
 1316 0010 7B68     		ldr	r3, [r7, #4]
 1317 0012 4FF00002 		mov	r2, #0
 1318 0016 5A60     		str	r2, [r3, #4]
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_TARSetupTime = 0x0;
 1319              		.loc 1 681 0
 1320 0018 7B68     		ldr	r3, [r7, #4]
 1321 001a 4FF00002 		mov	r2, #0
 1322 001e 9A60     		str	r2, [r3, #8]
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1323              		.loc 1 682 0
 1324 0020 7B68     		ldr	r3, [r7, #4]
 1325 0022 DB68     		ldr	r3, [r3, #12]
 1326 0024 4FF0FC02 		mov	r2, #252
 1327 0028 1A60     		str	r2, [r3, #0]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1328              		.loc 1 683 0
 1329 002a 7B68     		ldr	r3, [r7, #4]
 1330 002c DB68     		ldr	r3, [r3, #12]
 1331 002e 4FF0FC02 		mov	r2, #252
 1332 0032 5A60     		str	r2, [r3, #4]
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1333              		.loc 1 684 0
 1334 0034 7B68     		ldr	r3, [r7, #4]
 1335 0036 DB68     		ldr	r3, [r3, #12]
 1336 0038 4FF0FC02 		mov	r2, #252
 1337 003c 9A60     		str	r2, [r3, #8]
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_CommonSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 1338              		.loc 1 685 0
 1339 003e 7B68     		ldr	r3, [r7, #4]
 1340 0040 DB68     		ldr	r3, [r3, #12]
 1341 0042 4FF0FC02 		mov	r2, #252
 1342 0046 DA60     		str	r2, [r3, #12]
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1343              		.loc 1 686 0
 1344 0048 7B68     		ldr	r3, [r7, #4]
 1345 004a 1B69     		ldr	r3, [r3, #16]
 1346 004c 4FF0FC02 		mov	r2, #252
 1347 0050 1A60     		str	r2, [r3, #0]
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1348              		.loc 1 687 0
 1349 0052 7B68     		ldr	r3, [r7, #4]
 1350 0054 1B69     		ldr	r3, [r3, #16]
 1351 0056 4FF0FC02 		mov	r2, #252
 1352 005a 5A60     		str	r2, [r3, #4]
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1353              		.loc 1 688 0
 1354 005c 7B68     		ldr	r3, [r7, #4]
 1355 005e 1B69     		ldr	r3, [r3, #16]
 1356 0060 4FF0FC02 		mov	r2, #252
 1357 0064 9A60     		str	r2, [r3, #8]
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_AttributeSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;	
 1358              		.loc 1 689 0
 1359 0066 7B68     		ldr	r3, [r7, #4]
 1360 0068 1B69     		ldr	r3, [r3, #16]
 1361 006a 4FF0FC02 		mov	r2, #252
 1362 006e DA60     		str	r2, [r3, #12]
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_SetupTime = 0xFC;
 1363              		.loc 1 690 0
 1364 0070 7B68     		ldr	r3, [r7, #4]
 1365 0072 5B69     		ldr	r3, [r3, #20]
 1366 0074 4FF0FC02 		mov	r2, #252
 1367 0078 1A60     		str	r2, [r3, #0]
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_WaitSetupTime = 0xFC;
 1368              		.loc 1 691 0
 1369 007a 7B68     		ldr	r3, [r7, #4]
 1370 007c 5B69     		ldr	r3, [r3, #20]
 1371 007e 4FF0FC02 		mov	r2, #252
 1372 0082 5A60     		str	r2, [r3, #4]
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HoldSetupTime = 0xFC;
 1373              		.loc 1 692 0
 1374 0084 7B68     		ldr	r3, [r7, #4]
 1375 0086 5B69     		ldr	r3, [r3, #20]
 1376 0088 4FF0FC02 		mov	r2, #252
 1377 008c 9A60     		str	r2, [r3, #8]
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FSMC_PCCARDInitStruct->FSMC_IOSpaceTimingStruct->FSMC_HiZSetupTime = 0xFC;
 1378              		.loc 1 693 0
 1379 008e 7B68     		ldr	r3, [r7, #4]
 1380 0090 5B69     		ldr	r3, [r3, #20]
 1381 0092 4FF0FC02 		mov	r2, #252
 1382 0096 DA60     		str	r2, [r3, #12]
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1383              		.loc 1 694 0
 1384 0098 07F10C07 		add	r7, r7, #12
 1385 009c BD46     		mov	sp, r7
 1386 009e 80BC     		pop	{r7}
 1387 00a0 7047     		bx	lr
 1388              		.cfi_endproc
 1389              	.LFE122:
 1391 00a2 00BF     		.section	.text.FSMC_PCCARDCmd,"ax",%progbits
 1392              		.align	2
 1393              		.global	FSMC_PCCARDCmd
 1394              		.thumb
 1395              		.thumb_func
 1397              	FSMC_PCCARDCmd:
 1398              	.LFB123:
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the PCCARD Memory Bank.
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the PCCARD Memory Bank.  
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_PCCARDCmd(FunctionalState NewState)
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1399              		.loc 1 703 0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 8
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403              		@ link register save eliminated.
 1404 0000 80B4     		push	{r7}
 1405              	.LCFI38:
 1406              		.cfi_def_cfa_offset 4
 1407              		.cfi_offset 7, -4
 1408 0002 83B0     		sub	sp, sp, #12
 1409              	.LCFI39:
 1410              		.cfi_def_cfa_offset 16
 1411 0004 00AF     		add	r7, sp, #0
 1412              	.LCFI40:
 1413              		.cfi_def_cfa_register 7
 1414 0006 0346     		mov	r3, r0
 1415 0008 FB71     		strb	r3, [r7, #7]
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 1416              		.loc 1 706 0
 1417 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1418 000c 002B     		cmp	r3, #0
 1419 000e 0CD0     		beq	.L36
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the PCCARD Bank by setting the PBKEN bit in the PCR4 register */
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->PCR4 |= PCR_PBKEN_SET;
 1420              		.loc 1 709 0
 1421 0010 4FF0A003 		mov	r3, #160
 1422 0014 CAF20003 		movt	r3, 40960
 1423 0018 4FF0A002 		mov	r2, #160
 1424 001c CAF20002 		movt	r2, 40960
 1425 0020 1268     		ldr	r2, [r2, #0]
 1426 0022 42F00402 		orr	r2, r2, #4
 1427 0026 1A60     		str	r2, [r3, #0]
 1428 0028 0FE0     		b	.L35
 1429              	.L36:
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the PCCARD Bank by clearing the PBKEN bit in the PCR4 register */
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->PCR4 &= PCR_PBKEN_RESET;
 1430              		.loc 1 714 0
 1431 002a 4FF0A002 		mov	r2, #160
 1432 002e CAF20002 		movt	r2, 40960
 1433 0032 4FF0A003 		mov	r3, #160
 1434 0036 CAF20003 		movt	r3, 40960
 1435 003a 1B68     		ldr	r3, [r3, #0]
 1436 003c 1946     		mov	r1, r3
 1437 003e 4FF6FB73 		movw	r3, #65531
 1438 0042 C0F20F03 		movt	r3, 15
 1439 0046 0B40     		ands	r3, r3, r1
 1440 0048 1360     		str	r3, [r2, #0]
 1441              	.L35:
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1442              		.loc 1 716 0
 1443 004a 07F10C07 		add	r7, r7, #12
 1444 004e BD46     		mov	sp, r7
 1445 0050 80BC     		pop	{r7}
 1446 0052 7047     		bx	lr
 1447              		.cfi_endproc
 1448              	.LFE123:
 1450              		.section	.text.FSMC_ITConfig,"ax",%progbits
 1451              		.align	2
 1452              		.global	FSMC_ITConfig
 1453              		.thumb
 1454              		.thumb_func
 1456              	FSMC_ITConfig:
 1457              	.LFB124:
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @}
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /** @defgroup FSMC_Group4  Interrupts and flags management functions
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *  @brief    Interrupts and flags management functions
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  *
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @verbatim   
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****                      Interrupts and flags management functions
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  ===============================================================================  
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** @endverbatim
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @{
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Enables or disables the specified FSMC interrupts.
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt sources to be enabled or disabled.
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  NewState: new state of the specified FSMC interrupts.
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be: ENABLE or DISABLE.
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ITConfig(uint32_t FSMC_Bank, uint32_t FSMC_IT, FunctionalState NewState)
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1458              		.loc 1 750 0
 1459              		.cfi_startproc
 1460              		@ args = 0, pretend = 0, frame = 16
 1461              		@ frame_needed = 1, uses_anonymous_args = 0
 1462              		@ link register save eliminated.
 1463 0000 80B4     		push	{r7}
 1464              	.LCFI41:
 1465              		.cfi_def_cfa_offset 4
 1466              		.cfi_offset 7, -4
 1467 0002 85B0     		sub	sp, sp, #20
 1468              	.LCFI42:
 1469              		.cfi_def_cfa_offset 24
 1470 0004 00AF     		add	r7, sp, #0
 1471              	.LCFI43:
 1472              		.cfi_def_cfa_register 7
 1473 0006 F860     		str	r0, [r7, #12]
 1474 0008 B960     		str	r1, [r7, #8]
 1475 000a 1346     		mov	r3, r2
 1476 000c FB71     		strb	r3, [r7, #7]
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));	
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if (NewState != DISABLE)
 1477              		.loc 1 755 0
 1478 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1479 0010 002B     		cmp	r3, #0
 1480 0012 30D0     		beq	.L39
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank2 interrupts */
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 1481              		.loc 1 758 0
 1482 0014 FB68     		ldr	r3, [r7, #12]
 1483 0016 102B     		cmp	r3, #16
 1484 0018 0DD1     		bne	.L40
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->SR2 |= FSMC_IT;
 1485              		.loc 1 760 0
 1486 001a 4FF06003 		mov	r3, #96
 1487 001e CAF20003 		movt	r3, 40960
 1488 0022 4FF06002 		mov	r2, #96
 1489 0026 CAF20002 		movt	r2, 40960
 1490 002a 5268     		ldr	r2, [r2, #4]
 1491 002c 1146     		mov	r1, r2
 1492 002e BA68     		ldr	r2, [r7, #8]
 1493 0030 0A43     		orrs	r2, r2, r1
 1494 0032 5A60     		str	r2, [r3, #4]
 1495 0034 55E0     		b	.L38
 1496              	.L40:
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank3 interrupts */
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 1497              		.loc 1 763 0
 1498 0036 FB68     		ldr	r3, [r7, #12]
 1499 0038 B3F5807F 		cmp	r3, #256
 1500 003c 0DD1     		bne	.L42
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->SR3 |= FSMC_IT;
 1501              		.loc 1 765 0
 1502 003e 4FF08003 		mov	r3, #128
 1503 0042 CAF20003 		movt	r3, 40960
 1504 0046 4FF08002 		mov	r2, #128
 1505 004a CAF20002 		movt	r2, 40960
 1506 004e 5268     		ldr	r2, [r2, #4]
 1507 0050 1146     		mov	r1, r2
 1508 0052 BA68     		ldr	r2, [r7, #8]
 1509 0054 0A43     		orrs	r2, r2, r1
 1510 0056 5A60     		str	r2, [r3, #4]
 1511 0058 43E0     		b	.L38
 1512              	.L42:
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Enable the selected FSMC_Bank4 interrupts */
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank4->SR4 |= FSMC_IT;    
 1513              		.loc 1 770 0
 1514 005a 4FF0A003 		mov	r3, #160
 1515 005e CAF20003 		movt	r3, 40960
 1516 0062 4FF0A002 		mov	r2, #160
 1517 0066 CAF20002 		movt	r2, 40960
 1518 006a 5268     		ldr	r2, [r2, #4]
 1519 006c 1146     		mov	r1, r2
 1520 006e BA68     		ldr	r2, [r7, #8]
 1521 0070 0A43     		orrs	r2, r2, r1
 1522 0072 5A60     		str	r2, [r3, #4]
 1523 0074 35E0     		b	.L38
 1524              	.L39:
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank2 interrupts */
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     if(FSMC_Bank == FSMC_Bank2_NAND)
 1525              		.loc 1 776 0
 1526 0076 FB68     		ldr	r3, [r7, #12]
 1527 0078 102B     		cmp	r3, #16
 1528 007a 0FD1     		bne	.L43
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank2->SR2 &= (uint32_t)~FSMC_IT;
 1529              		.loc 1 779 0
 1530 007c 4FF06003 		mov	r3, #96
 1531 0080 CAF20003 		movt	r3, 40960
 1532 0084 4FF06002 		mov	r2, #96
 1533 0088 CAF20002 		movt	r2, 40960
 1534 008c 5268     		ldr	r2, [r2, #4]
 1535 008e 1146     		mov	r1, r2
 1536 0090 BA68     		ldr	r2, [r7, #8]
 1537 0092 6FEA0202 		mvn	r2, r2
 1538 0096 0A40     		ands	r2, r2, r1
 1539 0098 5A60     		str	r2, [r3, #4]
 1540 009a 22E0     		b	.L38
 1541              	.L43:
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank3 interrupts */
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else if (FSMC_Bank == FSMC_Bank3_NAND)
 1542              		.loc 1 782 0
 1543 009c FB68     		ldr	r3, [r7, #12]
 1544 009e B3F5807F 		cmp	r3, #256
 1545 00a2 0FD1     		bne	.L44
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank3->SR3 &= (uint32_t)~FSMC_IT;
 1546              		.loc 1 784 0
 1547 00a4 4FF08003 		mov	r3, #128
 1548 00a8 CAF20003 		movt	r3, 40960
 1549 00ac 4FF08002 		mov	r2, #128
 1550 00b0 CAF20002 		movt	r2, 40960
 1551 00b4 5268     		ldr	r2, [r2, #4]
 1552 00b6 1146     		mov	r1, r2
 1553 00b8 BA68     		ldr	r2, [r7, #8]
 1554 00ba 6FEA0202 		mvn	r2, r2
 1555 00be 0A40     		ands	r2, r2, r1
 1556 00c0 5A60     		str	r2, [r3, #4]
 1557 00c2 0EE0     		b	.L38
 1558              	.L44:
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     /* Disable the selected FSMC_Bank4 interrupts */
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     else
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     {
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****       FSMC_Bank4->SR4 &= (uint32_t)~FSMC_IT;    
 1559              		.loc 1 789 0
 1560 00c4 4FF0A003 		mov	r3, #160
 1561 00c8 CAF20003 		movt	r3, 40960
 1562 00cc 4FF0A002 		mov	r2, #160
 1563 00d0 CAF20002 		movt	r2, 40960
 1564 00d4 5268     		ldr	r2, [r2, #4]
 1565 00d6 1146     		mov	r1, r2
 1566 00d8 BA68     		ldr	r2, [r7, #8]
 1567 00da 6FEA0202 		mvn	r2, r2
 1568 00de 0A40     		ands	r2, r2, r1
 1569 00e0 5A60     		str	r2, [r3, #4]
 1570              	.L38:
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     }
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1571              		.loc 1 792 0
 1572 00e2 07F11407 		add	r7, r7, #20
 1573 00e6 BD46     		mov	sp, r7
 1574 00e8 80BC     		pop	{r7}
 1575 00ea 7047     		bx	lr
 1576              		.cfi_endproc
 1577              	.LFE124:
 1579              		.section	.text.FSMC_GetFlagStatus,"ax",%progbits
 1580              		.align	2
 1581              		.global	FSMC_GetFlagStatus
 1582              		.thumb
 1583              		.thumb_func
 1585              	FSMC_GetFlagStatus:
 1586              	.LFB125:
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Checks whether the specified FSMC flag is set or not.
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to check.
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_RisingEdge: Rising edge detection Flag.
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_Level: Level detection Flag.
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FallingEdge: Falling edge detection Flag.
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FEMPT: Fifo empty Flag. 
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The new state of FSMC_FLAG (SET or RESET).
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** FlagStatus FSMC_GetFlagStatus(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1587              		.loc 1 810 0
 1588              		.cfi_startproc
 1589              		@ args = 0, pretend = 0, frame = 16
 1590              		@ frame_needed = 1, uses_anonymous_args = 0
 1591              		@ link register save eliminated.
 1592 0000 80B4     		push	{r7}
 1593              	.LCFI44:
 1594              		.cfi_def_cfa_offset 4
 1595              		.cfi_offset 7, -4
 1596 0002 85B0     		sub	sp, sp, #20
 1597              	.LCFI45:
 1598              		.cfi_def_cfa_offset 24
 1599 0004 00AF     		add	r7, sp, #0
 1600              	.LCFI46:
 1601              		.cfi_def_cfa_register 7
 1602 0006 7860     		str	r0, [r7, #4]
 1603 0008 3960     		str	r1, [r7, #0]
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   FlagStatus bitstatus = RESET;
 1604              		.loc 1 811 0
 1605 000a 4FF00003 		mov	r3, #0
 1606 000e FB73     		strb	r3, [r7, #15]
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmpsr = 0x00000000;
 1607              		.loc 1 812 0
 1608 0010 4FF00003 		mov	r3, #0
 1609 0014 BB60     		str	r3, [r7, #8]
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GET_FLAG(FSMC_FLAG));
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1610              		.loc 1 818 0
 1611 0016 7B68     		ldr	r3, [r7, #4]
 1612 0018 102B     		cmp	r3, #16
 1613 001a 06D1     		bne	.L46
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 1614              		.loc 1 820 0
 1615 001c 4FF06003 		mov	r3, #96
 1616 0020 CAF20003 		movt	r3, 40960
 1617 0024 5B68     		ldr	r3, [r3, #4]
 1618 0026 BB60     		str	r3, [r7, #8]
 1619 0028 10E0     		b	.L47
 1620              	.L46:
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1621              		.loc 1 822 0
 1622 002a 7B68     		ldr	r3, [r7, #4]
 1623 002c B3F5807F 		cmp	r3, #256
 1624 0030 06D1     		bne	.L48
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 1625              		.loc 1 824 0
 1626 0032 4FF08003 		mov	r3, #128
 1627 0036 CAF20003 		movt	r3, 40960
 1628 003a 5B68     		ldr	r3, [r3, #4]
 1629 003c BB60     		str	r3, [r7, #8]
 1630 003e 05E0     		b	.L47
 1631              	.L48:
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 1632              		.loc 1 829 0
 1633 0040 4FF0A003 		mov	r3, #160
 1634 0044 CAF20003 		movt	r3, 40960
 1635 0048 5B68     		ldr	r3, [r3, #4]
 1636 004a BB60     		str	r3, [r7, #8]
 1637              	.L47:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   } 
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Get the flag status */
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if ((tmpsr & FSMC_FLAG) != (uint16_t)RESET )
 1638              		.loc 1 833 0
 1639 004c BA68     		ldr	r2, [r7, #8]
 1640 004e 3B68     		ldr	r3, [r7, #0]
 1641 0050 1340     		ands	r3, r3, r2
 1642 0052 002B     		cmp	r3, #0
 1643 0054 03D0     		beq	.L49
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = SET;
 1644              		.loc 1 835 0
 1645 0056 4FF00103 		mov	r3, #1
 1646 005a FB73     		strb	r3, [r7, #15]
 1647 005c 02E0     		b	.L50
 1648              	.L49:
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = RESET;
 1649              		.loc 1 839 0
 1650 005e 4FF00003 		mov	r3, #0
 1651 0062 FB73     		strb	r3, [r7, #15]
 1652              	.L50:
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Return the flag status */
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return bitstatus;
 1653              		.loc 1 842 0
 1654 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1655              		.loc 1 843 0
 1656 0066 1846     		mov	r0, r3
 1657 0068 07F11407 		add	r7, r7, #20
 1658 006c BD46     		mov	sp, r7
 1659 006e 80BC     		pop	{r7}
 1660 0070 7047     		bx	lr
 1661              		.cfi_endproc
 1662              	.LFE125:
 1664 0072 00BF     		.section	.text.FSMC_ClearFlag,"ax",%progbits
 1665              		.align	2
 1666              		.global	FSMC_ClearFlag
 1667              		.thumb
 1668              		.thumb_func
 1670              	FSMC_ClearFlag:
 1671              	.LFB126:
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Clears the FSMC's pending flags.
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_FLAG: specifies the flag to clear.
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_RisingEdge: Rising edge detection Flag.
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_Level: Level detection Flag.
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_FLAG_FallingEdge: Falling edge detection Flag.
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ClearFlag(uint32_t FSMC_Bank, uint32_t FSMC_FLAG)
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1672              		.loc 1 860 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 8
 1675              		@ frame_needed = 1, uses_anonymous_args = 0
 1676              		@ link register save eliminated.
 1677 0000 80B4     		push	{r7}
 1678              	.LCFI47:
 1679              		.cfi_def_cfa_offset 4
 1680              		.cfi_offset 7, -4
 1681 0002 83B0     		sub	sp, sp, #12
 1682              	.LCFI48:
 1683              		.cfi_def_cfa_offset 16
 1684 0004 00AF     		add	r7, sp, #0
 1685              	.LCFI49:
 1686              		.cfi_def_cfa_register 7
 1687 0006 7860     		str	r0, [r7, #4]
 1688 0008 3960     		str	r1, [r7, #0]
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****  /* Check the parameters */
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GETFLAG_BANK(FSMC_Bank));
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_CLEAR_FLAG(FSMC_FLAG)) ;
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1689              		.loc 1 865 0
 1690 000a 7B68     		ldr	r3, [r7, #4]
 1691 000c 102B     		cmp	r3, #16
 1692 000e 0FD1     		bne	.L52
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 &= ~FSMC_FLAG; 
 1693              		.loc 1 867 0
 1694 0010 4FF06003 		mov	r3, #96
 1695 0014 CAF20003 		movt	r3, 40960
 1696 0018 4FF06002 		mov	r2, #96
 1697 001c CAF20002 		movt	r2, 40960
 1698 0020 5268     		ldr	r2, [r2, #4]
 1699 0022 1146     		mov	r1, r2
 1700 0024 3A68     		ldr	r2, [r7, #0]
 1701 0026 6FEA0202 		mvn	r2, r2
 1702 002a 0A40     		ands	r2, r2, r1
 1703 002c 5A60     		str	r2, [r3, #4]
 1704 002e 22E0     		b	.L51
 1705              	.L52:
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1706              		.loc 1 869 0
 1707 0030 7B68     		ldr	r3, [r7, #4]
 1708 0032 B3F5807F 		cmp	r3, #256
 1709 0036 0FD1     		bne	.L54
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 &= ~FSMC_FLAG;
 1710              		.loc 1 871 0
 1711 0038 4FF08003 		mov	r3, #128
 1712 003c CAF20003 		movt	r3, 40960
 1713 0040 4FF08002 		mov	r2, #128
 1714 0044 CAF20002 		movt	r2, 40960
 1715 0048 5268     		ldr	r2, [r2, #4]
 1716 004a 1146     		mov	r1, r2
 1717 004c 3A68     		ldr	r2, [r7, #0]
 1718 004e 6FEA0202 		mvn	r2, r2
 1719 0052 0A40     		ands	r2, r2, r1
 1720 0054 5A60     		str	r2, [r3, #4]
 1721 0056 0EE0     		b	.L51
 1722              	.L54:
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->SR4 &= ~FSMC_FLAG;
 1723              		.loc 1 876 0
 1724 0058 4FF0A003 		mov	r3, #160
 1725 005c CAF20003 		movt	r3, 40960
 1726 0060 4FF0A002 		mov	r2, #160
 1727 0064 CAF20002 		movt	r2, 40960
 1728 0068 5268     		ldr	r2, [r2, #4]
 1729 006a 1146     		mov	r1, r2
 1730 006c 3A68     		ldr	r2, [r7, #0]
 1731 006e 6FEA0202 		mvn	r2, r2
 1732 0072 0A40     		ands	r2, r2, r1
 1733 0074 5A60     		str	r2, [r3, #4]
 1734              	.L51:
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1735              		.loc 1 878 0
 1736 0076 07F10C07 		add	r7, r7, #12
 1737 007a BD46     		mov	sp, r7
 1738 007c 80BC     		pop	{r7}
 1739 007e 7047     		bx	lr
 1740              		.cfi_endproc
 1741              	.LFE126:
 1743              		.section	.text.FSMC_GetITStatus,"ax",%progbits
 1744              		.align	2
 1745              		.global	FSMC_GetITStatus
 1746              		.thumb
 1747              		.thumb_func
 1749              	FSMC_GetITStatus:
 1750              	.LFB127:
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Checks whether the specified FSMC interrupt has occurred or not.
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the FSMC interrupt source to check.
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt. 
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval The new state of FSMC_IT (SET or RESET).
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** ITStatus FSMC_GetITStatus(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1751              		.loc 1 895 0
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 24
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755              		@ link register save eliminated.
 1756 0000 80B4     		push	{r7}
 1757              	.LCFI50:
 1758              		.cfi_def_cfa_offset 4
 1759              		.cfi_offset 7, -4
 1760 0002 87B0     		sub	sp, sp, #28
 1761              	.LCFI51:
 1762              		.cfi_def_cfa_offset 32
 1763 0004 00AF     		add	r7, sp, #0
 1764              	.LCFI52:
 1765              		.cfi_def_cfa_register 7
 1766 0006 7860     		str	r0, [r7, #4]
 1767 0008 3960     		str	r1, [r7, #0]
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   ITStatus bitstatus = RESET;
 1768              		.loc 1 896 0
 1769 000a 4FF00003 		mov	r3, #0
 1770 000e FB75     		strb	r3, [r7, #23]
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   uint32_t tmpsr = 0x0, itstatus = 0x0, itenable = 0x0; 
 1771              		.loc 1 897 0
 1772 0010 4FF00003 		mov	r3, #0
 1773 0014 3B61     		str	r3, [r7, #16]
 1774 0016 4FF00003 		mov	r3, #0
 1775 001a FB60     		str	r3, [r7, #12]
 1776 001c 4FF00003 		mov	r3, #0
 1777 0020 BB60     		str	r3, [r7, #8]
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_GET_IT(FSMC_IT));
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1778              		.loc 1 903 0
 1779 0022 7B68     		ldr	r3, [r7, #4]
 1780 0024 102B     		cmp	r3, #16
 1781 0026 06D1     		bne	.L56
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank2->SR2;
 1782              		.loc 1 905 0
 1783 0028 4FF06003 		mov	r3, #96
 1784 002c CAF20003 		movt	r3, 40960
 1785 0030 5B68     		ldr	r3, [r3, #4]
 1786 0032 3B61     		str	r3, [r7, #16]
 1787 0034 10E0     		b	.L57
 1788              	.L56:
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1789              		.loc 1 907 0
 1790 0036 7B68     		ldr	r3, [r7, #4]
 1791 0038 B3F5807F 		cmp	r3, #256
 1792 003c 06D1     		bne	.L58
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank3->SR3;
 1793              		.loc 1 909 0
 1794 003e 4FF08003 		mov	r3, #128
 1795 0042 CAF20003 		movt	r3, 40960
 1796 0046 5B68     		ldr	r3, [r3, #4]
 1797 0048 3B61     		str	r3, [r7, #16]
 1798 004a 05E0     		b	.L57
 1799              	.L58:
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     tmpsr = FSMC_Bank4->SR4;
 1800              		.loc 1 914 0
 1801 004c 4FF0A003 		mov	r3, #160
 1802 0050 CAF20003 		movt	r3, 40960
 1803 0054 5B68     		ldr	r3, [r3, #4]
 1804 0056 3B61     		str	r3, [r7, #16]
 1805              	.L57:
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   } 
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   itstatus = tmpsr & FSMC_IT;
 1806              		.loc 1 917 0
 1807 0058 3A69     		ldr	r2, [r7, #16]
 1808 005a 3B68     		ldr	r3, [r7, #0]
 1809 005c 1340     		ands	r3, r3, r2
 1810 005e FB60     		str	r3, [r7, #12]
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   itenable = tmpsr & (FSMC_IT >> 3);
 1811              		.loc 1 919 0
 1812 0060 3B68     		ldr	r3, [r7, #0]
 1813 0062 4FEAD302 		lsr	r2, r3, #3
 1814 0066 3B69     		ldr	r3, [r7, #16]
 1815 0068 1340     		ands	r3, r3, r2
 1816 006a BB60     		str	r3, [r7, #8]
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if ((itstatus != (uint32_t)RESET)  && (itenable != (uint32_t)RESET))
 1817              		.loc 1 920 0
 1818 006c FB68     		ldr	r3, [r7, #12]
 1819 006e 002B     		cmp	r3, #0
 1820 0070 06D0     		beq	.L59
 1821              		.loc 1 920 0 is_stmt 0 discriminator 1
 1822 0072 BB68     		ldr	r3, [r7, #8]
 1823 0074 002B     		cmp	r3, #0
 1824 0076 03D0     		beq	.L59
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = SET;
 1825              		.loc 1 922 0 is_stmt 1
 1826 0078 4FF00103 		mov	r3, #1
 1827 007c FB75     		strb	r3, [r7, #23]
 1828 007e 02E0     		b	.L60
 1829              	.L59:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     bitstatus = RESET;
 1830              		.loc 1 926 0
 1831 0080 4FF00003 		mov	r3, #0
 1832 0084 FB75     		strb	r3, [r7, #23]
 1833              	.L60:
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   return bitstatus; 
 1834              		.loc 1 928 0
 1835 0086 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1836              		.loc 1 929 0
 1837 0088 1846     		mov	r0, r3
 1838 008a 07F11C07 		add	r7, r7, #28
 1839 008e BD46     		mov	sp, r7
 1840 0090 80BC     		pop	{r7}
 1841 0092 7047     		bx	lr
 1842              		.cfi_endproc
 1843              	.LFE127:
 1845              		.section	.text.FSMC_ClearITPendingBit,"ax",%progbits
 1846              		.align	2
 1847              		.global	FSMC_ClearITPendingBit
 1848              		.thumb
 1849              		.thumb_func
 1851              	FSMC_ClearITPendingBit:
 1852              	.LFB128:
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** 
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** /**
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @brief  Clears the FSMC's interrupt pending bits.
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_Bank: specifies the FSMC Bank to be used
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be one of the following values:
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank2_NAND: FSMC Bank2 NAND 
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank3_NAND: FSMC Bank3 NAND
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_Bank4_PCCARD: FSMC Bank4 PCCARD
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @param  FSMC_IT: specifies the interrupt pending bit to clear.
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *          This parameter can be any combination of the following values:
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_RisingEdge: Rising edge detection interrupt. 
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_Level: Level edge detection interrupt.
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   *            @arg FSMC_IT_FallingEdge: Falling edge detection interrupt.
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   * @retval None
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   */
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** void FSMC_ClearITPendingBit(uint32_t FSMC_Bank, uint32_t FSMC_IT)
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** {
 1853              		.loc 1 946 0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 8
 1856              		@ frame_needed = 1, uses_anonymous_args = 0
 1857              		@ link register save eliminated.
 1858 0000 80B4     		push	{r7}
 1859              	.LCFI53:
 1860              		.cfi_def_cfa_offset 4
 1861              		.cfi_offset 7, -4
 1862 0002 83B0     		sub	sp, sp, #12
 1863              	.LCFI54:
 1864              		.cfi_def_cfa_offset 16
 1865 0004 00AF     		add	r7, sp, #0
 1866              	.LCFI55:
 1867              		.cfi_def_cfa_register 7
 1868 0006 7860     		str	r0, [r7, #4]
 1869 0008 3960     		str	r1, [r7, #0]
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* Check the parameters */
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT_BANK(FSMC_Bank));
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   assert_param(IS_FSMC_IT(FSMC_IT));
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   if(FSMC_Bank == FSMC_Bank2_NAND)
 1870              		.loc 1 951 0
 1871 000a 7B68     		ldr	r3, [r7, #4]
 1872 000c 102B     		cmp	r3, #16
 1873 000e 11D1     		bne	.L62
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank2->SR2 &= ~(FSMC_IT >> 3); 
 1874              		.loc 1 953 0
 1875 0010 4FF06003 		mov	r3, #96
 1876 0014 CAF20003 		movt	r3, 40960
 1877 0018 4FF06002 		mov	r2, #96
 1878 001c CAF20002 		movt	r2, 40960
 1879 0020 5268     		ldr	r2, [r2, #4]
 1880 0022 1146     		mov	r1, r2
 1881 0024 3A68     		ldr	r2, [r7, #0]
 1882 0026 4FEAD202 		lsr	r2, r2, #3
 1883 002a 6FEA0202 		mvn	r2, r2
 1884 002e 0A40     		ands	r2, r2, r1
 1885 0030 5A60     		str	r2, [r3, #4]
 1886 0032 26E0     		b	.L61
 1887              	.L62:
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }  
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else if(FSMC_Bank == FSMC_Bank3_NAND)
 1888              		.loc 1 955 0
 1889 0034 7B68     		ldr	r3, [r7, #4]
 1890 0036 B3F5807F 		cmp	r3, #256
 1891 003a 11D1     		bne	.L64
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank3->SR3 &= ~(FSMC_IT >> 3);
 1892              		.loc 1 957 0
 1893 003c 4FF08003 		mov	r3, #128
 1894 0040 CAF20003 		movt	r3, 40960
 1895 0044 4FF08002 		mov	r2, #128
 1896 0048 CAF20002 		movt	r2, 40960
 1897 004c 5268     		ldr	r2, [r2, #4]
 1898 004e 1146     		mov	r1, r2
 1899 0050 3A68     		ldr	r2, [r7, #0]
 1900 0052 4FEAD202 		lsr	r2, r2, #3
 1901 0056 6FEA0202 		mvn	r2, r2
 1902 005a 0A40     		ands	r2, r2, r1
 1903 005c 5A60     		str	r2, [r3, #4]
 1904 005e 10E0     		b	.L61
 1905              	.L64:
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   /* FSMC_Bank4_PCCARD*/
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   else
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   {
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****     FSMC_Bank4->SR4 &= ~(FSMC_IT >> 3);
 1906              		.loc 1 962 0
 1907 0060 4FF0A003 		mov	r3, #160
 1908 0064 CAF20003 		movt	r3, 40960
 1909 0068 4FF0A002 		mov	r2, #160
 1910 006c CAF20002 		movt	r2, 40960
 1911 0070 5268     		ldr	r2, [r2, #4]
 1912 0072 1146     		mov	r1, r2
 1913 0074 3A68     		ldr	r2, [r7, #0]
 1914 0076 4FEAD202 		lsr	r2, r2, #3
 1915 007a 6FEA0202 		mvn	r2, r2
 1916 007e 0A40     		ands	r2, r2, r1
 1917 0080 5A60     		str	r2, [r3, #4]
 1918              	.L61:
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c ****   }
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c **** }
 1919              		.loc 1 964 0
 1920 0082 07F10C07 		add	r7, r7, #12
 1921 0086 BD46     		mov	sp, r7
 1922 0088 80BC     		pop	{r7}
 1923 008a 7047     		bx	lr
 1924              		.cfi_endproc
 1925              	.LFE128:
 1927              		.text
 1928              	.Letext0:
 1929              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 1930              		.file 3 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Devi
 1931              		.file 4 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_S
 1932              		.file 5 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_fsmc.c
  C:\Temp\cc2e91Wt.s:19     .text.FSMC_NORSRAMDeInit:00000000 $t
  C:\Temp\cc2e91Wt.s:24     .text.FSMC_NORSRAMDeInit:00000000 FSMC_NORSRAMDeInit
  C:\Temp\cc2e91Wt.s:81     .text.FSMC_NORSRAMInit:00000000 $t
  C:\Temp\cc2e91Wt.s:86     .text.FSMC_NORSRAMInit:00000000 FSMC_NORSRAMInit
  C:\Temp\cc2e91Wt.s:305    .text.FSMC_NORSRAMStructInit:00000000 $t
  C:\Temp\cc2e91Wt.s:310    .text.FSMC_NORSRAMStructInit:00000000 FSMC_NORSRAMStructInit
  C:\Temp\cc2e91Wt.s:459    .text.FSMC_NORSRAMCmd:00000000 $t
  C:\Temp\cc2e91Wt.s:464    .text.FSMC_NORSRAMCmd:00000000 FSMC_NORSRAMCmd
  C:\Temp\cc2e91Wt.s:519    .text.FSMC_NANDDeInit:00000000 $t
  C:\Temp\cc2e91Wt.s:524    .text.FSMC_NANDDeInit:00000000 FSMC_NANDDeInit
  C:\Temp\cc2e91Wt.s:598    .text.FSMC_NANDInit:00000000 $t
  C:\Temp\cc2e91Wt.s:603    .text.FSMC_NANDInit:00000000 FSMC_NANDInit
  C:\Temp\cc2e91Wt.s:760    .text.FSMC_NANDStructInit:00000000 $t
  C:\Temp\cc2e91Wt.s:765    .text.FSMC_NANDStructInit:00000000 FSMC_NANDStructInit
  C:\Temp\cc2e91Wt.s:860    .text.FSMC_NANDCmd:00000000 $t
  C:\Temp\cc2e91Wt.s:865    .text.FSMC_NANDCmd:00000000 FSMC_NANDCmd
  C:\Temp\cc2e91Wt.s:951    .text.FSMC_NANDECCCmd:00000000 $t
  C:\Temp\cc2e91Wt.s:956    .text.FSMC_NANDECCCmd:00000000 FSMC_NANDECCCmd
  C:\Temp\cc2e91Wt.s:1042   .text.FSMC_GetECC:00000000 $t
  C:\Temp\cc2e91Wt.s:1047   .text.FSMC_GetECC:00000000 FSMC_GetECC
  C:\Temp\cc2e91Wt.s:1097   .text.FSMC_PCCARDDeInit:00000000 $t
  C:\Temp\cc2e91Wt.s:1102   .text.FSMC_PCCARDDeInit:00000000 FSMC_PCCARDDeInit
  C:\Temp\cc2e91Wt.s:1149   .text.FSMC_PCCARDInit:00000000 $t
  C:\Temp\cc2e91Wt.s:1154   .text.FSMC_PCCARDInit:00000000 FSMC_PCCARDInit
  C:\Temp\cc2e91Wt.s:1288   .text.FSMC_PCCARDStructInit:00000000 $t
  C:\Temp\cc2e91Wt.s:1293   .text.FSMC_PCCARDStructInit:00000000 FSMC_PCCARDStructInit
  C:\Temp\cc2e91Wt.s:1392   .text.FSMC_PCCARDCmd:00000000 $t
  C:\Temp\cc2e91Wt.s:1397   .text.FSMC_PCCARDCmd:00000000 FSMC_PCCARDCmd
  C:\Temp\cc2e91Wt.s:1451   .text.FSMC_ITConfig:00000000 $t
  C:\Temp\cc2e91Wt.s:1456   .text.FSMC_ITConfig:00000000 FSMC_ITConfig
  C:\Temp\cc2e91Wt.s:1580   .text.FSMC_GetFlagStatus:00000000 $t
  C:\Temp\cc2e91Wt.s:1585   .text.FSMC_GetFlagStatus:00000000 FSMC_GetFlagStatus
  C:\Temp\cc2e91Wt.s:1665   .text.FSMC_ClearFlag:00000000 $t
  C:\Temp\cc2e91Wt.s:1670   .text.FSMC_ClearFlag:00000000 FSMC_ClearFlag
  C:\Temp\cc2e91Wt.s:1744   .text.FSMC_GetITStatus:00000000 $t
  C:\Temp\cc2e91Wt.s:1749   .text.FSMC_GetITStatus:00000000 FSMC_GetITStatus
  C:\Temp\cc2e91Wt.s:1846   .text.FSMC_ClearITPendingBit:00000000 $t
  C:\Temp\cc2e91Wt.s:1851   .text.FSMC_ClearITPendingBit:00000000 FSMC_ClearITPendingBit
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
