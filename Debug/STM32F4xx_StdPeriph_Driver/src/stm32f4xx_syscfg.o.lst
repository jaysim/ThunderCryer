   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_syscfg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	SYSCFG_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	SYSCFG_DeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @file    stm32f4xx_syscfg.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief   This file provides firmware functions to manage the SYSCFG peripheral.
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  @verbatim
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          ===================================================================
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *                                 How to use this driver
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          ===================================================================
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *                  
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          This driver provides functions for:
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          1. Remapping the memory accessible in the code area using SYSCFG_MemoryRemapConfig()
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *              
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          2. Manage the EXTI lines connection to the GPIOs using SYSCFG_EXTILineConfig()
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          3. Select the ETHERNET media interface (RMII/RII) using SYSCFG_ETH_MediaInterfaceConfi
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  @note  SYSCFG APB clock must be enabled to get write access to SYSCFG registers,
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *                 
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  @endverbatim
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *      
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   ******************************************************************************
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @attention
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   ******************************************************************************
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Includes ------------------------------------------------------------------*/
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #include "stm32f4xx_syscfg.h"
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #include "stm32f4xx_rcc.h"
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @{
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /** @defgroup SYSCFG 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief SYSCFG driver modules
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @{
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */ 
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private typedef -----------------------------------------------------------*/
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private define ------------------------------------------------------------*/
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* ---  PMC Register ---*/ 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Alias word address of MII_RMII_SEL bit */ 
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define PMC_OFFSET                (SYSCFG_OFFSET + 0x04) 
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define MII_RMII_SEL_BitNumber    ((uint8_t)0x17) 
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define PMC_MII_RMII_SEL_BB       (PERIPH_BB_BASE + (PMC_OFFSET * 32) + (MII_RMII_SEL_BitNumber * 4
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* ---  CMPCR Register ---*/ 
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Alias word address of CMP_PD bit */ 
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20) 
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define CMP_PD_BitNumber          ((uint8_t)0x00) 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define CMPCR_CMP_PD_BB           (PERIPH_BB_BASE + (CMPCR_OFFSET * 32) + (CMP_PD_BitNumber * 4)) 
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private macro -------------------------------------------------------------*/
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private variables ---------------------------------------------------------*/
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private function prototypes -----------------------------------------------*/
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private functions ---------------------------------------------------------*/
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /** @defgroup SYSCFG_Private_Functions
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @{
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */ 
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Deinitializes the Alternate Functions (remap and EXTI configuration)
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *   registers to their default reset values.
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  None
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_DeInit(void)
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
  26              		.loc 1 87 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****    RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  38              		.loc 1 88 0
  39 0004 4FF48040 		mov	r0, #16384
  40 0008 4FF00101 		mov	r1, #1
  41 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****    RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
  42              		.loc 1 89 0
  43 0010 4FF48040 		mov	r0, #16384
  44 0014 4FF00001 		mov	r1, #0
  45 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
  46              		.loc 1 90 0
  47 001c 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51 001e 00BF     		.align	2
  52              		.global	SYSCFG_MemoryRemapConfig
  53              		.thumb
  54              		.thumb_func
  56              	SYSCFG_MemoryRemapConfig:
  57              	.LFB111:
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Changes the mapping of the specified pin.
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  SYSCFG_Memory: selects the memory remapping.
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         This parameter can be one of the following values:
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_Flash:       Main Flash memory mapped at 0x00000000  
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_SystemFlash: System Flash memory mapped at 0x00000000
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_FSMC:        FSMC (Bank1 (NOR/PSRAM 1 and 2) mapped at 0x000
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_SRAM:        Embedded SRAM (112kB) mapped at 0x00000000
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @note   In remap mode, the FSMC addressing is fixed to the remap address area only
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *        (Bank1 NOR/PSRAM 1 and NOR/PSRAM 2) and FSMC control registers are not
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         accessible. The FSMC remap function must be disabled to allows addressing
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         other memory devices through the FSMC and/or to access FSMC control
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         registers. 
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *        
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
  58              		.loc 1 110 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0020 80B4     		push	{r7}
  64              	.LCFI2:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0022 83B0     		sub	sp, sp, #12
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 16
  70 0024 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  73 0026 0346     		mov	r3, r0
  74 0028 FB71     		strb	r3, [r7, #7]
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
  75              		.loc 1 114 0
  76 002a 4FF46053 		mov	r3, #14336
  77 002e C4F20103 		movt	r3, 16385
  78 0032 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  79 0034 1A60     		str	r2, [r3, #0]
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
  80              		.loc 1 115 0
  81 0036 07F10C07 		add	r7, r7, #12
  82 003a BD46     		mov	sp, r7
  83 003c 80BC     		pop	{r7}
  84 003e 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE111:
  88              		.align	2
  89              		.global	SYSCFG_EXTILineConfig
  90              		.thumb
  91              		.thumb_func
  93              	SYSCFG_EXTILineConfig:
  94              	.LFB112:
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Selects the GPIO pin used as EXTI Line.
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  EXTI_PortSourceGPIOx : selects the GPIO port to be used as source for
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          EXTI lines where x can be (A..I).
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  EXTI_PinSourcex: specifies the EXTI line to be configured.
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *           This parameter can be EXTI_PinSourcex where x can be (0..15, except
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *           for EXTI_PortSourceGPIOI x can be (0..11).
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
  95              		.loc 1 127 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 16
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100 0040 90B4     		push	{r4, r7}
 101              	.LCFI5:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 7, -4
 104              		.cfi_offset 4, -8
 105 0042 84B0     		sub	sp, sp, #16
 106              	.LCFI6:
 107              		.cfi_def_cfa_offset 24
 108 0044 00AF     		add	r7, sp, #0
 109              	.LCFI7:
 110              		.cfi_def_cfa_register 7
 111 0046 0246     		mov	r2, r0
 112 0048 0B46     		mov	r3, r1
 113 004a FA71     		strb	r2, [r7, #7]
 114 004c BB71     		strb	r3, [r7, #6]
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   uint32_t tmp = 0x00;
 115              		.loc 1 128 0
 116 004e 4FF00003 		mov	r3, #0
 117 0052 FB60     		str	r3, [r7, #12]
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
 118              		.loc 1 134 0
 119 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 120 0056 03F00303 		and	r3, r3, #3
 121 005a 4FEA8303 		lsl	r3, r3, #2
 122 005e 4FF00F02 		mov	r2, #15
 123 0062 02FA03F3 		lsl	r3, r2, r3
 124 0066 FB60     		str	r3, [r7, #12]
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
 125              		.loc 1 135 0
 126 0068 4FF46053 		mov	r3, #14336
 127 006c C4F20103 		movt	r3, 16385
 128 0070 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 129 0072 4FEA9202 		lsr	r2, r2, #2
 130 0076 D2B2     		uxtb	r2, r2
 131 0078 1046     		mov	r0, r2
 132 007a 4FF46052 		mov	r2, #14336
 133 007e C4F20102 		movt	r2, 16385
 134 0082 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 135 0084 4FEA9101 		lsr	r1, r1, #2
 136 0088 C9B2     		uxtb	r1, r1
 137 008a 01F10201 		add	r1, r1, #2
 138 008e 52F82120 		ldr	r2, [r2, r1, lsl #2]
 139 0092 1146     		mov	r1, r2
 140 0094 FA68     		ldr	r2, [r7, #12]
 141 0096 6FEA0202 		mvn	r2, r2
 142 009a 1140     		ands	r1, r1, r2
 143 009c 00F10202 		add	r2, r0, #2
 144 00a0 43F82210 		str	r1, [r3, r2, lsl #2]
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_Pin
 145              		.loc 1 136 0
 146 00a4 4FF46053 		mov	r3, #14336
 147 00a8 C4F20103 		movt	r3, 16385
 148 00ac BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 149 00ae 4FEA9202 		lsr	r2, r2, #2
 150 00b2 D2B2     		uxtb	r2, r2
 151 00b4 1046     		mov	r0, r2
 152 00b6 4FF46052 		mov	r2, #14336
 153 00ba C4F20102 		movt	r2, 16385
 154 00be B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 155 00c0 4FEA9101 		lsr	r1, r1, #2
 156 00c4 C9B2     		uxtb	r1, r1
 157 00c6 01F10201 		add	r1, r1, #2
 158 00ca 52F82120 		ldr	r2, [r2, r1, lsl #2]
 159 00ce 1146     		mov	r1, r2
 160 00d0 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 161 00d2 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 162 00d4 02F00302 		and	r2, r2, #3
 163 00d8 4FEA8202 		lsl	r2, r2, #2
 164 00dc 04FA02F2 		lsl	r2, r4, r2
 165 00e0 1143     		orrs	r1, r1, r2
 166 00e2 00F10202 		add	r2, r0, #2
 167 00e6 43F82210 		str	r1, [r3, r2, lsl #2]
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 168              		.loc 1 137 0
 169 00ea 07F11007 		add	r7, r7, #16
 170 00ee BD46     		mov	sp, r7
 171 00f0 90BC     		pop	{r4, r7}
 172 00f2 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE112:
 176              		.align	2
 177              		.global	SYSCFG_ETH_MediaInterfaceConfig
 178              		.thumb
 179              		.thumb_func
 181              	SYSCFG_ETH_MediaInterfaceConfig:
 182              	.LFB113:
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Selects the ETHERNET media interface 
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  SYSCFG_ETH_MediaInterface: specifies the Media Interface mode. 
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          This parameter can be one of the following values: 
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_ETH_MediaInterface_MII: MII mode selected
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_ETH_MediaInterface_RMII: RMII mode selected 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None 
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** { 
 183              		.loc 1 148 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 8
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188 00f4 80B4     		push	{r7}
 189              	.LCFI8:
 190              		.cfi_def_cfa_offset 4
 191              		.cfi_offset 7, -4
 192 00f6 83B0     		sub	sp, sp, #12
 193              	.LCFI9:
 194              		.cfi_def_cfa_offset 16
 195 00f8 00AF     		add	r7, sp, #0
 196              	.LCFI10:
 197              		.cfi_def_cfa_register 7
 198 00fa 7860     		str	r0, [r7, #4]
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Configure MII_RMII selection bit */ 
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
 199              		.loc 1 151 0
 200 00fc 4FF0DC03 		mov	r3, #220
 201 0100 C4F22723 		movt	r3, 16935
 202 0104 7A68     		ldr	r2, [r7, #4]
 203 0106 1A60     		str	r2, [r3, #0]
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 204              		.loc 1 152 0
 205 0108 07F10C07 		add	r7, r7, #12
 206 010c BD46     		mov	sp, r7
 207 010e 80BC     		pop	{r7}
 208 0110 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE113:
 212 0112 00BF     		.align	2
 213              		.global	SYSCFG_CompensationCellCmd
 214              		.thumb
 215              		.thumb_func
 217              	SYSCFG_CompensationCellCmd:
 218              	.LFB114:
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Enables or disables the I/O Compensation Cell.
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @note   The I/O compensation cell can be used only when the device supply
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  NewState: new state of the I/O Compensation Cell.
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          This parameter can be one of the following values:
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg ENABLE: I/O compensation cell enabled  
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg DISABLE: I/O compensation cell power-down mode  
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_CompensationCellCmd(FunctionalState NewState)
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
 219              		.loc 1 165 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 8
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224 0114 80B4     		push	{r7}
 225              	.LCFI11:
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 0116 83B0     		sub	sp, sp, #12
 229              	.LCFI12:
 230              		.cfi_def_cfa_offset 16
 231 0118 00AF     		add	r7, sp, #0
 232              	.LCFI13:
 233              		.cfi_def_cfa_register 7
 234 011a 0346     		mov	r3, r0
 235 011c FB71     		strb	r3, [r7, #7]
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
 236              		.loc 1 169 0
 237 011e 4FF48063 		mov	r3, #1024
 238 0122 C4F22723 		movt	r3, 16935
 239 0126 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 240 0128 1A60     		str	r2, [r3, #0]
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 241              		.loc 1 170 0
 242 012a 07F10C07 		add	r7, r7, #12
 243 012e BD46     		mov	sp, r7
 244 0130 80BC     		pop	{r7}
 245 0132 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE114:
 249              		.align	2
 250              		.global	SYSCFG_GetCompensationCellStatus
 251              		.thumb
 252              		.thumb_func
 254              	SYSCFG_GetCompensationCellStatus:
 255              	.LFB115:
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Checks whether the I/O Compensation Cell ready flag is set or not.
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  None
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval The new state of the I/O Compensation Cell ready flag (SET or RESET)
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** FlagStatus SYSCFG_GetCompensationCellStatus(void)
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
 256              		.loc 1 178 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 8
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261 0134 80B4     		push	{r7}
 262              	.LCFI14:
 263              		.cfi_def_cfa_offset 4
 264              		.cfi_offset 7, -4
 265 0136 83B0     		sub	sp, sp, #12
 266              	.LCFI15:
 267              		.cfi_def_cfa_offset 16
 268 0138 00AF     		add	r7, sp, #0
 269              	.LCFI16:
 270              		.cfi_def_cfa_register 7
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   FlagStatus bitstatus = RESET;
 271              		.loc 1 179 0
 272 013a 4FF00003 		mov	r3, #0
 273 013e FB71     		strb	r3, [r7, #7]
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****     
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
 274              		.loc 1 181 0
 275 0140 4FF46053 		mov	r3, #14336
 276 0144 C4F20103 		movt	r3, 16385
 277 0148 1B6A     		ldr	r3, [r3, #32]
 278 014a 03F48073 		and	r3, r3, #256
 279 014e 002B     		cmp	r3, #0
 280 0150 03D0     		beq	.L7
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   {
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****     bitstatus = SET;
 281              		.loc 1 183 0
 282 0152 4FF00103 		mov	r3, #1
 283 0156 FB71     		strb	r3, [r7, #7]
 284 0158 02E0     		b	.L8
 285              	.L7:
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   }
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   else
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   {
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****     bitstatus = RESET;
 286              		.loc 1 187 0
 287 015a 4FF00003 		mov	r3, #0
 288 015e FB71     		strb	r3, [r7, #7]
 289              	.L8:
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   }
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   return bitstatus;
 290              		.loc 1 189 0
 291 0160 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 292              		.loc 1 190 0
 293 0162 1846     		mov	r0, r3
 294 0164 07F10C07 		add	r7, r7, #12
 295 0168 BD46     		mov	sp, r7
 296 016a 80BC     		pop	{r7}
 297 016c 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE115:
 301              	.Letext0:
 302              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 303              		.file 3 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm3
 304              		.file 4 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_syscfg.c
C:\Users\Alex\AppData\Local\Temp\cchPnE9q.s:18     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cchPnE9q.s:23     .text:00000000 SYSCFG_DeInit
C:\Users\Alex\AppData\Local\Temp\cchPnE9q.s:56     .text:00000020 SYSCFG_MemoryRemapConfig
C:\Users\Alex\AppData\Local\Temp\cchPnE9q.s:93     .text:00000040 SYSCFG_EXTILineConfig
C:\Users\Alex\AppData\Local\Temp\cchPnE9q.s:181    .text:000000f4 SYSCFG_ETH_MediaInterfaceConfig
C:\Users\Alex\AppData\Local\Temp\cchPnE9q.s:217    .text:00000114 SYSCFG_CompensationCellCmd
C:\Users\Alex\AppData\Local\Temp\cchPnE9q.s:254    .text:00000134 SYSCFG_GetCompensationCellStatus
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
