   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_syscfg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SYSCFG_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	SYSCFG_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	SYSCFG_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @file    stm32f4xx_syscfg.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief   This file provides firmware functions to manage the SYSCFG peripheral.
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  @verbatim
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          ===================================================================
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *                                 How to use this driver
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          ===================================================================
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *                  
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          This driver provides functions for:
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          1. Remapping the memory accessible in the code area using SYSCFG_MemoryRemapConfig()
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *              
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          2. Manage the EXTI lines connection to the GPIOs using SYSCFG_EXTILineConfig()
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          3. Select the ETHERNET media interface (RMII/RII) using SYSCFG_ETH_MediaInterfaceConfi
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  @note  SYSCFG APB clock must be enabled to get write access to SYSCFG registers,
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *                 
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  @endverbatim
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *      
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   ******************************************************************************
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @attention
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   ******************************************************************************
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Includes ------------------------------------------------------------------*/
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #include "stm32f4xx_syscfg.h"
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #include "stm32f4xx_rcc.h"
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @{
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /** @defgroup SYSCFG 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief SYSCFG driver modules
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @{
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */ 
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private typedef -----------------------------------------------------------*/
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private define ------------------------------------------------------------*/
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* ---  PMC Register ---*/ 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Alias word address of MII_RMII_SEL bit */ 
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define PMC_OFFSET                (SYSCFG_OFFSET + 0x04) 
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define MII_RMII_SEL_BitNumber    ((uint8_t)0x17) 
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define PMC_MII_RMII_SEL_BB       (PERIPH_BB_BASE + (PMC_OFFSET * 32) + (MII_RMII_SEL_BitNumber * 4
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* ---  CMPCR Register ---*/ 
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Alias word address of CMP_PD bit */ 
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20) 
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define CMP_PD_BitNumber          ((uint8_t)0x00) 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define CMPCR_CMP_PD_BB           (PERIPH_BB_BASE + (CMPCR_OFFSET * 32) + (CMP_PD_BitNumber * 4)) 
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private macro -------------------------------------------------------------*/
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private variables ---------------------------------------------------------*/
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private function prototypes -----------------------------------------------*/
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private functions ---------------------------------------------------------*/
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /** @defgroup SYSCFG_Private_Functions
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @{
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */ 
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Deinitializes the Alternate Functions (remap and EXTI configuration)
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *   registers to their default reset values.
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  None
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_DeInit(void)
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
  27              		.loc 1 87 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****    RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  39              		.loc 1 88 0
  40 0004 4FF48040 		mov	r0, #16384
  41 0008 4FF00101 		mov	r1, #1
  42 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****    RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
  43              		.loc 1 89 0
  44 0010 4FF48040 		mov	r0, #16384
  45 0014 4FF00001 		mov	r1, #0
  46 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
  47              		.loc 1 90 0
  48 001c 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE110:
  52 001e 00BF     		.section	.text.SYSCFG_MemoryRemapConfig,"ax",%progbits
  53              		.align	2
  54              		.global	SYSCFG_MemoryRemapConfig
  55              		.thumb
  56              		.thumb_func
  58              	SYSCFG_MemoryRemapConfig:
  59              	.LFB111:
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Changes the mapping of the specified pin.
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  SYSCFG_Memory: selects the memory remapping.
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         This parameter can be one of the following values:
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_Flash:       Main Flash memory mapped at 0x00000000  
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_SystemFlash: System Flash memory mapped at 0x00000000
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_FSMC:        FSMC (Bank1 (NOR/PSRAM 1 and 2) mapped at 0x000
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_SRAM:        Embedded SRAM (112kB) mapped at 0x00000000
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
  60              		.loc 1 103 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 8
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65 0000 80B4     		push	{r7}
  66              	.LCFI2:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 7, -4
  69 0002 83B0     		sub	sp, sp, #12
  70              	.LCFI3:
  71              		.cfi_def_cfa_offset 16
  72 0004 00AF     		add	r7, sp, #0
  73              	.LCFI4:
  74              		.cfi_def_cfa_register 7
  75 0006 0346     		mov	r3, r0
  76 0008 FB71     		strb	r3, [r7, #7]
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
  77              		.loc 1 107 0
  78 000a 4FF46053 		mov	r3, #14336
  79 000e C4F20103 		movt	r3, 16385
  80 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  81 0014 1A60     		str	r2, [r3, #0]
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
  82              		.loc 1 108 0
  83 0016 07F10C07 		add	r7, r7, #12
  84 001a BD46     		mov	sp, r7
  85 001c 80BC     		pop	{r7}
  86 001e 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE111:
  90              		.section	.text.SYSCFG_EXTILineConfig,"ax",%progbits
  91              		.align	2
  92              		.global	SYSCFG_EXTILineConfig
  93              		.thumb
  94              		.thumb_func
  96              	SYSCFG_EXTILineConfig:
  97              	.LFB112:
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Selects the GPIO pin used as EXTI Line.
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  EXTI_PortSourceGPIOx : selects the GPIO port to be used as source for
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          EXTI lines where x can be (A..I).
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  EXTI_PinSourcex: specifies the EXTI line to be configured.
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *           This parameter can be EXTI_PinSourcex where x can be (0..15, except
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *           for EXTI_PortSourceGPIOI x can be (0..11).
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
  98              		.loc 1 120 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 16
 101              		@ frame_needed = 1, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103 0000 90B4     		push	{r4, r7}
 104              	.LCFI5:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -4
 107              		.cfi_offset 4, -8
 108 0002 84B0     		sub	sp, sp, #16
 109              	.LCFI6:
 110              		.cfi_def_cfa_offset 24
 111 0004 00AF     		add	r7, sp, #0
 112              	.LCFI7:
 113              		.cfi_def_cfa_register 7
 114 0006 0246     		mov	r2, r0
 115 0008 0B46     		mov	r3, r1
 116 000a FA71     		strb	r2, [r7, #7]
 117 000c BB71     		strb	r3, [r7, #6]
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   uint32_t tmp = 0x00;
 118              		.loc 1 121 0
 119 000e 4FF00003 		mov	r3, #0
 120 0012 FB60     		str	r3, [r7, #12]
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
 121              		.loc 1 127 0
 122 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 123 0016 03F00303 		and	r3, r3, #3
 124 001a 4FEA8303 		lsl	r3, r3, #2
 125 001e 4FF00F02 		mov	r2, #15
 126 0022 02FA03F3 		lsl	r3, r2, r3
 127 0026 FB60     		str	r3, [r7, #12]
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
 128              		.loc 1 128 0
 129 0028 4FF46053 		mov	r3, #14336
 130 002c C4F20103 		movt	r3, 16385
 131 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 132 0032 4FEA9202 		lsr	r2, r2, #2
 133 0036 D2B2     		uxtb	r2, r2
 134 0038 1046     		mov	r0, r2
 135 003a 4FF46052 		mov	r2, #14336
 136 003e C4F20102 		movt	r2, 16385
 137 0042 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 138 0044 4FEA9101 		lsr	r1, r1, #2
 139 0048 C9B2     		uxtb	r1, r1
 140 004a 01F10201 		add	r1, r1, #2
 141 004e 52F82120 		ldr	r2, [r2, r1, lsl #2]
 142 0052 1146     		mov	r1, r2
 143 0054 FA68     		ldr	r2, [r7, #12]
 144 0056 6FEA0202 		mvn	r2, r2
 145 005a 1140     		ands	r1, r1, r2
 146 005c 00F10202 		add	r2, r0, #2
 147 0060 43F82210 		str	r1, [r3, r2, lsl #2]
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_Pin
 148              		.loc 1 129 0
 149 0064 4FF46053 		mov	r3, #14336
 150 0068 C4F20103 		movt	r3, 16385
 151 006c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 152 006e 4FEA9202 		lsr	r2, r2, #2
 153 0072 D2B2     		uxtb	r2, r2
 154 0074 1046     		mov	r0, r2
 155 0076 4FF46052 		mov	r2, #14336
 156 007a C4F20102 		movt	r2, 16385
 157 007e B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 158 0080 4FEA9101 		lsr	r1, r1, #2
 159 0084 C9B2     		uxtb	r1, r1
 160 0086 01F10201 		add	r1, r1, #2
 161 008a 52F82120 		ldr	r2, [r2, r1, lsl #2]
 162 008e 1146     		mov	r1, r2
 163 0090 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 164 0092 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 165 0094 02F00302 		and	r2, r2, #3
 166 0098 4FEA8202 		lsl	r2, r2, #2
 167 009c 04FA02F2 		lsl	r2, r4, r2
 168 00a0 1143     		orrs	r1, r1, r2
 169 00a2 00F10202 		add	r2, r0, #2
 170 00a6 43F82210 		str	r1, [r3, r2, lsl #2]
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 171              		.loc 1 130 0
 172 00aa 07F11007 		add	r7, r7, #16
 173 00ae BD46     		mov	sp, r7
 174 00b0 90BC     		pop	{r4, r7}
 175 00b2 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE112:
 179              		.section	.text.SYSCFG_ETH_MediaInterfaceConfig,"ax",%progbits
 180              		.align	2
 181              		.global	SYSCFG_ETH_MediaInterfaceConfig
 182              		.thumb
 183              		.thumb_func
 185              	SYSCFG_ETH_MediaInterfaceConfig:
 186              	.LFB113:
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Selects the ETHERNET media interface 
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  SYSCFG_ETH_MediaInterface: specifies the Media Interface mode. 
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          This parameter can be one of the following values: 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_ETH_MediaInterface_MII: MII mode selected
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_ETH_MediaInterface_RMII: RMII mode selected 
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None 
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** { 
 187              		.loc 1 141 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 8
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 192 0000 80B4     		push	{r7}
 193              	.LCFI8:
 194              		.cfi_def_cfa_offset 4
 195              		.cfi_offset 7, -4
 196 0002 83B0     		sub	sp, sp, #12
 197              	.LCFI9:
 198              		.cfi_def_cfa_offset 16
 199 0004 00AF     		add	r7, sp, #0
 200              	.LCFI10:
 201              		.cfi_def_cfa_register 7
 202 0006 7860     		str	r0, [r7, #4]
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Configure MII_RMII selection bit */ 
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
 203              		.loc 1 144 0
 204 0008 4FF0DC03 		mov	r3, #220
 205 000c C4F22723 		movt	r3, 16935
 206 0010 7A68     		ldr	r2, [r7, #4]
 207 0012 1A60     		str	r2, [r3, #0]
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 208              		.loc 1 145 0
 209 0014 07F10C07 		add	r7, r7, #12
 210 0018 BD46     		mov	sp, r7
 211 001a 80BC     		pop	{r7}
 212 001c 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE113:
 216 001e 00BF     		.section	.text.SYSCFG_CompensationCellCmd,"ax",%progbits
 217              		.align	2
 218              		.global	SYSCFG_CompensationCellCmd
 219              		.thumb
 220              		.thumb_func
 222              	SYSCFG_CompensationCellCmd:
 223              	.LFB114:
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Enables or disables the I/O Compensation Cell.
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @note   The I/O compensation cell can be used only when the device supply
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  NewState: new state of the I/O Compensation Cell.
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          This parameter can be one of the following values:
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg ENABLE: I/O compensation cell enabled  
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg DISABLE: I/O compensation cell power-down mode  
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_CompensationCellCmd(FunctionalState NewState)
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
 224              		.loc 1 158 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 8
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              	.LCFI11:
 231              		.cfi_def_cfa_offset 4
 232              		.cfi_offset 7, -4
 233 0002 83B0     		sub	sp, sp, #12
 234              	.LCFI12:
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              	.LCFI13:
 238              		.cfi_def_cfa_register 7
 239 0006 0346     		mov	r3, r0
 240 0008 FB71     		strb	r3, [r7, #7]
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
 241              		.loc 1 162 0
 242 000a 4FF48063 		mov	r3, #1024
 243 000e C4F22723 		movt	r3, 16935
 244 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 245 0014 1A60     		str	r2, [r3, #0]
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 246              		.loc 1 163 0
 247 0016 07F10C07 		add	r7, r7, #12
 248 001a BD46     		mov	sp, r7
 249 001c 80BC     		pop	{r7}
 250 001e 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE114:
 254              		.section	.text.SYSCFG_GetCompensationCellStatus,"ax",%progbits
 255              		.align	2
 256              		.global	SYSCFG_GetCompensationCellStatus
 257              		.thumb
 258              		.thumb_func
 260              	SYSCFG_GetCompensationCellStatus:
 261              	.LFB115:
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Checks whether the I/O Compensation Cell ready flag is set or not.
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  None
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval The new state of the I/O Compensation Cell ready flag (SET or RESET)
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** FlagStatus SYSCFG_GetCompensationCellStatus(void)
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
 262              		.loc 1 171 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267 0000 80B4     		push	{r7}
 268              	.LCFI14:
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 83B0     		sub	sp, sp, #12
 272              	.LCFI15:
 273              		.cfi_def_cfa_offset 16
 274 0004 00AF     		add	r7, sp, #0
 275              	.LCFI16:
 276              		.cfi_def_cfa_register 7
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   FlagStatus bitstatus = RESET;
 277              		.loc 1 172 0
 278 0006 4FF00003 		mov	r3, #0
 279 000a FB71     		strb	r3, [r7, #7]
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****     
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
 280              		.loc 1 174 0
 281 000c 4FF46053 		mov	r3, #14336
 282 0010 C4F20103 		movt	r3, 16385
 283 0014 1B6A     		ldr	r3, [r3, #32]
 284 0016 03F48073 		and	r3, r3, #256
 285 001a 002B     		cmp	r3, #0
 286 001c 03D0     		beq	.L7
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   {
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****     bitstatus = SET;
 287              		.loc 1 176 0
 288 001e 4FF00103 		mov	r3, #1
 289 0022 FB71     		strb	r3, [r7, #7]
 290 0024 02E0     		b	.L8
 291              	.L7:
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   }
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   else
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   {
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****     bitstatus = RESET;
 292              		.loc 1 180 0
 293 0026 4FF00003 		mov	r3, #0
 294 002a FB71     		strb	r3, [r7, #7]
 295              	.L8:
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   }
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   return bitstatus;
 296              		.loc 1 182 0
 297 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 298              		.loc 1 183 0
 299 002e 1846     		mov	r0, r3
 300 0030 07F10C07 		add	r7, r7, #12
 301 0034 BD46     		mov	sp, r7
 302 0036 80BC     		pop	{r7}
 303 0038 7047     		bx	lr
 304              		.cfi_endproc
 305              	.LFE115:
 307 003a 00BF     		.text
 308              	.Letext0:
 309              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 310              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 311              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_syscfg.c
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:19     .text.SYSCFG_DeInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:24     .text.SYSCFG_DeInit:00000000 SYSCFG_DeInit
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:53     .text.SYSCFG_MemoryRemapConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:58     .text.SYSCFG_MemoryRemapConfig:00000000 SYSCFG_MemoryRemapConfig
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:91     .text.SYSCFG_EXTILineConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:96     .text.SYSCFG_EXTILineConfig:00000000 SYSCFG_EXTILineConfig
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:180    .text.SYSCFG_ETH_MediaInterfaceConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:185    .text.SYSCFG_ETH_MediaInterfaceConfig:00000000 SYSCFG_ETH_MediaInterfaceConfig
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:217    .text.SYSCFG_CompensationCellCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:222    .text.SYSCFG_CompensationCellCmd:00000000 SYSCFG_CompensationCellCmd
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:255    .text.SYSCFG_GetCompensationCellStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccD3HRBi.s:260    .text.SYSCFG_GetCompensationCellStatus:00000000 SYSCFG_GetCompensationCellStatus
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
