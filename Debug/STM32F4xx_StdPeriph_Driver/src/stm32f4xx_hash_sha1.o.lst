   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_hash_sha1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HASH_SHA1,"ax",%progbits
  19              		.align	2
  20              		.global	HASH_SHA1
  21              		.thumb
  22              		.thumb_func
  24              	HASH_SHA1:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @file    stm32f4xx_hash_sha1.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief   This file provides high level functions to compute the HASH SHA1 and
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          HMAC SHA1 Digest of an input message.
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          It uses the stm32f4xx_hash.c/.h drivers to access the STM32F4xx HASH
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          peripheral.
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *  @verbatim
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * 
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          ===================================================================
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *                                   How to use this driver
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          ===================================================================
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          1. Enable The HASH controller clock using 
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE); function.
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          2. Calculate the HASH SHA1 Digest using HASH_SHA1() function.
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          3. Calculate the HMAC SHA1 Digest using HMAC_SHA1() function.
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *  @endverbatim
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @attention
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Includes ------------------------------------------------------------------*/
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** #include "stm32f4xx_hash.h"
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief HASH driver modules
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private typedef -----------------------------------------------------------*/
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private define ------------------------------------------------------------*/
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** #define SHA1BUSY_TIMEOUT    ((uint32_t) 0x00010000)
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private macro -------------------------------------------------------------*/
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private variables ---------------------------------------------------------*/
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private function prototypes -----------------------------------------------*/
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private functions ---------------------------------------------------------*/
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH_Private_Functions
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */ 
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH_Group6 High Level SHA1 functions
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  *  @brief   High Level SHA1 Hash and HMAC functions 
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** @verbatim   
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  ===============================================================================
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****                           High Level SHA1 Hash and HMAC functions
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  ===============================================================================
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** @endverbatim
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /**
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief  Compute the HASH SHA1 digest.
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Input: pointer to the Input buffer to be treated.
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Ilen: length of the Input buffer.
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Output: the returned digest
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @retval An ErrorStatus enumeration value:
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - SUCCESS: digest computation done
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - ERROR: digest computation failed
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** ErrorStatus HASH_SHA1(uint8_t *Input, uint32_t Ilen, uint8_t Output[20])
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** {
  27              		.loc 1 88 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 120
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 90B5     		push	{r4, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 4, -12
  37 0002 9FB0     		sub	sp, sp, #124
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 136
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_InitTypeDef SHA1_HASH_InitStructure;
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_MsgDigest SHA1_MessageDigest;
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitsdata = 0;
  46              		.loc 1 91 0
  47 000c 4FF00003 		mov	r3, #0
  48 0010 FB82     		strh	r3, [r7, #22]	@ movhi
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t i = 0;
  49              		.loc 1 92 0
  50 0012 4FF00003 		mov	r3, #0
  51 0016 7B67     		str	r3, [r7, #116]
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint32_t counter = 0;
  52              		.loc 1 93 0
  53 0018 4FF00003 		mov	r3, #0
  54 001c 3B61     		str	r3, [r7, #16]
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t busystatus = 0;
  55              		.loc 1 94 0
  56 001e 4FF00003 		mov	r3, #0
  57 0022 BB66     		str	r3, [r7, #104]
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ErrorStatus status = SUCCESS;
  58              		.loc 1 95 0
  59 0024 4FF00103 		mov	r3, #1
  60 0028 87F87330 		strb	r3, [r7, #115]
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t inputaddr  = (uint32_t)Input;
  61              		.loc 1 96 0
  62 002c FB68     		ldr	r3, [r7, #12]
  63 002e FB66     		str	r3, [r7, #108]
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t outputaddr = (uint32_t)Output;
  64              		.loc 1 97 0
  65 0030 7B68     		ldr	r3, [r7, #4]
  66 0032 7B66     		str	r3, [r7, #100]
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Input data */
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
  67              		.loc 1 100 0
  68 0034 BB68     		ldr	r3, [r7, #8]
  69 0036 9BB2     		uxth	r3, r3
  70 0038 03F00303 		and	r3, r3, #3
  71 003c 9BB2     		uxth	r3, r3
  72 003e 4FEAC303 		lsl	r3, r3, #3
  73 0042 9BB2     		uxth	r3, r3
  74 0044 FB82     		strh	r3, [r7, #22]	@ movhi
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH peripheral initialization */
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_DeInit();
  75              		.loc 1 103 0
  76 0046 FFF7FEFF 		bl	HASH_DeInit
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH Configuration */
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
  77              		.loc 1 106 0
  78 004a 4FF00003 		mov	r3, #0
  79 004e FB62     		str	r3, [r7, #44]
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HASH;
  80              		.loc 1 107 0
  81 0050 4FF00003 		mov	r3, #0
  82 0054 3B63     		str	r3, [r7, #48]
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
  83              		.loc 1 108 0
  84 0056 4FF02003 		mov	r3, #32
  85 005a 7B63     		str	r3, [r7, #52]
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_Init(&SHA1_HASH_InitStructure);
  86              		.loc 1 109 0
  87 005c 07F12C03 		add	r3, r7, #44
  88 0060 1846     		mov	r0, r3
  89 0062 FFF7FEFF 		bl	HASH_Init
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Configure the number of valid bits in last word of the data */
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
  90              		.loc 1 112 0
  91 0066 FB8A     		ldrh	r3, [r7, #22]	@ movhi
  92 0068 9BB2     		uxth	r3, r3
  93 006a 1846     		mov	r0, r3
  94 006c FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Write the Input block in the IN FIFO */
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Ilen; i+=4)
  95              		.loc 1 115 0
  96 0070 4FF00003 		mov	r3, #0
  97 0074 7B67     		str	r3, [r7, #116]
  98 0076 0CE0     		b	.L2
  99              	.L3:
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_DataIn(*(uint32_t*)inputaddr);
 100              		.loc 1 117 0 discriminator 2
 101 0078 FB6E     		ldr	r3, [r7, #108]
 102 007a 1B68     		ldr	r3, [r3, #0]
 103 007c 1846     		mov	r0, r3
 104 007e FFF7FEFF 		bl	HASH_DataIn
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     inputaddr+=4;
 105              		.loc 1 118 0 discriminator 2
 106 0082 FB6E     		ldr	r3, [r7, #108]
 107 0084 03F10403 		add	r3, r3, #4
 108 0088 FB66     		str	r3, [r7, #108]
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Ilen; i+=4)
 109              		.loc 1 115 0 discriminator 2
 110 008a 7B6F     		ldr	r3, [r7, #116]
 111 008c 03F10403 		add	r3, r3, #4
 112 0090 7B67     		str	r3, [r7, #116]
 113              	.L2:
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Ilen; i+=4)
 114              		.loc 1 115 0 is_stmt 0 discriminator 1
 115 0092 7A6F     		ldr	r2, [r7, #116]
 116 0094 BB68     		ldr	r3, [r7, #8]
 117 0096 9A42     		cmp	r2, r3
 118 0098 EED3     		bcc	.L3
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Start the HASH processor */
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_StartDigest();
 119              		.loc 1 122 0 is_stmt 1
 120 009a FFF7FEFF 		bl	HASH_StartDigest
 121              	.L5:
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* wait until the Busy flag is RESET */
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   do
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 122              		.loc 1 127 0 discriminator 1
 123 009e 4FF00800 		mov	r0, #8
 124 00a2 FFF7FEFF 		bl	HASH_GetFlagStatus
 125 00a6 0346     		mov	r3, r0
 126 00a8 BB66     		str	r3, [r7, #104]
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     counter++;
 127              		.loc 1 128 0 discriminator 1
 128 00aa 3B69     		ldr	r3, [r7, #16]
 129 00ac 03F10103 		add	r3, r3, #1
 130 00b0 3B61     		str	r3, [r7, #16]
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 131              		.loc 1 129 0 discriminator 1
 132 00b2 3B69     		ldr	r3, [r7, #16]
 133 00b4 B3F5803F 		cmp	r3, #65536
 134 00b8 02D0     		beq	.L4
 135 00ba BB6E     		ldr	r3, [r7, #104]
 136 00bc 002B     		cmp	r3, #0
 137 00be EED1     		bne	.L5
 138              	.L4:
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   if (busystatus != RESET)
 139              		.loc 1 131 0
 140 00c0 BB6E     		ldr	r3, [r7, #104]
 141 00c2 002B     		cmp	r3, #0
 142 00c4 04D0     		beq	.L6
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****      status = ERROR;
 143              		.loc 1 133 0
 144 00c6 4FF00003 		mov	r3, #0
 145 00ca 87F87330 		strb	r3, [r7, #115]
 146 00ce 3CE0     		b	.L7
 147              	.L6:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   else
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Read the message digest */
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_GetDigest(&SHA1_MessageDigest);
 148              		.loc 1 138 0
 149 00d0 07F11803 		add	r3, r7, #24
 150 00d4 1846     		mov	r0, r3
 151 00d6 FFF7FEFF 		bl	HASH_GetDigest
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 152              		.loc 1 139 0
 153 00da 7B6E     		ldr	r3, [r7, #100]
 154 00dc BA69     		ldr	r2, [r7, #24]
 155 00de 3A66     		str	r2, [r7, #96]
 156              	.LBB22:
 157              	.LBB23:
 158              		.file 2 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Incl
   1:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /**************************************************************************//**
   2:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @file     core_cmInstr.h
   3:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @version  V2.10
   5:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @date     19. July 2011
   6:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  *
   7:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @note
   8:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  *
  10:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @par
  11:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  *
  15:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @par
  16:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  *
  22:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  ******************************************************************************/
  23:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  24:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  27:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  28:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   Access to dedicated instructions
  31:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   @{
  32:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** */
  33:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  34:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /* ARM armcc specific functions */
  36:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  37:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #endif
  40:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  41:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  42:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  No Operation
  43:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  44:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  46:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __NOP                             __nop
  47:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  48:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  49:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  51:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     until one of a number of events occurs.
  53:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  54:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __WFI                             __wfi
  55:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  56:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  57:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Event
  58:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  59:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  62:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __WFE                             __wfe
  63:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  64:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  65:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Send Event
  66:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  67:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  69:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __SEV                             __sev
  70:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  71:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  72:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  74:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     memory, after the instruction has been completed.
  77:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  78:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  80:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  81:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  83:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  86:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  88:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  89:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  91:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  94:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  96:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  97:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  99:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 101:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 103:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 104:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __REV                             __rev
 105:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 106:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 107:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 109:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 111:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 113:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 114:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 116:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   rev16 r0, r0
 117:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   bx lr
 118:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 119:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 120:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 121:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 123:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 125:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 127:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 128:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 130:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   revsh r0, r0
 131:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   bx lr
 132:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 133:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 134:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 135:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 137:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 139:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 141:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 143:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 144:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __RBIT                            __rbit
 145:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 146:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 147:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 149:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 151:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 154:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 156:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 157:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 159:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 161:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 164:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 166:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 167:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 169:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 171:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 174:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 176:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 177:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 179:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 181:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 182:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 184:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 185:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 186:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 188:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 189:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 191:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 193:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 194:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 196:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 197:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 198:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 200:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 201:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 203:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 205:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 206:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 208:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 209:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 210:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 212:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 213:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 215:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 217:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 218:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __CLREX                           __clrex
 219:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 220:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 221:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Signed Saturate
 222:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 223:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function saturates a signed value.
 224:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 225:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return             Saturated value
 228:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 229:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __SSAT                            __ssat
 230:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 231:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 232:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 234:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function saturates an unsigned value.
 235:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 236:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return             Saturated value
 239:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 240:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __USAT                            __usat
 241:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 242:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 243:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Count leading zeros
 244:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 245:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 247:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return             number of leading zeros in value
 249:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 250:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __CLZ                             __clz 
 251:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 252:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 254:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 255:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 256:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /* IAR iccarm specific functions */
 258:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 259:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #include <cmsis_iar.h>
 260:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 261:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 262:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /* GNU gcc specific functions */
 264:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 265:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  No Operation
 266:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 267:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 269:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 271:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("nop");
 272:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 273:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 274:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 275:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 277:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     until one of a number of events occurs.
 279:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 280:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 282:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfi");
 283:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 284:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 285:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 286:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Event
 287:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 288:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 291:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 293:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfe");
 294:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 295:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 296:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 297:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Send Event
 298:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 299:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 301:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 303:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("sev");
 304:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 305:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 306:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 307:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 309:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     memory, after the instruction has been completed.
 312:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 313:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 315:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("isb");
 316:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 317:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 318:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 319:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 321:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 324:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 326:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("dsb");
 327:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 328:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 329:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 330:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 332:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 335:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
 336:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 337:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("dmb");
 338:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 339:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 340:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 341:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 343:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 345:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 347:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 348:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 350:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   uint32_t result;
 351:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 159              		.loc 2 352 0
 160 00e0 3A6E     		ldr	r2, [r7, #96]
 161              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 162 00e2 14BA     		rev r4, r2
 163              	@ 0 "" 2
 164              		.thumb
 165 00e4 FC65     		str	r4, [r7, #92]
 353:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   return(result);
 166              		.loc 2 353 0
 167 00e6 FA6D     		ldr	r2, [r7, #92]
 168              	.LBE23:
 169              	.LBE22:
 170              		.loc 1 139 0
 171 00e8 1A60     		str	r2, [r3, #0]
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 172              		.loc 1 140 0
 173 00ea 7B6E     		ldr	r3, [r7, #100]
 174 00ec 03F10403 		add	r3, r3, #4
 175 00f0 7B66     		str	r3, [r7, #100]
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 176              		.loc 1 141 0
 177 00f2 7B6E     		ldr	r3, [r7, #100]
 178 00f4 FA69     		ldr	r2, [r7, #28]
 179 00f6 BA65     		str	r2, [r7, #88]
 180              	.LBB24:
 181              	.LBB25:
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 182              		.loc 2 352 0
 183 00f8 BA6D     		ldr	r2, [r7, #88]
 184              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 185 00fa 14BA     		rev r4, r2
 186              	@ 0 "" 2
 187              		.thumb
 188 00fc 7C65     		str	r4, [r7, #84]
 189              		.loc 2 353 0
 190 00fe 7A6D     		ldr	r2, [r7, #84]
 191              	.LBE25:
 192              	.LBE24:
 193              		.loc 1 141 0
 194 0100 1A60     		str	r2, [r3, #0]
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 195              		.loc 1 142 0
 196 0102 7B6E     		ldr	r3, [r7, #100]
 197 0104 03F10403 		add	r3, r3, #4
 198 0108 7B66     		str	r3, [r7, #100]
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
 199              		.loc 1 143 0
 200 010a 7B6E     		ldr	r3, [r7, #100]
 201 010c 3A6A     		ldr	r2, [r7, #32]
 202 010e 3A65     		str	r2, [r7, #80]
 203              	.LBB26:
 204              	.LBB27:
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 205              		.loc 2 352 0
 206 0110 3A6D     		ldr	r2, [r7, #80]
 207              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 208 0112 14BA     		rev r4, r2
 209              	@ 0 "" 2
 210              		.thumb
 211 0114 FC64     		str	r4, [r7, #76]
 212              		.loc 2 353 0
 213 0116 FA6C     		ldr	r2, [r7, #76]
 214              	.LBE27:
 215              	.LBE26:
 216              		.loc 1 143 0
 217 0118 1A60     		str	r2, [r3, #0]
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 218              		.loc 1 144 0
 219 011a 7B6E     		ldr	r3, [r7, #100]
 220 011c 03F10403 		add	r3, r3, #4
 221 0120 7B66     		str	r3, [r7, #100]
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 222              		.loc 1 145 0
 223 0122 7B6E     		ldr	r3, [r7, #100]
 224 0124 7A6A     		ldr	r2, [r7, #36]
 225 0126 BA64     		str	r2, [r7, #72]
 226              	.LBB28:
 227              	.LBB29:
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 228              		.loc 2 352 0
 229 0128 BA6C     		ldr	r2, [r7, #72]
 230              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 231 012a 14BA     		rev r4, r2
 232              	@ 0 "" 2
 233              		.thumb
 234 012c 7C64     		str	r4, [r7, #68]
 235              		.loc 2 353 0
 236 012e 7A6C     		ldr	r2, [r7, #68]
 237              	.LBE29:
 238              	.LBE28:
 239              		.loc 1 145 0
 240 0130 1A60     		str	r2, [r3, #0]
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 241              		.loc 1 146 0
 242 0132 7B6E     		ldr	r3, [r7, #100]
 243 0134 03F10403 		add	r3, r3, #4
 244 0138 7B66     		str	r3, [r7, #100]
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 245              		.loc 1 147 0
 246 013a 7B6E     		ldr	r3, [r7, #100]
 247 013c BA6A     		ldr	r2, [r7, #40]
 248 013e 3A64     		str	r2, [r7, #64]
 249              	.LBB30:
 250              	.LBB31:
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 251              		.loc 2 352 0
 252 0140 3A6C     		ldr	r2, [r7, #64]
 253              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 254 0142 14BA     		rev r4, r2
 255              	@ 0 "" 2
 256              		.thumb
 257 0144 FC63     		str	r4, [r7, #60]
 258              		.loc 2 353 0
 259 0146 FA6B     		ldr	r2, [r7, #60]
 260              	.LBE31:
 261              	.LBE30:
 262              		.loc 1 147 0
 263 0148 1A60     		str	r2, [r3, #0]
 264              	.L7:
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   return status;
 265              		.loc 1 149 0
 266 014a 97F87330 		ldrb	r3, [r7, #115]	@ zero_extendqisi2
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** }
 267              		.loc 1 150 0
 268 014e 1846     		mov	r0, r3
 269 0150 07F17C07 		add	r7, r7, #124
 270 0154 BD46     		mov	sp, r7
 271 0156 90BD     		pop	{r4, r7, pc}
 272              		.cfi_endproc
 273              	.LFE110:
 275              		.section	.text.HMAC_SHA1,"ax",%progbits
 276              		.align	2
 277              		.global	HMAC_SHA1
 278              		.thumb
 279              		.thumb_func
 281              	HMAC_SHA1:
 282              	.LFB111:
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /**
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief  Compute the HMAC SHA1 digest.
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Key: pointer to the Key used for HMAC.
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Keylen: length of the Key used for HMAC.  
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Input: pointer to the Input buffer to be treated.
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Ilen: length of the Input buffer.
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Output: the returned digest
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @retval An ErrorStatus enumeration value:
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - SUCCESS: digest computation done
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - ERROR: digest computation failed
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** ErrorStatus HMAC_SHA1(uint8_t *Key, uint32_t Keylen, uint8_t *Input,
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****                       uint32_t Ilen, uint8_t Output[20])
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** {
 283              		.loc 1 165 0
 284              		.cfi_startproc
 285              		@ args = 4, pretend = 0, frame = 128
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 90B5     		push	{r4, r7, lr}
 288              	.LCFI3:
 289              		.cfi_def_cfa_offset 12
 290              		.cfi_offset 14, -4
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 4, -12
 293 0002 A1B0     		sub	sp, sp, #132
 294              	.LCFI4:
 295              		.cfi_def_cfa_offset 144
 296 0004 00AF     		add	r7, sp, #0
 297              	.LCFI5:
 298              		.cfi_def_cfa_register 7
 299 0006 F860     		str	r0, [r7, #12]
 300 0008 B960     		str	r1, [r7, #8]
 301 000a 7A60     		str	r2, [r7, #4]
 302 000c 3B60     		str	r3, [r7, #0]
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_InitTypeDef SHA1_HASH_InitStructure;
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_MsgDigest SHA1_MessageDigest;
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitsdata = 0;
 303              		.loc 1 168 0
 304 000e 4FF00003 		mov	r3, #0
 305 0012 7B83     		strh	r3, [r7, #26]	@ movhi
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitskey = 0;
 306              		.loc 1 169 0
 307 0014 4FF00003 		mov	r3, #0
 308 0018 3B83     		strh	r3, [r7, #24]	@ movhi
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t i = 0;
 309              		.loc 1 170 0
 310 001a 4FF00003 		mov	r3, #0
 311 001e FB67     		str	r3, [r7, #124]
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint32_t counter = 0;
 312              		.loc 1 171 0
 313 0020 4FF00003 		mov	r3, #0
 314 0024 7B61     		str	r3, [r7, #20]
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t busystatus = 0;
 315              		.loc 1 172 0
 316 0026 4FF00003 		mov	r3, #0
 317 002a FB66     		str	r3, [r7, #108]
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ErrorStatus status = SUCCESS;
 318              		.loc 1 173 0
 319 002c 4FF00103 		mov	r3, #1
 320 0030 87F87B30 		strb	r3, [r7, #123]
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t keyaddr    = (uint32_t)Key;
 321              		.loc 1 174 0
 322 0034 FB68     		ldr	r3, [r7, #12]
 323 0036 7B67     		str	r3, [r7, #116]
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t inputaddr  = (uint32_t)Input;
 324              		.loc 1 175 0
 325 0038 7B68     		ldr	r3, [r7, #4]
 326 003a 3B67     		str	r3, [r7, #112]
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t outputaddr = (uint32_t)Output;
 327              		.loc 1 176 0
 328 003c D7F89030 		ldr	r3, [r7, #144]
 329 0040 BB66     		str	r3, [r7, #104]
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Input data */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
 330              		.loc 1 179 0
 331 0042 3B68     		ldr	r3, [r7, #0]
 332 0044 9BB2     		uxth	r3, r3
 333 0046 03F00303 		and	r3, r3, #3
 334 004a 9BB2     		uxth	r3, r3
 335 004c 4FEAC303 		lsl	r3, r3, #3
 336 0050 9BB2     		uxth	r3, r3
 337 0052 7B83     		strh	r3, [r7, #26]	@ movhi
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Key */
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   nbvalidbitskey = 8 * (Keylen % 4);
 338              		.loc 1 182 0
 339 0054 BB68     		ldr	r3, [r7, #8]
 340 0056 9BB2     		uxth	r3, r3
 341 0058 03F00303 		and	r3, r3, #3
 342 005c 9BB2     		uxth	r3, r3
 343 005e 4FEAC303 		lsl	r3, r3, #3
 344 0062 9BB2     		uxth	r3, r3
 345 0064 3B83     		strh	r3, [r7, #24]	@ movhi
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH peripheral initialization */
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_DeInit();
 346              		.loc 1 185 0
 347 0066 FFF7FEFF 		bl	HASH_DeInit
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH Configuration */
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 348              		.loc 1 188 0
 349 006a 4FF00003 		mov	r3, #0
 350 006e 3B63     		str	r3, [r7, #48]
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HMAC;
 351              		.loc 1 189 0
 352 0070 4FF04003 		mov	r3, #64
 353 0074 7B63     		str	r3, [r7, #52]
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
 354              		.loc 1 190 0
 355 0076 4FF02003 		mov	r3, #32
 356 007a BB63     		str	r3, [r7, #56]
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   if(Keylen > 64)
 357              		.loc 1 191 0
 358 007c BB68     		ldr	r3, [r7, #8]
 359 007e 402B     		cmp	r3, #64
 360 0080 03D9     		bls	.L9
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* HMAC long Key */
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_LongKey;
 361              		.loc 1 194 0
 362 0082 4FF48033 		mov	r3, #65536
 363 0086 FB63     		str	r3, [r7, #60]
 364 0088 02E0     		b	.L10
 365              	.L9:
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   else
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* HMAC short Key */
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 366              		.loc 1 199 0
 367 008a 4FF00003 		mov	r3, #0
 368 008e FB63     		str	r3, [r7, #60]
 369              	.L10:
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_Init(&SHA1_HASH_InitStructure);
 370              		.loc 1 201 0
 371 0090 07F13003 		add	r3, r7, #48
 372 0094 1846     		mov	r0, r3
 373 0096 FFF7FEFF 		bl	HASH_Init
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Configure the number of valid bits in last word of the Key */
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 374              		.loc 1 204 0
 375 009a 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 376 009c 9BB2     		uxth	r3, r3
 377 009e 1846     		mov	r0, r3
 378 00a0 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Write the Key */
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Keylen; i+=4)
 379              		.loc 1 207 0
 380 00a4 4FF00003 		mov	r3, #0
 381 00a8 FB67     		str	r3, [r7, #124]
 382 00aa 0CE0     		b	.L11
 383              	.L12:
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_DataIn(*(uint32_t*)keyaddr);
 384              		.loc 1 209 0 discriminator 2
 385 00ac 7B6F     		ldr	r3, [r7, #116]
 386 00ae 1B68     		ldr	r3, [r3, #0]
 387 00b0 1846     		mov	r0, r3
 388 00b2 FFF7FEFF 		bl	HASH_DataIn
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     keyaddr+=4;
 389              		.loc 1 210 0 discriminator 2
 390 00b6 7B6F     		ldr	r3, [r7, #116]
 391 00b8 03F10403 		add	r3, r3, #4
 392 00bc 7B67     		str	r3, [r7, #116]
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Keylen; i+=4)
 393              		.loc 1 207 0 discriminator 2
 394 00be FB6F     		ldr	r3, [r7, #124]
 395 00c0 03F10403 		add	r3, r3, #4
 396 00c4 FB67     		str	r3, [r7, #124]
 397              	.L11:
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Keylen; i+=4)
 398              		.loc 1 207 0 is_stmt 0 discriminator 1
 399 00c6 FA6F     		ldr	r2, [r7, #124]
 400 00c8 BB68     		ldr	r3, [r7, #8]
 401 00ca 9A42     		cmp	r2, r3
 402 00cc EED3     		bcc	.L12
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Start the HASH processor */
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_StartDigest();
 403              		.loc 1 214 0 is_stmt 1
 404 00ce FFF7FEFF 		bl	HASH_StartDigest
 405              	.L14:
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* wait until the Busy flag is RESET */
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   do
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 406              		.loc 1 219 0 discriminator 1
 407 00d2 4FF00800 		mov	r0, #8
 408 00d6 FFF7FEFF 		bl	HASH_GetFlagStatus
 409 00da 0346     		mov	r3, r0
 410 00dc FB66     		str	r3, [r7, #108]
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     counter++;
 411              		.loc 1 220 0 discriminator 1
 412 00de 7B69     		ldr	r3, [r7, #20]
 413 00e0 03F10103 		add	r3, r3, #1
 414 00e4 7B61     		str	r3, [r7, #20]
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 415              		.loc 1 221 0 discriminator 1
 416 00e6 7B69     		ldr	r3, [r7, #20]
 417 00e8 B3F5803F 		cmp	r3, #65536
 418 00ec 02D0     		beq	.L13
 419 00ee FB6E     		ldr	r3, [r7, #108]
 420 00f0 002B     		cmp	r3, #0
 421 00f2 EED1     		bne	.L14
 422              	.L13:
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   if (busystatus != RESET)
 423              		.loc 1 223 0
 424 00f4 FB6E     		ldr	r3, [r7, #108]
 425 00f6 002B     		cmp	r3, #0
 426 00f8 04D0     		beq	.L15
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****      status = ERROR;
 427              		.loc 1 225 0
 428 00fa 4FF00003 		mov	r3, #0
 429 00fe 87F87B30 		strb	r3, [r7, #123]
 430 0102 AEE0     		b	.L16
 431              	.L15:
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   else
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Configure the number of valid bits in last word of the Input data */
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
 432              		.loc 1 230 0
 433 0104 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 434 0106 9BB2     		uxth	r3, r3
 435 0108 1846     		mov	r0, r3
 436 010a FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Write the Input block in the IN FIFO */
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     for(i=0; i<Ilen; i+=4)
 437              		.loc 1 233 0
 438 010e 4FF00003 		mov	r3, #0
 439 0112 FB67     		str	r3, [r7, #124]
 440 0114 0CE0     		b	.L17
 441              	.L18:
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       HASH_DataIn(*(uint32_t*)inputaddr);
 442              		.loc 1 235 0 discriminator 2
 443 0116 3B6F     		ldr	r3, [r7, #112]
 444 0118 1B68     		ldr	r3, [r3, #0]
 445 011a 1846     		mov	r0, r3
 446 011c FFF7FEFF 		bl	HASH_DataIn
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       inputaddr+=4;
 447              		.loc 1 236 0 discriminator 2
 448 0120 3B6F     		ldr	r3, [r7, #112]
 449 0122 03F10403 		add	r3, r3, #4
 450 0126 3B67     		str	r3, [r7, #112]
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     for(i=0; i<Ilen; i+=4)
 451              		.loc 1 233 0 discriminator 2
 452 0128 FB6F     		ldr	r3, [r7, #124]
 453 012a 03F10403 		add	r3, r3, #4
 454 012e FB67     		str	r3, [r7, #124]
 455              	.L17:
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     for(i=0; i<Ilen; i+=4)
 456              		.loc 1 233 0 is_stmt 0 discriminator 1
 457 0130 FA6F     		ldr	r2, [r7, #124]
 458 0132 3B68     		ldr	r3, [r7, #0]
 459 0134 9A42     		cmp	r2, r3
 460 0136 EED3     		bcc	.L18
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Start the HASH processor */
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_StartDigest();
 461              		.loc 1 240 0 is_stmt 1
 462 0138 FFF7FEFF 		bl	HASH_StartDigest
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* wait until the Busy flag is RESET */
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     counter =0;
 463              		.loc 1 244 0
 464 013c 4FF00003 		mov	r3, #0
 465 0140 7B61     		str	r3, [r7, #20]
 466              	.L20:
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     do
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 467              		.loc 1 247 0 discriminator 1
 468 0142 4FF00800 		mov	r0, #8
 469 0146 FFF7FEFF 		bl	HASH_GetFlagStatus
 470 014a 0346     		mov	r3, r0
 471 014c FB66     		str	r3, [r7, #108]
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       counter++;
 472              		.loc 1 248 0 discriminator 1
 473 014e 7B69     		ldr	r3, [r7, #20]
 474 0150 03F10103 		add	r3, r3, #1
 475 0154 7B61     		str	r3, [r7, #20]
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 476              		.loc 1 249 0 discriminator 1
 477 0156 7B69     		ldr	r3, [r7, #20]
 478 0158 B3F5803F 		cmp	r3, #65536
 479 015c 02D0     		beq	.L19
 480 015e FB6E     		ldr	r3, [r7, #108]
 481 0160 002B     		cmp	r3, #0
 482 0162 EED1     		bne	.L20
 483              	.L19:
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     if (busystatus != RESET)
 484              		.loc 1 251 0
 485 0164 FB6E     		ldr	r3, [r7, #108]
 486 0166 002B     		cmp	r3, #0
 487 0168 04D0     		beq	.L21
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       status = ERROR;
 488              		.loc 1 253 0
 489 016a 4FF00003 		mov	r3, #0
 490 016e 87F87B30 		strb	r3, [r7, #123]
 491 0172 76E0     		b	.L16
 492              	.L21:
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     else
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {  
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* Configure the number of valid bits in last word of the Key */
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 493              		.loc 1 258 0
 494 0174 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 495 0176 9BB2     		uxth	r3, r3
 496 0178 1846     		mov	r0, r3
 497 017a FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* Write the Key */
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       keyaddr = (uint32_t)Key;
 498              		.loc 1 261 0
 499 017e FB68     		ldr	r3, [r7, #12]
 500 0180 7B67     		str	r3, [r7, #116]
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 501              		.loc 1 262 0
 502 0182 4FF00003 		mov	r3, #0
 503 0186 FB67     		str	r3, [r7, #124]
 504 0188 0CE0     		b	.L22
 505              	.L23:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         HASH_DataIn(*(uint32_t*)keyaddr);
 506              		.loc 1 264 0 discriminator 2
 507 018a 7B6F     		ldr	r3, [r7, #116]
 508 018c 1B68     		ldr	r3, [r3, #0]
 509 018e 1846     		mov	r0, r3
 510 0190 FFF7FEFF 		bl	HASH_DataIn
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         keyaddr+=4;
 511              		.loc 1 265 0 discriminator 2
 512 0194 7B6F     		ldr	r3, [r7, #116]
 513 0196 03F10403 		add	r3, r3, #4
 514 019a 7B67     		str	r3, [r7, #116]
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 515              		.loc 1 262 0 discriminator 2
 516 019c FB6F     		ldr	r3, [r7, #124]
 517 019e 03F10403 		add	r3, r3, #4
 518 01a2 FB67     		str	r3, [r7, #124]
 519              	.L22:
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 520              		.loc 1 262 0 is_stmt 0 discriminator 1
 521 01a4 FA6F     		ldr	r2, [r7, #124]
 522 01a6 BB68     		ldr	r3, [r7, #8]
 523 01a8 9A42     		cmp	r2, r3
 524 01aa EED3     		bcc	.L23
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* Start the HASH processor */
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       HASH_StartDigest();
 525              		.loc 1 269 0 is_stmt 1
 526 01ac FFF7FEFF 		bl	HASH_StartDigest
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* wait until the Busy flag is RESET */
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       counter =0;
 527              		.loc 1 272 0
 528 01b0 4FF00003 		mov	r3, #0
 529 01b4 7B61     		str	r3, [r7, #20]
 530              	.L25:
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       do
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 531              		.loc 1 275 0 discriminator 1
 532 01b6 4FF00800 		mov	r0, #8
 533 01ba FFF7FEFF 		bl	HASH_GetFlagStatus
 534 01be 0346     		mov	r3, r0
 535 01c0 FB66     		str	r3, [r7, #108]
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         counter++;
 536              		.loc 1 276 0 discriminator 1
 537 01c2 7B69     		ldr	r3, [r7, #20]
 538 01c4 03F10103 		add	r3, r3, #1
 539 01c8 7B61     		str	r3, [r7, #20]
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 540              		.loc 1 277 0 discriminator 1
 541 01ca 7B69     		ldr	r3, [r7, #20]
 542 01cc B3F5803F 		cmp	r3, #65536
 543 01d0 02D0     		beq	.L24
 544 01d2 FB6E     		ldr	r3, [r7, #108]
 545 01d4 002B     		cmp	r3, #0
 546 01d6 EED1     		bne	.L25
 547              	.L24:
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       if (busystatus != RESET)
 548              		.loc 1 279 0
 549 01d8 FB6E     		ldr	r3, [r7, #108]
 550 01da 002B     		cmp	r3, #0
 551 01dc 04D0     		beq	.L26
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         status = ERROR;
 552              		.loc 1 281 0
 553 01de 4FF00003 		mov	r3, #0
 554 01e2 87F87B30 		strb	r3, [r7, #123]
 555 01e6 3CE0     		b	.L16
 556              	.L26:
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       else
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         /* Read the message digest */
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         HASH_GetDigest(&SHA1_MessageDigest);
 557              		.loc 1 286 0
 558 01e8 07F11C03 		add	r3, r7, #28
 559 01ec 1846     		mov	r0, r3
 560 01ee FFF7FEFF 		bl	HASH_GetDigest
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 561              		.loc 1 287 0
 562 01f2 BB6E     		ldr	r3, [r7, #104]
 563 01f4 FA69     		ldr	r2, [r7, #28]
 564 01f6 7A66     		str	r2, [r7, #100]
 565              	.LBB32:
 566              	.LBB33:
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 567              		.loc 2 352 0
 568 01f8 7A6E     		ldr	r2, [r7, #100]
 569              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 570 01fa 14BA     		rev r4, r2
 571              	@ 0 "" 2
 572              		.thumb
 573 01fc 3C66     		str	r4, [r7, #96]
 574              		.loc 2 353 0
 575 01fe 3A6E     		ldr	r2, [r7, #96]
 576              	.LBE33:
 577              	.LBE32:
 578              		.loc 1 287 0
 579 0200 1A60     		str	r2, [r3, #0]
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 580              		.loc 1 288 0
 581 0202 BB6E     		ldr	r3, [r7, #104]
 582 0204 03F10403 		add	r3, r3, #4
 583 0208 BB66     		str	r3, [r7, #104]
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 584              		.loc 1 289 0
 585 020a BB6E     		ldr	r3, [r7, #104]
 586 020c 3A6A     		ldr	r2, [r7, #32]
 587 020e FA65     		str	r2, [r7, #92]
 588              	.LBB34:
 589              	.LBB35:
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 590              		.loc 2 352 0
 591 0210 FA6D     		ldr	r2, [r7, #92]
 592              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 593 0212 14BA     		rev r4, r2
 594              	@ 0 "" 2
 595              		.thumb
 596 0214 BC65     		str	r4, [r7, #88]
 597              		.loc 2 353 0
 598 0216 BA6D     		ldr	r2, [r7, #88]
 599              	.LBE35:
 600              	.LBE34:
 601              		.loc 1 289 0
 602 0218 1A60     		str	r2, [r3, #0]
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 603              		.loc 1 290 0
 604 021a BB6E     		ldr	r3, [r7, #104]
 605 021c 03F10403 		add	r3, r3, #4
 606 0220 BB66     		str	r3, [r7, #104]
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
 607              		.loc 1 291 0
 608 0222 BB6E     		ldr	r3, [r7, #104]
 609 0224 7A6A     		ldr	r2, [r7, #36]
 610 0226 7A65     		str	r2, [r7, #84]
 611              	.LBB36:
 612              	.LBB37:
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 613              		.loc 2 352 0
 614 0228 7A6D     		ldr	r2, [r7, #84]
 615              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 616 022a 14BA     		rev r4, r2
 617              	@ 0 "" 2
 618              		.thumb
 619 022c 3C65     		str	r4, [r7, #80]
 620              		.loc 2 353 0
 621 022e 3A6D     		ldr	r2, [r7, #80]
 622              	.LBE37:
 623              	.LBE36:
 624              		.loc 1 291 0
 625 0230 1A60     		str	r2, [r3, #0]
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 626              		.loc 1 292 0
 627 0232 BB6E     		ldr	r3, [r7, #104]
 628 0234 03F10403 		add	r3, r3, #4
 629 0238 BB66     		str	r3, [r7, #104]
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 630              		.loc 1 293 0
 631 023a BB6E     		ldr	r3, [r7, #104]
 632 023c BA6A     		ldr	r2, [r7, #40]
 633 023e FA64     		str	r2, [r7, #76]
 634              	.LBB38:
 635              	.LBB39:
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 636              		.loc 2 352 0
 637 0240 FA6C     		ldr	r2, [r7, #76]
 638              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 639 0242 14BA     		rev r4, r2
 640              	@ 0 "" 2
 641              		.thumb
 642 0244 BC64     		str	r4, [r7, #72]
 643              		.loc 2 353 0
 644 0246 BA6C     		ldr	r2, [r7, #72]
 645              	.LBE39:
 646              	.LBE38:
 647              		.loc 1 293 0
 648 0248 1A60     		str	r2, [r3, #0]
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 649              		.loc 1 294 0
 650 024a BB6E     		ldr	r3, [r7, #104]
 651 024c 03F10403 		add	r3, r3, #4
 652 0250 BB66     		str	r3, [r7, #104]
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 653              		.loc 1 295 0
 654 0252 BB6E     		ldr	r3, [r7, #104]
 655 0254 FA6A     		ldr	r2, [r7, #44]
 656 0256 7A64     		str	r2, [r7, #68]
 657              	.LBB40:
 658              	.LBB41:
 352:C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 659              		.loc 2 352 0
 660 0258 7A6C     		ldr	r2, [r7, #68]
 661              	@ 352 "C:\Dokumente und Einstellungen\brand\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_
 662 025a 14BA     		rev r4, r2
 663              	@ 0 "" 2
 664              		.thumb
 665 025c 3C64     		str	r4, [r7, #64]
 666              		.loc 2 353 0
 667 025e 3A6C     		ldr	r2, [r7, #64]
 668              	.LBE41:
 669              	.LBE40:
 670              		.loc 1 295 0
 671 0260 1A60     		str	r2, [r3, #0]
 672              	.L16:
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }  
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   return status;  
 673              		.loc 1 299 0
 674 0262 97F87B30 		ldrb	r3, [r7, #123]	@ zero_extendqisi2
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** }
 675              		.loc 1 300 0
 676 0266 1846     		mov	r0, r3
 677 0268 07F18407 		add	r7, r7, #132
 678 026c BD46     		mov	sp, r7
 679 026e 90BD     		pop	{r4, r7, pc}
 680              		.cfi_endproc
 681              	.LFE111:
 683              		.text
 684              	.Letext0:
 685              		.file 3 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 686              		.file 4 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Devi
 687              		.file 5 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_S
 688              		.file 6 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash_sha1.c
  C:\Temp\ccryFabk.s:19     .text.HASH_SHA1:00000000 $t
  C:\Temp\ccryFabk.s:24     .text.HASH_SHA1:00000000 HASH_SHA1
  C:\Temp\ccryFabk.s:276    .text.HMAC_SHA1:00000000 $t
  C:\Temp\ccryFabk.s:281    .text.HMAC_SHA1:00000000 HMAC_SHA1
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HASH_DeInit
HASH_Init
HASH_SetLastWordValidBitsNbr
HASH_DataIn
HASH_StartDigest
HASH_GetFlagStatus
HASH_GetDigest
