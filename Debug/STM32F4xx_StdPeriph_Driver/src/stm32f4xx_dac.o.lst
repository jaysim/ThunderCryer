   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_dac.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.DAC_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	DAC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	DAC_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************  
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  27              		.loc 1 175 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 3, -8
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  36              		.loc 1 177 0
  37 0002 0121     		movs	r1, #1
  38 0004 4FF00050 		mov	r0, #536870912
  39 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  40              		.loc 1 179 0
  41 000c 4FF00050 		mov	r0, #536870912
  42 0010 0021     		movs	r1, #0
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
  43              		.loc 1 180 0
  44 0012 BDE80840 		pop	{r3, lr}
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  45              		.loc 1 179 0
  46 0016 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  47              		.cfi_endproc
  48              	.LFE110:
  50              		.section	.text.DAC_Init,"ax",%progbits
  51              		.align	1
  52              		.global	DAC_Init
  53              		.thumb
  54              		.thumb_func
  56              	DAC_Init:
  57              	.LFB111:
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  58              		.loc 1 194 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL0:
  63 0000 30B5     		push	{r4, r5, lr}
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 12
  66              		.cfi_offset 14, -4
  67              		.cfi_offset 5, -8
  68              		.cfi_offset 4, -12
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  69              		.loc 1 205 0
  70 0002 0A4B     		ldr	r3, .L3
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  71              		.loc 1 207 0
  72 0004 40F6FE72 		movw	r2, #4094
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  73              		.loc 1 205 0
  74 0008 1C68     		ldr	r4, [r3, #0]
  75              	.LVL1:
  76              		.loc 1 207 0
  77 000a 8240     		lsls	r2, r2, r0
  78 000c 24EA0202 		bic	r2, r4, r2
  79              	.LVL2:
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  80              		.loc 1 214 0
  81 0010 91E83000 		ldmia	r1, {r4, r5}
  82 0014 2543     		orrs	r5, r5, r4
  83 0016 8C68     		ldr	r4, [r1, #8]
  84 0018 2543     		orrs	r5, r5, r4
  85 001a CC68     		ldr	r4, [r1, #12]
  86 001c 45EA0401 		orr	r1, r5, r4
  87              	.LVL3:
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
  88              		.loc 1 218 0
  89 0020 11FA00F0 		lsls	r0, r1, r0
  90              	.LVL4:
  91 0024 1043     		orrs	r0, r0, r2
  92              	.LVL5:
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
  93              		.loc 1 220 0
  94 0026 1860     		str	r0, [r3, #0]
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
  95              		.loc 1 221 0
  96 0028 30BD     		pop	{r4, r5, pc}
  97              	.L4:
  98 002a 00BF     		.align	2
  99              	.L3:
 100 002c 00740040 		.word	1073771520
 101              		.cfi_endproc
 102              	.LFE111:
 104              		.section	.text.DAC_StructInit,"ax",%progbits
 105              		.align	1
 106              		.global	DAC_StructInit
 107              		.thumb
 108              		.thumb_func
 110              	DAC_StructInit:
 111              	.LFB112:
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 112              		.loc 1 230 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.LVL6:
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 118              		.loc 1 233 0
 119 0000 0023     		movs	r3, #0
 120 0002 0360     		str	r3, [r0, #0]
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 121              		.loc 1 235 0
 122 0004 4360     		str	r3, [r0, #4]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 123              		.loc 1 237 0
 124 0006 8360     		str	r3, [r0, #8]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 125              		.loc 1 239 0
 126 0008 C360     		str	r3, [r0, #12]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 127              		.loc 1 240 0
 128 000a 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE112:
 132              		.section	.text.DAC_Cmd,"ax",%progbits
 133              		.align	1
 134              		.global	DAC_Cmd
 135              		.thumb
 136              		.thumb_func
 138              	DAC_Cmd:
 139              	.LFB113:
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 140              		.loc 1 254 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL7:
 146 0000 064B     		ldr	r3, .L10
 147 0002 0122     		movs	r2, #1
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 148              		.loc 1 259 0
 149 0004 19B1     		cbz	r1, .L7
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 150              		.loc 1 262 0
 151 0006 1968     		ldr	r1, [r3, #0]
 152              	.LVL8:
 153 0008 8240     		lsls	r2, r2, r0
 154 000a 0A43     		orrs	r2, r2, r1
 155 000c 03E0     		b	.L9
 156              	.LVL9:
 157              	.L7:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 158              		.loc 1 267 0
 159 000e 1968     		ldr	r1, [r3, #0]
 160              	.LVL10:
 161 0010 8240     		lsls	r2, r2, r0
 162 0012 21EA0202 		bic	r2, r1, r2
 163              	.L9:
 164 0016 1A60     		str	r2, [r3, #0]
 165 0018 7047     		bx	lr
 166              	.L11:
 167 001a 00BF     		.align	2
 168              	.L10:
 169 001c 00740040 		.word	1073771520
 170              		.cfi_endproc
 171              	.LFE113:
 173              		.section	.text.DAC_SoftwareTriggerCmd,"ax",%progbits
 174              		.align	1
 175              		.global	DAC_SoftwareTriggerCmd
 176              		.thumb
 177              		.thumb_func
 179              	DAC_SoftwareTriggerCmd:
 180              	.LFB114:
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 181              		.loc 1 282 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 186              	.LVL11:
 187 0000 074B     		ldr	r3, .L16
 188 0002 0009     		lsrs	r0, r0, #4
 189              	.LVL12:
 190 0004 0122     		movs	r2, #1
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 191              		.loc 1 287 0
 192 0006 21B1     		cbz	r1, .L13
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 193              		.loc 1 290 0
 194 0008 5968     		ldr	r1, [r3, #4]
 195              	.LVL13:
 196 000a 12FA00F0 		lsls	r0, r2, r0
 197 000e 0843     		orrs	r0, r0, r1
 198 0010 04E0     		b	.L15
 199              	.LVL14:
 200              	.L13:
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 201              		.loc 1 295 0
 202 0012 5968     		ldr	r1, [r3, #4]
 203              	.LVL15:
 204 0014 12FA00F0 		lsls	r0, r2, r0
 205 0018 21EA0000 		bic	r0, r1, r0
 206              	.L15:
 207 001c 5860     		str	r0, [r3, #4]
 208 001e 7047     		bx	lr
 209              	.L17:
 210              		.align	2
 211              	.L16:
 212 0020 00740040 		.word	1073771520
 213              		.cfi_endproc
 214              	.LFE114:
 216              		.section	.text.DAC_DualSoftwareTriggerCmd,"ax",%progbits
 217              		.align	1
 218              		.global	DAC_DualSoftwareTriggerCmd
 219              		.thumb
 220              		.thumb_func
 222              	DAC_DualSoftwareTriggerCmd:
 223              	.LFB115:
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 224              		.loc 1 306 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL16:
 230 0000 044B     		ldr	r3, .L22
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 231              		.loc 1 313 0
 232 0002 5A68     		ldr	r2, [r3, #4]
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 233              		.loc 1 310 0
 234 0004 10B1     		cbz	r0, .L19
 235              		.loc 1 313 0
 236 0006 42F00302 		orr	r2, r2, #3
 237 000a 01E0     		b	.L21
 238              	.L19:
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 239              		.loc 1 318 0
 240 000c 22F00302 		bic	r2, r2, #3
 241              	.L21:
 242 0010 5A60     		str	r2, [r3, #4]
 243 0012 7047     		bx	lr
 244              	.L23:
 245              		.align	2
 246              	.L22:
 247 0014 00740040 		.word	1073771520
 248              		.cfi_endproc
 249              	.LFE115:
 251              		.section	.text.DAC_WaveGenerationCmd,"ax",%progbits
 252              		.align	1
 253              		.global	DAC_WaveGenerationCmd
 254              		.thumb
 255              		.thumb_func
 257              	DAC_WaveGenerationCmd:
 258              	.LFB116:
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 259              		.loc 1 337 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL17:
 265 0000 054B     		ldr	r3, .L28
 266 0002 11FA00F0 		lsls	r0, r1, r0
 267              	.LVL18:
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 268              		.loc 1 346 0
 269 0006 1968     		ldr	r1, [r3, #0]
 270              	.LVL19:
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 271              		.loc 1 343 0
 272 0008 0AB1     		cbz	r2, .L25
 273              		.loc 1 346 0
 274 000a 0843     		orrs	r0, r0, r1
 275 000c 01E0     		b	.L27
 276              	.L25:
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 277              		.loc 1 351 0
 278 000e 21EA0000 		bic	r0, r1, r0
 279              	.L27:
 280 0012 1860     		str	r0, [r3, #0]
 281 0014 7047     		bx	lr
 282              	.L29:
 283 0016 00BF     		.align	2
 284              	.L28:
 285 0018 00740040 		.word	1073771520
 286              		.cfi_endproc
 287              	.LFE116:
 289              		.section	.text.DAC_SetChannel1Data,"ax",%progbits
 290              		.align	1
 291              		.global	DAC_SetChannel1Data
 292              		.thumb
 293              		.thumb_func
 295              	DAC_SetChannel1Data:
 296              	.LFB117:
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 297              		.loc 1 366 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL20:
 303 0000 82B0     		sub	sp, sp, #8
 304              	.LCFI2:
 305              		.cfi_def_cfa_offset 8
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 306              		.loc 1 367 0
 307 0002 0023     		movs	r3, #0
 308 0004 0193     		str	r3, [sp, #4]
 309              	.LVL21:
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 310              		.loc 1 373 0
 311 0006 054B     		ldr	r3, .L31
 312 0008 0193     		str	r3, [sp, #4]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 313              		.loc 1 374 0
 314 000a 019B     		ldr	r3, [sp, #4]
 315 000c 0833     		adds	r3, r3, #8
 316 000e 1818     		adds	r0, r3, r0
 317              	.LVL22:
 318 0010 0190     		str	r0, [sp, #4]
 319              	.LVL23:
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 320              		.loc 1 377 0
 321 0012 019B     		ldr	r3, [sp, #4]
 322 0014 1960     		str	r1, [r3, #0]
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 323              		.loc 1 378 0
 324 0016 02B0     		add	sp, sp, #8
 325 0018 7047     		bx	lr
 326              	.L32:
 327 001a 00BF     		.align	2
 328              	.L31:
 329 001c 00740040 		.word	1073771520
 330              		.cfi_endproc
 331              	.LFE117:
 333              		.section	.text.DAC_SetChannel2Data,"ax",%progbits
 334              		.align	1
 335              		.global	DAC_SetChannel2Data
 336              		.thumb
 337              		.thumb_func
 339              	DAC_SetChannel2Data:
 340              	.LFB118:
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 341              		.loc 1 391 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL24:
 347 0000 82B0     		sub	sp, sp, #8
 348              	.LCFI3:
 349              		.cfi_def_cfa_offset 8
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 350              		.loc 1 392 0
 351 0002 0023     		movs	r3, #0
 352 0004 0193     		str	r3, [sp, #4]
 353              	.LVL25:
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 354              		.loc 1 398 0
 355 0006 054B     		ldr	r3, .L34
 356 0008 0193     		str	r3, [sp, #4]
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 357              		.loc 1 399 0
 358 000a 019B     		ldr	r3, [sp, #4]
 359 000c 1433     		adds	r3, r3, #20
 360 000e 1818     		adds	r0, r3, r0
 361              	.LVL26:
 362 0010 0190     		str	r0, [sp, #4]
 363              	.LVL27:
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 364              		.loc 1 402 0
 365 0012 019B     		ldr	r3, [sp, #4]
 366 0014 1960     		str	r1, [r3, #0]
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 367              		.loc 1 403 0
 368 0016 02B0     		add	sp, sp, #8
 369 0018 7047     		bx	lr
 370              	.L35:
 371 001a 00BF     		.align	2
 372              	.L34:
 373 001c 00740040 		.word	1073771520
 374              		.cfi_endproc
 375              	.LFE118:
 377              		.section	.text.DAC_SetDualChannelData,"ax",%progbits
 378              		.align	1
 379              		.global	DAC_SetDualChannelData
 380              		.thumb
 381              		.thumb_func
 383              	DAC_SetDualChannelData:
 384              	.LFB119:
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 385              		.loc 1 419 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 390              	.LVL28:
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 391              		.loc 1 428 0
 392 0000 0828     		cmp	r0, #8
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 393              		.loc 1 438 0
 394 0002 044B     		ldr	r3, .L39
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 395              		.loc 1 430 0
 396 0004 0CBF     		ite	eq
 397 0006 42EA0121 		orreq	r1, r2, r1, lsl #8
 398              	.LVL29:
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 399              		.loc 1 434 0
 400 000a 42EA0141 		orrne	r1, r2, r1, lsl #16
 401              	.LVL30:
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 402              		.loc 1 441 0
 403 000e C150     		str	r1, [r0, r3]
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 404              		.loc 1 442 0
 405 0010 7047     		bx	lr
 406              	.L40:
 407 0012 00BF     		.align	2
 408              	.L39:
 409 0014 20740040 		.word	1073771552
 410              		.cfi_endproc
 411              	.LFE119:
 413              		.section	.text.DAC_GetDataOutputValue,"ax",%progbits
 414              		.align	1
 415              		.global	DAC_GetDataOutputValue
 416              		.thumb
 417              		.thumb_func
 419              	DAC_GetDataOutputValue:
 420              	.LFB120:
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 421              		.loc 1 453 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 8
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426              	.LVL31:
 427 0000 82B0     		sub	sp, sp, #8
 428              	.LCFI4:
 429              		.cfi_def_cfa_offset 8
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 430              		.loc 1 454 0
 431 0002 0023     		movs	r3, #0
 432 0004 0193     		str	r3, [sp, #4]
 433              	.LVL32:
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 434              		.loc 1 459 0
 435 0006 064B     		ldr	r3, .L42
 436 0008 0193     		str	r3, [sp, #4]
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 437              		.loc 1 460 0
 438 000a 019B     		ldr	r3, [sp, #4]
 439 000c 2C33     		adds	r3, r3, #44
 440 000e 03EB9000 		add	r0, r3, r0, lsr #2
 441              	.LVL33:
 442 0012 0190     		str	r0, [sp, #4]
 443              	.LVL34:
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 444              		.loc 1 463 0
 445 0014 019B     		ldr	r3, [sp, #4]
 446 0016 1868     		ldr	r0, [r3, #0]
 447              	.LVL35:
 448 0018 80B2     		uxth	r0, r0
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 449              		.loc 1 464 0
 450 001a 02B0     		add	sp, sp, #8
 451 001c 7047     		bx	lr
 452              	.L43:
 453 001e 00BF     		.align	2
 454              	.L42:
 455 0020 00740040 		.word	1073771520
 456              		.cfi_endproc
 457              	.LFE120:
 459              		.section	.text.DAC_DMACmd,"ax",%progbits
 460              		.align	1
 461              		.global	DAC_DMACmd
 462              		.thumb
 463              		.thumb_func
 465              	DAC_DMACmd:
 466              	.LFB121:
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 467              		.loc 1 498 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 472              	.LVL36:
 473 0000 064B     		ldr	r3, .L48
 474 0002 4FF48052 		mov	r2, #4096
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 475              		.loc 1 503 0
 476 0006 19B1     		cbz	r1, .L45
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 477              		.loc 1 506 0
 478 0008 1968     		ldr	r1, [r3, #0]
 479              	.LVL37:
 480 000a 8240     		lsls	r2, r2, r0
 481 000c 0A43     		orrs	r2, r2, r1
 482 000e 03E0     		b	.L47
 483              	.LVL38:
 484              	.L45:
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 485              		.loc 1 511 0
 486 0010 1968     		ldr	r1, [r3, #0]
 487              	.LVL39:
 488 0012 8240     		lsls	r2, r2, r0
 489 0014 21EA0202 		bic	r2, r1, r2
 490              	.L47:
 491 0018 1A60     		str	r2, [r3, #0]
 492 001a 7047     		bx	lr
 493              	.L49:
 494              		.align	2
 495              	.L48:
 496 001c 00740040 		.word	1073771520
 497              		.cfi_endproc
 498              	.LFE121:
 500              		.section	.text.DAC_ITConfig,"ax",%progbits
 501              		.align	1
 502              		.global	DAC_ITConfig
 503              		.thumb
 504              		.thumb_func
 506              	DAC_ITConfig:
 507              	.LFB122:
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 508              		.loc 1 546 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513              	.LVL40:
 514 0000 054B     		ldr	r3, .L54
 515 0002 11FA00F0 		lsls	r0, r1, r0
 516              	.LVL41:
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 517              		.loc 1 555 0
 518 0006 1968     		ldr	r1, [r3, #0]
 519              	.LVL42:
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 520              		.loc 1 552 0
 521 0008 0AB1     		cbz	r2, .L51
 522              		.loc 1 555 0
 523 000a 0843     		orrs	r0, r0, r1
 524 000c 01E0     		b	.L53
 525              	.L51:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 526              		.loc 1 560 0
 527 000e 21EA0000 		bic	r0, r1, r0
 528              	.L53:
 529 0012 1860     		str	r0, [r3, #0]
 530 0014 7047     		bx	lr
 531              	.L55:
 532 0016 00BF     		.align	2
 533              	.L54:
 534 0018 00740040 		.word	1073771520
 535              		.cfi_endproc
 536              	.LFE122:
 538              		.section	.text.DAC_GetFlagStatus,"ax",%progbits
 539              		.align	1
 540              		.global	DAC_GetFlagStatus
 541              		.thumb
 542              		.thumb_func
 544              	DAC_GetFlagStatus:
 545              	.LFB123:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 546              		.loc 1 578 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551              	.LVL43:
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 552              		.loc 1 585 0
 553 0000 044B     		ldr	r3, .L57
 554 0002 5B6B     		ldr	r3, [r3, #52]
 555              	.LVL44:
 556 0004 11FA00F0 		lsls	r0, r1, r0
 557              	.LVL45:
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 558              		.loc 1 588 0
 559 0008 1842     		tst	r0, r3
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 560              		.loc 1 596 0
 561 000a 0CBF     		ite	eq
 562 000c 0020     		moveq	r0, #0
 563 000e 0120     		movne	r0, #1
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 564              		.loc 1 597 0
 565 0010 7047     		bx	lr
 566              	.L58:
 567 0012 00BF     		.align	2
 568              	.L57:
 569 0014 00740040 		.word	1073771520
 570              		.cfi_endproc
 571              	.LFE123:
 573              		.section	.text.DAC_ClearFlag,"ax",%progbits
 574              		.align	1
 575              		.global	DAC_ClearFlag
 576              		.thumb
 577              		.thumb_func
 579              	DAC_ClearFlag:
 580              	.LFB124:
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 581              		.loc 1 613 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL46:
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 587              		.loc 1 619 0
 588 0000 024B     		ldr	r3, .L60
 589 0002 11FA00F0 		lsls	r0, r1, r0
 590              	.LVL47:
 591 0006 5863     		str	r0, [r3, #52]
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 592              		.loc 1 620 0
 593 0008 7047     		bx	lr
 594              	.L61:
 595 000a 00BF     		.align	2
 596              	.L60:
 597 000c 00740040 		.word	1073771520
 598              		.cfi_endproc
 599              	.LFE124:
 601              		.section	.text.DAC_GetITStatus,"ax",%progbits
 602              		.align	1
 603              		.global	DAC_GetITStatus
 604              		.thumb
 605              		.thumb_func
 607              	DAC_GetITStatus:
 608              	.LFB125:
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 609              		.loc 1 636 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614              	.LVL48:
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 615              		.loc 1 645 0
 616 0000 054B     		ldr	r3, .L65
 617 0002 8140     		lsls	r1, r1, r0
 618              	.LVL49:
 619 0004 1A68     		ldr	r2, [r3, #0]
 620              	.LVL50:
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 621              		.loc 1 648 0
 622 0006 586B     		ldr	r0, [r3, #52]
 623              	.LVL51:
 624 0008 0840     		ands	r0, r1, r0
 625 000a 03D0     		beq	.L63
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 626              		.loc 1 651 0 discriminator 1
 627 000c 1142     		tst	r1, r2
 628 000e 0CBF     		ite	eq
 629 0010 0020     		moveq	r0, #0
 630 0012 0120     		movne	r0, #1
 631              	.L63:
 632              	.LVL52:
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 633              		.loc 1 660 0
 634 0014 7047     		bx	lr
 635              	.L66:
 636 0016 00BF     		.align	2
 637              	.L65:
 638 0018 00740040 		.word	1073771520
 639              		.cfi_endproc
 640              	.LFE125:
 642              		.section	.text.DAC_ClearITPendingBit,"ax",%progbits
 643              		.align	1
 644              		.global	DAC_ClearITPendingBit
 645              		.thumb
 646              		.thumb_func
 648              	DAC_ClearITPendingBit:
 649              	.LFB126:
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 650              		.loc 1 676 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL53:
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 656              		.loc 1 682 0
 657 0000 024B     		ldr	r3, .L68
 658 0002 11FA00F0 		lsls	r0, r1, r0
 659              	.LVL54:
 660 0006 5863     		str	r0, [r3, #52]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 661              		.loc 1 683 0
 662 0008 7047     		bx	lr
 663              	.L69:
 664 000a 00BF     		.align	2
 665              	.L68:
 666 000c 00740040 		.word	1073771520
 667              		.cfi_endproc
 668              	.LFE126:
 670              		.text
 671              	.Letext0:
 672              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 673              		.file 3 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4x
 674              		.file 4 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_
 675              		.file 5 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dac.c
  C:\Temp\ccUdP2xj.s:19     .text.DAC_DeInit:00000000 $t
  C:\Temp\ccUdP2xj.s:24     .text.DAC_DeInit:00000000 DAC_DeInit
  C:\Temp\ccUdP2xj.s:51     .text.DAC_Init:00000000 $t
  C:\Temp\ccUdP2xj.s:56     .text.DAC_Init:00000000 DAC_Init
  C:\Temp\ccUdP2xj.s:100    .text.DAC_Init:0000002c $d
  C:\Temp\ccUdP2xj.s:105    .text.DAC_StructInit:00000000 $t
  C:\Temp\ccUdP2xj.s:110    .text.DAC_StructInit:00000000 DAC_StructInit
  C:\Temp\ccUdP2xj.s:133    .text.DAC_Cmd:00000000 $t
  C:\Temp\ccUdP2xj.s:138    .text.DAC_Cmd:00000000 DAC_Cmd
  C:\Temp\ccUdP2xj.s:169    .text.DAC_Cmd:0000001c $d
  C:\Temp\ccUdP2xj.s:174    .text.DAC_SoftwareTriggerCmd:00000000 $t
  C:\Temp\ccUdP2xj.s:179    .text.DAC_SoftwareTriggerCmd:00000000 DAC_SoftwareTriggerCmd
  C:\Temp\ccUdP2xj.s:212    .text.DAC_SoftwareTriggerCmd:00000020 $d
  C:\Temp\ccUdP2xj.s:217    .text.DAC_DualSoftwareTriggerCmd:00000000 $t
  C:\Temp\ccUdP2xj.s:222    .text.DAC_DualSoftwareTriggerCmd:00000000 DAC_DualSoftwareTriggerCmd
  C:\Temp\ccUdP2xj.s:247    .text.DAC_DualSoftwareTriggerCmd:00000014 $d
  C:\Temp\ccUdP2xj.s:252    .text.DAC_WaveGenerationCmd:00000000 $t
  C:\Temp\ccUdP2xj.s:257    .text.DAC_WaveGenerationCmd:00000000 DAC_WaveGenerationCmd
  C:\Temp\ccUdP2xj.s:285    .text.DAC_WaveGenerationCmd:00000018 $d
  C:\Temp\ccUdP2xj.s:290    .text.DAC_SetChannel1Data:00000000 $t
  C:\Temp\ccUdP2xj.s:295    .text.DAC_SetChannel1Data:00000000 DAC_SetChannel1Data
  C:\Temp\ccUdP2xj.s:329    .text.DAC_SetChannel1Data:0000001c $d
  C:\Temp\ccUdP2xj.s:334    .text.DAC_SetChannel2Data:00000000 $t
  C:\Temp\ccUdP2xj.s:339    .text.DAC_SetChannel2Data:00000000 DAC_SetChannel2Data
  C:\Temp\ccUdP2xj.s:373    .text.DAC_SetChannel2Data:0000001c $d
  C:\Temp\ccUdP2xj.s:378    .text.DAC_SetDualChannelData:00000000 $t
  C:\Temp\ccUdP2xj.s:383    .text.DAC_SetDualChannelData:00000000 DAC_SetDualChannelData
  C:\Temp\ccUdP2xj.s:409    .text.DAC_SetDualChannelData:00000014 $d
  C:\Temp\ccUdP2xj.s:414    .text.DAC_GetDataOutputValue:00000000 $t
  C:\Temp\ccUdP2xj.s:419    .text.DAC_GetDataOutputValue:00000000 DAC_GetDataOutputValue
  C:\Temp\ccUdP2xj.s:455    .text.DAC_GetDataOutputValue:00000020 $d
  C:\Temp\ccUdP2xj.s:460    .text.DAC_DMACmd:00000000 $t
  C:\Temp\ccUdP2xj.s:465    .text.DAC_DMACmd:00000000 DAC_DMACmd
  C:\Temp\ccUdP2xj.s:496    .text.DAC_DMACmd:0000001c $d
  C:\Temp\ccUdP2xj.s:501    .text.DAC_ITConfig:00000000 $t
  C:\Temp\ccUdP2xj.s:506    .text.DAC_ITConfig:00000000 DAC_ITConfig
  C:\Temp\ccUdP2xj.s:534    .text.DAC_ITConfig:00000018 $d
  C:\Temp\ccUdP2xj.s:539    .text.DAC_GetFlagStatus:00000000 $t
  C:\Temp\ccUdP2xj.s:544    .text.DAC_GetFlagStatus:00000000 DAC_GetFlagStatus
  C:\Temp\ccUdP2xj.s:569    .text.DAC_GetFlagStatus:00000014 $d
  C:\Temp\ccUdP2xj.s:574    .text.DAC_ClearFlag:00000000 $t
  C:\Temp\ccUdP2xj.s:579    .text.DAC_ClearFlag:00000000 DAC_ClearFlag
  C:\Temp\ccUdP2xj.s:597    .text.DAC_ClearFlag:0000000c $d
  C:\Temp\ccUdP2xj.s:602    .text.DAC_GetITStatus:00000000 $t
  C:\Temp\ccUdP2xj.s:607    .text.DAC_GetITStatus:00000000 DAC_GetITStatus
  C:\Temp\ccUdP2xj.s:638    .text.DAC_GetITStatus:00000018 $d
  C:\Temp\ccUdP2xj.s:643    .text.DAC_ClearITPendingBit:00000000 $t
  C:\Temp\ccUdP2xj.s:648    .text.DAC_ClearITPendingBit:00000000 DAC_ClearITPendingBit
  C:\Temp\ccUdP2xj.s:666    .text.DAC_ClearITPendingBit:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
