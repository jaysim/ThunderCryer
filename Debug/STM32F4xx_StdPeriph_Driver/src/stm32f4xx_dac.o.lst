   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_dac.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	DAC_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	DAC_DeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************  
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  26              		.loc 1 175 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 00AF     		add	r7, sp, #0
  36              	.LCFI1:
  37              		.cfi_def_cfa_register 7
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  38              		.loc 1 177 0
  39 0004 4FF00050 		mov	r0, #536870912
  40 0008 4FF00101 		mov	r1, #1
  41 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  42              		.loc 1 179 0
  43 0010 4FF00050 		mov	r0, #536870912
  44 0014 4FF00001 		mov	r1, #0
  45 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
  46              		.loc 1 180 0
  47 001c 80BD     		pop	{r7, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51 001e 00BF     		.align	2
  52              		.global	DAC_Init
  53              		.thumb
  54              		.thumb_func
  56              	DAC_Init:
  57              	.LFB111:
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  58              		.loc 1 194 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 16
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0020 80B4     		push	{r7}
  64              	.LCFI2:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0022 85B0     		sub	sp, sp, #20
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 24
  70 0024 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  73 0026 7860     		str	r0, [r7, #4]
  74 0028 3960     		str	r1, [r7, #0]
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
  75              		.loc 1 195 0
  76 002a 4FF00003 		mov	r3, #0
  77 002e FB60     		str	r3, [r7, #12]
  78 0030 4FF00003 		mov	r3, #0
  79 0034 BB60     		str	r3, [r7, #8]
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  80              		.loc 1 205 0
  81 0036 4FF4E843 		mov	r3, #29696
  82 003a C4F20003 		movt	r3, 16384
  83 003e 1B68     		ldr	r3, [r3, #0]
  84 0040 FB60     		str	r3, [r7, #12]
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  85              		.loc 1 207 0
  86 0042 7B68     		ldr	r3, [r7, #4]
  87 0044 40F6FE72 		movw	r2, #4094
  88 0048 02FA03F3 		lsl	r3, r2, r3
  89 004c 6FEA0303 		mvn	r3, r3
  90 0050 FA68     		ldr	r2, [r7, #12]
  91 0052 1340     		ands	r3, r3, r2
  92 0054 FB60     		str	r3, [r7, #12]
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  93              		.loc 1 214 0
  94 0056 3B68     		ldr	r3, [r7, #0]
  95 0058 1A68     		ldr	r2, [r3, #0]
  96 005a 3B68     		ldr	r3, [r7, #0]
  97 005c 5B68     		ldr	r3, [r3, #4]
  98 005e 1A43     		orrs	r2, r2, r3
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
  99              		.loc 1 215 0
 100 0060 3B68     		ldr	r3, [r7, #0]
 101 0062 9B68     		ldr	r3, [r3, #8]
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 102              		.loc 1 214 0
 103 0064 1A43     		orrs	r2, r2, r3
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 104              		.loc 1 216 0
 105 0066 3B68     		ldr	r3, [r7, #0]
 106 0068 DB68     		ldr	r3, [r3, #12]
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 107              		.loc 1 214 0
 108 006a 1343     		orrs	r3, r3, r2
 109 006c BB60     		str	r3, [r7, #8]
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 110              		.loc 1 218 0
 111 006e 7B68     		ldr	r3, [r7, #4]
 112 0070 BA68     		ldr	r2, [r7, #8]
 113 0072 02FA03F3 		lsl	r3, r2, r3
 114 0076 FA68     		ldr	r2, [r7, #12]
 115 0078 1343     		orrs	r3, r3, r2
 116 007a FB60     		str	r3, [r7, #12]
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
 117              		.loc 1 220 0
 118 007c 4FF4E843 		mov	r3, #29696
 119 0080 C4F20003 		movt	r3, 16384
 120 0084 FA68     		ldr	r2, [r7, #12]
 121 0086 1A60     		str	r2, [r3, #0]
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 122              		.loc 1 221 0
 123 0088 07F11407 		add	r7, r7, #20
 124 008c BD46     		mov	sp, r7
 125 008e 80BC     		pop	{r7}
 126 0090 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE111:
 130 0092 00BF     		.align	2
 131              		.global	DAC_StructInit
 132              		.thumb
 133              		.thumb_func
 135              	DAC_StructInit:
 136              	.LFB112:
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 137              		.loc 1 230 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 8
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142 0094 80B4     		push	{r7}
 143              	.LCFI5:
 144              		.cfi_def_cfa_offset 4
 145              		.cfi_offset 7, -4
 146 0096 83B0     		sub	sp, sp, #12
 147              	.LCFI6:
 148              		.cfi_def_cfa_offset 16
 149 0098 00AF     		add	r7, sp, #0
 150              	.LCFI7:
 151              		.cfi_def_cfa_register 7
 152 009a 7860     		str	r0, [r7, #4]
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 153              		.loc 1 233 0
 154 009c 7B68     		ldr	r3, [r7, #4]
 155 009e 4FF00002 		mov	r2, #0
 156 00a2 1A60     		str	r2, [r3, #0]
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 157              		.loc 1 235 0
 158 00a4 7B68     		ldr	r3, [r7, #4]
 159 00a6 4FF00002 		mov	r2, #0
 160 00aa 5A60     		str	r2, [r3, #4]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 161              		.loc 1 237 0
 162 00ac 7B68     		ldr	r3, [r7, #4]
 163 00ae 4FF00002 		mov	r2, #0
 164 00b2 9A60     		str	r2, [r3, #8]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 165              		.loc 1 239 0
 166 00b4 7B68     		ldr	r3, [r7, #4]
 167 00b6 4FF00002 		mov	r2, #0
 168 00ba DA60     		str	r2, [r3, #12]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 169              		.loc 1 240 0
 170 00bc 07F10C07 		add	r7, r7, #12
 171 00c0 BD46     		mov	sp, r7
 172 00c2 80BC     		pop	{r7}
 173 00c4 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE112:
 177 00c6 00BF     		.align	2
 178              		.global	DAC_Cmd
 179              		.thumb
 180              		.thumb_func
 182              	DAC_Cmd:
 183              	.LFB113:
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 184              		.loc 1 254 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 8
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189 00c8 80B4     		push	{r7}
 190              	.LCFI8:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 7, -4
 193 00ca 83B0     		sub	sp, sp, #12
 194              	.LCFI9:
 195              		.cfi_def_cfa_offset 16
 196 00cc 00AF     		add	r7, sp, #0
 197              	.LCFI10:
 198              		.cfi_def_cfa_register 7
 199 00ce 7860     		str	r0, [r7, #4]
 200 00d0 0B46     		mov	r3, r1
 201 00d2 FB70     		strb	r3, [r7, #3]
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 202              		.loc 1 259 0
 203 00d4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 204 00d6 002B     		cmp	r3, #0
 205 00d8 11D0     		beq	.L5
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 206              		.loc 1 262 0
 207 00da 4FF4E843 		mov	r3, #29696
 208 00de C4F20003 		movt	r3, 16384
 209 00e2 4FF4E842 		mov	r2, #29696
 210 00e6 C4F20002 		movt	r2, 16384
 211 00ea 1268     		ldr	r2, [r2, #0]
 212 00ec 1146     		mov	r1, r2
 213 00ee 7A68     		ldr	r2, [r7, #4]
 214 00f0 4FF00100 		mov	r0, #1
 215 00f4 00FA02F2 		lsl	r2, r0, r2
 216 00f8 0A43     		orrs	r2, r2, r1
 217 00fa 1A60     		str	r2, [r3, #0]
 218 00fc 12E0     		b	.L4
 219              	.L5:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 220              		.loc 1 267 0
 221 00fe 4FF4E843 		mov	r3, #29696
 222 0102 C4F20003 		movt	r3, 16384
 223 0106 4FF4E842 		mov	r2, #29696
 224 010a C4F20002 		movt	r2, 16384
 225 010e 1268     		ldr	r2, [r2, #0]
 226 0110 1146     		mov	r1, r2
 227 0112 7A68     		ldr	r2, [r7, #4]
 228 0114 4FF00100 		mov	r0, #1
 229 0118 00FA02F2 		lsl	r2, r0, r2
 230 011c 6FEA0202 		mvn	r2, r2
 231 0120 0A40     		ands	r2, r2, r1
 232 0122 1A60     		str	r2, [r3, #0]
 233              	.L4:
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 234              		.loc 1 269 0
 235 0124 07F10C07 		add	r7, r7, #12
 236 0128 BD46     		mov	sp, r7
 237 012a 80BC     		pop	{r7}
 238 012c 7047     		bx	lr
 239              		.cfi_endproc
 240              	.LFE113:
 242 012e 00BF     		.align	2
 243              		.global	DAC_SoftwareTriggerCmd
 244              		.thumb
 245              		.thumb_func
 247              	DAC_SoftwareTriggerCmd:
 248              	.LFB114:
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 249              		.loc 1 282 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0130 80B4     		push	{r7}
 255              	.LCFI11:
 256              		.cfi_def_cfa_offset 4
 257              		.cfi_offset 7, -4
 258 0132 83B0     		sub	sp, sp, #12
 259              	.LCFI12:
 260              		.cfi_def_cfa_offset 16
 261 0134 00AF     		add	r7, sp, #0
 262              	.LCFI13:
 263              		.cfi_def_cfa_register 7
 264 0136 7860     		str	r0, [r7, #4]
 265 0138 0B46     		mov	r3, r1
 266 013a FB70     		strb	r3, [r7, #3]
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 267              		.loc 1 287 0
 268 013c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 269 013e 002B     		cmp	r3, #0
 270 0140 13D0     		beq	.L8
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 271              		.loc 1 290 0
 272 0142 4FF4E843 		mov	r3, #29696
 273 0146 C4F20003 		movt	r3, 16384
 274 014a 4FF4E842 		mov	r2, #29696
 275 014e C4F20002 		movt	r2, 16384
 276 0152 5268     		ldr	r2, [r2, #4]
 277 0154 1146     		mov	r1, r2
 278 0156 7A68     		ldr	r2, [r7, #4]
 279 0158 4FEA1212 		lsr	r2, r2, #4
 280 015c 4FF00100 		mov	r0, #1
 281 0160 00FA02F2 		lsl	r2, r0, r2
 282 0164 0A43     		orrs	r2, r2, r1
 283 0166 5A60     		str	r2, [r3, #4]
 284 0168 14E0     		b	.L7
 285              	.L8:
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 286              		.loc 1 295 0
 287 016a 4FF4E843 		mov	r3, #29696
 288 016e C4F20003 		movt	r3, 16384
 289 0172 4FF4E842 		mov	r2, #29696
 290 0176 C4F20002 		movt	r2, 16384
 291 017a 5268     		ldr	r2, [r2, #4]
 292 017c 1146     		mov	r1, r2
 293 017e 7A68     		ldr	r2, [r7, #4]
 294 0180 4FEA1212 		lsr	r2, r2, #4
 295 0184 4FF00100 		mov	r0, #1
 296 0188 00FA02F2 		lsl	r2, r0, r2
 297 018c 6FEA0202 		mvn	r2, r2
 298 0190 0A40     		ands	r2, r2, r1
 299 0192 5A60     		str	r2, [r3, #4]
 300              	.L7:
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 301              		.loc 1 297 0
 302 0194 07F10C07 		add	r7, r7, #12
 303 0198 BD46     		mov	sp, r7
 304 019a 80BC     		pop	{r7}
 305 019c 7047     		bx	lr
 306              		.cfi_endproc
 307              	.LFE114:
 309 019e 00BF     		.align	2
 310              		.global	DAC_DualSoftwareTriggerCmd
 311              		.thumb
 312              		.thumb_func
 314              	DAC_DualSoftwareTriggerCmd:
 315              	.LFB115:
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 316              		.loc 1 306 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 8
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 01a0 80B4     		push	{r7}
 322              	.LCFI14:
 323              		.cfi_def_cfa_offset 4
 324              		.cfi_offset 7, -4
 325 01a2 83B0     		sub	sp, sp, #12
 326              	.LCFI15:
 327              		.cfi_def_cfa_offset 16
 328 01a4 00AF     		add	r7, sp, #0
 329              	.LCFI16:
 330              		.cfi_def_cfa_register 7
 331 01a6 0346     		mov	r3, r0
 332 01a8 FB71     		strb	r3, [r7, #7]
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 333              		.loc 1 310 0
 334 01aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 335 01ac 002B     		cmp	r3, #0
 336 01ae 0CD0     		beq	.L11
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 337              		.loc 1 313 0
 338 01b0 4FF4E843 		mov	r3, #29696
 339 01b4 C4F20003 		movt	r3, 16384
 340 01b8 4FF4E842 		mov	r2, #29696
 341 01bc C4F20002 		movt	r2, 16384
 342 01c0 5268     		ldr	r2, [r2, #4]
 343 01c2 42F00302 		orr	r2, r2, #3
 344 01c6 5A60     		str	r2, [r3, #4]
 345 01c8 0BE0     		b	.L10
 346              	.L11:
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 347              		.loc 1 318 0
 348 01ca 4FF4E843 		mov	r3, #29696
 349 01ce C4F20003 		movt	r3, 16384
 350 01d2 4FF4E842 		mov	r2, #29696
 351 01d6 C4F20002 		movt	r2, 16384
 352 01da 5268     		ldr	r2, [r2, #4]
 353 01dc 22F00302 		bic	r2, r2, #3
 354 01e0 5A60     		str	r2, [r3, #4]
 355              	.L10:
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 356              		.loc 1 320 0
 357 01e2 07F10C07 		add	r7, r7, #12
 358 01e6 BD46     		mov	sp, r7
 359 01e8 80BC     		pop	{r7}
 360 01ea 7047     		bx	lr
 361              		.cfi_endproc
 362              	.LFE115:
 364              		.align	2
 365              		.global	DAC_WaveGenerationCmd
 366              		.thumb
 367              		.thumb_func
 369              	DAC_WaveGenerationCmd:
 370              	.LFB116:
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 371              		.loc 1 337 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 16
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376 01ec 80B4     		push	{r7}
 377              	.LCFI17:
 378              		.cfi_def_cfa_offset 4
 379              		.cfi_offset 7, -4
 380 01ee 85B0     		sub	sp, sp, #20
 381              	.LCFI18:
 382              		.cfi_def_cfa_offset 24
 383 01f0 00AF     		add	r7, sp, #0
 384              	.LCFI19:
 385              		.cfi_def_cfa_register 7
 386 01f2 F860     		str	r0, [r7, #12]
 387 01f4 B960     		str	r1, [r7, #8]
 388 01f6 1346     		mov	r3, r2
 389 01f8 FB71     		strb	r3, [r7, #7]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 390              		.loc 1 343 0
 391 01fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 392 01fc 002B     		cmp	r3, #0
 393 01fe 10D0     		beq	.L14
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 394              		.loc 1 346 0
 395 0200 4FF4E843 		mov	r3, #29696
 396 0204 C4F20003 		movt	r3, 16384
 397 0208 4FF4E842 		mov	r2, #29696
 398 020c C4F20002 		movt	r2, 16384
 399 0210 1268     		ldr	r2, [r2, #0]
 400 0212 1146     		mov	r1, r2
 401 0214 FA68     		ldr	r2, [r7, #12]
 402 0216 B868     		ldr	r0, [r7, #8]
 403 0218 00FA02F2 		lsl	r2, r0, r2
 404 021c 0A43     		orrs	r2, r2, r1
 405 021e 1A60     		str	r2, [r3, #0]
 406 0220 11E0     		b	.L13
 407              	.L14:
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 408              		.loc 1 351 0
 409 0222 4FF4E843 		mov	r3, #29696
 410 0226 C4F20003 		movt	r3, 16384
 411 022a 4FF4E842 		mov	r2, #29696
 412 022e C4F20002 		movt	r2, 16384
 413 0232 1268     		ldr	r2, [r2, #0]
 414 0234 1146     		mov	r1, r2
 415 0236 FA68     		ldr	r2, [r7, #12]
 416 0238 B868     		ldr	r0, [r7, #8]
 417 023a 00FA02F2 		lsl	r2, r0, r2
 418 023e 6FEA0202 		mvn	r2, r2
 419 0242 0A40     		ands	r2, r2, r1
 420 0244 1A60     		str	r2, [r3, #0]
 421              	.L13:
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 422              		.loc 1 353 0
 423 0246 07F11407 		add	r7, r7, #20
 424 024a BD46     		mov	sp, r7
 425 024c 80BC     		pop	{r7}
 426 024e 7047     		bx	lr
 427              		.cfi_endproc
 428              	.LFE116:
 430              		.align	2
 431              		.global	DAC_SetChannel1Data
 432              		.thumb
 433              		.thumb_func
 435              	DAC_SetChannel1Data:
 436              	.LFB117:
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 437              		.loc 1 366 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 16
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442 0250 80B4     		push	{r7}
 443              	.LCFI20:
 444              		.cfi_def_cfa_offset 4
 445              		.cfi_offset 7, -4
 446 0252 85B0     		sub	sp, sp, #20
 447              	.LCFI21:
 448              		.cfi_def_cfa_offset 24
 449 0254 00AF     		add	r7, sp, #0
 450              	.LCFI22:
 451              		.cfi_def_cfa_register 7
 452 0256 7860     		str	r0, [r7, #4]
 453 0258 0B46     		mov	r3, r1
 454 025a 7B80     		strh	r3, [r7, #2]	@ movhi
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 455              		.loc 1 367 0
 456 025c 4FF00003 		mov	r3, #0
 457 0260 FB60     		str	r3, [r7, #12]
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 458              		.loc 1 373 0
 459 0262 4FF4E843 		mov	r3, #29696
 460 0266 C4F20003 		movt	r3, 16384
 461 026a FB60     		str	r3, [r7, #12]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 462              		.loc 1 374 0
 463 026c FA68     		ldr	r2, [r7, #12]
 464 026e 7B68     		ldr	r3, [r7, #4]
 465 0270 D318     		adds	r3, r2, r3
 466 0272 03F10803 		add	r3, r3, #8
 467 0276 FB60     		str	r3, [r7, #12]
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 468              		.loc 1 377 0
 469 0278 FB68     		ldr	r3, [r7, #12]
 470 027a 7A88     		ldrh	r2, [r7, #2]
 471 027c 1A60     		str	r2, [r3, #0]
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 472              		.loc 1 378 0
 473 027e 07F11407 		add	r7, r7, #20
 474 0282 BD46     		mov	sp, r7
 475 0284 80BC     		pop	{r7}
 476 0286 7047     		bx	lr
 477              		.cfi_endproc
 478              	.LFE117:
 480              		.align	2
 481              		.global	DAC_SetChannel2Data
 482              		.thumb
 483              		.thumb_func
 485              	DAC_SetChannel2Data:
 486              	.LFB118:
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 487              		.loc 1 391 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 16
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 0288 80B4     		push	{r7}
 493              	.LCFI23:
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 7, -4
 496 028a 85B0     		sub	sp, sp, #20
 497              	.LCFI24:
 498              		.cfi_def_cfa_offset 24
 499 028c 00AF     		add	r7, sp, #0
 500              	.LCFI25:
 501              		.cfi_def_cfa_register 7
 502 028e 7860     		str	r0, [r7, #4]
 503 0290 0B46     		mov	r3, r1
 504 0292 7B80     		strh	r3, [r7, #2]	@ movhi
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 505              		.loc 1 392 0
 506 0294 4FF00003 		mov	r3, #0
 507 0298 FB60     		str	r3, [r7, #12]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 508              		.loc 1 398 0
 509 029a 4FF4E843 		mov	r3, #29696
 510 029e C4F20003 		movt	r3, 16384
 511 02a2 FB60     		str	r3, [r7, #12]
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 512              		.loc 1 399 0
 513 02a4 FA68     		ldr	r2, [r7, #12]
 514 02a6 7B68     		ldr	r3, [r7, #4]
 515 02a8 D318     		adds	r3, r2, r3
 516 02aa 03F11403 		add	r3, r3, #20
 517 02ae FB60     		str	r3, [r7, #12]
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 518              		.loc 1 402 0
 519 02b0 FB68     		ldr	r3, [r7, #12]
 520 02b2 7A88     		ldrh	r2, [r7, #2]
 521 02b4 1A60     		str	r2, [r3, #0]
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 522              		.loc 1 403 0
 523 02b6 07F11407 		add	r7, r7, #20
 524 02ba BD46     		mov	sp, r7
 525 02bc 80BC     		pop	{r7}
 526 02be 7047     		bx	lr
 527              		.cfi_endproc
 528              	.LFE118:
 530              		.align	2
 531              		.global	DAC_SetDualChannelData
 532              		.thumb
 533              		.thumb_func
 535              	DAC_SetDualChannelData:
 536              	.LFB119:
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 537              		.loc 1 419 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 16
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542 02c0 80B4     		push	{r7}
 543              	.LCFI26:
 544              		.cfi_def_cfa_offset 4
 545              		.cfi_offset 7, -4
 546 02c2 85B0     		sub	sp, sp, #20
 547              	.LCFI27:
 548              		.cfi_def_cfa_offset 24
 549 02c4 00AF     		add	r7, sp, #0
 550              	.LCFI28:
 551              		.cfi_def_cfa_register 7
 552 02c6 7860     		str	r0, [r7, #4]
 553 02c8 1346     		mov	r3, r2
 554 02ca 0A46     		mov	r2, r1	@ movhi
 555 02cc 7A80     		strh	r2, [r7, #2]	@ movhi
 556 02ce 3B80     		strh	r3, [r7, #0]	@ movhi
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 557              		.loc 1 420 0
 558 02d0 4FF00003 		mov	r3, #0
 559 02d4 FB60     		str	r3, [r7, #12]
 560 02d6 4FF00003 		mov	r3, #0
 561 02da BB60     		str	r3, [r7, #8]
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 562              		.loc 1 428 0
 563 02dc 7B68     		ldr	r3, [r7, #4]
 564 02de 082B     		cmp	r3, #8
 565 02e0 06D1     		bne	.L19
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 566              		.loc 1 430 0
 567 02e2 7B88     		ldrh	r3, [r7, #2]
 568 02e4 4FEA0322 		lsl	r2, r3, #8
 569 02e8 3B88     		ldrh	r3, [r7, #0]
 570 02ea 1343     		orrs	r3, r3, r2
 571 02ec FB60     		str	r3, [r7, #12]
 572 02ee 05E0     		b	.L20
 573              	.L19:
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 574              		.loc 1 434 0
 575 02f0 7B88     		ldrh	r3, [r7, #2]
 576 02f2 4FEA0342 		lsl	r2, r3, #16
 577 02f6 3B88     		ldrh	r3, [r7, #0]
 578 02f8 1343     		orrs	r3, r3, r2
 579 02fa FB60     		str	r3, [r7, #12]
 580              	.L20:
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 581              		.loc 1 437 0
 582 02fc 4FF4E843 		mov	r3, #29696
 583 0300 C4F20003 		movt	r3, 16384
 584 0304 BB60     		str	r3, [r7, #8]
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 585              		.loc 1 438 0
 586 0306 7A68     		ldr	r2, [r7, #4]
 587 0308 BB68     		ldr	r3, [r7, #8]
 588 030a D318     		adds	r3, r2, r3
 589 030c 03F12003 		add	r3, r3, #32
 590 0310 BB60     		str	r3, [r7, #8]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 591              		.loc 1 441 0
 592 0312 BB68     		ldr	r3, [r7, #8]
 593 0314 FA68     		ldr	r2, [r7, #12]
 594 0316 1A60     		str	r2, [r3, #0]
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 595              		.loc 1 442 0
 596 0318 07F11407 		add	r7, r7, #20
 597 031c BD46     		mov	sp, r7
 598 031e 80BC     		pop	{r7}
 599 0320 7047     		bx	lr
 600              		.cfi_endproc
 601              	.LFE119:
 603 0322 00BF     		.align	2
 604              		.global	DAC_GetDataOutputValue
 605              		.thumb
 606              		.thumb_func
 608              	DAC_GetDataOutputValue:
 609              	.LFB120:
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 610              		.loc 1 453 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 16
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615 0324 80B4     		push	{r7}
 616              	.LCFI29:
 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 7, -4
 619 0326 85B0     		sub	sp, sp, #20
 620              	.LCFI30:
 621              		.cfi_def_cfa_offset 24
 622 0328 00AF     		add	r7, sp, #0
 623              	.LCFI31:
 624              		.cfi_def_cfa_register 7
 625 032a 7860     		str	r0, [r7, #4]
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 626              		.loc 1 454 0
 627 032c 4FF00003 		mov	r3, #0
 628 0330 FB60     		str	r3, [r7, #12]
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 629              		.loc 1 459 0
 630 0332 4FF4E843 		mov	r3, #29696
 631 0336 C4F20003 		movt	r3, 16384
 632 033a FB60     		str	r3, [r7, #12]
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 633              		.loc 1 460 0
 634 033c 7B68     		ldr	r3, [r7, #4]
 635 033e 4FEA9302 		lsr	r2, r3, #2
 636 0342 FB68     		ldr	r3, [r7, #12]
 637 0344 D318     		adds	r3, r2, r3
 638 0346 03F12C03 		add	r3, r3, #44
 639 034a FB60     		str	r3, [r7, #12]
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 640              		.loc 1 463 0
 641 034c FB68     		ldr	r3, [r7, #12]
 642 034e 1B68     		ldr	r3, [r3, #0]
 643 0350 9BB2     		uxth	r3, r3
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 644              		.loc 1 464 0
 645 0352 1846     		mov	r0, r3
 646 0354 07F11407 		add	r7, r7, #20
 647 0358 BD46     		mov	sp, r7
 648 035a 80BC     		pop	{r7}
 649 035c 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE120:
 653 035e 00BF     		.align	2
 654              		.global	DAC_DMACmd
 655              		.thumb
 656              		.thumb_func
 658              	DAC_DMACmd:
 659              	.LFB121:
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 660              		.loc 1 498 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0360 80B4     		push	{r7}
 666              	.LCFI32:
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0362 83B0     		sub	sp, sp, #12
 670              	.LCFI33:
 671              		.cfi_def_cfa_offset 16
 672 0364 00AF     		add	r7, sp, #0
 673              	.LCFI34:
 674              		.cfi_def_cfa_register 7
 675 0366 7860     		str	r0, [r7, #4]
 676 0368 0B46     		mov	r3, r1
 677 036a FB70     		strb	r3, [r7, #3]
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 678              		.loc 1 503 0
 679 036c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 680 036e 002B     		cmp	r3, #0
 681 0370 11D0     		beq	.L23
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 682              		.loc 1 506 0
 683 0372 4FF4E843 		mov	r3, #29696
 684 0376 C4F20003 		movt	r3, 16384
 685 037a 4FF4E842 		mov	r2, #29696
 686 037e C4F20002 		movt	r2, 16384
 687 0382 1268     		ldr	r2, [r2, #0]
 688 0384 1146     		mov	r1, r2
 689 0386 7A68     		ldr	r2, [r7, #4]
 690 0388 4FF48050 		mov	r0, #4096
 691 038c 00FA02F2 		lsl	r2, r0, r2
 692 0390 0A43     		orrs	r2, r2, r1
 693 0392 1A60     		str	r2, [r3, #0]
 694 0394 12E0     		b	.L22
 695              	.L23:
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 696              		.loc 1 511 0
 697 0396 4FF4E843 		mov	r3, #29696
 698 039a C4F20003 		movt	r3, 16384
 699 039e 4FF4E842 		mov	r2, #29696
 700 03a2 C4F20002 		movt	r2, 16384
 701 03a6 1268     		ldr	r2, [r2, #0]
 702 03a8 1146     		mov	r1, r2
 703 03aa 7A68     		ldr	r2, [r7, #4]
 704 03ac 4FF48050 		mov	r0, #4096
 705 03b0 00FA02F2 		lsl	r2, r0, r2
 706 03b4 6FEA0202 		mvn	r2, r2
 707 03b8 0A40     		ands	r2, r2, r1
 708 03ba 1A60     		str	r2, [r3, #0]
 709              	.L22:
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 710              		.loc 1 513 0
 711 03bc 07F10C07 		add	r7, r7, #12
 712 03c0 BD46     		mov	sp, r7
 713 03c2 80BC     		pop	{r7}
 714 03c4 7047     		bx	lr
 715              		.cfi_endproc
 716              	.LFE121:
 718 03c6 00BF     		.align	2
 719              		.global	DAC_ITConfig
 720              		.thumb
 721              		.thumb_func
 723              	DAC_ITConfig:
 724              	.LFB122:
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 725              		.loc 1 546 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 16
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730 03c8 80B4     		push	{r7}
 731              	.LCFI35:
 732              		.cfi_def_cfa_offset 4
 733              		.cfi_offset 7, -4
 734 03ca 85B0     		sub	sp, sp, #20
 735              	.LCFI36:
 736              		.cfi_def_cfa_offset 24
 737 03cc 00AF     		add	r7, sp, #0
 738              	.LCFI37:
 739              		.cfi_def_cfa_register 7
 740 03ce F860     		str	r0, [r7, #12]
 741 03d0 B960     		str	r1, [r7, #8]
 742 03d2 1346     		mov	r3, r2
 743 03d4 FB71     		strb	r3, [r7, #7]
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 744              		.loc 1 552 0
 745 03d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 746 03d8 002B     		cmp	r3, #0
 747 03da 10D0     		beq	.L26
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 748              		.loc 1 555 0
 749 03dc 4FF4E843 		mov	r3, #29696
 750 03e0 C4F20003 		movt	r3, 16384
 751 03e4 4FF4E842 		mov	r2, #29696
 752 03e8 C4F20002 		movt	r2, 16384
 753 03ec 1268     		ldr	r2, [r2, #0]
 754 03ee 1146     		mov	r1, r2
 755 03f0 FA68     		ldr	r2, [r7, #12]
 756 03f2 B868     		ldr	r0, [r7, #8]
 757 03f4 00FA02F2 		lsl	r2, r0, r2
 758 03f8 0A43     		orrs	r2, r2, r1
 759 03fa 1A60     		str	r2, [r3, #0]
 760 03fc 11E0     		b	.L25
 761              	.L26:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 762              		.loc 1 560 0
 763 03fe 4FF4E843 		mov	r3, #29696
 764 0402 C4F20003 		movt	r3, 16384
 765 0406 4FF4E842 		mov	r2, #29696
 766 040a C4F20002 		movt	r2, 16384
 767 040e 1268     		ldr	r2, [r2, #0]
 768 0410 1146     		mov	r1, r2
 769 0412 FA68     		ldr	r2, [r7, #12]
 770 0414 B868     		ldr	r0, [r7, #8]
 771 0416 00FA02F2 		lsl	r2, r0, r2
 772 041a 6FEA0202 		mvn	r2, r2
 773 041e 0A40     		ands	r2, r2, r1
 774 0420 1A60     		str	r2, [r3, #0]
 775              	.L25:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 776              		.loc 1 562 0
 777 0422 07F11407 		add	r7, r7, #20
 778 0426 BD46     		mov	sp, r7
 779 0428 80BC     		pop	{r7}
 780 042a 7047     		bx	lr
 781              		.cfi_endproc
 782              	.LFE122:
 784              		.align	2
 785              		.global	DAC_GetFlagStatus
 786              		.thumb
 787              		.thumb_func
 789              	DAC_GetFlagStatus:
 790              	.LFB123:
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 791              		.loc 1 578 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 16
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796 042c 80B4     		push	{r7}
 797              	.LCFI38:
 798              		.cfi_def_cfa_offset 4
 799              		.cfi_offset 7, -4
 800 042e 85B0     		sub	sp, sp, #20
 801              	.LCFI39:
 802              		.cfi_def_cfa_offset 24
 803 0430 00AF     		add	r7, sp, #0
 804              	.LCFI40:
 805              		.cfi_def_cfa_register 7
 806 0432 7860     		str	r0, [r7, #4]
 807 0434 3960     		str	r1, [r7, #0]
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 808              		.loc 1 579 0
 809 0436 4FF00003 		mov	r3, #0
 810 043a FB73     		strb	r3, [r7, #15]
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 811              		.loc 1 585 0
 812 043c 4FF4E843 		mov	r3, #29696
 813 0440 C4F20003 		movt	r3, 16384
 814 0444 5B6B     		ldr	r3, [r3, #52]
 815 0446 1A46     		mov	r2, r3
 816 0448 7B68     		ldr	r3, [r7, #4]
 817 044a 3968     		ldr	r1, [r7, #0]
 818 044c 01FA03F3 		lsl	r3, r1, r3
 819 0450 1340     		ands	r3, r3, r2
 820 0452 002B     		cmp	r3, #0
 821 0454 03D0     		beq	.L29
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 822              		.loc 1 588 0
 823 0456 4FF00103 		mov	r3, #1
 824 045a FB73     		strb	r3, [r7, #15]
 825 045c 02E0     		b	.L30
 826              	.L29:
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 827              		.loc 1 593 0
 828 045e 4FF00003 		mov	r3, #0
 829 0462 FB73     		strb	r3, [r7, #15]
 830              	.L30:
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 831              		.loc 1 596 0
 832 0464 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 833              		.loc 1 597 0
 834 0466 1846     		mov	r0, r3
 835 0468 07F11407 		add	r7, r7, #20
 836 046c BD46     		mov	sp, r7
 837 046e 80BC     		pop	{r7}
 838 0470 7047     		bx	lr
 839              		.cfi_endproc
 840              	.LFE123:
 842 0472 00BF     		.align	2
 843              		.global	DAC_ClearFlag
 844              		.thumb
 845              		.thumb_func
 847              	DAC_ClearFlag:
 848              	.LFB124:
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 849              		.loc 1 613 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 8
 852              		@ frame_needed = 1, uses_anonymous_args = 0
 853              		@ link register save eliminated.
 854 0474 80B4     		push	{r7}
 855              	.LCFI41:
 856              		.cfi_def_cfa_offset 4
 857              		.cfi_offset 7, -4
 858 0476 83B0     		sub	sp, sp, #12
 859              	.LCFI42:
 860              		.cfi_def_cfa_offset 16
 861 0478 00AF     		add	r7, sp, #0
 862              	.LCFI43:
 863              		.cfi_def_cfa_register 7
 864 047a 7860     		str	r0, [r7, #4]
 865 047c 3960     		str	r1, [r7, #0]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 866              		.loc 1 619 0
 867 047e 4FF4E843 		mov	r3, #29696
 868 0482 C4F20003 		movt	r3, 16384
 869 0486 7A68     		ldr	r2, [r7, #4]
 870 0488 3968     		ldr	r1, [r7, #0]
 871 048a 01FA02F2 		lsl	r2, r1, r2
 872 048e 5A63     		str	r2, [r3, #52]
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 873              		.loc 1 620 0
 874 0490 07F10C07 		add	r7, r7, #12
 875 0494 BD46     		mov	sp, r7
 876 0496 80BC     		pop	{r7}
 877 0498 7047     		bx	lr
 878              		.cfi_endproc
 879              	.LFE124:
 881 049a 00BF     		.align	2
 882              		.global	DAC_GetITStatus
 883              		.thumb
 884              		.thumb_func
 886              	DAC_GetITStatus:
 887              	.LFB125:
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 888              		.loc 1 636 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 16
 891              		@ frame_needed = 1, uses_anonymous_args = 0
 892              		@ link register save eliminated.
 893 049c 80B4     		push	{r7}
 894              	.LCFI44:
 895              		.cfi_def_cfa_offset 4
 896              		.cfi_offset 7, -4
 897 049e 85B0     		sub	sp, sp, #20
 898              	.LCFI45:
 899              		.cfi_def_cfa_offset 24
 900 04a0 00AF     		add	r7, sp, #0
 901              	.LCFI46:
 902              		.cfi_def_cfa_register 7
 903 04a2 7860     		str	r0, [r7, #4]
 904 04a4 3960     		str	r1, [r7, #0]
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 905              		.loc 1 637 0
 906 04a6 4FF00003 		mov	r3, #0
 907 04aa FB73     		strb	r3, [r7, #15]
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 908              		.loc 1 638 0
 909 04ac 4FF00003 		mov	r3, #0
 910 04b0 BB60     		str	r3, [r7, #8]
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 911              		.loc 1 645 0
 912 04b2 4FF4E843 		mov	r3, #29696
 913 04b6 C4F20003 		movt	r3, 16384
 914 04ba 1B68     		ldr	r3, [r3, #0]
 915 04bc 1A46     		mov	r2, r3
 916 04be 7B68     		ldr	r3, [r7, #4]
 917 04c0 3968     		ldr	r1, [r7, #0]
 918 04c2 01FA03F3 		lsl	r3, r1, r3
 919 04c6 1340     		ands	r3, r3, r2
 920 04c8 BB60     		str	r3, [r7, #8]
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 921              		.loc 1 648 0
 922 04ca 4FF4E843 		mov	r3, #29696
 923 04ce C4F20003 		movt	r3, 16384
 924 04d2 5B6B     		ldr	r3, [r3, #52]
 925 04d4 1A46     		mov	r2, r3
 926 04d6 7B68     		ldr	r3, [r7, #4]
 927 04d8 3968     		ldr	r1, [r7, #0]
 928 04da 01FA03F3 		lsl	r3, r1, r3
 929 04de 1340     		ands	r3, r3, r2
 930 04e0 002B     		cmp	r3, #0
 931 04e2 06D0     		beq	.L33
 932              		.loc 1 648 0 is_stmt 0 discriminator 1
 933 04e4 BB68     		ldr	r3, [r7, #8]
 934 04e6 002B     		cmp	r3, #0
 935 04e8 03D0     		beq	.L33
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 936              		.loc 1 651 0 is_stmt 1
 937 04ea 4FF00103 		mov	r3, #1
 938 04ee FB73     		strb	r3, [r7, #15]
 939 04f0 02E0     		b	.L34
 940              	.L33:
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 941              		.loc 1 656 0
 942 04f2 4FF00003 		mov	r3, #0
 943 04f6 FB73     		strb	r3, [r7, #15]
 944              	.L34:
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 945              		.loc 1 659 0
 946 04f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 947              		.loc 1 660 0
 948 04fa 1846     		mov	r0, r3
 949 04fc 07F11407 		add	r7, r7, #20
 950 0500 BD46     		mov	sp, r7
 951 0502 80BC     		pop	{r7}
 952 0504 7047     		bx	lr
 953              		.cfi_endproc
 954              	.LFE125:
 956 0506 00BF     		.align	2
 957              		.global	DAC_ClearITPendingBit
 958              		.thumb
 959              		.thumb_func
 961              	DAC_ClearITPendingBit:
 962              	.LFB126:
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 963              		.loc 1 676 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 8
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967              		@ link register save eliminated.
 968 0508 80B4     		push	{r7}
 969              	.LCFI47:
 970              		.cfi_def_cfa_offset 4
 971              		.cfi_offset 7, -4
 972 050a 83B0     		sub	sp, sp, #12
 973              	.LCFI48:
 974              		.cfi_def_cfa_offset 16
 975 050c 00AF     		add	r7, sp, #0
 976              	.LCFI49:
 977              		.cfi_def_cfa_register 7
 978 050e 7860     		str	r0, [r7, #4]
 979 0510 3960     		str	r1, [r7, #0]
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 980              		.loc 1 682 0
 981 0512 4FF4E843 		mov	r3, #29696
 982 0516 C4F20003 		movt	r3, 16384
 983 051a 7A68     		ldr	r2, [r7, #4]
 984 051c 3968     		ldr	r1, [r7, #0]
 985 051e 01FA02F2 		lsl	r2, r1, r2
 986 0522 5A63     		str	r2, [r3, #52]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 987              		.loc 1 683 0
 988 0524 07F10C07 		add	r7, r7, #12
 989 0528 BD46     		mov	sp, r7
 990 052a 80BC     		pop	{r7}
 991 052c 7047     		bx	lr
 992              		.cfi_endproc
 993              	.LFE126:
 995              	.Letext0:
 996              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 997              		.file 3 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Devi
 998              		.file 4 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_S
 999              		.file 5 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dac.c
  C:\Temp\ccTYrTtR.s:18     .text:00000000 $t
  C:\Temp\ccTYrTtR.s:23     .text:00000000 DAC_DeInit
  C:\Temp\ccTYrTtR.s:56     .text:00000020 DAC_Init
  C:\Temp\ccTYrTtR.s:135    .text:00000094 DAC_StructInit
  C:\Temp\ccTYrTtR.s:182    .text:000000c8 DAC_Cmd
  C:\Temp\ccTYrTtR.s:247    .text:00000130 DAC_SoftwareTriggerCmd
  C:\Temp\ccTYrTtR.s:314    .text:000001a0 DAC_DualSoftwareTriggerCmd
  C:\Temp\ccTYrTtR.s:369    .text:000001ec DAC_WaveGenerationCmd
  C:\Temp\ccTYrTtR.s:435    .text:00000250 DAC_SetChannel1Data
  C:\Temp\ccTYrTtR.s:485    .text:00000288 DAC_SetChannel2Data
  C:\Temp\ccTYrTtR.s:535    .text:000002c0 DAC_SetDualChannelData
  C:\Temp\ccTYrTtR.s:608    .text:00000324 DAC_GetDataOutputValue
  C:\Temp\ccTYrTtR.s:658    .text:00000360 DAC_DMACmd
  C:\Temp\ccTYrTtR.s:723    .text:000003c8 DAC_ITConfig
  C:\Temp\ccTYrTtR.s:789    .text:0000042c DAC_GetFlagStatus
  C:\Temp\ccTYrTtR.s:847    .text:00000474 DAC_ClearFlag
  C:\Temp\ccTYrTtR.s:886    .text:0000049c DAC_GetITStatus
  C:\Temp\ccTYrTtR.s:961    .text:00000508 DAC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
