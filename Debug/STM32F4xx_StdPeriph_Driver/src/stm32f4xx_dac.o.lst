   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_dac.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.DAC_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	DAC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	DAC_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************  
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  27              		.loc 1 175 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  39              		.loc 1 177 0
  40 0004 4FF00050 		mov	r0, #536870912
  41 0008 4FF00101 		mov	r1, #1
  42 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  43              		.loc 1 179 0
  44 0010 4FF00050 		mov	r0, #536870912
  45 0014 4FF00001 		mov	r1, #0
  46 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
  47              		.loc 1 180 0
  48 001c 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE110:
  52 001e 00BF     		.section	.text.DAC_Init,"ax",%progbits
  53              		.align	2
  54              		.global	DAC_Init
  55              		.thumb
  56              		.thumb_func
  58              	DAC_Init:
  59              	.LFB111:
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  60              		.loc 1 194 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 16
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65 0000 80B4     		push	{r7}
  66              	.LCFI2:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 7, -4
  69 0002 85B0     		sub	sp, sp, #20
  70              	.LCFI3:
  71              		.cfi_def_cfa_offset 24
  72 0004 00AF     		add	r7, sp, #0
  73              	.LCFI4:
  74              		.cfi_def_cfa_register 7
  75 0006 7860     		str	r0, [r7, #4]
  76 0008 3960     		str	r1, [r7, #0]
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
  77              		.loc 1 195 0
  78 000a 4FF00003 		mov	r3, #0
  79 000e FB60     		str	r3, [r7, #12]
  80 0010 4FF00003 		mov	r3, #0
  81 0014 BB60     		str	r3, [r7, #8]
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  82              		.loc 1 205 0
  83 0016 4FF4E843 		mov	r3, #29696
  84 001a C4F20003 		movt	r3, 16384
  85 001e 1B68     		ldr	r3, [r3, #0]
  86 0020 FB60     		str	r3, [r7, #12]
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  87              		.loc 1 207 0
  88 0022 7B68     		ldr	r3, [r7, #4]
  89 0024 40F6FE72 		movw	r2, #4094
  90 0028 02FA03F3 		lsl	r3, r2, r3
  91 002c 6FEA0303 		mvn	r3, r3
  92 0030 FA68     		ldr	r2, [r7, #12]
  93 0032 1340     		ands	r3, r3, r2
  94 0034 FB60     		str	r3, [r7, #12]
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  95              		.loc 1 214 0
  96 0036 3B68     		ldr	r3, [r7, #0]
  97 0038 1A68     		ldr	r2, [r3, #0]
  98 003a 3B68     		ldr	r3, [r7, #0]
  99 003c 5B68     		ldr	r3, [r3, #4]
 100 003e 1A43     		orrs	r2, r2, r3
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 101              		.loc 1 215 0
 102 0040 3B68     		ldr	r3, [r7, #0]
 103 0042 9B68     		ldr	r3, [r3, #8]
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 104              		.loc 1 214 0
 105 0044 1A43     		orrs	r2, r2, r3
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 106              		.loc 1 216 0
 107 0046 3B68     		ldr	r3, [r7, #0]
 108 0048 DB68     		ldr	r3, [r3, #12]
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 109              		.loc 1 214 0
 110 004a 1343     		orrs	r3, r3, r2
 111 004c BB60     		str	r3, [r7, #8]
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 112              		.loc 1 218 0
 113 004e 7B68     		ldr	r3, [r7, #4]
 114 0050 BA68     		ldr	r2, [r7, #8]
 115 0052 02FA03F3 		lsl	r3, r2, r3
 116 0056 FA68     		ldr	r2, [r7, #12]
 117 0058 1343     		orrs	r3, r3, r2
 118 005a FB60     		str	r3, [r7, #12]
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
 119              		.loc 1 220 0
 120 005c 4FF4E843 		mov	r3, #29696
 121 0060 C4F20003 		movt	r3, 16384
 122 0064 FA68     		ldr	r2, [r7, #12]
 123 0066 1A60     		str	r2, [r3, #0]
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 124              		.loc 1 221 0
 125 0068 07F11407 		add	r7, r7, #20
 126 006c BD46     		mov	sp, r7
 127 006e 80BC     		pop	{r7}
 128 0070 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE111:
 132 0072 00BF     		.section	.text.DAC_StructInit,"ax",%progbits
 133              		.align	2
 134              		.global	DAC_StructInit
 135              		.thumb
 136              		.thumb_func
 138              	DAC_StructInit:
 139              	.LFB112:
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 140              		.loc 1 230 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 8
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 80B4     		push	{r7}
 146              	.LCFI5:
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 7, -4
 149 0002 83B0     		sub	sp, sp, #12
 150              	.LCFI6:
 151              		.cfi_def_cfa_offset 16
 152 0004 00AF     		add	r7, sp, #0
 153              	.LCFI7:
 154              		.cfi_def_cfa_register 7
 155 0006 7860     		str	r0, [r7, #4]
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 156              		.loc 1 233 0
 157 0008 7B68     		ldr	r3, [r7, #4]
 158 000a 4FF00002 		mov	r2, #0
 159 000e 1A60     		str	r2, [r3, #0]
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 160              		.loc 1 235 0
 161 0010 7B68     		ldr	r3, [r7, #4]
 162 0012 4FF00002 		mov	r2, #0
 163 0016 5A60     		str	r2, [r3, #4]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 164              		.loc 1 237 0
 165 0018 7B68     		ldr	r3, [r7, #4]
 166 001a 4FF00002 		mov	r2, #0
 167 001e 9A60     		str	r2, [r3, #8]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 168              		.loc 1 239 0
 169 0020 7B68     		ldr	r3, [r7, #4]
 170 0022 4FF00002 		mov	r2, #0
 171 0026 DA60     		str	r2, [r3, #12]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 172              		.loc 1 240 0
 173 0028 07F10C07 		add	r7, r7, #12
 174 002c BD46     		mov	sp, r7
 175 002e 80BC     		pop	{r7}
 176 0030 7047     		bx	lr
 177              		.cfi_endproc
 178              	.LFE112:
 180 0032 00BF     		.section	.text.DAC_Cmd,"ax",%progbits
 181              		.align	2
 182              		.global	DAC_Cmd
 183              		.thumb
 184              		.thumb_func
 186              	DAC_Cmd:
 187              	.LFB113:
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 188              		.loc 1 254 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193 0000 80B4     		push	{r7}
 194              	.LCFI8:
 195              		.cfi_def_cfa_offset 4
 196              		.cfi_offset 7, -4
 197 0002 83B0     		sub	sp, sp, #12
 198              	.LCFI9:
 199              		.cfi_def_cfa_offset 16
 200 0004 00AF     		add	r7, sp, #0
 201              	.LCFI10:
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
 204 0008 0B46     		mov	r3, r1
 205 000a FB70     		strb	r3, [r7, #3]
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 206              		.loc 1 259 0
 207 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 208 000e 002B     		cmp	r3, #0
 209 0010 11D0     		beq	.L5
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 210              		.loc 1 262 0
 211 0012 4FF4E843 		mov	r3, #29696
 212 0016 C4F20003 		movt	r3, 16384
 213 001a 4FF4E842 		mov	r2, #29696
 214 001e C4F20002 		movt	r2, 16384
 215 0022 1268     		ldr	r2, [r2, #0]
 216 0024 1146     		mov	r1, r2
 217 0026 7A68     		ldr	r2, [r7, #4]
 218 0028 4FF00100 		mov	r0, #1
 219 002c 00FA02F2 		lsl	r2, r0, r2
 220 0030 0A43     		orrs	r2, r2, r1
 221 0032 1A60     		str	r2, [r3, #0]
 222 0034 12E0     		b	.L4
 223              	.L5:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 224              		.loc 1 267 0
 225 0036 4FF4E843 		mov	r3, #29696
 226 003a C4F20003 		movt	r3, 16384
 227 003e 4FF4E842 		mov	r2, #29696
 228 0042 C4F20002 		movt	r2, 16384
 229 0046 1268     		ldr	r2, [r2, #0]
 230 0048 1146     		mov	r1, r2
 231 004a 7A68     		ldr	r2, [r7, #4]
 232 004c 4FF00100 		mov	r0, #1
 233 0050 00FA02F2 		lsl	r2, r0, r2
 234 0054 6FEA0202 		mvn	r2, r2
 235 0058 0A40     		ands	r2, r2, r1
 236 005a 1A60     		str	r2, [r3, #0]
 237              	.L4:
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 238              		.loc 1 269 0
 239 005c 07F10C07 		add	r7, r7, #12
 240 0060 BD46     		mov	sp, r7
 241 0062 80BC     		pop	{r7}
 242 0064 7047     		bx	lr
 243              		.cfi_endproc
 244              	.LFE113:
 246 0066 00BF     		.section	.text.DAC_SoftwareTriggerCmd,"ax",%progbits
 247              		.align	2
 248              		.global	DAC_SoftwareTriggerCmd
 249              		.thumb
 250              		.thumb_func
 252              	DAC_SoftwareTriggerCmd:
 253              	.LFB114:
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 254              		.loc 1 282 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 8
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259 0000 80B4     		push	{r7}
 260              	.LCFI11:
 261              		.cfi_def_cfa_offset 4
 262              		.cfi_offset 7, -4
 263 0002 83B0     		sub	sp, sp, #12
 264              	.LCFI12:
 265              		.cfi_def_cfa_offset 16
 266 0004 00AF     		add	r7, sp, #0
 267              	.LCFI13:
 268              		.cfi_def_cfa_register 7
 269 0006 7860     		str	r0, [r7, #4]
 270 0008 0B46     		mov	r3, r1
 271 000a FB70     		strb	r3, [r7, #3]
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 272              		.loc 1 287 0
 273 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 274 000e 002B     		cmp	r3, #0
 275 0010 13D0     		beq	.L8
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 276              		.loc 1 290 0
 277 0012 4FF4E843 		mov	r3, #29696
 278 0016 C4F20003 		movt	r3, 16384
 279 001a 4FF4E842 		mov	r2, #29696
 280 001e C4F20002 		movt	r2, 16384
 281 0022 5268     		ldr	r2, [r2, #4]
 282 0024 1146     		mov	r1, r2
 283 0026 7A68     		ldr	r2, [r7, #4]
 284 0028 4FEA1212 		lsr	r2, r2, #4
 285 002c 4FF00100 		mov	r0, #1
 286 0030 00FA02F2 		lsl	r2, r0, r2
 287 0034 0A43     		orrs	r2, r2, r1
 288 0036 5A60     		str	r2, [r3, #4]
 289 0038 14E0     		b	.L7
 290              	.L8:
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 291              		.loc 1 295 0
 292 003a 4FF4E843 		mov	r3, #29696
 293 003e C4F20003 		movt	r3, 16384
 294 0042 4FF4E842 		mov	r2, #29696
 295 0046 C4F20002 		movt	r2, 16384
 296 004a 5268     		ldr	r2, [r2, #4]
 297 004c 1146     		mov	r1, r2
 298 004e 7A68     		ldr	r2, [r7, #4]
 299 0050 4FEA1212 		lsr	r2, r2, #4
 300 0054 4FF00100 		mov	r0, #1
 301 0058 00FA02F2 		lsl	r2, r0, r2
 302 005c 6FEA0202 		mvn	r2, r2
 303 0060 0A40     		ands	r2, r2, r1
 304 0062 5A60     		str	r2, [r3, #4]
 305              	.L7:
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 306              		.loc 1 297 0
 307 0064 07F10C07 		add	r7, r7, #12
 308 0068 BD46     		mov	sp, r7
 309 006a 80BC     		pop	{r7}
 310 006c 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE114:
 314 006e 00BF     		.section	.text.DAC_DualSoftwareTriggerCmd,"ax",%progbits
 315              		.align	2
 316              		.global	DAC_DualSoftwareTriggerCmd
 317              		.thumb
 318              		.thumb_func
 320              	DAC_DualSoftwareTriggerCmd:
 321              	.LFB115:
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 322              		.loc 1 306 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 8
 325              		@ frame_needed = 1, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327 0000 80B4     		push	{r7}
 328              	.LCFI14:
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 7, -4
 331 0002 83B0     		sub	sp, sp, #12
 332              	.LCFI15:
 333              		.cfi_def_cfa_offset 16
 334 0004 00AF     		add	r7, sp, #0
 335              	.LCFI16:
 336              		.cfi_def_cfa_register 7
 337 0006 0346     		mov	r3, r0
 338 0008 FB71     		strb	r3, [r7, #7]
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 339              		.loc 1 310 0
 340 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 341 000c 002B     		cmp	r3, #0
 342 000e 0CD0     		beq	.L11
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 343              		.loc 1 313 0
 344 0010 4FF4E843 		mov	r3, #29696
 345 0014 C4F20003 		movt	r3, 16384
 346 0018 4FF4E842 		mov	r2, #29696
 347 001c C4F20002 		movt	r2, 16384
 348 0020 5268     		ldr	r2, [r2, #4]
 349 0022 42F00302 		orr	r2, r2, #3
 350 0026 5A60     		str	r2, [r3, #4]
 351 0028 0BE0     		b	.L10
 352              	.L11:
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 353              		.loc 1 318 0
 354 002a 4FF4E843 		mov	r3, #29696
 355 002e C4F20003 		movt	r3, 16384
 356 0032 4FF4E842 		mov	r2, #29696
 357 0036 C4F20002 		movt	r2, 16384
 358 003a 5268     		ldr	r2, [r2, #4]
 359 003c 22F00302 		bic	r2, r2, #3
 360 0040 5A60     		str	r2, [r3, #4]
 361              	.L10:
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 362              		.loc 1 320 0
 363 0042 07F10C07 		add	r7, r7, #12
 364 0046 BD46     		mov	sp, r7
 365 0048 80BC     		pop	{r7}
 366 004a 7047     		bx	lr
 367              		.cfi_endproc
 368              	.LFE115:
 370              		.section	.text.DAC_WaveGenerationCmd,"ax",%progbits
 371              		.align	2
 372              		.global	DAC_WaveGenerationCmd
 373              		.thumb
 374              		.thumb_func
 376              	DAC_WaveGenerationCmd:
 377              	.LFB116:
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 378              		.loc 1 337 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 16
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383 0000 80B4     		push	{r7}
 384              	.LCFI17:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 7, -4
 387 0002 85B0     		sub	sp, sp, #20
 388              	.LCFI18:
 389              		.cfi_def_cfa_offset 24
 390 0004 00AF     		add	r7, sp, #0
 391              	.LCFI19:
 392              		.cfi_def_cfa_register 7
 393 0006 F860     		str	r0, [r7, #12]
 394 0008 B960     		str	r1, [r7, #8]
 395 000a 1346     		mov	r3, r2
 396 000c FB71     		strb	r3, [r7, #7]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 397              		.loc 1 343 0
 398 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 399 0010 002B     		cmp	r3, #0
 400 0012 10D0     		beq	.L14
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 401              		.loc 1 346 0
 402 0014 4FF4E843 		mov	r3, #29696
 403 0018 C4F20003 		movt	r3, 16384
 404 001c 4FF4E842 		mov	r2, #29696
 405 0020 C4F20002 		movt	r2, 16384
 406 0024 1268     		ldr	r2, [r2, #0]
 407 0026 1146     		mov	r1, r2
 408 0028 FA68     		ldr	r2, [r7, #12]
 409 002a B868     		ldr	r0, [r7, #8]
 410 002c 00FA02F2 		lsl	r2, r0, r2
 411 0030 0A43     		orrs	r2, r2, r1
 412 0032 1A60     		str	r2, [r3, #0]
 413 0034 11E0     		b	.L13
 414              	.L14:
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 415              		.loc 1 351 0
 416 0036 4FF4E843 		mov	r3, #29696
 417 003a C4F20003 		movt	r3, 16384
 418 003e 4FF4E842 		mov	r2, #29696
 419 0042 C4F20002 		movt	r2, 16384
 420 0046 1268     		ldr	r2, [r2, #0]
 421 0048 1146     		mov	r1, r2
 422 004a FA68     		ldr	r2, [r7, #12]
 423 004c B868     		ldr	r0, [r7, #8]
 424 004e 00FA02F2 		lsl	r2, r0, r2
 425 0052 6FEA0202 		mvn	r2, r2
 426 0056 0A40     		ands	r2, r2, r1
 427 0058 1A60     		str	r2, [r3, #0]
 428              	.L13:
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 429              		.loc 1 353 0
 430 005a 07F11407 		add	r7, r7, #20
 431 005e BD46     		mov	sp, r7
 432 0060 80BC     		pop	{r7}
 433 0062 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE116:
 437              		.section	.text.DAC_SetChannel1Data,"ax",%progbits
 438              		.align	2
 439              		.global	DAC_SetChannel1Data
 440              		.thumb
 441              		.thumb_func
 443              	DAC_SetChannel1Data:
 444              	.LFB117:
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 445              		.loc 1 366 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450 0000 80B4     		push	{r7}
 451              	.LCFI20:
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 85B0     		sub	sp, sp, #20
 455              	.LCFI21:
 456              		.cfi_def_cfa_offset 24
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI22:
 459              		.cfi_def_cfa_register 7
 460 0006 7860     		str	r0, [r7, #4]
 461 0008 0B46     		mov	r3, r1
 462 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 463              		.loc 1 367 0
 464 000c 4FF00003 		mov	r3, #0
 465 0010 FB60     		str	r3, [r7, #12]
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 466              		.loc 1 373 0
 467 0012 4FF4E843 		mov	r3, #29696
 468 0016 C4F20003 		movt	r3, 16384
 469 001a FB60     		str	r3, [r7, #12]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 470              		.loc 1 374 0
 471 001c FA68     		ldr	r2, [r7, #12]
 472 001e 7B68     		ldr	r3, [r7, #4]
 473 0020 D318     		adds	r3, r2, r3
 474 0022 03F10803 		add	r3, r3, #8
 475 0026 FB60     		str	r3, [r7, #12]
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 476              		.loc 1 377 0
 477 0028 FB68     		ldr	r3, [r7, #12]
 478 002a 7A88     		ldrh	r2, [r7, #2]
 479 002c 1A60     		str	r2, [r3, #0]
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 480              		.loc 1 378 0
 481 002e 07F11407 		add	r7, r7, #20
 482 0032 BD46     		mov	sp, r7
 483 0034 80BC     		pop	{r7}
 484 0036 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE117:
 488              		.section	.text.DAC_SetChannel2Data,"ax",%progbits
 489              		.align	2
 490              		.global	DAC_SetChannel2Data
 491              		.thumb
 492              		.thumb_func
 494              	DAC_SetChannel2Data:
 495              	.LFB118:
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 496              		.loc 1 391 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 16
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501 0000 80B4     		push	{r7}
 502              	.LCFI23:
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 7, -4
 505 0002 85B0     		sub	sp, sp, #20
 506              	.LCFI24:
 507              		.cfi_def_cfa_offset 24
 508 0004 00AF     		add	r7, sp, #0
 509              	.LCFI25:
 510              		.cfi_def_cfa_register 7
 511 0006 7860     		str	r0, [r7, #4]
 512 0008 0B46     		mov	r3, r1
 513 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 514              		.loc 1 392 0
 515 000c 4FF00003 		mov	r3, #0
 516 0010 FB60     		str	r3, [r7, #12]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 517              		.loc 1 398 0
 518 0012 4FF4E843 		mov	r3, #29696
 519 0016 C4F20003 		movt	r3, 16384
 520 001a FB60     		str	r3, [r7, #12]
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 521              		.loc 1 399 0
 522 001c FA68     		ldr	r2, [r7, #12]
 523 001e 7B68     		ldr	r3, [r7, #4]
 524 0020 D318     		adds	r3, r2, r3
 525 0022 03F11403 		add	r3, r3, #20
 526 0026 FB60     		str	r3, [r7, #12]
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 527              		.loc 1 402 0
 528 0028 FB68     		ldr	r3, [r7, #12]
 529 002a 7A88     		ldrh	r2, [r7, #2]
 530 002c 1A60     		str	r2, [r3, #0]
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 531              		.loc 1 403 0
 532 002e 07F11407 		add	r7, r7, #20
 533 0032 BD46     		mov	sp, r7
 534 0034 80BC     		pop	{r7}
 535 0036 7047     		bx	lr
 536              		.cfi_endproc
 537              	.LFE118:
 539              		.section	.text.DAC_SetDualChannelData,"ax",%progbits
 540              		.align	2
 541              		.global	DAC_SetDualChannelData
 542              		.thumb
 543              		.thumb_func
 545              	DAC_SetDualChannelData:
 546              	.LFB119:
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 547              		.loc 1 419 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 16
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552 0000 80B4     		push	{r7}
 553              	.LCFI26:
 554              		.cfi_def_cfa_offset 4
 555              		.cfi_offset 7, -4
 556 0002 85B0     		sub	sp, sp, #20
 557              	.LCFI27:
 558              		.cfi_def_cfa_offset 24
 559 0004 00AF     		add	r7, sp, #0
 560              	.LCFI28:
 561              		.cfi_def_cfa_register 7
 562 0006 7860     		str	r0, [r7, #4]
 563 0008 1346     		mov	r3, r2
 564 000a 0A46     		mov	r2, r1	@ movhi
 565 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 566 000e 3B80     		strh	r3, [r7, #0]	@ movhi
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 567              		.loc 1 420 0
 568 0010 4FF00003 		mov	r3, #0
 569 0014 FB60     		str	r3, [r7, #12]
 570 0016 4FF00003 		mov	r3, #0
 571 001a BB60     		str	r3, [r7, #8]
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 572              		.loc 1 428 0
 573 001c 7B68     		ldr	r3, [r7, #4]
 574 001e 082B     		cmp	r3, #8
 575 0020 06D1     		bne	.L19
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 576              		.loc 1 430 0
 577 0022 7B88     		ldrh	r3, [r7, #2]
 578 0024 4FEA0322 		lsl	r2, r3, #8
 579 0028 3B88     		ldrh	r3, [r7, #0]
 580 002a 1343     		orrs	r3, r3, r2
 581 002c FB60     		str	r3, [r7, #12]
 582 002e 05E0     		b	.L20
 583              	.L19:
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 584              		.loc 1 434 0
 585 0030 7B88     		ldrh	r3, [r7, #2]
 586 0032 4FEA0342 		lsl	r2, r3, #16
 587 0036 3B88     		ldrh	r3, [r7, #0]
 588 0038 1343     		orrs	r3, r3, r2
 589 003a FB60     		str	r3, [r7, #12]
 590              	.L20:
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 591              		.loc 1 437 0
 592 003c 4FF4E843 		mov	r3, #29696
 593 0040 C4F20003 		movt	r3, 16384
 594 0044 BB60     		str	r3, [r7, #8]
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 595              		.loc 1 438 0
 596 0046 7A68     		ldr	r2, [r7, #4]
 597 0048 BB68     		ldr	r3, [r7, #8]
 598 004a D318     		adds	r3, r2, r3
 599 004c 03F12003 		add	r3, r3, #32
 600 0050 BB60     		str	r3, [r7, #8]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 601              		.loc 1 441 0
 602 0052 BB68     		ldr	r3, [r7, #8]
 603 0054 FA68     		ldr	r2, [r7, #12]
 604 0056 1A60     		str	r2, [r3, #0]
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 605              		.loc 1 442 0
 606 0058 07F11407 		add	r7, r7, #20
 607 005c BD46     		mov	sp, r7
 608 005e 80BC     		pop	{r7}
 609 0060 7047     		bx	lr
 610              		.cfi_endproc
 611              	.LFE119:
 613 0062 00BF     		.section	.text.DAC_GetDataOutputValue,"ax",%progbits
 614              		.align	2
 615              		.global	DAC_GetDataOutputValue
 616              		.thumb
 617              		.thumb_func
 619              	DAC_GetDataOutputValue:
 620              	.LFB120:
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 621              		.loc 1 453 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 16
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626 0000 80B4     		push	{r7}
 627              	.LCFI29:
 628              		.cfi_def_cfa_offset 4
 629              		.cfi_offset 7, -4
 630 0002 85B0     		sub	sp, sp, #20
 631              	.LCFI30:
 632              		.cfi_def_cfa_offset 24
 633 0004 00AF     		add	r7, sp, #0
 634              	.LCFI31:
 635              		.cfi_def_cfa_register 7
 636 0006 7860     		str	r0, [r7, #4]
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 637              		.loc 1 454 0
 638 0008 4FF00003 		mov	r3, #0
 639 000c FB60     		str	r3, [r7, #12]
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 640              		.loc 1 459 0
 641 000e 4FF4E843 		mov	r3, #29696
 642 0012 C4F20003 		movt	r3, 16384
 643 0016 FB60     		str	r3, [r7, #12]
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 644              		.loc 1 460 0
 645 0018 7B68     		ldr	r3, [r7, #4]
 646 001a 4FEA9302 		lsr	r2, r3, #2
 647 001e FB68     		ldr	r3, [r7, #12]
 648 0020 D318     		adds	r3, r2, r3
 649 0022 03F12C03 		add	r3, r3, #44
 650 0026 FB60     		str	r3, [r7, #12]
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 651              		.loc 1 463 0
 652 0028 FB68     		ldr	r3, [r7, #12]
 653 002a 1B68     		ldr	r3, [r3, #0]
 654 002c 9BB2     		uxth	r3, r3
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 655              		.loc 1 464 0
 656 002e 1846     		mov	r0, r3
 657 0030 07F11407 		add	r7, r7, #20
 658 0034 BD46     		mov	sp, r7
 659 0036 80BC     		pop	{r7}
 660 0038 7047     		bx	lr
 661              		.cfi_endproc
 662              	.LFE120:
 664 003a 00BF     		.section	.text.DAC_DMACmd,"ax",%progbits
 665              		.align	2
 666              		.global	DAC_DMACmd
 667              		.thumb
 668              		.thumb_func
 670              	DAC_DMACmd:
 671              	.LFB121:
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 672              		.loc 1 498 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 8
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              	.LCFI32:
 679              		.cfi_def_cfa_offset 4
 680              		.cfi_offset 7, -4
 681 0002 83B0     		sub	sp, sp, #12
 682              	.LCFI33:
 683              		.cfi_def_cfa_offset 16
 684 0004 00AF     		add	r7, sp, #0
 685              	.LCFI34:
 686              		.cfi_def_cfa_register 7
 687 0006 7860     		str	r0, [r7, #4]
 688 0008 0B46     		mov	r3, r1
 689 000a FB70     		strb	r3, [r7, #3]
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 690              		.loc 1 503 0
 691 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 692 000e 002B     		cmp	r3, #0
 693 0010 11D0     		beq	.L23
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 694              		.loc 1 506 0
 695 0012 4FF4E843 		mov	r3, #29696
 696 0016 C4F20003 		movt	r3, 16384
 697 001a 4FF4E842 		mov	r2, #29696
 698 001e C4F20002 		movt	r2, 16384
 699 0022 1268     		ldr	r2, [r2, #0]
 700 0024 1146     		mov	r1, r2
 701 0026 7A68     		ldr	r2, [r7, #4]
 702 0028 4FF48050 		mov	r0, #4096
 703 002c 00FA02F2 		lsl	r2, r0, r2
 704 0030 0A43     		orrs	r2, r2, r1
 705 0032 1A60     		str	r2, [r3, #0]
 706 0034 12E0     		b	.L22
 707              	.L23:
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 708              		.loc 1 511 0
 709 0036 4FF4E843 		mov	r3, #29696
 710 003a C4F20003 		movt	r3, 16384
 711 003e 4FF4E842 		mov	r2, #29696
 712 0042 C4F20002 		movt	r2, 16384
 713 0046 1268     		ldr	r2, [r2, #0]
 714 0048 1146     		mov	r1, r2
 715 004a 7A68     		ldr	r2, [r7, #4]
 716 004c 4FF48050 		mov	r0, #4096
 717 0050 00FA02F2 		lsl	r2, r0, r2
 718 0054 6FEA0202 		mvn	r2, r2
 719 0058 0A40     		ands	r2, r2, r1
 720 005a 1A60     		str	r2, [r3, #0]
 721              	.L22:
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 722              		.loc 1 513 0
 723 005c 07F10C07 		add	r7, r7, #12
 724 0060 BD46     		mov	sp, r7
 725 0062 80BC     		pop	{r7}
 726 0064 7047     		bx	lr
 727              		.cfi_endproc
 728              	.LFE121:
 730 0066 00BF     		.section	.text.DAC_ITConfig,"ax",%progbits
 731              		.align	2
 732              		.global	DAC_ITConfig
 733              		.thumb
 734              		.thumb_func
 736              	DAC_ITConfig:
 737              	.LFB122:
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 738              		.loc 1 546 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 16
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743 0000 80B4     		push	{r7}
 744              	.LCFI35:
 745              		.cfi_def_cfa_offset 4
 746              		.cfi_offset 7, -4
 747 0002 85B0     		sub	sp, sp, #20
 748              	.LCFI36:
 749              		.cfi_def_cfa_offset 24
 750 0004 00AF     		add	r7, sp, #0
 751              	.LCFI37:
 752              		.cfi_def_cfa_register 7
 753 0006 F860     		str	r0, [r7, #12]
 754 0008 B960     		str	r1, [r7, #8]
 755 000a 1346     		mov	r3, r2
 756 000c FB71     		strb	r3, [r7, #7]
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 757              		.loc 1 552 0
 758 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 759 0010 002B     		cmp	r3, #0
 760 0012 10D0     		beq	.L26
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 761              		.loc 1 555 0
 762 0014 4FF4E843 		mov	r3, #29696
 763 0018 C4F20003 		movt	r3, 16384
 764 001c 4FF4E842 		mov	r2, #29696
 765 0020 C4F20002 		movt	r2, 16384
 766 0024 1268     		ldr	r2, [r2, #0]
 767 0026 1146     		mov	r1, r2
 768 0028 FA68     		ldr	r2, [r7, #12]
 769 002a B868     		ldr	r0, [r7, #8]
 770 002c 00FA02F2 		lsl	r2, r0, r2
 771 0030 0A43     		orrs	r2, r2, r1
 772 0032 1A60     		str	r2, [r3, #0]
 773 0034 11E0     		b	.L25
 774              	.L26:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 775              		.loc 1 560 0
 776 0036 4FF4E843 		mov	r3, #29696
 777 003a C4F20003 		movt	r3, 16384
 778 003e 4FF4E842 		mov	r2, #29696
 779 0042 C4F20002 		movt	r2, 16384
 780 0046 1268     		ldr	r2, [r2, #0]
 781 0048 1146     		mov	r1, r2
 782 004a FA68     		ldr	r2, [r7, #12]
 783 004c B868     		ldr	r0, [r7, #8]
 784 004e 00FA02F2 		lsl	r2, r0, r2
 785 0052 6FEA0202 		mvn	r2, r2
 786 0056 0A40     		ands	r2, r2, r1
 787 0058 1A60     		str	r2, [r3, #0]
 788              	.L25:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 789              		.loc 1 562 0
 790 005a 07F11407 		add	r7, r7, #20
 791 005e BD46     		mov	sp, r7
 792 0060 80BC     		pop	{r7}
 793 0062 7047     		bx	lr
 794              		.cfi_endproc
 795              	.LFE122:
 797              		.section	.text.DAC_GetFlagStatus,"ax",%progbits
 798              		.align	2
 799              		.global	DAC_GetFlagStatus
 800              		.thumb
 801              		.thumb_func
 803              	DAC_GetFlagStatus:
 804              	.LFB123:
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 805              		.loc 1 578 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 16
 808              		@ frame_needed = 1, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810 0000 80B4     		push	{r7}
 811              	.LCFI38:
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0002 85B0     		sub	sp, sp, #20
 815              	.LCFI39:
 816              		.cfi_def_cfa_offset 24
 817 0004 00AF     		add	r7, sp, #0
 818              	.LCFI40:
 819              		.cfi_def_cfa_register 7
 820 0006 7860     		str	r0, [r7, #4]
 821 0008 3960     		str	r1, [r7, #0]
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 822              		.loc 1 579 0
 823 000a 4FF00003 		mov	r3, #0
 824 000e FB73     		strb	r3, [r7, #15]
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 825              		.loc 1 585 0
 826 0010 4FF4E843 		mov	r3, #29696
 827 0014 C4F20003 		movt	r3, 16384
 828 0018 5B6B     		ldr	r3, [r3, #52]
 829 001a 1A46     		mov	r2, r3
 830 001c 7B68     		ldr	r3, [r7, #4]
 831 001e 3968     		ldr	r1, [r7, #0]
 832 0020 01FA03F3 		lsl	r3, r1, r3
 833 0024 1340     		ands	r3, r3, r2
 834 0026 002B     		cmp	r3, #0
 835 0028 03D0     		beq	.L29
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 836              		.loc 1 588 0
 837 002a 4FF00103 		mov	r3, #1
 838 002e FB73     		strb	r3, [r7, #15]
 839 0030 02E0     		b	.L30
 840              	.L29:
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 841              		.loc 1 593 0
 842 0032 4FF00003 		mov	r3, #0
 843 0036 FB73     		strb	r3, [r7, #15]
 844              	.L30:
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 845              		.loc 1 596 0
 846 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 847              		.loc 1 597 0
 848 003a 1846     		mov	r0, r3
 849 003c 07F11407 		add	r7, r7, #20
 850 0040 BD46     		mov	sp, r7
 851 0042 80BC     		pop	{r7}
 852 0044 7047     		bx	lr
 853              		.cfi_endproc
 854              	.LFE123:
 856 0046 00BF     		.section	.text.DAC_ClearFlag,"ax",%progbits
 857              		.align	2
 858              		.global	DAC_ClearFlag
 859              		.thumb
 860              		.thumb_func
 862              	DAC_ClearFlag:
 863              	.LFB124:
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 864              		.loc 1 613 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 8
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              	.LCFI41:
 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 7, -4
 873 0002 83B0     		sub	sp, sp, #12
 874              	.LCFI42:
 875              		.cfi_def_cfa_offset 16
 876 0004 00AF     		add	r7, sp, #0
 877              	.LCFI43:
 878              		.cfi_def_cfa_register 7
 879 0006 7860     		str	r0, [r7, #4]
 880 0008 3960     		str	r1, [r7, #0]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 881              		.loc 1 619 0
 882 000a 4FF4E843 		mov	r3, #29696
 883 000e C4F20003 		movt	r3, 16384
 884 0012 7A68     		ldr	r2, [r7, #4]
 885 0014 3968     		ldr	r1, [r7, #0]
 886 0016 01FA02F2 		lsl	r2, r1, r2
 887 001a 5A63     		str	r2, [r3, #52]
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 888              		.loc 1 620 0
 889 001c 07F10C07 		add	r7, r7, #12
 890 0020 BD46     		mov	sp, r7
 891 0022 80BC     		pop	{r7}
 892 0024 7047     		bx	lr
 893              		.cfi_endproc
 894              	.LFE124:
 896 0026 00BF     		.section	.text.DAC_GetITStatus,"ax",%progbits
 897              		.align	2
 898              		.global	DAC_GetITStatus
 899              		.thumb
 900              		.thumb_func
 902              	DAC_GetITStatus:
 903              	.LFB125:
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 904              		.loc 1 636 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 16
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 909 0000 80B4     		push	{r7}
 910              	.LCFI44:
 911              		.cfi_def_cfa_offset 4
 912              		.cfi_offset 7, -4
 913 0002 85B0     		sub	sp, sp, #20
 914              	.LCFI45:
 915              		.cfi_def_cfa_offset 24
 916 0004 00AF     		add	r7, sp, #0
 917              	.LCFI46:
 918              		.cfi_def_cfa_register 7
 919 0006 7860     		str	r0, [r7, #4]
 920 0008 3960     		str	r1, [r7, #0]
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 921              		.loc 1 637 0
 922 000a 4FF00003 		mov	r3, #0
 923 000e FB73     		strb	r3, [r7, #15]
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 924              		.loc 1 638 0
 925 0010 4FF00003 		mov	r3, #0
 926 0014 BB60     		str	r3, [r7, #8]
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 927              		.loc 1 645 0
 928 0016 4FF4E843 		mov	r3, #29696
 929 001a C4F20003 		movt	r3, 16384
 930 001e 1B68     		ldr	r3, [r3, #0]
 931 0020 1A46     		mov	r2, r3
 932 0022 7B68     		ldr	r3, [r7, #4]
 933 0024 3968     		ldr	r1, [r7, #0]
 934 0026 01FA03F3 		lsl	r3, r1, r3
 935 002a 1340     		ands	r3, r3, r2
 936 002c BB60     		str	r3, [r7, #8]
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 937              		.loc 1 648 0
 938 002e 4FF4E843 		mov	r3, #29696
 939 0032 C4F20003 		movt	r3, 16384
 940 0036 5B6B     		ldr	r3, [r3, #52]
 941 0038 1A46     		mov	r2, r3
 942 003a 7B68     		ldr	r3, [r7, #4]
 943 003c 3968     		ldr	r1, [r7, #0]
 944 003e 01FA03F3 		lsl	r3, r1, r3
 945 0042 1340     		ands	r3, r3, r2
 946 0044 002B     		cmp	r3, #0
 947 0046 06D0     		beq	.L33
 948              		.loc 1 648 0 is_stmt 0 discriminator 1
 949 0048 BB68     		ldr	r3, [r7, #8]
 950 004a 002B     		cmp	r3, #0
 951 004c 03D0     		beq	.L33
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 952              		.loc 1 651 0 is_stmt 1
 953 004e 4FF00103 		mov	r3, #1
 954 0052 FB73     		strb	r3, [r7, #15]
 955 0054 02E0     		b	.L34
 956              	.L33:
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 957              		.loc 1 656 0
 958 0056 4FF00003 		mov	r3, #0
 959 005a FB73     		strb	r3, [r7, #15]
 960              	.L34:
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 961              		.loc 1 659 0
 962 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 963              		.loc 1 660 0
 964 005e 1846     		mov	r0, r3
 965 0060 07F11407 		add	r7, r7, #20
 966 0064 BD46     		mov	sp, r7
 967 0066 80BC     		pop	{r7}
 968 0068 7047     		bx	lr
 969              		.cfi_endproc
 970              	.LFE125:
 972 006a 00BF     		.section	.text.DAC_ClearITPendingBit,"ax",%progbits
 973              		.align	2
 974              		.global	DAC_ClearITPendingBit
 975              		.thumb
 976              		.thumb_func
 978              	DAC_ClearITPendingBit:
 979              	.LFB126:
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 980              		.loc 1 676 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 985 0000 80B4     		push	{r7}
 986              	.LCFI47:
 987              		.cfi_def_cfa_offset 4
 988              		.cfi_offset 7, -4
 989 0002 83B0     		sub	sp, sp, #12
 990              	.LCFI48:
 991              		.cfi_def_cfa_offset 16
 992 0004 00AF     		add	r7, sp, #0
 993              	.LCFI49:
 994              		.cfi_def_cfa_register 7
 995 0006 7860     		str	r0, [r7, #4]
 996 0008 3960     		str	r1, [r7, #0]
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 997              		.loc 1 682 0
 998 000a 4FF4E843 		mov	r3, #29696
 999 000e C4F20003 		movt	r3, 16384
 1000 0012 7A68     		ldr	r2, [r7, #4]
 1001 0014 3968     		ldr	r1, [r7, #0]
 1002 0016 01FA02F2 		lsl	r2, r1, r2
 1003 001a 5A63     		str	r2, [r3, #52]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 1004              		.loc 1 683 0
 1005 001c 07F10C07 		add	r7, r7, #12
 1006 0020 BD46     		mov	sp, r7
 1007 0022 80BC     		pop	{r7}
 1008 0024 7047     		bx	lr
 1009              		.cfi_endproc
 1010              	.LFE126:
 1012 0026 00BF     		.text
 1013              	.Letext0:
 1014              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 1015              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 1016              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_dac.h
 1017              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dac.c
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:19     .text.DAC_DeInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:24     .text.DAC_DeInit:00000000 DAC_DeInit
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:53     .text.DAC_Init:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:58     .text.DAC_Init:00000000 DAC_Init
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:133    .text.DAC_StructInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:138    .text.DAC_StructInit:00000000 DAC_StructInit
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:181    .text.DAC_Cmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:186    .text.DAC_Cmd:00000000 DAC_Cmd
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:247    .text.DAC_SoftwareTriggerCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:252    .text.DAC_SoftwareTriggerCmd:00000000 DAC_SoftwareTriggerCmd
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:315    .text.DAC_DualSoftwareTriggerCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:320    .text.DAC_DualSoftwareTriggerCmd:00000000 DAC_DualSoftwareTriggerCmd
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:371    .text.DAC_WaveGenerationCmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:376    .text.DAC_WaveGenerationCmd:00000000 DAC_WaveGenerationCmd
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:438    .text.DAC_SetChannel1Data:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:443    .text.DAC_SetChannel1Data:00000000 DAC_SetChannel1Data
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:489    .text.DAC_SetChannel2Data:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:494    .text.DAC_SetChannel2Data:00000000 DAC_SetChannel2Data
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:540    .text.DAC_SetDualChannelData:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:545    .text.DAC_SetDualChannelData:00000000 DAC_SetDualChannelData
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:614    .text.DAC_GetDataOutputValue:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:619    .text.DAC_GetDataOutputValue:00000000 DAC_GetDataOutputValue
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:665    .text.DAC_DMACmd:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:670    .text.DAC_DMACmd:00000000 DAC_DMACmd
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:731    .text.DAC_ITConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:736    .text.DAC_ITConfig:00000000 DAC_ITConfig
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:798    .text.DAC_GetFlagStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:803    .text.DAC_GetFlagStatus:00000000 DAC_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:857    .text.DAC_ClearFlag:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:862    .text.DAC_ClearFlag:00000000 DAC_ClearFlag
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:897    .text.DAC_GetITStatus:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:902    .text.DAC_GetITStatus:00000000 DAC_GetITStatus
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:973    .text.DAC_ClearITPendingBit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cc8TA4FA.s:978    .text.DAC_ClearITPendingBit:00000000 DAC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
