   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_dac.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	DAC_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	DAC_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************  
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  27              		.loc 1 175 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  39              		.loc 1 177 0
  40 0004 4FF00050 		mov	r0, #536870912
  41 0008 4FF00101 		mov	r1, #1
  42 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  43              		.loc 1 179 0
  44 0010 4FF00050 		mov	r0, #536870912
  45 0014 4FF00001 		mov	r1, #0
  46 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
  47              		.loc 1 180 0
  48 001c 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE110:
  52 001e 00BF     		.align	2
  53              		.global	DAC_Init
  54              		.thumb
  55              		.thumb_func
  57              	DAC_Init:
  58              	.LFB111:
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  59              		.loc 1 194 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 16
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64 0020 80B4     		push	{r7}
  65              	.LCFI2:
  66              		.cfi_def_cfa_offset 4
  67              		.cfi_offset 7, -4
  68 0022 85B0     		sub	sp, sp, #20
  69              	.LCFI3:
  70              		.cfi_def_cfa_offset 24
  71 0024 00AF     		add	r7, sp, #0
  72              	.LCFI4:
  73              		.cfi_def_cfa_register 7
  74 0026 7860     		str	r0, [r7, #4]
  75 0028 3960     		str	r1, [r7, #0]
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
  76              		.loc 1 195 0
  77 002a 4FF00003 		mov	r3, #0
  78 002e FB60     		str	r3, [r7, #12]
  79 0030 4FF00003 		mov	r3, #0
  80 0034 BB60     		str	r3, [r7, #8]
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  81              		.loc 1 205 0
  82 0036 4FF4E843 		mov	r3, #29696
  83 003a C4F20003 		movt	r3, 16384
  84 003e 1B68     		ldr	r3, [r3, #0]
  85 0040 FB60     		str	r3, [r7, #12]
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  86              		.loc 1 207 0
  87 0042 7B68     		ldr	r3, [r7, #4]
  88 0044 40F6FE72 		movw	r2, #4094
  89 0048 02FA03F3 		lsl	r3, r2, r3
  90 004c 6FEA0303 		mvn	r3, r3
  91 0050 FA68     		ldr	r2, [r7, #12]
  92 0052 1340     		ands	r3, r3, r2
  93 0054 FB60     		str	r3, [r7, #12]
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  94              		.loc 1 214 0
  95 0056 3B68     		ldr	r3, [r7, #0]
  96 0058 1A68     		ldr	r2, [r3, #0]
  97 005a 3B68     		ldr	r3, [r7, #0]
  98 005c 5B68     		ldr	r3, [r3, #4]
  99 005e 1A43     		orrs	r2, r2, r3
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
 100              		.loc 1 215 0
 101 0060 3B68     		ldr	r3, [r7, #0]
 102 0062 9B68     		ldr	r3, [r3, #8]
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 103              		.loc 1 214 0
 104 0064 1A43     		orrs	r2, r2, r3
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
 105              		.loc 1 216 0
 106 0066 3B68     		ldr	r3, [r7, #0]
 107 0068 DB68     		ldr	r3, [r3, #12]
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
 108              		.loc 1 214 0
 109 006a 1343     		orrs	r3, r3, r2
 110 006c BB60     		str	r3, [r7, #8]
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
 111              		.loc 1 218 0
 112 006e 7B68     		ldr	r3, [r7, #4]
 113 0070 BA68     		ldr	r2, [r7, #8]
 114 0072 02FA03F3 		lsl	r3, r2, r3
 115 0076 FA68     		ldr	r2, [r7, #12]
 116 0078 1343     		orrs	r3, r3, r2
 117 007a FB60     		str	r3, [r7, #12]
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
 118              		.loc 1 220 0
 119 007c 4FF4E843 		mov	r3, #29696
 120 0080 C4F20003 		movt	r3, 16384
 121 0084 FA68     		ldr	r2, [r7, #12]
 122 0086 1A60     		str	r2, [r3, #0]
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 123              		.loc 1 221 0
 124 0088 07F11407 		add	r7, r7, #20
 125 008c BD46     		mov	sp, r7
 126 008e 80BC     		pop	{r7}
 127 0090 7047     		bx	lr
 128              		.cfi_endproc
 129              	.LFE111:
 131 0092 00BF     		.align	2
 132              		.global	DAC_StructInit
 133              		.thumb
 134              		.thumb_func
 136              	DAC_StructInit:
 137              	.LFB112:
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 138              		.loc 1 230 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 8
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143 0094 80B4     		push	{r7}
 144              	.LCFI5:
 145              		.cfi_def_cfa_offset 4
 146              		.cfi_offset 7, -4
 147 0096 83B0     		sub	sp, sp, #12
 148              	.LCFI6:
 149              		.cfi_def_cfa_offset 16
 150 0098 00AF     		add	r7, sp, #0
 151              	.LCFI7:
 152              		.cfi_def_cfa_register 7
 153 009a 7860     		str	r0, [r7, #4]
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 154              		.loc 1 233 0
 155 009c 7B68     		ldr	r3, [r7, #4]
 156 009e 4FF00002 		mov	r2, #0
 157 00a2 1A60     		str	r2, [r3, #0]
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 158              		.loc 1 235 0
 159 00a4 7B68     		ldr	r3, [r7, #4]
 160 00a6 4FF00002 		mov	r2, #0
 161 00aa 5A60     		str	r2, [r3, #4]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 162              		.loc 1 237 0
 163 00ac 7B68     		ldr	r3, [r7, #4]
 164 00ae 4FF00002 		mov	r2, #0
 165 00b2 9A60     		str	r2, [r3, #8]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 166              		.loc 1 239 0
 167 00b4 7B68     		ldr	r3, [r7, #4]
 168 00b6 4FF00002 		mov	r2, #0
 169 00ba DA60     		str	r2, [r3, #12]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 170              		.loc 1 240 0
 171 00bc 07F10C07 		add	r7, r7, #12
 172 00c0 BD46     		mov	sp, r7
 173 00c2 80BC     		pop	{r7}
 174 00c4 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE112:
 178 00c6 00BF     		.align	2
 179              		.global	DAC_Cmd
 180              		.thumb
 181              		.thumb_func
 183              	DAC_Cmd:
 184              	.LFB113:
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 185              		.loc 1 254 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 8
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190 00c8 80B4     		push	{r7}
 191              	.LCFI8:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 7, -4
 194 00ca 83B0     		sub	sp, sp, #12
 195              	.LCFI9:
 196              		.cfi_def_cfa_offset 16
 197 00cc 00AF     		add	r7, sp, #0
 198              	.LCFI10:
 199              		.cfi_def_cfa_register 7
 200 00ce 7860     		str	r0, [r7, #4]
 201 00d0 0B46     		mov	r3, r1
 202 00d2 FB70     		strb	r3, [r7, #3]
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 203              		.loc 1 259 0
 204 00d4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 205 00d6 002B     		cmp	r3, #0
 206 00d8 11D0     		beq	.L5
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 207              		.loc 1 262 0
 208 00da 4FF4E843 		mov	r3, #29696
 209 00de C4F20003 		movt	r3, 16384
 210 00e2 4FF4E842 		mov	r2, #29696
 211 00e6 C4F20002 		movt	r2, 16384
 212 00ea 1268     		ldr	r2, [r2, #0]
 213 00ec 1146     		mov	r1, r2
 214 00ee 7A68     		ldr	r2, [r7, #4]
 215 00f0 4FF00100 		mov	r0, #1
 216 00f4 00FA02F2 		lsl	r2, r0, r2
 217 00f8 0A43     		orrs	r2, r2, r1
 218 00fa 1A60     		str	r2, [r3, #0]
 219 00fc 12E0     		b	.L4
 220              	.L5:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 221              		.loc 1 267 0
 222 00fe 4FF4E843 		mov	r3, #29696
 223 0102 C4F20003 		movt	r3, 16384
 224 0106 4FF4E842 		mov	r2, #29696
 225 010a C4F20002 		movt	r2, 16384
 226 010e 1268     		ldr	r2, [r2, #0]
 227 0110 1146     		mov	r1, r2
 228 0112 7A68     		ldr	r2, [r7, #4]
 229 0114 4FF00100 		mov	r0, #1
 230 0118 00FA02F2 		lsl	r2, r0, r2
 231 011c 6FEA0202 		mvn	r2, r2
 232 0120 0A40     		ands	r2, r2, r1
 233 0122 1A60     		str	r2, [r3, #0]
 234              	.L4:
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 235              		.loc 1 269 0
 236 0124 07F10C07 		add	r7, r7, #12
 237 0128 BD46     		mov	sp, r7
 238 012a 80BC     		pop	{r7}
 239 012c 7047     		bx	lr
 240              		.cfi_endproc
 241              	.LFE113:
 243 012e 00BF     		.align	2
 244              		.global	DAC_SoftwareTriggerCmd
 245              		.thumb
 246              		.thumb_func
 248              	DAC_SoftwareTriggerCmd:
 249              	.LFB114:
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 250              		.loc 1 282 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 8
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255 0130 80B4     		push	{r7}
 256              	.LCFI11:
 257              		.cfi_def_cfa_offset 4
 258              		.cfi_offset 7, -4
 259 0132 83B0     		sub	sp, sp, #12
 260              	.LCFI12:
 261              		.cfi_def_cfa_offset 16
 262 0134 00AF     		add	r7, sp, #0
 263              	.LCFI13:
 264              		.cfi_def_cfa_register 7
 265 0136 7860     		str	r0, [r7, #4]
 266 0138 0B46     		mov	r3, r1
 267 013a FB70     		strb	r3, [r7, #3]
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 268              		.loc 1 287 0
 269 013c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 270 013e 002B     		cmp	r3, #0
 271 0140 13D0     		beq	.L8
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 272              		.loc 1 290 0
 273 0142 4FF4E843 		mov	r3, #29696
 274 0146 C4F20003 		movt	r3, 16384
 275 014a 4FF4E842 		mov	r2, #29696
 276 014e C4F20002 		movt	r2, 16384
 277 0152 5268     		ldr	r2, [r2, #4]
 278 0154 1146     		mov	r1, r2
 279 0156 7A68     		ldr	r2, [r7, #4]
 280 0158 4FEA1212 		lsr	r2, r2, #4
 281 015c 4FF00100 		mov	r0, #1
 282 0160 00FA02F2 		lsl	r2, r0, r2
 283 0164 0A43     		orrs	r2, r2, r1
 284 0166 5A60     		str	r2, [r3, #4]
 285 0168 14E0     		b	.L7
 286              	.L8:
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 287              		.loc 1 295 0
 288 016a 4FF4E843 		mov	r3, #29696
 289 016e C4F20003 		movt	r3, 16384
 290 0172 4FF4E842 		mov	r2, #29696
 291 0176 C4F20002 		movt	r2, 16384
 292 017a 5268     		ldr	r2, [r2, #4]
 293 017c 1146     		mov	r1, r2
 294 017e 7A68     		ldr	r2, [r7, #4]
 295 0180 4FEA1212 		lsr	r2, r2, #4
 296 0184 4FF00100 		mov	r0, #1
 297 0188 00FA02F2 		lsl	r2, r0, r2
 298 018c 6FEA0202 		mvn	r2, r2
 299 0190 0A40     		ands	r2, r2, r1
 300 0192 5A60     		str	r2, [r3, #4]
 301              	.L7:
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 302              		.loc 1 297 0
 303 0194 07F10C07 		add	r7, r7, #12
 304 0198 BD46     		mov	sp, r7
 305 019a 80BC     		pop	{r7}
 306 019c 7047     		bx	lr
 307              		.cfi_endproc
 308              	.LFE114:
 310 019e 00BF     		.align	2
 311              		.global	DAC_DualSoftwareTriggerCmd
 312              		.thumb
 313              		.thumb_func
 315              	DAC_DualSoftwareTriggerCmd:
 316              	.LFB115:
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 317              		.loc 1 306 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 8
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 01a0 80B4     		push	{r7}
 323              	.LCFI14:
 324              		.cfi_def_cfa_offset 4
 325              		.cfi_offset 7, -4
 326 01a2 83B0     		sub	sp, sp, #12
 327              	.LCFI15:
 328              		.cfi_def_cfa_offset 16
 329 01a4 00AF     		add	r7, sp, #0
 330              	.LCFI16:
 331              		.cfi_def_cfa_register 7
 332 01a6 0346     		mov	r3, r0
 333 01a8 FB71     		strb	r3, [r7, #7]
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 334              		.loc 1 310 0
 335 01aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 336 01ac 002B     		cmp	r3, #0
 337 01ae 0CD0     		beq	.L11
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 338              		.loc 1 313 0
 339 01b0 4FF4E843 		mov	r3, #29696
 340 01b4 C4F20003 		movt	r3, 16384
 341 01b8 4FF4E842 		mov	r2, #29696
 342 01bc C4F20002 		movt	r2, 16384
 343 01c0 5268     		ldr	r2, [r2, #4]
 344 01c2 42F00302 		orr	r2, r2, #3
 345 01c6 5A60     		str	r2, [r3, #4]
 346 01c8 0BE0     		b	.L10
 347              	.L11:
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 348              		.loc 1 318 0
 349 01ca 4FF4E843 		mov	r3, #29696
 350 01ce C4F20003 		movt	r3, 16384
 351 01d2 4FF4E842 		mov	r2, #29696
 352 01d6 C4F20002 		movt	r2, 16384
 353 01da 5268     		ldr	r2, [r2, #4]
 354 01dc 22F00302 		bic	r2, r2, #3
 355 01e0 5A60     		str	r2, [r3, #4]
 356              	.L10:
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 357              		.loc 1 320 0
 358 01e2 07F10C07 		add	r7, r7, #12
 359 01e6 BD46     		mov	sp, r7
 360 01e8 80BC     		pop	{r7}
 361 01ea 7047     		bx	lr
 362              		.cfi_endproc
 363              	.LFE115:
 365              		.align	2
 366              		.global	DAC_WaveGenerationCmd
 367              		.thumb
 368              		.thumb_func
 370              	DAC_WaveGenerationCmd:
 371              	.LFB116:
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 372              		.loc 1 337 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 16
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 377 01ec 80B4     		push	{r7}
 378              	.LCFI17:
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 01ee 85B0     		sub	sp, sp, #20
 382              	.LCFI18:
 383              		.cfi_def_cfa_offset 24
 384 01f0 00AF     		add	r7, sp, #0
 385              	.LCFI19:
 386              		.cfi_def_cfa_register 7
 387 01f2 F860     		str	r0, [r7, #12]
 388 01f4 B960     		str	r1, [r7, #8]
 389 01f6 1346     		mov	r3, r2
 390 01f8 FB71     		strb	r3, [r7, #7]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 391              		.loc 1 343 0
 392 01fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 393 01fc 002B     		cmp	r3, #0
 394 01fe 10D0     		beq	.L14
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 395              		.loc 1 346 0
 396 0200 4FF4E843 		mov	r3, #29696
 397 0204 C4F20003 		movt	r3, 16384
 398 0208 4FF4E842 		mov	r2, #29696
 399 020c C4F20002 		movt	r2, 16384
 400 0210 1268     		ldr	r2, [r2, #0]
 401 0212 1146     		mov	r1, r2
 402 0214 FA68     		ldr	r2, [r7, #12]
 403 0216 B868     		ldr	r0, [r7, #8]
 404 0218 00FA02F2 		lsl	r2, r0, r2
 405 021c 0A43     		orrs	r2, r2, r1
 406 021e 1A60     		str	r2, [r3, #0]
 407 0220 11E0     		b	.L13
 408              	.L14:
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 409              		.loc 1 351 0
 410 0222 4FF4E843 		mov	r3, #29696
 411 0226 C4F20003 		movt	r3, 16384
 412 022a 4FF4E842 		mov	r2, #29696
 413 022e C4F20002 		movt	r2, 16384
 414 0232 1268     		ldr	r2, [r2, #0]
 415 0234 1146     		mov	r1, r2
 416 0236 FA68     		ldr	r2, [r7, #12]
 417 0238 B868     		ldr	r0, [r7, #8]
 418 023a 00FA02F2 		lsl	r2, r0, r2
 419 023e 6FEA0202 		mvn	r2, r2
 420 0242 0A40     		ands	r2, r2, r1
 421 0244 1A60     		str	r2, [r3, #0]
 422              	.L13:
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 423              		.loc 1 353 0
 424 0246 07F11407 		add	r7, r7, #20
 425 024a BD46     		mov	sp, r7
 426 024c 80BC     		pop	{r7}
 427 024e 7047     		bx	lr
 428              		.cfi_endproc
 429              	.LFE116:
 431              		.align	2
 432              		.global	DAC_SetChannel1Data
 433              		.thumb
 434              		.thumb_func
 436              	DAC_SetChannel1Data:
 437              	.LFB117:
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 438              		.loc 1 366 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 16
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443 0250 80B4     		push	{r7}
 444              	.LCFI20:
 445              		.cfi_def_cfa_offset 4
 446              		.cfi_offset 7, -4
 447 0252 85B0     		sub	sp, sp, #20
 448              	.LCFI21:
 449              		.cfi_def_cfa_offset 24
 450 0254 00AF     		add	r7, sp, #0
 451              	.LCFI22:
 452              		.cfi_def_cfa_register 7
 453 0256 7860     		str	r0, [r7, #4]
 454 0258 0B46     		mov	r3, r1
 455 025a 7B80     		strh	r3, [r7, #2]	@ movhi
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 456              		.loc 1 367 0
 457 025c 4FF00003 		mov	r3, #0
 458 0260 FB60     		str	r3, [r7, #12]
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 459              		.loc 1 373 0
 460 0262 4FF4E843 		mov	r3, #29696
 461 0266 C4F20003 		movt	r3, 16384
 462 026a FB60     		str	r3, [r7, #12]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 463              		.loc 1 374 0
 464 026c FA68     		ldr	r2, [r7, #12]
 465 026e 7B68     		ldr	r3, [r7, #4]
 466 0270 D318     		adds	r3, r2, r3
 467 0272 03F10803 		add	r3, r3, #8
 468 0276 FB60     		str	r3, [r7, #12]
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 469              		.loc 1 377 0
 470 0278 FB68     		ldr	r3, [r7, #12]
 471 027a 7A88     		ldrh	r2, [r7, #2]
 472 027c 1A60     		str	r2, [r3, #0]
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 473              		.loc 1 378 0
 474 027e 07F11407 		add	r7, r7, #20
 475 0282 BD46     		mov	sp, r7
 476 0284 80BC     		pop	{r7}
 477 0286 7047     		bx	lr
 478              		.cfi_endproc
 479              	.LFE117:
 481              		.align	2
 482              		.global	DAC_SetChannel2Data
 483              		.thumb
 484              		.thumb_func
 486              	DAC_SetChannel2Data:
 487              	.LFB118:
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 488              		.loc 1 391 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 16
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493 0288 80B4     		push	{r7}
 494              	.LCFI23:
 495              		.cfi_def_cfa_offset 4
 496              		.cfi_offset 7, -4
 497 028a 85B0     		sub	sp, sp, #20
 498              	.LCFI24:
 499              		.cfi_def_cfa_offset 24
 500 028c 00AF     		add	r7, sp, #0
 501              	.LCFI25:
 502              		.cfi_def_cfa_register 7
 503 028e 7860     		str	r0, [r7, #4]
 504 0290 0B46     		mov	r3, r1
 505 0292 7B80     		strh	r3, [r7, #2]	@ movhi
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 506              		.loc 1 392 0
 507 0294 4FF00003 		mov	r3, #0
 508 0298 FB60     		str	r3, [r7, #12]
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 509              		.loc 1 398 0
 510 029a 4FF4E843 		mov	r3, #29696
 511 029e C4F20003 		movt	r3, 16384
 512 02a2 FB60     		str	r3, [r7, #12]
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 513              		.loc 1 399 0
 514 02a4 FA68     		ldr	r2, [r7, #12]
 515 02a6 7B68     		ldr	r3, [r7, #4]
 516 02a8 D318     		adds	r3, r2, r3
 517 02aa 03F11403 		add	r3, r3, #20
 518 02ae FB60     		str	r3, [r7, #12]
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 519              		.loc 1 402 0
 520 02b0 FB68     		ldr	r3, [r7, #12]
 521 02b2 7A88     		ldrh	r2, [r7, #2]
 522 02b4 1A60     		str	r2, [r3, #0]
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 523              		.loc 1 403 0
 524 02b6 07F11407 		add	r7, r7, #20
 525 02ba BD46     		mov	sp, r7
 526 02bc 80BC     		pop	{r7}
 527 02be 7047     		bx	lr
 528              		.cfi_endproc
 529              	.LFE118:
 531              		.align	2
 532              		.global	DAC_SetDualChannelData
 533              		.thumb
 534              		.thumb_func
 536              	DAC_SetDualChannelData:
 537              	.LFB119:
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 538              		.loc 1 419 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 16
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543 02c0 80B4     		push	{r7}
 544              	.LCFI26:
 545              		.cfi_def_cfa_offset 4
 546              		.cfi_offset 7, -4
 547 02c2 85B0     		sub	sp, sp, #20
 548              	.LCFI27:
 549              		.cfi_def_cfa_offset 24
 550 02c4 00AF     		add	r7, sp, #0
 551              	.LCFI28:
 552              		.cfi_def_cfa_register 7
 553 02c6 7860     		str	r0, [r7, #4]
 554 02c8 1346     		mov	r3, r2
 555 02ca 0A46     		mov	r2, r1	@ movhi
 556 02cc 7A80     		strh	r2, [r7, #2]	@ movhi
 557 02ce 3B80     		strh	r3, [r7, #0]	@ movhi
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 558              		.loc 1 420 0
 559 02d0 4FF00003 		mov	r3, #0
 560 02d4 FB60     		str	r3, [r7, #12]
 561 02d6 4FF00003 		mov	r3, #0
 562 02da BB60     		str	r3, [r7, #8]
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 563              		.loc 1 428 0
 564 02dc 7B68     		ldr	r3, [r7, #4]
 565 02de 082B     		cmp	r3, #8
 566 02e0 06D1     		bne	.L19
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 567              		.loc 1 430 0
 568 02e2 7B88     		ldrh	r3, [r7, #2]
 569 02e4 4FEA0322 		lsl	r2, r3, #8
 570 02e8 3B88     		ldrh	r3, [r7, #0]
 571 02ea 1343     		orrs	r3, r3, r2
 572 02ec FB60     		str	r3, [r7, #12]
 573 02ee 05E0     		b	.L20
 574              	.L19:
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 575              		.loc 1 434 0
 576 02f0 7B88     		ldrh	r3, [r7, #2]
 577 02f2 4FEA0342 		lsl	r2, r3, #16
 578 02f6 3B88     		ldrh	r3, [r7, #0]
 579 02f8 1343     		orrs	r3, r3, r2
 580 02fa FB60     		str	r3, [r7, #12]
 581              	.L20:
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 582              		.loc 1 437 0
 583 02fc 4FF4E843 		mov	r3, #29696
 584 0300 C4F20003 		movt	r3, 16384
 585 0304 BB60     		str	r3, [r7, #8]
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 586              		.loc 1 438 0
 587 0306 7A68     		ldr	r2, [r7, #4]
 588 0308 BB68     		ldr	r3, [r7, #8]
 589 030a D318     		adds	r3, r2, r3
 590 030c 03F12003 		add	r3, r3, #32
 591 0310 BB60     		str	r3, [r7, #8]
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 592              		.loc 1 441 0
 593 0312 BB68     		ldr	r3, [r7, #8]
 594 0314 FA68     		ldr	r2, [r7, #12]
 595 0316 1A60     		str	r2, [r3, #0]
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 596              		.loc 1 442 0
 597 0318 07F11407 		add	r7, r7, #20
 598 031c BD46     		mov	sp, r7
 599 031e 80BC     		pop	{r7}
 600 0320 7047     		bx	lr
 601              		.cfi_endproc
 602              	.LFE119:
 604 0322 00BF     		.align	2
 605              		.global	DAC_GetDataOutputValue
 606              		.thumb
 607              		.thumb_func
 609              	DAC_GetDataOutputValue:
 610              	.LFB120:
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 611              		.loc 1 453 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 16
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616 0324 80B4     		push	{r7}
 617              	.LCFI29:
 618              		.cfi_def_cfa_offset 4
 619              		.cfi_offset 7, -4
 620 0326 85B0     		sub	sp, sp, #20
 621              	.LCFI30:
 622              		.cfi_def_cfa_offset 24
 623 0328 00AF     		add	r7, sp, #0
 624              	.LCFI31:
 625              		.cfi_def_cfa_register 7
 626 032a 7860     		str	r0, [r7, #4]
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 627              		.loc 1 454 0
 628 032c 4FF00003 		mov	r3, #0
 629 0330 FB60     		str	r3, [r7, #12]
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 630              		.loc 1 459 0
 631 0332 4FF4E843 		mov	r3, #29696
 632 0336 C4F20003 		movt	r3, 16384
 633 033a FB60     		str	r3, [r7, #12]
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 634              		.loc 1 460 0
 635 033c 7B68     		ldr	r3, [r7, #4]
 636 033e 4FEA9302 		lsr	r2, r3, #2
 637 0342 FB68     		ldr	r3, [r7, #12]
 638 0344 D318     		adds	r3, r2, r3
 639 0346 03F12C03 		add	r3, r3, #44
 640 034a FB60     		str	r3, [r7, #12]
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 641              		.loc 1 463 0
 642 034c FB68     		ldr	r3, [r7, #12]
 643 034e 1B68     		ldr	r3, [r3, #0]
 644 0350 9BB2     		uxth	r3, r3
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 645              		.loc 1 464 0
 646 0352 1846     		mov	r0, r3
 647 0354 07F11407 		add	r7, r7, #20
 648 0358 BD46     		mov	sp, r7
 649 035a 80BC     		pop	{r7}
 650 035c 7047     		bx	lr
 651              		.cfi_endproc
 652              	.LFE120:
 654 035e 00BF     		.align	2
 655              		.global	DAC_DMACmd
 656              		.thumb
 657              		.thumb_func
 659              	DAC_DMACmd:
 660              	.LFB121:
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 661              		.loc 1 498 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 8
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666 0360 80B4     		push	{r7}
 667              	.LCFI32:
 668              		.cfi_def_cfa_offset 4
 669              		.cfi_offset 7, -4
 670 0362 83B0     		sub	sp, sp, #12
 671              	.LCFI33:
 672              		.cfi_def_cfa_offset 16
 673 0364 00AF     		add	r7, sp, #0
 674              	.LCFI34:
 675              		.cfi_def_cfa_register 7
 676 0366 7860     		str	r0, [r7, #4]
 677 0368 0B46     		mov	r3, r1
 678 036a FB70     		strb	r3, [r7, #3]
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 679              		.loc 1 503 0
 680 036c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 681 036e 002B     		cmp	r3, #0
 682 0370 11D0     		beq	.L23
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 683              		.loc 1 506 0
 684 0372 4FF4E843 		mov	r3, #29696
 685 0376 C4F20003 		movt	r3, 16384
 686 037a 4FF4E842 		mov	r2, #29696
 687 037e C4F20002 		movt	r2, 16384
 688 0382 1268     		ldr	r2, [r2, #0]
 689 0384 1146     		mov	r1, r2
 690 0386 7A68     		ldr	r2, [r7, #4]
 691 0388 4FF48050 		mov	r0, #4096
 692 038c 00FA02F2 		lsl	r2, r0, r2
 693 0390 0A43     		orrs	r2, r2, r1
 694 0392 1A60     		str	r2, [r3, #0]
 695 0394 12E0     		b	.L22
 696              	.L23:
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 697              		.loc 1 511 0
 698 0396 4FF4E843 		mov	r3, #29696
 699 039a C4F20003 		movt	r3, 16384
 700 039e 4FF4E842 		mov	r2, #29696
 701 03a2 C4F20002 		movt	r2, 16384
 702 03a6 1268     		ldr	r2, [r2, #0]
 703 03a8 1146     		mov	r1, r2
 704 03aa 7A68     		ldr	r2, [r7, #4]
 705 03ac 4FF48050 		mov	r0, #4096
 706 03b0 00FA02F2 		lsl	r2, r0, r2
 707 03b4 6FEA0202 		mvn	r2, r2
 708 03b8 0A40     		ands	r2, r2, r1
 709 03ba 1A60     		str	r2, [r3, #0]
 710              	.L22:
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 711              		.loc 1 513 0
 712 03bc 07F10C07 		add	r7, r7, #12
 713 03c0 BD46     		mov	sp, r7
 714 03c2 80BC     		pop	{r7}
 715 03c4 7047     		bx	lr
 716              		.cfi_endproc
 717              	.LFE121:
 719 03c6 00BF     		.align	2
 720              		.global	DAC_ITConfig
 721              		.thumb
 722              		.thumb_func
 724              	DAC_ITConfig:
 725              	.LFB122:
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 726              		.loc 1 546 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 16
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731 03c8 80B4     		push	{r7}
 732              	.LCFI35:
 733              		.cfi_def_cfa_offset 4
 734              		.cfi_offset 7, -4
 735 03ca 85B0     		sub	sp, sp, #20
 736              	.LCFI36:
 737              		.cfi_def_cfa_offset 24
 738 03cc 00AF     		add	r7, sp, #0
 739              	.LCFI37:
 740              		.cfi_def_cfa_register 7
 741 03ce F860     		str	r0, [r7, #12]
 742 03d0 B960     		str	r1, [r7, #8]
 743 03d2 1346     		mov	r3, r2
 744 03d4 FB71     		strb	r3, [r7, #7]
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 745              		.loc 1 552 0
 746 03d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 747 03d8 002B     		cmp	r3, #0
 748 03da 10D0     		beq	.L26
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 749              		.loc 1 555 0
 750 03dc 4FF4E843 		mov	r3, #29696
 751 03e0 C4F20003 		movt	r3, 16384
 752 03e4 4FF4E842 		mov	r2, #29696
 753 03e8 C4F20002 		movt	r2, 16384
 754 03ec 1268     		ldr	r2, [r2, #0]
 755 03ee 1146     		mov	r1, r2
 756 03f0 FA68     		ldr	r2, [r7, #12]
 757 03f2 B868     		ldr	r0, [r7, #8]
 758 03f4 00FA02F2 		lsl	r2, r0, r2
 759 03f8 0A43     		orrs	r2, r2, r1
 760 03fa 1A60     		str	r2, [r3, #0]
 761 03fc 11E0     		b	.L25
 762              	.L26:
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 763              		.loc 1 560 0
 764 03fe 4FF4E843 		mov	r3, #29696
 765 0402 C4F20003 		movt	r3, 16384
 766 0406 4FF4E842 		mov	r2, #29696
 767 040a C4F20002 		movt	r2, 16384
 768 040e 1268     		ldr	r2, [r2, #0]
 769 0410 1146     		mov	r1, r2
 770 0412 FA68     		ldr	r2, [r7, #12]
 771 0414 B868     		ldr	r0, [r7, #8]
 772 0416 00FA02F2 		lsl	r2, r0, r2
 773 041a 6FEA0202 		mvn	r2, r2
 774 041e 0A40     		ands	r2, r2, r1
 775 0420 1A60     		str	r2, [r3, #0]
 776              	.L25:
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 777              		.loc 1 562 0
 778 0422 07F11407 		add	r7, r7, #20
 779 0426 BD46     		mov	sp, r7
 780 0428 80BC     		pop	{r7}
 781 042a 7047     		bx	lr
 782              		.cfi_endproc
 783              	.LFE122:
 785              		.align	2
 786              		.global	DAC_GetFlagStatus
 787              		.thumb
 788              		.thumb_func
 790              	DAC_GetFlagStatus:
 791              	.LFB123:
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 792              		.loc 1 578 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 16
 795              		@ frame_needed = 1, uses_anonymous_args = 0
 796              		@ link register save eliminated.
 797 042c 80B4     		push	{r7}
 798              	.LCFI38:
 799              		.cfi_def_cfa_offset 4
 800              		.cfi_offset 7, -4
 801 042e 85B0     		sub	sp, sp, #20
 802              	.LCFI39:
 803              		.cfi_def_cfa_offset 24
 804 0430 00AF     		add	r7, sp, #0
 805              	.LCFI40:
 806              		.cfi_def_cfa_register 7
 807 0432 7860     		str	r0, [r7, #4]
 808 0434 3960     		str	r1, [r7, #0]
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 809              		.loc 1 579 0
 810 0436 4FF00003 		mov	r3, #0
 811 043a FB73     		strb	r3, [r7, #15]
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 812              		.loc 1 585 0
 813 043c 4FF4E843 		mov	r3, #29696
 814 0440 C4F20003 		movt	r3, 16384
 815 0444 5B6B     		ldr	r3, [r3, #52]
 816 0446 1A46     		mov	r2, r3
 817 0448 7B68     		ldr	r3, [r7, #4]
 818 044a 3968     		ldr	r1, [r7, #0]
 819 044c 01FA03F3 		lsl	r3, r1, r3
 820 0450 1340     		ands	r3, r3, r2
 821 0452 002B     		cmp	r3, #0
 822 0454 03D0     		beq	.L29
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 823              		.loc 1 588 0
 824 0456 4FF00103 		mov	r3, #1
 825 045a FB73     		strb	r3, [r7, #15]
 826 045c 02E0     		b	.L30
 827              	.L29:
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 828              		.loc 1 593 0
 829 045e 4FF00003 		mov	r3, #0
 830 0462 FB73     		strb	r3, [r7, #15]
 831              	.L30:
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 832              		.loc 1 596 0
 833 0464 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 834              		.loc 1 597 0
 835 0466 1846     		mov	r0, r3
 836 0468 07F11407 		add	r7, r7, #20
 837 046c BD46     		mov	sp, r7
 838 046e 80BC     		pop	{r7}
 839 0470 7047     		bx	lr
 840              		.cfi_endproc
 841              	.LFE123:
 843 0472 00BF     		.align	2
 844              		.global	DAC_ClearFlag
 845              		.thumb
 846              		.thumb_func
 848              	DAC_ClearFlag:
 849              	.LFB124:
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 850              		.loc 1 613 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855 0474 80B4     		push	{r7}
 856              	.LCFI41:
 857              		.cfi_def_cfa_offset 4
 858              		.cfi_offset 7, -4
 859 0476 83B0     		sub	sp, sp, #12
 860              	.LCFI42:
 861              		.cfi_def_cfa_offset 16
 862 0478 00AF     		add	r7, sp, #0
 863              	.LCFI43:
 864              		.cfi_def_cfa_register 7
 865 047a 7860     		str	r0, [r7, #4]
 866 047c 3960     		str	r1, [r7, #0]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 867              		.loc 1 619 0
 868 047e 4FF4E843 		mov	r3, #29696
 869 0482 C4F20003 		movt	r3, 16384
 870 0486 7A68     		ldr	r2, [r7, #4]
 871 0488 3968     		ldr	r1, [r7, #0]
 872 048a 01FA02F2 		lsl	r2, r1, r2
 873 048e 5A63     		str	r2, [r3, #52]
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 874              		.loc 1 620 0
 875 0490 07F10C07 		add	r7, r7, #12
 876 0494 BD46     		mov	sp, r7
 877 0496 80BC     		pop	{r7}
 878 0498 7047     		bx	lr
 879              		.cfi_endproc
 880              	.LFE124:
 882 049a 00BF     		.align	2
 883              		.global	DAC_GetITStatus
 884              		.thumb
 885              		.thumb_func
 887              	DAC_GetITStatus:
 888              	.LFB125:
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 889              		.loc 1 636 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 16
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893              		@ link register save eliminated.
 894 049c 80B4     		push	{r7}
 895              	.LCFI44:
 896              		.cfi_def_cfa_offset 4
 897              		.cfi_offset 7, -4
 898 049e 85B0     		sub	sp, sp, #20
 899              	.LCFI45:
 900              		.cfi_def_cfa_offset 24
 901 04a0 00AF     		add	r7, sp, #0
 902              	.LCFI46:
 903              		.cfi_def_cfa_register 7
 904 04a2 7860     		str	r0, [r7, #4]
 905 04a4 3960     		str	r1, [r7, #0]
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 906              		.loc 1 637 0
 907 04a6 4FF00003 		mov	r3, #0
 908 04aa FB73     		strb	r3, [r7, #15]
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 909              		.loc 1 638 0
 910 04ac 4FF00003 		mov	r3, #0
 911 04b0 BB60     		str	r3, [r7, #8]
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 912              		.loc 1 645 0
 913 04b2 4FF4E843 		mov	r3, #29696
 914 04b6 C4F20003 		movt	r3, 16384
 915 04ba 1B68     		ldr	r3, [r3, #0]
 916 04bc 1A46     		mov	r2, r3
 917 04be 7B68     		ldr	r3, [r7, #4]
 918 04c0 3968     		ldr	r1, [r7, #0]
 919 04c2 01FA03F3 		lsl	r3, r1, r3
 920 04c6 1340     		ands	r3, r3, r2
 921 04c8 BB60     		str	r3, [r7, #8]
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 922              		.loc 1 648 0
 923 04ca 4FF4E843 		mov	r3, #29696
 924 04ce C4F20003 		movt	r3, 16384
 925 04d2 5B6B     		ldr	r3, [r3, #52]
 926 04d4 1A46     		mov	r2, r3
 927 04d6 7B68     		ldr	r3, [r7, #4]
 928 04d8 3968     		ldr	r1, [r7, #0]
 929 04da 01FA03F3 		lsl	r3, r1, r3
 930 04de 1340     		ands	r3, r3, r2
 931 04e0 002B     		cmp	r3, #0
 932 04e2 06D0     		beq	.L33
 933              		.loc 1 648 0 is_stmt 0 discriminator 1
 934 04e4 BB68     		ldr	r3, [r7, #8]
 935 04e6 002B     		cmp	r3, #0
 936 04e8 03D0     		beq	.L33
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 937              		.loc 1 651 0 is_stmt 1
 938 04ea 4FF00103 		mov	r3, #1
 939 04ee FB73     		strb	r3, [r7, #15]
 940 04f0 02E0     		b	.L34
 941              	.L33:
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 942              		.loc 1 656 0
 943 04f2 4FF00003 		mov	r3, #0
 944 04f6 FB73     		strb	r3, [r7, #15]
 945              	.L34:
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 946              		.loc 1 659 0
 947 04f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 948              		.loc 1 660 0
 949 04fa 1846     		mov	r0, r3
 950 04fc 07F11407 		add	r7, r7, #20
 951 0500 BD46     		mov	sp, r7
 952 0502 80BC     		pop	{r7}
 953 0504 7047     		bx	lr
 954              		.cfi_endproc
 955              	.LFE125:
 957 0506 00BF     		.align	2
 958              		.global	DAC_ClearITPendingBit
 959              		.thumb
 960              		.thumb_func
 962              	DAC_ClearITPendingBit:
 963              	.LFB126:
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 964              		.loc 1 676 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 8
 967              		@ frame_needed = 1, uses_anonymous_args = 0
 968              		@ link register save eliminated.
 969 0508 80B4     		push	{r7}
 970              	.LCFI47:
 971              		.cfi_def_cfa_offset 4
 972              		.cfi_offset 7, -4
 973 050a 83B0     		sub	sp, sp, #12
 974              	.LCFI48:
 975              		.cfi_def_cfa_offset 16
 976 050c 00AF     		add	r7, sp, #0
 977              	.LCFI49:
 978              		.cfi_def_cfa_register 7
 979 050e 7860     		str	r0, [r7, #4]
 980 0510 3960     		str	r1, [r7, #0]
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 981              		.loc 1 682 0
 982 0512 4FF4E843 		mov	r3, #29696
 983 0516 C4F20003 		movt	r3, 16384
 984 051a 7A68     		ldr	r2, [r7, #4]
 985 051c 3968     		ldr	r1, [r7, #0]
 986 051e 01FA02F2 		lsl	r2, r1, r2
 987 0522 5A63     		str	r2, [r3, #52]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 988              		.loc 1 683 0
 989 0524 07F10C07 		add	r7, r7, #12
 990 0528 BD46     		mov	sp, r7
 991 052a 80BC     		pop	{r7}
 992 052c 7047     		bx	lr
 993              		.cfi_endproc
 994              	.LFE126:
 996              	.Letext0:
 997              		.file 2 "c:\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib/gcc/arm-none-eabi
 998              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 999              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_dac.h
 1000              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dac.c
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:19     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:24     .text:00000000 DAC_DeInit
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:57     .text:00000020 DAC_Init
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:136    .text:00000094 DAC_StructInit
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:183    .text:000000c8 DAC_Cmd
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:248    .text:00000130 DAC_SoftwareTriggerCmd
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:315    .text:000001a0 DAC_DualSoftwareTriggerCmd
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:370    .text:000001ec DAC_WaveGenerationCmd
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:436    .text:00000250 DAC_SetChannel1Data
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:486    .text:00000288 DAC_SetChannel2Data
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:536    .text:000002c0 DAC_SetDualChannelData
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:609    .text:00000324 DAC_GetDataOutputValue
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:659    .text:00000360 DAC_DMACmd
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:724    .text:000003c8 DAC_ITConfig
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:790    .text:0000042c DAC_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:848    .text:00000474 DAC_ClearFlag
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:887    .text:0000049c DAC_GetITStatus
C:\Users\Alex\AppData\Local\Temp\ccoDFZ2E.s:962    .text:00000508 DAC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
