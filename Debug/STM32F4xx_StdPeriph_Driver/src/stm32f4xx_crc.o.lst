   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_crc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CRC_ResetDR,"ax",%progbits
  19              		.align	2
  20              		.global	CRC_ResetDR
  21              		.thumb
  22              		.thumb_func
  24              	CRC_ResetDR:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @file    stm32f4xx_crc.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief   This file provides all the CRC firmware functions.
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   ******************************************************************************
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @attention
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   *
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   *
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   ******************************************************************************
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Includes ------------------------------------------------------------------*/
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** #include "stm32f4xx_crc.h"
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @{
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /** @defgroup CRC 
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief CRC driver modules
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @{
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private typedef -----------------------------------------------------------*/
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private define ------------------------------------------------------------*/
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private macro -------------------------------------------------------------*/
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private variables ---------------------------------------------------------*/
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private function prototypes -----------------------------------------------*/
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private functions ---------------------------------------------------------*/
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /** @defgroup CRC_Private_Functions
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @{
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Resets the CRC Data register (DR).
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  None
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval None
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** void CRC_ResetDR(void)
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
  27              		.loc 1 51 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   /* Reset CRC generator */
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   CRC->CR = CRC_CR_RESET;
  39              		.loc 1 53 0
  40 0004 4FF44053 		mov	r3, #12288
  41 0008 C4F20203 		movt	r3, 16386
  42 000c 4FF00102 		mov	r2, #1
  43 0010 9A60     		str	r2, [r3, #8]
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
  44              		.loc 1 54 0
  45 0012 BD46     		mov	sp, r7
  46 0014 80BC     		pop	{r7}
  47 0016 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE110:
  51              		.section	.text.CRC_CalcCRC,"ax",%progbits
  52              		.align	2
  53              		.global	CRC_CalcCRC
  54              		.thumb
  55              		.thumb_func
  57              	CRC_CalcCRC:
  58              	.LFB111:
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Computes the 32-bit CRC of a given data word(32-bit).
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  Data: data word(32-bit) to compute its CRC
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval 32-bit CRC
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** uint32_t CRC_CalcCRC(uint32_t Data)
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
  59              		.loc 1 62 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 8
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64 0000 80B4     		push	{r7}
  65              	.LCFI2:
  66              		.cfi_def_cfa_offset 4
  67              		.cfi_offset 7, -4
  68 0002 83B0     		sub	sp, sp, #12
  69              	.LCFI3:
  70              		.cfi_def_cfa_offset 16
  71 0004 00AF     		add	r7, sp, #0
  72              	.LCFI4:
  73              		.cfi_def_cfa_register 7
  74 0006 7860     		str	r0, [r7, #4]
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   CRC->DR = Data;
  75              		.loc 1 63 0
  76 0008 4FF44053 		mov	r3, #12288
  77 000c C4F20203 		movt	r3, 16386
  78 0010 7A68     		ldr	r2, [r7, #4]
  79 0012 1A60     		str	r2, [r3, #0]
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   return (CRC->DR);
  80              		.loc 1 65 0
  81 0014 4FF44053 		mov	r3, #12288
  82 0018 C4F20203 		movt	r3, 16386
  83 001c 1B68     		ldr	r3, [r3, #0]
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
  84              		.loc 1 66 0
  85 001e 1846     		mov	r0, r3
  86 0020 07F10C07 		add	r7, r7, #12
  87 0024 BD46     		mov	sp, r7
  88 0026 80BC     		pop	{r7}
  89 0028 7047     		bx	lr
  90              		.cfi_endproc
  91              	.LFE111:
  93 002a 00BF     		.section	.text.CRC_CalcBlockCRC,"ax",%progbits
  94              		.align	2
  95              		.global	CRC_CalcBlockCRC
  96              		.thumb
  97              		.thumb_func
  99              	CRC_CalcBlockCRC:
 100              	.LFB112:
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Computes the 32-bit CRC of a given buffer of data word(32-bit).
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  pBuffer: pointer to the buffer containing the data to be computed
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  BufferLength: length of the buffer to be computed					
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval 32-bit CRC
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 101              		.loc 1 75 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 16
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106 0000 80B4     		push	{r7}
 107              	.LCFI5:
 108              		.cfi_def_cfa_offset 4
 109              		.cfi_offset 7, -4
 110 0002 85B0     		sub	sp, sp, #20
 111              	.LCFI6:
 112              		.cfi_def_cfa_offset 24
 113 0004 00AF     		add	r7, sp, #0
 114              	.LCFI7:
 115              		.cfi_def_cfa_register 7
 116 0006 7860     		str	r0, [r7, #4]
 117 0008 3960     		str	r1, [r7, #0]
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   uint32_t index = 0;
 118              		.loc 1 76 0
 119 000a 4FF00003 		mov	r3, #0
 120 000e FB60     		str	r3, [r7, #12]
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   for(index = 0; index < BufferLength; index++)
 121              		.loc 1 78 0
 122 0010 4FF00003 		mov	r3, #0
 123 0014 FB60     		str	r3, [r7, #12]
 124 0016 0EE0     		b	.L4
 125              	.L5:
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   {
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****     CRC->DR = pBuffer[index];
 126              		.loc 1 80 0 discriminator 2
 127 0018 4FF44053 		mov	r3, #12288
 128 001c C4F20203 		movt	r3, 16386
 129 0020 FA68     		ldr	r2, [r7, #12]
 130 0022 4FEA8202 		lsl	r2, r2, #2
 131 0026 7968     		ldr	r1, [r7, #4]
 132 0028 8A18     		adds	r2, r1, r2
 133 002a 1268     		ldr	r2, [r2, #0]
 134 002c 1A60     		str	r2, [r3, #0]
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   for(index = 0; index < BufferLength; index++)
 135              		.loc 1 78 0 discriminator 2
 136 002e FB68     		ldr	r3, [r7, #12]
 137 0030 03F10103 		add	r3, r3, #1
 138 0034 FB60     		str	r3, [r7, #12]
 139              	.L4:
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   for(index = 0; index < BufferLength; index++)
 140              		.loc 1 78 0 is_stmt 0 discriminator 1
 141 0036 FA68     		ldr	r2, [r7, #12]
 142 0038 3B68     		ldr	r3, [r7, #0]
 143 003a 9A42     		cmp	r2, r3
 144 003c ECD3     		bcc	.L5
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   }
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   return (CRC->DR);
 145              		.loc 1 82 0 is_stmt 1
 146 003e 4FF44053 		mov	r3, #12288
 147 0042 C4F20203 		movt	r3, 16386
 148 0046 1B68     		ldr	r3, [r3, #0]
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 149              		.loc 1 83 0
 150 0048 1846     		mov	r0, r3
 151 004a 07F11407 		add	r7, r7, #20
 152 004e BD46     		mov	sp, r7
 153 0050 80BC     		pop	{r7}
 154 0052 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE112:
 158              		.section	.text.CRC_GetCRC,"ax",%progbits
 159              		.align	2
 160              		.global	CRC_GetCRC
 161              		.thumb
 162              		.thumb_func
 164              	CRC_GetCRC:
 165              	.LFB113:
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Returns the current CRC value.
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  None
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval 32-bit CRC
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** uint32_t CRC_GetCRC(void)
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 166              		.loc 1 91 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171 0000 80B4     		push	{r7}
 172              	.LCFI8:
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 7, -4
 175 0002 00AF     		add	r7, sp, #0
 176              	.LCFI9:
 177              		.cfi_def_cfa_register 7
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   return (CRC->DR);
 178              		.loc 1 92 0
 179 0004 4FF44053 		mov	r3, #12288
 180 0008 C4F20203 		movt	r3, 16386
 181 000c 1B68     		ldr	r3, [r3, #0]
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 182              		.loc 1 93 0
 183 000e 1846     		mov	r0, r3
 184 0010 BD46     		mov	sp, r7
 185 0012 80BC     		pop	{r7}
 186 0014 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE113:
 190 0016 00BF     		.section	.text.CRC_SetIDRegister,"ax",%progbits
 191              		.align	2
 192              		.global	CRC_SetIDRegister
 193              		.thumb
 194              		.thumb_func
 196              	CRC_SetIDRegister:
 197              	.LFB114:
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Stores a 8-bit data in the Independent Data(ID) register.
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  IDValue: 8-bit value to be stored in the ID register 					
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval None
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** void CRC_SetIDRegister(uint8_t IDValue)
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 198              		.loc 1 101 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              	.LCFI10:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 83B0     		sub	sp, sp, #12
 208              	.LCFI11:
 209              		.cfi_def_cfa_offset 16
 210 0004 00AF     		add	r7, sp, #0
 211              	.LCFI12:
 212              		.cfi_def_cfa_register 7
 213 0006 0346     		mov	r3, r0
 214 0008 FB71     		strb	r3, [r7, #7]
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   CRC->IDR = IDValue;
 215              		.loc 1 102 0
 216 000a 4FF44053 		mov	r3, #12288
 217 000e C4F20203 		movt	r3, 16386
 218 0012 FA79     		ldrb	r2, [r7, #7]
 219 0014 1A71     		strb	r2, [r3, #4]
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 220              		.loc 1 103 0
 221 0016 07F10C07 		add	r7, r7, #12
 222 001a BD46     		mov	sp, r7
 223 001c 80BC     		pop	{r7}
 224 001e 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE114:
 228              		.section	.text.CRC_GetIDRegister,"ax",%progbits
 229              		.align	2
 230              		.global	CRC_GetIDRegister
 231              		.thumb
 232              		.thumb_func
 234              	CRC_GetIDRegister:
 235              	.LFB115:
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Returns the 8-bit data stored in the Independent Data(ID) register
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  None
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval 8-bit value of the ID register 
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** uint8_t CRC_GetIDRegister(void)
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 236              		.loc 1 111 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241 0000 80B4     		push	{r7}
 242              	.LCFI13:
 243              		.cfi_def_cfa_offset 4
 244              		.cfi_offset 7, -4
 245 0002 00AF     		add	r7, sp, #0
 246              	.LCFI14:
 247              		.cfi_def_cfa_register 7
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   return (CRC->IDR);
 248              		.loc 1 112 0
 249 0004 4FF44053 		mov	r3, #12288
 250 0008 C4F20203 		movt	r3, 16386
 251 000c 1B79     		ldrb	r3, [r3, #4]
 252 000e DBB2     		uxtb	r3, r3
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 253              		.loc 1 113 0
 254 0010 1846     		mov	r0, r3
 255 0012 BD46     		mov	sp, r7
 256 0014 80BC     		pop	{r7}
 257 0016 7047     		bx	lr
 258              		.cfi_endproc
 259              	.LFE115:
 261              		.text
 262              	.Letext0:
 263              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 264              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 265              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_crc.c
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:19     .text.CRC_ResetDR:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:24     .text.CRC_ResetDR:00000000 CRC_ResetDR
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:52     .text.CRC_CalcCRC:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:57     .text.CRC_CalcCRC:00000000 CRC_CalcCRC
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:94     .text.CRC_CalcBlockCRC:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:99     .text.CRC_CalcBlockCRC:00000000 CRC_CalcBlockCRC
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:159    .text.CRC_GetCRC:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:164    .text.CRC_GetCRC:00000000 CRC_GetCRC
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:191    .text.CRC_SetIDRegister:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:196    .text.CRC_SetIDRegister:00000000 CRC_SetIDRegister
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:229    .text.CRC_GetIDRegister:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccZ2vh9d.s:234    .text.CRC_GetIDRegister:00000000 CRC_GetIDRegister
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
