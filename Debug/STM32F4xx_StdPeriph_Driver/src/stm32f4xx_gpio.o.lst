   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_gpio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.global	GPIO_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	GPIO_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - Initialization and Configuration
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Read and Write
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Alternate functions configuration
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                 How to use this driver
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================       
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           1. Enable the GPIO AHB clock using the following function
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           2. Configure the GPIO pin(s) using GPIO_Init()
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              Four possible configuration are available for each pin:
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Input: Floating, Pull-up, Pull-down.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          Open Drain (Pull-up, Pull-down or no Pull).
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  In output mode, the speed is configurable: 2 MHz, 25 MHz,
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  50 MHz or 100 MHz.
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull)
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                      Open Drain (Pull-up, Pull-down or no Pull).
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Analog: required mode when a pin is to be used as ADC channel
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          or DAC output.
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          3- Peripherals alternate function:
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For ADC and DAC, configure the desired pin in analog mode using 
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For other peripherals (TIM, USART...):
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Configure the desired pin in alternate function mode using
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Call GPIO_Init() function
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *        
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          4. To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          5. To set/reset the level of a pin configured in output mode use
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             GPIO_SetBits()/GPIO_ResetBits()
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *               
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          6. During and just after reset, the alternate functions are not 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             active and the GPIO pins are configured in input floating mode
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             (except JTAG pins).
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          7. The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose (PC14 and PC15, respectively) when the LSE
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The LSE has priority over the GPIO function.
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          8. The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose PH0 and PH1, respectively, when the HSE 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The HSE has priority over the GPIO function.
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @endverbatim        
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @attention
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                         Initialization and Configuration
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
  27              		.loc 1 121 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
  43              		.loc 1 125 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF00003 		mov	r3, #0
  46 000e C4F20203 		movt	r3, 16386
  47 0012 9A42     		cmp	r2, r3
  48 0014 0CD1     		bne	.L2
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
  49              		.loc 1 127 0
  50 0016 4FF00100 		mov	r0, #1
  51 001a 4FF00101 		mov	r1, #1
  52 001e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  53              		.loc 1 128 0
  54 0022 4FF00100 		mov	r0, #1
  55 0026 4FF00001 		mov	r1, #0
  56 002a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  57 002e 9EE0     		b	.L1
  58              	.L2:
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
  59              		.loc 1 130 0
  60 0030 7A68     		ldr	r2, [r7, #4]
  61 0032 4FF48063 		mov	r3, #1024
  62 0036 C4F20203 		movt	r3, 16386
  63 003a 9A42     		cmp	r2, r3
  64 003c 0CD1     		bne	.L4
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
  65              		.loc 1 132 0
  66 003e 4FF00200 		mov	r0, #2
  67 0042 4FF00101 		mov	r1, #1
  68 0046 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
  69              		.loc 1 133 0
  70 004a 4FF00200 		mov	r0, #2
  71 004e 4FF00001 		mov	r1, #0
  72 0052 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  73 0056 8AE0     		b	.L1
  74              	.L4:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
  75              		.loc 1 135 0
  76 0058 7A68     		ldr	r2, [r7, #4]
  77 005a 4FF40063 		mov	r3, #2048
  78 005e C4F20203 		movt	r3, 16386
  79 0062 9A42     		cmp	r2, r3
  80 0064 0CD1     		bne	.L5
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
  81              		.loc 1 137 0
  82 0066 4FF00400 		mov	r0, #4
  83 006a 4FF00101 		mov	r1, #1
  84 006e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
  85              		.loc 1 138 0
  86 0072 4FF00400 		mov	r0, #4
  87 0076 4FF00001 		mov	r1, #0
  88 007a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  89 007e 76E0     		b	.L1
  90              	.L5:
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
  91              		.loc 1 140 0
  92 0080 7A68     		ldr	r2, [r7, #4]
  93 0082 4FF44063 		mov	r3, #3072
  94 0086 C4F20203 		movt	r3, 16386
  95 008a 9A42     		cmp	r2, r3
  96 008c 0CD1     		bne	.L6
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
  97              		.loc 1 142 0
  98 008e 4FF00800 		mov	r0, #8
  99 0092 4FF00101 		mov	r1, #1
 100 0096 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 101              		.loc 1 143 0
 102 009a 4FF00800 		mov	r0, #8
 103 009e 4FF00001 		mov	r1, #0
 104 00a2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 105 00a6 62E0     		b	.L1
 106              	.L6:
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
 107              		.loc 1 145 0
 108 00a8 7A68     		ldr	r2, [r7, #4]
 109 00aa 4FF48053 		mov	r3, #4096
 110 00ae C4F20203 		movt	r3, 16386
 111 00b2 9A42     		cmp	r2, r3
 112 00b4 0CD1     		bne	.L7
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 113              		.loc 1 147 0
 114 00b6 4FF01000 		mov	r0, #16
 115 00ba 4FF00101 		mov	r1, #1
 116 00be FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 117              		.loc 1 148 0
 118 00c2 4FF01000 		mov	r0, #16
 119 00c6 4FF00001 		mov	r1, #0
 120 00ca FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 121 00ce 4EE0     		b	.L1
 122              	.L7:
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
 123              		.loc 1 150 0
 124 00d0 7A68     		ldr	r2, [r7, #4]
 125 00d2 4FF4A053 		mov	r3, #5120
 126 00d6 C4F20203 		movt	r3, 16386
 127 00da 9A42     		cmp	r2, r3
 128 00dc 0CD1     		bne	.L8
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 129              		.loc 1 152 0
 130 00de 4FF02000 		mov	r0, #32
 131 00e2 4FF00101 		mov	r1, #1
 132 00e6 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 133              		.loc 1 153 0
 134 00ea 4FF02000 		mov	r0, #32
 135 00ee 4FF00001 		mov	r1, #0
 136 00f2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 137 00f6 3AE0     		b	.L1
 138              	.L8:
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
 139              		.loc 1 155 0
 140 00f8 7A68     		ldr	r2, [r7, #4]
 141 00fa 4FF4C053 		mov	r3, #6144
 142 00fe C4F20203 		movt	r3, 16386
 143 0102 9A42     		cmp	r2, r3
 144 0104 0CD1     		bne	.L9
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 145              		.loc 1 157 0
 146 0106 4FF04000 		mov	r0, #64
 147 010a 4FF00101 		mov	r1, #1
 148 010e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 149              		.loc 1 158 0
 150 0112 4FF04000 		mov	r0, #64
 151 0116 4FF00001 		mov	r1, #0
 152 011a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 153 011e 26E0     		b	.L1
 154              	.L9:
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
 155              		.loc 1 160 0
 156 0120 7A68     		ldr	r2, [r7, #4]
 157 0122 4FF4E053 		mov	r3, #7168
 158 0126 C4F20203 		movt	r3, 16386
 159 012a 9A42     		cmp	r2, r3
 160 012c 0CD1     		bne	.L10
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 161              		.loc 1 162 0
 162 012e 4FF08000 		mov	r0, #128
 163 0132 4FF00101 		mov	r1, #1
 164 0136 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 165              		.loc 1 163 0
 166 013a 4FF08000 		mov	r0, #128
 167 013e 4FF00001 		mov	r1, #0
 168 0142 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 169 0146 12E0     		b	.L1
 170              	.L10:
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOI)
 171              		.loc 1 167 0
 172 0148 7A68     		ldr	r2, [r7, #4]
 173 014a 4FF40053 		mov	r3, #8192
 174 014e C4F20203 		movt	r3, 16386
 175 0152 9A42     		cmp	r2, r3
 176 0154 0BD1     		bne	.L1
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
 177              		.loc 1 169 0
 178 0156 4FF48070 		mov	r0, #256
 179 015a 4FF00101 		mov	r1, #1
 180 015e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 181              		.loc 1 170 0
 182 0162 4FF48070 		mov	r0, #256
 183 0166 4FF00001 		mov	r1, #0
 184 016a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 185              	.L1:
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 186              		.loc 1 173 0
 187 016e 07F10807 		add	r7, r7, #8
 188 0172 BD46     		mov	sp, r7
 189 0174 80BD     		pop	{r7, pc}
 190              		.cfi_endproc
 191              	.LFE110:
 193 0176 00BF     		.align	2
 194              		.global	GPIO_Init
 195              		.thumb
 196              		.thumb_func
 198              	GPIO_Init:
 199              	.LFB111:
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 200              		.loc 1 183 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 24
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205 0178 80B4     		push	{r7}
 206              	.LCFI3:
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 7, -4
 209 017a 87B0     		sub	sp, sp, #28
 210              	.LCFI4:
 211              		.cfi_def_cfa_offset 32
 212 017c 00AF     		add	r7, sp, #0
 213              	.LCFI5:
 214              		.cfi_def_cfa_register 7
 215 017e 7860     		str	r0, [r7, #4]
 216 0180 3960     		str	r1, [r7, #0]
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 217              		.loc 1 184 0
 218 0182 4FF00003 		mov	r3, #0
 219 0186 7B61     		str	r3, [r7, #20]
 220 0188 4FF00003 		mov	r3, #0
 221 018c 3B61     		str	r3, [r7, #16]
 222 018e 4FF00003 		mov	r3, #0
 223 0192 FB60     		str	r3, [r7, #12]
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* -------------------------Configure the port pins---------------- */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 224              		.loc 1 194 0
 225 0194 4FF00003 		mov	r3, #0
 226 0198 7B61     		str	r3, [r7, #20]
 227 019a 8EE0     		b	.L12
 228              	.L16:
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 229              		.loc 1 196 0
 230 019c 7B69     		ldr	r3, [r7, #20]
 231 019e 4FF00102 		mov	r2, #1
 232 01a2 02FA03F3 		lsl	r3, r2, r3
 233 01a6 3B61     		str	r3, [r7, #16]
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 234              		.loc 1 198 0
 235 01a8 3B68     		ldr	r3, [r7, #0]
 236 01aa 1A68     		ldr	r2, [r3, #0]
 237 01ac 3B69     		ldr	r3, [r7, #16]
 238 01ae 1340     		ands	r3, r3, r2
 239 01b0 FB60     		str	r3, [r7, #12]
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 240              		.loc 1 200 0
 241 01b2 FA68     		ldr	r2, [r7, #12]
 242 01b4 3B69     		ldr	r3, [r7, #16]
 243 01b6 9A42     		cmp	r2, r3
 244 01b8 7BD1     		bne	.L13
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 245              		.loc 1 202 0
 246 01ba 7B68     		ldr	r3, [r7, #4]
 247 01bc 1B68     		ldr	r3, [r3, #0]
 248 01be 1A46     		mov	r2, r3
 249 01c0 7B69     		ldr	r3, [r7, #20]
 250 01c2 4FEA4303 		lsl	r3, r3, #1
 251 01c6 4FF00301 		mov	r1, #3
 252 01ca 01FA03F3 		lsl	r3, r1, r3
 253 01ce 6FEA0303 		mvn	r3, r3
 254 01d2 1A40     		ands	r2, r2, r3
 255 01d4 7B68     		ldr	r3, [r7, #4]
 256 01d6 1A60     		str	r2, [r3, #0]
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 257              		.loc 1 203 0
 258 01d8 7B68     		ldr	r3, [r7, #4]
 259 01da 1B68     		ldr	r3, [r3, #0]
 260 01dc 1A46     		mov	r2, r3
 261 01de 3B68     		ldr	r3, [r7, #0]
 262 01e0 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 263 01e2 1946     		mov	r1, r3
 264 01e4 7B69     		ldr	r3, [r7, #20]
 265 01e6 4FEA4303 		lsl	r3, r3, #1
 266 01ea 01FA03F3 		lsl	r3, r1, r3
 267 01ee 1A43     		orrs	r2, r2, r3
 268 01f0 7B68     		ldr	r3, [r7, #4]
 269 01f2 1A60     		str	r2, [r3, #0]
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 270              		.loc 1 205 0
 271 01f4 3B68     		ldr	r3, [r7, #0]
 272 01f6 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 273 01f8 012B     		cmp	r3, #1
 274 01fa 03D0     		beq	.L14
 275              		.loc 1 205 0 is_stmt 0 discriminator 1
 276 01fc 3B68     		ldr	r3, [r7, #0]
 277 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 278 0200 022B     		cmp	r3, #2
 279 0202 38D1     		bne	.L15
 280              	.L14:
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       {
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 281              		.loc 1 211 0 is_stmt 1
 282 0204 7B68     		ldr	r3, [r7, #4]
 283 0206 9B68     		ldr	r3, [r3, #8]
 284 0208 1A46     		mov	r2, r3
 285 020a 7B69     		ldr	r3, [r7, #20]
 286 020c 4FEA4303 		lsl	r3, r3, #1
 287 0210 4FF00301 		mov	r1, #3
 288 0214 01FA03F3 		lsl	r3, r1, r3
 289 0218 6FEA0303 		mvn	r3, r3
 290 021c 1A40     		ands	r2, r2, r3
 291 021e 7B68     		ldr	r3, [r7, #4]
 292 0220 9A60     		str	r2, [r3, #8]
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 293              		.loc 1 212 0
 294 0222 7B68     		ldr	r3, [r7, #4]
 295 0224 9B68     		ldr	r3, [r3, #8]
 296 0226 1A46     		mov	r2, r3
 297 0228 3B68     		ldr	r3, [r7, #0]
 298 022a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 299 022c 1946     		mov	r1, r3
 300 022e 7B69     		ldr	r3, [r7, #20]
 301 0230 4FEA4303 		lsl	r3, r3, #1
 302 0234 01FA03F3 		lsl	r3, r1, r3
 303 0238 1A43     		orrs	r2, r2, r3
 304 023a 7B68     		ldr	r3, [r7, #4]
 305 023c 9A60     		str	r2, [r3, #8]
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 306              		.loc 1 218 0
 307 023e 7B68     		ldr	r3, [r7, #4]
 308 0240 5B68     		ldr	r3, [r3, #4]
 309 0242 1A46     		mov	r2, r3
 310 0244 7B69     		ldr	r3, [r7, #20]
 311 0246 9BB2     		uxth	r3, r3
 312 0248 4FF00101 		mov	r1, #1
 313 024c 01FA03F3 		lsl	r3, r1, r3
 314 0250 6FEA0303 		mvn	r3, r3
 315 0254 1A40     		ands	r2, r2, r3
 316 0256 7B68     		ldr	r3, [r7, #4]
 317 0258 5A60     		str	r2, [r3, #4]
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 318              		.loc 1 219 0
 319 025a 7B68     		ldr	r3, [r7, #4]
 320 025c 5B68     		ldr	r3, [r3, #4]
 321 025e 1A46     		mov	r2, r3
 322 0260 3B68     		ldr	r3, [r7, #0]
 323 0262 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 324 0264 1946     		mov	r1, r3
 325 0266 7B69     		ldr	r3, [r7, #20]
 326 0268 9BB2     		uxth	r3, r3
 327 026a 01FA03F3 		lsl	r3, r1, r3
 328 026e 9BB2     		uxth	r3, r3
 329 0270 1A43     		orrs	r2, r2, r3
 330 0272 7B68     		ldr	r3, [r7, #4]
 331 0274 5A60     		str	r2, [r3, #4]
 332              	.L15:
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       }
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 333              		.loc 1 223 0
 334 0276 7B68     		ldr	r3, [r7, #4]
 335 0278 DB68     		ldr	r3, [r3, #12]
 336 027a 1A46     		mov	r2, r3
 337 027c 7B69     		ldr	r3, [r7, #20]
 338 027e 9BB2     		uxth	r3, r3
 339 0280 4FEA4303 		lsl	r3, r3, #1
 340 0284 4FF00301 		mov	r1, #3
 341 0288 01FA03F3 		lsl	r3, r1, r3
 342 028c 6FEA0303 		mvn	r3, r3
 343 0290 1A40     		ands	r2, r2, r3
 344 0292 7B68     		ldr	r3, [r7, #4]
 345 0294 DA60     		str	r2, [r3, #12]
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 346              		.loc 1 224 0
 347 0296 7B68     		ldr	r3, [r7, #4]
 348 0298 DB68     		ldr	r3, [r3, #12]
 349 029a 1A46     		mov	r2, r3
 350 029c 3B68     		ldr	r3, [r7, #0]
 351 029e DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 352 02a0 1946     		mov	r1, r3
 353 02a2 7B69     		ldr	r3, [r7, #20]
 354 02a4 4FEA4303 		lsl	r3, r3, #1
 355 02a8 01FA03F3 		lsl	r3, r1, r3
 356 02ac 1A43     		orrs	r2, r2, r3
 357 02ae 7B68     		ldr	r3, [r7, #4]
 358 02b0 DA60     		str	r2, [r3, #12]
 359              	.L13:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 360              		.loc 1 194 0
 361 02b2 7B69     		ldr	r3, [r7, #20]
 362 02b4 03F10103 		add	r3, r3, #1
 363 02b8 7B61     		str	r3, [r7, #20]
 364              	.L12:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 365              		.loc 1 194 0 is_stmt 0 discriminator 1
 366 02ba 7B69     		ldr	r3, [r7, #20]
 367 02bc 0F2B     		cmp	r3, #15
 368 02be 7FF66DAF 		bls	.L16
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 369              		.loc 1 227 0 is_stmt 1
 370 02c2 07F11C07 		add	r7, r7, #28
 371 02c6 BD46     		mov	sp, r7
 372 02c8 80BC     		pop	{r7}
 373 02ca 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE111:
 377              		.align	2
 378              		.global	GPIO_StructInit
 379              		.thumb
 380              		.thumb_func
 382              	GPIO_StructInit:
 383              	.LFB112:
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 384              		.loc 1 235 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 02cc 80B4     		push	{r7}
 390              	.LCFI6:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 02ce 83B0     		sub	sp, sp, #12
 394              	.LCFI7:
 395              		.cfi_def_cfa_offset 16
 396 02d0 00AF     		add	r7, sp, #0
 397              	.LCFI8:
 398              		.cfi_def_cfa_register 7
 399 02d2 7860     		str	r0, [r7, #4]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 400              		.loc 1 237 0
 401 02d4 7B68     		ldr	r3, [r7, #4]
 402 02d6 4FF6FF72 		movw	r2, #65535
 403 02da 1A60     		str	r2, [r3, #0]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 404              		.loc 1 238 0
 405 02dc 7B68     		ldr	r3, [r7, #4]
 406 02de 4FF00002 		mov	r2, #0
 407 02e2 1A71     		strb	r2, [r3, #4]
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 408              		.loc 1 239 0
 409 02e4 7B68     		ldr	r3, [r7, #4]
 410 02e6 4FF00002 		mov	r2, #0
 411 02ea 5A71     		strb	r2, [r3, #5]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 412              		.loc 1 240 0
 413 02ec 7B68     		ldr	r3, [r7, #4]
 414 02ee 4FF00002 		mov	r2, #0
 415 02f2 9A71     		strb	r2, [r3, #6]
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 416              		.loc 1 241 0
 417 02f4 7B68     		ldr	r3, [r7, #4]
 418 02f6 4FF00002 		mov	r2, #0
 419 02fa DA71     		strb	r2, [r3, #7]
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 420              		.loc 1 242 0
 421 02fc 07F10C07 		add	r7, r7, #12
 422 0300 BD46     		mov	sp, r7
 423 0302 80BC     		pop	{r7}
 424 0304 7047     		bx	lr
 425              		.cfi_endproc
 426              	.LFE112:
 428 0306 00BF     		.align	2
 429              		.global	GPIO_PinLockConfig
 430              		.thumb
 431              		.thumb_func
 433              	GPIO_PinLockConfig:
 434              	.LFB113:
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         until the next reset.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 435              		.loc 1 256 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 16
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 440 0308 80B4     		push	{r7}
 441              	.LCFI9:
 442              		.cfi_def_cfa_offset 4
 443              		.cfi_offset 7, -4
 444 030a 85B0     		sub	sp, sp, #20
 445              	.LCFI10:
 446              		.cfi_def_cfa_offset 24
 447 030c 00AF     		add	r7, sp, #0
 448              	.LCFI11:
 449              		.cfi_def_cfa_register 7
 450 030e 7860     		str	r0, [r7, #4]
 451 0310 0B46     		mov	r3, r1
 452 0312 7B80     		strh	r3, [r7, #2]	@ movhi
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 453              		.loc 1 257 0
 454 0314 4FF48033 		mov	r3, #65536
 455 0318 FB60     		str	r3, [r7, #12]
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 456              		.loc 1 263 0
 457 031a 7A88     		ldrh	r2, [r7, #2]
 458 031c FB68     		ldr	r3, [r7, #12]
 459 031e 1343     		orrs	r3, r3, r2
 460 0320 FB60     		str	r3, [r7, #12]
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 461              		.loc 1 265 0
 462 0322 FA68     		ldr	r2, [r7, #12]
 463 0324 7B68     		ldr	r3, [r7, #4]
 464 0326 DA61     		str	r2, [r3, #28]
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 465              		.loc 1 267 0
 466 0328 7A88     		ldrh	r2, [r7, #2]
 467 032a 7B68     		ldr	r3, [r7, #4]
 468 032c DA61     		str	r2, [r3, #28]
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 469              		.loc 1 269 0
 470 032e FA68     		ldr	r2, [r7, #12]
 471 0330 7B68     		ldr	r3, [r7, #4]
 472 0332 DA61     		str	r2, [r3, #28]
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 473              		.loc 1 271 0
 474 0334 7B68     		ldr	r3, [r7, #4]
 475 0336 DB69     		ldr	r3, [r3, #28]
 476 0338 FB60     		str	r3, [r7, #12]
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 477              		.loc 1 273 0
 478 033a 7B68     		ldr	r3, [r7, #4]
 479 033c DB69     		ldr	r3, [r3, #28]
 480 033e FB60     		str	r3, [r7, #12]
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 481              		.loc 1 274 0
 482 0340 07F11407 		add	r7, r7, #20
 483 0344 BD46     		mov	sp, r7
 484 0346 80BC     		pop	{r7}
 485 0348 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE113:
 489 034a 00BF     		.align	2
 490              		.global	GPIO_ReadInputDataBit
 491              		.thumb
 492              		.thumb_func
 494              	GPIO_ReadInputDataBit:
 495              	.LFB114:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                               GPIO Read and Write
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 496              		.loc 1 300 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 16
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501 034c 80B4     		push	{r7}
 502              	.LCFI12:
 503              		.cfi_def_cfa_offset 4
 504              		.cfi_offset 7, -4
 505 034e 85B0     		sub	sp, sp, #20
 506              	.LCFI13:
 507              		.cfi_def_cfa_offset 24
 508 0350 00AF     		add	r7, sp, #0
 509              	.LCFI14:
 510              		.cfi_def_cfa_register 7
 511 0352 7860     		str	r0, [r7, #4]
 512 0354 0B46     		mov	r3, r1
 513 0356 7B80     		strh	r3, [r7, #2]	@ movhi
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 514              		.loc 1 301 0
 515 0358 4FF00003 		mov	r3, #0
 516 035c FB73     		strb	r3, [r7, #15]
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 517              		.loc 1 307 0
 518 035e 7B68     		ldr	r3, [r7, #4]
 519 0360 1B69     		ldr	r3, [r3, #16]
 520 0362 1A46     		mov	r2, r3
 521 0364 7B88     		ldrh	r3, [r7, #2]
 522 0366 1340     		ands	r3, r3, r2
 523 0368 002B     		cmp	r3, #0
 524 036a 03D0     		beq	.L20
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 525              		.loc 1 309 0
 526 036c 4FF00103 		mov	r3, #1
 527 0370 FB73     		strb	r3, [r7, #15]
 528 0372 02E0     		b	.L21
 529              	.L20:
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 530              		.loc 1 313 0
 531 0374 4FF00003 		mov	r3, #0
 532 0378 FB73     		strb	r3, [r7, #15]
 533              	.L21:
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 534              		.loc 1 315 0
 535 037a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 536              		.loc 1 316 0
 537 037c 1846     		mov	r0, r3
 538 037e 07F11407 		add	r7, r7, #20
 539 0382 BD46     		mov	sp, r7
 540 0384 80BC     		pop	{r7}
 541 0386 7047     		bx	lr
 542              		.cfi_endproc
 543              	.LFE114:
 545              		.align	2
 546              		.global	GPIO_ReadInputData
 547              		.thumb
 548              		.thumb_func
 550              	GPIO_ReadInputData:
 551              	.LFB115:
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 552              		.loc 1 324 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 8
 555              		@ frame_needed = 1, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557 0388 80B4     		push	{r7}
 558              	.LCFI15:
 559              		.cfi_def_cfa_offset 4
 560              		.cfi_offset 7, -4
 561 038a 83B0     		sub	sp, sp, #12
 562              	.LCFI16:
 563              		.cfi_def_cfa_offset 16
 564 038c 00AF     		add	r7, sp, #0
 565              	.LCFI17:
 566              		.cfi_def_cfa_register 7
 567 038e 7860     		str	r0, [r7, #4]
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 568              		.loc 1 328 0
 569 0390 7B68     		ldr	r3, [r7, #4]
 570 0392 1B69     		ldr	r3, [r3, #16]
 571 0394 9BB2     		uxth	r3, r3
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 572              		.loc 1 329 0
 573 0396 1846     		mov	r0, r3
 574 0398 07F10C07 		add	r7, r7, #12
 575 039c BD46     		mov	sp, r7
 576 039e 80BC     		pop	{r7}
 577 03a0 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE115:
 581 03a2 00BF     		.align	2
 582              		.global	GPIO_ReadOutputDataBit
 583              		.thumb
 584              		.thumb_func
 586              	GPIO_ReadOutputDataBit:
 587              	.LFB116:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 588              		.loc 1 339 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 16
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593 03a4 80B4     		push	{r7}
 594              	.LCFI18:
 595              		.cfi_def_cfa_offset 4
 596              		.cfi_offset 7, -4
 597 03a6 85B0     		sub	sp, sp, #20
 598              	.LCFI19:
 599              		.cfi_def_cfa_offset 24
 600 03a8 00AF     		add	r7, sp, #0
 601              	.LCFI20:
 602              		.cfi_def_cfa_register 7
 603 03aa 7860     		str	r0, [r7, #4]
 604 03ac 0B46     		mov	r3, r1
 605 03ae 7B80     		strh	r3, [r7, #2]	@ movhi
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 606              		.loc 1 340 0
 607 03b0 4FF00003 		mov	r3, #0
 608 03b4 FB73     		strb	r3, [r7, #15]
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 609              		.loc 1 346 0
 610 03b6 7B68     		ldr	r3, [r7, #4]
 611 03b8 5B69     		ldr	r3, [r3, #20]
 612 03ba 1A46     		mov	r2, r3
 613 03bc 7B88     		ldrh	r3, [r7, #2]
 614 03be 1340     		ands	r3, r3, r2
 615 03c0 002B     		cmp	r3, #0
 616 03c2 03D0     		beq	.L24
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 617              		.loc 1 348 0
 618 03c4 4FF00103 		mov	r3, #1
 619 03c8 FB73     		strb	r3, [r7, #15]
 620 03ca 02E0     		b	.L25
 621              	.L24:
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 622              		.loc 1 352 0
 623 03cc 4FF00003 		mov	r3, #0
 624 03d0 FB73     		strb	r3, [r7, #15]
 625              	.L25:
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 626              		.loc 1 354 0
 627 03d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 628              		.loc 1 355 0
 629 03d4 1846     		mov	r0, r3
 630 03d6 07F11407 		add	r7, r7, #20
 631 03da BD46     		mov	sp, r7
 632 03dc 80BC     		pop	{r7}
 633 03de 7047     		bx	lr
 634              		.cfi_endproc
 635              	.LFE116:
 637              		.align	2
 638              		.global	GPIO_ReadOutputData
 639              		.thumb
 640              		.thumb_func
 642              	GPIO_ReadOutputData:
 643              	.LFB117:
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 644              		.loc 1 363 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 8
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649 03e0 80B4     		push	{r7}
 650              	.LCFI21:
 651              		.cfi_def_cfa_offset 4
 652              		.cfi_offset 7, -4
 653 03e2 83B0     		sub	sp, sp, #12
 654              	.LCFI22:
 655              		.cfi_def_cfa_offset 16
 656 03e4 00AF     		add	r7, sp, #0
 657              	.LCFI23:
 658              		.cfi_def_cfa_register 7
 659 03e6 7860     		str	r0, [r7, #4]
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 660              		.loc 1 367 0
 661 03e8 7B68     		ldr	r3, [r7, #4]
 662 03ea 5B69     		ldr	r3, [r3, #20]
 663 03ec 9BB2     		uxth	r3, r3
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 664              		.loc 1 368 0
 665 03ee 1846     		mov	r0, r3
 666 03f0 07F10C07 		add	r7, r7, #12
 667 03f4 BD46     		mov	sp, r7
 668 03f6 80BC     		pop	{r7}
 669 03f8 7047     		bx	lr
 670              		.cfi_endproc
 671              	.LFE117:
 673 03fa 00BF     		.align	2
 674              		.global	GPIO_SetBits
 675              		.thumb
 676              		.thumb_func
 678              	GPIO_SetBits:
 679              	.LFB118:
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 680              		.loc 1 381 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 8
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685 03fc 80B4     		push	{r7}
 686              	.LCFI24:
 687              		.cfi_def_cfa_offset 4
 688              		.cfi_offset 7, -4
 689 03fe 83B0     		sub	sp, sp, #12
 690              	.LCFI25:
 691              		.cfi_def_cfa_offset 16
 692 0400 00AF     		add	r7, sp, #0
 693              	.LCFI26:
 694              		.cfi_def_cfa_register 7
 695 0402 7860     		str	r0, [r7, #4]
 696 0404 0B46     		mov	r3, r1
 697 0406 7B80     		strh	r3, [r7, #2]	@ movhi
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 698              		.loc 1 386 0
 699 0408 7B68     		ldr	r3, [r7, #4]
 700 040a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 701 040c 1A83     		strh	r2, [r3, #24]	@ movhi
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 702              		.loc 1 387 0
 703 040e 07F10C07 		add	r7, r7, #12
 704 0412 BD46     		mov	sp, r7
 705 0414 80BC     		pop	{r7}
 706 0416 7047     		bx	lr
 707              		.cfi_endproc
 708              	.LFE118:
 710              		.align	2
 711              		.global	GPIO_ResetBits
 712              		.thumb
 713              		.thumb_func
 715              	GPIO_ResetBits:
 716              	.LFB119:
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 717              		.loc 1 400 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 8
 720              		@ frame_needed = 1, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722 0418 80B4     		push	{r7}
 723              	.LCFI27:
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 7, -4
 726 041a 83B0     		sub	sp, sp, #12
 727              	.LCFI28:
 728              		.cfi_def_cfa_offset 16
 729 041c 00AF     		add	r7, sp, #0
 730              	.LCFI29:
 731              		.cfi_def_cfa_register 7
 732 041e 7860     		str	r0, [r7, #4]
 733 0420 0B46     		mov	r3, r1
 734 0422 7B80     		strh	r3, [r7, #2]	@ movhi
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
 735              		.loc 1 405 0
 736 0424 7B68     		ldr	r3, [r7, #4]
 737 0426 7A88     		ldrh	r2, [r7, #2]	@ movhi
 738 0428 5A83     		strh	r2, [r3, #26]	@ movhi
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 739              		.loc 1 406 0
 740 042a 07F10C07 		add	r7, r7, #12
 741 042e BD46     		mov	sp, r7
 742 0430 80BC     		pop	{r7}
 743 0432 7047     		bx	lr
 744              		.cfi_endproc
 745              	.LFE119:
 747              		.align	2
 748              		.global	GPIO_WriteBit
 749              		.thumb
 750              		.thumb_func
 752              	GPIO_WriteBit:
 753              	.LFB120:
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 754              		.loc 1 420 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 8
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759 0434 80B4     		push	{r7}
 760              	.LCFI30:
 761              		.cfi_def_cfa_offset 4
 762              		.cfi_offset 7, -4
 763 0436 83B0     		sub	sp, sp, #12
 764              	.LCFI31:
 765              		.cfi_def_cfa_offset 16
 766 0438 00AF     		add	r7, sp, #0
 767              	.LCFI32:
 768              		.cfi_def_cfa_register 7
 769 043a 7860     		str	r0, [r7, #4]
 770 043c 1346     		mov	r3, r2
 771 043e 0A46     		mov	r2, r1	@ movhi
 772 0440 7A80     		strh	r2, [r7, #2]	@ movhi
 773 0442 7B70     		strb	r3, [r7, #1]
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 774              		.loc 1 426 0
 775 0444 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 776 0446 002B     		cmp	r3, #0
 777 0448 03D0     		beq	.L30
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 778              		.loc 1 428 0
 779 044a 7B68     		ldr	r3, [r7, #4]
 780 044c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 781 044e 1A83     		strh	r2, [r3, #24]	@ movhi
 782 0450 02E0     		b	.L29
 783              	.L30:
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 784              		.loc 1 432 0
 785 0452 7B68     		ldr	r3, [r7, #4]
 786 0454 7A88     		ldrh	r2, [r7, #2]	@ movhi
 787 0456 5A83     		strh	r2, [r3, #26]	@ movhi
 788              	.L29:
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 789              		.loc 1 434 0
 790 0458 07F10C07 		add	r7, r7, #12
 791 045c BD46     		mov	sp, r7
 792 045e 80BC     		pop	{r7}
 793 0460 7047     		bx	lr
 794              		.cfi_endproc
 795              	.LFE120:
 797 0462 00BF     		.align	2
 798              		.global	GPIO_Write
 799              		.thumb
 800              		.thumb_func
 802              	GPIO_Write:
 803              	.LFB121:
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 804              		.loc 1 443 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 8
 807              		@ frame_needed = 1, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809 0464 80B4     		push	{r7}
 810              	.LCFI33:
 811              		.cfi_def_cfa_offset 4
 812              		.cfi_offset 7, -4
 813 0466 83B0     		sub	sp, sp, #12
 814              	.LCFI34:
 815              		.cfi_def_cfa_offset 16
 816 0468 00AF     		add	r7, sp, #0
 817              	.LCFI35:
 818              		.cfi_def_cfa_register 7
 819 046a 7860     		str	r0, [r7, #4]
 820 046c 0B46     		mov	r3, r1
 821 046e 7B80     		strh	r3, [r7, #2]	@ movhi
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 822              		.loc 1 447 0
 823 0470 7A88     		ldrh	r2, [r7, #2]
 824 0472 7B68     		ldr	r3, [r7, #4]
 825 0474 5A61     		str	r2, [r3, #20]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 826              		.loc 1 448 0
 827 0476 07F10C07 		add	r7, r7, #12
 828 047a BD46     		mov	sp, r7
 829 047c 80BC     		pop	{r7}
 830 047e 7047     		bx	lr
 831              		.cfi_endproc
 832              	.LFE121:
 834              		.align	2
 835              		.global	GPIO_ToggleBits
 836              		.thumb
 837              		.thumb_func
 839              	GPIO_ToggleBits:
 840              	.LFB122:
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 841              		.loc 1 457 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 8
 844              		@ frame_needed = 1, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 846 0480 80B4     		push	{r7}
 847              	.LCFI36:
 848              		.cfi_def_cfa_offset 4
 849              		.cfi_offset 7, -4
 850 0482 83B0     		sub	sp, sp, #12
 851              	.LCFI37:
 852              		.cfi_def_cfa_offset 16
 853 0484 00AF     		add	r7, sp, #0
 854              	.LCFI38:
 855              		.cfi_def_cfa_register 7
 856 0486 7860     		str	r0, [r7, #4]
 857 0488 0B46     		mov	r3, r1
 858 048a 7B80     		strh	r3, [r7, #2]	@ movhi
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 859              		.loc 1 461 0
 860 048c 7B68     		ldr	r3, [r7, #4]
 861 048e 5B69     		ldr	r3, [r3, #20]
 862 0490 1A46     		mov	r2, r3
 863 0492 7B88     		ldrh	r3, [r7, #2]
 864 0494 5A40     		eors	r2, r2, r3
 865 0496 7B68     		ldr	r3, [r7, #4]
 866 0498 5A61     		str	r2, [r3, #20]
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 867              		.loc 1 462 0
 868 049a 07F10C07 		add	r7, r7, #12
 869 049e BD46     		mov	sp, r7
 870 04a0 80BC     		pop	{r7}
 871 04a2 7047     		bx	lr
 872              		.cfi_endproc
 873              	.LFE122:
 875              		.align	2
 876              		.global	GPIO_PinAFConfig
 877              		.thumb
 878              		.thumb_func
 880              	GPIO_PinAFConfig:
 881              	.LFB123:
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                GPIO Alternate functions configuration function
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 882              		.loc 1 530 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 16
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886              		@ link register save eliminated.
 887 04a4 80B4     		push	{r7}
 888              	.LCFI39:
 889              		.cfi_def_cfa_offset 4
 890              		.cfi_offset 7, -4
 891 04a6 85B0     		sub	sp, sp, #20
 892              	.LCFI40:
 893              		.cfi_def_cfa_offset 24
 894 04a8 00AF     		add	r7, sp, #0
 895              	.LCFI41:
 896              		.cfi_def_cfa_register 7
 897 04aa 7860     		str	r0, [r7, #4]
 898 04ac 1346     		mov	r3, r2
 899 04ae 0A46     		mov	r2, r1	@ movhi
 900 04b0 7A80     		strh	r2, [r7, #2]	@ movhi
 901 04b2 7B70     		strb	r3, [r7, #1]
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
 902              		.loc 1 531 0
 903 04b4 4FF00003 		mov	r3, #0
 904 04b8 FB60     		str	r3, [r7, #12]
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 905              		.loc 1 532 0
 906 04ba 4FF00003 		mov	r3, #0
 907 04be BB60     		str	r3, [r7, #8]
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 908              		.loc 1 539 0
 909 04c0 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 910 04c2 7B88     		ldrh	r3, [r7, #2]
 911 04c4 03F00703 		and	r3, r3, #7
 912 04c8 4FEA8303 		lsl	r3, r3, #2
 913 04cc 02FA03F3 		lsl	r3, r2, r3
 914 04d0 FB60     		str	r3, [r7, #12]
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 915              		.loc 1 540 0
 916 04d2 7B88     		ldrh	r3, [r7, #2]
 917 04d4 4FEAD303 		lsr	r3, r3, #3
 918 04d8 9BB2     		uxth	r3, r3
 919 04da 1A46     		mov	r2, r3
 920 04dc 7B88     		ldrh	r3, [r7, #2]
 921 04de 4FEAD303 		lsr	r3, r3, #3
 922 04e2 9BB2     		uxth	r3, r3
 923 04e4 1946     		mov	r1, r3
 924 04e6 7B68     		ldr	r3, [r7, #4]
 925 04e8 01F10801 		add	r1, r1, #8
 926 04ec 53F82130 		ldr	r3, [r3, r1, lsl #2]
 927 04f0 1946     		mov	r1, r3
 928 04f2 7B88     		ldrh	r3, [r7, #2]
 929 04f4 03F00703 		and	r3, r3, #7
 930 04f8 4FEA8303 		lsl	r3, r3, #2
 931 04fc 4FF00F00 		mov	r0, #15
 932 0500 00FA03F3 		lsl	r3, r0, r3
 933 0504 6FEA0303 		mvn	r3, r3
 934 0508 1940     		ands	r1, r1, r3
 935 050a 7B68     		ldr	r3, [r7, #4]
 936 050c 02F10802 		add	r2, r2, #8
 937 0510 43F82210 		str	r1, [r3, r2, lsl #2]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 938              		.loc 1 541 0
 939 0514 7B88     		ldrh	r3, [r7, #2]
 940 0516 4FEAD303 		lsr	r3, r3, #3
 941 051a 9BB2     		uxth	r3, r3
 942 051c 1A46     		mov	r2, r3
 943 051e 7B68     		ldr	r3, [r7, #4]
 944 0520 02F10802 		add	r2, r2, #8
 945 0524 53F82230 		ldr	r3, [r3, r2, lsl #2]
 946 0528 1A46     		mov	r2, r3
 947 052a FB68     		ldr	r3, [r7, #12]
 948 052c 1343     		orrs	r3, r3, r2
 949 052e BB60     		str	r3, [r7, #8]
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 950              		.loc 1 542 0
 951 0530 7B88     		ldrh	r3, [r7, #2]
 952 0532 4FEAD303 		lsr	r3, r3, #3
 953 0536 9BB2     		uxth	r3, r3
 954 0538 1A46     		mov	r2, r3
 955 053a 7B68     		ldr	r3, [r7, #4]
 956 053c 02F10802 		add	r2, r2, #8
 957 0540 B968     		ldr	r1, [r7, #8]
 958 0542 43F82210 		str	r1, [r3, r2, lsl #2]
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 959              		.loc 1 543 0
 960 0546 07F11407 		add	r7, r7, #20
 961 054a BD46     		mov	sp, r7
 962 054c 80BC     		pop	{r7}
 963 054e 7047     		bx	lr
 964              		.cfi_endproc
 965              	.LFE123:
 967              	.Letext0:
 968              		.file 2 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 969              		.file 3 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/
 970              		.file 4 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/st
 971              		.file 5 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_gpio.c
  C:\TEMP\ccMWNfVW.s:19     .text:00000000 $t
  C:\TEMP\ccMWNfVW.s:24     .text:00000000 GPIO_DeInit
  C:\TEMP\ccMWNfVW.s:198    .text:00000178 GPIO_Init
  C:\TEMP\ccMWNfVW.s:382    .text:000002cc GPIO_StructInit
  C:\TEMP\ccMWNfVW.s:433    .text:00000308 GPIO_PinLockConfig
  C:\TEMP\ccMWNfVW.s:494    .text:0000034c GPIO_ReadInputDataBit
  C:\TEMP\ccMWNfVW.s:550    .text:00000388 GPIO_ReadInputData
  C:\TEMP\ccMWNfVW.s:586    .text:000003a4 GPIO_ReadOutputDataBit
  C:\TEMP\ccMWNfVW.s:642    .text:000003e0 GPIO_ReadOutputData
  C:\TEMP\ccMWNfVW.s:678    .text:000003fc GPIO_SetBits
  C:\TEMP\ccMWNfVW.s:715    .text:00000418 GPIO_ResetBits
  C:\TEMP\ccMWNfVW.s:752    .text:00000434 GPIO_WriteBit
  C:\TEMP\ccMWNfVW.s:802    .text:00000464 GPIO_Write
  C:\TEMP\ccMWNfVW.s:839    .text:00000480 GPIO_ToggleBits
  C:\TEMP\ccMWNfVW.s:880    .text:000004a4 GPIO_PinAFConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
