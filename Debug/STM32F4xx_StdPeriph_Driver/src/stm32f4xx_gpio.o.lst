   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_gpio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	GPIO_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	GPIO_DeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - Initialization and Configuration
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Read and Write
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Alternate functions configuration
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                 How to use this driver
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================       
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           1. Enable the GPIO AHB clock using the following function
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           2. Configure the GPIO pin(s) using GPIO_Init()
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              Four possible configuration are available for each pin:
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Input: Floating, Pull-up, Pull-down.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          Open Drain (Pull-up, Pull-down or no Pull).
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  In output mode, the speed is configurable: 2 MHz, 25 MHz,
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  50 MHz or 100 MHz.
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull)
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                      Open Drain (Pull-up, Pull-down or no Pull).
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Analog: required mode when a pin is to be used as ADC channel
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          or DAC output.
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          3- Peripherals alternate function:
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For ADC and DAC, configure the desired pin in analog mode using 
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For other peripherals (TIM, USART...):
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Configure the desired pin in alternate function mode using
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Call GPIO_Init() function
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *        
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          4. To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          5. To set/reset the level of a pin configured in output mode use
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             GPIO_SetBits()/GPIO_ResetBits()
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *               
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          6. During and just after reset, the alternate functions are not 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             active and the GPIO pins are configured in input floating mode
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             (except JTAG pins).
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          7. The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose (PC14 and PC15, respectively) when the LSE
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The LSE has priority over the GPIO function.
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          8. The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose PH0 and PH1, respectively, when the HSE 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The HSE has priority over the GPIO function.
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @endverbatim        
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @attention
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                         Initialization and Configuration
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
  26              		.loc 1 121 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 82B0     		sub	sp, sp, #8
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
  42              		.loc 1 125 0
  43 0008 7A68     		ldr	r2, [r7, #4]
  44 000a 4FF00003 		mov	r3, #0
  45 000e C4F20203 		movt	r3, 16386
  46 0012 9A42     		cmp	r2, r3
  47 0014 0CD1     		bne	.L2
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
  48              		.loc 1 127 0
  49 0016 4FF00100 		mov	r0, #1
  50 001a 4FF00101 		mov	r1, #1
  51 001e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  52              		.loc 1 128 0
  53 0022 4FF00100 		mov	r0, #1
  54 0026 4FF00001 		mov	r1, #0
  55 002a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  56 002e 9EE0     		b	.L1
  57              	.L2:
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
  58              		.loc 1 130 0
  59 0030 7A68     		ldr	r2, [r7, #4]
  60 0032 4FF48063 		mov	r3, #1024
  61 0036 C4F20203 		movt	r3, 16386
  62 003a 9A42     		cmp	r2, r3
  63 003c 0CD1     		bne	.L4
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
  64              		.loc 1 132 0
  65 003e 4FF00200 		mov	r0, #2
  66 0042 4FF00101 		mov	r1, #1
  67 0046 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
  68              		.loc 1 133 0
  69 004a 4FF00200 		mov	r0, #2
  70 004e 4FF00001 		mov	r1, #0
  71 0052 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  72 0056 8AE0     		b	.L1
  73              	.L4:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
  74              		.loc 1 135 0
  75 0058 7A68     		ldr	r2, [r7, #4]
  76 005a 4FF40063 		mov	r3, #2048
  77 005e C4F20203 		movt	r3, 16386
  78 0062 9A42     		cmp	r2, r3
  79 0064 0CD1     		bne	.L5
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
  80              		.loc 1 137 0
  81 0066 4FF00400 		mov	r0, #4
  82 006a 4FF00101 		mov	r1, #1
  83 006e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
  84              		.loc 1 138 0
  85 0072 4FF00400 		mov	r0, #4
  86 0076 4FF00001 		mov	r1, #0
  87 007a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  88 007e 76E0     		b	.L1
  89              	.L5:
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
  90              		.loc 1 140 0
  91 0080 7A68     		ldr	r2, [r7, #4]
  92 0082 4FF44063 		mov	r3, #3072
  93 0086 C4F20203 		movt	r3, 16386
  94 008a 9A42     		cmp	r2, r3
  95 008c 0CD1     		bne	.L6
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
  96              		.loc 1 142 0
  97 008e 4FF00800 		mov	r0, #8
  98 0092 4FF00101 		mov	r1, #1
  99 0096 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 100              		.loc 1 143 0
 101 009a 4FF00800 		mov	r0, #8
 102 009e 4FF00001 		mov	r1, #0
 103 00a2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 104 00a6 62E0     		b	.L1
 105              	.L6:
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
 106              		.loc 1 145 0
 107 00a8 7A68     		ldr	r2, [r7, #4]
 108 00aa 4FF48053 		mov	r3, #4096
 109 00ae C4F20203 		movt	r3, 16386
 110 00b2 9A42     		cmp	r2, r3
 111 00b4 0CD1     		bne	.L7
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 112              		.loc 1 147 0
 113 00b6 4FF01000 		mov	r0, #16
 114 00ba 4FF00101 		mov	r1, #1
 115 00be FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 116              		.loc 1 148 0
 117 00c2 4FF01000 		mov	r0, #16
 118 00c6 4FF00001 		mov	r1, #0
 119 00ca FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 120 00ce 4EE0     		b	.L1
 121              	.L7:
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
 122              		.loc 1 150 0
 123 00d0 7A68     		ldr	r2, [r7, #4]
 124 00d2 4FF4A053 		mov	r3, #5120
 125 00d6 C4F20203 		movt	r3, 16386
 126 00da 9A42     		cmp	r2, r3
 127 00dc 0CD1     		bne	.L8
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 128              		.loc 1 152 0
 129 00de 4FF02000 		mov	r0, #32
 130 00e2 4FF00101 		mov	r1, #1
 131 00e6 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 132              		.loc 1 153 0
 133 00ea 4FF02000 		mov	r0, #32
 134 00ee 4FF00001 		mov	r1, #0
 135 00f2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 136 00f6 3AE0     		b	.L1
 137              	.L8:
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
 138              		.loc 1 155 0
 139 00f8 7A68     		ldr	r2, [r7, #4]
 140 00fa 4FF4C053 		mov	r3, #6144
 141 00fe C4F20203 		movt	r3, 16386
 142 0102 9A42     		cmp	r2, r3
 143 0104 0CD1     		bne	.L9
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 144              		.loc 1 157 0
 145 0106 4FF04000 		mov	r0, #64
 146 010a 4FF00101 		mov	r1, #1
 147 010e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 148              		.loc 1 158 0
 149 0112 4FF04000 		mov	r0, #64
 150 0116 4FF00001 		mov	r1, #0
 151 011a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 152 011e 26E0     		b	.L1
 153              	.L9:
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
 154              		.loc 1 160 0
 155 0120 7A68     		ldr	r2, [r7, #4]
 156 0122 4FF4E053 		mov	r3, #7168
 157 0126 C4F20203 		movt	r3, 16386
 158 012a 9A42     		cmp	r2, r3
 159 012c 0CD1     		bne	.L10
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 160              		.loc 1 162 0
 161 012e 4FF08000 		mov	r0, #128
 162 0132 4FF00101 		mov	r1, #1
 163 0136 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 164              		.loc 1 163 0
 165 013a 4FF08000 		mov	r0, #128
 166 013e 4FF00001 		mov	r1, #0
 167 0142 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 168 0146 12E0     		b	.L1
 169              	.L10:
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOI)
 170              		.loc 1 167 0
 171 0148 7A68     		ldr	r2, [r7, #4]
 172 014a 4FF40053 		mov	r3, #8192
 173 014e C4F20203 		movt	r3, 16386
 174 0152 9A42     		cmp	r2, r3
 175 0154 0BD1     		bne	.L1
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
 176              		.loc 1 169 0
 177 0156 4FF48070 		mov	r0, #256
 178 015a 4FF00101 		mov	r1, #1
 179 015e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 180              		.loc 1 170 0
 181 0162 4FF48070 		mov	r0, #256
 182 0166 4FF00001 		mov	r1, #0
 183 016a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 184              	.L1:
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 185              		.loc 1 173 0
 186 016e 07F10807 		add	r7, r7, #8
 187 0172 BD46     		mov	sp, r7
 188 0174 80BD     		pop	{r7, pc}
 189              		.cfi_endproc
 190              	.LFE110:
 192 0176 00BF     		.align	2
 193              		.global	GPIO_Init
 194              		.thumb
 195              		.thumb_func
 197              	GPIO_Init:
 198              	.LFB111:
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 199              		.loc 1 183 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 24
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204 0178 80B4     		push	{r7}
 205              	.LCFI3:
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 7, -4
 208 017a 87B0     		sub	sp, sp, #28
 209              	.LCFI4:
 210              		.cfi_def_cfa_offset 32
 211 017c 00AF     		add	r7, sp, #0
 212              	.LCFI5:
 213              		.cfi_def_cfa_register 7
 214 017e 7860     		str	r0, [r7, #4]
 215 0180 3960     		str	r1, [r7, #0]
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 216              		.loc 1 184 0
 217 0182 4FF00003 		mov	r3, #0
 218 0186 7B61     		str	r3, [r7, #20]
 219 0188 4FF00003 		mov	r3, #0
 220 018c 3B61     		str	r3, [r7, #16]
 221 018e 4FF00003 		mov	r3, #0
 222 0192 FB60     		str	r3, [r7, #12]
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* -------------------------Configure the port pins---------------- */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 223              		.loc 1 194 0
 224 0194 4FF00003 		mov	r3, #0
 225 0198 7B61     		str	r3, [r7, #20]
 226 019a 8EE0     		b	.L12
 227              	.L16:
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 228              		.loc 1 196 0
 229 019c 7B69     		ldr	r3, [r7, #20]
 230 019e 4FF00102 		mov	r2, #1
 231 01a2 02FA03F3 		lsl	r3, r2, r3
 232 01a6 3B61     		str	r3, [r7, #16]
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 233              		.loc 1 198 0
 234 01a8 3B68     		ldr	r3, [r7, #0]
 235 01aa 1A68     		ldr	r2, [r3, #0]
 236 01ac 3B69     		ldr	r3, [r7, #16]
 237 01ae 1340     		ands	r3, r3, r2
 238 01b0 FB60     		str	r3, [r7, #12]
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 239              		.loc 1 200 0
 240 01b2 FA68     		ldr	r2, [r7, #12]
 241 01b4 3B69     		ldr	r3, [r7, #16]
 242 01b6 9A42     		cmp	r2, r3
 243 01b8 7BD1     		bne	.L13
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 244              		.loc 1 202 0
 245 01ba 7B68     		ldr	r3, [r7, #4]
 246 01bc 1B68     		ldr	r3, [r3, #0]
 247 01be 1A46     		mov	r2, r3
 248 01c0 7B69     		ldr	r3, [r7, #20]
 249 01c2 4FEA4303 		lsl	r3, r3, #1
 250 01c6 4FF00301 		mov	r1, #3
 251 01ca 01FA03F3 		lsl	r3, r1, r3
 252 01ce 6FEA0303 		mvn	r3, r3
 253 01d2 1A40     		ands	r2, r2, r3
 254 01d4 7B68     		ldr	r3, [r7, #4]
 255 01d6 1A60     		str	r2, [r3, #0]
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 256              		.loc 1 203 0
 257 01d8 7B68     		ldr	r3, [r7, #4]
 258 01da 1B68     		ldr	r3, [r3, #0]
 259 01dc 1A46     		mov	r2, r3
 260 01de 3B68     		ldr	r3, [r7, #0]
 261 01e0 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 262 01e2 1946     		mov	r1, r3
 263 01e4 7B69     		ldr	r3, [r7, #20]
 264 01e6 4FEA4303 		lsl	r3, r3, #1
 265 01ea 01FA03F3 		lsl	r3, r1, r3
 266 01ee 1A43     		orrs	r2, r2, r3
 267 01f0 7B68     		ldr	r3, [r7, #4]
 268 01f2 1A60     		str	r2, [r3, #0]
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 269              		.loc 1 205 0
 270 01f4 3B68     		ldr	r3, [r7, #0]
 271 01f6 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 272 01f8 012B     		cmp	r3, #1
 273 01fa 03D0     		beq	.L14
 274              		.loc 1 205 0 is_stmt 0 discriminator 1
 275 01fc 3B68     		ldr	r3, [r7, #0]
 276 01fe 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 277 0200 022B     		cmp	r3, #2
 278 0202 38D1     		bne	.L15
 279              	.L14:
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       {
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 280              		.loc 1 211 0 is_stmt 1
 281 0204 7B68     		ldr	r3, [r7, #4]
 282 0206 9B68     		ldr	r3, [r3, #8]
 283 0208 1A46     		mov	r2, r3
 284 020a 7B69     		ldr	r3, [r7, #20]
 285 020c 4FEA4303 		lsl	r3, r3, #1
 286 0210 4FF00301 		mov	r1, #3
 287 0214 01FA03F3 		lsl	r3, r1, r3
 288 0218 6FEA0303 		mvn	r3, r3
 289 021c 1A40     		ands	r2, r2, r3
 290 021e 7B68     		ldr	r3, [r7, #4]
 291 0220 9A60     		str	r2, [r3, #8]
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 292              		.loc 1 212 0
 293 0222 7B68     		ldr	r3, [r7, #4]
 294 0224 9B68     		ldr	r3, [r3, #8]
 295 0226 1A46     		mov	r2, r3
 296 0228 3B68     		ldr	r3, [r7, #0]
 297 022a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 298 022c 1946     		mov	r1, r3
 299 022e 7B69     		ldr	r3, [r7, #20]
 300 0230 4FEA4303 		lsl	r3, r3, #1
 301 0234 01FA03F3 		lsl	r3, r1, r3
 302 0238 1A43     		orrs	r2, r2, r3
 303 023a 7B68     		ldr	r3, [r7, #4]
 304 023c 9A60     		str	r2, [r3, #8]
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 305              		.loc 1 218 0
 306 023e 7B68     		ldr	r3, [r7, #4]
 307 0240 5B68     		ldr	r3, [r3, #4]
 308 0242 1A46     		mov	r2, r3
 309 0244 7B69     		ldr	r3, [r7, #20]
 310 0246 9BB2     		uxth	r3, r3
 311 0248 4FF00101 		mov	r1, #1
 312 024c 01FA03F3 		lsl	r3, r1, r3
 313 0250 6FEA0303 		mvn	r3, r3
 314 0254 1A40     		ands	r2, r2, r3
 315 0256 7B68     		ldr	r3, [r7, #4]
 316 0258 5A60     		str	r2, [r3, #4]
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 317              		.loc 1 219 0
 318 025a 7B68     		ldr	r3, [r7, #4]
 319 025c 5B68     		ldr	r3, [r3, #4]
 320 025e 1A46     		mov	r2, r3
 321 0260 3B68     		ldr	r3, [r7, #0]
 322 0262 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 323 0264 1946     		mov	r1, r3
 324 0266 7B69     		ldr	r3, [r7, #20]
 325 0268 9BB2     		uxth	r3, r3
 326 026a 01FA03F3 		lsl	r3, r1, r3
 327 026e 9BB2     		uxth	r3, r3
 328 0270 1A43     		orrs	r2, r2, r3
 329 0272 7B68     		ldr	r3, [r7, #4]
 330 0274 5A60     		str	r2, [r3, #4]
 331              	.L15:
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       }
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 332              		.loc 1 223 0
 333 0276 7B68     		ldr	r3, [r7, #4]
 334 0278 DB68     		ldr	r3, [r3, #12]
 335 027a 1A46     		mov	r2, r3
 336 027c 7B69     		ldr	r3, [r7, #20]
 337 027e 9BB2     		uxth	r3, r3
 338 0280 4FEA4303 		lsl	r3, r3, #1
 339 0284 4FF00301 		mov	r1, #3
 340 0288 01FA03F3 		lsl	r3, r1, r3
 341 028c 6FEA0303 		mvn	r3, r3
 342 0290 1A40     		ands	r2, r2, r3
 343 0292 7B68     		ldr	r3, [r7, #4]
 344 0294 DA60     		str	r2, [r3, #12]
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 345              		.loc 1 224 0
 346 0296 7B68     		ldr	r3, [r7, #4]
 347 0298 DB68     		ldr	r3, [r3, #12]
 348 029a 1A46     		mov	r2, r3
 349 029c 3B68     		ldr	r3, [r7, #0]
 350 029e DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 351 02a0 1946     		mov	r1, r3
 352 02a2 7B69     		ldr	r3, [r7, #20]
 353 02a4 4FEA4303 		lsl	r3, r3, #1
 354 02a8 01FA03F3 		lsl	r3, r1, r3
 355 02ac 1A43     		orrs	r2, r2, r3
 356 02ae 7B68     		ldr	r3, [r7, #4]
 357 02b0 DA60     		str	r2, [r3, #12]
 358              	.L13:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 359              		.loc 1 194 0
 360 02b2 7B69     		ldr	r3, [r7, #20]
 361 02b4 03F10103 		add	r3, r3, #1
 362 02b8 7B61     		str	r3, [r7, #20]
 363              	.L12:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 364              		.loc 1 194 0 is_stmt 0 discriminator 1
 365 02ba 7B69     		ldr	r3, [r7, #20]
 366 02bc 0F2B     		cmp	r3, #15
 367 02be 7FF66DAF 		bls	.L16
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 368              		.loc 1 227 0 is_stmt 1
 369 02c2 07F11C07 		add	r7, r7, #28
 370 02c6 BD46     		mov	sp, r7
 371 02c8 80BC     		pop	{r7}
 372 02ca 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE111:
 376              		.align	2
 377              		.global	GPIO_StructInit
 378              		.thumb
 379              		.thumb_func
 381              	GPIO_StructInit:
 382              	.LFB112:
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 383              		.loc 1 235 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 02cc 80B4     		push	{r7}
 389              	.LCFI6:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 02ce 83B0     		sub	sp, sp, #12
 393              	.LCFI7:
 394              		.cfi_def_cfa_offset 16
 395 02d0 00AF     		add	r7, sp, #0
 396              	.LCFI8:
 397              		.cfi_def_cfa_register 7
 398 02d2 7860     		str	r0, [r7, #4]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 399              		.loc 1 237 0
 400 02d4 7B68     		ldr	r3, [r7, #4]
 401 02d6 4FF6FF72 		movw	r2, #65535
 402 02da 1A60     		str	r2, [r3, #0]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 403              		.loc 1 238 0
 404 02dc 7B68     		ldr	r3, [r7, #4]
 405 02de 4FF00002 		mov	r2, #0
 406 02e2 1A71     		strb	r2, [r3, #4]
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 407              		.loc 1 239 0
 408 02e4 7B68     		ldr	r3, [r7, #4]
 409 02e6 4FF00002 		mov	r2, #0
 410 02ea 5A71     		strb	r2, [r3, #5]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 411              		.loc 1 240 0
 412 02ec 7B68     		ldr	r3, [r7, #4]
 413 02ee 4FF00002 		mov	r2, #0
 414 02f2 9A71     		strb	r2, [r3, #6]
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 415              		.loc 1 241 0
 416 02f4 7B68     		ldr	r3, [r7, #4]
 417 02f6 4FF00002 		mov	r2, #0
 418 02fa DA71     		strb	r2, [r3, #7]
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 419              		.loc 1 242 0
 420 02fc 07F10C07 		add	r7, r7, #12
 421 0300 BD46     		mov	sp, r7
 422 0302 80BC     		pop	{r7}
 423 0304 7047     		bx	lr
 424              		.cfi_endproc
 425              	.LFE112:
 427 0306 00BF     		.align	2
 428              		.global	GPIO_PinLockConfig
 429              		.thumb
 430              		.thumb_func
 432              	GPIO_PinLockConfig:
 433              	.LFB113:
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         until the next reset.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 434              		.loc 1 256 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 16
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439 0308 80B4     		push	{r7}
 440              	.LCFI9:
 441              		.cfi_def_cfa_offset 4
 442              		.cfi_offset 7, -4
 443 030a 85B0     		sub	sp, sp, #20
 444              	.LCFI10:
 445              		.cfi_def_cfa_offset 24
 446 030c 00AF     		add	r7, sp, #0
 447              	.LCFI11:
 448              		.cfi_def_cfa_register 7
 449 030e 7860     		str	r0, [r7, #4]
 450 0310 0B46     		mov	r3, r1
 451 0312 7B80     		strh	r3, [r7, #2]	@ movhi
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 452              		.loc 1 257 0
 453 0314 4FF48033 		mov	r3, #65536
 454 0318 FB60     		str	r3, [r7, #12]
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 455              		.loc 1 263 0
 456 031a 7A88     		ldrh	r2, [r7, #2]
 457 031c FB68     		ldr	r3, [r7, #12]
 458 031e 1343     		orrs	r3, r3, r2
 459 0320 FB60     		str	r3, [r7, #12]
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 460              		.loc 1 265 0
 461 0322 FA68     		ldr	r2, [r7, #12]
 462 0324 7B68     		ldr	r3, [r7, #4]
 463 0326 DA61     		str	r2, [r3, #28]
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 464              		.loc 1 267 0
 465 0328 7A88     		ldrh	r2, [r7, #2]
 466 032a 7B68     		ldr	r3, [r7, #4]
 467 032c DA61     		str	r2, [r3, #28]
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 468              		.loc 1 269 0
 469 032e FA68     		ldr	r2, [r7, #12]
 470 0330 7B68     		ldr	r3, [r7, #4]
 471 0332 DA61     		str	r2, [r3, #28]
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 472              		.loc 1 271 0
 473 0334 7B68     		ldr	r3, [r7, #4]
 474 0336 DB69     		ldr	r3, [r3, #28]
 475 0338 FB60     		str	r3, [r7, #12]
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 476              		.loc 1 273 0
 477 033a 7B68     		ldr	r3, [r7, #4]
 478 033c DB69     		ldr	r3, [r3, #28]
 479 033e FB60     		str	r3, [r7, #12]
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 480              		.loc 1 274 0
 481 0340 07F11407 		add	r7, r7, #20
 482 0344 BD46     		mov	sp, r7
 483 0346 80BC     		pop	{r7}
 484 0348 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE113:
 488 034a 00BF     		.align	2
 489              		.global	GPIO_ReadInputDataBit
 490              		.thumb
 491              		.thumb_func
 493              	GPIO_ReadInputDataBit:
 494              	.LFB114:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                               GPIO Read and Write
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 495              		.loc 1 300 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 16
 498              		@ frame_needed = 1, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 500 034c 80B4     		push	{r7}
 501              	.LCFI12:
 502              		.cfi_def_cfa_offset 4
 503              		.cfi_offset 7, -4
 504 034e 85B0     		sub	sp, sp, #20
 505              	.LCFI13:
 506              		.cfi_def_cfa_offset 24
 507 0350 00AF     		add	r7, sp, #0
 508              	.LCFI14:
 509              		.cfi_def_cfa_register 7
 510 0352 7860     		str	r0, [r7, #4]
 511 0354 0B46     		mov	r3, r1
 512 0356 7B80     		strh	r3, [r7, #2]	@ movhi
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 513              		.loc 1 301 0
 514 0358 4FF00003 		mov	r3, #0
 515 035c FB73     		strb	r3, [r7, #15]
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 516              		.loc 1 307 0
 517 035e 7B68     		ldr	r3, [r7, #4]
 518 0360 1B69     		ldr	r3, [r3, #16]
 519 0362 1A46     		mov	r2, r3
 520 0364 7B88     		ldrh	r3, [r7, #2]
 521 0366 1340     		ands	r3, r3, r2
 522 0368 002B     		cmp	r3, #0
 523 036a 03D0     		beq	.L20
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 524              		.loc 1 309 0
 525 036c 4FF00103 		mov	r3, #1
 526 0370 FB73     		strb	r3, [r7, #15]
 527 0372 02E0     		b	.L21
 528              	.L20:
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 529              		.loc 1 313 0
 530 0374 4FF00003 		mov	r3, #0
 531 0378 FB73     		strb	r3, [r7, #15]
 532              	.L21:
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 533              		.loc 1 315 0
 534 037a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 535              		.loc 1 316 0
 536 037c 1846     		mov	r0, r3
 537 037e 07F11407 		add	r7, r7, #20
 538 0382 BD46     		mov	sp, r7
 539 0384 80BC     		pop	{r7}
 540 0386 7047     		bx	lr
 541              		.cfi_endproc
 542              	.LFE114:
 544              		.align	2
 545              		.global	GPIO_ReadInputData
 546              		.thumb
 547              		.thumb_func
 549              	GPIO_ReadInputData:
 550              	.LFB115:
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 551              		.loc 1 324 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 8
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556 0388 80B4     		push	{r7}
 557              	.LCFI15:
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 7, -4
 560 038a 83B0     		sub	sp, sp, #12
 561              	.LCFI16:
 562              		.cfi_def_cfa_offset 16
 563 038c 00AF     		add	r7, sp, #0
 564              	.LCFI17:
 565              		.cfi_def_cfa_register 7
 566 038e 7860     		str	r0, [r7, #4]
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 567              		.loc 1 328 0
 568 0390 7B68     		ldr	r3, [r7, #4]
 569 0392 1B69     		ldr	r3, [r3, #16]
 570 0394 9BB2     		uxth	r3, r3
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 571              		.loc 1 329 0
 572 0396 1846     		mov	r0, r3
 573 0398 07F10C07 		add	r7, r7, #12
 574 039c BD46     		mov	sp, r7
 575 039e 80BC     		pop	{r7}
 576 03a0 7047     		bx	lr
 577              		.cfi_endproc
 578              	.LFE115:
 580 03a2 00BF     		.align	2
 581              		.global	GPIO_ReadOutputDataBit
 582              		.thumb
 583              		.thumb_func
 585              	GPIO_ReadOutputDataBit:
 586              	.LFB116:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 587              		.loc 1 339 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 16
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 03a4 80B4     		push	{r7}
 593              	.LCFI18:
 594              		.cfi_def_cfa_offset 4
 595              		.cfi_offset 7, -4
 596 03a6 85B0     		sub	sp, sp, #20
 597              	.LCFI19:
 598              		.cfi_def_cfa_offset 24
 599 03a8 00AF     		add	r7, sp, #0
 600              	.LCFI20:
 601              		.cfi_def_cfa_register 7
 602 03aa 7860     		str	r0, [r7, #4]
 603 03ac 0B46     		mov	r3, r1
 604 03ae 7B80     		strh	r3, [r7, #2]	@ movhi
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 605              		.loc 1 340 0
 606 03b0 4FF00003 		mov	r3, #0
 607 03b4 FB73     		strb	r3, [r7, #15]
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 608              		.loc 1 346 0
 609 03b6 7B68     		ldr	r3, [r7, #4]
 610 03b8 5B69     		ldr	r3, [r3, #20]
 611 03ba 1A46     		mov	r2, r3
 612 03bc 7B88     		ldrh	r3, [r7, #2]
 613 03be 1340     		ands	r3, r3, r2
 614 03c0 002B     		cmp	r3, #0
 615 03c2 03D0     		beq	.L24
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 616              		.loc 1 348 0
 617 03c4 4FF00103 		mov	r3, #1
 618 03c8 FB73     		strb	r3, [r7, #15]
 619 03ca 02E0     		b	.L25
 620              	.L24:
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 621              		.loc 1 352 0
 622 03cc 4FF00003 		mov	r3, #0
 623 03d0 FB73     		strb	r3, [r7, #15]
 624              	.L25:
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 625              		.loc 1 354 0
 626 03d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 627              		.loc 1 355 0
 628 03d4 1846     		mov	r0, r3
 629 03d6 07F11407 		add	r7, r7, #20
 630 03da BD46     		mov	sp, r7
 631 03dc 80BC     		pop	{r7}
 632 03de 7047     		bx	lr
 633              		.cfi_endproc
 634              	.LFE116:
 636              		.align	2
 637              		.global	GPIO_ReadOutputData
 638              		.thumb
 639              		.thumb_func
 641              	GPIO_ReadOutputData:
 642              	.LFB117:
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 643              		.loc 1 363 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 8
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648 03e0 80B4     		push	{r7}
 649              	.LCFI21:
 650              		.cfi_def_cfa_offset 4
 651              		.cfi_offset 7, -4
 652 03e2 83B0     		sub	sp, sp, #12
 653              	.LCFI22:
 654              		.cfi_def_cfa_offset 16
 655 03e4 00AF     		add	r7, sp, #0
 656              	.LCFI23:
 657              		.cfi_def_cfa_register 7
 658 03e6 7860     		str	r0, [r7, #4]
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 659              		.loc 1 367 0
 660 03e8 7B68     		ldr	r3, [r7, #4]
 661 03ea 5B69     		ldr	r3, [r3, #20]
 662 03ec 9BB2     		uxth	r3, r3
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 663              		.loc 1 368 0
 664 03ee 1846     		mov	r0, r3
 665 03f0 07F10C07 		add	r7, r7, #12
 666 03f4 BD46     		mov	sp, r7
 667 03f6 80BC     		pop	{r7}
 668 03f8 7047     		bx	lr
 669              		.cfi_endproc
 670              	.LFE117:
 672 03fa 00BF     		.align	2
 673              		.global	GPIO_SetBits
 674              		.thumb
 675              		.thumb_func
 677              	GPIO_SetBits:
 678              	.LFB118:
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 679              		.loc 1 381 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683              		@ link register save eliminated.
 684 03fc 80B4     		push	{r7}
 685              	.LCFI24:
 686              		.cfi_def_cfa_offset 4
 687              		.cfi_offset 7, -4
 688 03fe 83B0     		sub	sp, sp, #12
 689              	.LCFI25:
 690              		.cfi_def_cfa_offset 16
 691 0400 00AF     		add	r7, sp, #0
 692              	.LCFI26:
 693              		.cfi_def_cfa_register 7
 694 0402 7860     		str	r0, [r7, #4]
 695 0404 0B46     		mov	r3, r1
 696 0406 7B80     		strh	r3, [r7, #2]	@ movhi
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 697              		.loc 1 386 0
 698 0408 7B68     		ldr	r3, [r7, #4]
 699 040a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 700 040c 1A83     		strh	r2, [r3, #24]	@ movhi
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 701              		.loc 1 387 0
 702 040e 07F10C07 		add	r7, r7, #12
 703 0412 BD46     		mov	sp, r7
 704 0414 80BC     		pop	{r7}
 705 0416 7047     		bx	lr
 706              		.cfi_endproc
 707              	.LFE118:
 709              		.align	2
 710              		.global	GPIO_ResetBits
 711              		.thumb
 712              		.thumb_func
 714              	GPIO_ResetBits:
 715              	.LFB119:
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 716              		.loc 1 400 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 8
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0418 80B4     		push	{r7}
 722              	.LCFI27:
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 041a 83B0     		sub	sp, sp, #12
 726              	.LCFI28:
 727              		.cfi_def_cfa_offset 16
 728 041c 00AF     		add	r7, sp, #0
 729              	.LCFI29:
 730              		.cfi_def_cfa_register 7
 731 041e 7860     		str	r0, [r7, #4]
 732 0420 0B46     		mov	r3, r1
 733 0422 7B80     		strh	r3, [r7, #2]	@ movhi
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
 734              		.loc 1 405 0
 735 0424 7B68     		ldr	r3, [r7, #4]
 736 0426 7A88     		ldrh	r2, [r7, #2]	@ movhi
 737 0428 5A83     		strh	r2, [r3, #26]	@ movhi
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 738              		.loc 1 406 0
 739 042a 07F10C07 		add	r7, r7, #12
 740 042e BD46     		mov	sp, r7
 741 0430 80BC     		pop	{r7}
 742 0432 7047     		bx	lr
 743              		.cfi_endproc
 744              	.LFE119:
 746              		.align	2
 747              		.global	GPIO_WriteBit
 748              		.thumb
 749              		.thumb_func
 751              	GPIO_WriteBit:
 752              	.LFB120:
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 753              		.loc 1 420 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 8
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758 0434 80B4     		push	{r7}
 759              	.LCFI30:
 760              		.cfi_def_cfa_offset 4
 761              		.cfi_offset 7, -4
 762 0436 83B0     		sub	sp, sp, #12
 763              	.LCFI31:
 764              		.cfi_def_cfa_offset 16
 765 0438 00AF     		add	r7, sp, #0
 766              	.LCFI32:
 767              		.cfi_def_cfa_register 7
 768 043a 7860     		str	r0, [r7, #4]
 769 043c 1346     		mov	r3, r2
 770 043e 0A46     		mov	r2, r1	@ movhi
 771 0440 7A80     		strh	r2, [r7, #2]	@ movhi
 772 0442 7B70     		strb	r3, [r7, #1]
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 773              		.loc 1 426 0
 774 0444 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 775 0446 002B     		cmp	r3, #0
 776 0448 03D0     		beq	.L30
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 777              		.loc 1 428 0
 778 044a 7B68     		ldr	r3, [r7, #4]
 779 044c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 780 044e 1A83     		strh	r2, [r3, #24]	@ movhi
 781 0450 02E0     		b	.L29
 782              	.L30:
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 783              		.loc 1 432 0
 784 0452 7B68     		ldr	r3, [r7, #4]
 785 0454 7A88     		ldrh	r2, [r7, #2]	@ movhi
 786 0456 5A83     		strh	r2, [r3, #26]	@ movhi
 787              	.L29:
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 788              		.loc 1 434 0
 789 0458 07F10C07 		add	r7, r7, #12
 790 045c BD46     		mov	sp, r7
 791 045e 80BC     		pop	{r7}
 792 0460 7047     		bx	lr
 793              		.cfi_endproc
 794              	.LFE120:
 796 0462 00BF     		.align	2
 797              		.global	GPIO_Write
 798              		.thumb
 799              		.thumb_func
 801              	GPIO_Write:
 802              	.LFB121:
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 803              		.loc 1 443 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 8
 806              		@ frame_needed = 1, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 808 0464 80B4     		push	{r7}
 809              	.LCFI33:
 810              		.cfi_def_cfa_offset 4
 811              		.cfi_offset 7, -4
 812 0466 83B0     		sub	sp, sp, #12
 813              	.LCFI34:
 814              		.cfi_def_cfa_offset 16
 815 0468 00AF     		add	r7, sp, #0
 816              	.LCFI35:
 817              		.cfi_def_cfa_register 7
 818 046a 7860     		str	r0, [r7, #4]
 819 046c 0B46     		mov	r3, r1
 820 046e 7B80     		strh	r3, [r7, #2]	@ movhi
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 821              		.loc 1 447 0
 822 0470 7A88     		ldrh	r2, [r7, #2]
 823 0472 7B68     		ldr	r3, [r7, #4]
 824 0474 5A61     		str	r2, [r3, #20]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 825              		.loc 1 448 0
 826 0476 07F10C07 		add	r7, r7, #12
 827 047a BD46     		mov	sp, r7
 828 047c 80BC     		pop	{r7}
 829 047e 7047     		bx	lr
 830              		.cfi_endproc
 831              	.LFE121:
 833              		.align	2
 834              		.global	GPIO_ToggleBits
 835              		.thumb
 836              		.thumb_func
 838              	GPIO_ToggleBits:
 839              	.LFB122:
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 840              		.loc 1 457 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 8
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845 0480 80B4     		push	{r7}
 846              	.LCFI36:
 847              		.cfi_def_cfa_offset 4
 848              		.cfi_offset 7, -4
 849 0482 83B0     		sub	sp, sp, #12
 850              	.LCFI37:
 851              		.cfi_def_cfa_offset 16
 852 0484 00AF     		add	r7, sp, #0
 853              	.LCFI38:
 854              		.cfi_def_cfa_register 7
 855 0486 7860     		str	r0, [r7, #4]
 856 0488 0B46     		mov	r3, r1
 857 048a 7B80     		strh	r3, [r7, #2]	@ movhi
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 858              		.loc 1 461 0
 859 048c 7B68     		ldr	r3, [r7, #4]
 860 048e 5B69     		ldr	r3, [r3, #20]
 861 0490 1A46     		mov	r2, r3
 862 0492 7B88     		ldrh	r3, [r7, #2]
 863 0494 5A40     		eors	r2, r2, r3
 864 0496 7B68     		ldr	r3, [r7, #4]
 865 0498 5A61     		str	r2, [r3, #20]
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 866              		.loc 1 462 0
 867 049a 07F10C07 		add	r7, r7, #12
 868 049e BD46     		mov	sp, r7
 869 04a0 80BC     		pop	{r7}
 870 04a2 7047     		bx	lr
 871              		.cfi_endproc
 872              	.LFE122:
 874              		.align	2
 875              		.global	GPIO_PinAFConfig
 876              		.thumb
 877              		.thumb_func
 879              	GPIO_PinAFConfig:
 880              	.LFB123:
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                GPIO Alternate functions configuration function
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 881              		.loc 1 530 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 16
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886 04a4 80B4     		push	{r7}
 887              	.LCFI39:
 888              		.cfi_def_cfa_offset 4
 889              		.cfi_offset 7, -4
 890 04a6 85B0     		sub	sp, sp, #20
 891              	.LCFI40:
 892              		.cfi_def_cfa_offset 24
 893 04a8 00AF     		add	r7, sp, #0
 894              	.LCFI41:
 895              		.cfi_def_cfa_register 7
 896 04aa 7860     		str	r0, [r7, #4]
 897 04ac 1346     		mov	r3, r2
 898 04ae 0A46     		mov	r2, r1	@ movhi
 899 04b0 7A80     		strh	r2, [r7, #2]	@ movhi
 900 04b2 7B70     		strb	r3, [r7, #1]
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
 901              		.loc 1 531 0
 902 04b4 4FF00003 		mov	r3, #0
 903 04b8 FB60     		str	r3, [r7, #12]
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 904              		.loc 1 532 0
 905 04ba 4FF00003 		mov	r3, #0
 906 04be BB60     		str	r3, [r7, #8]
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 907              		.loc 1 539 0
 908 04c0 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 909 04c2 7B88     		ldrh	r3, [r7, #2]
 910 04c4 03F00703 		and	r3, r3, #7
 911 04c8 4FEA8303 		lsl	r3, r3, #2
 912 04cc 02FA03F3 		lsl	r3, r2, r3
 913 04d0 FB60     		str	r3, [r7, #12]
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 914              		.loc 1 540 0
 915 04d2 7B88     		ldrh	r3, [r7, #2]
 916 04d4 4FEAD303 		lsr	r3, r3, #3
 917 04d8 9BB2     		uxth	r3, r3
 918 04da 1A46     		mov	r2, r3
 919 04dc 7B88     		ldrh	r3, [r7, #2]
 920 04de 4FEAD303 		lsr	r3, r3, #3
 921 04e2 9BB2     		uxth	r3, r3
 922 04e4 1946     		mov	r1, r3
 923 04e6 7B68     		ldr	r3, [r7, #4]
 924 04e8 01F10801 		add	r1, r1, #8
 925 04ec 53F82130 		ldr	r3, [r3, r1, lsl #2]
 926 04f0 1946     		mov	r1, r3
 927 04f2 7B88     		ldrh	r3, [r7, #2]
 928 04f4 03F00703 		and	r3, r3, #7
 929 04f8 4FEA8303 		lsl	r3, r3, #2
 930 04fc 4FF00F00 		mov	r0, #15
 931 0500 00FA03F3 		lsl	r3, r0, r3
 932 0504 6FEA0303 		mvn	r3, r3
 933 0508 1940     		ands	r1, r1, r3
 934 050a 7B68     		ldr	r3, [r7, #4]
 935 050c 02F10802 		add	r2, r2, #8
 936 0510 43F82210 		str	r1, [r3, r2, lsl #2]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 937              		.loc 1 541 0
 938 0514 7B88     		ldrh	r3, [r7, #2]
 939 0516 4FEAD303 		lsr	r3, r3, #3
 940 051a 9BB2     		uxth	r3, r3
 941 051c 1A46     		mov	r2, r3
 942 051e 7B68     		ldr	r3, [r7, #4]
 943 0520 02F10802 		add	r2, r2, #8
 944 0524 53F82230 		ldr	r3, [r3, r2, lsl #2]
 945 0528 1A46     		mov	r2, r3
 946 052a FB68     		ldr	r3, [r7, #12]
 947 052c 1343     		orrs	r3, r3, r2
 948 052e BB60     		str	r3, [r7, #8]
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 949              		.loc 1 542 0
 950 0530 7B88     		ldrh	r3, [r7, #2]
 951 0532 4FEAD303 		lsr	r3, r3, #3
 952 0536 9BB2     		uxth	r3, r3
 953 0538 1A46     		mov	r2, r3
 954 053a 7B68     		ldr	r3, [r7, #4]
 955 053c 02F10802 		add	r2, r2, #8
 956 0540 B968     		ldr	r1, [r7, #8]
 957 0542 43F82210 		str	r1, [r3, r2, lsl #2]
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 958              		.loc 1 543 0
 959 0546 07F11407 		add	r7, r7, #20
 960 054a BD46     		mov	sp, r7
 961 054c 80BC     		pop	{r7}
 962 054e 7047     		bx	lr
 963              		.cfi_endproc
 964              	.LFE123:
 966              	.Letext0:
 967              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 968              		.file 3 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Devi
 969              		.file 4 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_S
 970              		.file 5 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_gpio.c
  C:\Temp\ccFkJZhK.s:18     .text:00000000 $t
  C:\Temp\ccFkJZhK.s:23     .text:00000000 GPIO_DeInit
  C:\Temp\ccFkJZhK.s:197    .text:00000178 GPIO_Init
  C:\Temp\ccFkJZhK.s:381    .text:000002cc GPIO_StructInit
  C:\Temp\ccFkJZhK.s:432    .text:00000308 GPIO_PinLockConfig
  C:\Temp\ccFkJZhK.s:493    .text:0000034c GPIO_ReadInputDataBit
  C:\Temp\ccFkJZhK.s:549    .text:00000388 GPIO_ReadInputData
  C:\Temp\ccFkJZhK.s:585    .text:000003a4 GPIO_ReadOutputDataBit
  C:\Temp\ccFkJZhK.s:641    .text:000003e0 GPIO_ReadOutputData
  C:\Temp\ccFkJZhK.s:677    .text:000003fc GPIO_SetBits
  C:\Temp\ccFkJZhK.s:714    .text:00000418 GPIO_ResetBits
  C:\Temp\ccFkJZhK.s:751    .text:00000434 GPIO_WriteBit
  C:\Temp\ccFkJZhK.s:801    .text:00000464 GPIO_Write
  C:\Temp\ccFkJZhK.s:838    .text:00000480 GPIO_ToggleBits
  C:\Temp\ccFkJZhK.s:879    .text:000004a4 GPIO_PinAFConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
