   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_gpio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.GPIO_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	GPIO_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	GPIO_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - Initialization and Configuration
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Read and Write
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Alternate functions configuration
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                 How to use this driver
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================       
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           1. Enable the GPIO AHB clock using the following function
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           2. Configure the GPIO pin(s) using GPIO_Init()
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              Four possible configuration are available for each pin:
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Input: Floating, Pull-up, Pull-down.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          Open Drain (Pull-up, Pull-down or no Pull).
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  In output mode, the speed is configurable: 2 MHz, 25 MHz,
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  50 MHz or 100 MHz.
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull)
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                      Open Drain (Pull-up, Pull-down or no Pull).
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Analog: required mode when a pin is to be used as ADC channel
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          or DAC output.
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          3- Peripherals alternate function:
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For ADC and DAC, configure the desired pin in analog mode using 
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For other peripherals (TIM, USART...):
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Configure the desired pin in alternate function mode using
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Call GPIO_Init() function
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *        
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          4. To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          5. To set/reset the level of a pin configured in output mode use
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             GPIO_SetBits()/GPIO_ResetBits()
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *               
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          6. During and just after reset, the alternate functions are not 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             active and the GPIO pins are configured in input floating mode
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             (except JTAG pins).
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          7. The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose (PC14 and PC15, respectively) when the LSE
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The LSE has priority over the GPIO function.
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          8. The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose PH0 and PH1, respectively, when the HSE 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The HSE has priority over the GPIO function.
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @endverbatim        
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @attention
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                         Initialization and Configuration
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
  27              		.loc 1 121 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
  43              		.loc 1 125 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF00003 		mov	r3, #0
  46 000e C4F20203 		movt	r3, 16386
  47 0012 9A42     		cmp	r2, r3
  48 0014 0CD1     		bne	.L2
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
  49              		.loc 1 127 0
  50 0016 4FF00100 		mov	r0, #1
  51 001a 4FF00101 		mov	r1, #1
  52 001e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  53              		.loc 1 128 0
  54 0022 4FF00100 		mov	r0, #1
  55 0026 4FF00001 		mov	r1, #0
  56 002a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  57 002e 9EE0     		b	.L1
  58              	.L2:
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
  59              		.loc 1 130 0
  60 0030 7A68     		ldr	r2, [r7, #4]
  61 0032 4FF48063 		mov	r3, #1024
  62 0036 C4F20203 		movt	r3, 16386
  63 003a 9A42     		cmp	r2, r3
  64 003c 0CD1     		bne	.L4
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
  65              		.loc 1 132 0
  66 003e 4FF00200 		mov	r0, #2
  67 0042 4FF00101 		mov	r1, #1
  68 0046 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
  69              		.loc 1 133 0
  70 004a 4FF00200 		mov	r0, #2
  71 004e 4FF00001 		mov	r1, #0
  72 0052 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  73 0056 8AE0     		b	.L1
  74              	.L4:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
  75              		.loc 1 135 0
  76 0058 7A68     		ldr	r2, [r7, #4]
  77 005a 4FF40063 		mov	r3, #2048
  78 005e C4F20203 		movt	r3, 16386
  79 0062 9A42     		cmp	r2, r3
  80 0064 0CD1     		bne	.L5
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
  81              		.loc 1 137 0
  82 0066 4FF00400 		mov	r0, #4
  83 006a 4FF00101 		mov	r1, #1
  84 006e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
  85              		.loc 1 138 0
  86 0072 4FF00400 		mov	r0, #4
  87 0076 4FF00001 		mov	r1, #0
  88 007a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
  89 007e 76E0     		b	.L1
  90              	.L5:
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
  91              		.loc 1 140 0
  92 0080 7A68     		ldr	r2, [r7, #4]
  93 0082 4FF44063 		mov	r3, #3072
  94 0086 C4F20203 		movt	r3, 16386
  95 008a 9A42     		cmp	r2, r3
  96 008c 0CD1     		bne	.L6
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
  97              		.loc 1 142 0
  98 008e 4FF00800 		mov	r0, #8
  99 0092 4FF00101 		mov	r1, #1
 100 0096 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 101              		.loc 1 143 0
 102 009a 4FF00800 		mov	r0, #8
 103 009e 4FF00001 		mov	r1, #0
 104 00a2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 105 00a6 62E0     		b	.L1
 106              	.L6:
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
 107              		.loc 1 145 0
 108 00a8 7A68     		ldr	r2, [r7, #4]
 109 00aa 4FF48053 		mov	r3, #4096
 110 00ae C4F20203 		movt	r3, 16386
 111 00b2 9A42     		cmp	r2, r3
 112 00b4 0CD1     		bne	.L7
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 113              		.loc 1 147 0
 114 00b6 4FF01000 		mov	r0, #16
 115 00ba 4FF00101 		mov	r1, #1
 116 00be FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 117              		.loc 1 148 0
 118 00c2 4FF01000 		mov	r0, #16
 119 00c6 4FF00001 		mov	r1, #0
 120 00ca FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 121 00ce 4EE0     		b	.L1
 122              	.L7:
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
 123              		.loc 1 150 0
 124 00d0 7A68     		ldr	r2, [r7, #4]
 125 00d2 4FF4A053 		mov	r3, #5120
 126 00d6 C4F20203 		movt	r3, 16386
 127 00da 9A42     		cmp	r2, r3
 128 00dc 0CD1     		bne	.L8
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 129              		.loc 1 152 0
 130 00de 4FF02000 		mov	r0, #32
 131 00e2 4FF00101 		mov	r1, #1
 132 00e6 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 133              		.loc 1 153 0
 134 00ea 4FF02000 		mov	r0, #32
 135 00ee 4FF00001 		mov	r1, #0
 136 00f2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 137 00f6 3AE0     		b	.L1
 138              	.L8:
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
 139              		.loc 1 155 0
 140 00f8 7A68     		ldr	r2, [r7, #4]
 141 00fa 4FF4C053 		mov	r3, #6144
 142 00fe C4F20203 		movt	r3, 16386
 143 0102 9A42     		cmp	r2, r3
 144 0104 0CD1     		bne	.L9
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 145              		.loc 1 157 0
 146 0106 4FF04000 		mov	r0, #64
 147 010a 4FF00101 		mov	r1, #1
 148 010e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 149              		.loc 1 158 0
 150 0112 4FF04000 		mov	r0, #64
 151 0116 4FF00001 		mov	r1, #0
 152 011a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 153 011e 26E0     		b	.L1
 154              	.L9:
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
 155              		.loc 1 160 0
 156 0120 7A68     		ldr	r2, [r7, #4]
 157 0122 4FF4E053 		mov	r3, #7168
 158 0126 C4F20203 		movt	r3, 16386
 159 012a 9A42     		cmp	r2, r3
 160 012c 0CD1     		bne	.L10
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 161              		.loc 1 162 0
 162 012e 4FF08000 		mov	r0, #128
 163 0132 4FF00101 		mov	r1, #1
 164 0136 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 165              		.loc 1 163 0
 166 013a 4FF08000 		mov	r0, #128
 167 013e 4FF00001 		mov	r1, #0
 168 0142 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 169 0146 12E0     		b	.L1
 170              	.L10:
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOI)
 171              		.loc 1 167 0
 172 0148 7A68     		ldr	r2, [r7, #4]
 173 014a 4FF40053 		mov	r3, #8192
 174 014e C4F20203 		movt	r3, 16386
 175 0152 9A42     		cmp	r2, r3
 176 0154 0BD1     		bne	.L1
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
 177              		.loc 1 169 0
 178 0156 4FF48070 		mov	r0, #256
 179 015a 4FF00101 		mov	r1, #1
 180 015e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 181              		.loc 1 170 0
 182 0162 4FF48070 		mov	r0, #256
 183 0166 4FF00001 		mov	r1, #0
 184 016a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 185              	.L1:
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 186              		.loc 1 173 0
 187 016e 07F10807 		add	r7, r7, #8
 188 0172 BD46     		mov	sp, r7
 189 0174 80BD     		pop	{r7, pc}
 190              		.cfi_endproc
 191              	.LFE110:
 193 0176 00BF     		.section	.text.GPIO_Init,"ax",%progbits
 194              		.align	2
 195              		.global	GPIO_Init
 196              		.thumb
 197              		.thumb_func
 199              	GPIO_Init:
 200              	.LFB111:
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 201              		.loc 1 183 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 24
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206 0000 80B4     		push	{r7}
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 7, -4
 210 0002 87B0     		sub	sp, sp, #28
 211              	.LCFI4:
 212              		.cfi_def_cfa_offset 32
 213 0004 00AF     		add	r7, sp, #0
 214              	.LCFI5:
 215              		.cfi_def_cfa_register 7
 216 0006 7860     		str	r0, [r7, #4]
 217 0008 3960     		str	r1, [r7, #0]
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 218              		.loc 1 184 0
 219 000a 4FF00003 		mov	r3, #0
 220 000e 7B61     		str	r3, [r7, #20]
 221 0010 4FF00003 		mov	r3, #0
 222 0014 3B61     		str	r3, [r7, #16]
 223 0016 4FF00003 		mov	r3, #0
 224 001a FB60     		str	r3, [r7, #12]
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* -------------------------Configure the port pins---------------- */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 225              		.loc 1 194 0
 226 001c 4FF00003 		mov	r3, #0
 227 0020 7B61     		str	r3, [r7, #20]
 228 0022 8EE0     		b	.L12
 229              	.L16:
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 230              		.loc 1 196 0
 231 0024 7B69     		ldr	r3, [r7, #20]
 232 0026 4FF00102 		mov	r2, #1
 233 002a 02FA03F3 		lsl	r3, r2, r3
 234 002e 3B61     		str	r3, [r7, #16]
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 235              		.loc 1 198 0
 236 0030 3B68     		ldr	r3, [r7, #0]
 237 0032 1A68     		ldr	r2, [r3, #0]
 238 0034 3B69     		ldr	r3, [r7, #16]
 239 0036 1340     		ands	r3, r3, r2
 240 0038 FB60     		str	r3, [r7, #12]
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 241              		.loc 1 200 0
 242 003a FA68     		ldr	r2, [r7, #12]
 243 003c 3B69     		ldr	r3, [r7, #16]
 244 003e 9A42     		cmp	r2, r3
 245 0040 7BD1     		bne	.L13
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 246              		.loc 1 202 0
 247 0042 7B68     		ldr	r3, [r7, #4]
 248 0044 1B68     		ldr	r3, [r3, #0]
 249 0046 1A46     		mov	r2, r3
 250 0048 7B69     		ldr	r3, [r7, #20]
 251 004a 4FEA4303 		lsl	r3, r3, #1
 252 004e 4FF00301 		mov	r1, #3
 253 0052 01FA03F3 		lsl	r3, r1, r3
 254 0056 6FEA0303 		mvn	r3, r3
 255 005a 1A40     		ands	r2, r2, r3
 256 005c 7B68     		ldr	r3, [r7, #4]
 257 005e 1A60     		str	r2, [r3, #0]
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 258              		.loc 1 203 0
 259 0060 7B68     		ldr	r3, [r7, #4]
 260 0062 1B68     		ldr	r3, [r3, #0]
 261 0064 1A46     		mov	r2, r3
 262 0066 3B68     		ldr	r3, [r7, #0]
 263 0068 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 264 006a 1946     		mov	r1, r3
 265 006c 7B69     		ldr	r3, [r7, #20]
 266 006e 4FEA4303 		lsl	r3, r3, #1
 267 0072 01FA03F3 		lsl	r3, r1, r3
 268 0076 1A43     		orrs	r2, r2, r3
 269 0078 7B68     		ldr	r3, [r7, #4]
 270 007a 1A60     		str	r2, [r3, #0]
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 271              		.loc 1 205 0
 272 007c 3B68     		ldr	r3, [r7, #0]
 273 007e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 274 0080 012B     		cmp	r3, #1
 275 0082 03D0     		beq	.L14
 276              		.loc 1 205 0 is_stmt 0 discriminator 1
 277 0084 3B68     		ldr	r3, [r7, #0]
 278 0086 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 279 0088 022B     		cmp	r3, #2
 280 008a 38D1     		bne	.L15
 281              	.L14:
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       {
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 282              		.loc 1 211 0 is_stmt 1
 283 008c 7B68     		ldr	r3, [r7, #4]
 284 008e 9B68     		ldr	r3, [r3, #8]
 285 0090 1A46     		mov	r2, r3
 286 0092 7B69     		ldr	r3, [r7, #20]
 287 0094 4FEA4303 		lsl	r3, r3, #1
 288 0098 4FF00301 		mov	r1, #3
 289 009c 01FA03F3 		lsl	r3, r1, r3
 290 00a0 6FEA0303 		mvn	r3, r3
 291 00a4 1A40     		ands	r2, r2, r3
 292 00a6 7B68     		ldr	r3, [r7, #4]
 293 00a8 9A60     		str	r2, [r3, #8]
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 294              		.loc 1 212 0
 295 00aa 7B68     		ldr	r3, [r7, #4]
 296 00ac 9B68     		ldr	r3, [r3, #8]
 297 00ae 1A46     		mov	r2, r3
 298 00b0 3B68     		ldr	r3, [r7, #0]
 299 00b2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 300 00b4 1946     		mov	r1, r3
 301 00b6 7B69     		ldr	r3, [r7, #20]
 302 00b8 4FEA4303 		lsl	r3, r3, #1
 303 00bc 01FA03F3 		lsl	r3, r1, r3
 304 00c0 1A43     		orrs	r2, r2, r3
 305 00c2 7B68     		ldr	r3, [r7, #4]
 306 00c4 9A60     		str	r2, [r3, #8]
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 307              		.loc 1 218 0
 308 00c6 7B68     		ldr	r3, [r7, #4]
 309 00c8 5B68     		ldr	r3, [r3, #4]
 310 00ca 1A46     		mov	r2, r3
 311 00cc 7B69     		ldr	r3, [r7, #20]
 312 00ce 9BB2     		uxth	r3, r3
 313 00d0 4FF00101 		mov	r1, #1
 314 00d4 01FA03F3 		lsl	r3, r1, r3
 315 00d8 6FEA0303 		mvn	r3, r3
 316 00dc 1A40     		ands	r2, r2, r3
 317 00de 7B68     		ldr	r3, [r7, #4]
 318 00e0 5A60     		str	r2, [r3, #4]
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 319              		.loc 1 219 0
 320 00e2 7B68     		ldr	r3, [r7, #4]
 321 00e4 5B68     		ldr	r3, [r3, #4]
 322 00e6 1A46     		mov	r2, r3
 323 00e8 3B68     		ldr	r3, [r7, #0]
 324 00ea 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 325 00ec 1946     		mov	r1, r3
 326 00ee 7B69     		ldr	r3, [r7, #20]
 327 00f0 9BB2     		uxth	r3, r3
 328 00f2 01FA03F3 		lsl	r3, r1, r3
 329 00f6 9BB2     		uxth	r3, r3
 330 00f8 1A43     		orrs	r2, r2, r3
 331 00fa 7B68     		ldr	r3, [r7, #4]
 332 00fc 5A60     		str	r2, [r3, #4]
 333              	.L15:
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       }
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 334              		.loc 1 223 0
 335 00fe 7B68     		ldr	r3, [r7, #4]
 336 0100 DB68     		ldr	r3, [r3, #12]
 337 0102 1A46     		mov	r2, r3
 338 0104 7B69     		ldr	r3, [r7, #20]
 339 0106 9BB2     		uxth	r3, r3
 340 0108 4FEA4303 		lsl	r3, r3, #1
 341 010c 4FF00301 		mov	r1, #3
 342 0110 01FA03F3 		lsl	r3, r1, r3
 343 0114 6FEA0303 		mvn	r3, r3
 344 0118 1A40     		ands	r2, r2, r3
 345 011a 7B68     		ldr	r3, [r7, #4]
 346 011c DA60     		str	r2, [r3, #12]
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 347              		.loc 1 224 0
 348 011e 7B68     		ldr	r3, [r7, #4]
 349 0120 DB68     		ldr	r3, [r3, #12]
 350 0122 1A46     		mov	r2, r3
 351 0124 3B68     		ldr	r3, [r7, #0]
 352 0126 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 353 0128 1946     		mov	r1, r3
 354 012a 7B69     		ldr	r3, [r7, #20]
 355 012c 4FEA4303 		lsl	r3, r3, #1
 356 0130 01FA03F3 		lsl	r3, r1, r3
 357 0134 1A43     		orrs	r2, r2, r3
 358 0136 7B68     		ldr	r3, [r7, #4]
 359 0138 DA60     		str	r2, [r3, #12]
 360              	.L13:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 361              		.loc 1 194 0
 362 013a 7B69     		ldr	r3, [r7, #20]
 363 013c 03F10103 		add	r3, r3, #1
 364 0140 7B61     		str	r3, [r7, #20]
 365              	.L12:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 366              		.loc 1 194 0 is_stmt 0 discriminator 1
 367 0142 7B69     		ldr	r3, [r7, #20]
 368 0144 0F2B     		cmp	r3, #15
 369 0146 7FF66DAF 		bls	.L16
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 370              		.loc 1 227 0 is_stmt 1
 371 014a 07F11C07 		add	r7, r7, #28
 372 014e BD46     		mov	sp, r7
 373 0150 80BC     		pop	{r7}
 374 0152 7047     		bx	lr
 375              		.cfi_endproc
 376              	.LFE111:
 378              		.section	.text.GPIO_StructInit,"ax",%progbits
 379              		.align	2
 380              		.global	GPIO_StructInit
 381              		.thumb
 382              		.thumb_func
 384              	GPIO_StructInit:
 385              	.LFB112:
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 386              		.loc 1 235 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391 0000 80B4     		push	{r7}
 392              	.LCFI6:
 393              		.cfi_def_cfa_offset 4
 394              		.cfi_offset 7, -4
 395 0002 83B0     		sub	sp, sp, #12
 396              	.LCFI7:
 397              		.cfi_def_cfa_offset 16
 398 0004 00AF     		add	r7, sp, #0
 399              	.LCFI8:
 400              		.cfi_def_cfa_register 7
 401 0006 7860     		str	r0, [r7, #4]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 402              		.loc 1 237 0
 403 0008 7B68     		ldr	r3, [r7, #4]
 404 000a 4FF6FF72 		movw	r2, #65535
 405 000e 1A60     		str	r2, [r3, #0]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 406              		.loc 1 238 0
 407 0010 7B68     		ldr	r3, [r7, #4]
 408 0012 4FF00002 		mov	r2, #0
 409 0016 1A71     		strb	r2, [r3, #4]
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 410              		.loc 1 239 0
 411 0018 7B68     		ldr	r3, [r7, #4]
 412 001a 4FF00002 		mov	r2, #0
 413 001e 5A71     		strb	r2, [r3, #5]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 414              		.loc 1 240 0
 415 0020 7B68     		ldr	r3, [r7, #4]
 416 0022 4FF00002 		mov	r2, #0
 417 0026 9A71     		strb	r2, [r3, #6]
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 418              		.loc 1 241 0
 419 0028 7B68     		ldr	r3, [r7, #4]
 420 002a 4FF00002 		mov	r2, #0
 421 002e DA71     		strb	r2, [r3, #7]
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 422              		.loc 1 242 0
 423 0030 07F10C07 		add	r7, r7, #12
 424 0034 BD46     		mov	sp, r7
 425 0036 80BC     		pop	{r7}
 426 0038 7047     		bx	lr
 427              		.cfi_endproc
 428              	.LFE112:
 430 003a 00BF     		.section	.text.GPIO_PinLockConfig,"ax",%progbits
 431              		.align	2
 432              		.global	GPIO_PinLockConfig
 433              		.thumb
 434              		.thumb_func
 436              	GPIO_PinLockConfig:
 437              	.LFB113:
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         until the next reset.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 438              		.loc 1 256 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 16
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443 0000 80B4     		push	{r7}
 444              	.LCFI9:
 445              		.cfi_def_cfa_offset 4
 446              		.cfi_offset 7, -4
 447 0002 85B0     		sub	sp, sp, #20
 448              	.LCFI10:
 449              		.cfi_def_cfa_offset 24
 450 0004 00AF     		add	r7, sp, #0
 451              	.LCFI11:
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 454 0008 0B46     		mov	r3, r1
 455 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 456              		.loc 1 257 0
 457 000c 4FF48033 		mov	r3, #65536
 458 0010 FB60     		str	r3, [r7, #12]
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 459              		.loc 1 263 0
 460 0012 7A88     		ldrh	r2, [r7, #2]
 461 0014 FB68     		ldr	r3, [r7, #12]
 462 0016 1343     		orrs	r3, r3, r2
 463 0018 FB60     		str	r3, [r7, #12]
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 464              		.loc 1 265 0
 465 001a FA68     		ldr	r2, [r7, #12]
 466 001c 7B68     		ldr	r3, [r7, #4]
 467 001e DA61     		str	r2, [r3, #28]
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 468              		.loc 1 267 0
 469 0020 7A88     		ldrh	r2, [r7, #2]
 470 0022 7B68     		ldr	r3, [r7, #4]
 471 0024 DA61     		str	r2, [r3, #28]
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 472              		.loc 1 269 0
 473 0026 FA68     		ldr	r2, [r7, #12]
 474 0028 7B68     		ldr	r3, [r7, #4]
 475 002a DA61     		str	r2, [r3, #28]
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 476              		.loc 1 271 0
 477 002c 7B68     		ldr	r3, [r7, #4]
 478 002e DB69     		ldr	r3, [r3, #28]
 479 0030 FB60     		str	r3, [r7, #12]
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 480              		.loc 1 273 0
 481 0032 7B68     		ldr	r3, [r7, #4]
 482 0034 DB69     		ldr	r3, [r3, #28]
 483 0036 FB60     		str	r3, [r7, #12]
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 484              		.loc 1 274 0
 485 0038 07F11407 		add	r7, r7, #20
 486 003c BD46     		mov	sp, r7
 487 003e 80BC     		pop	{r7}
 488 0040 7047     		bx	lr
 489              		.cfi_endproc
 490              	.LFE113:
 492 0042 00BF     		.section	.text.GPIO_ReadInputDataBit,"ax",%progbits
 493              		.align	2
 494              		.global	GPIO_ReadInputDataBit
 495              		.thumb
 496              		.thumb_func
 498              	GPIO_ReadInputDataBit:
 499              	.LFB114:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                               GPIO Read and Write
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 500              		.loc 1 300 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 16
 503              		@ frame_needed = 1, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 505 0000 80B4     		push	{r7}
 506              	.LCFI12:
 507              		.cfi_def_cfa_offset 4
 508              		.cfi_offset 7, -4
 509 0002 85B0     		sub	sp, sp, #20
 510              	.LCFI13:
 511              		.cfi_def_cfa_offset 24
 512 0004 00AF     		add	r7, sp, #0
 513              	.LCFI14:
 514              		.cfi_def_cfa_register 7
 515 0006 7860     		str	r0, [r7, #4]
 516 0008 0B46     		mov	r3, r1
 517 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 518              		.loc 1 301 0
 519 000c 4FF00003 		mov	r3, #0
 520 0010 FB73     		strb	r3, [r7, #15]
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 521              		.loc 1 307 0
 522 0012 7B68     		ldr	r3, [r7, #4]
 523 0014 1B69     		ldr	r3, [r3, #16]
 524 0016 1A46     		mov	r2, r3
 525 0018 7B88     		ldrh	r3, [r7, #2]
 526 001a 1340     		ands	r3, r3, r2
 527 001c 002B     		cmp	r3, #0
 528 001e 03D0     		beq	.L20
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 529              		.loc 1 309 0
 530 0020 4FF00103 		mov	r3, #1
 531 0024 FB73     		strb	r3, [r7, #15]
 532 0026 02E0     		b	.L21
 533              	.L20:
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 534              		.loc 1 313 0
 535 0028 4FF00003 		mov	r3, #0
 536 002c FB73     		strb	r3, [r7, #15]
 537              	.L21:
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 538              		.loc 1 315 0
 539 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 540              		.loc 1 316 0
 541 0030 1846     		mov	r0, r3
 542 0032 07F11407 		add	r7, r7, #20
 543 0036 BD46     		mov	sp, r7
 544 0038 80BC     		pop	{r7}
 545 003a 7047     		bx	lr
 546              		.cfi_endproc
 547              	.LFE114:
 549              		.section	.text.GPIO_ReadInputData,"ax",%progbits
 550              		.align	2
 551              		.global	GPIO_ReadInputData
 552              		.thumb
 553              		.thumb_func
 555              	GPIO_ReadInputData:
 556              	.LFB115:
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 557              		.loc 1 324 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 562 0000 80B4     		push	{r7}
 563              	.LCFI15:
 564              		.cfi_def_cfa_offset 4
 565              		.cfi_offset 7, -4
 566 0002 83B0     		sub	sp, sp, #12
 567              	.LCFI16:
 568              		.cfi_def_cfa_offset 16
 569 0004 00AF     		add	r7, sp, #0
 570              	.LCFI17:
 571              		.cfi_def_cfa_register 7
 572 0006 7860     		str	r0, [r7, #4]
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 573              		.loc 1 328 0
 574 0008 7B68     		ldr	r3, [r7, #4]
 575 000a 1B69     		ldr	r3, [r3, #16]
 576 000c 9BB2     		uxth	r3, r3
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 577              		.loc 1 329 0
 578 000e 1846     		mov	r0, r3
 579 0010 07F10C07 		add	r7, r7, #12
 580 0014 BD46     		mov	sp, r7
 581 0016 80BC     		pop	{r7}
 582 0018 7047     		bx	lr
 583              		.cfi_endproc
 584              	.LFE115:
 586 001a 00BF     		.section	.text.GPIO_ReadOutputDataBit,"ax",%progbits
 587              		.align	2
 588              		.global	GPIO_ReadOutputDataBit
 589              		.thumb
 590              		.thumb_func
 592              	GPIO_ReadOutputDataBit:
 593              	.LFB116:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 594              		.loc 1 339 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 16
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599 0000 80B4     		push	{r7}
 600              	.LCFI18:
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 85B0     		sub	sp, sp, #20
 604              	.LCFI19:
 605              		.cfi_def_cfa_offset 24
 606 0004 00AF     		add	r7, sp, #0
 607              	.LCFI20:
 608              		.cfi_def_cfa_register 7
 609 0006 7860     		str	r0, [r7, #4]
 610 0008 0B46     		mov	r3, r1
 611 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 612              		.loc 1 340 0
 613 000c 4FF00003 		mov	r3, #0
 614 0010 FB73     		strb	r3, [r7, #15]
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 615              		.loc 1 346 0
 616 0012 7B68     		ldr	r3, [r7, #4]
 617 0014 5B69     		ldr	r3, [r3, #20]
 618 0016 1A46     		mov	r2, r3
 619 0018 7B88     		ldrh	r3, [r7, #2]
 620 001a 1340     		ands	r3, r3, r2
 621 001c 002B     		cmp	r3, #0
 622 001e 03D0     		beq	.L24
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 623              		.loc 1 348 0
 624 0020 4FF00103 		mov	r3, #1
 625 0024 FB73     		strb	r3, [r7, #15]
 626 0026 02E0     		b	.L25
 627              	.L24:
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 628              		.loc 1 352 0
 629 0028 4FF00003 		mov	r3, #0
 630 002c FB73     		strb	r3, [r7, #15]
 631              	.L25:
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 632              		.loc 1 354 0
 633 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 634              		.loc 1 355 0
 635 0030 1846     		mov	r0, r3
 636 0032 07F11407 		add	r7, r7, #20
 637 0036 BD46     		mov	sp, r7
 638 0038 80BC     		pop	{r7}
 639 003a 7047     		bx	lr
 640              		.cfi_endproc
 641              	.LFE116:
 643              		.section	.text.GPIO_ReadOutputData,"ax",%progbits
 644              		.align	2
 645              		.global	GPIO_ReadOutputData
 646              		.thumb
 647              		.thumb_func
 649              	GPIO_ReadOutputData:
 650              	.LFB117:
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 651              		.loc 1 363 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 8
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656 0000 80B4     		push	{r7}
 657              	.LCFI21:
 658              		.cfi_def_cfa_offset 4
 659              		.cfi_offset 7, -4
 660 0002 83B0     		sub	sp, sp, #12
 661              	.LCFI22:
 662              		.cfi_def_cfa_offset 16
 663 0004 00AF     		add	r7, sp, #0
 664              	.LCFI23:
 665              		.cfi_def_cfa_register 7
 666 0006 7860     		str	r0, [r7, #4]
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 667              		.loc 1 367 0
 668 0008 7B68     		ldr	r3, [r7, #4]
 669 000a 5B69     		ldr	r3, [r3, #20]
 670 000c 9BB2     		uxth	r3, r3
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 671              		.loc 1 368 0
 672 000e 1846     		mov	r0, r3
 673 0010 07F10C07 		add	r7, r7, #12
 674 0014 BD46     		mov	sp, r7
 675 0016 80BC     		pop	{r7}
 676 0018 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE117:
 680 001a 00BF     		.section	.text.GPIO_SetBits,"ax",%progbits
 681              		.align	2
 682              		.global	GPIO_SetBits
 683              		.thumb
 684              		.thumb_func
 686              	GPIO_SetBits:
 687              	.LFB118:
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 688              		.loc 1 381 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 8
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693 0000 80B4     		push	{r7}
 694              	.LCFI24:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 7, -4
 697 0002 83B0     		sub	sp, sp, #12
 698              	.LCFI25:
 699              		.cfi_def_cfa_offset 16
 700 0004 00AF     		add	r7, sp, #0
 701              	.LCFI26:
 702              		.cfi_def_cfa_register 7
 703 0006 7860     		str	r0, [r7, #4]
 704 0008 0B46     		mov	r3, r1
 705 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 706              		.loc 1 386 0
 707 000c 7B68     		ldr	r3, [r7, #4]
 708 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 709 0010 1A83     		strh	r2, [r3, #24]	@ movhi
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 710              		.loc 1 387 0
 711 0012 07F10C07 		add	r7, r7, #12
 712 0016 BD46     		mov	sp, r7
 713 0018 80BC     		pop	{r7}
 714 001a 7047     		bx	lr
 715              		.cfi_endproc
 716              	.LFE118:
 718              		.section	.text.GPIO_ResetBits,"ax",%progbits
 719              		.align	2
 720              		.global	GPIO_ResetBits
 721              		.thumb
 722              		.thumb_func
 724              	GPIO_ResetBits:
 725              	.LFB119:
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 726              		.loc 1 400 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 8
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731 0000 80B4     		push	{r7}
 732              	.LCFI27:
 733              		.cfi_def_cfa_offset 4
 734              		.cfi_offset 7, -4
 735 0002 83B0     		sub	sp, sp, #12
 736              	.LCFI28:
 737              		.cfi_def_cfa_offset 16
 738 0004 00AF     		add	r7, sp, #0
 739              	.LCFI29:
 740              		.cfi_def_cfa_register 7
 741 0006 7860     		str	r0, [r7, #4]
 742 0008 0B46     		mov	r3, r1
 743 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
 744              		.loc 1 405 0
 745 000c 7B68     		ldr	r3, [r7, #4]
 746 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 747 0010 5A83     		strh	r2, [r3, #26]	@ movhi
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 748              		.loc 1 406 0
 749 0012 07F10C07 		add	r7, r7, #12
 750 0016 BD46     		mov	sp, r7
 751 0018 80BC     		pop	{r7}
 752 001a 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE119:
 756              		.section	.text.GPIO_WriteBit,"ax",%progbits
 757              		.align	2
 758              		.global	GPIO_WriteBit
 759              		.thumb
 760              		.thumb_func
 762              	GPIO_WriteBit:
 763              	.LFB120:
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 764              		.loc 1 420 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 8
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769 0000 80B4     		push	{r7}
 770              	.LCFI30:
 771              		.cfi_def_cfa_offset 4
 772              		.cfi_offset 7, -4
 773 0002 83B0     		sub	sp, sp, #12
 774              	.LCFI31:
 775              		.cfi_def_cfa_offset 16
 776 0004 00AF     		add	r7, sp, #0
 777              	.LCFI32:
 778              		.cfi_def_cfa_register 7
 779 0006 7860     		str	r0, [r7, #4]
 780 0008 1346     		mov	r3, r2
 781 000a 0A46     		mov	r2, r1	@ movhi
 782 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 783 000e 7B70     		strb	r3, [r7, #1]
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 784              		.loc 1 426 0
 785 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 786 0012 002B     		cmp	r3, #0
 787 0014 03D0     		beq	.L30
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 788              		.loc 1 428 0
 789 0016 7B68     		ldr	r3, [r7, #4]
 790 0018 7A88     		ldrh	r2, [r7, #2]	@ movhi
 791 001a 1A83     		strh	r2, [r3, #24]	@ movhi
 792 001c 02E0     		b	.L29
 793              	.L30:
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 794              		.loc 1 432 0
 795 001e 7B68     		ldr	r3, [r7, #4]
 796 0020 7A88     		ldrh	r2, [r7, #2]	@ movhi
 797 0022 5A83     		strh	r2, [r3, #26]	@ movhi
 798              	.L29:
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 799              		.loc 1 434 0
 800 0024 07F10C07 		add	r7, r7, #12
 801 0028 BD46     		mov	sp, r7
 802 002a 80BC     		pop	{r7}
 803 002c 7047     		bx	lr
 804              		.cfi_endproc
 805              	.LFE120:
 807 002e 00BF     		.section	.text.GPIO_Write,"ax",%progbits
 808              		.align	2
 809              		.global	GPIO_Write
 810              		.thumb
 811              		.thumb_func
 813              	GPIO_Write:
 814              	.LFB121:
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 815              		.loc 1 443 0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 8
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819              		@ link register save eliminated.
 820 0000 80B4     		push	{r7}
 821              	.LCFI33:
 822              		.cfi_def_cfa_offset 4
 823              		.cfi_offset 7, -4
 824 0002 83B0     		sub	sp, sp, #12
 825              	.LCFI34:
 826              		.cfi_def_cfa_offset 16
 827 0004 00AF     		add	r7, sp, #0
 828              	.LCFI35:
 829              		.cfi_def_cfa_register 7
 830 0006 7860     		str	r0, [r7, #4]
 831 0008 0B46     		mov	r3, r1
 832 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 833              		.loc 1 447 0
 834 000c 7A88     		ldrh	r2, [r7, #2]
 835 000e 7B68     		ldr	r3, [r7, #4]
 836 0010 5A61     		str	r2, [r3, #20]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 837              		.loc 1 448 0
 838 0012 07F10C07 		add	r7, r7, #12
 839 0016 BD46     		mov	sp, r7
 840 0018 80BC     		pop	{r7}
 841 001a 7047     		bx	lr
 842              		.cfi_endproc
 843              	.LFE121:
 845              		.section	.text.GPIO_ToggleBits,"ax",%progbits
 846              		.align	2
 847              		.global	GPIO_ToggleBits
 848              		.thumb
 849              		.thumb_func
 851              	GPIO_ToggleBits:
 852              	.LFB122:
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 853              		.loc 1 457 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858 0000 80B4     		push	{r7}
 859              	.LCFI36:
 860              		.cfi_def_cfa_offset 4
 861              		.cfi_offset 7, -4
 862 0002 83B0     		sub	sp, sp, #12
 863              	.LCFI37:
 864              		.cfi_def_cfa_offset 16
 865 0004 00AF     		add	r7, sp, #0
 866              	.LCFI38:
 867              		.cfi_def_cfa_register 7
 868 0006 7860     		str	r0, [r7, #4]
 869 0008 0B46     		mov	r3, r1
 870 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 871              		.loc 1 461 0
 872 000c 7B68     		ldr	r3, [r7, #4]
 873 000e 5B69     		ldr	r3, [r3, #20]
 874 0010 1A46     		mov	r2, r3
 875 0012 7B88     		ldrh	r3, [r7, #2]
 876 0014 5A40     		eors	r2, r2, r3
 877 0016 7B68     		ldr	r3, [r7, #4]
 878 0018 5A61     		str	r2, [r3, #20]
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 879              		.loc 1 462 0
 880 001a 07F10C07 		add	r7, r7, #12
 881 001e BD46     		mov	sp, r7
 882 0020 80BC     		pop	{r7}
 883 0022 7047     		bx	lr
 884              		.cfi_endproc
 885              	.LFE122:
 887              		.section	.text.GPIO_PinAFConfig,"ax",%progbits
 888              		.align	2
 889              		.global	GPIO_PinAFConfig
 890              		.thumb
 891              		.thumb_func
 893              	GPIO_PinAFConfig:
 894              	.LFB123:
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                GPIO Alternate functions configuration function
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 895              		.loc 1 530 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 16
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900 0000 80B4     		push	{r7}
 901              	.LCFI39:
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 0002 85B0     		sub	sp, sp, #20
 905              	.LCFI40:
 906              		.cfi_def_cfa_offset 24
 907 0004 00AF     		add	r7, sp, #0
 908              	.LCFI41:
 909              		.cfi_def_cfa_register 7
 910 0006 7860     		str	r0, [r7, #4]
 911 0008 1346     		mov	r3, r2
 912 000a 0A46     		mov	r2, r1	@ movhi
 913 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 914 000e 7B70     		strb	r3, [r7, #1]
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
 915              		.loc 1 531 0
 916 0010 4FF00003 		mov	r3, #0
 917 0014 FB60     		str	r3, [r7, #12]
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 918              		.loc 1 532 0
 919 0016 4FF00003 		mov	r3, #0
 920 001a BB60     		str	r3, [r7, #8]
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 921              		.loc 1 539 0
 922 001c 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 923 001e 7B88     		ldrh	r3, [r7, #2]
 924 0020 03F00703 		and	r3, r3, #7
 925 0024 4FEA8303 		lsl	r3, r3, #2
 926 0028 02FA03F3 		lsl	r3, r2, r3
 927 002c FB60     		str	r3, [r7, #12]
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 928              		.loc 1 540 0
 929 002e 7B88     		ldrh	r3, [r7, #2]
 930 0030 4FEAD303 		lsr	r3, r3, #3
 931 0034 9BB2     		uxth	r3, r3
 932 0036 1A46     		mov	r2, r3
 933 0038 7B88     		ldrh	r3, [r7, #2]
 934 003a 4FEAD303 		lsr	r3, r3, #3
 935 003e 9BB2     		uxth	r3, r3
 936 0040 1946     		mov	r1, r3
 937 0042 7B68     		ldr	r3, [r7, #4]
 938 0044 01F10801 		add	r1, r1, #8
 939 0048 53F82130 		ldr	r3, [r3, r1, lsl #2]
 940 004c 1946     		mov	r1, r3
 941 004e 7B88     		ldrh	r3, [r7, #2]
 942 0050 03F00703 		and	r3, r3, #7
 943 0054 4FEA8303 		lsl	r3, r3, #2
 944 0058 4FF00F00 		mov	r0, #15
 945 005c 00FA03F3 		lsl	r3, r0, r3
 946 0060 6FEA0303 		mvn	r3, r3
 947 0064 1940     		ands	r1, r1, r3
 948 0066 7B68     		ldr	r3, [r7, #4]
 949 0068 02F10802 		add	r2, r2, #8
 950 006c 43F82210 		str	r1, [r3, r2, lsl #2]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 951              		.loc 1 541 0
 952 0070 7B88     		ldrh	r3, [r7, #2]
 953 0072 4FEAD303 		lsr	r3, r3, #3
 954 0076 9BB2     		uxth	r3, r3
 955 0078 1A46     		mov	r2, r3
 956 007a 7B68     		ldr	r3, [r7, #4]
 957 007c 02F10802 		add	r2, r2, #8
 958 0080 53F82230 		ldr	r3, [r3, r2, lsl #2]
 959 0084 1A46     		mov	r2, r3
 960 0086 FB68     		ldr	r3, [r7, #12]
 961 0088 1343     		orrs	r3, r3, r2
 962 008a BB60     		str	r3, [r7, #8]
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 963              		.loc 1 542 0
 964 008c 7B88     		ldrh	r3, [r7, #2]
 965 008e 4FEAD303 		lsr	r3, r3, #3
 966 0092 9BB2     		uxth	r3, r3
 967 0094 1A46     		mov	r2, r3
 968 0096 7B68     		ldr	r3, [r7, #4]
 969 0098 02F10802 		add	r2, r2, #8
 970 009c B968     		ldr	r1, [r7, #8]
 971 009e 43F82210 		str	r1, [r3, r2, lsl #2]
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 972              		.loc 1 543 0
 973 00a2 07F11407 		add	r7, r7, #20
 974 00a6 BD46     		mov	sp, r7
 975 00a8 80BC     		pop	{r7}
 976 00aa 7047     		bx	lr
 977              		.cfi_endproc
 978              	.LFE123:
 980              		.text
 981              	.Letext0:
 982              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 983              		.file 3 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 984              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_gpio.
 985              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_gpio.c
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:19     .text.GPIO_DeInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:24     .text.GPIO_DeInit:00000000 GPIO_DeInit
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:194    .text.GPIO_Init:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:199    .text.GPIO_Init:00000000 GPIO_Init
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:379    .text.GPIO_StructInit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:384    .text.GPIO_StructInit:00000000 GPIO_StructInit
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:431    .text.GPIO_PinLockConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:436    .text.GPIO_PinLockConfig:00000000 GPIO_PinLockConfig
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:493    .text.GPIO_ReadInputDataBit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:498    .text.GPIO_ReadInputDataBit:00000000 GPIO_ReadInputDataBit
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:550    .text.GPIO_ReadInputData:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:555    .text.GPIO_ReadInputData:00000000 GPIO_ReadInputData
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:587    .text.GPIO_ReadOutputDataBit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:592    .text.GPIO_ReadOutputDataBit:00000000 GPIO_ReadOutputDataBit
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:644    .text.GPIO_ReadOutputData:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:649    .text.GPIO_ReadOutputData:00000000 GPIO_ReadOutputData
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:681    .text.GPIO_SetBits:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:686    .text.GPIO_SetBits:00000000 GPIO_SetBits
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:719    .text.GPIO_ResetBits:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:724    .text.GPIO_ResetBits:00000000 GPIO_ResetBits
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:757    .text.GPIO_WriteBit:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:762    .text.GPIO_WriteBit:00000000 GPIO_WriteBit
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:808    .text.GPIO_Write:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:813    .text.GPIO_Write:00000000 GPIO_Write
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:846    .text.GPIO_ToggleBits:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:851    .text.GPIO_ToggleBits:00000000 GPIO_ToggleBits
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:888    .text.GPIO_PinAFConfig:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccH6xTUR.s:893    .text.GPIO_PinAFConfig:00000000 GPIO_PinAFConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
