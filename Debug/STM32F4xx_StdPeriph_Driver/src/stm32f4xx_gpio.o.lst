   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_gpio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.GPIO_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	GPIO_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	GPIO_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - Initialization and Configuration
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Read and Write
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Alternate functions configuration
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @verbatim
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                 How to use this driver
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================       
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           1. Enable the GPIO AHB clock using the following function
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           2. Configure the GPIO pin(s) using GPIO_Init()
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              Four possible configuration are available for each pin:
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Input: Floating, Pull-up, Pull-down.
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          Open Drain (Pull-up, Pull-down or no Pull).
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  In output mode, the speed is configurable: 2 MHz, 25 MHz,
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  50 MHz or 100 MHz.
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull)
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                      Open Drain (Pull-up, Pull-down or no Pull).
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Analog: required mode when a pin is to be used as ADC channel
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          or DAC output.
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          3- Peripherals alternate function:
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For ADC and DAC, configure the desired pin in analog mode using 
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For other peripherals (TIM, USART...):
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Configure the desired pin in alternate function mode using
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Call GPIO_Init() function
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *        
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          4. To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          5. To set/reset the level of a pin configured in output mode use
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             GPIO_SetBits()/GPIO_ResetBits()
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *               
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          6. During and just after reset, the alternate functions are not 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             active and the GPIO pins are configured in input floating mode
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             (except JTAG pins).
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          7. The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose (PC14 and PC15, respectively) when the LSE
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The LSE has priority over the GPIO function.
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          8. The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose PH0 and PH1, respectively, when the HSE 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The HSE has priority over the GPIO function.
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @endverbatim        
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @attention
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                         Initialization and Configuration
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
  27              		.loc 1 121 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 3, -8
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
  37              		.loc 1 125 0
  38 0002 2C4B     		ldr	r3, .L12
  39 0004 9842     		cmp	r0, r3
  40 0006 05D1     		bne	.L2
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
  41              		.loc 1 127 0
  42 0008 0120     		movs	r0, #1
  43              	.LVL1:
  44 000a 0146     		mov	r1, r0
  45 000c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
  46              		.loc 1 128 0
  47 0010 0120     		movs	r0, #1
  48 0012 48E0     		b	.L11
  49              	.LVL2:
  50              	.L2:
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
  51              		.loc 1 130 0
  52 0014 284B     		ldr	r3, .L12+4
  53 0016 9842     		cmp	r0, r3
  54 0018 05D1     		bne	.L3
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
  55              		.loc 1 132 0
  56 001a 0220     		movs	r0, #2
  57              	.LVL3:
  58 001c 0121     		movs	r1, #1
  59 001e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
  60              		.loc 1 133 0
  61 0022 0220     		movs	r0, #2
  62 0024 3FE0     		b	.L11
  63              	.LVL4:
  64              	.L3:
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
  65              		.loc 1 135 0
  66 0026 254B     		ldr	r3, .L12+8
  67 0028 9842     		cmp	r0, r3
  68 002a 05D1     		bne	.L4
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
  69              		.loc 1 137 0
  70 002c 0420     		movs	r0, #4
  71              	.LVL5:
  72 002e 0121     		movs	r1, #1
  73 0030 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
  74              		.loc 1 138 0
  75 0034 0420     		movs	r0, #4
  76 0036 36E0     		b	.L11
  77              	.LVL6:
  78              	.L4:
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
  79              		.loc 1 140 0
  80 0038 214B     		ldr	r3, .L12+12
  81 003a 9842     		cmp	r0, r3
  82 003c 05D1     		bne	.L5
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
  83              		.loc 1 142 0
  84 003e 0820     		movs	r0, #8
  85              	.LVL7:
  86 0040 0121     		movs	r1, #1
  87 0042 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
  88              		.loc 1 143 0
  89 0046 0820     		movs	r0, #8
  90 0048 2DE0     		b	.L11
  91              	.LVL8:
  92              	.L5:
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
  93              		.loc 1 145 0
  94 004a 1E4B     		ldr	r3, .L12+16
  95 004c 9842     		cmp	r0, r3
  96 004e 05D1     		bne	.L6
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
  97              		.loc 1 147 0
  98 0050 1020     		movs	r0, #16
  99              	.LVL9:
 100 0052 0121     		movs	r1, #1
 101 0054 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 102              		.loc 1 148 0
 103 0058 1020     		movs	r0, #16
 104 005a 24E0     		b	.L11
 105              	.LVL10:
 106              	.L6:
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
 107              		.loc 1 150 0
 108 005c 1A4B     		ldr	r3, .L12+20
 109 005e 9842     		cmp	r0, r3
 110 0060 05D1     		bne	.L7
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 111              		.loc 1 152 0
 112 0062 2020     		movs	r0, #32
 113              	.LVL11:
 114 0064 0121     		movs	r1, #1
 115 0066 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 116              		.loc 1 153 0
 117 006a 2020     		movs	r0, #32
 118 006c 1BE0     		b	.L11
 119              	.LVL12:
 120              	.L7:
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
 121              		.loc 1 155 0
 122 006e 174B     		ldr	r3, .L12+24
 123 0070 9842     		cmp	r0, r3
 124 0072 05D1     		bne	.L8
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 125              		.loc 1 157 0
 126 0074 4020     		movs	r0, #64
 127              	.LVL13:
 128 0076 0121     		movs	r1, #1
 129 0078 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 130              		.loc 1 158 0
 131 007c 4020     		movs	r0, #64
 132 007e 12E0     		b	.L11
 133              	.LVL14:
 134              	.L8:
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
 135              		.loc 1 160 0
 136 0080 134B     		ldr	r3, .L12+28
 137 0082 9842     		cmp	r0, r3
 138 0084 05D1     		bne	.L9
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 139              		.loc 1 162 0
 140 0086 8020     		movs	r0, #128
 141              	.LVL15:
 142 0088 0121     		movs	r1, #1
 143 008a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 144              		.loc 1 163 0
 145 008e 8020     		movs	r0, #128
 146 0090 09E0     		b	.L11
 147              	.LVL16:
 148              	.L9:
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOI)
 149              		.loc 1 167 0
 150 0092 104B     		ldr	r3, .L12+32
 151 0094 9842     		cmp	r0, r3
 152 0096 0BD1     		bne	.L1
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
 153              		.loc 1 169 0
 154 0098 4FF48070 		mov	r0, #256
 155              	.LVL17:
 156 009c 0121     		movs	r1, #1
 157 009e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 158              		.loc 1 170 0
 159 00a2 4FF48070 		mov	r0, #256
 160              	.L11:
 161 00a6 0021     		movs	r1, #0
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 162              		.loc 1 173 0
 163 00a8 BDE80840 		pop	{r3, lr}
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 164              		.loc 1 170 0
 165 00ac FFF7FEBF 		b	RCC_AHB1PeriphResetCmd
 166              	.LVL18:
 167              	.L1:
 168 00b0 08BD     		pop	{r3, pc}
 169              	.L13:
 170 00b2 00BF     		.align	2
 171              	.L12:
 172 00b4 00000240 		.word	1073872896
 173 00b8 00040240 		.word	1073873920
 174 00bc 00080240 		.word	1073874944
 175 00c0 000C0240 		.word	1073875968
 176 00c4 00100240 		.word	1073876992
 177 00c8 00140240 		.word	1073878016
 178 00cc 00180240 		.word	1073879040
 179 00d0 001C0240 		.word	1073880064
 180 00d4 00200240 		.word	1073881088
 181              		.cfi_endproc
 182              	.LFE110:
 184              		.section	.text.GPIO_Init,"ax",%progbits
 185              		.align	1
 186              		.global	GPIO_Init
 187              		.thumb
 188              		.thumb_func
 190              	GPIO_Init:
 191              	.LFB111:
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 192              		.loc 1 183 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              	.LVL19:
 197 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, sl, lr}
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 32
 200              		.cfi_offset 14, -4
 201              		.cfi_offset 10, -8
 202              		.cfi_offset 9, -12
 203              		.cfi_offset 8, -16
 204              		.cfi_offset 7, -20
 205              		.cfi_offset 6, -24
 206              		.cfi_offset 5, -28
 207              		.cfi_offset 4, -32
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* -------------------------Configure the port pins---------------- */
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 208              		.loc 1 198 0
 209 0004 0023     		movs	r3, #0
 210 0006 D1F80080 		ldr	r8, [r1, #0]
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 211              		.loc 1 194 0
 212 000a 1A46     		mov	r2, r3
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 213              		.loc 1 196 0
 214 000c 4FF0010C 		mov	ip, #1
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 215              		.loc 1 202 0
 216 0010 0327     		movs	r7, #3
 217              	.LVL20:
 218              	.L17:
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 219              		.loc 1 196 0
 220 0012 0CFA02F4 		lsl	r4, ip, r2
 221              	.LVL21:
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 222              		.loc 1 198 0
 223 0016 04EA0805 		and	r5, r4, r8
 224              	.LVL22:
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 225              		.loc 1 200 0
 226 001a A542     		cmp	r5, r4
 227 001c 2FD1     		bne	.L15
 228              		.loc 1 202 0
 229 001e 0668     		ldr	r6, [r0, #0]
 230 0020 17FA03F4 		lsls	r4, r7, r3
 231              	.LVL23:
 232 0024 E443     		mvns	r4, r4
 233 0026 2640     		ands	r6, r6, r4
 234 0028 0660     		str	r6, [r0, #0]
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 235              		.loc 1 203 0
 236 002a 0E79     		ldrb	r6, [r1, #4]	@ zero_extendqisi2
 237 002c D0F80090 		ldr	r9, [r0, #0]
 238 0030 06FA03FA 		lsl	sl, r6, r3
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 239              		.loc 1 205 0
 240 0034 013E     		subs	r6, r6, #1
 241 0036 F6B2     		uxtb	r6, r6
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 242              		.loc 1 203 0
 243 0038 4AEA0909 		orr	r9, sl, r9
 244              		.loc 1 205 0
 245 003c 012E     		cmp	r6, #1
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 246              		.loc 1 203 0
 247 003e C0F80090 		str	r9, [r0, #0]
 248              		.loc 1 205 0
 249 0042 14D8     		bhi	.L16
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       {
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 250              		.loc 1 211 0
 251 0044 8668     		ldr	r6, [r0, #8]
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 252              		.loc 1 212 0
 253 0046 91F80590 		ldrb	r9, [r1, #5]	@ zero_extendqisi2
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 254              		.loc 1 211 0
 255 004a 2640     		ands	r6, r6, r4
 256 004c 8660     		str	r6, [r0, #8]
 257              		.loc 1 212 0
 258 004e 8668     		ldr	r6, [r0, #8]
 259 0050 09FA03F9 		lsl	r9, r9, r3
 260 0054 49EA0606 		orr	r6, r9, r6
 261 0058 8660     		str	r6, [r0, #8]
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 262              		.loc 1 218 0
 263 005a 4668     		ldr	r6, [r0, #4]
 264 005c 26EA0505 		bic	r5, r6, r5
 265              	.LVL24:
 266 0060 4560     		str	r5, [r0, #4]
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 267              		.loc 1 219 0
 268 0062 8D79     		ldrb	r5, [r1, #6]	@ zero_extendqisi2
 269 0064 4668     		ldr	r6, [r0, #4]
 270 0066 9540     		lsls	r5, r5, r2
 271 0068 ADB2     		uxth	r5, r5
 272 006a 3543     		orrs	r5, r5, r6
 273 006c 4560     		str	r5, [r0, #4]
 274              	.L16:
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       }
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 275              		.loc 1 223 0
 276 006e C568     		ldr	r5, [r0, #12]
 277 0070 2C40     		ands	r4, r4, r5
 278 0072 C460     		str	r4, [r0, #12]
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 279              		.loc 1 224 0
 280 0074 CC79     		ldrb	r4, [r1, #7]	@ zero_extendqisi2
 281 0076 C568     		ldr	r5, [r0, #12]
 282 0078 9C40     		lsls	r4, r4, r3
 283 007a 2C43     		orrs	r4, r4, r5
 284 007c C460     		str	r4, [r0, #12]
 285              	.L15:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 286              		.loc 1 194 0
 287 007e 0132     		adds	r2, r2, #1
 288              	.LVL25:
 289 0080 0233     		adds	r3, r3, #2
 290 0082 102A     		cmp	r2, #16
 291 0084 C5D1     		bne	.L17
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 292              		.loc 1 227 0
 293 0086 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 294              		.cfi_endproc
 295              	.LFE111:
 297              		.section	.text.GPIO_StructInit,"ax",%progbits
 298              		.align	1
 299              		.global	GPIO_StructInit
 300              		.thumb
 301              		.thumb_func
 303              	GPIO_StructInit:
 304              	.LFB112:
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 305              		.loc 1 235 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL26:
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 311              		.loc 1 237 0
 312 0000 4FF6FF73 		movw	r3, #65535
 313 0004 0360     		str	r3, [r0, #0]
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 314              		.loc 1 238 0
 315 0006 0023     		movs	r3, #0
 316 0008 0371     		strb	r3, [r0, #4]
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 317              		.loc 1 239 0
 318 000a 4371     		strb	r3, [r0, #5]
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 319              		.loc 1 240 0
 320 000c 8371     		strb	r3, [r0, #6]
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 321              		.loc 1 241 0
 322 000e C371     		strb	r3, [r0, #7]
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 323              		.loc 1 242 0
 324 0010 7047     		bx	lr
 325              		.cfi_endproc
 326              	.LFE112:
 328              		.section	.text.GPIO_PinLockConfig,"ax",%progbits
 329              		.align	1
 330              		.global	GPIO_PinLockConfig
 331              		.thumb
 332              		.thumb_func
 334              	GPIO_PinLockConfig:
 335              	.LFB113:
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         until the next reset.
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 336              		.loc 1 256 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 8
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341              	.LVL27:
 342 0000 82B0     		sub	sp, sp, #8
 343              	.LCFI2:
 344              		.cfi_def_cfa_offset 8
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 345              		.loc 1 257 0
 346 0002 4FF48033 		mov	r3, #65536
 347 0006 0193     		str	r3, [sp, #4]
 348              	.LVL28:
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 349              		.loc 1 263 0
 350 0008 019B     		ldr	r3, [sp, #4]
 351 000a 0B43     		orrs	r3, r3, r1
 352              	.LVL29:
 353 000c 0193     		str	r3, [sp, #4]
 354              	.LVL30:
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 355              		.loc 1 265 0
 356 000e 019B     		ldr	r3, [sp, #4]
 357              	.LVL31:
 358 0010 C361     		str	r3, [r0, #28]
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 359              		.loc 1 267 0
 360 0012 C161     		str	r1, [r0, #28]
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 361              		.loc 1 269 0
 362 0014 019B     		ldr	r3, [sp, #4]
 363 0016 C361     		str	r3, [r0, #28]
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 364              		.loc 1 271 0
 365 0018 C369     		ldr	r3, [r0, #28]
 366 001a 0193     		str	r3, [sp, #4]
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 367              		.loc 1 273 0
 368 001c C369     		ldr	r3, [r0, #28]
 369 001e 0193     		str	r3, [sp, #4]
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 370              		.loc 1 274 0
 371 0020 02B0     		add	sp, sp, #8
 372 0022 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE113:
 376              		.section	.text.GPIO_ReadInputDataBit,"ax",%progbits
 377              		.align	1
 378              		.global	GPIO_ReadInputDataBit
 379              		.thumb
 380              		.thumb_func
 382              	GPIO_ReadInputDataBit:
 383              	.LFB114:
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                               GPIO Read and Write
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 384              		.loc 1 300 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389              	.LVL32:
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 390              		.loc 1 307 0
 391 0000 0369     		ldr	r3, [r0, #16]
 392              	.LVL33:
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 393              		.loc 1 309 0
 394 0002 1942     		tst	r1, r3
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 395              		.loc 1 315 0
 396 0004 0CBF     		ite	eq
 397 0006 0020     		moveq	r0, #0
 398 0008 0120     		movne	r0, #1
 399              	.LVL34:
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 400              		.loc 1 316 0
 401 000a 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE114:
 405              		.section	.text.GPIO_ReadInputData,"ax",%progbits
 406              		.align	1
 407              		.global	GPIO_ReadInputData
 408              		.thumb
 409              		.thumb_func
 411              	GPIO_ReadInputData:
 412              	.LFB115:
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 413              		.loc 1 324 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              	.LVL35:
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 419              		.loc 1 328 0
 420 0000 0069     		ldr	r0, [r0, #16]
 421              	.LVL36:
 422 0002 80B2     		uxth	r0, r0
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 423              		.loc 1 329 0
 424 0004 7047     		bx	lr
 425              		.cfi_endproc
 426              	.LFE115:
 428              		.section	.text.GPIO_ReadOutputDataBit,"ax",%progbits
 429              		.align	1
 430              		.global	GPIO_ReadOutputDataBit
 431              		.thumb
 432              		.thumb_func
 434              	GPIO_ReadOutputDataBit:
 435              	.LFB116:
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 436              		.loc 1 339 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441              	.LVL37:
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 442              		.loc 1 346 0
 443 0000 4369     		ldr	r3, [r0, #20]
 444              	.LVL38:
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 445              		.loc 1 348 0
 446 0002 1942     		tst	r1, r3
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 447              		.loc 1 354 0
 448 0004 0CBF     		ite	eq
 449 0006 0020     		moveq	r0, #0
 450 0008 0120     		movne	r0, #1
 451              	.LVL39:
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 452              		.loc 1 355 0
 453 000a 7047     		bx	lr
 454              		.cfi_endproc
 455              	.LFE116:
 457              		.section	.text.GPIO_ReadOutputData,"ax",%progbits
 458              		.align	1
 459              		.global	GPIO_ReadOutputData
 460              		.thumb
 461              		.thumb_func
 463              	GPIO_ReadOutputData:
 464              	.LFB117:
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 465              		.loc 1 363 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              		@ link register save eliminated.
 470              	.LVL40:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 471              		.loc 1 367 0
 472 0000 4069     		ldr	r0, [r0, #20]
 473              	.LVL41:
 474 0002 80B2     		uxth	r0, r0
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 475              		.loc 1 368 0
 476 0004 7047     		bx	lr
 477              		.cfi_endproc
 478              	.LFE117:
 480              		.section	.text.GPIO_SetBits,"ax",%progbits
 481              		.align	1
 482              		.global	GPIO_SetBits
 483              		.thumb
 484              		.thumb_func
 486              	GPIO_SetBits:
 487              	.LFB118:
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 488              		.loc 1 381 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL42:
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 494              		.loc 1 386 0
 495 0000 0183     		strh	r1, [r0, #24]	@ movhi
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 496              		.loc 1 387 0
 497 0002 7047     		bx	lr
 498              		.cfi_endproc
 499              	.LFE118:
 501              		.section	.text.GPIO_ResetBits,"ax",%progbits
 502              		.align	1
 503              		.global	GPIO_ResetBits
 504              		.thumb
 505              		.thumb_func
 507              	GPIO_ResetBits:
 508              	.LFB119:
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 509              		.loc 1 400 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              	.LVL43:
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
 515              		.loc 1 405 0
 516 0000 4183     		strh	r1, [r0, #26]	@ movhi
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 517              		.loc 1 406 0
 518 0002 7047     		bx	lr
 519              		.cfi_endproc
 520              	.LFE119:
 522              		.section	.text.GPIO_WriteBit,"ax",%progbits
 523              		.align	1
 524              		.global	GPIO_WriteBit
 525              		.thumb
 526              		.thumb_func
 528              	GPIO_WriteBit:
 529              	.LFB120:
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 530              		.loc 1 420 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535              	.LVL44:
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 536              		.loc 1 426 0
 537 0000 0AB1     		cbz	r2, .L28
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 538              		.loc 1 428 0
 539 0002 0183     		strh	r1, [r0, #24]	@ movhi
 540 0004 7047     		bx	lr
 541              	.L28:
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 542              		.loc 1 432 0
 543 0006 4183     		strh	r1, [r0, #26]	@ movhi
 544 0008 7047     		bx	lr
 545              		.cfi_endproc
 546              	.LFE120:
 548              		.section	.text.GPIO_Write,"ax",%progbits
 549              		.align	1
 550              		.global	GPIO_Write
 551              		.thumb
 552              		.thumb_func
 554              	GPIO_Write:
 555              	.LFB121:
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 556              		.loc 1 443 0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560              		@ link register save eliminated.
 561              	.LVL45:
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 562              		.loc 1 447 0
 563 0000 4161     		str	r1, [r0, #20]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 564              		.loc 1 448 0
 565 0002 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE121:
 569              		.section	.text.GPIO_ToggleBits,"ax",%progbits
 570              		.align	1
 571              		.global	GPIO_ToggleBits
 572              		.thumb
 573              		.thumb_func
 575              	GPIO_ToggleBits:
 576              	.LFB122:
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 577              		.loc 1 457 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582              	.LVL46:
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 583              		.loc 1 461 0
 584 0000 4369     		ldr	r3, [r0, #20]
 585 0002 5940     		eors	r1, r1, r3
 586              	.LVL47:
 587 0004 4161     		str	r1, [r0, #20]
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 588              		.loc 1 462 0
 589 0006 7047     		bx	lr
 590              		.cfi_endproc
 591              	.LFE122:
 593              		.section	.text.GPIO_PinAFConfig,"ax",%progbits
 594              		.align	1
 595              		.global	GPIO_PinAFConfig
 596              		.thumb
 597              		.thumb_func
 599              	GPIO_PinAFConfig:
 600              	.LFB123:
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                GPIO Alternate functions configuration function
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 601              		.loc 1 530 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              	.LVL48:
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 606              		.loc 1 539 0
 607 0000 01F00703 		and	r3, r1, #7
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 608              		.loc 1 540 0
 609 0004 C908     		lsrs	r1, r1, #3
 610              	.LVL49:
 611 0006 0831     		adds	r1, r1, #8
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 612              		.loc 1 530 0
 613 0008 30B5     		push	{r4, r5, lr}
 614              	.LCFI3:
 615              		.cfi_def_cfa_offset 12
 616              		.cfi_offset 14, -4
 617              		.cfi_offset 5, -8
 618              		.cfi_offset 4, -12
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 619              		.loc 1 539 0
 620 000a 9B00     		lsls	r3, r3, #2
 621              	.LVL50:
 622              		.loc 1 540 0
 623 000c 50F82150 		ldr	r5, [r0, r1, lsl #2]
 624 0010 0F24     		movs	r4, #15
 625 0012 9C40     		lsls	r4, r4, r3
 626 0014 25EA0404 		bic	r4, r5, r4
 627 0018 40F82140 		str	r4, [r0, r1, lsl #2]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 628              		.loc 1 541 0
 629 001c 50F82140 		ldr	r4, [r0, r1, lsl #2]
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 630              		.loc 1 539 0
 631 0020 12FA03F3 		lsls	r3, r2, r3
 632              	.LVL51:
 633              		.loc 1 541 0
 634 0024 2343     		orrs	r3, r3, r4
 635              	.LVL52:
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 636              		.loc 1 542 0
 637 0026 40F82130 		str	r3, [r0, r1, lsl #2]
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 638              		.loc 1 543 0
 639 002a 30BD     		pop	{r4, r5, pc}
 640              		.cfi_endproc
 641              	.LFE123:
 643              		.text
 644              	.Letext0:
 645              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 646              		.file 3 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4x
 647              		.file 4 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_
 648              		.file 5 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_gpio.c
  C:\Temp\cck35QqJ.s:19     .text.GPIO_DeInit:00000000 $t
  C:\Temp\cck35QqJ.s:24     .text.GPIO_DeInit:00000000 GPIO_DeInit
  C:\Temp\cck35QqJ.s:172    .text.GPIO_DeInit:000000b4 $d
  C:\Temp\cck35QqJ.s:185    .text.GPIO_Init:00000000 $t
  C:\Temp\cck35QqJ.s:190    .text.GPIO_Init:00000000 GPIO_Init
  C:\Temp\cck35QqJ.s:298    .text.GPIO_StructInit:00000000 $t
  C:\Temp\cck35QqJ.s:303    .text.GPIO_StructInit:00000000 GPIO_StructInit
  C:\Temp\cck35QqJ.s:329    .text.GPIO_PinLockConfig:00000000 $t
  C:\Temp\cck35QqJ.s:334    .text.GPIO_PinLockConfig:00000000 GPIO_PinLockConfig
  C:\Temp\cck35QqJ.s:377    .text.GPIO_ReadInputDataBit:00000000 $t
  C:\Temp\cck35QqJ.s:382    .text.GPIO_ReadInputDataBit:00000000 GPIO_ReadInputDataBit
  C:\Temp\cck35QqJ.s:406    .text.GPIO_ReadInputData:00000000 $t
  C:\Temp\cck35QqJ.s:411    .text.GPIO_ReadInputData:00000000 GPIO_ReadInputData
  C:\Temp\cck35QqJ.s:429    .text.GPIO_ReadOutputDataBit:00000000 $t
  C:\Temp\cck35QqJ.s:434    .text.GPIO_ReadOutputDataBit:00000000 GPIO_ReadOutputDataBit
  C:\Temp\cck35QqJ.s:458    .text.GPIO_ReadOutputData:00000000 $t
  C:\Temp\cck35QqJ.s:463    .text.GPIO_ReadOutputData:00000000 GPIO_ReadOutputData
  C:\Temp\cck35QqJ.s:481    .text.GPIO_SetBits:00000000 $t
  C:\Temp\cck35QqJ.s:486    .text.GPIO_SetBits:00000000 GPIO_SetBits
  C:\Temp\cck35QqJ.s:502    .text.GPIO_ResetBits:00000000 $t
  C:\Temp\cck35QqJ.s:507    .text.GPIO_ResetBits:00000000 GPIO_ResetBits
  C:\Temp\cck35QqJ.s:523    .text.GPIO_WriteBit:00000000 $t
  C:\Temp\cck35QqJ.s:528    .text.GPIO_WriteBit:00000000 GPIO_WriteBit
  C:\Temp\cck35QqJ.s:549    .text.GPIO_Write:00000000 $t
  C:\Temp\cck35QqJ.s:554    .text.GPIO_Write:00000000 GPIO_Write
  C:\Temp\cck35QqJ.s:570    .text.GPIO_ToggleBits:00000000 $t
  C:\Temp\cck35QqJ.s:575    .text.GPIO_ToggleBits:00000000 GPIO_ToggleBits
  C:\Temp\cck35QqJ.s:594    .text.GPIO_PinAFConfig:00000000 $t
  C:\Temp\cck35QqJ.s:599    .text.GPIO_PinAFConfig:00000000 GPIO_PinAFConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
