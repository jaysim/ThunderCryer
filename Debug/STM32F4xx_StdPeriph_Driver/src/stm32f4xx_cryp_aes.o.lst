   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_cryp_aes.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CRYP_AES_ECB,"ax",%progbits
  19              		.align	2
  20              		.global	CRYP_AES_ECB
  21              		.thumb
  22              		.thumb_func
  24              	CRYP_AES_ECB:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @file    stm32f4xx_cryp_aes.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          input message using AES in ECB/CBC/CTR modes.
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          peripheral.
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *  @verbatim
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          ===================================================================
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *                                   How to use this driver
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          ===================================================================
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          1. Enable The CRYP controller clock using 
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          2. Encrypt and decrypt using AES in ECB Mode using CRYP_AES_ECB()
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *             function.
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          3. Encrypt and decrypt using AES in CBC Mode using CRYP_AES_CBC()
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *             function.
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          4. Encrypt and decrypt using AES in CTR Mode using CRYP_AES_CTR()
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *             function.
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *  @endverbatim
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @attention
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ******************************************************************************  
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Includes ------------------------------------------------------------------*/
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** #include "stm32f4xx_cryp.h"
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP 
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief CRYP driver modules
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private typedef -----------------------------------------------------------*/
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private define ------------------------------------------------------------*/
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** #define AESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private macro -------------------------------------------------------------*/
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private variables ---------------------------------------------------------*/
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private function prototypes -----------------------------------------------*/
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /* Private functions ---------------------------------------------------------*/
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Private_Functions
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */ 
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /** @defgroup CRYP_Group6 High Level AES functions
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  *  @brief   High Level AES functions 
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  *
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** @verbatim   
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                           High Level AES functions
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****  ===============================================================================
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** @endverbatim
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @{
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in ECB Mode
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_ECB(uint8_t Mode, uint8_t* Key, uint16_t Keysize,
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint8_t* Input, uint32_t Ilength, uint8_t* Output)
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** {
  27              		.loc 1 100 0
  28              		.cfi_startproc
  29              		@ args = 8, pretend = 0, frame = 232
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 90B5     		push	{r4, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 4, -12
  37 0002 BBB0     		sub	sp, sp, #236
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 248
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 B960     		str	r1, [r7, #8]
  44 0008 7B60     		str	r3, [r7, #4]
  45 000a 0346     		mov	r3, r0
  46 000c FB73     		strb	r3, [r7, #15]
  47 000e 1346     		mov	r3, r2	@ movhi
  48 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
  49              		.loc 1 103 0
  50 0012 4FF00003 		mov	r3, #0
  51 0016 7B61     		str	r3, [r7, #20]
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
  52              		.loc 1 104 0
  53 0018 4FF00003 		mov	r3, #0
  54 001c C7F8D430 		str	r3, [r7, #212]
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
  55              		.loc 1 105 0
  56 0020 4FF00103 		mov	r3, #1
  57 0024 87F8E730 		strb	r3, [r7, #231]
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
  58              		.loc 1 106 0
  59 0028 BB68     		ldr	r3, [r7, #8]
  60 002a C7F8D030 		str	r3, [r7, #208]
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
  61              		.loc 1 107 0
  62 002e 7B68     		ldr	r3, [r7, #4]
  63 0030 C7F8E030 		str	r3, [r7, #224]
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
  64              		.loc 1 108 0
  65 0034 D7F8FC30 		ldr	r3, [r7, #252]
  66 0038 C7F8DC30 		str	r3, [r7, #220]
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
  67              		.loc 1 109 0
  68 003c 4FF00003 		mov	r3, #0
  69 0040 C7F8D830 		str	r3, [r7, #216]
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
  70              		.loc 1 112 0
  71 0044 07F11803 		add	r3, r7, #24
  72 0048 1846     		mov	r0, r3
  73 004a FFF7FEFF 		bl	CRYP_KeyStructInit
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
  74              		.loc 1 114 0
  75 004e BB89     		ldrh	r3, [r7, #12]
  76 0050 C02B     		cmp	r3, #192
  77 0052 50D0     		beq	.L4
  78 0054 B3F5807F 		cmp	r3, #256
  79 0058 00F0BD80 		beq	.L5
  80 005c 802B     		cmp	r3, #128
  81 005e 40F03081 		bne	.L19
  82              	.L3:
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 128:
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
  83              		.loc 1 117 0
  84 0062 4FF00003 		mov	r3, #0
  85 0066 FB87     		strh	r3, [r7, #62]	@ movhi
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
  86              		.loc 1 118 0
  87 0068 D7F8D030 		ldr	r3, [r7, #208]
  88 006c 1B68     		ldr	r3, [r3, #0]
  89 006e C7F8CC30 		str	r3, [r7, #204]
  90              	.LBB126:
  91              	.LBB127:
  92              		.file 2 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cmInstr.h"
   1:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /**************************************************************************//**
   2:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @file     core_cmInstr.h
   3:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @version  V2.10
   5:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @date     19. July 2011
   6:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  *
   7:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @note
   8:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  *
  10:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @par
  11:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  *
  15:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * @par
  16:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  *
  22:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  ******************************************************************************/
  23:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  24:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  27:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  28:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   Access to dedicated instructions
  31:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   @{
  32:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** */
  33:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  34:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /* ARM armcc specific functions */
  36:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  37:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #endif
  40:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  41:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  42:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  No Operation
  43:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  44:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  46:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __NOP                             __nop
  47:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  48:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  49:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  51:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     until one of a number of events occurs.
  53:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  54:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __WFI                             __wfi
  55:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  56:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  57:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Event
  58:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  59:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  62:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __WFE                             __wfe
  63:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  64:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  65:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Send Event
  66:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  67:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  69:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __SEV                             __sev
  70:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  71:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  72:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  74:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     memory, after the instruction has been completed.
  77:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  78:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  80:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  81:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  83:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  86:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  88:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  89:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  91:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
  94:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  96:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  97:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
  99:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 101:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 103:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 104:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __REV                             __rev
 105:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 106:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 107:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 109:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 111:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 113:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 114:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 116:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   rev16 r0, r0
 117:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   bx lr
 118:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 119:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 120:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 121:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 123:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 125:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 127:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 128:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 130:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   revsh r0, r0
 131:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   bx lr
 132:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 133:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 134:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 135:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 137:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 139:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 141:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 143:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 144:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __RBIT                            __rbit
 145:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 146:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 147:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 149:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 151:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 154:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 156:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 157:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 159:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 161:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 164:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 166:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 167:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 169:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 171:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 174:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 176:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 177:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 179:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 181:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 182:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 184:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 185:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 186:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 188:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 189:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 191:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 193:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 194:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 196:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 197:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 198:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 200:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 201:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 203:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 205:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to store
 206:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          0  Function succeeded
 208:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return          1  Function failed
 209:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 210:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 212:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 213:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 215:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 217:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 218:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __CLREX                           __clrex
 219:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 220:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 221:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Signed Saturate
 222:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 223:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function saturates a signed value.
 224:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 225:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return             Saturated value
 228:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 229:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __SSAT                            __ssat
 230:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 231:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 232:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 234:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function saturates an unsigned value.
 235:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 236:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return             Saturated value
 239:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 240:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __USAT                            __usat
 241:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 242:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 243:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Count leading zeros
 244:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 245:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 247:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return             number of leading zeros in value
 249:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 250:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #define __CLZ                             __clz 
 251:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 252:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 254:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 255:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 256:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /* IAR iccarm specific functions */
 258:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 259:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #include <cmsis_iar.h>
 260:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 261:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 262:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /* GNU gcc specific functions */
 264:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 265:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  No Operation
 266:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 267:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 269:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 271:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("nop");
 272:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 273:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 274:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 275:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 277:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     until one of a number of events occurs.
 279:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 280:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 282:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfi");
 283:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 284:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 285:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 286:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Wait For Event
 287:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 288:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 291:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 293:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("wfe");
 294:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 295:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 296:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 297:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Send Event
 298:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 299:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 301:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 303:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("sev");
 304:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 305:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 306:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 307:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 309:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     memory, after the instruction has been completed.
 312:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 313:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 315:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("isb");
 316:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 317:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 318:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 319:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 321:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 324:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 326:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("dsb");
 327:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 328:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 329:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 330:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 332:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 335:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
 336:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 337:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("dmb");
 338:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** }
 339:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 340:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 341:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 343:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** 
 345:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****     \return               Reversed value
 347:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****  */
 348:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h **** {
 350:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   uint32_t result;
 351:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
  93              		.loc 2 352 0
  94 0072 D7F8CC30 		ldr	r3, [r7, #204]
  95              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
  96 0076 1CBA     		rev r4, r3
  97              	@ 0 "" 2
  98              		.thumb
  99 0078 C7F8C840 		str	r4, [r7, #200]
 353:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   return(result);
 100              		.loc 2 353 0
 101 007c D7F8C830 		ldr	r3, [r7, #200]
 102              	.LBE127:
 103              	.LBE126:
 104              		.loc 1 118 0
 105 0080 BB62     		str	r3, [r7, #40]
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 106              		.loc 1 119 0
 107 0082 D7F8D030 		ldr	r3, [r7, #208]
 108 0086 03F10403 		add	r3, r3, #4
 109 008a C7F8D030 		str	r3, [r7, #208]
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 110              		.loc 1 120 0
 111 008e D7F8D030 		ldr	r3, [r7, #208]
 112 0092 1B68     		ldr	r3, [r3, #0]
 113 0094 C7F8C430 		str	r3, [r7, #196]
 114              	.LBB128:
 115              	.LBB129:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 116              		.loc 2 352 0
 117 0098 D7F8C430 		ldr	r3, [r7, #196]
 118              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 119 009c 1CBA     		rev r4, r3
 120              	@ 0 "" 2
 121              		.thumb
 122 009e C7F8C040 		str	r4, [r7, #192]
 123              		.loc 2 353 0
 124 00a2 D7F8C030 		ldr	r3, [r7, #192]
 125              	.LBE129:
 126              	.LBE128:
 127              		.loc 1 120 0
 128 00a6 FB62     		str	r3, [r7, #44]
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 129              		.loc 1 121 0
 130 00a8 D7F8D030 		ldr	r3, [r7, #208]
 131 00ac 03F10403 		add	r3, r3, #4
 132 00b0 C7F8D030 		str	r3, [r7, #208]
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 133              		.loc 1 122 0
 134 00b4 D7F8D030 		ldr	r3, [r7, #208]
 135 00b8 1B68     		ldr	r3, [r3, #0]
 136 00ba C7F8BC30 		str	r3, [r7, #188]
 137              	.LBB130:
 138              	.LBB131:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 139              		.loc 2 352 0
 140 00be D7F8BC30 		ldr	r3, [r7, #188]
 141              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 142 00c2 1CBA     		rev r4, r3
 143              	@ 0 "" 2
 144              		.thumb
 145 00c4 C7F8B840 		str	r4, [r7, #184]
 146              		.loc 2 353 0
 147 00c8 D7F8B830 		ldr	r3, [r7, #184]
 148              	.LBE131:
 149              	.LBE130:
 150              		.loc 1 122 0
 151 00cc 3B63     		str	r3, [r7, #48]
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 152              		.loc 1 123 0
 153 00ce D7F8D030 		ldr	r3, [r7, #208]
 154 00d2 03F10403 		add	r3, r3, #4
 155 00d6 C7F8D030 		str	r3, [r7, #208]
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 156              		.loc 1 124 0
 157 00da D7F8D030 		ldr	r3, [r7, #208]
 158 00de 1B68     		ldr	r3, [r3, #0]
 159 00e0 C7F8B430 		str	r3, [r7, #180]
 160              	.LBB132:
 161              	.LBB133:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 162              		.loc 2 352 0
 163 00e4 D7F8B430 		ldr	r3, [r7, #180]
 164              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 165 00e8 1CBA     		rev r4, r3
 166              	@ 0 "" 2
 167              		.thumb
 168 00ea C7F8B040 		str	r4, [r7, #176]
 169              		.loc 2 353 0
 170 00ee D7F8B030 		ldr	r3, [r7, #176]
 171              	.LBE133:
 172              	.LBE132:
 173              		.loc 1 124 0
 174 00f2 7B63     		str	r3, [r7, #52]
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 175              		.loc 1 125 0
 176 00f4 E6E0     		b	.L6
 177              	.L4:
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 192:
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 178              		.loc 1 127 0
 179 00f6 4FF48073 		mov	r3, #256
 180 00fa FB87     		strh	r3, [r7, #62]	@ movhi
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 181              		.loc 1 128 0
 182 00fc D7F8D030 		ldr	r3, [r7, #208]
 183 0100 1B68     		ldr	r3, [r3, #0]
 184 0102 C7F8AC30 		str	r3, [r7, #172]
 185              	.LBB134:
 186              	.LBB135:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 187              		.loc 2 352 0
 188 0106 D7F8AC30 		ldr	r3, [r7, #172]
 189              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 190 010a 1CBA     		rev r4, r3
 191              	@ 0 "" 2
 192              		.thumb
 193 010c C7F8A840 		str	r4, [r7, #168]
 194              		.loc 2 353 0
 195 0110 D7F8A830 		ldr	r3, [r7, #168]
 196              	.LBE135:
 197              	.LBE134:
 198              		.loc 1 128 0
 199 0114 3B62     		str	r3, [r7, #32]
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 200              		.loc 1 129 0
 201 0116 D7F8D030 		ldr	r3, [r7, #208]
 202 011a 03F10403 		add	r3, r3, #4
 203 011e C7F8D030 		str	r3, [r7, #208]
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 204              		.loc 1 130 0
 205 0122 D7F8D030 		ldr	r3, [r7, #208]
 206 0126 1B68     		ldr	r3, [r3, #0]
 207 0128 C7F8A430 		str	r3, [r7, #164]
 208              	.LBB136:
 209              	.LBB137:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 210              		.loc 2 352 0
 211 012c D7F8A430 		ldr	r3, [r7, #164]
 212              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 213 0130 1CBA     		rev r4, r3
 214              	@ 0 "" 2
 215              		.thumb
 216 0132 C7F8A040 		str	r4, [r7, #160]
 217              		.loc 2 353 0
 218 0136 D7F8A030 		ldr	r3, [r7, #160]
 219              	.LBE137:
 220              	.LBE136:
 221              		.loc 1 130 0
 222 013a 7B62     		str	r3, [r7, #36]
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 223              		.loc 1 131 0
 224 013c D7F8D030 		ldr	r3, [r7, #208]
 225 0140 03F10403 		add	r3, r3, #4
 226 0144 C7F8D030 		str	r3, [r7, #208]
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 227              		.loc 1 132 0
 228 0148 D7F8D030 		ldr	r3, [r7, #208]
 229 014c 1B68     		ldr	r3, [r3, #0]
 230 014e C7F89C30 		str	r3, [r7, #156]
 231              	.LBB138:
 232              	.LBB139:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 233              		.loc 2 352 0
 234 0152 D7F89C30 		ldr	r3, [r7, #156]
 235              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 236 0156 1CBA     		rev r4, r3
 237              	@ 0 "" 2
 238              		.thumb
 239 0158 C7F89840 		str	r4, [r7, #152]
 240              		.loc 2 353 0
 241 015c D7F89830 		ldr	r3, [r7, #152]
 242              	.LBE139:
 243              	.LBE138:
 244              		.loc 1 132 0
 245 0160 BB62     		str	r3, [r7, #40]
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 246              		.loc 1 133 0
 247 0162 D7F8D030 		ldr	r3, [r7, #208]
 248 0166 03F10403 		add	r3, r3, #4
 249 016a C7F8D030 		str	r3, [r7, #208]
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 250              		.loc 1 134 0
 251 016e D7F8D030 		ldr	r3, [r7, #208]
 252 0172 1B68     		ldr	r3, [r3, #0]
 253 0174 C7F89430 		str	r3, [r7, #148]
 254              	.LBB140:
 255              	.LBB141:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 256              		.loc 2 352 0
 257 0178 D7F89430 		ldr	r3, [r7, #148]
 258              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 259 017c 1CBA     		rev r4, r3
 260              	@ 0 "" 2
 261              		.thumb
 262 017e C7F89040 		str	r4, [r7, #144]
 263              		.loc 2 353 0
 264 0182 D7F89030 		ldr	r3, [r7, #144]
 265              	.LBE141:
 266              	.LBE140:
 267              		.loc 1 134 0
 268 0186 FB62     		str	r3, [r7, #44]
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 269              		.loc 1 135 0
 270 0188 D7F8D030 		ldr	r3, [r7, #208]
 271 018c 03F10403 		add	r3, r3, #4
 272 0190 C7F8D030 		str	r3, [r7, #208]
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 273              		.loc 1 136 0
 274 0194 D7F8D030 		ldr	r3, [r7, #208]
 275 0198 1B68     		ldr	r3, [r3, #0]
 276 019a C7F88C30 		str	r3, [r7, #140]
 277              	.LBB142:
 278              	.LBB143:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 279              		.loc 2 352 0
 280 019e D7F88C30 		ldr	r3, [r7, #140]
 281              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 282 01a2 1CBA     		rev r4, r3
 283              	@ 0 "" 2
 284              		.thumb
 285 01a4 C7F88840 		str	r4, [r7, #136]
 286              		.loc 2 353 0
 287 01a8 D7F88830 		ldr	r3, [r7, #136]
 288              	.LBE143:
 289              	.LBE142:
 290              		.loc 1 136 0
 291 01ac 3B63     		str	r3, [r7, #48]
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 292              		.loc 1 137 0
 293 01ae D7F8D030 		ldr	r3, [r7, #208]
 294 01b2 03F10403 		add	r3, r3, #4
 295 01b6 C7F8D030 		str	r3, [r7, #208]
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 296              		.loc 1 138 0
 297 01ba D7F8D030 		ldr	r3, [r7, #208]
 298 01be 1B68     		ldr	r3, [r3, #0]
 299 01c0 C7F88430 		str	r3, [r7, #132]
 300              	.LBB144:
 301              	.LBB145:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 302              		.loc 2 352 0
 303 01c4 D7F88430 		ldr	r3, [r7, #132]
 304              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 305 01c8 1CBA     		rev r4, r3
 306              	@ 0 "" 2
 307              		.thumb
 308 01ca C7F88040 		str	r4, [r7, #128]
 309              		.loc 2 353 0
 310 01ce D7F88030 		ldr	r3, [r7, #128]
 311              	.LBE145:
 312              	.LBE144:
 313              		.loc 1 138 0
 314 01d2 7B63     		str	r3, [r7, #52]
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 315              		.loc 1 139 0
 316 01d4 76E0     		b	.L6
 317              	.L5:
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 256:
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 318              		.loc 1 141 0
 319 01d6 4FF40073 		mov	r3, #512
 320 01da FB87     		strh	r3, [r7, #62]	@ movhi
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 321              		.loc 1 142 0
 322 01dc D7F8D030 		ldr	r3, [r7, #208]
 323 01e0 1B68     		ldr	r3, [r3, #0]
 324 01e2 FB67     		str	r3, [r7, #124]
 325              	.LBB146:
 326              	.LBB147:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 327              		.loc 2 352 0
 328 01e4 FB6F     		ldr	r3, [r7, #124]
 329              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 330 01e6 1CBA     		rev r4, r3
 331              	@ 0 "" 2
 332              		.thumb
 333 01e8 BC67     		str	r4, [r7, #120]
 334              		.loc 2 353 0
 335 01ea BB6F     		ldr	r3, [r7, #120]
 336              	.LBE147:
 337              	.LBE146:
 338              		.loc 1 142 0
 339 01ec BB61     		str	r3, [r7, #24]
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 340              		.loc 1 143 0
 341 01ee D7F8D030 		ldr	r3, [r7, #208]
 342 01f2 03F10403 		add	r3, r3, #4
 343 01f6 C7F8D030 		str	r3, [r7, #208]
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 344              		.loc 1 144 0
 345 01fa D7F8D030 		ldr	r3, [r7, #208]
 346 01fe 1B68     		ldr	r3, [r3, #0]
 347 0200 7B67     		str	r3, [r7, #116]
 348              	.LBB148:
 349              	.LBB149:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 350              		.loc 2 352 0
 351 0202 7B6F     		ldr	r3, [r7, #116]
 352              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 353 0204 1CBA     		rev r4, r3
 354              	@ 0 "" 2
 355              		.thumb
 356 0206 3C67     		str	r4, [r7, #112]
 357              		.loc 2 353 0
 358 0208 3B6F     		ldr	r3, [r7, #112]
 359              	.LBE149:
 360              	.LBE148:
 361              		.loc 1 144 0
 362 020a FB61     		str	r3, [r7, #28]
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 363              		.loc 1 145 0
 364 020c D7F8D030 		ldr	r3, [r7, #208]
 365 0210 03F10403 		add	r3, r3, #4
 366 0214 C7F8D030 		str	r3, [r7, #208]
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 367              		.loc 1 146 0
 368 0218 D7F8D030 		ldr	r3, [r7, #208]
 369 021c 1B68     		ldr	r3, [r3, #0]
 370 021e FB66     		str	r3, [r7, #108]
 371              	.LBB150:
 372              	.LBB151:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 373              		.loc 2 352 0
 374 0220 FB6E     		ldr	r3, [r7, #108]
 375              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 376 0222 1CBA     		rev r4, r3
 377              	@ 0 "" 2
 378              		.thumb
 379 0224 BC66     		str	r4, [r7, #104]
 380              		.loc 2 353 0
 381 0226 BB6E     		ldr	r3, [r7, #104]
 382              	.LBE151:
 383              	.LBE150:
 384              		.loc 1 146 0
 385 0228 3B62     		str	r3, [r7, #32]
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 386              		.loc 1 147 0
 387 022a D7F8D030 		ldr	r3, [r7, #208]
 388 022e 03F10403 		add	r3, r3, #4
 389 0232 C7F8D030 		str	r3, [r7, #208]
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 390              		.loc 1 148 0
 391 0236 D7F8D030 		ldr	r3, [r7, #208]
 392 023a 1B68     		ldr	r3, [r3, #0]
 393 023c 7B66     		str	r3, [r7, #100]
 394              	.LBB152:
 395              	.LBB153:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 396              		.loc 2 352 0
 397 023e 7B6E     		ldr	r3, [r7, #100]
 398              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 399 0240 1CBA     		rev r4, r3
 400              	@ 0 "" 2
 401              		.thumb
 402 0242 3C66     		str	r4, [r7, #96]
 403              		.loc 2 353 0
 404 0244 3B6E     		ldr	r3, [r7, #96]
 405              	.LBE153:
 406              	.LBE152:
 407              		.loc 1 148 0
 408 0246 7B62     		str	r3, [r7, #36]
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 409              		.loc 1 149 0
 410 0248 D7F8D030 		ldr	r3, [r7, #208]
 411 024c 03F10403 		add	r3, r3, #4
 412 0250 C7F8D030 		str	r3, [r7, #208]
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 413              		.loc 1 150 0
 414 0254 D7F8D030 		ldr	r3, [r7, #208]
 415 0258 1B68     		ldr	r3, [r3, #0]
 416 025a FB65     		str	r3, [r7, #92]
 417              	.LBB154:
 418              	.LBB155:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 419              		.loc 2 352 0
 420 025c FB6D     		ldr	r3, [r7, #92]
 421              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 422 025e 1CBA     		rev r4, r3
 423              	@ 0 "" 2
 424              		.thumb
 425 0260 BC65     		str	r4, [r7, #88]
 426              		.loc 2 353 0
 427 0262 BB6D     		ldr	r3, [r7, #88]
 428              	.LBE155:
 429              	.LBE154:
 430              		.loc 1 150 0
 431 0264 BB62     		str	r3, [r7, #40]
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 432              		.loc 1 151 0
 433 0266 D7F8D030 		ldr	r3, [r7, #208]
 434 026a 03F10403 		add	r3, r3, #4
 435 026e C7F8D030 		str	r3, [r7, #208]
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 436              		.loc 1 152 0
 437 0272 D7F8D030 		ldr	r3, [r7, #208]
 438 0276 1B68     		ldr	r3, [r3, #0]
 439 0278 7B65     		str	r3, [r7, #84]
 440              	.LBB156:
 441              	.LBB157:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 442              		.loc 2 352 0
 443 027a 7B6D     		ldr	r3, [r7, #84]
 444              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 445 027c 1CBA     		rev r4, r3
 446              	@ 0 "" 2
 447              		.thumb
 448 027e 3C65     		str	r4, [r7, #80]
 449              		.loc 2 353 0
 450 0280 3B6D     		ldr	r3, [r7, #80]
 451              	.LBE157:
 452              	.LBE156:
 453              		.loc 1 152 0
 454 0282 FB62     		str	r3, [r7, #44]
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 455              		.loc 1 153 0
 456 0284 D7F8D030 		ldr	r3, [r7, #208]
 457 0288 03F10403 		add	r3, r3, #4
 458 028c C7F8D030 		str	r3, [r7, #208]
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 459              		.loc 1 154 0
 460 0290 D7F8D030 		ldr	r3, [r7, #208]
 461 0294 1B68     		ldr	r3, [r3, #0]
 462 0296 FB64     		str	r3, [r7, #76]
 463              	.LBB158:
 464              	.LBB159:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 465              		.loc 2 352 0
 466 0298 FB6C     		ldr	r3, [r7, #76]
 467              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 468 029a 1CBA     		rev r4, r3
 469              	@ 0 "" 2
 470              		.thumb
 471 029c BC64     		str	r4, [r7, #72]
 472              		.loc 2 353 0
 473 029e BB6C     		ldr	r3, [r7, #72]
 474              	.LBE159:
 475              	.LBE158:
 476              		.loc 1 154 0
 477 02a0 3B63     		str	r3, [r7, #48]
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 478              		.loc 1 155 0
 479 02a2 D7F8D030 		ldr	r3, [r7, #208]
 480 02a6 03F10403 		add	r3, r3, #4
 481 02aa C7F8D030 		str	r3, [r7, #208]
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 482              		.loc 1 156 0
 483 02ae D7F8D030 		ldr	r3, [r7, #208]
 484 02b2 1B68     		ldr	r3, [r3, #0]
 485 02b4 7B64     		str	r3, [r7, #68]
 486              	.LBB160:
 487              	.LBB161:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 488              		.loc 2 352 0
 489 02b6 7B6C     		ldr	r3, [r7, #68]
 490              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 491 02b8 1CBA     		rev r4, r3
 492              	@ 0 "" 2
 493              		.thumb
 494 02ba 3C64     		str	r4, [r7, #64]
 495              		.loc 2 353 0
 496 02bc 3B6C     		ldr	r3, [r7, #64]
 497              	.LBE161:
 498              	.LBE160:
 499              		.loc 1 156 0
 500 02be 7B63     		str	r3, [r7, #52]
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 501              		.loc 1 157 0
 502 02c0 00E0     		b	.L6
 503              	.L19:
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     default:
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 504              		.loc 1 159 0
 505 02c2 00BF     		nop
 506              	.L6:
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 507              		.loc 1 163 0
 508 02c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 509 02c6 002B     		cmp	r3, #0
 510 02c8 38D1     		bne	.L7
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 511              		.loc 1 166 0
 512 02ca FFF7FEFF 		bl	CRYP_FIFOFlush
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 513              		.loc 1 169 0
 514 02ce 4FF00403 		mov	r3, #4
 515 02d2 3B87     		strh	r3, [r7, #56]	@ movhi
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 516              		.loc 1 170 0
 517 02d4 4FF03803 		mov	r3, #56
 518 02d8 7B87     		strh	r3, [r7, #58]	@ movhi
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 519              		.loc 1 171 0
 520 02da 4FF00003 		mov	r3, #0
 521 02de BB87     		strh	r3, [r7, #60]	@ movhi
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 522              		.loc 1 172 0
 523 02e0 07F13803 		add	r3, r7, #56
 524 02e4 1846     		mov	r0, r3
 525 02e6 FFF7FEFF 		bl	CRYP_Init
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 526              		.loc 1 175 0
 527 02ea 07F11803 		add	r3, r7, #24
 528 02ee 1846     		mov	r0, r3
 529 02f0 FFF7FEFF 		bl	CRYP_KeyInit
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 530              		.loc 1 178 0
 531 02f4 4FF00100 		mov	r0, #1
 532 02f8 FFF7FEFF 		bl	CRYP_Cmd
 533              	.L9:
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 534              		.loc 1 183 0 discriminator 1
 535 02fc 4FF01000 		mov	r0, #16
 536 0300 FFF7FEFF 		bl	CRYP_GetFlagStatus
 537 0304 0346     		mov	r3, r0
 538 0306 C7F8D430 		str	r3, [r7, #212]
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 539              		.loc 1 184 0 discriminator 1
 540 030a 7B69     		ldr	r3, [r7, #20]
 541 030c 03F10103 		add	r3, r3, #1
 542 0310 7B61     		str	r3, [r7, #20]
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 543              		.loc 1 185 0 discriminator 1
 544 0312 7B69     		ldr	r3, [r7, #20]
 545 0314 B3F5803F 		cmp	r3, #65536
 546 0318 03D0     		beq	.L8
 547 031a D7F8D430 		ldr	r3, [r7, #212]
 548 031e 002B     		cmp	r3, #0
 549 0320 ECD1     		bne	.L9
 550              	.L8:
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 551              		.loc 1 187 0
 552 0322 D7F8D430 		ldr	r3, [r7, #212]
 553 0326 002B     		cmp	r3, #0
 554 0328 04D0     		beq	.L10
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 555              		.loc 1 189 0
 556 032a 4FF00003 		mov	r3, #0
 557 032e 87F8E730 		strb	r3, [r7, #231]
 558 0332 0BE0     		b	.L11
 559              	.L10:
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 560              		.loc 1 194 0
 561 0334 4FF00403 		mov	r3, #4
 562 0338 3B87     		strh	r3, [r7, #56]	@ movhi
 563 033a 07E0     		b	.L11
 564              	.L7:
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 565              		.loc 1 201 0
 566 033c 07F11803 		add	r3, r7, #24
 567 0340 1846     		mov	r0, r3
 568 0342 FFF7FEFF 		bl	CRYP_KeyInit
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 569              		.loc 1 204 0
 570 0346 4FF00003 		mov	r3, #0
 571 034a 3B87     		strh	r3, [r7, #56]	@ movhi
 572              	.L11:
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_ECB;
 573              		.loc 1 207 0
 574 034c 4FF02003 		mov	r3, #32
 575 0350 7B87     		strh	r3, [r7, #58]	@ movhi
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 576              		.loc 1 208 0
 577 0352 4FF08003 		mov	r3, #128
 578 0356 BB87     		strh	r3, [r7, #60]	@ movhi
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 579              		.loc 1 209 0
 580 0358 07F13803 		add	r3, r7, #56
 581 035c 1846     		mov	r0, r3
 582 035e FFF7FEFF 		bl	CRYP_Init
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 583              		.loc 1 212 0
 584 0362 FFF7FEFF 		bl	CRYP_FIFOFlush
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 585              		.loc 1 215 0
 586 0366 4FF00100 		mov	r0, #1
 587 036a FFF7FEFF 		bl	CRYP_Cmd
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 588              		.loc 1 217 0
 589 036e 4FF00003 		mov	r3, #0
 590 0372 C7F8D830 		str	r3, [r7, #216]
 591 0376 84E0     		b	.L12
 592              	.L18:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 593              		.loc 1 221 0
 594 0378 D7F8E030 		ldr	r3, [r7, #224]
 595 037c 1B68     		ldr	r3, [r3, #0]
 596 037e 1846     		mov	r0, r3
 597 0380 FFF7FEFF 		bl	CRYP_DataIn
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 598              		.loc 1 222 0
 599 0384 D7F8E030 		ldr	r3, [r7, #224]
 600 0388 03F10403 		add	r3, r3, #4
 601 038c C7F8E030 		str	r3, [r7, #224]
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 602              		.loc 1 223 0
 603 0390 D7F8E030 		ldr	r3, [r7, #224]
 604 0394 1B68     		ldr	r3, [r3, #0]
 605 0396 1846     		mov	r0, r3
 606 0398 FFF7FEFF 		bl	CRYP_DataIn
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 607              		.loc 1 224 0
 608 039c D7F8E030 		ldr	r3, [r7, #224]
 609 03a0 03F10403 		add	r3, r3, #4
 610 03a4 C7F8E030 		str	r3, [r7, #224]
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 611              		.loc 1 225 0
 612 03a8 D7F8E030 		ldr	r3, [r7, #224]
 613 03ac 1B68     		ldr	r3, [r3, #0]
 614 03ae 1846     		mov	r0, r3
 615 03b0 FFF7FEFF 		bl	CRYP_DataIn
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 616              		.loc 1 226 0
 617 03b4 D7F8E030 		ldr	r3, [r7, #224]
 618 03b8 03F10403 		add	r3, r3, #4
 619 03bc C7F8E030 		str	r3, [r7, #224]
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 620              		.loc 1 227 0
 621 03c0 D7F8E030 		ldr	r3, [r7, #224]
 622 03c4 1B68     		ldr	r3, [r3, #0]
 623 03c6 1846     		mov	r0, r3
 624 03c8 FFF7FEFF 		bl	CRYP_DataIn
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 625              		.loc 1 228 0
 626 03cc D7F8E030 		ldr	r3, [r7, #224]
 627 03d0 03F10403 		add	r3, r3, #4
 628 03d4 C7F8E030 		str	r3, [r7, #224]
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 629              		.loc 1 231 0
 630 03d8 4FF00003 		mov	r3, #0
 631 03dc 7B61     		str	r3, [r7, #20]
 632              	.L14:
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 633              		.loc 1 234 0 discriminator 1
 634 03de 4FF01000 		mov	r0, #16
 635 03e2 FFF7FEFF 		bl	CRYP_GetFlagStatus
 636 03e6 0346     		mov	r3, r0
 637 03e8 C7F8D430 		str	r3, [r7, #212]
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 638              		.loc 1 235 0 discriminator 1
 639 03ec 7B69     		ldr	r3, [r7, #20]
 640 03ee 03F10103 		add	r3, r3, #1
 641 03f2 7B61     		str	r3, [r7, #20]
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 642              		.loc 1 236 0 discriminator 1
 643 03f4 7B69     		ldr	r3, [r7, #20]
 644 03f6 B3F5803F 		cmp	r3, #65536
 645 03fa 03D0     		beq	.L13
 646 03fc D7F8D430 		ldr	r3, [r7, #212]
 647 0400 002B     		cmp	r3, #0
 648 0402 ECD1     		bne	.L14
 649              	.L13:
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 650              		.loc 1 238 0
 651 0404 D7F8D430 		ldr	r3, [r7, #212]
 652 0408 002B     		cmp	r3, #0
 653 040a 04D0     		beq	.L15
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 654              		.loc 1 240 0
 655 040c 4FF00003 		mov	r3, #0
 656 0410 87F8E730 		strb	r3, [r7, #231]
 657 0414 2FE0     		b	.L16
 658              	.L15:
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 659              		.loc 1 246 0
 660 0416 D7F8DC40 		ldr	r4, [r7, #220]
 661 041a FFF7FEFF 		bl	CRYP_DataOut
 662 041e 0346     		mov	r3, r0
 663 0420 2360     		str	r3, [r4, #0]
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 664              		.loc 1 247 0
 665 0422 D7F8DC30 		ldr	r3, [r7, #220]
 666 0426 03F10403 		add	r3, r3, #4
 667 042a C7F8DC30 		str	r3, [r7, #220]
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 668              		.loc 1 248 0
 669 042e D7F8DC40 		ldr	r4, [r7, #220]
 670 0432 FFF7FEFF 		bl	CRYP_DataOut
 671 0436 0346     		mov	r3, r0
 672 0438 2360     		str	r3, [r4, #0]
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 673              		.loc 1 249 0
 674 043a D7F8DC30 		ldr	r3, [r7, #220]
 675 043e 03F10403 		add	r3, r3, #4
 676 0442 C7F8DC30 		str	r3, [r7, #220]
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 677              		.loc 1 250 0
 678 0446 D7F8DC40 		ldr	r4, [r7, #220]
 679 044a FFF7FEFF 		bl	CRYP_DataOut
 680 044e 0346     		mov	r3, r0
 681 0450 2360     		str	r3, [r4, #0]
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 682              		.loc 1 251 0
 683 0452 D7F8DC30 		ldr	r3, [r7, #220]
 684 0456 03F10403 		add	r3, r3, #4
 685 045a C7F8DC30 		str	r3, [r7, #220]
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut(); 
 686              		.loc 1 252 0
 687 045e D7F8DC40 		ldr	r4, [r7, #220]
 688 0462 FFF7FEFF 		bl	CRYP_DataOut
 689 0466 0346     		mov	r3, r0
 690 0468 2360     		str	r3, [r4, #0]
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 691              		.loc 1 253 0
 692 046a D7F8DC30 		ldr	r3, [r7, #220]
 693 046e 03F10403 		add	r3, r3, #4
 694 0472 C7F8DC30 		str	r3, [r7, #220]
 695              	.L16:
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 696              		.loc 1 217 0
 697 0476 D7F8D830 		ldr	r3, [r7, #216]
 698 047a 03F11003 		add	r3, r3, #16
 699 047e C7F8D830 		str	r3, [r7, #216]
 700              	.L12:
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 701              		.loc 1 217 0 is_stmt 0 discriminator 1
 702 0482 D7F8D820 		ldr	r2, [r7, #216]
 703 0486 D7F8F830 		ldr	r3, [r7, #248]
 704 048a 9A42     		cmp	r2, r3
 705 048c 04D2     		bcs	.L17
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 706              		.loc 1 217 0 discriminator 2
 707 048e 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 708 0492 002B     		cmp	r3, #0
 709 0494 7FF470AF 		bne	.L18
 710              	.L17:
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 711              		.loc 1 258 0 is_stmt 1
 712 0498 4FF00000 		mov	r0, #0
 713 049c FFF7FEFF 		bl	CRYP_Cmd
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   return status; 
 714              		.loc 1 260 0
 715 04a0 97F8E730 		ldrb	r3, [r7, #231]	@ zero_extendqisi2
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** }
 716              		.loc 1 261 0
 717 04a4 1846     		mov	r0, r3
 718 04a6 07F1EC07 		add	r7, r7, #236
 719 04aa BD46     		mov	sp, r7
 720 04ac 90BD     		pop	{r4, r7, pc}
 721              		.cfi_endproc
 722              	.LFE110:
 724 04ae 00BF     		.section	.text.CRYP_AES_CBC,"ax",%progbits
 725              		.align	2
 726              		.global	CRYP_AES_CBC
 727              		.thumb
 728              		.thumb_func
 730              	CRYP_AES_CBC:
 731              	.LFB111:
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CBC Mode
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          This parameter can be one of the following values:
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CBC(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key,
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** {
 732              		.loc 1 282 0
 733              		.cfi_startproc
 734              		@ args = 12, pretend = 0, frame = 280
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736 0000 90B5     		push	{r4, r7, lr}
 737              	.LCFI3:
 738              		.cfi_def_cfa_offset 12
 739              		.cfi_offset 14, -4
 740              		.cfi_offset 7, -8
 741              		.cfi_offset 4, -12
 742 0002 C7B0     		sub	sp, sp, #284
 743              	.LCFI4:
 744              		.cfi_def_cfa_offset 296
 745 0004 00AF     		add	r7, sp, #0
 746              	.LCFI5:
 747              		.cfi_def_cfa_register 7
 748 0006 07F10804 		add	r4, r7, #8
 749 000a 2160     		str	r1, [r4, #0]
 750 000c 07F10401 		add	r1, r7, #4
 751 0010 0A60     		str	r2, [r1, #0]
 752 0012 1A46     		mov	r2, r3
 753 0014 07F11003 		add	r3, r7, #16
 754 0018 03F1FF33 		add	r3, r3, #-1
 755 001c 0146     		mov	r1, r0
 756 001e 1970     		strb	r1, [r3, #0]
 757 0020 07F10C03 		add	r3, r7, #12
 758 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 759              		.loc 1 286 0
 760 0026 07F11003 		add	r3, r7, #16
 761 002a 4FF00002 		mov	r2, #0
 762 002e 1A60     		str	r2, [r3, #0]
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 763              		.loc 1 287 0
 764 0030 4FF00003 		mov	r3, #0
 765 0034 C7F80431 		str	r3, [r7, #260]
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 766              		.loc 1 288 0
 767 0038 4FF00103 		mov	r3, #1
 768 003c 87F81731 		strb	r3, [r7, #279]
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 769              		.loc 1 289 0
 770 0040 07F10403 		add	r3, r7, #4
 771 0044 1B68     		ldr	r3, [r3, #0]
 772 0046 C7F80031 		str	r3, [r7, #256]
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 773              		.loc 1 290 0
 774 004a D7F82831 		ldr	r3, [r7, #296]
 775 004e C7F81031 		str	r3, [r7, #272]
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 776              		.loc 1 291 0
 777 0052 D7F83031 		ldr	r3, [r7, #304]
 778 0056 C7F80C31 		str	r3, [r7, #268]
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 779              		.loc 1 292 0
 780 005a 07F10803 		add	r3, r7, #8
 781 005e 1B68     		ldr	r3, [r3, #0]
 782 0060 C7F8FC30 		str	r3, [r7, #252]
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 783              		.loc 1 293 0
 784 0064 4FF00003 		mov	r3, #0
 785 0068 C7F80831 		str	r3, [r7, #264]
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 786              		.loc 1 296 0
 787 006c 07F12403 		add	r3, r7, #36
 788 0070 1846     		mov	r0, r3
 789 0072 FFF7FEFF 		bl	CRYP_KeyStructInit
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 790              		.loc 1 298 0
 791 0076 07F10C03 		add	r3, r7, #12
 792 007a 1B88     		ldrh	r3, [r3, #0]
 793 007c C02B     		cmp	r3, #192
 794 007e 51D0     		beq	.L23
 795 0080 B3F5807F 		cmp	r3, #256
 796 0084 00F0BF80 		beq	.L24
 797 0088 802B     		cmp	r3, #128
 798 008a 40F04981 		bne	.L38
 799              	.L22:
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 128:
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 800              		.loc 1 301 0
 801 008e 4FF00003 		mov	r3, #0
 802 0092 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 803              		.loc 1 302 0
 804 0096 D7F80031 		ldr	r3, [r7, #256]
 805 009a 1B68     		ldr	r3, [r3, #0]
 806 009c C7F8F830 		str	r3, [r7, #248]
 807              	.LBB162:
 808              	.LBB163:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 809              		.loc 2 352 0
 810 00a0 D7F8F830 		ldr	r3, [r7, #248]
 811              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 812 00a4 1CBA     		rev r4, r3
 813              	@ 0 "" 2
 814              		.thumb
 815 00a6 C7F8F440 		str	r4, [r7, #244]
 816              		.loc 2 353 0
 817 00aa D7F8F430 		ldr	r3, [r7, #244]
 818              	.LBE163:
 819              	.LBE162:
 820              		.loc 1 302 0
 821 00ae 7B63     		str	r3, [r7, #52]
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 822              		.loc 1 303 0
 823 00b0 D7F80031 		ldr	r3, [r7, #256]
 824 00b4 03F10403 		add	r3, r3, #4
 825 00b8 C7F80031 		str	r3, [r7, #256]
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 826              		.loc 1 304 0
 827 00bc D7F80031 		ldr	r3, [r7, #256]
 828 00c0 1B68     		ldr	r3, [r3, #0]
 829 00c2 C7F8F030 		str	r3, [r7, #240]
 830              	.LBB164:
 831              	.LBB165:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 832              		.loc 2 352 0
 833 00c6 D7F8F030 		ldr	r3, [r7, #240]
 834              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 835 00ca 1CBA     		rev r4, r3
 836              	@ 0 "" 2
 837              		.thumb
 838 00cc C7F8EC40 		str	r4, [r7, #236]
 839              		.loc 2 353 0
 840 00d0 D7F8EC30 		ldr	r3, [r7, #236]
 841              	.LBE165:
 842              	.LBE164:
 843              		.loc 1 304 0
 844 00d4 BB63     		str	r3, [r7, #56]
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 845              		.loc 1 305 0
 846 00d6 D7F80031 		ldr	r3, [r7, #256]
 847 00da 03F10403 		add	r3, r3, #4
 848 00de C7F80031 		str	r3, [r7, #256]
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 849              		.loc 1 306 0
 850 00e2 D7F80031 		ldr	r3, [r7, #256]
 851 00e6 1B68     		ldr	r3, [r3, #0]
 852 00e8 C7F8E830 		str	r3, [r7, #232]
 853              	.LBB166:
 854              	.LBB167:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 855              		.loc 2 352 0
 856 00ec D7F8E830 		ldr	r3, [r7, #232]
 857              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 858 00f0 1CBA     		rev r4, r3
 859              	@ 0 "" 2
 860              		.thumb
 861 00f2 C7F8E440 		str	r4, [r7, #228]
 862              		.loc 2 353 0
 863 00f6 D7F8E430 		ldr	r3, [r7, #228]
 864              	.LBE167:
 865              	.LBE166:
 866              		.loc 1 306 0
 867 00fa FB63     		str	r3, [r7, #60]
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 868              		.loc 1 307 0
 869 00fc D7F80031 		ldr	r3, [r7, #256]
 870 0100 03F10403 		add	r3, r3, #4
 871 0104 C7F80031 		str	r3, [r7, #256]
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 872              		.loc 1 308 0
 873 0108 D7F80031 		ldr	r3, [r7, #256]
 874 010c 1B68     		ldr	r3, [r3, #0]
 875 010e C7F8E030 		str	r3, [r7, #224]
 876              	.LBB168:
 877              	.LBB169:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 878              		.loc 2 352 0
 879 0112 D7F8E030 		ldr	r3, [r7, #224]
 880              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 881 0116 1CBA     		rev r4, r3
 882              	@ 0 "" 2
 883              		.thumb
 884 0118 C7F8DC40 		str	r4, [r7, #220]
 885              		.loc 2 353 0
 886 011c D7F8DC30 		ldr	r3, [r7, #220]
 887              	.LBE169:
 888              	.LBE168:
 889              		.loc 1 308 0
 890 0120 3B64     		str	r3, [r7, #64]
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 891              		.loc 1 309 0
 892 0122 FEE0     		b	.L25
 893              	.L23:
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 192:
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 894              		.loc 1 311 0
 895 0124 4FF48073 		mov	r3, #256
 896 0128 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 897              		.loc 1 312 0
 898 012c D7F80031 		ldr	r3, [r7, #256]
 899 0130 1B68     		ldr	r3, [r3, #0]
 900 0132 C7F8D830 		str	r3, [r7, #216]
 901              	.LBB170:
 902              	.LBB171:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 903              		.loc 2 352 0
 904 0136 D7F8D830 		ldr	r3, [r7, #216]
 905              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 906 013a 1CBA     		rev r4, r3
 907              	@ 0 "" 2
 908              		.thumb
 909 013c C7F8D440 		str	r4, [r7, #212]
 910              		.loc 2 353 0
 911 0140 D7F8D430 		ldr	r3, [r7, #212]
 912              	.LBE171:
 913              	.LBE170:
 914              		.loc 1 312 0
 915 0144 FB62     		str	r3, [r7, #44]
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 916              		.loc 1 313 0
 917 0146 D7F80031 		ldr	r3, [r7, #256]
 918 014a 03F10403 		add	r3, r3, #4
 919 014e C7F80031 		str	r3, [r7, #256]
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 920              		.loc 1 314 0
 921 0152 D7F80031 		ldr	r3, [r7, #256]
 922 0156 1B68     		ldr	r3, [r3, #0]
 923 0158 C7F8D030 		str	r3, [r7, #208]
 924              	.LBB172:
 925              	.LBB173:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 926              		.loc 2 352 0
 927 015c D7F8D030 		ldr	r3, [r7, #208]
 928              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 929 0160 1CBA     		rev r4, r3
 930              	@ 0 "" 2
 931              		.thumb
 932 0162 C7F8CC40 		str	r4, [r7, #204]
 933              		.loc 2 353 0
 934 0166 D7F8CC30 		ldr	r3, [r7, #204]
 935              	.LBE173:
 936              	.LBE172:
 937              		.loc 1 314 0
 938 016a 3B63     		str	r3, [r7, #48]
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 939              		.loc 1 315 0
 940 016c D7F80031 		ldr	r3, [r7, #256]
 941 0170 03F10403 		add	r3, r3, #4
 942 0174 C7F80031 		str	r3, [r7, #256]
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 943              		.loc 1 316 0
 944 0178 D7F80031 		ldr	r3, [r7, #256]
 945 017c 1B68     		ldr	r3, [r3, #0]
 946 017e C7F8C830 		str	r3, [r7, #200]
 947              	.LBB174:
 948              	.LBB175:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 949              		.loc 2 352 0
 950 0182 D7F8C830 		ldr	r3, [r7, #200]
 951              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 952 0186 1CBA     		rev r4, r3
 953              	@ 0 "" 2
 954              		.thumb
 955 0188 C7F8C440 		str	r4, [r7, #196]
 956              		.loc 2 353 0
 957 018c D7F8C430 		ldr	r3, [r7, #196]
 958              	.LBE175:
 959              	.LBE174:
 960              		.loc 1 316 0
 961 0190 7B63     		str	r3, [r7, #52]
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 962              		.loc 1 317 0
 963 0192 D7F80031 		ldr	r3, [r7, #256]
 964 0196 03F10403 		add	r3, r3, #4
 965 019a C7F80031 		str	r3, [r7, #256]
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 966              		.loc 1 318 0
 967 019e D7F80031 		ldr	r3, [r7, #256]
 968 01a2 1B68     		ldr	r3, [r3, #0]
 969 01a4 C7F8C030 		str	r3, [r7, #192]
 970              	.LBB176:
 971              	.LBB177:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 972              		.loc 2 352 0
 973 01a8 D7F8C030 		ldr	r3, [r7, #192]
 974              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 975 01ac 1CBA     		rev r4, r3
 976              	@ 0 "" 2
 977              		.thumb
 978 01ae C7F8BC40 		str	r4, [r7, #188]
 979              		.loc 2 353 0
 980 01b2 D7F8BC30 		ldr	r3, [r7, #188]
 981              	.LBE177:
 982              	.LBE176:
 983              		.loc 1 318 0
 984 01b6 BB63     		str	r3, [r7, #56]
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 985              		.loc 1 319 0
 986 01b8 D7F80031 		ldr	r3, [r7, #256]
 987 01bc 03F10403 		add	r3, r3, #4
 988 01c0 C7F80031 		str	r3, [r7, #256]
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 989              		.loc 1 320 0
 990 01c4 D7F80031 		ldr	r3, [r7, #256]
 991 01c8 1B68     		ldr	r3, [r3, #0]
 992 01ca C7F8B830 		str	r3, [r7, #184]
 993              	.LBB178:
 994              	.LBB179:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 995              		.loc 2 352 0
 996 01ce D7F8B830 		ldr	r3, [r7, #184]
 997              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 998 01d2 1CBA     		rev r4, r3
 999              	@ 0 "" 2
 1000              		.thumb
 1001 01d4 C7F8B440 		str	r4, [r7, #180]
 1002              		.loc 2 353 0
 1003 01d8 D7F8B430 		ldr	r3, [r7, #180]
 1004              	.LBE179:
 1005              	.LBE178:
 1006              		.loc 1 320 0
 1007 01dc FB63     		str	r3, [r7, #60]
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1008              		.loc 1 321 0
 1009 01de D7F80031 		ldr	r3, [r7, #256]
 1010 01e2 03F10403 		add	r3, r3, #4
 1011 01e6 C7F80031 		str	r3, [r7, #256]
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1012              		.loc 1 322 0
 1013 01ea D7F80031 		ldr	r3, [r7, #256]
 1014 01ee 1B68     		ldr	r3, [r3, #0]
 1015 01f0 C7F8B030 		str	r3, [r7, #176]
 1016              	.LBB180:
 1017              	.LBB181:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1018              		.loc 2 352 0
 1019 01f4 D7F8B030 		ldr	r3, [r7, #176]
 1020              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1021 01f8 1CBA     		rev r4, r3
 1022              	@ 0 "" 2
 1023              		.thumb
 1024 01fa C7F8AC40 		str	r4, [r7, #172]
 1025              		.loc 2 353 0
 1026 01fe D7F8AC30 		ldr	r3, [r7, #172]
 1027              	.LBE181:
 1028              	.LBE180:
 1029              		.loc 1 322 0
 1030 0202 3B64     		str	r3, [r7, #64]
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1031              		.loc 1 323 0
 1032 0204 8DE0     		b	.L25
 1033              	.L24:
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 256:
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 1034              		.loc 1 325 0
 1035 0206 4FF40073 		mov	r3, #512
 1036 020a A7F84A30 		strh	r3, [r7, #74]	@ movhi
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1037              		.loc 1 326 0
 1038 020e D7F80031 		ldr	r3, [r7, #256]
 1039 0212 1B68     		ldr	r3, [r3, #0]
 1040 0214 C7F8A830 		str	r3, [r7, #168]
 1041              	.LBB182:
 1042              	.LBB183:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1043              		.loc 2 352 0
 1044 0218 D7F8A830 		ldr	r3, [r7, #168]
 1045              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1046 021c 1CBA     		rev r4, r3
 1047              	@ 0 "" 2
 1048              		.thumb
 1049 021e C7F8A440 		str	r4, [r7, #164]
 1050              		.loc 2 353 0
 1051 0222 D7F8A430 		ldr	r3, [r7, #164]
 1052              	.LBE183:
 1053              	.LBE182:
 1054              		.loc 1 326 0
 1055 0226 7B62     		str	r3, [r7, #36]
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1056              		.loc 1 327 0
 1057 0228 D7F80031 		ldr	r3, [r7, #256]
 1058 022c 03F10403 		add	r3, r3, #4
 1059 0230 C7F80031 		str	r3, [r7, #256]
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 1060              		.loc 1 328 0
 1061 0234 D7F80031 		ldr	r3, [r7, #256]
 1062 0238 1B68     		ldr	r3, [r3, #0]
 1063 023a C7F8A030 		str	r3, [r7, #160]
 1064              	.LBB184:
 1065              	.LBB185:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1066              		.loc 2 352 0
 1067 023e D7F8A030 		ldr	r3, [r7, #160]
 1068              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1069 0242 1CBA     		rev r4, r3
 1070              	@ 0 "" 2
 1071              		.thumb
 1072 0244 C7F89C40 		str	r4, [r7, #156]
 1073              		.loc 2 353 0
 1074 0248 D7F89C30 		ldr	r3, [r7, #156]
 1075              	.LBE185:
 1076              	.LBE184:
 1077              		.loc 1 328 0
 1078 024c BB62     		str	r3, [r7, #40]
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1079              		.loc 1 329 0
 1080 024e D7F80031 		ldr	r3, [r7, #256]
 1081 0252 03F10403 		add	r3, r3, #4
 1082 0256 C7F80031 		str	r3, [r7, #256]
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1083              		.loc 1 330 0
 1084 025a D7F80031 		ldr	r3, [r7, #256]
 1085 025e 1B68     		ldr	r3, [r3, #0]
 1086 0260 C7F89830 		str	r3, [r7, #152]
 1087              	.LBB186:
 1088              	.LBB187:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1089              		.loc 2 352 0
 1090 0264 D7F89830 		ldr	r3, [r7, #152]
 1091              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1092 0268 1CBA     		rev r4, r3
 1093              	@ 0 "" 2
 1094              		.thumb
 1095 026a C7F89440 		str	r4, [r7, #148]
 1096              		.loc 2 353 0
 1097 026e D7F89430 		ldr	r3, [r7, #148]
 1098              	.LBE187:
 1099              	.LBE186:
 1100              		.loc 1 330 0
 1101 0272 FB62     		str	r3, [r7, #44]
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1102              		.loc 1 331 0
 1103 0274 D7F80031 		ldr	r3, [r7, #256]
 1104 0278 03F10403 		add	r3, r3, #4
 1105 027c C7F80031 		str	r3, [r7, #256]
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1106              		.loc 1 332 0
 1107 0280 D7F80031 		ldr	r3, [r7, #256]
 1108 0284 1B68     		ldr	r3, [r3, #0]
 1109 0286 C7F89030 		str	r3, [r7, #144]
 1110              	.LBB188:
 1111              	.LBB189:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1112              		.loc 2 352 0
 1113 028a D7F89030 		ldr	r3, [r7, #144]
 1114              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1115 028e 1CBA     		rev r4, r3
 1116              	@ 0 "" 2
 1117              		.thumb
 1118 0290 C7F88C40 		str	r4, [r7, #140]
 1119              		.loc 2 353 0
 1120 0294 D7F88C30 		ldr	r3, [r7, #140]
 1121              	.LBE189:
 1122              	.LBE188:
 1123              		.loc 1 332 0
 1124 0298 3B63     		str	r3, [r7, #48]
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1125              		.loc 1 333 0
 1126 029a D7F80031 		ldr	r3, [r7, #256]
 1127 029e 03F10403 		add	r3, r3, #4
 1128 02a2 C7F80031 		str	r3, [r7, #256]
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1129              		.loc 1 334 0
 1130 02a6 D7F80031 		ldr	r3, [r7, #256]
 1131 02aa 1B68     		ldr	r3, [r3, #0]
 1132 02ac C7F88830 		str	r3, [r7, #136]
 1133              	.LBB190:
 1134              	.LBB191:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1135              		.loc 2 352 0
 1136 02b0 D7F88830 		ldr	r3, [r7, #136]
 1137              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1138 02b4 1CBA     		rev r4, r3
 1139              	@ 0 "" 2
 1140              		.thumb
 1141 02b6 C7F88440 		str	r4, [r7, #132]
 1142              		.loc 2 353 0
 1143 02ba D7F88430 		ldr	r3, [r7, #132]
 1144              	.LBE191:
 1145              	.LBE190:
 1146              		.loc 1 334 0
 1147 02be 7B63     		str	r3, [r7, #52]
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1148              		.loc 1 335 0
 1149 02c0 D7F80031 		ldr	r3, [r7, #256]
 1150 02c4 03F10403 		add	r3, r3, #4
 1151 02c8 C7F80031 		str	r3, [r7, #256]
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1152              		.loc 1 336 0
 1153 02cc D7F80031 		ldr	r3, [r7, #256]
 1154 02d0 1B68     		ldr	r3, [r3, #0]
 1155 02d2 C7F88030 		str	r3, [r7, #128]
 1156              	.LBB192:
 1157              	.LBB193:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1158              		.loc 2 352 0
 1159 02d6 D7F88030 		ldr	r3, [r7, #128]
 1160              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1161 02da 1CBA     		rev r4, r3
 1162              	@ 0 "" 2
 1163              		.thumb
 1164 02dc FC67     		str	r4, [r7, #124]
 1165              		.loc 2 353 0
 1166 02de FB6F     		ldr	r3, [r7, #124]
 1167              	.LBE193:
 1168              	.LBE192:
 1169              		.loc 1 336 0
 1170 02e0 BB63     		str	r3, [r7, #56]
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1171              		.loc 1 337 0
 1172 02e2 D7F80031 		ldr	r3, [r7, #256]
 1173 02e6 03F10403 		add	r3, r3, #4
 1174 02ea C7F80031 		str	r3, [r7, #256]
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1175              		.loc 1 338 0
 1176 02ee D7F80031 		ldr	r3, [r7, #256]
 1177 02f2 1B68     		ldr	r3, [r3, #0]
 1178 02f4 BB67     		str	r3, [r7, #120]
 1179              	.LBB194:
 1180              	.LBB195:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1181              		.loc 2 352 0
 1182 02f6 BB6F     		ldr	r3, [r7, #120]
 1183              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1184 02f8 1CBA     		rev r4, r3
 1185              	@ 0 "" 2
 1186              		.thumb
 1187 02fa 7C67     		str	r4, [r7, #116]
 1188              		.loc 2 353 0
 1189 02fc 7B6F     		ldr	r3, [r7, #116]
 1190              	.LBE195:
 1191              	.LBE194:
 1192              		.loc 1 338 0
 1193 02fe FB63     		str	r3, [r7, #60]
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1194              		.loc 1 339 0
 1195 0300 D7F80031 		ldr	r3, [r7, #256]
 1196 0304 03F10403 		add	r3, r3, #4
 1197 0308 C7F80031 		str	r3, [r7, #256]
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1198              		.loc 1 340 0
 1199 030c D7F80031 		ldr	r3, [r7, #256]
 1200 0310 1B68     		ldr	r3, [r3, #0]
 1201 0312 3B67     		str	r3, [r7, #112]
 1202              	.LBB196:
 1203              	.LBB197:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1204              		.loc 2 352 0
 1205 0314 3B6F     		ldr	r3, [r7, #112]
 1206              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1207 0316 1CBA     		rev r4, r3
 1208              	@ 0 "" 2
 1209              		.thumb
 1210 0318 FC66     		str	r4, [r7, #108]
 1211              		.loc 2 353 0
 1212 031a FB6E     		ldr	r3, [r7, #108]
 1213              	.LBE197:
 1214              	.LBE196:
 1215              		.loc 1 340 0
 1216 031c 3B64     		str	r3, [r7, #64]
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1217              		.loc 1 341 0
 1218 031e 00E0     		b	.L25
 1219              	.L38:
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     default:
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1220              		.loc 1 343 0
 1221 0320 00BF     		nop
 1222              	.L25:
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 1223              		.loc 1 347 0
 1224 0322 D7F8FC30 		ldr	r3, [r7, #252]
 1225 0326 1B68     		ldr	r3, [r3, #0]
 1226 0328 BB66     		str	r3, [r7, #104]
 1227              	.LBB198:
 1228              	.LBB199:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1229              		.loc 2 352 0
 1230 032a BB6E     		ldr	r3, [r7, #104]
 1231              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1232 032c 1CBA     		rev r4, r3
 1233              	@ 0 "" 2
 1234              		.thumb
 1235 032e 7C66     		str	r4, [r7, #100]
 1236              		.loc 2 353 0
 1237 0330 7B6E     		ldr	r3, [r7, #100]
 1238              		.loc 1 347 0
 1239 0332 1A46     		mov	r2, r3
 1240              	.LBE199:
 1241              	.LBE198:
 1242 0334 07F11403 		add	r3, r7, #20
 1243 0338 1A60     		str	r2, [r3, #0]
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1244              		.loc 1 348 0
 1245 033a D7F8FC30 		ldr	r3, [r7, #252]
 1246 033e 03F10403 		add	r3, r3, #4
 1247 0342 C7F8FC30 		str	r3, [r7, #252]
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 1248              		.loc 1 349 0
 1249 0346 D7F8FC30 		ldr	r3, [r7, #252]
 1250 034a 1B68     		ldr	r3, [r3, #0]
 1251 034c 3B66     		str	r3, [r7, #96]
 1252              	.LBB200:
 1253              	.LBB201:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1254              		.loc 2 352 0
 1255 034e 3B6E     		ldr	r3, [r7, #96]
 1256              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1257 0350 1CBA     		rev r4, r3
 1258              	@ 0 "" 2
 1259              		.thumb
 1260 0352 FC65     		str	r4, [r7, #92]
 1261              		.loc 2 353 0
 1262 0354 FB6D     		ldr	r3, [r7, #92]
 1263              		.loc 1 349 0
 1264 0356 1A46     		mov	r2, r3
 1265              	.LBE201:
 1266              	.LBE200:
 1267 0358 07F11403 		add	r3, r7, #20
 1268 035c 5A60     		str	r2, [r3, #4]
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1269              		.loc 1 350 0
 1270 035e D7F8FC30 		ldr	r3, [r7, #252]
 1271 0362 03F10403 		add	r3, r3, #4
 1272 0366 C7F8FC30 		str	r3, [r7, #252]
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 1273              		.loc 1 351 0
 1274 036a D7F8FC30 		ldr	r3, [r7, #252]
 1275 036e 1B68     		ldr	r3, [r3, #0]
 1276 0370 BB65     		str	r3, [r7, #88]
 1277              	.LBB202:
 1278              	.LBB203:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1279              		.loc 2 352 0
 1280 0372 BB6D     		ldr	r3, [r7, #88]
 1281              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1282 0374 1CBA     		rev r4, r3
 1283              	@ 0 "" 2
 1284              		.thumb
 1285 0376 7C65     		str	r4, [r7, #84]
 1286              		.loc 2 353 0
 1287 0378 7B6D     		ldr	r3, [r7, #84]
 1288              		.loc 1 351 0
 1289 037a 1A46     		mov	r2, r3
 1290              	.LBE203:
 1291              	.LBE202:
 1292 037c 07F11403 		add	r3, r7, #20
 1293 0380 9A60     		str	r2, [r3, #8]
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 1294              		.loc 1 352 0
 1295 0382 D7F8FC30 		ldr	r3, [r7, #252]
 1296 0386 03F10403 		add	r3, r3, #4
 1297 038a C7F8FC30 		str	r3, [r7, #252]
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 1298              		.loc 1 353 0
 1299 038e D7F8FC30 		ldr	r3, [r7, #252]
 1300 0392 1B68     		ldr	r3, [r3, #0]
 1301 0394 3B65     		str	r3, [r7, #80]
 1302              	.LBB204:
 1303              	.LBB205:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1304              		.loc 2 352 0
 1305 0396 3B6D     		ldr	r3, [r7, #80]
 1306              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1307 0398 1CBA     		rev r4, r3
 1308              	@ 0 "" 2
 1309              		.thumb
 1310 039a FC64     		str	r4, [r7, #76]
 1311              		.loc 2 353 0
 1312 039c FB6C     		ldr	r3, [r7, #76]
 1313              		.loc 1 353 0
 1314 039e 1A46     		mov	r2, r3
 1315              	.LBE205:
 1316              	.LBE204:
 1317 03a0 07F11403 		add	r3, r7, #20
 1318 03a4 DA60     		str	r2, [r3, #12]
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 1319              		.loc 1 357 0
 1320 03a6 07F11003 		add	r3, r7, #16
 1321 03aa 03F1FF33 		add	r3, r3, #-1
 1322 03ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1323 03b0 002B     		cmp	r3, #0
 1324 03b2 42D1     		bne	.L26
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Flush IN/OUT FIFOs */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_FIFOFlush();
 1325              		.loc 1 360 0
 1326 03b4 FFF7FEFF 		bl	CRYP_FIFOFlush
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Key preparation for decryption process */
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1327              		.loc 1 363 0
 1328 03b8 4FF00403 		mov	r3, #4
 1329 03bc A7F84430 		strh	r3, [r7, #68]	@ movhi
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_Key;
 1330              		.loc 1 364 0
 1331 03c0 4FF03803 		mov	r3, #56
 1332 03c4 A7F84630 		strh	r3, [r7, #70]	@ movhi
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_32b;
 1333              		.loc 1 365 0
 1334 03c8 4FF00003 		mov	r3, #0
 1335 03cc A7F84830 		strh	r3, [r7, #72]	@ movhi
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Init(&AES_CRYP_InitStructure);
 1336              		.loc 1 367 0
 1337 03d0 07F14403 		add	r3, r7, #68
 1338 03d4 1846     		mov	r0, r3
 1339 03d6 FFF7FEFF 		bl	CRYP_Init
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Key Initialisation */
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1340              		.loc 1 370 0
 1341 03da 07F12403 		add	r3, r7, #36
 1342 03de 1846     		mov	r0, r3
 1343 03e0 FFF7FEFF 		bl	CRYP_KeyInit
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Enable Crypto processor */
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_Cmd(ENABLE);
 1344              		.loc 1 373 0
 1345 03e4 4FF00100 		mov	r0, #1
 1346 03e8 FFF7FEFF 		bl	CRYP_Cmd
 1347              	.L28:
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* wait until the Busy flag is RESET */
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 1348              		.loc 1 378 0 discriminator 1
 1349 03ec 4FF01000 		mov	r0, #16
 1350 03f0 FFF7FEFF 		bl	CRYP_GetFlagStatus
 1351 03f4 0346     		mov	r3, r0
 1352 03f6 C7F80431 		str	r3, [r7, #260]
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 1353              		.loc 1 379 0 discriminator 1
 1354 03fa 07F11003 		add	r3, r7, #16
 1355 03fe 1B68     		ldr	r3, [r3, #0]
 1356 0400 03F10102 		add	r2, r3, #1
 1357 0404 07F11003 		add	r3, r7, #16
 1358 0408 1A60     		str	r2, [r3, #0]
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1359              		.loc 1 380 0 discriminator 1
 1360 040a 07F11003 		add	r3, r7, #16
 1361 040e 1B68     		ldr	r3, [r3, #0]
 1362 0410 B3F5803F 		cmp	r3, #65536
 1363 0414 03D0     		beq	.L27
 1364 0416 D7F80431 		ldr	r3, [r7, #260]
 1365 041a 002B     		cmp	r3, #0
 1366 041c E6D1     		bne	.L28
 1367              	.L27:
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1368              		.loc 1 382 0
 1369 041e D7F80431 		ldr	r3, [r7, #260]
 1370 0422 002B     		cmp	r3, #0
 1371 0424 04D0     		beq	.L29
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1372              		.loc 1 384 0
 1373 0426 4FF00003 		mov	r3, #0
 1374 042a 87F81731 		strb	r3, [r7, #279]
 1375 042e 0DE0     		b	.L30
 1376              	.L29:
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Crypto Init for decryption process */  
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 1377              		.loc 1 389 0
 1378 0430 4FF00403 		mov	r3, #4
 1379 0434 A7F84430 		strh	r3, [r7, #68]	@ movhi
 1380 0438 08E0     		b	.L30
 1381              	.L26:
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 1382              		.loc 1 395 0
 1383 043a 07F12403 		add	r3, r7, #36
 1384 043e 1846     		mov	r0, r3
 1385 0440 FFF7FEFF 		bl	CRYP_KeyInit
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 1386              		.loc 1 398 0
 1387 0444 4FF00003 		mov	r3, #0
 1388 0448 A7F84430 		strh	r3, [r7, #68]	@ movhi
 1389              	.L30:
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CBC;
 1390              		.loc 1 400 0
 1391 044c 4FF02803 		mov	r3, #40
 1392 0450 A7F84630 		strh	r3, [r7, #70]	@ movhi
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 1393              		.loc 1 401 0
 1394 0454 4FF08003 		mov	r3, #128
 1395 0458 A7F84830 		strh	r3, [r7, #72]	@ movhi
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 1396              		.loc 1 402 0
 1397 045c 07F14403 		add	r3, r7, #68
 1398 0460 1846     		mov	r0, r3
 1399 0462 FFF7FEFF 		bl	CRYP_Init
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 1400              		.loc 1 405 0
 1401 0466 07F11403 		add	r3, r7, #20
 1402 046a 1846     		mov	r0, r3
 1403 046c FFF7FEFF 		bl	CRYP_IVInit
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 1404              		.loc 1 408 0
 1405 0470 FFF7FEFF 		bl	CRYP_FIFOFlush
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 1406              		.loc 1 411 0
 1407 0474 4FF00100 		mov	r0, #1
 1408 0478 FFF7FEFF 		bl	CRYP_Cmd
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1409              		.loc 1 414 0
 1410 047c 4FF00003 		mov	r3, #0
 1411 0480 C7F80831 		str	r3, [r7, #264]
 1412 0484 8CE0     		b	.L31
 1413              	.L37:
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1414              		.loc 1 418 0
 1415 0486 D7F81031 		ldr	r3, [r7, #272]
 1416 048a 1B68     		ldr	r3, [r3, #0]
 1417 048c 1846     		mov	r0, r3
 1418 048e FFF7FEFF 		bl	CRYP_DataIn
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1419              		.loc 1 419 0
 1420 0492 D7F81031 		ldr	r3, [r7, #272]
 1421 0496 03F10403 		add	r3, r3, #4
 1422 049a C7F81031 		str	r3, [r7, #272]
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1423              		.loc 1 420 0
 1424 049e D7F81031 		ldr	r3, [r7, #272]
 1425 04a2 1B68     		ldr	r3, [r3, #0]
 1426 04a4 1846     		mov	r0, r3
 1427 04a6 FFF7FEFF 		bl	CRYP_DataIn
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1428              		.loc 1 421 0
 1429 04aa D7F81031 		ldr	r3, [r7, #272]
 1430 04ae 03F10403 		add	r3, r3, #4
 1431 04b2 C7F81031 		str	r3, [r7, #272]
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1432              		.loc 1 422 0
 1433 04b6 D7F81031 		ldr	r3, [r7, #272]
 1434 04ba 1B68     		ldr	r3, [r3, #0]
 1435 04bc 1846     		mov	r0, r3
 1436 04be FFF7FEFF 		bl	CRYP_DataIn
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1437              		.loc 1 423 0
 1438 04c2 D7F81031 		ldr	r3, [r7, #272]
 1439 04c6 03F10403 		add	r3, r3, #4
 1440 04ca C7F81031 		str	r3, [r7, #272]
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 1441              		.loc 1 424 0
 1442 04ce D7F81031 		ldr	r3, [r7, #272]
 1443 04d2 1B68     		ldr	r3, [r3, #0]
 1444 04d4 1846     		mov	r0, r3
 1445 04d6 FFF7FEFF 		bl	CRYP_DataIn
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 1446              		.loc 1 425 0
 1447 04da D7F81031 		ldr	r3, [r7, #272]
 1448 04de 03F10403 		add	r3, r3, #4
 1449 04e2 C7F81031 		str	r3, [r7, #272]
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 1450              		.loc 1 427 0
 1451 04e6 07F11003 		add	r3, r7, #16
 1452 04ea 4FF00002 		mov	r2, #0
 1453 04ee 1A60     		str	r2, [r3, #0]
 1454              	.L33:
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 1455              		.loc 1 430 0 discriminator 1
 1456 04f0 4FF01000 		mov	r0, #16
 1457 04f4 FFF7FEFF 		bl	CRYP_GetFlagStatus
 1458 04f8 0346     		mov	r3, r0
 1459 04fa C7F80431 		str	r3, [r7, #260]
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 1460              		.loc 1 431 0 discriminator 1
 1461 04fe 07F11003 		add	r3, r7, #16
 1462 0502 1B68     		ldr	r3, [r3, #0]
 1463 0504 03F10102 		add	r2, r3, #1
 1464 0508 07F11003 		add	r3, r7, #16
 1465 050c 1A60     		str	r2, [r3, #0]
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 1466              		.loc 1 432 0 discriminator 1
 1467 050e 07F11003 		add	r3, r7, #16
 1468 0512 1B68     		ldr	r3, [r3, #0]
 1469 0514 B3F5803F 		cmp	r3, #65536
 1470 0518 03D0     		beq	.L32
 1471 051a D7F80431 		ldr	r3, [r7, #260]
 1472 051e 002B     		cmp	r3, #0
 1473 0520 E6D1     		bne	.L33
 1474              	.L32:
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 1475              		.loc 1 434 0
 1476 0522 D7F80431 		ldr	r3, [r7, #260]
 1477 0526 002B     		cmp	r3, #0
 1478 0528 04D0     		beq	.L34
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 1479              		.loc 1 436 0
 1480 052a 4FF00003 		mov	r3, #0
 1481 052e 87F81731 		strb	r3, [r7, #279]
 1482 0532 2FE0     		b	.L35
 1483              	.L34:
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1484              		.loc 1 442 0
 1485 0534 D7F80C41 		ldr	r4, [r7, #268]
 1486 0538 FFF7FEFF 		bl	CRYP_DataOut
 1487 053c 0346     		mov	r3, r0
 1488 053e 2360     		str	r3, [r4, #0]
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1489              		.loc 1 443 0
 1490 0540 D7F80C31 		ldr	r3, [r7, #268]
 1491 0544 03F10403 		add	r3, r3, #4
 1492 0548 C7F80C31 		str	r3, [r7, #268]
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1493              		.loc 1 444 0
 1494 054c D7F80C41 		ldr	r4, [r7, #268]
 1495 0550 FFF7FEFF 		bl	CRYP_DataOut
 1496 0554 0346     		mov	r3, r0
 1497 0556 2360     		str	r3, [r4, #0]
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1498              		.loc 1 445 0
 1499 0558 D7F80C31 		ldr	r3, [r7, #268]
 1500 055c 03F10403 		add	r3, r3, #4
 1501 0560 C7F80C31 		str	r3, [r7, #268]
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1502              		.loc 1 446 0
 1503 0564 D7F80C41 		ldr	r4, [r7, #268]
 1504 0568 FFF7FEFF 		bl	CRYP_DataOut
 1505 056c 0346     		mov	r3, r0
 1506 056e 2360     		str	r3, [r4, #0]
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1507              		.loc 1 447 0
 1508 0570 D7F80C31 		ldr	r3, [r7, #268]
 1509 0574 03F10403 		add	r3, r3, #4
 1510 0578 C7F80C31 		str	r3, [r7, #268]
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 1511              		.loc 1 448 0
 1512 057c D7F80C41 		ldr	r4, [r7, #268]
 1513 0580 FFF7FEFF 		bl	CRYP_DataOut
 1514 0584 0346     		mov	r3, r0
 1515 0586 2360     		str	r3, [r4, #0]
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 1516              		.loc 1 449 0
 1517 0588 D7F80C31 		ldr	r3, [r7, #268]
 1518 058c 03F10403 		add	r3, r3, #4
 1519 0590 C7F80C31 		str	r3, [r7, #268]
 1520              	.L35:
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1521              		.loc 1 414 0
 1522 0594 D7F80831 		ldr	r3, [r7, #264]
 1523 0598 03F11003 		add	r3, r3, #16
 1524 059c C7F80831 		str	r3, [r7, #264]
 1525              	.L31:
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1526              		.loc 1 414 0 is_stmt 0 discriminator 1
 1527 05a0 D7F80821 		ldr	r2, [r7, #264]
 1528 05a4 D7F82C31 		ldr	r3, [r7, #300]
 1529 05a8 9A42     		cmp	r2, r3
 1530 05aa 04D2     		bcs	.L36
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 1531              		.loc 1 414 0 discriminator 2
 1532 05ac 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 1533 05b0 002B     		cmp	r3, #0
 1534 05b2 7FF468AF 		bne	.L37
 1535              	.L36:
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 1536              		.loc 1 454 0 is_stmt 1
 1537 05b6 4FF00000 		mov	r0, #0
 1538 05ba FFF7FEFF 		bl	CRYP_Cmd
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   return status;
 1539              		.loc 1 456 0
 1540 05be 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** }
 1541              		.loc 1 457 0
 1542 05c2 1846     		mov	r0, r3
 1543 05c4 07F58E77 		add	r7, r7, #284
 1544 05c8 BD46     		mov	sp, r7
 1545 05ca 90BD     		pop	{r4, r7, pc}
 1546              		.cfi_endproc
 1547              	.LFE111:
 1549              		.section	.text.CRYP_AES_CTR,"ax",%progbits
 1550              		.align	2
 1551              		.global	CRYP_AES_CTR
 1552              		.thumb
 1553              		.thumb_func
 1555              	CRYP_AES_CTR:
 1556              	.LFB112:
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** /**
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @brief  Encrypt and decrypt using AES in CTR Mode
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Mode: encryption or decryption Mode.
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *           This parameter can be one of the following values:
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_ENCRYPT: Encryption
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *            @arg MODE_DECRYPT: Decryption
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  InitVectors: Initialisation Vectors used for AES algorithm.
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Key: Key used for AES algorithm.
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Keysize: length of the Key, must be a 128, 192 or 256.
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Input: pointer to the Input buffer.
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 16.
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @param  Output: pointer to the returned buffer.
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   * @retval An ErrorStatus enumeration value:
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - SUCCESS: Operation done
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   *          - ERROR: Operation failed
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   */
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** ErrorStatus CRYP_AES_CTR(uint8_t Mode, uint8_t InitVectors[16], uint8_t *Key, 
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint16_t Keysize, uint8_t *Input, uint32_t Ilength,
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****                          uint8_t *Output)
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** {
 1557              		.loc 1 478 0
 1558              		.cfi_startproc
 1559              		@ args = 12, pretend = 0, frame = 280
 1560              		@ frame_needed = 1, uses_anonymous_args = 0
 1561 0000 90B5     		push	{r4, r7, lr}
 1562              	.LCFI6:
 1563              		.cfi_def_cfa_offset 12
 1564              		.cfi_offset 14, -4
 1565              		.cfi_offset 7, -8
 1566              		.cfi_offset 4, -12
 1567 0002 C7B0     		sub	sp, sp, #284
 1568              	.LCFI7:
 1569              		.cfi_def_cfa_offset 296
 1570 0004 00AF     		add	r7, sp, #0
 1571              	.LCFI8:
 1572              		.cfi_def_cfa_register 7
 1573 0006 07F10804 		add	r4, r7, #8
 1574 000a 2160     		str	r1, [r4, #0]
 1575 000c 07F10401 		add	r1, r7, #4
 1576 0010 0A60     		str	r2, [r1, #0]
 1577 0012 1A46     		mov	r2, r3
 1578 0014 07F11003 		add	r3, r7, #16
 1579 0018 03F1FF33 		add	r3, r3, #-1
 1580 001c 0146     		mov	r1, r0
 1581 001e 1970     		strb	r1, [r3, #0]
 1582 0020 07F10C03 		add	r3, r7, #12
 1583 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_InitTypeDef AES_CRYP_InitStructure;
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInitTypeDef AES_CRYP_KeyInitStructure;
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInitTypeDef AES_CRYP_IVInitStructure;
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   __IO uint32_t counter = 0;
 1584              		.loc 1 482 0
 1585 0026 07F11003 		add	r3, r7, #16
 1586 002a 4FF00002 		mov	r2, #0
 1587 002e 1A60     		str	r2, [r3, #0]
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t busystatus = 0;
 1588              		.loc 1 483 0
 1589 0030 4FF00003 		mov	r3, #0
 1590 0034 C7F80431 		str	r3, [r7, #260]
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ErrorStatus status = SUCCESS;
 1591              		.loc 1 484 0
 1592 0038 4FF00103 		mov	r3, #1
 1593 003c 87F81731 		strb	r3, [r7, #279]
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t keyaddr    = (uint32_t)Key;
 1594              		.loc 1 485 0
 1595 0040 07F10403 		add	r3, r7, #4
 1596 0044 1B68     		ldr	r3, [r3, #0]
 1597 0046 C7F80031 		str	r3, [r7, #256]
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t inputaddr  = (uint32_t)Input;
 1598              		.loc 1 486 0
 1599 004a D7F82831 		ldr	r3, [r7, #296]
 1600 004e C7F81031 		str	r3, [r7, #272]
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t outputaddr = (uint32_t)Output;
 1601              		.loc 1 487 0
 1602 0052 D7F83031 		ldr	r3, [r7, #304]
 1603 0056 C7F80C31 		str	r3, [r7, #268]
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 1604              		.loc 1 488 0
 1605 005a 07F10803 		add	r3, r7, #8
 1606 005e 1B68     		ldr	r3, [r3, #0]
 1607 0060 C7F8FC30 		str	r3, [r7, #252]
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   uint32_t i = 0;
 1608              		.loc 1 489 0
 1609 0064 4FF00003 		mov	r3, #0
 1610 0068 C7F80831 		str	r3, [r7, #264]
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Crypto structures initialisation*/
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyStructInit(&AES_CRYP_KeyInitStructure);
 1611              		.loc 1 492 0
 1612 006c 07F12403 		add	r3, r7, #36
 1613 0070 1846     		mov	r0, r3
 1614 0072 FFF7FEFF 		bl	CRYP_KeyStructInit
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   switch(Keysize)
 1615              		.loc 1 494 0
 1616 0076 07F10C03 		add	r3, r7, #12
 1617 007a 1B88     		ldrh	r3, [r3, #0]
 1618 007c C02B     		cmp	r3, #192
 1619 007e 51D0     		beq	.L42
 1620 0080 B3F5807F 		cmp	r3, #256
 1621 0084 00F0BF80 		beq	.L43
 1622 0088 802B     		cmp	r3, #128
 1623 008a 40F04981 		bne	.L54
 1624              	.L41:
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 128:
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize = CRYP_KeySize_128b;
 1625              		.loc 1 497 0
 1626 008e 4FF00003 		mov	r3, #0
 1627 0092 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1628              		.loc 1 498 0
 1629 0096 D7F80031 		ldr	r3, [r7, #256]
 1630 009a 1B68     		ldr	r3, [r3, #0]
 1631 009c C7F8F830 		str	r3, [r7, #248]
 1632              	.LBB206:
 1633              	.LBB207:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1634              		.loc 2 352 0
 1635 00a0 D7F8F830 		ldr	r3, [r7, #248]
 1636              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1637 00a4 1CBA     		rev r4, r3
 1638              	@ 0 "" 2
 1639              		.thumb
 1640 00a6 C7F8F440 		str	r4, [r7, #244]
 1641              		.loc 2 353 0
 1642 00aa D7F8F430 		ldr	r3, [r7, #244]
 1643              	.LBE207:
 1644              	.LBE206:
 1645              		.loc 1 498 0
 1646 00ae 7B63     		str	r3, [r7, #52]
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1647              		.loc 1 499 0
 1648 00b0 D7F80031 		ldr	r3, [r7, #256]
 1649 00b4 03F10403 		add	r3, r3, #4
 1650 00b8 C7F80031 		str	r3, [r7, #256]
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1651              		.loc 1 500 0
 1652 00bc D7F80031 		ldr	r3, [r7, #256]
 1653 00c0 1B68     		ldr	r3, [r3, #0]
 1654 00c2 C7F8F030 		str	r3, [r7, #240]
 1655              	.LBB208:
 1656              	.LBB209:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1657              		.loc 2 352 0
 1658 00c6 D7F8F030 		ldr	r3, [r7, #240]
 1659              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1660 00ca 1CBA     		rev r4, r3
 1661              	@ 0 "" 2
 1662              		.thumb
 1663 00cc C7F8EC40 		str	r4, [r7, #236]
 1664              		.loc 2 353 0
 1665 00d0 D7F8EC30 		ldr	r3, [r7, #236]
 1666              	.LBE209:
 1667              	.LBE208:
 1668              		.loc 1 500 0
 1669 00d4 BB63     		str	r3, [r7, #56]
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1670              		.loc 1 501 0
 1671 00d6 D7F80031 		ldr	r3, [r7, #256]
 1672 00da 03F10403 		add	r3, r3, #4
 1673 00de C7F80031 		str	r3, [r7, #256]
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1674              		.loc 1 502 0
 1675 00e2 D7F80031 		ldr	r3, [r7, #256]
 1676 00e6 1B68     		ldr	r3, [r3, #0]
 1677 00e8 C7F8E830 		str	r3, [r7, #232]
 1678              	.LBB210:
 1679              	.LBB211:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1680              		.loc 2 352 0
 1681 00ec D7F8E830 		ldr	r3, [r7, #232]
 1682              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1683 00f0 1CBA     		rev r4, r3
 1684              	@ 0 "" 2
 1685              		.thumb
 1686 00f2 C7F8E440 		str	r4, [r7, #228]
 1687              		.loc 2 353 0
 1688 00f6 D7F8E430 		ldr	r3, [r7, #228]
 1689              	.LBE211:
 1690              	.LBE210:
 1691              		.loc 1 502 0
 1692 00fa FB63     		str	r3, [r7, #60]
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1693              		.loc 1 503 0
 1694 00fc D7F80031 		ldr	r3, [r7, #256]
 1695 0100 03F10403 		add	r3, r3, #4
 1696 0104 C7F80031 		str	r3, [r7, #256]
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1697              		.loc 1 504 0
 1698 0108 D7F80031 		ldr	r3, [r7, #256]
 1699 010c 1B68     		ldr	r3, [r3, #0]
 1700 010e C7F8E030 		str	r3, [r7, #224]
 1701              	.LBB212:
 1702              	.LBB213:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1703              		.loc 2 352 0
 1704 0112 D7F8E030 		ldr	r3, [r7, #224]
 1705              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1706 0116 1CBA     		rev r4, r3
 1707              	@ 0 "" 2
 1708              		.thumb
 1709 0118 C7F8DC40 		str	r4, [r7, #220]
 1710              		.loc 2 353 0
 1711 011c D7F8DC30 		ldr	r3, [r7, #220]
 1712              	.LBE213:
 1713              	.LBE212:
 1714              		.loc 1 504 0
 1715 0120 3B64     		str	r3, [r7, #64]
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1716              		.loc 1 505 0
 1717 0122 FEE0     		b	.L44
 1718              	.L42:
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 192:
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_192b;
 1719              		.loc 1 507 0
 1720 0124 4FF48073 		mov	r3, #256
 1721 0128 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1722              		.loc 1 508 0
 1723 012c D7F80031 		ldr	r3, [r7, #256]
 1724 0130 1B68     		ldr	r3, [r3, #0]
 1725 0132 C7F8D830 		str	r3, [r7, #216]
 1726              	.LBB214:
 1727              	.LBB215:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1728              		.loc 2 352 0
 1729 0136 D7F8D830 		ldr	r3, [r7, #216]
 1730              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1731 013a 1CBA     		rev r4, r3
 1732              	@ 0 "" 2
 1733              		.thumb
 1734 013c C7F8D440 		str	r4, [r7, #212]
 1735              		.loc 2 353 0
 1736 0140 D7F8D430 		ldr	r3, [r7, #212]
 1737              	.LBE215:
 1738              	.LBE214:
 1739              		.loc 1 508 0
 1740 0144 FB62     		str	r3, [r7, #44]
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1741              		.loc 1 509 0
 1742 0146 D7F80031 		ldr	r3, [r7, #256]
 1743 014a 03F10403 		add	r3, r3, #4
 1744 014e C7F80031 		str	r3, [r7, #256]
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1745              		.loc 1 510 0
 1746 0152 D7F80031 		ldr	r3, [r7, #256]
 1747 0156 1B68     		ldr	r3, [r3, #0]
 1748 0158 C7F8D030 		str	r3, [r7, #208]
 1749              	.LBB216:
 1750              	.LBB217:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1751              		.loc 2 352 0
 1752 015c D7F8D030 		ldr	r3, [r7, #208]
 1753              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1754 0160 1CBA     		rev r4, r3
 1755              	@ 0 "" 2
 1756              		.thumb
 1757 0162 C7F8CC40 		str	r4, [r7, #204]
 1758              		.loc 2 353 0
 1759 0166 D7F8CC30 		ldr	r3, [r7, #204]
 1760              	.LBE217:
 1761              	.LBE216:
 1762              		.loc 1 510 0
 1763 016a 3B63     		str	r3, [r7, #48]
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1764              		.loc 1 511 0
 1765 016c D7F80031 		ldr	r3, [r7, #256]
 1766 0170 03F10403 		add	r3, r3, #4
 1767 0174 C7F80031 		str	r3, [r7, #256]
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1768              		.loc 1 512 0
 1769 0178 D7F80031 		ldr	r3, [r7, #256]
 1770 017c 1B68     		ldr	r3, [r3, #0]
 1771 017e C7F8C830 		str	r3, [r7, #200]
 1772              	.LBB218:
 1773              	.LBB219:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1774              		.loc 2 352 0
 1775 0182 D7F8C830 		ldr	r3, [r7, #200]
 1776              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1777 0186 1CBA     		rev r4, r3
 1778              	@ 0 "" 2
 1779              		.thumb
 1780 0188 C7F8C440 		str	r4, [r7, #196]
 1781              		.loc 2 353 0
 1782 018c D7F8C430 		ldr	r3, [r7, #196]
 1783              	.LBE219:
 1784              	.LBE218:
 1785              		.loc 1 512 0
 1786 0190 7B63     		str	r3, [r7, #52]
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1787              		.loc 1 513 0
 1788 0192 D7F80031 		ldr	r3, [r7, #256]
 1789 0196 03F10403 		add	r3, r3, #4
 1790 019a C7F80031 		str	r3, [r7, #256]
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1791              		.loc 1 514 0
 1792 019e D7F80031 		ldr	r3, [r7, #256]
 1793 01a2 1B68     		ldr	r3, [r3, #0]
 1794 01a4 C7F8C030 		str	r3, [r7, #192]
 1795              	.LBB220:
 1796              	.LBB221:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1797              		.loc 2 352 0
 1798 01a8 D7F8C030 		ldr	r3, [r7, #192]
 1799              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1800 01ac 1CBA     		rev r4, r3
 1801              	@ 0 "" 2
 1802              		.thumb
 1803 01ae C7F8BC40 		str	r4, [r7, #188]
 1804              		.loc 2 353 0
 1805 01b2 D7F8BC30 		ldr	r3, [r7, #188]
 1806              	.LBE221:
 1807              	.LBE220:
 1808              		.loc 1 514 0
 1809 01b6 BB63     		str	r3, [r7, #56]
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1810              		.loc 1 515 0
 1811 01b8 D7F80031 		ldr	r3, [r7, #256]
 1812 01bc 03F10403 		add	r3, r3, #4
 1813 01c0 C7F80031 		str	r3, [r7, #256]
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 1814              		.loc 1 516 0
 1815 01c4 D7F80031 		ldr	r3, [r7, #256]
 1816 01c8 1B68     		ldr	r3, [r3, #0]
 1817 01ca C7F8B830 		str	r3, [r7, #184]
 1818              	.LBB222:
 1819              	.LBB223:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1820              		.loc 2 352 0
 1821 01ce D7F8B830 		ldr	r3, [r7, #184]
 1822              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1823 01d2 1CBA     		rev r4, r3
 1824              	@ 0 "" 2
 1825              		.thumb
 1826 01d4 C7F8B440 		str	r4, [r7, #180]
 1827              		.loc 2 353 0
 1828 01d8 D7F8B430 		ldr	r3, [r7, #180]
 1829              	.LBE223:
 1830              	.LBE222:
 1831              		.loc 1 516 0
 1832 01dc FB63     		str	r3, [r7, #60]
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1833              		.loc 1 517 0
 1834 01de D7F80031 		ldr	r3, [r7, #256]
 1835 01e2 03F10403 		add	r3, r3, #4
 1836 01e6 C7F80031 		str	r3, [r7, #256]
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 1837              		.loc 1 518 0
 1838 01ea D7F80031 		ldr	r3, [r7, #256]
 1839 01ee 1B68     		ldr	r3, [r3, #0]
 1840 01f0 C7F8B030 		str	r3, [r7, #176]
 1841              	.LBB224:
 1842              	.LBB225:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1843              		.loc 2 352 0
 1844 01f4 D7F8B030 		ldr	r3, [r7, #176]
 1845              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1846 01f8 1CBA     		rev r4, r3
 1847              	@ 0 "" 2
 1848              		.thumb
 1849 01fa C7F8AC40 		str	r4, [r7, #172]
 1850              		.loc 2 353 0
 1851 01fe D7F8AC30 		ldr	r3, [r7, #172]
 1852              	.LBE225:
 1853              	.LBE224:
 1854              		.loc 1 518 0
 1855 0202 3B64     		str	r3, [r7, #64]
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 1856              		.loc 1 519 0
 1857 0204 8DE0     		b	.L44
 1858              	.L43:
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     case 256:
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_KeySize  = CRYP_KeySize_256b;
 1859              		.loc 1 521 0
 1860 0206 4FF40073 		mov	r3, #512
 1861 020a A7F84A30 		strh	r3, [r7, #74]	@ movhi
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Left = __REV(*(uint32_t*)(keyaddr));
 1862              		.loc 1 522 0
 1863 020e D7F80031 		ldr	r3, [r7, #256]
 1864 0212 1B68     		ldr	r3, [r3, #0]
 1865 0214 C7F8A830 		str	r3, [r7, #168]
 1866              	.LBB226:
 1867              	.LBB227:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1868              		.loc 2 352 0
 1869 0218 D7F8A830 		ldr	r3, [r7, #168]
 1870              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1871 021c 1CBA     		rev r4, r3
 1872              	@ 0 "" 2
 1873              		.thumb
 1874 021e C7F8A440 		str	r4, [r7, #164]
 1875              		.loc 2 353 0
 1876 0222 D7F8A430 		ldr	r3, [r7, #164]
 1877              	.LBE227:
 1878              	.LBE226:
 1879              		.loc 1 522 0
 1880 0226 7B62     		str	r3, [r7, #36]
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1881              		.loc 1 523 0
 1882 0228 D7F80031 		ldr	r3, [r7, #256]
 1883 022c 03F10403 		add	r3, r3, #4
 1884 0230 C7F80031 		str	r3, [r7, #256]
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key0Right= __REV(*(uint32_t*)(keyaddr));
 1885              		.loc 1 524 0
 1886 0234 D7F80031 		ldr	r3, [r7, #256]
 1887 0238 1B68     		ldr	r3, [r3, #0]
 1888 023a C7F8A030 		str	r3, [r7, #160]
 1889              	.LBB228:
 1890              	.LBB229:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1891              		.loc 2 352 0
 1892 023e D7F8A030 		ldr	r3, [r7, #160]
 1893              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1894 0242 1CBA     		rev r4, r3
 1895              	@ 0 "" 2
 1896              		.thumb
 1897 0244 C7F89C40 		str	r4, [r7, #156]
 1898              		.loc 2 353 0
 1899 0248 D7F89C30 		ldr	r3, [r7, #156]
 1900              	.LBE229:
 1901              	.LBE228:
 1902              		.loc 1 524 0
 1903 024c BB62     		str	r3, [r7, #40]
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1904              		.loc 1 525 0
 1905 024e D7F80031 		ldr	r3, [r7, #256]
 1906 0252 03F10403 		add	r3, r3, #4
 1907 0256 C7F80031 		str	r3, [r7, #256]
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 1908              		.loc 1 526 0
 1909 025a D7F80031 		ldr	r3, [r7, #256]
 1910 025e 1B68     		ldr	r3, [r3, #0]
 1911 0260 C7F89830 		str	r3, [r7, #152]
 1912              	.LBB230:
 1913              	.LBB231:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1914              		.loc 2 352 0
 1915 0264 D7F89830 		ldr	r3, [r7, #152]
 1916              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1917 0268 1CBA     		rev r4, r3
 1918              	@ 0 "" 2
 1919              		.thumb
 1920 026a C7F89440 		str	r4, [r7, #148]
 1921              		.loc 2 353 0
 1922 026e D7F89430 		ldr	r3, [r7, #148]
 1923              	.LBE231:
 1924              	.LBE230:
 1925              		.loc 1 526 0
 1926 0272 FB62     		str	r3, [r7, #44]
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1927              		.loc 1 527 0
 1928 0274 D7F80031 		ldr	r3, [r7, #256]
 1929 0278 03F10403 		add	r3, r3, #4
 1930 027c C7F80031 		str	r3, [r7, #256]
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 1931              		.loc 1 528 0
 1932 0280 D7F80031 		ldr	r3, [r7, #256]
 1933 0284 1B68     		ldr	r3, [r3, #0]
 1934 0286 C7F89030 		str	r3, [r7, #144]
 1935              	.LBB232:
 1936              	.LBB233:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1937              		.loc 2 352 0
 1938 028a D7F89030 		ldr	r3, [r7, #144]
 1939              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1940 028e 1CBA     		rev r4, r3
 1941              	@ 0 "" 2
 1942              		.thumb
 1943 0290 C7F88C40 		str	r4, [r7, #140]
 1944              		.loc 2 353 0
 1945 0294 D7F88C30 		ldr	r3, [r7, #140]
 1946              	.LBE233:
 1947              	.LBE232:
 1948              		.loc 1 528 0
 1949 0298 3B63     		str	r3, [r7, #48]
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1950              		.loc 1 529 0
 1951 029a D7F80031 		ldr	r3, [r7, #256]
 1952 029e 03F10403 		add	r3, r3, #4
 1953 02a2 C7F80031 		str	r3, [r7, #256]
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Left = __REV(*(uint32_t*)(keyaddr));
 1954              		.loc 1 530 0
 1955 02a6 D7F80031 		ldr	r3, [r7, #256]
 1956 02aa 1B68     		ldr	r3, [r3, #0]
 1957 02ac C7F88830 		str	r3, [r7, #136]
 1958              	.LBB234:
 1959              	.LBB235:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1960              		.loc 2 352 0
 1961 02b0 D7F88830 		ldr	r3, [r7, #136]
 1962              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1963 02b4 1CBA     		rev r4, r3
 1964              	@ 0 "" 2
 1965              		.thumb
 1966 02b6 C7F88440 		str	r4, [r7, #132]
 1967              		.loc 2 353 0
 1968 02ba D7F88430 		ldr	r3, [r7, #132]
 1969              	.LBE235:
 1970              	.LBE234:
 1971              		.loc 1 530 0
 1972 02be 7B63     		str	r3, [r7, #52]
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1973              		.loc 1 531 0
 1974 02c0 D7F80031 		ldr	r3, [r7, #256]
 1975 02c4 03F10403 		add	r3, r3, #4
 1976 02c8 C7F80031 		str	r3, [r7, #256]
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key2Right= __REV(*(uint32_t*)(keyaddr));
 1977              		.loc 1 532 0
 1978 02cc D7F80031 		ldr	r3, [r7, #256]
 1979 02d0 1B68     		ldr	r3, [r3, #0]
 1980 02d2 C7F88030 		str	r3, [r7, #128]
 1981              	.LBB236:
 1982              	.LBB237:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 1983              		.loc 2 352 0
 1984 02d6 D7F88030 		ldr	r3, [r7, #128]
 1985              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 1986 02da 1CBA     		rev r4, r3
 1987              	@ 0 "" 2
 1988              		.thumb
 1989 02dc FC67     		str	r4, [r7, #124]
 1990              		.loc 2 353 0
 1991 02de FB6F     		ldr	r3, [r7, #124]
 1992              	.LBE237:
 1993              	.LBE236:
 1994              		.loc 1 532 0
 1995 02e0 BB63     		str	r3, [r7, #56]
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 1996              		.loc 1 533 0
 1997 02e2 D7F80031 		ldr	r3, [r7, #256]
 1998 02e6 03F10403 		add	r3, r3, #4
 1999 02ea C7F80031 		str	r3, [r7, #256]
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Left = __REV(*(uint32_t*)(keyaddr));
 2000              		.loc 1 534 0
 2001 02ee D7F80031 		ldr	r3, [r7, #256]
 2002 02f2 1B68     		ldr	r3, [r3, #0]
 2003 02f4 BB67     		str	r3, [r7, #120]
 2004              	.LBB238:
 2005              	.LBB239:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2006              		.loc 2 352 0
 2007 02f6 BB6F     		ldr	r3, [r7, #120]
 2008              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 2009 02f8 1CBA     		rev r4, r3
 2010              	@ 0 "" 2
 2011              		.thumb
 2012 02fa 7C67     		str	r4, [r7, #116]
 2013              		.loc 2 353 0
 2014 02fc 7B6F     		ldr	r3, [r7, #116]
 2015              	.LBE239:
 2016              	.LBE238:
 2017              		.loc 1 534 0
 2018 02fe FB63     		str	r3, [r7, #60]
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     keyaddr+=4;
 2019              		.loc 1 535 0
 2020 0300 D7F80031 		ldr	r3, [r7, #256]
 2021 0304 03F10403 		add	r3, r3, #4
 2022 0308 C7F80031 		str	r3, [r7, #256]
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_KeyInitStructure.CRYP_Key3Right= __REV(*(uint32_t*)(keyaddr));
 2023              		.loc 1 536 0
 2024 030c D7F80031 		ldr	r3, [r7, #256]
 2025 0310 1B68     		ldr	r3, [r3, #0]
 2026 0312 3B67     		str	r3, [r7, #112]
 2027              	.LBB240:
 2028              	.LBB241:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2029              		.loc 2 352 0
 2030 0314 3B6F     		ldr	r3, [r7, #112]
 2031              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 2032 0316 1CBA     		rev r4, r3
 2033              	@ 0 "" 2
 2034              		.thumb
 2035 0318 FC66     		str	r4, [r7, #108]
 2036              		.loc 2 353 0
 2037 031a FB6E     		ldr	r3, [r7, #108]
 2038              	.LBE241:
 2039              	.LBE240:
 2040              		.loc 1 536 0
 2041 031c 3B64     		str	r3, [r7, #64]
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 2042              		.loc 1 537 0
 2043 031e 00E0     		b	.L44
 2044              	.L54:
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     default:
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     break;
 2045              		.loc 1 539 0
 2046 0320 00BF     		nop
 2047              	.L44:
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 2048              		.loc 1 542 0
 2049 0322 D7F8FC30 		ldr	r3, [r7, #252]
 2050 0326 1B68     		ldr	r3, [r3, #0]
 2051 0328 BB66     		str	r3, [r7, #104]
 2052              	.LBB242:
 2053              	.LBB243:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2054              		.loc 2 352 0
 2055 032a BB6E     		ldr	r3, [r7, #104]
 2056              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 2057 032c 1CBA     		rev r4, r3
 2058              	@ 0 "" 2
 2059              		.thumb
 2060 032e 7C66     		str	r4, [r7, #100]
 2061              		.loc 2 353 0
 2062 0330 7B6E     		ldr	r3, [r7, #100]
 2063              		.loc 1 542 0
 2064 0332 1A46     		mov	r2, r3
 2065              	.LBE243:
 2066              	.LBE242:
 2067 0334 07F11403 		add	r3, r7, #20
 2068 0338 1A60     		str	r2, [r3, #0]
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2069              		.loc 1 543 0
 2070 033a D7F8FC30 		ldr	r3, [r7, #252]
 2071 033e 03F10403 		add	r3, r3, #4
 2072 0342 C7F8FC30 		str	r3, [r7, #252]
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 2073              		.loc 1 544 0
 2074 0346 D7F8FC30 		ldr	r3, [r7, #252]
 2075 034a 1B68     		ldr	r3, [r3, #0]
 2076 034c 3B66     		str	r3, [r7, #96]
 2077              	.LBB244:
 2078              	.LBB245:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2079              		.loc 2 352 0
 2080 034e 3B6E     		ldr	r3, [r7, #96]
 2081              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 2082 0350 1CBA     		rev r4, r3
 2083              	@ 0 "" 2
 2084              		.thumb
 2085 0352 FC65     		str	r4, [r7, #92]
 2086              		.loc 2 353 0
 2087 0354 FB6D     		ldr	r3, [r7, #92]
 2088              		.loc 1 544 0
 2089 0356 1A46     		mov	r2, r3
 2090              	.LBE245:
 2091              	.LBE244:
 2092 0358 07F11403 		add	r3, r7, #20
 2093 035c 5A60     		str	r2, [r3, #4]
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2094              		.loc 1 545 0
 2095 035e D7F8FC30 		ldr	r3, [r7, #252]
 2096 0362 03F10403 		add	r3, r3, #4
 2097 0366 C7F8FC30 		str	r3, [r7, #252]
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Left = __REV(*(uint32_t*)(ivaddr));
 2098              		.loc 1 546 0
 2099 036a D7F8FC30 		ldr	r3, [r7, #252]
 2100 036e 1B68     		ldr	r3, [r3, #0]
 2101 0370 BB65     		str	r3, [r7, #88]
 2102              	.LBB246:
 2103              	.LBB247:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2104              		.loc 2 352 0
 2105 0372 BB6D     		ldr	r3, [r7, #88]
 2106              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 2107 0374 1CBA     		rev r4, r3
 2108              	@ 0 "" 2
 2109              		.thumb
 2110 0376 7C65     		str	r4, [r7, #84]
 2111              		.loc 2 353 0
 2112 0378 7B6D     		ldr	r3, [r7, #84]
 2113              		.loc 1 546 0
 2114 037a 1A46     		mov	r2, r3
 2115              	.LBE247:
 2116              	.LBE246:
 2117 037c 07F11403 		add	r3, r7, #20
 2118 0380 9A60     		str	r2, [r3, #8]
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   ivaddr+=4;
 2119              		.loc 1 547 0
 2120 0382 D7F8FC30 		ldr	r3, [r7, #252]
 2121 0386 03F10403 		add	r3, r3, #4
 2122 038a C7F8FC30 		str	r3, [r7, #252]
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_IVInitStructure.CRYP_IV1Right= __REV(*(uint32_t*)(ivaddr));
 2123              		.loc 1 548 0
 2124 038e D7F8FC30 		ldr	r3, [r7, #252]
 2125 0392 1B68     		ldr	r3, [r3, #0]
 2126 0394 3B65     		str	r3, [r7, #80]
 2127              	.LBB248:
 2128              	.LBB249:
 352:E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include\core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 2129              		.loc 2 352 0
 2130 0396 3B6D     		ldr	r3, [r7, #80]
 2131              	@ 352 "E:\Desktop\thundercyer-the-alarm-clock\CMSIS\Include/core_cmInstr.h" 1
 2132 0398 1CBA     		rev r4, r3
 2133              	@ 0 "" 2
 2134              		.thumb
 2135 039a FC64     		str	r4, [r7, #76]
 2136              		.loc 2 353 0
 2137 039c FB6C     		ldr	r3, [r7, #76]
 2138              		.loc 1 548 0
 2139 039e 1A46     		mov	r2, r3
 2140              	.LBE249:
 2141              	.LBE248:
 2142 03a0 07F11403 		add	r3, r7, #20
 2143 03a4 DA60     		str	r2, [r3, #12]
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Key Initialisation */
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_KeyInit(&AES_CRYP_KeyInitStructure);
 2144              		.loc 1 551 0
 2145 03a6 07F12403 		add	r3, r7, #36
 2146 03aa 1846     		mov	r0, r3
 2147 03ac FFF7FEFF 		bl	CRYP_KeyInit
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Decryption ------------------*/
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   if(Mode == MODE_DECRYPT) /* AES decryption */
 2148              		.loc 1 554 0
 2149 03b0 07F11003 		add	r3, r7, #16
 2150 03b4 03F1FF33 		add	r3, r3, #-1
 2151 03b8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2152 03ba 002B     		cmp	r3, #0
 2153 03bc 04D1     		bne	.L45
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for decryption process */
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Decrypt;
 2154              		.loc 1 557 0
 2155 03be 4FF00403 		mov	r3, #4
 2156 03c2 A7F84430 		strh	r3, [r7, #68]	@ movhi
 2157 03c6 03E0     		b	.L46
 2158              	.L45:
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /*------------------ AES Encryption ------------------*/
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   else /* AES encryption */
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Crypto Init for Encryption process */
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     AES_CRYP_InitStructure.CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 2159              		.loc 1 563 0
 2160 03c8 4FF00003 		mov	r3, #0
 2161 03cc A7F84430 		strh	r3, [r7, #68]	@ movhi
 2162              	.L46:
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_AES_CTR;
 2163              		.loc 1 565 0
 2164 03d0 4FF03003 		mov	r3, #48
 2165 03d4 A7F84630 		strh	r3, [r7, #70]	@ movhi
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   AES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 2166              		.loc 1 566 0
 2167 03d8 4FF08003 		mov	r3, #128
 2168 03dc A7F84830 		strh	r3, [r7, #72]	@ movhi
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Init(&AES_CRYP_InitStructure);
 2169              		.loc 1 567 0
 2170 03e0 07F14403 		add	r3, r7, #68
 2171 03e4 1846     		mov	r0, r3
 2172 03e6 FFF7FEFF 		bl	CRYP_Init
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* CRYP Initialization Vectors */
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_IVInit(&AES_CRYP_IVInitStructure);
 2173              		.loc 1 570 0
 2174 03ea 07F11403 		add	r3, r7, #20
 2175 03ee 1846     		mov	r0, r3
 2176 03f0 FFF7FEFF 		bl	CRYP_IVInit
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Flush IN/OUT FIFOs */
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_FIFOFlush();
 2177              		.loc 1 573 0
 2178 03f4 FFF7FEFF 		bl	CRYP_FIFOFlush
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Enable Crypto processor */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(ENABLE);
 2179              		.loc 1 576 0
 2180 03f8 4FF00100 		mov	r0, #1
 2181 03fc FFF7FEFF 		bl	CRYP_Cmd
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2182              		.loc 1 578 0
 2183 0400 4FF00003 		mov	r3, #0
 2184 0404 C7F80831 		str	r3, [r7, #264]
 2185 0408 8CE0     		b	.L47
 2186              	.L53:
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   {
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Write the Input block in the IN FIFO */
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2187              		.loc 1 582 0
 2188 040a D7F81031 		ldr	r3, [r7, #272]
 2189 040e 1B68     		ldr	r3, [r3, #0]
 2190 0410 1846     		mov	r0, r3
 2191 0412 FFF7FEFF 		bl	CRYP_DataIn
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2192              		.loc 1 583 0
 2193 0416 D7F81031 		ldr	r3, [r7, #272]
 2194 041a 03F10403 		add	r3, r3, #4
 2195 041e C7F81031 		str	r3, [r7, #272]
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2196              		.loc 1 584 0
 2197 0422 D7F81031 		ldr	r3, [r7, #272]
 2198 0426 1B68     		ldr	r3, [r3, #0]
 2199 0428 1846     		mov	r0, r3
 2200 042a FFF7FEFF 		bl	CRYP_DataIn
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2201              		.loc 1 585 0
 2202 042e D7F81031 		ldr	r3, [r7, #272]
 2203 0432 03F10403 		add	r3, r3, #4
 2204 0436 C7F81031 		str	r3, [r7, #272]
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2205              		.loc 1 586 0
 2206 043a D7F81031 		ldr	r3, [r7, #272]
 2207 043e 1B68     		ldr	r3, [r3, #0]
 2208 0440 1846     		mov	r0, r3
 2209 0442 FFF7FEFF 		bl	CRYP_DataIn
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2210              		.loc 1 587 0
 2211 0446 D7F81031 		ldr	r3, [r7, #272]
 2212 044a 03F10403 		add	r3, r3, #4
 2213 044e C7F81031 		str	r3, [r7, #272]
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 2214              		.loc 1 588 0
 2215 0452 D7F81031 		ldr	r3, [r7, #272]
 2216 0456 1B68     		ldr	r3, [r3, #0]
 2217 0458 1846     		mov	r0, r3
 2218 045a FFF7FEFF 		bl	CRYP_DataIn
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     inputaddr+=4;
 2219              		.loc 1 589 0
 2220 045e D7F81031 		ldr	r3, [r7, #272]
 2221 0462 03F10403 		add	r3, r3, #4
 2222 0466 C7F81031 		str	r3, [r7, #272]
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     /* Wait until the complete message has been processed */
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     counter = 0;
 2223              		.loc 1 591 0
 2224 046a 07F11003 		add	r3, r7, #16
 2225 046e 4FF00002 		mov	r2, #0
 2226 0472 1A60     		str	r2, [r3, #0]
 2227              	.L49:
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     do
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 2228              		.loc 1 594 0 discriminator 1
 2229 0474 4FF01000 		mov	r0, #16
 2230 0478 FFF7FEFF 		bl	CRYP_GetFlagStatus
 2231 047c 0346     		mov	r3, r0
 2232 047e C7F80431 		str	r3, [r7, #260]
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       counter++;
 2233              		.loc 1 595 0 discriminator 1
 2234 0482 07F11003 		add	r3, r7, #16
 2235 0486 1B68     		ldr	r3, [r3, #0]
 2236 0488 03F10102 		add	r2, r3, #1
 2237 048c 07F11003 		add	r3, r7, #16
 2238 0490 1A60     		str	r2, [r3, #0]
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }while ((counter != AESBUSY_TIMEOUT) && (busystatus != RESET));
 2239              		.loc 1 596 0 discriminator 1
 2240 0492 07F11003 		add	r3, r7, #16
 2241 0496 1B68     		ldr	r3, [r3, #0]
 2242 0498 B3F5803F 		cmp	r3, #65536
 2243 049c 03D0     		beq	.L48
 2244 049e D7F80431 		ldr	r3, [r7, #260]
 2245 04a2 002B     		cmp	r3, #0
 2246 04a4 E6D1     		bne	.L49
 2247              	.L48:
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     if (busystatus != RESET)
 2248              		.loc 1 598 0
 2249 04a6 D7F80431 		ldr	r3, [r7, #260]
 2250 04aa 002B     		cmp	r3, #0
 2251 04ac 04D0     		beq	.L50
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****    {
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****        status = ERROR;
 2252              		.loc 1 600 0
 2253 04ae 4FF00003 		mov	r3, #0
 2254 04b2 87F81731 		strb	r3, [r7, #279]
 2255 04b6 2FE0     		b	.L51
 2256              	.L50:
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     else
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     {
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       /* Read the Output block from the Output FIFO */
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2257              		.loc 1 606 0
 2258 04b8 D7F80C41 		ldr	r4, [r7, #268]
 2259 04bc FFF7FEFF 		bl	CRYP_DataOut
 2260 04c0 0346     		mov	r3, r0
 2261 04c2 2360     		str	r3, [r4, #0]
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2262              		.loc 1 607 0
 2263 04c4 D7F80C31 		ldr	r3, [r7, #268]
 2264 04c8 03F10403 		add	r3, r3, #4
 2265 04cc C7F80C31 		str	r3, [r7, #268]
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2266              		.loc 1 608 0
 2267 04d0 D7F80C41 		ldr	r4, [r7, #268]
 2268 04d4 FFF7FEFF 		bl	CRYP_DataOut
 2269 04d8 0346     		mov	r3, r0
 2270 04da 2360     		str	r3, [r4, #0]
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2271              		.loc 1 609 0
 2272 04dc D7F80C31 		ldr	r3, [r7, #268]
 2273 04e0 03F10403 		add	r3, r3, #4
 2274 04e4 C7F80C31 		str	r3, [r7, #268]
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2275              		.loc 1 610 0
 2276 04e8 D7F80C41 		ldr	r4, [r7, #268]
 2277 04ec FFF7FEFF 		bl	CRYP_DataOut
 2278 04f0 0346     		mov	r3, r0
 2279 04f2 2360     		str	r3, [r4, #0]
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2280              		.loc 1 611 0
 2281 04f4 D7F80C31 		ldr	r3, [r7, #268]
 2282 04f8 03F10403 		add	r3, r3, #4
 2283 04fc C7F80C31 		str	r3, [r7, #268]
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 2284              		.loc 1 612 0
 2285 0500 D7F80C41 		ldr	r4, [r7, #268]
 2286 0504 FFF7FEFF 		bl	CRYP_DataOut
 2287 0508 0346     		mov	r3, r0
 2288 050a 2360     		str	r3, [r4, #0]
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****       outputaddr+=4;
 2289              		.loc 1 613 0
 2290 050c D7F80C31 		ldr	r3, [r7, #268]
 2291 0510 03F10403 		add	r3, r3, #4
 2292 0514 C7F80C31 		str	r3, [r7, #268]
 2293              	.L51:
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2294              		.loc 1 578 0
 2295 0518 D7F80831 		ldr	r3, [r7, #264]
 2296 051c 03F11003 		add	r3, r3, #16
 2297 0520 C7F80831 		str	r3, [r7, #264]
 2298              	.L47:
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2299              		.loc 1 578 0 is_stmt 0 discriminator 1
 2300 0524 D7F80821 		ldr	r2, [r7, #264]
 2301 0528 D7F82C31 		ldr	r3, [r7, #300]
 2302 052c 9A42     		cmp	r2, r3
 2303 052e 04D2     		bcs	.L52
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=16)
 2304              		.loc 1 578 0 discriminator 2
 2305 0530 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 2306 0534 002B     		cmp	r3, #0
 2307 0536 7FF468AF 		bne	.L53
 2308              	.L52:
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****     }
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   }
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   /* Disable Crypto */
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   CRYP_Cmd(DISABLE);
 2309              		.loc 1 617 0 is_stmt 1
 2310 053a 4FF00000 		mov	r0, #0
 2311 053e FFF7FEFF 		bl	CRYP_Cmd
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** 
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c ****   return status;
 2312              		.loc 1 619 0
 2313 0542 97F81731 		ldrb	r3, [r7, #279]	@ zero_extendqisi2
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_aes.c **** }
 2314              		.loc 1 620 0
 2315 0546 1846     		mov	r0, r3
 2316 0548 07F58E77 		add	r7, r7, #284
 2317 054c BD46     		mov	sp, r7
 2318 054e 90BD     		pop	{r4, r7, pc}
 2319              		.cfi_endproc
 2320              	.LFE112:
 2322              		.text
 2323              	.Letext0:
 2324              		.file 3 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 2325              		.file 4 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4xx.h"
 2326              		.file 5 "E:\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_cryp.
 2327              		.file 6 "E:\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp_aes.c
C:\Users\Alex\AppData\Local\Temp\ccYfG4t9.s:19     .text.CRYP_AES_ECB:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccYfG4t9.s:24     .text.CRYP_AES_ECB:00000000 CRYP_AES_ECB
C:\Users\Alex\AppData\Local\Temp\ccYfG4t9.s:725    .text.CRYP_AES_CBC:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccYfG4t9.s:730    .text.CRYP_AES_CBC:00000000 CRYP_AES_CBC
C:\Users\Alex\AppData\Local\Temp\ccYfG4t9.s:1550   .text.CRYP_AES_CTR:00000000 $t
C:\Users\Alex\AppData\Local\Temp\ccYfG4t9.s:1555   .text.CRYP_AES_CTR:00000000 CRYP_AES_CTR
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_FIFOFlush
CRYP_Init
CRYP_KeyInit
CRYP_Cmd
CRYP_GetFlagStatus
CRYP_DataIn
CRYP_DataOut
CRYP_IVInit
