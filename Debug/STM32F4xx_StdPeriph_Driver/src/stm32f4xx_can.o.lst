   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_can.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CAN_DeInit,"ax",%progbits
  19              		.align	1
  20              		.global	CAN_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	CAN_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  27              		.loc 1 163 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 3, -8
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
  37              		.loc 1 167 0
  38 0002 0B4B     		ldr	r3, .L4
  39 0004 9842     		cmp	r0, r3
  40 0006 07D1     		bne	.L2
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
  41              		.loc 1 170 0
  42 0008 4FF00070 		mov	r0, #33554432
  43              	.LVL1:
  44 000c 0121     		movs	r1, #1
  45 000e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  46              		.loc 1 172 0
  47 0012 4FF00070 		mov	r0, #33554432
  48 0016 06E0     		b	.L3
  49              	.LVL2:
  50              	.L2:
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
  51              		.loc 1 177 0
  52 0018 4FF08060 		mov	r0, #67108864
  53              	.LVL3:
  54 001c 0121     		movs	r1, #1
  55 001e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  56              		.loc 1 179 0
  57 0022 4FF08060 		mov	r0, #67108864
  58              	.L3:
  59 0026 0021     		movs	r1, #0
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  60              		.loc 1 181 0
  61 0028 BDE80840 		pop	{r3, lr}
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  62              		.loc 1 179 0
  63 002c FFF7FEBF 		b	RCC_APB1PeriphResetCmd
  64              	.L5:
  65              		.align	2
  66              	.L4:
  67 0030 00640040 		.word	1073767424
  68              		.cfi_endproc
  69              	.LFE110:
  71              		.section	.text.CAN_Init,"ax",%progbits
  72              		.align	1
  73              		.global	CAN_Init
  74              		.thumb
  75              		.thumb_func
  77              	CAN_Init:
  78              	.LFB111:
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  79              		.loc 1 193 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL4:
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
  85              		.loc 1 211 0
  86 0000 0368     		ldr	r3, [r0, #0]
  87 0002 23F00203 		bic	r3, r3, #2
  88 0006 0360     		str	r3, [r0, #0]
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
  89              		.loc 1 214 0
  90 0008 0368     		ldr	r3, [r0, #0]
  91 000a 43F00103 		orr	r3, r3, #1
  92 000e 0360     		str	r3, [r0, #0]
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
  93              		.loc 1 217 0
  94 0010 4FF48033 		mov	r3, #65536
  95              	.LVL5:
  96              	.L8:
  97              		.loc 1 217 0 is_stmt 0 discriminator 1
  98 0014 4268     		ldr	r2, [r0, #4]
  99 0016 D207     		lsls	r2, r2, #31
 100 0018 01D4     		bmi	.L7
 101              		.loc 1 217 0 discriminator 2
 102 001a 013B     		subs	r3, r3, #1
 103 001c FAD1     		bne	.L8
 104              	.L7:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 105              		.loc 1 223 0 is_stmt 1
 106 001e 4368     		ldr	r3, [r0, #4]
 107 0020 13F00103 		ands	r3, r3, #1
 108 0024 56D0     		beq	.L24
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 109              		.loc 1 230 0
 110 0026 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 111 0028 012B     		cmp	r3, #1
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 112              		.loc 1 232 0
 113 002a 0368     		ldr	r3, [r0, #0]
 114 002c 0CBF     		ite	eq
 115 002e 43F08003 		orreq	r3, r3, #128
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 116              		.loc 1 236 0
 117 0032 23F08003 		bicne	r3, r3, #128
 118 0036 0360     		str	r3, [r0, #0]
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 119              		.loc 1 240 0
 120 0038 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 121 003a 012B     		cmp	r3, #1
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 122              		.loc 1 242 0
 123 003c 0368     		ldr	r3, [r0, #0]
 124 003e 0CBF     		ite	eq
 125 0040 43F04003 		orreq	r3, r3, #64
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 126              		.loc 1 246 0
 127 0044 23F04003 		bicne	r3, r3, #64
 128 0048 0360     		str	r3, [r0, #0]
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 129              		.loc 1 250 0
 130 004a 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 131 004c 012B     		cmp	r3, #1
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 132              		.loc 1 252 0
 133 004e 0368     		ldr	r3, [r0, #0]
 134 0050 0CBF     		ite	eq
 135 0052 43F02003 		orreq	r3, r3, #32
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 136              		.loc 1 256 0
 137 0056 23F02003 		bicne	r3, r3, #32
 138 005a 0360     		str	r3, [r0, #0]
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 139              		.loc 1 260 0
 140 005c 4B7A     		ldrb	r3, [r1, #9]	@ zero_extendqisi2
 141 005e 012B     		cmp	r3, #1
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 142              		.loc 1 262 0
 143 0060 0368     		ldr	r3, [r0, #0]
 144 0062 0CBF     		ite	eq
 145 0064 43F01003 		orreq	r3, r3, #16
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 146              		.loc 1 266 0
 147 0068 23F01003 		bicne	r3, r3, #16
 148 006c 0360     		str	r3, [r0, #0]
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 149              		.loc 1 270 0
 150 006e 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 151 0070 012B     		cmp	r3, #1
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 152              		.loc 1 272 0
 153 0072 0368     		ldr	r3, [r0, #0]
 154 0074 0CBF     		ite	eq
 155 0076 43F00803 		orreq	r3, r3, #8
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 156              		.loc 1 276 0
 157 007a 23F00803 		bicne	r3, r3, #8
 158 007e 0360     		str	r3, [r0, #0]
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 159              		.loc 1 280 0
 160 0080 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 161 0082 012B     		cmp	r3, #1
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 162              		.loc 1 282 0
 163 0084 0368     		ldr	r3, [r0, #0]
 164 0086 0CBF     		ite	eq
 165 0088 43F00403 		orreq	r3, r3, #4
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 166              		.loc 1 286 0
 167 008c 23F00403 		bicne	r3, r3, #4
 168 0090 0360     		str	r3, [r0, #0]
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 169              		.loc 1 290 0
 170 0092 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 171              		.loc 1 291 0
 172 0094 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 173              		.loc 1 290 0
 174 0096 9B07     		lsls	r3, r3, #30
 175 0098 43EA0263 		orr	r3, r3, r2, lsl #24
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 176              		.loc 1 292 0
 177 009c 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 178              		.loc 1 291 0
 179 009e 43EA0243 		orr	r3, r3, r2, lsl #16
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 180              		.loc 1 293 0
 181 00a2 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 182              		.loc 1 292 0
 183 00a4 43EA0253 		orr	r3, r3, r2, lsl #20
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 184              		.loc 1 294 0
 185 00a8 0A88     		ldrh	r2, [r1, #0]
 186 00aa 013A     		subs	r2, r2, #1
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 187              		.loc 1 293 0
 188 00ac 1343     		orrs	r3, r3, r2
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 189              		.loc 1 290 0
 190 00ae C361     		str	r3, [r0, #28]
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 191              		.loc 1 297 0
 192 00b0 0368     		ldr	r3, [r0, #0]
 193 00b2 23F00103 		bic	r3, r3, #1
 194 00b6 0360     		str	r3, [r0, #0]
 195              	.LVL6:
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 196              		.loc 1 302 0
 197 00b8 4FF48033 		mov	r3, #65536
 198              	.LVL7:
 199              	.L23:
 200              		.loc 1 302 0 is_stmt 0 discriminator 1
 201 00bc 4268     		ldr	r2, [r0, #4]
 202 00be D207     		lsls	r2, r2, #31
 203 00c0 01D5     		bpl	.L22
 204              		.loc 1 302 0 discriminator 2
 205 00c2 013B     		subs	r3, r3, #1
 206 00c4 FAD1     		bne	.L23
 207              	.L22:
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 208              		.loc 1 308 0 is_stmt 1
 209 00c6 4368     		ldr	r3, [r0, #4]
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 210              		.loc 1 225 0
 211 00c8 13F0010F 		tst	r3, #1
 212 00cc 14BF     		ite	ne
 213 00ce 0020     		movne	r0, #0
 214 00d0 0120     		moveq	r0, #1
 215              	.LVL8:
 216 00d2 7047     		bx	lr
 217              	.LVL9:
 218              	.L24:
 219 00d4 1846     		mov	r0, r3
 220              	.LVL10:
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 221              		.loc 1 320 0
 222 00d6 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE111:
 226              		.section	.text.CAN_FilterInit,"ax",%progbits
 227              		.align	1
 228              		.global	CAN_FilterInit
 229              		.thumb
 230              		.thumb_func
 232              	CAN_FilterInit:
 233              	.LFB112:
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 234              		.loc 1 330 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              	.LVL11:
 239 0000 70B5     		push	{r4, r5, r6, lr}
 240              	.LCFI1:
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 14, -4
 243              		.cfi_offset 6, -8
 244              		.cfi_offset 5, -12
 245              		.cfi_offset 4, -16
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 246              		.loc 1 339 0
 247 0002 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 248 0004 0121     		movs	r1, #1
 249 0006 9940     		lsls	r1, r1, r3
 250              	.LVL12:
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 251              		.loc 1 342 0
 252 0008 344B     		ldr	r3, .L42
 253 000a D3F80022 		ldr	r2, [r3, #512]
 254 000e 42F00102 		orr	r2, r2, #1
 255 0012 C3F80022 		str	r2, [r3, #512]
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 256              		.loc 1 345 0
 257 0016 D3F81C22 		ldr	r2, [r3, #540]
 258 001a CC43     		mvns	r4, r1
 259 001c 2240     		ands	r2, r2, r4
 260 001e C3F81C22 		str	r2, [r3, #540]
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 261              		.loc 1 348 0
 262 0022 027B     		ldrb	r2, [r0, #12]	@ zero_extendqisi2
 263 0024 AAB9     		cbnz	r2, .L34
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 264              		.loc 1 351 0
 265 0026 D3F80C22 		ldr	r2, [r3, #524]
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 266              		.loc 1 356 0
 267 002a C688     		ldrh	r6, [r0, #6]
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 268              		.loc 1 357 0
 269 002c 4588     		ldrh	r5, [r0, #2]
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 270              		.loc 1 351 0
 271 002e 2240     		ands	r2, r2, r4
 272 0030 C3F80C22 		str	r2, [r3, #524]
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 273              		.loc 1 355 0
 274 0034 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 275 0036 4832     		adds	r2, r2, #72
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 276              		.loc 1 356 0
 277 0038 45EA0645 		orr	r5, r5, r6, lsl #16
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 278              		.loc 1 355 0
 279 003c 43F83250 		str	r5, [r3, r2, lsl #3]
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 280              		.loc 1 363 0
 281 0040 0388     		ldrh	r3, [r0, #0]
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 282              		.loc 1 362 0
 283 0042 8288     		ldrh	r2, [r0, #4]
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 284              		.loc 1 361 0
 285 0044 857A     		ldrb	r5, [r0, #10]	@ zero_extendqisi2
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 286              		.loc 1 362 0
 287 0046 43EA0242 		orr	r2, r3, r2, lsl #16
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 288              		.loc 1 361 0
 289 004a 254B     		ldr	r3, .L42+4
 290 004c ED00     		lsls	r5, r5, #3
 291 004e EB18     		adds	r3, r5, r3
 292 0050 5A60     		str	r2, [r3, #4]
 293              	.L34:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 294              		.loc 1 366 0
 295 0052 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 296 0054 012B     		cmp	r3, #1
 297 0056 16D1     		bne	.L35
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 298              		.loc 1 369 0
 299 0058 204B     		ldr	r3, .L42
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 300              		.loc 1 372 0
 301 005a 0688     		ldrh	r6, [r0, #0]
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 302              		.loc 1 369 0
 303 005c D3F80C22 		ldr	r2, [r3, #524]
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 304              		.loc 1 373 0
 305 0060 4588     		ldrh	r5, [r0, #2]
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 306              		.loc 1 369 0
 307 0062 0A43     		orrs	r2, r2, r1
 308 0064 C3F80C22 		str	r2, [r3, #524]
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 309              		.loc 1 371 0
 310 0068 827A     		ldrb	r2, [r0, #10]	@ zero_extendqisi2
 311 006a 4832     		adds	r2, r2, #72
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 312              		.loc 1 372 0
 313 006c 45EA0645 		orr	r5, r5, r6, lsl #16
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 314              		.loc 1 371 0
 315 0070 43F83250 		str	r5, [r3, r2, lsl #3]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 316              		.loc 1 377 0
 317 0074 C388     		ldrh	r3, [r0, #6]
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 318              		.loc 1 376 0
 319 0076 8288     		ldrh	r2, [r0, #4]
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 320              		.loc 1 375 0
 321 0078 857A     		ldrb	r5, [r0, #10]	@ zero_extendqisi2
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 322              		.loc 1 376 0
 323 007a 43EA0242 		orr	r2, r3, r2, lsl #16
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 324              		.loc 1 375 0
 325 007e 184B     		ldr	r3, .L42+4
 326 0080 ED00     		lsls	r5, r5, #3
 327 0082 EB18     		adds	r3, r5, r3
 328 0084 5A60     		str	r2, [r3, #4]
 329              	.L35:
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 330              		.loc 1 381 0
 331 0086 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 332 0088 144A     		ldr	r2, .L42
 333 008a 1BB9     		cbnz	r3, .L36
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 334              		.loc 1 384 0
 335 008c D2F80432 		ldr	r3, [r2, #516]
 336 0090 2340     		ands	r3, r3, r4
 337 0092 02E0     		b	.L41
 338              	.L36:
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 339              		.loc 1 389 0
 340 0094 D2F80432 		ldr	r3, [r2, #516]
 341 0098 0B43     		orrs	r3, r3, r1
 342              	.L41:
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 343              		.loc 1 393 0
 344 009a 0589     		ldrh	r5, [r0, #8]
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 345              		.loc 1 389 0
 346 009c C2F80432 		str	r3, [r2, #516]
 347 00a0 0E4B     		ldr	r3, .L42
 348              		.loc 1 393 0
 349 00a2 2DB9     		cbnz	r5, .L38
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 350              		.loc 1 396 0
 351 00a4 D2F81452 		ldr	r5, [r2, #532]
 352 00a8 2C40     		ands	r4, r4, r5
 353 00aa C2F81442 		str	r4, [r2, #532]
 354 00ae 06E0     		b	.L39
 355              	.L38:
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 356              		.loc 1 399 0
 357 00b0 012D     		cmp	r5, #1
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 358              		.loc 1 402 0
 359 00b2 02BF     		ittt	eq
 360 00b4 D3F81422 		ldreq	r2, [r3, #532]
 361 00b8 0A43     		orreq	r2, r1, r2
 362 00ba C3F81422 		streq	r2, [r3, #532]
 363              	.L39:
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 364              		.loc 1 406 0
 365 00be 427B     		ldrb	r2, [r0, #13]	@ zero_extendqisi2
 366 00c0 012A     		cmp	r2, #1
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 367              		.loc 1 408 0
 368 00c2 02BF     		ittt	eq
 369 00c4 D3F81C22 		ldreq	r2, [r3, #540]
 370 00c8 1143     		orreq	r1, r1, r2
 371              	.LVL13:
 372 00ca C3F81C12 		streq	r1, [r3, #540]
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 373              		.loc 1 412 0
 374 00ce D3F80022 		ldr	r2, [r3, #512]
 375 00d2 22F00102 		bic	r2, r2, #1
 376 00d6 C3F80022 		str	r2, [r3, #512]
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 377              		.loc 1 413 0
 378 00da 70BD     		pop	{r4, r5, r6, pc}
 379              	.L43:
 380              		.align	2
 381              	.L42:
 382 00dc 00640040 		.word	1073767424
 383 00e0 40660040 		.word	1073768000
 384              		.cfi_endproc
 385              	.LFE112:
 387              		.section	.text.CAN_StructInit,"ax",%progbits
 388              		.align	1
 389              		.global	CAN_StructInit
 390              		.thumb
 391              		.thumb_func
 393              	CAN_StructInit:
 394              	.LFB113:
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 395              		.loc 1 421 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400              	.LVL14:
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 401              		.loc 1 425 0
 402 0000 0023     		movs	r3, #0
 403 0002 8371     		strb	r3, [r0, #6]
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 404              		.loc 1 428 0
 405 0004 C371     		strb	r3, [r0, #7]
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 406              		.loc 1 431 0
 407 0006 0372     		strb	r3, [r0, #8]
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 408              		.loc 1 434 0
 409 0008 4372     		strb	r3, [r0, #9]
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 410              		.loc 1 437 0
 411 000a 8372     		strb	r3, [r0, #10]
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 412              		.loc 1 440 0
 413 000c C372     		strb	r3, [r0, #11]
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 414              		.loc 1 443 0
 415 000e 8370     		strb	r3, [r0, #2]
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 416              		.loc 1 446 0
 417 0010 C370     		strb	r3, [r0, #3]
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 418              		.loc 1 449 0
 419 0012 0323     		movs	r3, #3
 420 0014 0371     		strb	r3, [r0, #4]
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 421              		.loc 1 452 0
 422 0016 0223     		movs	r3, #2
 423 0018 4371     		strb	r3, [r0, #5]
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 424              		.loc 1 455 0
 425 001a 0123     		movs	r3, #1
 426 001c 0380     		strh	r3, [r0, #0]	@ movhi
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 427              		.loc 1 456 0
 428 001e 7047     		bx	lr
 429              		.cfi_endproc
 430              	.LFE113:
 432              		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 433              		.align	1
 434              		.global	CAN_SlaveStartBank
 435              		.thumb
 436              		.thumb_func
 438              	CAN_SlaveStartBank:
 439              	.LFB114:
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 440              		.loc 1 464 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445              	.LVL15:
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 446              		.loc 1 469 0
 447 0000 0D4B     		ldr	r3, .L46
 448 0002 D3F80022 		ldr	r2, [r3, #512]
 449 0006 42F00102 		orr	r2, r2, #1
 450 000a C3F80022 		str	r2, [r3, #512]
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 451              		.loc 1 472 0
 452 000e D3F80022 		ldr	r2, [r3, #512]
 453 0012 22F47C52 		bic	r2, r2, #16128
 454 0016 22F00E02 		bic	r2, r2, #14
 455 001a C3F80022 		str	r2, [r3, #512]
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 456              		.loc 1 473 0
 457 001e D3F80022 		ldr	r2, [r3, #512]
 458 0022 42EA0020 		orr	r0, r2, r0, lsl #8
 459              	.LVL16:
 460 0026 C3F80002 		str	r0, [r3, #512]
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 461              		.loc 1 476 0
 462 002a D3F80022 		ldr	r2, [r3, #512]
 463 002e 22F00102 		bic	r2, r2, #1
 464 0032 C3F80022 		str	r2, [r3, #512]
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 465              		.loc 1 477 0
 466 0036 7047     		bx	lr
 467              	.L47:
 468              		.align	2
 469              	.L46:
 470 0038 00640040 		.word	1073767424
 471              		.cfi_endproc
 472              	.LFE114:
 474              		.section	.text.CAN_DBGFreeze,"ax",%progbits
 475              		.align	1
 476              		.global	CAN_DBGFreeze
 477              		.thumb
 478              		.thumb_func
 480              	CAN_DBGFreeze:
 481              	.LFB115:
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 482              		.loc 1 489 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487              	.LVL17:
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 488              		.loc 1 497 0
 489 0000 0368     		ldr	r3, [r0, #0]
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 490              		.loc 1 494 0
 491 0002 11B1     		cbz	r1, .L49
 492              		.loc 1 497 0
 493 0004 43F48033 		orr	r3, r3, #65536
 494 0008 01E0     		b	.L51
 495              	.L49:
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 496              		.loc 1 502 0
 497 000a 23F48033 		bic	r3, r3, #65536
 498              	.L51:
 499 000e 0360     		str	r3, [r0, #0]
 500 0010 7047     		bx	lr
 501              		.cfi_endproc
 502              	.LFE115:
 504              		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 505              		.align	1
 506              		.global	CAN_TTComModeCmd
 507              		.thumb
 508              		.thumb_func
 510              	CAN_TTComModeCmd:
 511              	.LFB116:
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 512              		.loc 1 519 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517              	.LVL18:
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 518              		.loc 1 526 0
 519 0000 0368     		ldr	r3, [r0, #0]
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 520              		.loc 1 523 0
 521 0002 99B1     		cbz	r1, .L53
 522              		.loc 1 526 0
 523 0004 43F08003 		orr	r3, r3, #128
 524 0008 0360     		str	r3, [r0, #0]
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 525              		.loc 1 529 0
 526 000a D0F88431 		ldr	r3, [r0, #388]
 527 000e 43F48073 		orr	r3, r3, #256
 528 0012 C0F88431 		str	r3, [r0, #388]
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 529              		.loc 1 530 0
 530 0016 D0F89431 		ldr	r3, [r0, #404]
 531 001a 43F48073 		orr	r3, r3, #256
 532 001e C0F89431 		str	r3, [r0, #404]
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 533              		.loc 1 531 0
 534 0022 D0F8A431 		ldr	r3, [r0, #420]
 535 0026 43F48073 		orr	r3, r3, #256
 536 002a 12E0     		b	.L55
 537              	.L53:
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 538              		.loc 1 536 0
 539 002c 23F08003 		bic	r3, r3, #128
 540 0030 0360     		str	r3, [r0, #0]
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 541              		.loc 1 539 0
 542 0032 D0F88431 		ldr	r3, [r0, #388]
 543 0036 23F48073 		bic	r3, r3, #256
 544 003a C0F88431 		str	r3, [r0, #388]
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 545              		.loc 1 540 0
 546 003e D0F89431 		ldr	r3, [r0, #404]
 547 0042 23F48073 		bic	r3, r3, #256
 548 0046 C0F89431 		str	r3, [r0, #404]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 549              		.loc 1 541 0
 550 004a D0F8A431 		ldr	r3, [r0, #420]
 551 004e 23F48073 		bic	r3, r3, #256
 552              	.L55:
 553 0052 C0F8A431 		str	r3, [r0, #420]
 554 0056 7047     		bx	lr
 555              		.cfi_endproc
 556              	.LFE116:
 558              		.section	.text.CAN_Transmit,"ax",%progbits
 559              		.align	1
 560              		.global	CAN_Transmit
 561              		.thumb
 562              		.thumb_func
 564              	CAN_Transmit:
 565              	.LFB117:
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 566              		.loc 1 573 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              	.LVL19:
 571 0000 70B5     		push	{r4, r5, r6, lr}
 572              	.LCFI2:
 573              		.cfi_def_cfa_offset 16
 574              		.cfi_offset 14, -4
 575              		.cfi_offset 6, -8
 576              		.cfi_offset 5, -12
 577              		.cfi_offset 4, -16
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 578              		.loc 1 582 0
 579 0002 8268     		ldr	r2, [r0, #8]
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 580              		.loc 1 573 0
 581 0004 0346     		mov	r3, r0
 582              		.loc 1 582 0
 583 0006 5001     		lsls	r0, r2, #5
 584              	.LVL20:
 585 0008 07D4     		bmi	.L61
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 586              		.loc 1 586 0
 587 000a 9A68     		ldr	r2, [r3, #8]
 588 000c 1201     		lsls	r2, r2, #4
 589 000e 06D4     		bmi	.L62
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 590              		.loc 1 590 0
 591 0010 9A68     		ldr	r2, [r3, #8]
 592 0012 D000     		lsls	r0, r2, #3
 593 0014 4AD5     		bpl	.L63
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 594              		.loc 1 592 0
 595 0016 0220     		movs	r0, #2
 596 0018 02E0     		b	.L57
 597              	.L61:
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 598              		.loc 1 584 0
 599 001a 0020     		movs	r0, #0
 600 001c 00E0     		b	.L57
 601              	.L62:
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 602              		.loc 1 588 0
 603 001e 0120     		movs	r0, #1
 604              	.L57:
 605              	.LVL21:
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 606              		.loc 1 602 0
 607 0020 00F11802 		add	r2, r0, #24
 608 0024 1201     		lsls	r2, r2, #4
 609 0026 9C58     		ldr	r4, [r3, r2]
 610 0028 04F00104 		and	r4, r4, #1
 611 002c 9C50     		str	r4, [r3, r2]
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 612              		.loc 1 603 0
 613 002e 0C7A     		ldrb	r4, [r1, #8]	@ zero_extendqisi2
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 614              		.loc 1 606 0
 615 0030 9D58     		ldr	r5, [r3, r2]
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 616              		.loc 1 603 0
 617 0032 24B9     		cbnz	r4, .L59
 618              		.loc 1 606 0
 619 0034 0E68     		ldr	r6, [r1, #0]
 620 0036 4C7A     		ldrb	r4, [r1, #9]	@ zero_extendqisi2
 621 0038 44EA4654 		orr	r4, r4, r6, lsl #21
 622 003c 04E0     		b	.L64
 623              	.L59:
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 624              		.loc 1 612 0
 625 003e 4E68     		ldr	r6, [r1, #4]
 626 0040 44EAC604 		orr	r4, r4, r6, lsl #3
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 627              		.loc 1 613 0
 628 0044 2C43     		orrs	r4, r4, r5
 629 0046 4D7A     		ldrb	r5, [r1, #9]	@ zero_extendqisi2
 630              	.L64:
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 631              		.loc 1 612 0
 632 0048 2C43     		orrs	r4, r4, r5
 633 004a 9C50     		str	r4, [r3, r2]
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 634              		.loc 1 618 0
 635 004c 8A7A     		ldrb	r2, [r1, #10]	@ zero_extendqisi2
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 636              		.loc 1 619 0
 637 004e 00F11804 		add	r4, r0, #24
 638 0052 2401     		lsls	r4, r4, #4
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 639              		.loc 1 618 0
 640 0054 02F00F02 		and	r2, r2, #15
 641 0058 8A72     		strb	r2, [r1, #10]
 642              		.loc 1 619 0
 643 005a 1A19     		adds	r2, r3, r4
 644 005c 5568     		ldr	r5, [r2, #4]
 645 005e 25F00F05 		bic	r5, r5, #15
 646 0062 5560     		str	r5, [r2, #4]
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 647              		.loc 1 620 0
 648 0064 5568     		ldr	r5, [r2, #4]
 649 0066 8E7A     		ldrb	r6, [r1, #10]	@ zero_extendqisi2
 650 0068 3543     		orrs	r5, r5, r6
 651 006a 5560     		str	r5, [r2, #4]
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 652              		.loc 1 624 0
 653 006c 4E7B     		ldrb	r6, [r1, #13]	@ zero_extendqisi2
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 654              		.loc 1 623 0
 655 006e 8A7B     		ldrb	r2, [r1, #14]	@ zero_extendqisi2
 656              		.loc 1 624 0
 657 0070 3604     		lsls	r6, r6, #16
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 658              		.loc 1 623 0
 659 0072 46EA0266 		orr	r6, r6, r2, lsl #24
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 660              		.loc 1 626 0
 661 0076 CA7A     		ldrb	r2, [r1, #11]	@ zero_extendqisi2
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 662              		.loc 1 624 0
 663 0078 1643     		orrs	r6, r6, r2
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 664              		.loc 1 625 0
 665 007a 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
 666 007c 46EA0226 		orr	r6, r6, r2, lsl #8
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 667              		.loc 1 623 0
 668 0080 03EB0012 		add	r2, r3, r0, lsl #4
 669 0084 02F5C475 		add	r5, r2, #392
 670 0088 C2F88861 		str	r6, [r2, #392]
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 671              		.loc 1 628 0
 672 008c 4A7C     		ldrb	r2, [r1, #17]	@ zero_extendqisi2
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 673              		.loc 1 627 0
 674 008e 8E7C     		ldrb	r6, [r1, #18]	@ zero_extendqisi2
 675              		.loc 1 628 0
 676 0090 1204     		lsls	r2, r2, #16
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 677              		.loc 1 627 0
 678 0092 42EA0662 		orr	r2, r2, r6, lsl #24
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 679              		.loc 1 630 0
 680 0096 CE7B     		ldrb	r6, [r1, #15]	@ zero_extendqisi2
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 681              		.loc 1 629 0
 682 0098 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
 683              	.LVL22:
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 684              		.loc 1 628 0
 685 009a 3243     		orrs	r2, r2, r6
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 686              		.loc 1 629 0
 687 009c 42EA0122 		orr	r2, r2, r1, lsl #8
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 688              		.loc 1 627 0
 689 00a0 6A60     		str	r2, [r5, #4]
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 690              		.loc 1 632 0
 691 00a2 1A59     		ldr	r2, [r3, r4]
 692 00a4 42F00102 		orr	r2, r2, #1
 693 00a8 1A51     		str	r2, [r3, r4]
 694 00aa 70BD     		pop	{r4, r5, r6, pc}
 695              	.LVL23:
 696              	.L63:
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 697              		.loc 1 596 0
 698 00ac 0420     		movs	r0, #4
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 699              		.loc 1 635 0
 700 00ae 70BD     		pop	{r4, r5, r6, pc}
 701              		.cfi_endproc
 702              	.LFE117:
 704              		.section	.text.CAN_TransmitStatus,"ax",%progbits
 705              		.align	1
 706              		.global	CAN_TransmitStatus
 707              		.thumb
 708              		.thumb_func
 710              	CAN_TransmitStatus:
 711              	.LFB118:
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 712              		.loc 1 645 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717              	.LVL24:
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 718              		.loc 1 652 0
 719 0000 0129     		cmp	r1, #1
 720 0002 07D0     		beq	.L68
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 721              		.loc 1 655 0
 722 0004 3CBF     		itt	cc
 723 0006 8268     		ldrcc	r2, [r0, #8]
 724 0008 0F4B     		ldrcc	r3, .L81
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 725              		.loc 1 652 0
 726 000a 08D3     		bcc	.L79
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 727              		.loc 1 664 0
 728 000c 0023     		movs	r3, #0
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 729              		.loc 1 652 0
 730 000e 0229     		cmp	r1, #2
 731 0010 06D1     		bne	.L66
 732 0012 02E0     		b	.L80
 733              	.L68:
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 734              		.loc 1 658 0
 735 0014 8268     		ldr	r2, [r0, #8]
 736 0016 0D4B     		ldr	r3, .L81+4
 737 0018 01E0     		b	.L79
 738              	.L80:
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 739              		.loc 1 661 0
 740 001a 8268     		ldr	r2, [r0, #8]
 741 001c 0C4B     		ldr	r3, .L81+8
 742              	.L79:
 743 001e 1340     		ands	r3, r3, r2
 744              	.LVL25:
 745              	.L66:
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 746              		.loc 1 667 0
 747 0020 094A     		ldr	r2, .L81
 748 0022 9342     		cmp	r3, r2
 749 0024 0BD0     		beq	.L74
 750 0026 01D8     		bhi	.L75
 751 0028 3BB1     		cbz	r3, .L71
 752 002a 0AE0     		b	.L77
 753              	.L75:
 754 002c 074A     		ldr	r2, .L81+4
 755 002e 9342     		cmp	r3, r2
 756 0030 05D0     		beq	.L74
 757 0032 074A     		ldr	r2, .L81+8
 758 0034 9342     		cmp	r3, r2
 759 0036 04D1     		bne	.L77
 760 0038 01E0     		b	.L74
 761              	.L71:
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 762              		.loc 1 670 0
 763 003a 0220     		movs	r0, #2
 764              	.LVL26:
 765 003c 7047     		bx	lr
 766              	.LVL27:
 767              	.L74:
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 768              		.loc 1 684 0
 769 003e 0120     		movs	r0, #1
 770              	.LVL28:
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 771              		.loc 1 685 0
 772 0040 7047     		bx	lr
 773              	.LVL29:
 774              	.L77:
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 775              		.loc 1 673 0
 776 0042 0020     		movs	r0, #0
 777              	.LVL30:
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 778              		.loc 1 690 0
 779 0044 7047     		bx	lr
 780              	.L82:
 781 0046 00BF     		.align	2
 782              	.L81:
 783 0048 03000004 		.word	67108867
 784 004c 00030008 		.word	134218496
 785 0050 00000310 		.word	268632064
 786              		.cfi_endproc
 787              	.LFE118:
 789              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 790              		.align	1
 791              		.global	CAN_CancelTransmit
 792              		.thumb
 793              		.thumb_func
 795              	CAN_CancelTransmit:
 796              	.LFB119:
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 797              		.loc 1 699 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              		@ link register save eliminated.
 802              	.LVL31:
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 803              		.loc 1 704 0
 804 0000 0129     		cmp	r1, #1
 805 0002 07D0     		beq	.L86
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 806              		.loc 1 706 0
 807 0004 3CBF     		itt	cc
 808 0006 8368     		ldrcc	r3, [r0, #8]
 809 0008 43F08003 		orrcc	r3, r3, #128
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 810              		.loc 1 704 0
 811 000c 05D3     		bcc	.L88
 812 000e 0229     		cmp	r1, #2
 813 0010 09D1     		bne	.L83
 814 0012 04E0     		b	.L89
 815              	.L86:
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 816              		.loc 1 708 0
 817 0014 8368     		ldr	r3, [r0, #8]
 818 0016 43F40043 		orr	r3, r3, #32768
 819              	.L88:
 820 001a 8360     		str	r3, [r0, #8]
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 821              		.loc 1 709 0
 822 001c 7047     		bx	lr
 823              	.L89:
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 824              		.loc 1 710 0
 825 001e 8368     		ldr	r3, [r0, #8]
 826 0020 43F40003 		orr	r3, r3, #8388608
 827 0024 8360     		str	r3, [r0, #8]
 828              	.L83:
 829 0026 7047     		bx	lr
 830              		.cfi_endproc
 831              	.LFE119:
 833              		.section	.text.CAN_Receive,"ax",%progbits
 834              		.align	1
 835              		.global	CAN_Receive
 836              		.thumb
 837              		.thumb_func
 839              	CAN_Receive:
 840              	.LFB120:
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 841              		.loc 1 746 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              	.LVL32:
 846 0000 30B5     		push	{r4, r5, lr}
 847              	.LCFI3:
 848              		.cfi_def_cfa_offset 12
 849              		.cfi_offset 14, -4
 850              		.cfi_offset 5, -8
 851              		.cfi_offset 4, -12
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 852              		.loc 1 751 0
 853 0002 01F11B04 		add	r4, r1, #27
 854 0006 2301     		lsls	r3, r4, #4
 855 0008 C558     		ldr	r5, [r0, r3]
 856 000a 05F00405 		and	r5, r5, #4
 857 000e EDB2     		uxtb	r5, r5
 858 0010 1572     		strb	r5, [r2, #8]
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 859              		.loc 1 754 0
 860 0012 C358     		ldr	r3, [r0, r3]
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 861              		.loc 1 752 0
 862 0014 15B9     		cbnz	r5, .L91
 863              		.loc 1 754 0
 864 0016 5B0D     		lsrs	r3, r3, #21
 865 0018 1360     		str	r3, [r2, #0]
 866 001a 01E0     		b	.L92
 867              	.L91:
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 868              		.loc 1 758 0
 869 001c DB08     		lsrs	r3, r3, #3
 870 001e 5360     		str	r3, [r2, #4]
 871              	.L92:
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 872              		.loc 1 761 0
 873 0020 2401     		lsls	r4, r4, #4
 874 0022 0319     		adds	r3, r0, r4
 875 0024 0459     		ldr	r4, [r0, r4]
 876 0026 04F00204 		and	r4, r4, #2
 877 002a 5472     		strb	r4, [r2, #9]
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 878              		.loc 1 763 0
 879 002c 5C68     		ldr	r4, [r3, #4]
 880 002e 04F00F04 		and	r4, r4, #15
 881 0032 9472     		strb	r4, [r2, #10]
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 882              		.loc 1 765 0
 883 0034 5B68     		ldr	r3, [r3, #4]
 884 0036 1B0A     		lsrs	r3, r3, #8
 885 0038 D374     		strb	r3, [r2, #19]
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 886              		.loc 1 767 0
 887 003a 00EB0113 		add	r3, r0, r1, lsl #4
 888 003e 03F5DC74 		add	r4, r3, #440
 889 0042 D3F8B851 		ldr	r5, [r3, #440]
 890 0046 D572     		strb	r5, [r2, #11]
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 891              		.loc 1 768 0
 892 0048 D3F8B851 		ldr	r5, [r3, #440]
 893 004c 2D0A     		lsrs	r5, r5, #8
 894 004e 1573     		strb	r5, [r2, #12]
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 895              		.loc 1 769 0
 896 0050 D3F8B851 		ldr	r5, [r3, #440]
 897 0054 2D0C     		lsrs	r5, r5, #16
 898 0056 5573     		strb	r5, [r2, #13]
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 899              		.loc 1 770 0
 900 0058 D3F8B831 		ldr	r3, [r3, #440]
 901 005c 1B0E     		lsrs	r3, r3, #24
 902 005e 9373     		strb	r3, [r2, #14]
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 903              		.loc 1 771 0
 904 0060 6368     		ldr	r3, [r4, #4]
 905 0062 D373     		strb	r3, [r2, #15]
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 906              		.loc 1 772 0
 907 0064 6368     		ldr	r3, [r4, #4]
 908 0066 1B0A     		lsrs	r3, r3, #8
 909 0068 1374     		strb	r3, [r2, #16]
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 910              		.loc 1 773 0
 911 006a 6368     		ldr	r3, [r4, #4]
 912 006c 1B0C     		lsrs	r3, r3, #16
 913 006e 5374     		strb	r3, [r2, #17]
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 914              		.loc 1 774 0
 915 0070 6368     		ldr	r3, [r4, #4]
 916 0072 1B0E     		lsrs	r3, r3, #24
 917 0074 9374     		strb	r3, [r2, #18]
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 918              		.loc 1 777 0
 919 0076 21B9     		cbnz	r1, .L93
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 920              		.loc 1 779 0
 921 0078 C368     		ldr	r3, [r0, #12]
 922 007a 43F02003 		orr	r3, r3, #32
 923 007e C360     		str	r3, [r0, #12]
 924 0080 30BD     		pop	{r4, r5, pc}
 925              	.L93:
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 926              		.loc 1 784 0
 927 0082 0369     		ldr	r3, [r0, #16]
 928 0084 43F02003 		orr	r3, r3, #32
 929 0088 0361     		str	r3, [r0, #16]
 930 008a 30BD     		pop	{r4, r5, pc}
 931              		.cfi_endproc
 932              	.LFE120:
 934              		.section	.text.CAN_FIFORelease,"ax",%progbits
 935              		.align	1
 936              		.global	CAN_FIFORelease
 937              		.thumb
 938              		.thumb_func
 940              	CAN_FIFORelease:
 941              	.LFB121:
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 942              		.loc 1 795 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947              	.LVL33:
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 948              		.loc 1 800 0
 949 0000 21B9     		cbnz	r1, .L96
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 950              		.loc 1 802 0
 951 0002 C368     		ldr	r3, [r0, #12]
 952 0004 43F02003 		orr	r3, r3, #32
 953 0008 C360     		str	r3, [r0, #12]
 954 000a 7047     		bx	lr
 955              	.L96:
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 956              		.loc 1 807 0
 957 000c 0369     		ldr	r3, [r0, #16]
 958 000e 43F02003 		orr	r3, r3, #32
 959 0012 0361     		str	r3, [r0, #16]
 960 0014 7047     		bx	lr
 961              		.cfi_endproc
 962              	.LFE121:
 964              		.section	.text.CAN_MessagePending,"ax",%progbits
 965              		.align	1
 966              		.global	CAN_MessagePending
 967              		.thumb
 968              		.thumb_func
 970              	CAN_MessagePending:
 971              	.LFB122:
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 972              		.loc 1 818 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
 977              	.LVL34:
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 978              		.loc 1 823 0
 979 0000 09B9     		cbnz	r1, .L99
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 980              		.loc 1 825 0
 981 0002 C068     		ldr	r0, [r0, #12]
 982              	.LVL35:
 983 0004 02E0     		b	.L102
 984              	.LVL36:
 985              	.L99:
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 986              		.loc 1 827 0
 987 0006 0129     		cmp	r1, #1
 988 0008 03D1     		bne	.L101
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 989              		.loc 1 829 0
 990 000a 0069     		ldr	r0, [r0, #16]
 991              	.LVL37:
 992              	.L102:
 993 000c 00F00300 		and	r0, r0, #3
 994              	.LVL38:
 995 0010 7047     		bx	lr
 996              	.LVL39:
 997              	.L101:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 998              		.loc 1 833 0
 999 0012 0020     		movs	r0, #0
 1000              	.LVL40:
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1001              		.loc 1 836 0
 1002 0014 7047     		bx	lr
 1003              		.cfi_endproc
 1004              	.LFE122:
 1006              		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1007              		.align	1
 1008              		.global	CAN_OperatingModeRequest
 1009              		.thumb
 1010              		.thumb_func
 1012              	CAN_OperatingModeRequest:
 1013              	.LFB123:
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1014              		.loc 1 868 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 1019              	.LVL41:
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 1020              		.loc 1 878 0
 1021 0000 99B9     		cbnz	r1, .L104
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 1022              		.loc 1 881 0
 1023 0002 0368     		ldr	r3, [r0, #0]
 1024 0004 23F00303 		bic	r3, r3, #3
 1025 0008 43F00103 		orr	r3, r3, #1
 1026 000c 0360     		str	r3, [r0, #0]
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1027              		.loc 1 884 0
 1028 000e 4FF48033 		mov	r3, #65536
 1029              	.LVL42:
 1030              	.L106:
 1031              		.loc 1 884 0 is_stmt 0 discriminator 1
 1032 0012 4268     		ldr	r2, [r0, #4]
 1033 0014 02F00302 		and	r2, r2, #3
 1034 0018 012A     		cmp	r2, #1
 1035 001a 01D0     		beq	.L105
 1036              		.loc 1 884 0 discriminator 2
 1037 001c 013B     		subs	r3, r3, #1
 1038 001e F8D1     		bne	.L106
 1039              	.L105:
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 1040              		.loc 1 888 0 is_stmt 1
 1041 0020 4068     		ldr	r0, [r0, #4]
 1042              	.LVL43:
 1043 0022 00F00300 		and	r0, r0, #3
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1044              		.loc 1 894 0
 1045 0026 0128     		cmp	r0, #1
 1046 0028 28E0     		b	.L117
 1047              	.LVL44:
 1048              	.L104:
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 1049              		.loc 1 897 0
 1050 002a 0129     		cmp	r1, #1
 1051 002c 11D1     		bne	.L108
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 1052              		.loc 1 900 0
 1053 002e 0368     		ldr	r3, [r0, #0]
 1054 0030 23F00303 		bic	r3, r3, #3
 1055 0034 0360     		str	r3, [r0, #0]
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1056              		.loc 1 903 0
 1057 0036 4FF48033 		mov	r3, #65536
 1058              	.LVL45:
 1059              	.L110:
 1060              		.loc 1 903 0 is_stmt 0 discriminator 1
 1061 003a 4268     		ldr	r2, [r0, #4]
 1062 003c 9207     		lsls	r2, r2, #30
 1063 003e 01D0     		beq	.L109
 1064              		.loc 1 903 0 discriminator 2
 1065 0040 013B     		subs	r3, r3, #1
 1066 0042 FAD1     		bne	.L110
 1067              	.L109:
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 1068              		.loc 1 907 0 is_stmt 1
 1069 0044 4368     		ldr	r3, [r0, #4]
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1070              		.loc 1 894 0
 1071 0046 13F0030F 		tst	r3, #3
 1072 004a 14BF     		ite	ne
 1073 004c 0020     		movne	r0, #0
 1074 004e 0120     		moveq	r0, #1
 1075              	.LVL46:
 1076 0050 7047     		bx	lr
 1077              	.LVL47:
 1078              	.L108:
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 1079              		.loc 1 916 0
 1080 0052 0229     		cmp	r1, #2
 1081 0054 16D1     		bne	.L113
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1082              		.loc 1 919 0
 1083 0056 0368     		ldr	r3, [r0, #0]
 1084 0058 23F00303 		bic	r3, r3, #3
 1085 005c 43F00203 		orr	r3, r3, #2
 1086 0060 0360     		str	r3, [r0, #0]
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1087              		.loc 1 922 0
 1088 0062 4FF48033 		mov	r3, #65536
 1089              	.LVL48:
 1090              	.L112:
 1091              		.loc 1 922 0 is_stmt 0 discriminator 1
 1092 0066 4268     		ldr	r2, [r0, #4]
 1093 0068 02F00302 		and	r2, r2, #3
 1094 006c 022A     		cmp	r2, #2
 1095 006e 01D0     		beq	.L111
 1096              		.loc 1 922 0 discriminator 2
 1097 0070 013B     		subs	r3, r3, #1
 1098 0072 F8D1     		bne	.L112
 1099              	.L111:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 1100              		.loc 1 926 0 is_stmt 1
 1101 0074 4068     		ldr	r0, [r0, #4]
 1102              	.LVL49:
 1103 0076 00F00300 		and	r0, r0, #3
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1104              		.loc 1 894 0
 1105 007a 0228     		cmp	r0, #2
 1106              	.L117:
 1107 007c 14BF     		ite	ne
 1108 007e 0020     		movne	r0, #0
 1109 0080 0120     		moveq	r0, #1
 1110 0082 7047     		bx	lr
 1111              	.LVL50:
 1112              	.L113:
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 1113              		.loc 1 937 0
 1114 0084 0020     		movs	r0, #0
 1115              	.LVL51:
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1116              		.loc 1 941 0
 1117 0086 7047     		bx	lr
 1118              		.cfi_endproc
 1119              	.LFE123:
 1121              		.section	.text.CAN_Sleep,"ax",%progbits
 1122              		.align	1
 1123              		.global	CAN_Sleep
 1124              		.thumb
 1125              		.thumb_func
 1127              	CAN_Sleep:
 1128              	.LFB124:
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1129              		.loc 1 949 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 1133              		@ link register save eliminated.
 1134              	.LVL52:
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1135              		.loc 1 956 0
 1136 0000 0368     		ldr	r3, [r0, #0]
 1137 0002 23F00303 		bic	r3, r3, #3
 1138 0006 43F00203 		orr	r3, r3, #2
 1139 000a 0360     		str	r3, [r0, #0]
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 1140              		.loc 1 959 0
 1141 000c 4068     		ldr	r0, [r0, #4]
 1142              	.LVL53:
 1143 000e 00F00300 		and	r0, r0, #3
 1144              	.LVL54:
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 1145              		.loc 1 965 0
 1146 0012 A0F10201 		sub	r1, r0, #2
 1147 0016 4842     		rsbs	r0, r1, #0
 1148 0018 40EB0100 		adc	r0, r0, r1
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1149              		.loc 1 966 0
 1150 001c 7047     		bx	lr
 1151              		.cfi_endproc
 1152              	.LFE124:
 1154              		.section	.text.CAN_WakeUp,"ax",%progbits
 1155              		.align	1
 1156              		.global	CAN_WakeUp
 1157              		.thumb
 1158              		.thumb_func
 1160              	CAN_WakeUp:
 1161              	.LFB125:
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1162              		.loc 1 974 0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              		@ link register save eliminated.
 1167              	.LVL55:
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 1168              		.loc 1 982 0
 1169 0000 0368     		ldr	r3, [r0, #0]
 1170 0002 23F00203 		bic	r3, r3, #2
 1171 0006 0360     		str	r3, [r0, #0]
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 1172              		.loc 1 985 0
 1173 0008 4FF48033 		mov	r3, #65536
 1174              	.LVL56:
 1175              	.L121:
 1176              		.loc 1 985 0 is_stmt 0 discriminator 1
 1177 000c 4268     		ldr	r2, [r0, #4]
 1178 000e 9207     		lsls	r2, r2, #30
 1179 0010 01D5     		bpl	.L120
 1180              		.loc 1 985 0 discriminator 2
 1181 0012 013B     		subs	r3, r3, #1
 1182 0014 FAD1     		bne	.L121
 1183              	.L120:
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 1184              		.loc 1 989 0 is_stmt 1
 1185 0016 4368     		ldr	r3, [r0, #4]
 1186              	.LVL57:
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 1187              		.loc 1 976 0
 1188 0018 13F0020F 		tst	r3, #2
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 1189              		.loc 1 995 0
 1190 001c 14BF     		ite	ne
 1191 001e 0020     		movne	r0, #0
 1192 0020 0120     		moveq	r0, #1
 1193              	.LVL58:
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1194              		.loc 1 996 0
 1195 0022 7047     		bx	lr
 1196              		.cfi_endproc
 1197              	.LFE125:
 1199              		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 1200              		.align	1
 1201              		.global	CAN_GetLastErrorCode
 1202              		.thumb
 1203              		.thumb_func
 1205              	CAN_GetLastErrorCode:
 1206              	.LFB126:
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1207              		.loc 1 1036 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211              		@ link register save eliminated.
 1212              	.LVL59:
1037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
1038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 1213              		.loc 1 1043 0
 1214 0000 8069     		ldr	r0, [r0, #24]
 1215              	.LVL60:
1044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
 1216              		.loc 1 1046 0
 1217 0002 00F07000 		and	r0, r0, #112
 1218              	.LVL61:
1047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1219              		.loc 1 1047 0
 1220 0006 7047     		bx	lr
 1221              		.cfi_endproc
 1222              	.LFE126:
 1224              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 1225              		.align	1
 1226              		.global	CAN_GetReceiveErrorCounter
 1227              		.thumb
 1228              		.thumb_func
 1230              	CAN_GetReceiveErrorCounter:
 1231              	.LFB127:
1048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1232              		.loc 1 1061 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 0
 1235              		@ frame_needed = 0, uses_anonymous_args = 0
 1236              		@ link register save eliminated.
 1237              	.LVL62:
1062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
1063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 1238              		.loc 1 1068 0
 1239 0000 8069     		ldr	r0, [r0, #24]
 1240              	.LVL63:
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 1241              		.loc 1 1071 0
 1242 0002 000E     		lsrs	r0, r0, #24
 1243              	.LVL64:
1072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1244              		.loc 1 1072 0
 1245 0004 7047     		bx	lr
 1246              		.cfi_endproc
 1247              	.LFE127:
 1249              		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 1250              		.align	1
 1251              		.global	CAN_GetLSBTransmitErrorCounter
 1252              		.thumb
 1253              		.thumb_func
 1255              	CAN_GetLSBTransmitErrorCounter:
 1256              	.LFB128:
1073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1257              		.loc 1 1081 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262              	.LVL65:
1082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
1083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 1263              		.loc 1 1088 0
 1264 0000 8069     		ldr	r0, [r0, #24]
 1265              	.LVL66:
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 1266              		.loc 1 1091 0
 1267 0002 C0F30740 		ubfx	r0, r0, #16, #8
 1268              	.LVL67:
1092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1269              		.loc 1 1092 0
 1270 0006 7047     		bx	lr
 1271              		.cfi_endproc
 1272              	.LFE128:
 1274              		.section	.text.CAN_ITConfig,"ax",%progbits
 1275              		.align	1
 1276              		.global	CAN_ITConfig
 1277              		.thumb
 1278              		.thumb_func
 1280              	CAN_ITConfig:
 1281              	.LFB129:
1093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1282              		.loc 1 1288 0
 1283              		.cfi_startproc
 1284              		@ args = 0, pretend = 0, frame = 0
 1285              		@ frame_needed = 0, uses_anonymous_args = 0
 1286              		@ link register save eliminated.
 1287              	.LVL68:
1289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
1295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 1288              		.loc 1 1297 0
 1289 0000 4369     		ldr	r3, [r0, #20]
1294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 1290              		.loc 1 1294 0
 1291 0002 0AB1     		cbz	r2, .L127
 1292              		.loc 1 1297 0
 1293 0004 1943     		orrs	r1, r1, r3
 1294              	.LVL69:
 1295 0006 01E0     		b	.L129
 1296              	.LVL70:
 1297              	.L127:
1298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 1298              		.loc 1 1302 0
 1299 0008 23EA0101 		bic	r1, r3, r1
 1300              	.LVL71:
 1301              	.L129:
 1302 000c 4161     		str	r1, [r0, #20]
 1303 000e 7047     		bx	lr
 1304              		.cfi_endproc
 1305              	.LFE129:
 1307              		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 1308              		.align	1
 1309              		.global	CAN_GetFlagStatus
 1310              		.thumb
 1311              		.thumb_func
 1313              	CAN_GetFlagStatus:
 1314              	.LFB130:
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1315              		.loc 1 1328 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 0
 1318              		@ frame_needed = 0, uses_anonymous_args = 0
 1319              		@ link register save eliminated.
 1320              	.LVL72:
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
1330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 1321              		.loc 1 1336 0
 1322 0000 11F4700F 		tst	r1, #15728640
1337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1323              		.loc 1 1339 0
 1324 0004 18BF     		it	ne
 1325 0006 8369     		ldrne	r3, [r0, #24]
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 1326              		.loc 1 1336 0
 1327 0008 0AD1     		bne	.L136
1340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 1328              		.loc 1 1350 0
 1329 000a CB01     		lsls	r3, r1, #7
1351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1330              		.loc 1 1353 0
 1331 000c 48BF     		it	mi
 1332 000e 4368     		ldrmi	r3, [r0, #4]
1350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 1333              		.loc 1 1350 0
 1334 0010 06D4     		bmi	.L136
1354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 1335              		.loc 1 1364 0
 1336 0012 0A01     		lsls	r2, r1, #4
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1337              		.loc 1 1367 0
 1338 0014 48BF     		it	mi
 1339 0016 8368     		ldrmi	r3, [r0, #8]
1364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 1340              		.loc 1 1364 0
 1341 0018 02D4     		bmi	.L136
1368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 1342              		.loc 1 1378 0
 1343 001a 8B01     		lsls	r3, r1, #6
 1344 001c 09D5     		bpl	.L135
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1345              		.loc 1 1381 0
 1346 001e C368     		ldr	r3, [r0, #12]
 1347              	.L136:
 1348 0020 23F07F43 		bic	r3, r3, #-16777216
 1349 0024 23F47003 		bic	r3, r3, #15728640
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 1350              		.loc 1 1347 0
 1351 0028 0B42     		tst	r3, r1
 1352 002a 0CBF     		ite	eq
 1353 002c 0020     		moveq	r0, #0
 1354 002e 0120     		movne	r0, #1
 1355              	.LVL73:
 1356 0030 7047     		bx	lr
 1357              	.LVL74:
 1358              	.L135:
1382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 1359              		.loc 1 1395 0
 1360 0032 0369     		ldr	r3, [r0, #16]
 1361 0034 23F07F43 		bic	r3, r3, #-16777216
 1362 0038 23F47003 		bic	r3, r3, #15728640
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 1363              		.loc 1 1347 0
 1364 003c 0B42     		tst	r3, r1
 1365 003e 0CBF     		ite	eq
 1366 0040 0020     		moveq	r0, #0
 1367 0042 0120     		movne	r0, #1
 1368              	.LVL75:
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
1408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1369              		.loc 1 1408 0
 1370 0044 7047     		bx	lr
 1371              		.cfi_endproc
 1372              	.LFE130:
 1374              		.section	.text.CAN_ClearFlag,"ax",%progbits
 1375              		.align	1
 1376              		.global	CAN_ClearFlag
 1377              		.thumb
 1378              		.thumb_func
 1380              	CAN_ClearFlag:
 1381              	.LFB131:
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1382              		.loc 1 1428 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 1386              		@ link register save eliminated.
 1387              	.LVL76:
1429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
1430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 1388              		.loc 1 1434 0
 1389 0000 0B4B     		ldr	r3, .L143
 1390 0002 9942     		cmp	r1, r3
 1391 0004 02D1     		bne	.L138
1435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 1392              		.loc 1 1437 0
 1393 0006 0023     		movs	r3, #0
 1394 0008 8361     		str	r3, [r0, #24]
 1395 000a 7047     		bx	lr
 1396              	.L138:
1438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 1397              		.loc 1 1441 0
 1398 000c 21F07F43 		bic	r3, r1, #-16777216
1442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 1399              		.loc 1 1443 0
 1400 0010 8A01     		lsls	r2, r1, #6
1441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 1401              		.loc 1 1441 0
 1402 0012 23F47003 		bic	r3, r3, #15728640
 1403              	.LVL77:
 1404              		.loc 1 1443 0
 1405 0016 01D5     		bpl	.L140
1444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 1406              		.loc 1 1446 0
 1407 0018 C360     		str	r3, [r0, #12]
 1408 001a 7047     		bx	lr
 1409              	.L140:
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 1410              		.loc 1 1448 0
 1411 001c 4A01     		lsls	r2, r1, #5
 1412 001e 01D5     		bpl	.L141
1449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 1413              		.loc 1 1451 0
 1414 0020 0361     		str	r3, [r0, #16]
 1415 0022 7047     		bx	lr
 1416              	.L141:
1452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 1417              		.loc 1 1453 0
 1418 0024 0A01     		lsls	r2, r1, #4
1454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 1419              		.loc 1 1456 0
 1420 0026 4CBF     		ite	mi
 1421 0028 8360     		strmi	r3, [r0, #8]
1457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 1422              		.loc 1 1461 0
 1423 002a 4360     		strpl	r3, [r0, #4]
 1424 002c 7047     		bx	lr
 1425              	.L144:
 1426 002e 00BF     		.align	2
 1427              	.L143:
 1428 0030 7000F030 		.word	821035120
 1429              		.cfi_endproc
 1430              	.LFE131:
 1432              		.section	.text.CAN_GetITStatus,"ax",%progbits
 1433              		.align	1
 1434              		.global	CAN_GetITStatus
 1435              		.thumb
 1436              		.thumb_func
 1438              	CAN_GetITStatus:
 1439              	.LFB132:
1462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1440              		.loc 1 1488 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444              		@ link register save eliminated.
 1445              	.LVL78:
1489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
1490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 1446              		.loc 1 1495 0
 1447 0000 4369     		ldr	r3, [r0, #20]
 1448 0002 0B40     		ands	r3, r1, r3
 1449 0004 5DD0     		beq	.L164
1496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 1450              		.loc 1 1498 0
 1451 0006 4029     		cmp	r1, #64
 1452 0008 3CD0     		beq	.L153
 1453 000a 0ED8     		bhi	.L161
 1454 000c 0429     		cmp	r1, #4
 1455 000e 2DD0     		beq	.L149
 1456 0010 04D8     		bhi	.L162
 1457 0012 0129     		cmp	r1, #1
 1458 0014 21D0     		beq	.L147
 1459 0016 0229     		cmp	r1, #2
 1460 0018 55D1     		bne	.L165
 1461 001a 25E0     		b	.L170
 1462              	.L162:
 1463 001c 1029     		cmp	r1, #16
 1464 001e 29D0     		beq	.L151
 1465 0020 2029     		cmp	r1, #32
 1466 0022 2DD0     		beq	.L152
 1467 0024 0829     		cmp	r1, #8
 1468 0026 4ED1     		bne	.L165
 1469 0028 22E0     		b	.L171
 1470              	.L161:
 1471 002a B1F5006F 		cmp	r1, #2048
 1472 002e 3DD0     		beq	.L157
 1473 0030 09D8     		bhi	.L163
 1474 0032 B1F5007F 		cmp	r1, #512
 1475 0036 33D0     		beq	.L155
 1476 0038 B1F5806F 		cmp	r1, #1024
 1477 003c 34D0     		beq	.L156
 1478 003e B1F5807F 		cmp	r1, #256
 1479 0042 40D1     		bne	.L165
 1480 0044 28E0     		b	.L172
 1481              	.L163:
 1482 0046 B1F5803F 		cmp	r1, #65536
 1483 004a 1DD0     		beq	.L159
 1484 004c B1F5003F 		cmp	r1, #131072
 1485 0050 1ED0     		beq	.L160
 1486 0052 B1F5004F 		cmp	r1, #32768
 1487 0056 36D1     		bne	.L165
 1488 0058 2FE0     		b	.L173
 1489              	.L147:
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 1490              		.loc 1 1502 0
 1491 005a 8368     		ldr	r3, [r0, #8]
 1492              	.LVL79:
 1493              	.LBB30:
 1494              	.LBB31:
1503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
1507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
1511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
1519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
1523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
1527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
1531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
1539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
1543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
1547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
1551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
1555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
1559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
1566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
1598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
1672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 1495              		.loc 1 1673 0
 1496 005c 1B48     		ldr	r0, .L174
 1497              	.LVL80:
 1498 005e 1840     		ands	r0, r0, r3
 1499              	.LBE31:
 1500              	.LBE30:
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
 1501              		.loc 1 1676 0
 1502 0060 0030     		adds	r0, r0, #0
 1503 0062 18BF     		it	ne
 1504 0064 0120     		movne	r0, #1
 1505 0066 7047     		bx	lr
 1506              	.LVL81:
 1507              	.L170:
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 1508              		.loc 1 1506 0
 1509 0068 C068     		ldr	r0, [r0, #12]
 1510              	.LVL82:
 1511 006a 04E0     		b	.L169
 1512              	.LVL83:
 1513              	.L149:
1510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 1514              		.loc 1 1510 0
 1515 006c C068     		ldr	r0, [r0, #12]
 1516              	.LVL84:
 1517 006e 0CE0     		b	.L168
 1518              	.LVL85:
 1519              	.L171:
1514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 1520              		.loc 1 1514 0
 1521 0070 C068     		ldr	r0, [r0, #12]
 1522              	.LVL86:
 1523 0072 0EE0     		b	.L167
 1524              	.LVL87:
 1525              	.L151:
1518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 1526              		.loc 1 1518 0
 1527 0074 0069     		ldr	r0, [r0, #16]
 1528              	.LVL88:
 1529              	.L169:
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 1530              		.loc 1 1681 0
 1531 0076 10F00300 		ands	r0, r0, #3
 1532              	.LVL89:
 1533 007a 18BF     		it	ne
 1534 007c 0120     		movne	r0, #1
 1535 007e 7047     		bx	lr
 1536              	.LVL90:
 1537              	.L152:
1522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 1538              		.loc 1 1522 0
 1539 0080 0069     		ldr	r0, [r0, #16]
 1540              	.LVL91:
 1541 0082 02E0     		b	.L168
 1542              	.LVL92:
 1543              	.L153:
1526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 1544              		.loc 1 1526 0
 1545 0084 0069     		ldr	r0, [r0, #16]
 1546              	.LVL93:
 1547 0086 04E0     		b	.L167
 1548              	.LVL94:
 1549              	.L159:
1530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 1550              		.loc 1 1530 0
 1551 0088 4068     		ldr	r0, [r0, #4]
 1552              	.LVL95:
 1553              	.L168:
 1554              		.loc 1 1681 0
 1555 008a C0F3C000 		ubfx	r0, r0, #3, #1
 1556              	.LVL96:
 1557 008e 7047     		bx	lr
 1558              	.LVL97:
 1559              	.L160:
1534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 1560              		.loc 1 1534 0
 1561 0090 4068     		ldr	r0, [r0, #4]
 1562              	.LVL98:
 1563              	.L167:
 1564              		.loc 1 1681 0
 1565 0092 C0F30010 		ubfx	r0, r0, #4, #1
 1566              	.LVL99:
 1567 0096 7047     		bx	lr
 1568              	.LVL100:
 1569              	.L172:
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 1570              		.loc 1 1538 0
 1571 0098 8069     		ldr	r0, [r0, #24]
 1572              	.LVL101:
 1573              		.loc 1 1681 0
 1574 009a 00F00100 		and	r0, r0, #1
 1575              	.LVL102:
 1576 009e 7047     		bx	lr
 1577              	.LVL103:
 1578              	.L155:
1542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 1579              		.loc 1 1542 0
 1580 00a0 8069     		ldr	r0, [r0, #24]
 1581              	.LVL104:
 1582              		.loc 1 1681 0
 1583 00a2 C0F34000 		ubfx	r0, r0, #1, #1
 1584              	.LVL105:
 1585 00a6 7047     		bx	lr
 1586              	.LVL106:
 1587              	.L156:
1546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 1588              		.loc 1 1546 0
 1589 00a8 8069     		ldr	r0, [r0, #24]
 1590              	.LVL107:
 1591 00aa 07E0     		b	.L166
 1592              	.LVL108:
 1593              	.L157:
1550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 1594              		.loc 1 1550 0
 1595 00ac 8369     		ldr	r3, [r0, #24]
 1596              	.LVL109:
 1597              		.loc 1 1681 0
 1598 00ae 13F0700F 		tst	r3, #112
 1599 00b2 0CBF     		ite	eq
 1600 00b4 0020     		moveq	r0, #0
 1601 00b6 0120     		movne	r0, #1
 1602              	.LVL110:
 1603 00b8 7047     		bx	lr
 1604              	.LVL111:
 1605              	.L173:
1554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 1606              		.loc 1 1554 0
 1607 00ba 4068     		ldr	r0, [r0, #4]
 1608              	.LVL112:
 1609              	.L166:
 1610              		.loc 1 1681 0
 1611 00bc C0F38000 		ubfx	r0, r0, #2, #1
 1612              	.LVL113:
 1613 00c0 7047     		bx	lr
 1614              	.LVL114:
 1615              	.L164:
1565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
 1616              		.loc 1 1565 0
 1617 00c2 1846     		mov	r0, r3
 1618              	.LVL115:
 1619 00c4 7047     		bx	lr
 1620              	.LVL116:
 1621              	.L165:
1558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 1622              		.loc 1 1558 0
 1623 00c6 0020     		movs	r0, #0
 1624              	.LVL117:
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1625              		.loc 1 1570 0
 1626 00c8 7047     		bx	lr
 1627              	.L175:
 1628 00ca 00BF     		.align	2
 1629              	.L174:
 1630 00cc 01010100 		.word	65793
 1631              		.cfi_endproc
 1632              	.LFE132:
 1634              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 1635              		.align	1
 1636              		.global	CAN_ClearITPendingBit
 1637              		.thumb
 1638              		.thumb_func
 1640              	CAN_ClearITPendingBit:
 1641              	.LFB133:
1592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1642              		.loc 1 1592 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646              		@ link register save eliminated.
 1647              	.LVL118:
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 1648              		.loc 1 1597 0
 1649 0000 B1F5807F 		cmp	r1, #256
 1650 0004 35D0     		beq	.L193
 1651 0006 0CD8     		bhi	.L190
 1652 0008 0829     		cmp	r1, #8
 1653 000a 24D0     		beq	.L180
 1654 000c 04D8     		bhi	.L191
 1655 000e 0129     		cmp	r1, #1
 1656 0010 1CD0     		beq	.L178
 1657 0012 0429     		cmp	r1, #4
 1658 0014 34D1     		bne	.L176
 1659 0016 1CE0     		b	.L197
 1660              	.L191:
 1661 0018 2029     		cmp	r1, #32
 1662 001a 1FD0     		beq	.L181
 1663 001c 4029     		cmp	r1, #64
 1664 001e 2FD1     		bne	.L176
 1665 0020 1EE0     		b	.L198
 1666              	.L190:
 1667 0022 B1F5006F 		cmp	r1, #2048
 1668 0026 22D0     		beq	.L186
 1669 0028 06D8     		bhi	.L192
 1670 002a B1F5007F 		cmp	r1, #512
 1671 002e 20D0     		beq	.L193
 1672 0030 B1F5806F 		cmp	r1, #1024
 1673 0034 24D1     		bne	.L176
 1674 0036 1CE0     		b	.L193
 1675              	.L192:
 1676 0038 B1F5803F 		cmp	r1, #65536
 1677 003c 13D0     		beq	.L188
 1678 003e B1F5003F 		cmp	r1, #131072
 1679 0042 12D0     		beq	.L189
 1680 0044 B1F5004F 		cmp	r1, #32768
 1681 0048 1AD1     		bne	.L176
 1682 004a 15E0     		b	.L199
 1683              	.L178:
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
 1684              		.loc 1 1601 0
 1685 004c 0D4B     		ldr	r3, .L200
 1686 004e 8360     		str	r3, [r0, #8]
1602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1687              		.loc 1 1602 0
 1688 0050 7047     		bx	lr
 1689              	.L197:
1605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
 1690              		.loc 1 1605 0
 1691 0052 0823     		movs	r3, #8
 1692 0054 00E0     		b	.L194
 1693              	.L180:
1609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
 1694              		.loc 1 1609 0
 1695 0056 1023     		movs	r3, #16
 1696              	.L194:
 1697 0058 C360     		str	r3, [r0, #12]
1610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1698              		.loc 1 1610 0
 1699 005a 7047     		bx	lr
 1700              	.L181:
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
 1701              		.loc 1 1613 0
 1702 005c 0823     		movs	r3, #8
 1703 005e 00E0     		b	.L195
 1704              	.L198:
1617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
 1705              		.loc 1 1617 0
 1706 0060 1023     		movs	r3, #16
 1707              	.L195:
 1708 0062 0361     		str	r3, [r0, #16]
1618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1709              		.loc 1 1618 0
 1710 0064 7047     		bx	lr
 1711              	.L188:
1621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
 1712              		.loc 1 1621 0
 1713 0066 0823     		movs	r3, #8
 1714 0068 04E0     		b	.L196
 1715              	.L189:
1625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
 1716              		.loc 1 1625 0
 1717 006a 1023     		movs	r3, #16
 1718 006c 02E0     		b	.L196
 1719              	.L186:
1644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 1720              		.loc 1 1644 0
 1721 006e 0023     		movs	r3, #0
 1722 0070 8361     		str	r3, [r0, #24]
 1723              	.L193:
1646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 1724              		.loc 1 1646 0
 1725 0072 0423     		movs	r3, #4
 1726              	.L196:
 1727 0074 4360     		str	r3, [r0, #4]
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1728              		.loc 1 1647 0
 1729 0076 7047     		bx	lr
 1730              	.L199:
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 1731              		.loc 1 1650 0
 1732 0078 0023     		movs	r3, #0
 1733 007a 8361     		str	r3, [r0, #24]
1652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 1734              		.loc 1 1652 0
 1735 007c 0423     		movs	r3, #4
 1736 007e 4360     		str	r3, [r0, #4]
 1737              	.L176:
 1738 0080 7047     		bx	lr
 1739              	.L201:
 1740 0082 00BF     		.align	2
 1741              	.L200:
 1742 0084 01010100 		.word	65793
 1743              		.cfi_endproc
 1744              	.LFE133:
 1746              		.text
 1747              	.Letext0:
 1748              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 1749              		.file 3 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Device\\STM32F4xx\\Include/stm32f4x
 1750              		.file 4 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\STM32F4xx_StdPeriph_Driver\\inc/stm32f4xx_
 1751              		.file 5 "D:\\Elektronik\\WorspaceEclipse\\ThunderCryer\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_can.c
  C:\Temp\ccq7TRfl.s:19     .text.CAN_DeInit:00000000 $t
  C:\Temp\ccq7TRfl.s:24     .text.CAN_DeInit:00000000 CAN_DeInit
  C:\Temp\ccq7TRfl.s:67     .text.CAN_DeInit:00000030 $d
  C:\Temp\ccq7TRfl.s:72     .text.CAN_Init:00000000 $t
  C:\Temp\ccq7TRfl.s:77     .text.CAN_Init:00000000 CAN_Init
  C:\Temp\ccq7TRfl.s:227    .text.CAN_FilterInit:00000000 $t
  C:\Temp\ccq7TRfl.s:232    .text.CAN_FilterInit:00000000 CAN_FilterInit
  C:\Temp\ccq7TRfl.s:382    .text.CAN_FilterInit:000000dc $d
  C:\Temp\ccq7TRfl.s:388    .text.CAN_StructInit:00000000 $t
  C:\Temp\ccq7TRfl.s:393    .text.CAN_StructInit:00000000 CAN_StructInit
  C:\Temp\ccq7TRfl.s:433    .text.CAN_SlaveStartBank:00000000 $t
  C:\Temp\ccq7TRfl.s:438    .text.CAN_SlaveStartBank:00000000 CAN_SlaveStartBank
  C:\Temp\ccq7TRfl.s:470    .text.CAN_SlaveStartBank:00000038 $d
  C:\Temp\ccq7TRfl.s:475    .text.CAN_DBGFreeze:00000000 $t
  C:\Temp\ccq7TRfl.s:480    .text.CAN_DBGFreeze:00000000 CAN_DBGFreeze
  C:\Temp\ccq7TRfl.s:505    .text.CAN_TTComModeCmd:00000000 $t
  C:\Temp\ccq7TRfl.s:510    .text.CAN_TTComModeCmd:00000000 CAN_TTComModeCmd
  C:\Temp\ccq7TRfl.s:559    .text.CAN_Transmit:00000000 $t
  C:\Temp\ccq7TRfl.s:564    .text.CAN_Transmit:00000000 CAN_Transmit
  C:\Temp\ccq7TRfl.s:705    .text.CAN_TransmitStatus:00000000 $t
  C:\Temp\ccq7TRfl.s:710    .text.CAN_TransmitStatus:00000000 CAN_TransmitStatus
  C:\Temp\ccq7TRfl.s:783    .text.CAN_TransmitStatus:00000048 $d
  C:\Temp\ccq7TRfl.s:790    .text.CAN_CancelTransmit:00000000 $t
  C:\Temp\ccq7TRfl.s:795    .text.CAN_CancelTransmit:00000000 CAN_CancelTransmit
  C:\Temp\ccq7TRfl.s:834    .text.CAN_Receive:00000000 $t
  C:\Temp\ccq7TRfl.s:839    .text.CAN_Receive:00000000 CAN_Receive
  C:\Temp\ccq7TRfl.s:935    .text.CAN_FIFORelease:00000000 $t
  C:\Temp\ccq7TRfl.s:940    .text.CAN_FIFORelease:00000000 CAN_FIFORelease
  C:\Temp\ccq7TRfl.s:965    .text.CAN_MessagePending:00000000 $t
  C:\Temp\ccq7TRfl.s:970    .text.CAN_MessagePending:00000000 CAN_MessagePending
  C:\Temp\ccq7TRfl.s:1007   .text.CAN_OperatingModeRequest:00000000 $t
  C:\Temp\ccq7TRfl.s:1012   .text.CAN_OperatingModeRequest:00000000 CAN_OperatingModeRequest
  C:\Temp\ccq7TRfl.s:1122   .text.CAN_Sleep:00000000 $t
  C:\Temp\ccq7TRfl.s:1127   .text.CAN_Sleep:00000000 CAN_Sleep
  C:\Temp\ccq7TRfl.s:1155   .text.CAN_WakeUp:00000000 $t
  C:\Temp\ccq7TRfl.s:1160   .text.CAN_WakeUp:00000000 CAN_WakeUp
  C:\Temp\ccq7TRfl.s:1200   .text.CAN_GetLastErrorCode:00000000 $t
  C:\Temp\ccq7TRfl.s:1205   .text.CAN_GetLastErrorCode:00000000 CAN_GetLastErrorCode
  C:\Temp\ccq7TRfl.s:1225   .text.CAN_GetReceiveErrorCounter:00000000 $t
  C:\Temp\ccq7TRfl.s:1230   .text.CAN_GetReceiveErrorCounter:00000000 CAN_GetReceiveErrorCounter
  C:\Temp\ccq7TRfl.s:1250   .text.CAN_GetLSBTransmitErrorCounter:00000000 $t
  C:\Temp\ccq7TRfl.s:1255   .text.CAN_GetLSBTransmitErrorCounter:00000000 CAN_GetLSBTransmitErrorCounter
  C:\Temp\ccq7TRfl.s:1275   .text.CAN_ITConfig:00000000 $t
  C:\Temp\ccq7TRfl.s:1280   .text.CAN_ITConfig:00000000 CAN_ITConfig
  C:\Temp\ccq7TRfl.s:1308   .text.CAN_GetFlagStatus:00000000 $t
  C:\Temp\ccq7TRfl.s:1313   .text.CAN_GetFlagStatus:00000000 CAN_GetFlagStatus
  C:\Temp\ccq7TRfl.s:1375   .text.CAN_ClearFlag:00000000 $t
  C:\Temp\ccq7TRfl.s:1380   .text.CAN_ClearFlag:00000000 CAN_ClearFlag
  C:\Temp\ccq7TRfl.s:1428   .text.CAN_ClearFlag:00000030 $d
  C:\Temp\ccq7TRfl.s:1433   .text.CAN_GetITStatus:00000000 $t
  C:\Temp\ccq7TRfl.s:1438   .text.CAN_GetITStatus:00000000 CAN_GetITStatus
  C:\Temp\ccq7TRfl.s:1630   .text.CAN_GetITStatus:000000cc $d
  C:\Temp\ccq7TRfl.s:1635   .text.CAN_ClearITPendingBit:00000000 $t
  C:\Temp\ccq7TRfl.s:1640   .text.CAN_ClearITPendingBit:00000000 CAN_ClearITPendingBit
  C:\Temp\ccq7TRfl.s:1742   .text.CAN_ClearITPendingBit:00000084 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
