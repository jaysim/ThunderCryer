   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_can.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	CAN_DeInit
  20              		.thumb
  21              		.thumb_func
  23              	CAN_DeInit:
  24              	.LFB110:
  25              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.0RC1
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    25-August-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  26              		.loc 1 163 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 82B0     		sub	sp, sp, #8
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
  42              		.loc 1 167 0
  43 0008 7A68     		ldr	r2, [r7, #4]
  44 000a 4FF4C843 		mov	r3, #25600
  45 000e C4F20003 		movt	r3, 16384
  46 0012 9A42     		cmp	r2, r3
  47 0014 0CD1     		bne	.L2
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
  48              		.loc 1 170 0
  49 0016 4FF00070 		mov	r0, #33554432
  50 001a 4FF00101 		mov	r1, #1
  51 001e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  52              		.loc 1 172 0
  53 0022 4FF00070 		mov	r0, #33554432
  54 0026 4FF00001 		mov	r1, #0
  55 002a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  56 002e 0BE0     		b	.L1
  57              	.L2:
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
  58              		.loc 1 177 0
  59 0030 4FF08060 		mov	r0, #67108864
  60 0034 4FF00101 		mov	r1, #1
  61 0038 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  62              		.loc 1 179 0
  63 003c 4FF08060 		mov	r0, #67108864
  64 0040 4FF00001 		mov	r1, #0
  65 0044 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  66              	.L1:
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  67              		.loc 1 181 0
  68 0048 07F10807 		add	r7, r7, #8
  69 004c BD46     		mov	sp, r7
  70 004e 80BD     		pop	{r7, pc}
  71              		.cfi_endproc
  72              	.LFE110:
  74              		.align	2
  75              		.global	CAN_Init
  76              		.thumb
  77              		.thumb_func
  79              	CAN_Init:
  80              	.LFB111:
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  81              		.loc 1 193 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 16
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86 0050 80B4     		push	{r7}
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 4
  89              		.cfi_offset 7, -4
  90 0052 85B0     		sub	sp, sp, #20
  91              	.LCFI4:
  92              		.cfi_def_cfa_offset 24
  93 0054 00AF     		add	r7, sp, #0
  94              	.LCFI5:
  95              		.cfi_def_cfa_register 7
  96 0056 7860     		str	r0, [r7, #4]
  97 0058 3960     		str	r1, [r7, #0]
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
  98              		.loc 1 194 0
  99 005a 4FF00003 		mov	r3, #0
 100 005e FB73     		strb	r3, [r7, #15]
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 101              		.loc 1 195 0
 102 0060 4FF00003 		mov	r3, #0
 103 0064 BB60     		str	r3, [r7, #8]
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 104              		.loc 1 211 0
 105 0066 7B68     		ldr	r3, [r7, #4]
 106 0068 1B68     		ldr	r3, [r3, #0]
 107 006a 23F00202 		bic	r2, r3, #2
 108 006e 7B68     		ldr	r3, [r7, #4]
 109 0070 1A60     		str	r2, [r3, #0]
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 110              		.loc 1 214 0
 111 0072 7B68     		ldr	r3, [r7, #4]
 112 0074 1B68     		ldr	r3, [r3, #0]
 113 0076 43F00102 		orr	r2, r3, #1
 114 007a 7B68     		ldr	r3, [r7, #4]
 115 007c 1A60     		str	r2, [r3, #0]
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 116              		.loc 1 217 0
 117 007e 03E0     		b	.L5
 118              	.L7:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 119              		.loc 1 219 0
 120 0080 BB68     		ldr	r3, [r7, #8]
 121 0082 03F10103 		add	r3, r3, #1
 122 0086 BB60     		str	r3, [r7, #8]
 123              	.L5:
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 124              		.loc 1 217 0 discriminator 1
 125 0088 7B68     		ldr	r3, [r7, #4]
 126 008a 5B68     		ldr	r3, [r3, #4]
 127 008c 03F00103 		and	r3, r3, #1
 128 0090 002B     		cmp	r3, #0
 129 0092 04D1     		bne	.L6
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 130              		.loc 1 217 0 is_stmt 0 discriminator 2
 131 0094 BA68     		ldr	r2, [r7, #8]
 132 0096 4FF6FF73 		movw	r3, #65535
 133 009a 9A42     		cmp	r2, r3
 134 009c F0D1     		bne	.L7
 135              	.L6:
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 136              		.loc 1 223 0 is_stmt 1
 137 009e 7B68     		ldr	r3, [r7, #4]
 138 00a0 5B68     		ldr	r3, [r3, #4]
 139 00a2 03F00103 		and	r3, r3, #1
 140 00a6 002B     		cmp	r3, #0
 141 00a8 03D1     		bne	.L8
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 142              		.loc 1 225 0
 143 00aa 4FF00003 		mov	r3, #0
 144 00ae FB73     		strb	r3, [r7, #15]
 145 00b0 A7E0     		b	.L9
 146              	.L8:
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 147              		.loc 1 230 0
 148 00b2 3B68     		ldr	r3, [r7, #0]
 149 00b4 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 150 00b6 012B     		cmp	r3, #1
 151 00b8 06D1     		bne	.L10
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 152              		.loc 1 232 0
 153 00ba 7B68     		ldr	r3, [r7, #4]
 154 00bc 1B68     		ldr	r3, [r3, #0]
 155 00be 43F08002 		orr	r2, r3, #128
 156 00c2 7B68     		ldr	r3, [r7, #4]
 157 00c4 1A60     		str	r2, [r3, #0]
 158 00c6 05E0     		b	.L11
 159              	.L10:
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 160              		.loc 1 236 0
 161 00c8 7B68     		ldr	r3, [r7, #4]
 162 00ca 1B68     		ldr	r3, [r3, #0]
 163 00cc 23F08002 		bic	r2, r3, #128
 164 00d0 7B68     		ldr	r3, [r7, #4]
 165 00d2 1A60     		str	r2, [r3, #0]
 166              	.L11:
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 167              		.loc 1 240 0
 168 00d4 3B68     		ldr	r3, [r7, #0]
 169 00d6 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 170 00d8 012B     		cmp	r3, #1
 171 00da 06D1     		bne	.L12
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 172              		.loc 1 242 0
 173 00dc 7B68     		ldr	r3, [r7, #4]
 174 00de 1B68     		ldr	r3, [r3, #0]
 175 00e0 43F04002 		orr	r2, r3, #64
 176 00e4 7B68     		ldr	r3, [r7, #4]
 177 00e6 1A60     		str	r2, [r3, #0]
 178 00e8 05E0     		b	.L13
 179              	.L12:
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 180              		.loc 1 246 0
 181 00ea 7B68     		ldr	r3, [r7, #4]
 182 00ec 1B68     		ldr	r3, [r3, #0]
 183 00ee 23F04002 		bic	r2, r3, #64
 184 00f2 7B68     		ldr	r3, [r7, #4]
 185 00f4 1A60     		str	r2, [r3, #0]
 186              	.L13:
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 187              		.loc 1 250 0
 188 00f6 3B68     		ldr	r3, [r7, #0]
 189 00f8 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 190 00fa 012B     		cmp	r3, #1
 191 00fc 06D1     		bne	.L14
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 192              		.loc 1 252 0
 193 00fe 7B68     		ldr	r3, [r7, #4]
 194 0100 1B68     		ldr	r3, [r3, #0]
 195 0102 43F02002 		orr	r2, r3, #32
 196 0106 7B68     		ldr	r3, [r7, #4]
 197 0108 1A60     		str	r2, [r3, #0]
 198 010a 05E0     		b	.L15
 199              	.L14:
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 200              		.loc 1 256 0
 201 010c 7B68     		ldr	r3, [r7, #4]
 202 010e 1B68     		ldr	r3, [r3, #0]
 203 0110 23F02002 		bic	r2, r3, #32
 204 0114 7B68     		ldr	r3, [r7, #4]
 205 0116 1A60     		str	r2, [r3, #0]
 206              	.L15:
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 207              		.loc 1 260 0
 208 0118 3B68     		ldr	r3, [r7, #0]
 209 011a 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 210 011c 012B     		cmp	r3, #1
 211 011e 06D1     		bne	.L16
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 212              		.loc 1 262 0
 213 0120 7B68     		ldr	r3, [r7, #4]
 214 0122 1B68     		ldr	r3, [r3, #0]
 215 0124 43F01002 		orr	r2, r3, #16
 216 0128 7B68     		ldr	r3, [r7, #4]
 217 012a 1A60     		str	r2, [r3, #0]
 218 012c 05E0     		b	.L17
 219              	.L16:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 220              		.loc 1 266 0
 221 012e 7B68     		ldr	r3, [r7, #4]
 222 0130 1B68     		ldr	r3, [r3, #0]
 223 0132 23F01002 		bic	r2, r3, #16
 224 0136 7B68     		ldr	r3, [r7, #4]
 225 0138 1A60     		str	r2, [r3, #0]
 226              	.L17:
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 227              		.loc 1 270 0
 228 013a 3B68     		ldr	r3, [r7, #0]
 229 013c 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 230 013e 012B     		cmp	r3, #1
 231 0140 06D1     		bne	.L18
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 232              		.loc 1 272 0
 233 0142 7B68     		ldr	r3, [r7, #4]
 234 0144 1B68     		ldr	r3, [r3, #0]
 235 0146 43F00802 		orr	r2, r3, #8
 236 014a 7B68     		ldr	r3, [r7, #4]
 237 014c 1A60     		str	r2, [r3, #0]
 238 014e 05E0     		b	.L19
 239              	.L18:
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 240              		.loc 1 276 0
 241 0150 7B68     		ldr	r3, [r7, #4]
 242 0152 1B68     		ldr	r3, [r3, #0]
 243 0154 23F00802 		bic	r2, r3, #8
 244 0158 7B68     		ldr	r3, [r7, #4]
 245 015a 1A60     		str	r2, [r3, #0]
 246              	.L19:
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 247              		.loc 1 280 0
 248 015c 3B68     		ldr	r3, [r7, #0]
 249 015e DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 250 0160 012B     		cmp	r3, #1
 251 0162 06D1     		bne	.L20
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 252              		.loc 1 282 0
 253 0164 7B68     		ldr	r3, [r7, #4]
 254 0166 1B68     		ldr	r3, [r3, #0]
 255 0168 43F00402 		orr	r2, r3, #4
 256 016c 7B68     		ldr	r3, [r7, #4]
 257 016e 1A60     		str	r2, [r3, #0]
 258 0170 05E0     		b	.L21
 259              	.L20:
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 260              		.loc 1 286 0
 261 0172 7B68     		ldr	r3, [r7, #4]
 262 0174 1B68     		ldr	r3, [r3, #0]
 263 0176 23F00402 		bic	r2, r3, #4
 264 017a 7B68     		ldr	r3, [r7, #4]
 265 017c 1A60     		str	r2, [r3, #0]
 266              	.L21:
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 267              		.loc 1 290 0
 268 017e 3B68     		ldr	r3, [r7, #0]
 269 0180 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 270 0182 4FEA8372 		lsl	r2, r3, #30
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 271              		.loc 1 291 0
 272 0186 3B68     		ldr	r3, [r7, #0]
 273 0188 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 274 018a 4FEA0363 		lsl	r3, r3, #24
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 275              		.loc 1 290 0
 276 018e 1A43     		orrs	r2, r2, r3
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 277              		.loc 1 292 0
 278 0190 3B68     		ldr	r3, [r7, #0]
 279 0192 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 280 0194 4FEA0343 		lsl	r3, r3, #16
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 281              		.loc 1 291 0
 282 0198 1A43     		orrs	r2, r2, r3
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 283              		.loc 1 293 0
 284 019a 3B68     		ldr	r3, [r7, #0]
 285 019c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 286 019e 4FEA0353 		lsl	r3, r3, #20
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 287              		.loc 1 292 0
 288 01a2 1A43     		orrs	r2, r2, r3
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 289              		.loc 1 294 0
 290 01a4 3B68     		ldr	r3, [r7, #0]
 291 01a6 1B88     		ldrh	r3, [r3, #0]
 292 01a8 03F1FF33 		add	r3, r3, #-1
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 293              		.loc 1 293 0
 294 01ac 1A43     		orrs	r2, r2, r3
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 295              		.loc 1 290 0
 296 01ae 7B68     		ldr	r3, [r7, #4]
 297 01b0 DA61     		str	r2, [r3, #28]
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 298              		.loc 1 297 0
 299 01b2 7B68     		ldr	r3, [r7, #4]
 300 01b4 1B68     		ldr	r3, [r3, #0]
 301 01b6 23F00102 		bic	r2, r3, #1
 302 01ba 7B68     		ldr	r3, [r7, #4]
 303 01bc 1A60     		str	r2, [r3, #0]
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 304              		.loc 1 300 0
 305 01be 4FF00003 		mov	r3, #0
 306 01c2 BB60     		str	r3, [r7, #8]
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 307              		.loc 1 302 0
 308 01c4 03E0     		b	.L22
 309              	.L24:
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 310              		.loc 1 304 0
 311 01c6 BB68     		ldr	r3, [r7, #8]
 312 01c8 03F10103 		add	r3, r3, #1
 313 01cc BB60     		str	r3, [r7, #8]
 314              	.L22:
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 315              		.loc 1 302 0 discriminator 1
 316 01ce 7B68     		ldr	r3, [r7, #4]
 317 01d0 5B68     		ldr	r3, [r3, #4]
 318 01d2 03F00103 		and	r3, r3, #1
 319 01d6 DBB2     		uxtb	r3, r3
 320 01d8 002B     		cmp	r3, #0
 321 01da 04D0     		beq	.L23
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 322              		.loc 1 302 0 is_stmt 0 discriminator 2
 323 01dc BA68     		ldr	r2, [r7, #8]
 324 01de 4FF6FF73 		movw	r3, #65535
 325 01e2 9A42     		cmp	r2, r3
 326 01e4 EFD1     		bne	.L24
 327              	.L23:
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 328              		.loc 1 308 0 is_stmt 1
 329 01e6 7B68     		ldr	r3, [r7, #4]
 330 01e8 5B68     		ldr	r3, [r3, #4]
 331 01ea 03F00103 		and	r3, r3, #1
 332 01ee DBB2     		uxtb	r3, r3
 333 01f0 002B     		cmp	r3, #0
 334 01f2 03D0     		beq	.L25
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 335              		.loc 1 310 0
 336 01f4 4FF00003 		mov	r3, #0
 337 01f8 FB73     		strb	r3, [r7, #15]
 338 01fa 02E0     		b	.L9
 339              	.L25:
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 340              		.loc 1 314 0
 341 01fc 4FF00103 		mov	r3, #1
 342 0200 FB73     		strb	r3, [r7, #15]
 343              	.L9:
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 344              		.loc 1 319 0
 345 0202 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 346              		.loc 1 320 0
 347 0204 1846     		mov	r0, r3
 348 0206 07F11407 		add	r7, r7, #20
 349 020a BD46     		mov	sp, r7
 350 020c 80BC     		pop	{r7}
 351 020e 7047     		bx	lr
 352              		.cfi_endproc
 353              	.LFE111:
 355              		.align	2
 356              		.global	CAN_FilterInit
 357              		.thumb
 358              		.thumb_func
 360              	CAN_FilterInit:
 361              	.LFB112:
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 362              		.loc 1 330 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 16
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367 0210 80B4     		push	{r7}
 368              	.LCFI6:
 369              		.cfi_def_cfa_offset 4
 370              		.cfi_offset 7, -4
 371 0212 85B0     		sub	sp, sp, #20
 372              	.LCFI7:
 373              		.cfi_def_cfa_offset 24
 374 0214 00AF     		add	r7, sp, #0
 375              	.LCFI8:
 376              		.cfi_def_cfa_register 7
 377 0216 7860     		str	r0, [r7, #4]
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 378              		.loc 1 331 0
 379 0218 4FF00003 		mov	r3, #0
 380 021c FB60     		str	r3, [r7, #12]
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 381              		.loc 1 339 0
 382 021e 7B68     		ldr	r3, [r7, #4]
 383 0220 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 384 0222 4FF00102 		mov	r2, #1
 385 0226 02FA03F3 		lsl	r3, r2, r3
 386 022a FB60     		str	r3, [r7, #12]
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 387              		.loc 1 342 0
 388 022c 4FF4C843 		mov	r3, #25600
 389 0230 C4F20003 		movt	r3, 16384
 390 0234 4FF4C842 		mov	r2, #25600
 391 0238 C4F20002 		movt	r2, 16384
 392 023c D2F80022 		ldr	r2, [r2, #512]
 393 0240 42F00102 		orr	r2, r2, #1
 394 0244 C3F80022 		str	r2, [r3, #512]
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 395              		.loc 1 345 0
 396 0248 4FF4C843 		mov	r3, #25600
 397 024c C4F20003 		movt	r3, 16384
 398 0250 4FF4C842 		mov	r2, #25600
 399 0254 C4F20002 		movt	r2, 16384
 400 0258 D2F81C22 		ldr	r2, [r2, #540]
 401 025c 1146     		mov	r1, r2
 402 025e FA68     		ldr	r2, [r7, #12]
 403 0260 6FEA0202 		mvn	r2, r2
 404 0264 0A40     		ands	r2, r2, r1
 405 0266 C3F81C22 		str	r2, [r3, #540]
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 406              		.loc 1 348 0
 407 026a 7B68     		ldr	r3, [r7, #4]
 408 026c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 409 026e 002B     		cmp	r3, #0
 410 0270 34D1     		bne	.L27
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 411              		.loc 1 351 0
 412 0272 4FF4C843 		mov	r3, #25600
 413 0276 C4F20003 		movt	r3, 16384
 414 027a 4FF4C842 		mov	r2, #25600
 415 027e C4F20002 		movt	r2, 16384
 416 0282 D2F80C22 		ldr	r2, [r2, #524]
 417 0286 1146     		mov	r1, r2
 418 0288 FA68     		ldr	r2, [r7, #12]
 419 028a 6FEA0202 		mvn	r2, r2
 420 028e 0A40     		ands	r2, r2, r1
 421 0290 C3F80C22 		str	r2, [r3, #524]
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 422              		.loc 1 355 0
 423 0294 4FF4C843 		mov	r3, #25600
 424 0298 C4F20003 		movt	r3, 16384
 425 029c 7A68     		ldr	r2, [r7, #4]
 426 029e 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 427              		.loc 1 356 0
 428 02a0 7968     		ldr	r1, [r7, #4]
 429 02a2 C988     		ldrh	r1, [r1, #6]
 430 02a4 4FEA0140 		lsl	r0, r1, #16
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 431              		.loc 1 357 0
 432 02a8 7968     		ldr	r1, [r7, #4]
 433 02aa 4988     		ldrh	r1, [r1, #2]
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 434              		.loc 1 356 0
 435 02ac 0143     		orrs	r1, r1, r0
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 436              		.loc 1 355 0
 437 02ae 02F14802 		add	r2, r2, #72
 438 02b2 43F83210 		str	r1, [r3, r2, lsl #3]
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 439              		.loc 1 361 0
 440 02b6 4FF4C842 		mov	r2, #25600
 441 02ba C4F20002 		movt	r2, 16384
 442 02be 7B68     		ldr	r3, [r7, #4]
 443 02c0 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 444              		.loc 1 362 0
 445 02c2 7968     		ldr	r1, [r7, #4]
 446 02c4 8988     		ldrh	r1, [r1, #4]
 447 02c6 4FEA0140 		lsl	r0, r1, #16
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 448              		.loc 1 363 0
 449 02ca 7968     		ldr	r1, [r7, #4]
 450 02cc 0988     		ldrh	r1, [r1, #0]
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 451              		.loc 1 362 0
 452 02ce 0143     		orrs	r1, r1, r0
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 453              		.loc 1 361 0
 454 02d0 03F14803 		add	r3, r3, #72
 455 02d4 4FEAC303 		lsl	r3, r3, #3
 456 02d8 D318     		adds	r3, r2, r3
 457 02da 5960     		str	r1, [r3, #4]
 458              	.L27:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 459              		.loc 1 366 0
 460 02dc 7B68     		ldr	r3, [r7, #4]
 461 02de 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 462 02e0 012B     		cmp	r3, #1
 463 02e2 32D1     		bne	.L28
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 464              		.loc 1 369 0
 465 02e4 4FF4C843 		mov	r3, #25600
 466 02e8 C4F20003 		movt	r3, 16384
 467 02ec 4FF4C842 		mov	r2, #25600
 468 02f0 C4F20002 		movt	r2, 16384
 469 02f4 D2F80C22 		ldr	r2, [r2, #524]
 470 02f8 1146     		mov	r1, r2
 471 02fa FA68     		ldr	r2, [r7, #12]
 472 02fc 0A43     		orrs	r2, r2, r1
 473 02fe C3F80C22 		str	r2, [r3, #524]
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 474              		.loc 1 371 0
 475 0302 4FF4C843 		mov	r3, #25600
 476 0306 C4F20003 		movt	r3, 16384
 477 030a 7A68     		ldr	r2, [r7, #4]
 478 030c 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 479              		.loc 1 372 0
 480 030e 7968     		ldr	r1, [r7, #4]
 481 0310 0988     		ldrh	r1, [r1, #0]
 482 0312 4FEA0140 		lsl	r0, r1, #16
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 483              		.loc 1 373 0
 484 0316 7968     		ldr	r1, [r7, #4]
 485 0318 4988     		ldrh	r1, [r1, #2]
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 486              		.loc 1 372 0
 487 031a 0143     		orrs	r1, r1, r0
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 488              		.loc 1 371 0
 489 031c 02F14802 		add	r2, r2, #72
 490 0320 43F83210 		str	r1, [r3, r2, lsl #3]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 491              		.loc 1 375 0
 492 0324 4FF4C842 		mov	r2, #25600
 493 0328 C4F20002 		movt	r2, 16384
 494 032c 7B68     		ldr	r3, [r7, #4]
 495 032e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 496              		.loc 1 376 0
 497 0330 7968     		ldr	r1, [r7, #4]
 498 0332 8988     		ldrh	r1, [r1, #4]
 499 0334 4FEA0140 		lsl	r0, r1, #16
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 500              		.loc 1 377 0
 501 0338 7968     		ldr	r1, [r7, #4]
 502 033a C988     		ldrh	r1, [r1, #6]
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 503              		.loc 1 376 0
 504 033c 0143     		orrs	r1, r1, r0
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 505              		.loc 1 375 0
 506 033e 03F14803 		add	r3, r3, #72
 507 0342 4FEAC303 		lsl	r3, r3, #3
 508 0346 D318     		adds	r3, r2, r3
 509 0348 5960     		str	r1, [r3, #4]
 510              	.L28:
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 511              		.loc 1 381 0
 512 034a 7B68     		ldr	r3, [r7, #4]
 513 034c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 514 034e 002B     		cmp	r3, #0
 515 0350 11D1     		bne	.L29
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 516              		.loc 1 384 0
 517 0352 4FF4C843 		mov	r3, #25600
 518 0356 C4F20003 		movt	r3, 16384
 519 035a 4FF4C842 		mov	r2, #25600
 520 035e C4F20002 		movt	r2, 16384
 521 0362 D2F80422 		ldr	r2, [r2, #516]
 522 0366 1146     		mov	r1, r2
 523 0368 FA68     		ldr	r2, [r7, #12]
 524 036a 6FEA0202 		mvn	r2, r2
 525 036e 0A40     		ands	r2, r2, r1
 526 0370 C3F80422 		str	r2, [r3, #516]
 527 0374 0EE0     		b	.L30
 528              	.L29:
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 529              		.loc 1 389 0
 530 0376 4FF4C843 		mov	r3, #25600
 531 037a C4F20003 		movt	r3, 16384
 532 037e 4FF4C842 		mov	r2, #25600
 533 0382 C4F20002 		movt	r2, 16384
 534 0386 D2F80422 		ldr	r2, [r2, #516]
 535 038a 1146     		mov	r1, r2
 536 038c FA68     		ldr	r2, [r7, #12]
 537 038e 0A43     		orrs	r2, r2, r1
 538 0390 C3F80422 		str	r2, [r3, #516]
 539              	.L30:
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 540              		.loc 1 393 0
 541 0394 7B68     		ldr	r3, [r7, #4]
 542 0396 1B89     		ldrh	r3, [r3, #8]
 543 0398 002B     		cmp	r3, #0
 544 039a 10D1     		bne	.L31
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 545              		.loc 1 396 0
 546 039c 4FF4C843 		mov	r3, #25600
 547 03a0 C4F20003 		movt	r3, 16384
 548 03a4 4FF4C842 		mov	r2, #25600
 549 03a8 C4F20002 		movt	r2, 16384
 550 03ac D2F81422 		ldr	r2, [r2, #532]
 551 03b0 1146     		mov	r1, r2
 552 03b2 FA68     		ldr	r2, [r7, #12]
 553 03b4 6FEA0202 		mvn	r2, r2
 554 03b8 0A40     		ands	r2, r2, r1
 555 03ba C3F81422 		str	r2, [r3, #532]
 556              	.L31:
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 557              		.loc 1 399 0
 558 03be 7B68     		ldr	r3, [r7, #4]
 559 03c0 1B89     		ldrh	r3, [r3, #8]
 560 03c2 012B     		cmp	r3, #1
 561 03c4 0ED1     		bne	.L32
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 562              		.loc 1 402 0
 563 03c6 4FF4C843 		mov	r3, #25600
 564 03ca C4F20003 		movt	r3, 16384
 565 03ce 4FF4C842 		mov	r2, #25600
 566 03d2 C4F20002 		movt	r2, 16384
 567 03d6 D2F81422 		ldr	r2, [r2, #532]
 568 03da 1146     		mov	r1, r2
 569 03dc FA68     		ldr	r2, [r7, #12]
 570 03de 0A43     		orrs	r2, r2, r1
 571 03e0 C3F81422 		str	r2, [r3, #532]
 572              	.L32:
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 573              		.loc 1 406 0
 574 03e4 7B68     		ldr	r3, [r7, #4]
 575 03e6 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 576 03e8 012B     		cmp	r3, #1
 577 03ea 0ED1     		bne	.L33
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 578              		.loc 1 408 0
 579 03ec 4FF4C843 		mov	r3, #25600
 580 03f0 C4F20003 		movt	r3, 16384
 581 03f4 4FF4C842 		mov	r2, #25600
 582 03f8 C4F20002 		movt	r2, 16384
 583 03fc D2F81C22 		ldr	r2, [r2, #540]
 584 0400 1146     		mov	r1, r2
 585 0402 FA68     		ldr	r2, [r7, #12]
 586 0404 0A43     		orrs	r2, r2, r1
 587 0406 C3F81C22 		str	r2, [r3, #540]
 588              	.L33:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 589              		.loc 1 412 0
 590 040a 4FF4C843 		mov	r3, #25600
 591 040e C4F20003 		movt	r3, 16384
 592 0412 4FF4C842 		mov	r2, #25600
 593 0416 C4F20002 		movt	r2, 16384
 594 041a D2F80022 		ldr	r2, [r2, #512]
 595 041e 22F00102 		bic	r2, r2, #1
 596 0422 C3F80022 		str	r2, [r3, #512]
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 597              		.loc 1 413 0
 598 0426 07F11407 		add	r7, r7, #20
 599 042a BD46     		mov	sp, r7
 600 042c 80BC     		pop	{r7}
 601 042e 7047     		bx	lr
 602              		.cfi_endproc
 603              	.LFE112:
 605              		.align	2
 606              		.global	CAN_StructInit
 607              		.thumb
 608              		.thumb_func
 610              	CAN_StructInit:
 611              	.LFB113:
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 612              		.loc 1 421 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 8
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617 0430 80B4     		push	{r7}
 618              	.LCFI9:
 619              		.cfi_def_cfa_offset 4
 620              		.cfi_offset 7, -4
 621 0432 83B0     		sub	sp, sp, #12
 622              	.LCFI10:
 623              		.cfi_def_cfa_offset 16
 624 0434 00AF     		add	r7, sp, #0
 625              	.LCFI11:
 626              		.cfi_def_cfa_register 7
 627 0436 7860     		str	r0, [r7, #4]
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 628              		.loc 1 425 0
 629 0438 7B68     		ldr	r3, [r7, #4]
 630 043a 4FF00002 		mov	r2, #0
 631 043e 9A71     		strb	r2, [r3, #6]
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 632              		.loc 1 428 0
 633 0440 7B68     		ldr	r3, [r7, #4]
 634 0442 4FF00002 		mov	r2, #0
 635 0446 DA71     		strb	r2, [r3, #7]
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 636              		.loc 1 431 0
 637 0448 7B68     		ldr	r3, [r7, #4]
 638 044a 4FF00002 		mov	r2, #0
 639 044e 1A72     		strb	r2, [r3, #8]
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 640              		.loc 1 434 0
 641 0450 7B68     		ldr	r3, [r7, #4]
 642 0452 4FF00002 		mov	r2, #0
 643 0456 5A72     		strb	r2, [r3, #9]
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 644              		.loc 1 437 0
 645 0458 7B68     		ldr	r3, [r7, #4]
 646 045a 4FF00002 		mov	r2, #0
 647 045e 9A72     		strb	r2, [r3, #10]
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 648              		.loc 1 440 0
 649 0460 7B68     		ldr	r3, [r7, #4]
 650 0462 4FF00002 		mov	r2, #0
 651 0466 DA72     		strb	r2, [r3, #11]
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 652              		.loc 1 443 0
 653 0468 7B68     		ldr	r3, [r7, #4]
 654 046a 4FF00002 		mov	r2, #0
 655 046e 9A70     		strb	r2, [r3, #2]
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 656              		.loc 1 446 0
 657 0470 7B68     		ldr	r3, [r7, #4]
 658 0472 4FF00002 		mov	r2, #0
 659 0476 DA70     		strb	r2, [r3, #3]
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 660              		.loc 1 449 0
 661 0478 7B68     		ldr	r3, [r7, #4]
 662 047a 4FF00302 		mov	r2, #3
 663 047e 1A71     		strb	r2, [r3, #4]
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 664              		.loc 1 452 0
 665 0480 7B68     		ldr	r3, [r7, #4]
 666 0482 4FF00202 		mov	r2, #2
 667 0486 5A71     		strb	r2, [r3, #5]
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 668              		.loc 1 455 0
 669 0488 7B68     		ldr	r3, [r7, #4]
 670 048a 4FF00102 		mov	r2, #1
 671 048e 1A80     		strh	r2, [r3, #0]	@ movhi
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 672              		.loc 1 456 0
 673 0490 07F10C07 		add	r7, r7, #12
 674 0494 BD46     		mov	sp, r7
 675 0496 80BC     		pop	{r7}
 676 0498 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE113:
 680 049a 00BF     		.align	2
 681              		.global	CAN_SlaveStartBank
 682              		.thumb
 683              		.thumb_func
 685              	CAN_SlaveStartBank:
 686              	.LFB114:
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 687              		.loc 1 464 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 8
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692 049c 80B4     		push	{r7}
 693              	.LCFI12:
 694              		.cfi_def_cfa_offset 4
 695              		.cfi_offset 7, -4
 696 049e 83B0     		sub	sp, sp, #12
 697              	.LCFI13:
 698              		.cfi_def_cfa_offset 16
 699 04a0 00AF     		add	r7, sp, #0
 700              	.LCFI14:
 701              		.cfi_def_cfa_register 7
 702 04a2 0346     		mov	r3, r0
 703 04a4 FB71     		strb	r3, [r7, #7]
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 704              		.loc 1 469 0
 705 04a6 4FF4C843 		mov	r3, #25600
 706 04aa C4F20003 		movt	r3, 16384
 707 04ae 4FF4C842 		mov	r2, #25600
 708 04b2 C4F20002 		movt	r2, 16384
 709 04b6 D2F80022 		ldr	r2, [r2, #512]
 710 04ba 42F00102 		orr	r2, r2, #1
 711 04be C3F80022 		str	r2, [r3, #512]
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 712              		.loc 1 472 0
 713 04c2 4FF4C843 		mov	r3, #25600
 714 04c6 C4F20003 		movt	r3, 16384
 715 04ca 4FF4C842 		mov	r2, #25600
 716 04ce C4F20002 		movt	r2, 16384
 717 04d2 D2F80022 		ldr	r2, [r2, #512]
 718 04d6 22F47C52 		bic	r2, r2, #16128
 719 04da 22F00E02 		bic	r2, r2, #14
 720 04de C3F80022 		str	r2, [r3, #512]
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 721              		.loc 1 473 0
 722 04e2 4FF4C843 		mov	r3, #25600
 723 04e6 C4F20003 		movt	r3, 16384
 724 04ea 4FF4C842 		mov	r2, #25600
 725 04ee C4F20002 		movt	r2, 16384
 726 04f2 D2F80022 		ldr	r2, [r2, #512]
 727 04f6 1146     		mov	r1, r2
 728 04f8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 729 04fa 4FEA0222 		lsl	r2, r2, #8
 730 04fe 0A43     		orrs	r2, r2, r1
 731 0500 C3F80022 		str	r2, [r3, #512]
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 732              		.loc 1 476 0
 733 0504 4FF4C843 		mov	r3, #25600
 734 0508 C4F20003 		movt	r3, 16384
 735 050c 4FF4C842 		mov	r2, #25600
 736 0510 C4F20002 		movt	r2, 16384
 737 0514 D2F80022 		ldr	r2, [r2, #512]
 738 0518 22F00102 		bic	r2, r2, #1
 739 051c C3F80022 		str	r2, [r3, #512]
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 740              		.loc 1 477 0
 741 0520 07F10C07 		add	r7, r7, #12
 742 0524 BD46     		mov	sp, r7
 743 0526 80BC     		pop	{r7}
 744 0528 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE114:
 748 052a 00BF     		.align	2
 749              		.global	CAN_DBGFreeze
 750              		.thumb
 751              		.thumb_func
 753              	CAN_DBGFreeze:
 754              	.LFB115:
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 755              		.loc 1 489 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 760 052c 80B4     		push	{r7}
 761              	.LCFI15:
 762              		.cfi_def_cfa_offset 4
 763              		.cfi_offset 7, -4
 764 052e 83B0     		sub	sp, sp, #12
 765              	.LCFI16:
 766              		.cfi_def_cfa_offset 16
 767 0530 00AF     		add	r7, sp, #0
 768              	.LCFI17:
 769              		.cfi_def_cfa_register 7
 770 0532 7860     		str	r0, [r7, #4]
 771 0534 0B46     		mov	r3, r1
 772 0536 FB70     		strb	r3, [r7, #3]
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 773              		.loc 1 494 0
 774 0538 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 775 053a 002B     		cmp	r3, #0
 776 053c 06D0     		beq	.L37
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 777              		.loc 1 497 0
 778 053e 7B68     		ldr	r3, [r7, #4]
 779 0540 1B68     		ldr	r3, [r3, #0]
 780 0542 43F48032 		orr	r2, r3, #65536
 781 0546 7B68     		ldr	r3, [r7, #4]
 782 0548 1A60     		str	r2, [r3, #0]
 783 054a 05E0     		b	.L36
 784              	.L37:
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 785              		.loc 1 502 0
 786 054c 7B68     		ldr	r3, [r7, #4]
 787 054e 1B68     		ldr	r3, [r3, #0]
 788 0550 23F48032 		bic	r2, r3, #65536
 789 0554 7B68     		ldr	r3, [r7, #4]
 790 0556 1A60     		str	r2, [r3, #0]
 791              	.L36:
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 792              		.loc 1 504 0
 793 0558 07F10C07 		add	r7, r7, #12
 794 055c BD46     		mov	sp, r7
 795 055e 80BC     		pop	{r7}
 796 0560 7047     		bx	lr
 797              		.cfi_endproc
 798              	.LFE115:
 800 0562 00BF     		.align	2
 801              		.global	CAN_TTComModeCmd
 802              		.thumb
 803              		.thumb_func
 805              	CAN_TTComModeCmd:
 806              	.LFB116:
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 807              		.loc 1 519 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 8
 810              		@ frame_needed = 1, uses_anonymous_args = 0
 811              		@ link register save eliminated.
 812 0564 80B4     		push	{r7}
 813              	.LCFI18:
 814              		.cfi_def_cfa_offset 4
 815              		.cfi_offset 7, -4
 816 0566 83B0     		sub	sp, sp, #12
 817              	.LCFI19:
 818              		.cfi_def_cfa_offset 16
 819 0568 00AF     		add	r7, sp, #0
 820              	.LCFI20:
 821              		.cfi_def_cfa_register 7
 822 056a 7860     		str	r0, [r7, #4]
 823 056c 0B46     		mov	r3, r1
 824 056e FB70     		strb	r3, [r7, #3]
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 825              		.loc 1 523 0
 826 0570 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 827 0572 002B     		cmp	r3, #0
 828 0574 1ED0     		beq	.L40
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 829              		.loc 1 526 0
 830 0576 7B68     		ldr	r3, [r7, #4]
 831 0578 1B68     		ldr	r3, [r3, #0]
 832 057a 43F08002 		orr	r2, r3, #128
 833 057e 7B68     		ldr	r3, [r7, #4]
 834 0580 1A60     		str	r2, [r3, #0]
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 835              		.loc 1 529 0
 836 0582 7B68     		ldr	r3, [r7, #4]
 837 0584 D3F88431 		ldr	r3, [r3, #388]
 838 0588 43F48072 		orr	r2, r3, #256
 839 058c 7B68     		ldr	r3, [r7, #4]
 840 058e C3F88421 		str	r2, [r3, #388]
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 841              		.loc 1 530 0
 842 0592 7B68     		ldr	r3, [r7, #4]
 843 0594 D3F89431 		ldr	r3, [r3, #404]
 844 0598 43F48072 		orr	r2, r3, #256
 845 059c 7B68     		ldr	r3, [r7, #4]
 846 059e C3F89421 		str	r2, [r3, #404]
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 847              		.loc 1 531 0
 848 05a2 7B68     		ldr	r3, [r7, #4]
 849 05a4 D3F8A431 		ldr	r3, [r3, #420]
 850 05a8 43F48072 		orr	r2, r3, #256
 851 05ac 7B68     		ldr	r3, [r7, #4]
 852 05ae C3F8A421 		str	r2, [r3, #420]
 853 05b2 1DE0     		b	.L39
 854              	.L40:
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 855              		.loc 1 536 0
 856 05b4 7B68     		ldr	r3, [r7, #4]
 857 05b6 1B68     		ldr	r3, [r3, #0]
 858 05b8 23F08002 		bic	r2, r3, #128
 859 05bc 7B68     		ldr	r3, [r7, #4]
 860 05be 1A60     		str	r2, [r3, #0]
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 861              		.loc 1 539 0
 862 05c0 7B68     		ldr	r3, [r7, #4]
 863 05c2 D3F88431 		ldr	r3, [r3, #388]
 864 05c6 23F48072 		bic	r2, r3, #256
 865 05ca 7B68     		ldr	r3, [r7, #4]
 866 05cc C3F88421 		str	r2, [r3, #388]
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 867              		.loc 1 540 0
 868 05d0 7B68     		ldr	r3, [r7, #4]
 869 05d2 D3F89431 		ldr	r3, [r3, #404]
 870 05d6 23F48072 		bic	r2, r3, #256
 871 05da 7B68     		ldr	r3, [r7, #4]
 872 05dc C3F89421 		str	r2, [r3, #404]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 873              		.loc 1 541 0
 874 05e0 7B68     		ldr	r3, [r7, #4]
 875 05e2 D3F8A431 		ldr	r3, [r3, #420]
 876 05e6 23F48072 		bic	r2, r3, #256
 877 05ea 7B68     		ldr	r3, [r7, #4]
 878 05ec C3F8A421 		str	r2, [r3, #420]
 879              	.L39:
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 880              		.loc 1 543 0
 881 05f0 07F10C07 		add	r7, r7, #12
 882 05f4 BD46     		mov	sp, r7
 883 05f6 80BC     		pop	{r7}
 884 05f8 7047     		bx	lr
 885              		.cfi_endproc
 886              	.LFE116:
 888 05fa 00BF     		.align	2
 889              		.global	CAN_Transmit
 890              		.thumb
 891              		.thumb_func
 893              	CAN_Transmit:
 894              	.LFB117:
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 895              		.loc 1 573 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 16
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900 05fc 80B4     		push	{r7}
 901              	.LCFI21:
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 05fe 85B0     		sub	sp, sp, #20
 905              	.LCFI22:
 906              		.cfi_def_cfa_offset 24
 907 0600 00AF     		add	r7, sp, #0
 908              	.LCFI23:
 909              		.cfi_def_cfa_register 7
 910 0602 7860     		str	r0, [r7, #4]
 911 0604 3960     		str	r1, [r7, #0]
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 912              		.loc 1 574 0
 913 0606 4FF00003 		mov	r3, #0
 914 060a FB73     		strb	r3, [r7, #15]
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 915              		.loc 1 582 0
 916 060c 7B68     		ldr	r3, [r7, #4]
 917 060e 9B68     		ldr	r3, [r3, #8]
 918 0610 03F08063 		and	r3, r3, #67108864
 919 0614 002B     		cmp	r3, #0
 920 0616 03D0     		beq	.L43
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 921              		.loc 1 584 0
 922 0618 4FF00003 		mov	r3, #0
 923 061c FB73     		strb	r3, [r7, #15]
 924 061e 16E0     		b	.L44
 925              	.L43:
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 926              		.loc 1 586 0
 927 0620 7B68     		ldr	r3, [r7, #4]
 928 0622 9B68     		ldr	r3, [r3, #8]
 929 0624 03F00063 		and	r3, r3, #134217728
 930 0628 002B     		cmp	r3, #0
 931 062a 03D0     		beq	.L45
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 932              		.loc 1 588 0
 933 062c 4FF00103 		mov	r3, #1
 934 0630 FB73     		strb	r3, [r7, #15]
 935 0632 0CE0     		b	.L44
 936              	.L45:
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 937              		.loc 1 590 0
 938 0634 7B68     		ldr	r3, [r7, #4]
 939 0636 9B68     		ldr	r3, [r3, #8]
 940 0638 03F08053 		and	r3, r3, #268435456
 941 063c 002B     		cmp	r3, #0
 942 063e 03D0     		beq	.L46
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 943              		.loc 1 592 0
 944 0640 4FF00203 		mov	r3, #2
 945 0644 FB73     		strb	r3, [r7, #15]
 946 0646 02E0     		b	.L44
 947              	.L46:
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 948              		.loc 1 596 0
 949 0648 4FF00403 		mov	r3, #4
 950 064c FB73     		strb	r3, [r7, #15]
 951              	.L44:
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 952              		.loc 1 599 0
 953 064e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 954 0650 042B     		cmp	r3, #4
 955 0652 00F0BD80 		beq	.L47
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 956              		.loc 1 602 0
 957 0656 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 958 0658 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 959 065a 7968     		ldr	r1, [r7, #4]
 960 065c 02F11802 		add	r2, r2, #24
 961 0660 4FEA0212 		lsl	r2, r2, #4
 962 0664 8A18     		adds	r2, r1, r2
 963 0666 1268     		ldr	r2, [r2, #0]
 964 0668 02F00102 		and	r2, r2, #1
 965 066c 7968     		ldr	r1, [r7, #4]
 966 066e 03F11803 		add	r3, r3, #24
 967 0672 4FEA0313 		lsl	r3, r3, #4
 968 0676 CB18     		adds	r3, r1, r3
 969 0678 1A60     		str	r2, [r3, #0]
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 970              		.loc 1 603 0
 971 067a 3B68     		ldr	r3, [r7, #0]
 972 067c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 973 067e 002B     		cmp	r3, #0
 974 0680 19D1     		bne	.L48
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 975              		.loc 1 606 0
 976 0682 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 977 0684 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 978 0686 7968     		ldr	r1, [r7, #4]
 979 0688 02F11802 		add	r2, r2, #24
 980 068c 4FEA0212 		lsl	r2, r2, #4
 981 0690 8A18     		adds	r2, r1, r2
 982 0692 1268     		ldr	r2, [r2, #0]
 983 0694 1146     		mov	r1, r2
 984 0696 3A68     		ldr	r2, [r7, #0]
 985 0698 1268     		ldr	r2, [r2, #0]
 986 069a 4FEA4250 		lsl	r0, r2, #21
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 987              		.loc 1 607 0
 988 069e 3A68     		ldr	r2, [r7, #0]
 989 06a0 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 990              		.loc 1 606 0
 991 06a2 0243     		orrs	r2, r2, r0
 992 06a4 0A43     		orrs	r2, r2, r1
 993 06a6 7968     		ldr	r1, [r7, #4]
 994 06a8 03F11803 		add	r3, r3, #24
 995 06ac 4FEA0313 		lsl	r3, r3, #4
 996 06b0 CB18     		adds	r3, r1, r3
 997 06b2 1A60     		str	r2, [r3, #0]
 998 06b4 1BE0     		b	.L49
 999              	.L48:
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1000              		.loc 1 612 0
 1001 06b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1002 06b8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1003 06ba 7968     		ldr	r1, [r7, #4]
 1004 06bc 02F11802 		add	r2, r2, #24
 1005 06c0 4FEA0212 		lsl	r2, r2, #4
 1006 06c4 8A18     		adds	r2, r1, r2
 1007 06c6 1268     		ldr	r2, [r2, #0]
 1008 06c8 1146     		mov	r1, r2
 1009 06ca 3A68     		ldr	r2, [r7, #0]
 1010 06cc 5268     		ldr	r2, [r2, #4]
 1011 06ce 4FEAC200 		lsl	r0, r2, #3
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1012              		.loc 1 613 0
 1013 06d2 3A68     		ldr	r2, [r7, #0]
 1014 06d4 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1015              		.loc 1 612 0
 1016 06d6 1043     		orrs	r0, r0, r2
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 1017              		.loc 1 614 0
 1018 06d8 3A68     		ldr	r2, [r7, #0]
 1019 06da 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1020              		.loc 1 613 0
 1021 06dc 0243     		orrs	r2, r2, r0
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1022              		.loc 1 612 0
 1023 06de 0A43     		orrs	r2, r2, r1
 1024 06e0 7968     		ldr	r1, [r7, #4]
 1025 06e2 03F11803 		add	r3, r3, #24
 1026 06e6 4FEA0313 		lsl	r3, r3, #4
 1027 06ea CB18     		adds	r3, r1, r3
 1028 06ec 1A60     		str	r2, [r3, #0]
 1029              	.L49:
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 1030              		.loc 1 618 0
 1031 06ee 3B68     		ldr	r3, [r7, #0]
 1032 06f0 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1033 06f2 03F00F03 		and	r3, r3, #15
 1034 06f6 DAB2     		uxtb	r2, r3
 1035 06f8 3B68     		ldr	r3, [r7, #0]
 1036 06fa 9A72     		strb	r2, [r3, #10]
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 1037              		.loc 1 619 0
 1038 06fc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1039 06fe FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1040 0700 7968     		ldr	r1, [r7, #4]
 1041 0702 02F11802 		add	r2, r2, #24
 1042 0706 4FEA0212 		lsl	r2, r2, #4
 1043 070a 8A18     		adds	r2, r1, r2
 1044 070c 5268     		ldr	r2, [r2, #4]
 1045 070e 22F00F02 		bic	r2, r2, #15
 1046 0712 7968     		ldr	r1, [r7, #4]
 1047 0714 03F11803 		add	r3, r3, #24
 1048 0718 4FEA0313 		lsl	r3, r3, #4
 1049 071c CB18     		adds	r3, r1, r3
 1050 071e 5A60     		str	r2, [r3, #4]
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 1051              		.loc 1 620 0
 1052 0720 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1053 0722 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1054 0724 7968     		ldr	r1, [r7, #4]
 1055 0726 02F11802 		add	r2, r2, #24
 1056 072a 4FEA0212 		lsl	r2, r2, #4
 1057 072e 8A18     		adds	r2, r1, r2
 1058 0730 5268     		ldr	r2, [r2, #4]
 1059 0732 1146     		mov	r1, r2
 1060 0734 3A68     		ldr	r2, [r7, #0]
 1061 0736 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 1062 0738 0A43     		orrs	r2, r2, r1
 1063 073a 7968     		ldr	r1, [r7, #4]
 1064 073c 03F11803 		add	r3, r3, #24
 1065 0740 4FEA0313 		lsl	r3, r3, #4
 1066 0744 CB18     		adds	r3, r1, r3
 1067 0746 5A60     		str	r2, [r3, #4]
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1068              		.loc 1 623 0
 1069 0748 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1070 074a 3A68     		ldr	r2, [r7, #0]
 1071 074c 927B     		ldrb	r2, [r2, #14]	@ zero_extendqisi2
 1072 074e 4FEA0261 		lsl	r1, r2, #24
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1073              		.loc 1 624 0
 1074 0752 3A68     		ldr	r2, [r7, #0]
 1075 0754 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 1076 0756 4FEA0242 		lsl	r2, r2, #16
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1077              		.loc 1 623 0
 1078 075a 1143     		orrs	r1, r1, r2
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1079              		.loc 1 625 0
 1080 075c 3A68     		ldr	r2, [r7, #0]
 1081 075e 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 1082 0760 4FEA0222 		lsl	r2, r2, #8
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1083              		.loc 1 624 0
 1084 0764 1143     		orrs	r1, r1, r2
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 1085              		.loc 1 626 0
 1086 0766 3A68     		ldr	r2, [r7, #0]
 1087 0768 D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1088              		.loc 1 625 0
 1089 076a 0A43     		orrs	r2, r2, r1
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1090              		.loc 1 623 0
 1091 076c 7968     		ldr	r1, [r7, #4]
 1092 076e 4FEA0313 		lsl	r3, r3, #4
 1093 0772 CB18     		adds	r3, r1, r3
 1094 0774 03F5C473 		add	r3, r3, #392
 1095 0778 1A60     		str	r2, [r3, #0]
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1096              		.loc 1 627 0
 1097 077a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1098 077c 3A68     		ldr	r2, [r7, #0]
 1099 077e 927C     		ldrb	r2, [r2, #18]	@ zero_extendqisi2
 1100 0780 4FEA0261 		lsl	r1, r2, #24
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1101              		.loc 1 628 0
 1102 0784 3A68     		ldr	r2, [r7, #0]
 1103 0786 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 1104 0788 4FEA0242 		lsl	r2, r2, #16
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1105              		.loc 1 627 0
 1106 078c 1143     		orrs	r1, r1, r2
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1107              		.loc 1 629 0
 1108 078e 3A68     		ldr	r2, [r7, #0]
 1109 0790 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 1110 0792 4FEA0222 		lsl	r2, r2, #8
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1111              		.loc 1 628 0
 1112 0796 1143     		orrs	r1, r1, r2
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 1113              		.loc 1 630 0
 1114 0798 3A68     		ldr	r2, [r7, #0]
 1115 079a D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1116              		.loc 1 629 0
 1117 079c 0A43     		orrs	r2, r2, r1
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1118              		.loc 1 627 0
 1119 079e 7968     		ldr	r1, [r7, #4]
 1120 07a0 4FEA0313 		lsl	r3, r3, #4
 1121 07a4 CB18     		adds	r3, r1, r3
 1122 07a6 03F5C473 		add	r3, r3, #392
 1123 07aa 5A60     		str	r2, [r3, #4]
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 1124              		.loc 1 632 0
 1125 07ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1126 07ae FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1127 07b0 7968     		ldr	r1, [r7, #4]
 1128 07b2 02F11802 		add	r2, r2, #24
 1129 07b6 4FEA0212 		lsl	r2, r2, #4
 1130 07ba 8A18     		adds	r2, r1, r2
 1131 07bc 1268     		ldr	r2, [r2, #0]
 1132 07be 42F00102 		orr	r2, r2, #1
 1133 07c2 7968     		ldr	r1, [r7, #4]
 1134 07c4 03F11803 		add	r3, r3, #24
 1135 07c8 4FEA0313 		lsl	r3, r3, #4
 1136 07cc CB18     		adds	r3, r1, r3
 1137 07ce 1A60     		str	r2, [r3, #0]
 1138              	.L47:
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 1139              		.loc 1 634 0
 1140 07d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1141              		.loc 1 635 0
 1142 07d2 1846     		mov	r0, r3
 1143 07d4 07F11407 		add	r7, r7, #20
 1144 07d8 BD46     		mov	sp, r7
 1145 07da 80BC     		pop	{r7}
 1146 07dc 7047     		bx	lr
 1147              		.cfi_endproc
 1148              	.LFE117:
 1150 07de 00BF     		.align	2
 1151              		.global	CAN_TransmitStatus
 1152              		.thumb
 1153              		.thumb_func
 1155              	CAN_TransmitStatus:
 1156              	.LFB118:
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1157              		.loc 1 645 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 16
 1160              		@ frame_needed = 1, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162 07e0 80B4     		push	{r7}
 1163              	.LCFI24:
 1164              		.cfi_def_cfa_offset 4
 1165              		.cfi_offset 7, -4
 1166 07e2 85B0     		sub	sp, sp, #20
 1167              	.LCFI25:
 1168              		.cfi_def_cfa_offset 24
 1169 07e4 00AF     		add	r7, sp, #0
 1170              	.LCFI26:
 1171              		.cfi_def_cfa_register 7
 1172 07e6 7860     		str	r0, [r7, #4]
 1173 07e8 0B46     		mov	r3, r1
 1174 07ea FB70     		strb	r3, [r7, #3]
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 1175              		.loc 1 646 0
 1176 07ec 4FF00003 		mov	r3, #0
 1177 07f0 FB60     		str	r3, [r7, #12]
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 1178              		.loc 1 652 0
 1179 07f2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1180 07f4 012B     		cmp	r3, #1
 1181 07f6 0DD0     		beq	.L53
 1182 07f8 022B     		cmp	r3, #2
 1183 07fa 15D0     		beq	.L54
 1184 07fc 002B     		cmp	r3, #0
 1185 07fe 1DD1     		bne	.L66
 1186              	.L52:
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 1187              		.loc 1 655 0
 1188 0800 7B68     		ldr	r3, [r7, #4]
 1189 0802 9B68     		ldr	r3, [r3, #8]
 1190 0804 1A46     		mov	r2, r3
 1191 0806 4FF00303 		mov	r3, #3
 1192 080a C0F20043 		movt	r3, 1024
 1193 080e 1340     		ands	r3, r3, r2
 1194 0810 FB60     		str	r3, [r7, #12]
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1195              		.loc 1 656 0
 1196 0812 17E0     		b	.L55
 1197              	.L53:
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 1198              		.loc 1 658 0
 1199 0814 7B68     		ldr	r3, [r7, #4]
 1200 0816 9B68     		ldr	r3, [r3, #8]
 1201 0818 1A46     		mov	r2, r3
 1202 081a 4FF44073 		mov	r3, #768
 1203 081e C0F60003 		movt	r3, 2048
 1204 0822 1340     		ands	r3, r3, r2
 1205 0824 FB60     		str	r3, [r7, #12]
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1206              		.loc 1 659 0
 1207 0826 0DE0     		b	.L55
 1208              	.L54:
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 1209              		.loc 1 661 0
 1210 0828 7B68     		ldr	r3, [r7, #4]
 1211 082a 9B68     		ldr	r3, [r3, #8]
 1212 082c 1A46     		mov	r2, r3
 1213 082e 4FF00003 		mov	r3, #0
 1214 0832 C1F20303 		movt	r3, 4099
 1215 0836 1340     		ands	r3, r3, r2
 1216 0838 FB60     		str	r3, [r7, #12]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1217              		.loc 1 662 0
 1218 083a 03E0     		b	.L55
 1219              	.L66:
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 1220              		.loc 1 664 0
 1221 083c 4FF00003 		mov	r3, #0
 1222 0840 FB60     		str	r3, [r7, #12]
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1223              		.loc 1 665 0
 1224 0842 00BF     		nop
 1225              	.L55:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 1226              		.loc 1 667 0
 1227 0844 FB68     		ldr	r3, [r7, #12]
 1228 0846 4FF48072 		mov	r2, #256
 1229 084a C0F60002 		movt	r2, 2048
 1230 084e 9342     		cmp	r3, r2
 1231 0850 2FD0     		beq	.L60
 1232 0852 4FF48072 		mov	r2, #256
 1233 0856 C0F60002 		movt	r2, 2048
 1234 085a 9342     		cmp	r3, r2
 1235 085c 0ED8     		bhi	.L64
 1236 085e 4FF00102 		mov	r2, #1
 1237 0862 C0F20042 		movt	r2, 1024
 1238 0866 9342     		cmp	r3, r2
 1239 0868 1FD0     		beq	.L58
 1240 086a 4FF00302 		mov	r2, #3
 1241 086e C0F20042 		movt	r2, 1024
 1242 0872 9342     		cmp	r3, r2
 1243 0874 25D0     		beq	.L59
 1244 0876 002B     		cmp	r3, #0
 1245 0878 13D0     		beq	.L57
 1246 087a 2EE0     		b	.L56
 1247              	.L64:
 1248 087c 4FF00002 		mov	r2, #0
 1249 0880 C1F20102 		movt	r2, 4097
 1250 0884 9342     		cmp	r3, r2
 1251 0886 18D0     		beq	.L62
 1252 0888 4FF00002 		mov	r2, #0
 1253 088c C1F20302 		movt	r2, 4099
 1254 0890 9342     		cmp	r3, r2
 1255 0892 1ED0     		beq	.L63
 1256 0894 4FF44072 		mov	r2, #768
 1257 0898 C0F60002 		movt	r2, 2048
 1258 089c 9342     		cmp	r3, r2
 1259 089e 14D0     		beq	.L61
 1260 08a0 1BE0     		b	.L56
 1261              	.L57:
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 1262              		.loc 1 670 0
 1263 08a2 4FF00203 		mov	r3, #2
 1264 08a6 FB60     		str	r3, [r7, #12]
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1265              		.loc 1 671 0
 1266 08a8 1BE0     		b	.L65
 1267              	.L58:
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 1268              		.loc 1 673 0
 1269 08aa 4FF00003 		mov	r3, #0
 1270 08ae FB60     		str	r3, [r7, #12]
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1271              		.loc 1 674 0
 1272 08b0 17E0     		b	.L65
 1273              	.L60:
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 1274              		.loc 1 675 0
 1275 08b2 4FF00003 		mov	r3, #0
 1276 08b6 FB60     		str	r3, [r7, #12]
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1277              		.loc 1 676 0
 1278 08b8 13E0     		b	.L65
 1279              	.L62:
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 1280              		.loc 1 677 0
 1281 08ba 4FF00003 		mov	r3, #0
 1282 08be FB60     		str	r3, [r7, #12]
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1283              		.loc 1 678 0
 1284 08c0 0FE0     		b	.L65
 1285              	.L59:
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 1286              		.loc 1 680 0
 1287 08c2 4FF00103 		mov	r3, #1
 1288 08c6 FB60     		str	r3, [r7, #12]
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1289              		.loc 1 681 0
 1290 08c8 0BE0     		b	.L65
 1291              	.L61:
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 1292              		.loc 1 682 0
 1293 08ca 4FF00103 		mov	r3, #1
 1294 08ce FB60     		str	r3, [r7, #12]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1295              		.loc 1 683 0
 1296 08d0 07E0     		b	.L65
 1297              	.L63:
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 1298              		.loc 1 684 0
 1299 08d2 4FF00103 		mov	r3, #1
 1300 08d6 FB60     		str	r3, [r7, #12]
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1301              		.loc 1 685 0
 1302 08d8 03E0     		b	.L65
 1303              	.L56:
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 1304              		.loc 1 686 0
 1305 08da 4FF00003 		mov	r3, #0
 1306 08de FB60     		str	r3, [r7, #12]
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1307              		.loc 1 687 0
 1308 08e0 00BF     		nop
 1309              	.L65:
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 1310              		.loc 1 689 0
 1311 08e2 FB68     		ldr	r3, [r7, #12]
 1312 08e4 DBB2     		uxtb	r3, r3
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1313              		.loc 1 690 0
 1314 08e6 1846     		mov	r0, r3
 1315 08e8 07F11407 		add	r7, r7, #20
 1316 08ec BD46     		mov	sp, r7
 1317 08ee 80BC     		pop	{r7}
 1318 08f0 7047     		bx	lr
 1319              		.cfi_endproc
 1320              	.LFE118:
 1322 08f2 00BF     		.align	2
 1323              		.global	CAN_CancelTransmit
 1324              		.thumb
 1325              		.thumb_func
 1327              	CAN_CancelTransmit:
 1328              	.LFB119:
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1329              		.loc 1 699 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 8
 1332              		@ frame_needed = 1, uses_anonymous_args = 0
 1333              		@ link register save eliminated.
 1334 08f4 80B4     		push	{r7}
 1335              	.LCFI27:
 1336              		.cfi_def_cfa_offset 4
 1337              		.cfi_offset 7, -4
 1338 08f6 83B0     		sub	sp, sp, #12
 1339              	.LCFI28:
 1340              		.cfi_def_cfa_offset 16
 1341 08f8 00AF     		add	r7, sp, #0
 1342              	.LCFI29:
 1343              		.cfi_def_cfa_register 7
 1344 08fa 7860     		str	r0, [r7, #4]
 1345 08fc 0B46     		mov	r3, r1
 1346 08fe FB70     		strb	r3, [r7, #3]
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 1347              		.loc 1 704 0
 1348 0900 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1349 0902 012B     		cmp	r3, #1
 1350 0904 0AD0     		beq	.L70
 1351 0906 022B     		cmp	r3, #2
 1352 0908 0FD0     		beq	.L71
 1353 090a 002B     		cmp	r3, #0
 1354 090c 14D1     		bne	.L73
 1355              	.L69:
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 1356              		.loc 1 706 0
 1357 090e 7B68     		ldr	r3, [r7, #4]
 1358 0910 9B68     		ldr	r3, [r3, #8]
 1359 0912 43F08002 		orr	r2, r3, #128
 1360 0916 7B68     		ldr	r3, [r7, #4]
 1361 0918 9A60     		str	r2, [r3, #8]
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1362              		.loc 1 707 0
 1363 091a 0EE0     		b	.L67
 1364              	.L70:
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 1365              		.loc 1 708 0
 1366 091c 7B68     		ldr	r3, [r7, #4]
 1367 091e 9B68     		ldr	r3, [r3, #8]
 1368 0920 43F40042 		orr	r2, r3, #32768
 1369 0924 7B68     		ldr	r3, [r7, #4]
 1370 0926 9A60     		str	r2, [r3, #8]
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1371              		.loc 1 709 0
 1372 0928 07E0     		b	.L67
 1373              	.L71:
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 1374              		.loc 1 710 0
 1375 092a 7B68     		ldr	r3, [r7, #4]
 1376 092c 9B68     		ldr	r3, [r3, #8]
 1377 092e 43F40002 		orr	r2, r3, #8388608
 1378 0932 7B68     		ldr	r3, [r7, #4]
 1379 0934 9A60     		str	r2, [r3, #8]
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1380              		.loc 1 711 0
 1381 0936 00E0     		b	.L67
 1382              	.L73:
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1383              		.loc 1 713 0
 1384 0938 00BF     		nop
 1385              	.L67:
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1386              		.loc 1 715 0
 1387 093a 07F10C07 		add	r7, r7, #12
 1388 093e BD46     		mov	sp, r7
 1389 0940 80BC     		pop	{r7}
 1390 0942 7047     		bx	lr
 1391              		.cfi_endproc
 1392              	.LFE119:
 1394              		.align	2
 1395              		.global	CAN_Receive
 1396              		.thumb
 1397              		.thumb_func
 1399              	CAN_Receive:
 1400              	.LFB120:
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1401              		.loc 1 746 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 16
 1404              		@ frame_needed = 1, uses_anonymous_args = 0
 1405              		@ link register save eliminated.
 1406 0944 80B4     		push	{r7}
 1407              	.LCFI30:
 1408              		.cfi_def_cfa_offset 4
 1409              		.cfi_offset 7, -4
 1410 0946 85B0     		sub	sp, sp, #20
 1411              	.LCFI31:
 1412              		.cfi_def_cfa_offset 24
 1413 0948 00AF     		add	r7, sp, #0
 1414              	.LCFI32:
 1415              		.cfi_def_cfa_register 7
 1416 094a F860     		str	r0, [r7, #12]
 1417 094c 0B46     		mov	r3, r1
 1418 094e 7A60     		str	r2, [r7, #4]
 1419 0950 FB72     		strb	r3, [r7, #11]
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1420              		.loc 1 751 0
 1421 0952 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1422 0954 FA68     		ldr	r2, [r7, #12]
 1423 0956 03F11B03 		add	r3, r3, #27
 1424 095a 4FEA0313 		lsl	r3, r3, #4
 1425 095e D318     		adds	r3, r2, r3
 1426 0960 1B68     		ldr	r3, [r3, #0]
 1427 0962 DBB2     		uxtb	r3, r3
 1428 0964 03F00403 		and	r3, r3, #4
 1429 0968 DAB2     		uxtb	r2, r3
 1430 096a 7B68     		ldr	r3, [r7, #4]
 1431 096c 1A72     		strb	r2, [r3, #8]
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1432              		.loc 1 752 0
 1433 096e 7B68     		ldr	r3, [r7, #4]
 1434 0970 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1435 0972 002B     		cmp	r3, #0
 1436 0974 0CD1     		bne	.L75
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 1437              		.loc 1 754 0
 1438 0976 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1439 0978 FA68     		ldr	r2, [r7, #12]
 1440 097a 03F11B03 		add	r3, r3, #27
 1441 097e 4FEA0313 		lsl	r3, r3, #4
 1442 0982 D318     		adds	r3, r2, r3
 1443 0984 1B68     		ldr	r3, [r3, #0]
 1444 0986 4FEA5352 		lsr	r2, r3, #21
 1445 098a 7B68     		ldr	r3, [r7, #4]
 1446 098c 1A60     		str	r2, [r3, #0]
 1447 098e 0BE0     		b	.L76
 1448              	.L75:
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 1449              		.loc 1 758 0
 1450 0990 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1451 0992 FA68     		ldr	r2, [r7, #12]
 1452 0994 03F11B03 		add	r3, r3, #27
 1453 0998 4FEA0313 		lsl	r3, r3, #4
 1454 099c D318     		adds	r3, r2, r3
 1455 099e 1B68     		ldr	r3, [r3, #0]
 1456 09a0 4FEAD302 		lsr	r2, r3, #3
 1457 09a4 7B68     		ldr	r3, [r7, #4]
 1458 09a6 5A60     		str	r2, [r3, #4]
 1459              	.L76:
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1460              		.loc 1 761 0
 1461 09a8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1462 09aa FA68     		ldr	r2, [r7, #12]
 1463 09ac 03F11B03 		add	r3, r3, #27
 1464 09b0 4FEA0313 		lsl	r3, r3, #4
 1465 09b4 D318     		adds	r3, r2, r3
 1466 09b6 1B68     		ldr	r3, [r3, #0]
 1467 09b8 DBB2     		uxtb	r3, r3
 1468 09ba 03F00203 		and	r3, r3, #2
 1469 09be DAB2     		uxtb	r2, r3
 1470 09c0 7B68     		ldr	r3, [r7, #4]
 1471 09c2 5A72     		strb	r2, [r3, #9]
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 1472              		.loc 1 763 0
 1473 09c4 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1474 09c6 FA68     		ldr	r2, [r7, #12]
 1475 09c8 03F11B03 		add	r3, r3, #27
 1476 09cc 4FEA0313 		lsl	r3, r3, #4
 1477 09d0 D318     		adds	r3, r2, r3
 1478 09d2 5B68     		ldr	r3, [r3, #4]
 1479 09d4 DBB2     		uxtb	r3, r3
 1480 09d6 03F00F03 		and	r3, r3, #15
 1481 09da DAB2     		uxtb	r2, r3
 1482 09dc 7B68     		ldr	r3, [r7, #4]
 1483 09de 9A72     		strb	r2, [r3, #10]
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 1484              		.loc 1 765 0
 1485 09e0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1486 09e2 FA68     		ldr	r2, [r7, #12]
 1487 09e4 03F11B03 		add	r3, r3, #27
 1488 09e8 4FEA0313 		lsl	r3, r3, #4
 1489 09ec D318     		adds	r3, r2, r3
 1490 09ee 5B68     		ldr	r3, [r3, #4]
 1491 09f0 4FEA1323 		lsr	r3, r3, #8
 1492 09f4 DAB2     		uxtb	r2, r3
 1493 09f6 7B68     		ldr	r3, [r7, #4]
 1494 09f8 DA74     		strb	r2, [r3, #19]
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 1495              		.loc 1 767 0
 1496 09fa FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1497 09fc FA68     		ldr	r2, [r7, #12]
 1498 09fe 4FEA0313 		lsl	r3, r3, #4
 1499 0a02 D318     		adds	r3, r2, r3
 1500 0a04 03F5DC73 		add	r3, r3, #440
 1501 0a08 1B68     		ldr	r3, [r3, #0]
 1502 0a0a DAB2     		uxtb	r2, r3
 1503 0a0c 7B68     		ldr	r3, [r7, #4]
 1504 0a0e DA72     		strb	r2, [r3, #11]
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1505              		.loc 1 768 0
 1506 0a10 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1507 0a12 FA68     		ldr	r2, [r7, #12]
 1508 0a14 4FEA0313 		lsl	r3, r3, #4
 1509 0a18 D318     		adds	r3, r2, r3
 1510 0a1a 03F5DC73 		add	r3, r3, #440
 1511 0a1e 1B68     		ldr	r3, [r3, #0]
 1512 0a20 4FEA1323 		lsr	r3, r3, #8
 1513 0a24 DAB2     		uxtb	r2, r3
 1514 0a26 7B68     		ldr	r3, [r7, #4]
 1515 0a28 1A73     		strb	r2, [r3, #12]
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1516              		.loc 1 769 0
 1517 0a2a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1518 0a2c FA68     		ldr	r2, [r7, #12]
 1519 0a2e 4FEA0313 		lsl	r3, r3, #4
 1520 0a32 D318     		adds	r3, r2, r3
 1521 0a34 03F5DC73 		add	r3, r3, #440
 1522 0a38 1B68     		ldr	r3, [r3, #0]
 1523 0a3a 4FEA1343 		lsr	r3, r3, #16
 1524 0a3e DAB2     		uxtb	r2, r3
 1525 0a40 7B68     		ldr	r3, [r7, #4]
 1526 0a42 5A73     		strb	r2, [r3, #13]
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1527              		.loc 1 770 0
 1528 0a44 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1529 0a46 FA68     		ldr	r2, [r7, #12]
 1530 0a48 4FEA0313 		lsl	r3, r3, #4
 1531 0a4c D318     		adds	r3, r2, r3
 1532 0a4e 03F5DC73 		add	r3, r3, #440
 1533 0a52 1B68     		ldr	r3, [r3, #0]
 1534 0a54 4FEA1363 		lsr	r3, r3, #24
 1535 0a58 DAB2     		uxtb	r2, r3
 1536 0a5a 7B68     		ldr	r3, [r7, #4]
 1537 0a5c 9A73     		strb	r2, [r3, #14]
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1538              		.loc 1 771 0
 1539 0a5e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1540 0a60 FA68     		ldr	r2, [r7, #12]
 1541 0a62 4FEA0313 		lsl	r3, r3, #4
 1542 0a66 D318     		adds	r3, r2, r3
 1543 0a68 03F5DC73 		add	r3, r3, #440
 1544 0a6c 5B68     		ldr	r3, [r3, #4]
 1545 0a6e DAB2     		uxtb	r2, r3
 1546 0a70 7B68     		ldr	r3, [r7, #4]
 1547 0a72 DA73     		strb	r2, [r3, #15]
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1548              		.loc 1 772 0
 1549 0a74 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1550 0a76 FA68     		ldr	r2, [r7, #12]
 1551 0a78 4FEA0313 		lsl	r3, r3, #4
 1552 0a7c D318     		adds	r3, r2, r3
 1553 0a7e 03F5DC73 		add	r3, r3, #440
 1554 0a82 5B68     		ldr	r3, [r3, #4]
 1555 0a84 4FEA1323 		lsr	r3, r3, #8
 1556 0a88 DAB2     		uxtb	r2, r3
 1557 0a8a 7B68     		ldr	r3, [r7, #4]
 1558 0a8c 1A74     		strb	r2, [r3, #16]
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1559              		.loc 1 773 0
 1560 0a8e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1561 0a90 FA68     		ldr	r2, [r7, #12]
 1562 0a92 4FEA0313 		lsl	r3, r3, #4
 1563 0a96 D318     		adds	r3, r2, r3
 1564 0a98 03F5DC73 		add	r3, r3, #440
 1565 0a9c 5B68     		ldr	r3, [r3, #4]
 1566 0a9e 4FEA1343 		lsr	r3, r3, #16
 1567 0aa2 DAB2     		uxtb	r2, r3
 1568 0aa4 7B68     		ldr	r3, [r7, #4]
 1569 0aa6 5A74     		strb	r2, [r3, #17]
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1570              		.loc 1 774 0
 1571 0aa8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1572 0aaa FA68     		ldr	r2, [r7, #12]
 1573 0aac 4FEA0313 		lsl	r3, r3, #4
 1574 0ab0 D318     		adds	r3, r2, r3
 1575 0ab2 03F5DC73 		add	r3, r3, #440
 1576 0ab6 5B68     		ldr	r3, [r3, #4]
 1577 0ab8 4FEA1363 		lsr	r3, r3, #24
 1578 0abc DAB2     		uxtb	r2, r3
 1579 0abe 7B68     		ldr	r3, [r7, #4]
 1580 0ac0 9A74     		strb	r2, [r3, #18]
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1581              		.loc 1 777 0
 1582 0ac2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1583 0ac4 002B     		cmp	r3, #0
 1584 0ac6 06D1     		bne	.L77
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1585              		.loc 1 779 0
 1586 0ac8 FB68     		ldr	r3, [r7, #12]
 1587 0aca DB68     		ldr	r3, [r3, #12]
 1588 0acc 43F02002 		orr	r2, r3, #32
 1589 0ad0 FB68     		ldr	r3, [r7, #12]
 1590 0ad2 DA60     		str	r2, [r3, #12]
 1591 0ad4 05E0     		b	.L74
 1592              	.L77:
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1593              		.loc 1 784 0
 1594 0ad6 FB68     		ldr	r3, [r7, #12]
 1595 0ad8 1B69     		ldr	r3, [r3, #16]
 1596 0ada 43F02002 		orr	r2, r3, #32
 1597 0ade FB68     		ldr	r3, [r7, #12]
 1598 0ae0 1A61     		str	r2, [r3, #16]
 1599              	.L74:
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1600              		.loc 1 786 0
 1601 0ae2 07F11407 		add	r7, r7, #20
 1602 0ae6 BD46     		mov	sp, r7
 1603 0ae8 80BC     		pop	{r7}
 1604 0aea 7047     		bx	lr
 1605              		.cfi_endproc
 1606              	.LFE120:
 1608              		.align	2
 1609              		.global	CAN_FIFORelease
 1610              		.thumb
 1611              		.thumb_func
 1613              	CAN_FIFORelease:
 1614              	.LFB121:
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1615              		.loc 1 795 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 8
 1618              		@ frame_needed = 1, uses_anonymous_args = 0
 1619              		@ link register save eliminated.
 1620 0aec 80B4     		push	{r7}
 1621              	.LCFI33:
 1622              		.cfi_def_cfa_offset 4
 1623              		.cfi_offset 7, -4
 1624 0aee 83B0     		sub	sp, sp, #12
 1625              	.LCFI34:
 1626              		.cfi_def_cfa_offset 16
 1627 0af0 00AF     		add	r7, sp, #0
 1628              	.LCFI35:
 1629              		.cfi_def_cfa_register 7
 1630 0af2 7860     		str	r0, [r7, #4]
 1631 0af4 0B46     		mov	r3, r1
 1632 0af6 FB70     		strb	r3, [r7, #3]
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1633              		.loc 1 800 0
 1634 0af8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1635 0afa 002B     		cmp	r3, #0
 1636 0afc 06D1     		bne	.L80
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1637              		.loc 1 802 0
 1638 0afe 7B68     		ldr	r3, [r7, #4]
 1639 0b00 DB68     		ldr	r3, [r3, #12]
 1640 0b02 43F02002 		orr	r2, r3, #32
 1641 0b06 7B68     		ldr	r3, [r7, #4]
 1642 0b08 DA60     		str	r2, [r3, #12]
 1643 0b0a 05E0     		b	.L79
 1644              	.L80:
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1645              		.loc 1 807 0
 1646 0b0c 7B68     		ldr	r3, [r7, #4]
 1647 0b0e 1B69     		ldr	r3, [r3, #16]
 1648 0b10 43F02002 		orr	r2, r3, #32
 1649 0b14 7B68     		ldr	r3, [r7, #4]
 1650 0b16 1A61     		str	r2, [r3, #16]
 1651              	.L79:
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1652              		.loc 1 809 0
 1653 0b18 07F10C07 		add	r7, r7, #12
 1654 0b1c BD46     		mov	sp, r7
 1655 0b1e 80BC     		pop	{r7}
 1656 0b20 7047     		bx	lr
 1657              		.cfi_endproc
 1658              	.LFE121:
 1660 0b22 00BF     		.align	2
 1661              		.global	CAN_MessagePending
 1662              		.thumb
 1663              		.thumb_func
 1665              	CAN_MessagePending:
 1666              	.LFB122:
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1667              		.loc 1 818 0
 1668              		.cfi_startproc
 1669              		@ args = 0, pretend = 0, frame = 16
 1670              		@ frame_needed = 1, uses_anonymous_args = 0
 1671              		@ link register save eliminated.
 1672 0b24 80B4     		push	{r7}
 1673              	.LCFI36:
 1674              		.cfi_def_cfa_offset 4
 1675              		.cfi_offset 7, -4
 1676 0b26 85B0     		sub	sp, sp, #20
 1677              	.LCFI37:
 1678              		.cfi_def_cfa_offset 24
 1679 0b28 00AF     		add	r7, sp, #0
 1680              	.LCFI38:
 1681              		.cfi_def_cfa_register 7
 1682 0b2a 7860     		str	r0, [r7, #4]
 1683 0b2c 0B46     		mov	r3, r1
 1684 0b2e FB70     		strb	r3, [r7, #3]
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 1685              		.loc 1 819 0
 1686 0b30 4FF00003 		mov	r3, #0
 1687 0b34 FB73     		strb	r3, [r7, #15]
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1688              		.loc 1 823 0
 1689 0b36 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1690 0b38 002B     		cmp	r3, #0
 1691 0b3a 06D1     		bne	.L83
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 1692              		.loc 1 825 0
 1693 0b3c 7B68     		ldr	r3, [r7, #4]
 1694 0b3e DB68     		ldr	r3, [r3, #12]
 1695 0b40 DBB2     		uxtb	r3, r3
 1696 0b42 03F00303 		and	r3, r3, #3
 1697 0b46 FB73     		strb	r3, [r7, #15]
 1698 0b48 0CE0     		b	.L84
 1699              	.L83:
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 1700              		.loc 1 827 0
 1701 0b4a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1702 0b4c 012B     		cmp	r3, #1
 1703 0b4e 06D1     		bne	.L85
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 1704              		.loc 1 829 0
 1705 0b50 7B68     		ldr	r3, [r7, #4]
 1706 0b52 1B69     		ldr	r3, [r3, #16]
 1707 0b54 DBB2     		uxtb	r3, r3
 1708 0b56 03F00303 		and	r3, r3, #3
 1709 0b5a FB73     		strb	r3, [r7, #15]
 1710 0b5c 02E0     		b	.L84
 1711              	.L85:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 1712              		.loc 1 833 0
 1713 0b5e 4FF00003 		mov	r3, #0
 1714 0b62 FB73     		strb	r3, [r7, #15]
 1715              	.L84:
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 1716              		.loc 1 835 0
 1717 0b64 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1718              		.loc 1 836 0
 1719 0b66 1846     		mov	r0, r3
 1720 0b68 07F11407 		add	r7, r7, #20
 1721 0b6c BD46     		mov	sp, r7
 1722 0b6e 80BC     		pop	{r7}
 1723 0b70 7047     		bx	lr
 1724              		.cfi_endproc
 1725              	.LFE122:
 1727 0b72 00BF     		.align	2
 1728              		.global	CAN_OperatingModeRequest
 1729              		.thumb
 1730              		.thumb_func
 1732              	CAN_OperatingModeRequest:
 1733              	.LFB123:
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1734              		.loc 1 868 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 16
 1737              		@ frame_needed = 1, uses_anonymous_args = 0
 1738              		@ link register save eliminated.
 1739 0b74 80B4     		push	{r7}
 1740              	.LCFI39:
 1741              		.cfi_def_cfa_offset 4
 1742              		.cfi_offset 7, -4
 1743 0b76 85B0     		sub	sp, sp, #20
 1744              	.LCFI40:
 1745              		.cfi_def_cfa_offset 24
 1746 0b78 00AF     		add	r7, sp, #0
 1747              	.LCFI41:
 1748              		.cfi_def_cfa_register 7
 1749 0b7a 7860     		str	r0, [r7, #4]
 1750 0b7c 0B46     		mov	r3, r1
 1751 0b7e FB70     		strb	r3, [r7, #3]
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 1752              		.loc 1 869 0
 1753 0b80 4FF00003 		mov	r3, #0
 1754 0b84 FB73     		strb	r3, [r7, #15]
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 1755              		.loc 1 872 0
 1756 0b86 4FF6FF73 		movw	r3, #65535
 1757 0b8a BB60     		str	r3, [r7, #8]
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 1758              		.loc 1 878 0
 1759 0b8c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1760 0b8e 002B     		cmp	r3, #0
 1761 0b90 23D1     		bne	.L87
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 1762              		.loc 1 881 0
 1763 0b92 7B68     		ldr	r3, [r7, #4]
 1764 0b94 1B68     		ldr	r3, [r3, #0]
 1765 0b96 23F00303 		bic	r3, r3, #3
 1766 0b9a 43F00102 		orr	r2, r3, #1
 1767 0b9e 7B68     		ldr	r3, [r7, #4]
 1768 0ba0 1A60     		str	r2, [r3, #0]
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1769              		.loc 1 884 0
 1770 0ba2 03E0     		b	.L88
 1771              	.L90:
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1772              		.loc 1 886 0
 1773 0ba4 BB68     		ldr	r3, [r7, #8]
 1774 0ba6 03F1FF33 		add	r3, r3, #-1
 1775 0baa BB60     		str	r3, [r7, #8]
 1776              	.L88:
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1777              		.loc 1 884 0 discriminator 1
 1778 0bac 7B68     		ldr	r3, [r7, #4]
 1779 0bae 5B68     		ldr	r3, [r3, #4]
 1780 0bb0 03F00303 		and	r3, r3, #3
 1781 0bb4 012B     		cmp	r3, #1
 1782 0bb6 02D0     		beq	.L89
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1783              		.loc 1 884 0 is_stmt 0 discriminator 2
 1784 0bb8 BB68     		ldr	r3, [r7, #8]
 1785 0bba 002B     		cmp	r3, #0
 1786 0bbc F2D1     		bne	.L90
 1787              	.L89:
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 1788              		.loc 1 888 0 is_stmt 1
 1789 0bbe 7B68     		ldr	r3, [r7, #4]
 1790 0bc0 5B68     		ldr	r3, [r3, #4]
 1791 0bc2 03F00303 		and	r3, r3, #3
 1792 0bc6 012B     		cmp	r3, #1
 1793 0bc8 03D0     		beq	.L91
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1794              		.loc 1 890 0
 1795 0bca 4FF00003 		mov	r3, #0
 1796 0bce FB73     		strb	r3, [r7, #15]
 1797 0bd0 52E0     		b	.L92
 1798              	.L91:
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1799              		.loc 1 894 0
 1800 0bd2 4FF00103 		mov	r3, #1
 1801 0bd6 FB73     		strb	r3, [r7, #15]
 1802 0bd8 4EE0     		b	.L92
 1803              	.L87:
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 1804              		.loc 1 897 0
 1805 0bda FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1806 0bdc 012B     		cmp	r3, #1
 1807 0bde 21D1     		bne	.L93
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 1808              		.loc 1 900 0
 1809 0be0 7B68     		ldr	r3, [r7, #4]
 1810 0be2 1B68     		ldr	r3, [r3, #0]
 1811 0be4 23F00302 		bic	r2, r3, #3
 1812 0be8 7B68     		ldr	r3, [r7, #4]
 1813 0bea 1A60     		str	r2, [r3, #0]
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1814              		.loc 1 903 0
 1815 0bec 03E0     		b	.L94
 1816              	.L96:
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1817              		.loc 1 905 0
 1818 0bee BB68     		ldr	r3, [r7, #8]
 1819 0bf0 03F1FF33 		add	r3, r3, #-1
 1820 0bf4 BB60     		str	r3, [r7, #8]
 1821              	.L94:
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1822              		.loc 1 903 0 discriminator 1
 1823 0bf6 7B68     		ldr	r3, [r7, #4]
 1824 0bf8 5B68     		ldr	r3, [r3, #4]
 1825 0bfa 03F00303 		and	r3, r3, #3
 1826 0bfe 002B     		cmp	r3, #0
 1827 0c00 02D0     		beq	.L95
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1828              		.loc 1 903 0 is_stmt 0 discriminator 2
 1829 0c02 BB68     		ldr	r3, [r7, #8]
 1830 0c04 002B     		cmp	r3, #0
 1831 0c06 F2D1     		bne	.L96
 1832              	.L95:
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 1833              		.loc 1 907 0 is_stmt 1
 1834 0c08 7B68     		ldr	r3, [r7, #4]
 1835 0c0a 5B68     		ldr	r3, [r3, #4]
 1836 0c0c 03F00303 		and	r3, r3, #3
 1837 0c10 002B     		cmp	r3, #0
 1838 0c12 03D0     		beq	.L97
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1839              		.loc 1 909 0
 1840 0c14 4FF00003 		mov	r3, #0
 1841 0c18 FB73     		strb	r3, [r7, #15]
 1842 0c1a 2DE0     		b	.L92
 1843              	.L97:
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1844              		.loc 1 913 0
 1845 0c1c 4FF00103 		mov	r3, #1
 1846 0c20 FB73     		strb	r3, [r7, #15]
 1847 0c22 29E0     		b	.L92
 1848              	.L93:
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 1849              		.loc 1 916 0
 1850 0c24 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1851 0c26 022B     		cmp	r3, #2
 1852 0c28 23D1     		bne	.L98
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1853              		.loc 1 919 0
 1854 0c2a 7B68     		ldr	r3, [r7, #4]
 1855 0c2c 1B68     		ldr	r3, [r3, #0]
 1856 0c2e 23F00303 		bic	r3, r3, #3
 1857 0c32 43F00202 		orr	r2, r3, #2
 1858 0c36 7B68     		ldr	r3, [r7, #4]
 1859 0c38 1A60     		str	r2, [r3, #0]
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1860              		.loc 1 922 0
 1861 0c3a 03E0     		b	.L99
 1862              	.L101:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1863              		.loc 1 924 0
 1864 0c3c BB68     		ldr	r3, [r7, #8]
 1865 0c3e 03F1FF33 		add	r3, r3, #-1
 1866 0c42 BB60     		str	r3, [r7, #8]
 1867              	.L99:
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1868              		.loc 1 922 0 discriminator 1
 1869 0c44 7B68     		ldr	r3, [r7, #4]
 1870 0c46 5B68     		ldr	r3, [r3, #4]
 1871 0c48 03F00303 		and	r3, r3, #3
 1872 0c4c 022B     		cmp	r3, #2
 1873 0c4e 02D0     		beq	.L100
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1874              		.loc 1 922 0 is_stmt 0 discriminator 2
 1875 0c50 BB68     		ldr	r3, [r7, #8]
 1876 0c52 002B     		cmp	r3, #0
 1877 0c54 F2D1     		bne	.L101
 1878              	.L100:
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 1879              		.loc 1 926 0 is_stmt 1
 1880 0c56 7B68     		ldr	r3, [r7, #4]
 1881 0c58 5B68     		ldr	r3, [r3, #4]
 1882 0c5a 03F00303 		and	r3, r3, #3
 1883 0c5e 022B     		cmp	r3, #2
 1884 0c60 03D0     		beq	.L102
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1885              		.loc 1 928 0
 1886 0c62 4FF00003 		mov	r3, #0
 1887 0c66 FB73     		strb	r3, [r7, #15]
 1888 0c68 06E0     		b	.L92
 1889              	.L102:
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1890              		.loc 1 932 0
 1891 0c6a 4FF00103 		mov	r3, #1
 1892 0c6e FB73     		strb	r3, [r7, #15]
 1893 0c70 02E0     		b	.L92
 1894              	.L98:
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 1895              		.loc 1 937 0
 1896 0c72 4FF00003 		mov	r3, #0
 1897 0c76 FB73     		strb	r3, [r7, #15]
 1898              	.L92:
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 1899              		.loc 1 940 0
 1900 0c78 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1901              		.loc 1 941 0
 1902 0c7a 1846     		mov	r0, r3
 1903 0c7c 07F11407 		add	r7, r7, #20
 1904 0c80 BD46     		mov	sp, r7
 1905 0c82 80BC     		pop	{r7}
 1906 0c84 7047     		bx	lr
 1907              		.cfi_endproc
 1908              	.LFE123:
 1910 0c86 00BF     		.align	2
 1911              		.global	CAN_Sleep
 1912              		.thumb
 1913              		.thumb_func
 1915              	CAN_Sleep:
 1916              	.LFB124:
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1917              		.loc 1 949 0
 1918              		.cfi_startproc
 1919              		@ args = 0, pretend = 0, frame = 16
 1920              		@ frame_needed = 1, uses_anonymous_args = 0
 1921              		@ link register save eliminated.
 1922 0c88 80B4     		push	{r7}
 1923              	.LCFI42:
 1924              		.cfi_def_cfa_offset 4
 1925              		.cfi_offset 7, -4
 1926 0c8a 85B0     		sub	sp, sp, #20
 1927              	.LCFI43:
 1928              		.cfi_def_cfa_offset 24
 1929 0c8c 00AF     		add	r7, sp, #0
 1930              	.LCFI44:
 1931              		.cfi_def_cfa_register 7
 1932 0c8e 7860     		str	r0, [r7, #4]
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 1933              		.loc 1 950 0
 1934 0c90 4FF00003 		mov	r3, #0
 1935 0c94 FB73     		strb	r3, [r7, #15]
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1936              		.loc 1 956 0
 1937 0c96 7B68     		ldr	r3, [r7, #4]
 1938 0c98 1B68     		ldr	r3, [r3, #0]
 1939 0c9a 23F00303 		bic	r3, r3, #3
 1940 0c9e 43F00202 		orr	r2, r3, #2
 1941 0ca2 7B68     		ldr	r3, [r7, #4]
 1942 0ca4 1A60     		str	r2, [r3, #0]
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 1943              		.loc 1 959 0
 1944 0ca6 7B68     		ldr	r3, [r7, #4]
 1945 0ca8 5B68     		ldr	r3, [r3, #4]
 1946 0caa 03F00303 		and	r3, r3, #3
 1947 0cae 022B     		cmp	r3, #2
 1948 0cb0 02D1     		bne	.L104
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 1949              		.loc 1 962 0
 1950 0cb2 4FF00103 		mov	r3, #1
 1951 0cb6 FB73     		strb	r3, [r7, #15]
 1952              	.L104:
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 1953              		.loc 1 965 0
 1954 0cb8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1955              		.loc 1 966 0
 1956 0cba 1846     		mov	r0, r3
 1957 0cbc 07F11407 		add	r7, r7, #20
 1958 0cc0 BD46     		mov	sp, r7
 1959 0cc2 80BC     		pop	{r7}
 1960 0cc4 7047     		bx	lr
 1961              		.cfi_endproc
 1962              	.LFE124:
 1964 0cc6 00BF     		.align	2
 1965              		.global	CAN_WakeUp
 1966              		.thumb
 1967              		.thumb_func
 1969              	CAN_WakeUp:
 1970              	.LFB125:
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1971              		.loc 1 974 0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 16
 1974              		@ frame_needed = 1, uses_anonymous_args = 0
 1975              		@ link register save eliminated.
 1976 0cc8 80B4     		push	{r7}
 1977              	.LCFI45:
 1978              		.cfi_def_cfa_offset 4
 1979              		.cfi_offset 7, -4
 1980 0cca 85B0     		sub	sp, sp, #20
 1981              	.LCFI46:
 1982              		.cfi_def_cfa_offset 24
 1983 0ccc 00AF     		add	r7, sp, #0
 1984              	.LCFI47:
 1985              		.cfi_def_cfa_register 7
 1986 0cce 7860     		str	r0, [r7, #4]
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 1987              		.loc 1 975 0
 1988 0cd0 4FF6FF73 		movw	r3, #65535
 1989 0cd4 FB60     		str	r3, [r7, #12]
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 1990              		.loc 1 976 0
 1991 0cd6 4FF00003 		mov	r3, #0
 1992 0cda FB72     		strb	r3, [r7, #11]
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 1993              		.loc 1 982 0
 1994 0cdc 7B68     		ldr	r3, [r7, #4]
 1995 0cde 1B68     		ldr	r3, [r3, #0]
 1996 0ce0 23F00202 		bic	r2, r3, #2
 1997 0ce4 7B68     		ldr	r3, [r7, #4]
 1998 0ce6 1A60     		str	r2, [r3, #0]
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 1999              		.loc 1 985 0
 2000 0ce8 03E0     		b	.L106
 2001              	.L108:
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 2002              		.loc 1 987 0
 2003 0cea FB68     		ldr	r3, [r7, #12]
 2004 0cec 03F1FF33 		add	r3, r3, #-1
 2005 0cf0 FB60     		str	r3, [r7, #12]
 2006              	.L106:
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2007              		.loc 1 985 0 discriminator 1
 2008 0cf2 7B68     		ldr	r3, [r7, #4]
 2009 0cf4 5B68     		ldr	r3, [r3, #4]
 2010 0cf6 03F00203 		and	r3, r3, #2
 2011 0cfa 002B     		cmp	r3, #0
 2012 0cfc 02D0     		beq	.L107
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2013              		.loc 1 985 0 is_stmt 0 discriminator 2
 2014 0cfe FB68     		ldr	r3, [r7, #12]
 2015 0d00 002B     		cmp	r3, #0
 2016 0d02 F2D1     		bne	.L108
 2017              	.L107:
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 2018              		.loc 1 989 0 is_stmt 1
 2019 0d04 7B68     		ldr	r3, [r7, #4]
 2020 0d06 5B68     		ldr	r3, [r3, #4]
 2021 0d08 03F00203 		and	r3, r3, #2
 2022 0d0c 002B     		cmp	r3, #0
 2023 0d0e 02D1     		bne	.L109
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 2024              		.loc 1 992 0
 2025 0d10 4FF00103 		mov	r3, #1
 2026 0d14 FB72     		strb	r3, [r7, #11]
 2027              	.L109:
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 2028              		.loc 1 995 0
 2029 0d16 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2030              		.loc 1 996 0
 2031 0d18 1846     		mov	r0, r3
 2032 0d1a 07F11407 		add	r7, r7, #20
 2033 0d1e BD46     		mov	sp, r7
 2034 0d20 80BC     		pop	{r7}
 2035 0d22 7047     		bx	lr
 2036              		.cfi_endproc
 2037              	.LFE125:
 2039              		.align	2
 2040              		.global	CAN_GetLastErrorCode
 2041              		.thumb
 2042              		.thumb_func
 2044              	CAN_GetLastErrorCode:
 2045              	.LFB126:
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2046              		.loc 1 1036 0
 2047              		.cfi_startproc
 2048              		@ args = 0, pretend = 0, frame = 16
 2049              		@ frame_needed = 1, uses_anonymous_args = 0
 2050              		@ link register save eliminated.
 2051 0d24 80B4     		push	{r7}
 2052              	.LCFI48:
 2053              		.cfi_def_cfa_offset 4
 2054              		.cfi_offset 7, -4
 2055 0d26 85B0     		sub	sp, sp, #20
 2056              	.LCFI49:
 2057              		.cfi_def_cfa_offset 24
 2058 0d28 00AF     		add	r7, sp, #0
 2059              	.LCFI50:
 2060              		.cfi_def_cfa_register 7
 2061 0d2a 7860     		str	r0, [r7, #4]
1037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
 2062              		.loc 1 1037 0
 2063 0d2c 4FF00003 		mov	r3, #0
 2064 0d30 FB73     		strb	r3, [r7, #15]
1038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 2065              		.loc 1 1043 0
 2066 0d32 7B68     		ldr	r3, [r7, #4]
 2067 0d34 9B69     		ldr	r3, [r3, #24]
 2068 0d36 DBB2     		uxtb	r3, r3
 2069 0d38 03F07003 		and	r3, r3, #112
 2070 0d3c FB73     		strb	r3, [r7, #15]
1044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
 2071              		.loc 1 1046 0
 2072 0d3e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2073              		.loc 1 1047 0
 2074 0d40 1846     		mov	r0, r3
 2075 0d42 07F11407 		add	r7, r7, #20
 2076 0d46 BD46     		mov	sp, r7
 2077 0d48 80BC     		pop	{r7}
 2078 0d4a 7047     		bx	lr
 2079              		.cfi_endproc
 2080              	.LFE126:
 2082              		.align	2
 2083              		.global	CAN_GetReceiveErrorCounter
 2084              		.thumb
 2085              		.thumb_func
 2087              	CAN_GetReceiveErrorCounter:
 2088              	.LFB127:
1048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2089              		.loc 1 1061 0
 2090              		.cfi_startproc
 2091              		@ args = 0, pretend = 0, frame = 16
 2092              		@ frame_needed = 1, uses_anonymous_args = 0
 2093              		@ link register save eliminated.
 2094 0d4c 80B4     		push	{r7}
 2095              	.LCFI51:
 2096              		.cfi_def_cfa_offset 4
 2097              		.cfi_offset 7, -4
 2098 0d4e 85B0     		sub	sp, sp, #20
 2099              	.LCFI52:
 2100              		.cfi_def_cfa_offset 24
 2101 0d50 00AF     		add	r7, sp, #0
 2102              	.LCFI53:
 2103              		.cfi_def_cfa_register 7
 2104 0d52 7860     		str	r0, [r7, #4]
1062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2105              		.loc 1 1062 0
 2106 0d54 4FF00003 		mov	r3, #0
 2107 0d58 FB73     		strb	r3, [r7, #15]
1063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 2108              		.loc 1 1068 0
 2109 0d5a 7B68     		ldr	r3, [r7, #4]
 2110 0d5c 9B69     		ldr	r3, [r3, #24]
 2111 0d5e 4FEA1363 		lsr	r3, r3, #24
 2112 0d62 FB73     		strb	r3, [r7, #15]
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2113              		.loc 1 1071 0
 2114 0d64 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2115              		.loc 1 1072 0
 2116 0d66 1846     		mov	r0, r3
 2117 0d68 07F11407 		add	r7, r7, #20
 2118 0d6c BD46     		mov	sp, r7
 2119 0d6e 80BC     		pop	{r7}
 2120 0d70 7047     		bx	lr
 2121              		.cfi_endproc
 2122              	.LFE127:
 2124 0d72 00BF     		.align	2
 2125              		.global	CAN_GetLSBTransmitErrorCounter
 2126              		.thumb
 2127              		.thumb_func
 2129              	CAN_GetLSBTransmitErrorCounter:
 2130              	.LFB128:
1073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2131              		.loc 1 1081 0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 16
 2134              		@ frame_needed = 1, uses_anonymous_args = 0
 2135              		@ link register save eliminated.
 2136 0d74 80B4     		push	{r7}
 2137              	.LCFI54:
 2138              		.cfi_def_cfa_offset 4
 2139              		.cfi_offset 7, -4
 2140 0d76 85B0     		sub	sp, sp, #20
 2141              	.LCFI55:
 2142              		.cfi_def_cfa_offset 24
 2143 0d78 00AF     		add	r7, sp, #0
 2144              	.LCFI56:
 2145              		.cfi_def_cfa_register 7
 2146 0d7a 7860     		str	r0, [r7, #4]
1082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2147              		.loc 1 1082 0
 2148 0d7c 4FF00003 		mov	r3, #0
 2149 0d80 FB73     		strb	r3, [r7, #15]
1083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 2150              		.loc 1 1088 0
 2151 0d82 7B68     		ldr	r3, [r7, #4]
 2152 0d84 9B69     		ldr	r3, [r3, #24]
 2153 0d86 03F47F03 		and	r3, r3, #16711680
 2154 0d8a 4FEA1343 		lsr	r3, r3, #16
 2155 0d8e FB73     		strb	r3, [r7, #15]
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2156              		.loc 1 1091 0
 2157 0d90 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2158              		.loc 1 1092 0
 2159 0d92 1846     		mov	r0, r3
 2160 0d94 07F11407 		add	r7, r7, #20
 2161 0d98 BD46     		mov	sp, r7
 2162 0d9a 80BC     		pop	{r7}
 2163 0d9c 7047     		bx	lr
 2164              		.cfi_endproc
 2165              	.LFE128:
 2167 0d9e 00BF     		.align	2
 2168              		.global	CAN_ITConfig
 2169              		.thumb
 2170              		.thumb_func
 2172              	CAN_ITConfig:
 2173              	.LFB129:
1093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2174              		.loc 1 1288 0
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 16
 2177              		@ frame_needed = 1, uses_anonymous_args = 0
 2178              		@ link register save eliminated.
 2179 0da0 80B4     		push	{r7}
 2180              	.LCFI57:
 2181              		.cfi_def_cfa_offset 4
 2182              		.cfi_offset 7, -4
 2183 0da2 85B0     		sub	sp, sp, #20
 2184              	.LCFI58:
 2185              		.cfi_def_cfa_offset 24
 2186 0da4 00AF     		add	r7, sp, #0
 2187              	.LCFI59:
 2188              		.cfi_def_cfa_register 7
 2189 0da6 F860     		str	r0, [r7, #12]
 2190 0da8 B960     		str	r1, [r7, #8]
 2191 0daa 1346     		mov	r3, r2
 2192 0dac FB71     		strb	r3, [r7, #7]
1289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 2193              		.loc 1 1294 0
 2194 0dae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2195 0db0 002B     		cmp	r3, #0
 2196 0db2 07D0     		beq	.L114
1295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 2197              		.loc 1 1297 0
 2198 0db4 FB68     		ldr	r3, [r7, #12]
 2199 0db6 5B69     		ldr	r3, [r3, #20]
 2200 0db8 1A46     		mov	r2, r3
 2201 0dba BB68     		ldr	r3, [r7, #8]
 2202 0dbc 1A43     		orrs	r2, r2, r3
 2203 0dbe FB68     		ldr	r3, [r7, #12]
 2204 0dc0 5A61     		str	r2, [r3, #20]
 2205 0dc2 08E0     		b	.L113
 2206              	.L114:
1298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 2207              		.loc 1 1302 0
 2208 0dc4 FB68     		ldr	r3, [r7, #12]
 2209 0dc6 5B69     		ldr	r3, [r3, #20]
 2210 0dc8 1A46     		mov	r2, r3
 2211 0dca BB68     		ldr	r3, [r7, #8]
 2212 0dcc 6FEA0303 		mvn	r3, r3
 2213 0dd0 1A40     		ands	r2, r2, r3
 2214 0dd2 FB68     		ldr	r3, [r7, #12]
 2215 0dd4 5A61     		str	r2, [r3, #20]
 2216              	.L113:
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2217              		.loc 1 1304 0
 2218 0dd6 07F11407 		add	r7, r7, #20
 2219 0dda BD46     		mov	sp, r7
 2220 0ddc 80BC     		pop	{r7}
 2221 0dde 7047     		bx	lr
 2222              		.cfi_endproc
 2223              	.LFE129:
 2225              		.align	2
 2226              		.global	CAN_GetFlagStatus
 2227              		.thumb
 2228              		.thumb_func
 2230              	CAN_GetFlagStatus:
 2231              	.LFB130:
1305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2232              		.loc 1 1328 0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 16
 2235              		@ frame_needed = 1, uses_anonymous_args = 0
 2236              		@ link register save eliminated.
 2237 0de0 80B4     		push	{r7}
 2238              	.LCFI60:
 2239              		.cfi_def_cfa_offset 4
 2240              		.cfi_offset 7, -4
 2241 0de2 85B0     		sub	sp, sp, #20
 2242              	.LCFI61:
 2243              		.cfi_def_cfa_offset 24
 2244 0de4 00AF     		add	r7, sp, #0
 2245              	.LCFI62:
 2246              		.cfi_def_cfa_register 7
 2247 0de6 7860     		str	r0, [r7, #4]
 2248 0de8 3960     		str	r1, [r7, #0]
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 2249              		.loc 1 1329 0
 2250 0dea 4FF00003 		mov	r3, #0
 2251 0dee FB73     		strb	r3, [r7, #15]
1330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 2252              		.loc 1 1336 0
 2253 0df0 3B68     		ldr	r3, [r7, #0]
 2254 0df2 03F47003 		and	r3, r3, #15728640
 2255 0df6 002B     		cmp	r3, #0
 2256 0df8 12D0     		beq	.L117
1337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2257              		.loc 1 1339 0
 2258 0dfa 7B68     		ldr	r3, [r7, #4]
 2259 0dfc 9B69     		ldr	r3, [r3, #24]
 2260 0dfe 1A46     		mov	r2, r3
 2261 0e00 3B68     		ldr	r3, [r7, #0]
 2262 0e02 1340     		ands	r3, r3, r2
 2263 0e04 23F07F43 		bic	r3, r3, #-16777216
 2264 0e08 23F47003 		bic	r3, r3, #15728640
 2265 0e0c 002B     		cmp	r3, #0
 2266 0e0e 03D0     		beq	.L118
1340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2267              		.loc 1 1342 0
 2268 0e10 4FF00103 		mov	r3, #1
 2269 0e14 FB73     		strb	r3, [r7, #15]
 2270 0e16 5DE0     		b	.L119
 2271              	.L118:
1343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2272              		.loc 1 1347 0
 2273 0e18 4FF00003 		mov	r3, #0
 2274 0e1c FB73     		strb	r3, [r7, #15]
 2275 0e1e 59E0     		b	.L119
 2276              	.L117:
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 2277              		.loc 1 1350 0
 2278 0e20 3B68     		ldr	r3, [r7, #0]
 2279 0e22 03F08073 		and	r3, r3, #16777216
 2280 0e26 002B     		cmp	r3, #0
 2281 0e28 12D0     		beq	.L120
1351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2282              		.loc 1 1353 0
 2283 0e2a 7B68     		ldr	r3, [r7, #4]
 2284 0e2c 5B68     		ldr	r3, [r3, #4]
 2285 0e2e 1A46     		mov	r2, r3
 2286 0e30 3B68     		ldr	r3, [r7, #0]
 2287 0e32 1340     		ands	r3, r3, r2
 2288 0e34 23F07F43 		bic	r3, r3, #-16777216
 2289 0e38 23F47003 		bic	r3, r3, #15728640
 2290 0e3c 002B     		cmp	r3, #0
 2291 0e3e 03D0     		beq	.L121
1354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2292              		.loc 1 1356 0
 2293 0e40 4FF00103 		mov	r3, #1
 2294 0e44 FB73     		strb	r3, [r7, #15]
 2295 0e46 45E0     		b	.L119
 2296              	.L121:
1357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2297              		.loc 1 1361 0
 2298 0e48 4FF00003 		mov	r3, #0
 2299 0e4c FB73     		strb	r3, [r7, #15]
 2300 0e4e 41E0     		b	.L119
 2301              	.L120:
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 2302              		.loc 1 1364 0
 2303 0e50 3B68     		ldr	r3, [r7, #0]
 2304 0e52 03F00063 		and	r3, r3, #134217728
 2305 0e56 002B     		cmp	r3, #0
 2306 0e58 12D0     		beq	.L122
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2307              		.loc 1 1367 0
 2308 0e5a 7B68     		ldr	r3, [r7, #4]
 2309 0e5c 9B68     		ldr	r3, [r3, #8]
 2310 0e5e 1A46     		mov	r2, r3
 2311 0e60 3B68     		ldr	r3, [r7, #0]
 2312 0e62 1340     		ands	r3, r3, r2
 2313 0e64 23F07F43 		bic	r3, r3, #-16777216
 2314 0e68 23F47003 		bic	r3, r3, #15728640
 2315 0e6c 002B     		cmp	r3, #0
 2316 0e6e 03D0     		beq	.L123
1368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2317              		.loc 1 1370 0
 2318 0e70 4FF00103 		mov	r3, #1
 2319 0e74 FB73     		strb	r3, [r7, #15]
 2320 0e76 2DE0     		b	.L119
 2321              	.L123:
1371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2322              		.loc 1 1375 0
 2323 0e78 4FF00003 		mov	r3, #0
 2324 0e7c FB73     		strb	r3, [r7, #15]
 2325 0e7e 29E0     		b	.L119
 2326              	.L122:
1376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 2327              		.loc 1 1378 0
 2328 0e80 3B68     		ldr	r3, [r7, #0]
 2329 0e82 03F00073 		and	r3, r3, #33554432
 2330 0e86 002B     		cmp	r3, #0
 2331 0e88 12D0     		beq	.L124
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2332              		.loc 1 1381 0
 2333 0e8a 7B68     		ldr	r3, [r7, #4]
 2334 0e8c DB68     		ldr	r3, [r3, #12]
 2335 0e8e 1A46     		mov	r2, r3
 2336 0e90 3B68     		ldr	r3, [r7, #0]
 2337 0e92 1340     		ands	r3, r3, r2
 2338 0e94 23F07F43 		bic	r3, r3, #-16777216
 2339 0e98 23F47003 		bic	r3, r3, #15728640
 2340 0e9c 002B     		cmp	r3, #0
 2341 0e9e 03D0     		beq	.L125
1382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2342              		.loc 1 1384 0
 2343 0ea0 4FF00103 		mov	r3, #1
 2344 0ea4 FB73     		strb	r3, [r7, #15]
 2345 0ea6 15E0     		b	.L119
 2346              	.L125:
1385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2347              		.loc 1 1389 0
 2348 0ea8 4FF00003 		mov	r3, #0
 2349 0eac FB73     		strb	r3, [r7, #15]
 2350 0eae 11E0     		b	.L119
 2351              	.L124:
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2352              		.loc 1 1395 0
 2353 0eb0 7B68     		ldr	r3, [r7, #4]
 2354 0eb2 1B69     		ldr	r3, [r3, #16]
 2355 0eb4 1A46     		mov	r2, r3
 2356 0eb6 3B68     		ldr	r3, [r7, #0]
 2357 0eb8 1340     		ands	r3, r3, r2
 2358 0eba 23F07F43 		bic	r3, r3, #-16777216
 2359 0ebe 23F47003 		bic	r3, r3, #15728640
 2360 0ec2 002B     		cmp	r3, #0
 2361 0ec4 03D0     		beq	.L126
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2362              		.loc 1 1398 0
 2363 0ec6 4FF00103 		mov	r3, #1
 2364 0eca FB73     		strb	r3, [r7, #15]
 2365 0ecc 02E0     		b	.L119
 2366              	.L126:
1399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2367              		.loc 1 1403 0
 2368 0ece 4FF00003 		mov	r3, #0
 2369 0ed2 FB73     		strb	r3, [r7, #15]
 2370              	.L119:
1404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
 2371              		.loc 1 1407 0
 2372 0ed4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2373              		.loc 1 1408 0
 2374 0ed6 1846     		mov	r0, r3
 2375 0ed8 07F11407 		add	r7, r7, #20
 2376 0edc BD46     		mov	sp, r7
 2377 0ede 80BC     		pop	{r7}
 2378 0ee0 7047     		bx	lr
 2379              		.cfi_endproc
 2380              	.LFE130:
 2382 0ee2 00BF     		.align	2
 2383              		.global	CAN_ClearFlag
 2384              		.thumb
 2385              		.thumb_func
 2387              	CAN_ClearFlag:
 2388              	.LFB131:
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2389              		.loc 1 1428 0
 2390              		.cfi_startproc
 2391              		@ args = 0, pretend = 0, frame = 16
 2392              		@ frame_needed = 1, uses_anonymous_args = 0
 2393              		@ link register save eliminated.
 2394 0ee4 80B4     		push	{r7}
 2395              	.LCFI63:
 2396              		.cfi_def_cfa_offset 4
 2397              		.cfi_offset 7, -4
 2398 0ee6 85B0     		sub	sp, sp, #20
 2399              	.LCFI64:
 2400              		.cfi_def_cfa_offset 24
 2401 0ee8 00AF     		add	r7, sp, #0
 2402              	.LCFI65:
 2403              		.cfi_def_cfa_register 7
 2404 0eea 7860     		str	r0, [r7, #4]
 2405 0eec 3960     		str	r1, [r7, #0]
1429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 2406              		.loc 1 1429 0
 2407 0eee 4FF00003 		mov	r3, #0
 2408 0ef2 FB60     		str	r3, [r7, #12]
1430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 2409              		.loc 1 1434 0
 2410 0ef4 3A68     		ldr	r2, [r7, #0]
 2411 0ef6 4FF07003 		mov	r3, #112
 2412 0efa C3F2F003 		movt	r3, 12528
 2413 0efe 9A42     		cmp	r2, r3
 2414 0f00 04D1     		bne	.L128
1435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 2415              		.loc 1 1437 0
 2416 0f02 7B68     		ldr	r3, [r7, #4]
 2417 0f04 4FF00002 		mov	r2, #0
 2418 0f08 9A61     		str	r2, [r3, #24]
 2419 0f0a 23E0     		b	.L127
 2420              	.L128:
1438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 2421              		.loc 1 1441 0
 2422 0f0c 3B68     		ldr	r3, [r7, #0]
 2423 0f0e 23F07F43 		bic	r3, r3, #-16777216
 2424 0f12 23F47003 		bic	r3, r3, #15728640
 2425 0f16 FB60     		str	r3, [r7, #12]
1442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 2426              		.loc 1 1443 0
 2427 0f18 3B68     		ldr	r3, [r7, #0]
 2428 0f1a 03F00073 		and	r3, r3, #33554432
 2429 0f1e 002B     		cmp	r3, #0
 2430 0f20 03D0     		beq	.L130
1444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 2431              		.loc 1 1446 0
 2432 0f22 7B68     		ldr	r3, [r7, #4]
 2433 0f24 FA68     		ldr	r2, [r7, #12]
 2434 0f26 DA60     		str	r2, [r3, #12]
 2435 0f28 14E0     		b	.L127
 2436              	.L130:
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 2437              		.loc 1 1448 0
 2438 0f2a 3B68     		ldr	r3, [r7, #0]
 2439 0f2c 03F08063 		and	r3, r3, #67108864
 2440 0f30 002B     		cmp	r3, #0
 2441 0f32 03D0     		beq	.L131
1449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 2442              		.loc 1 1451 0
 2443 0f34 7B68     		ldr	r3, [r7, #4]
 2444 0f36 FA68     		ldr	r2, [r7, #12]
 2445 0f38 1A61     		str	r2, [r3, #16]
 2446 0f3a 0BE0     		b	.L127
 2447              	.L131:
1452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 2448              		.loc 1 1453 0
 2449 0f3c 3B68     		ldr	r3, [r7, #0]
 2450 0f3e 03F00063 		and	r3, r3, #134217728
 2451 0f42 002B     		cmp	r3, #0
 2452 0f44 03D0     		beq	.L132
1454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 2453              		.loc 1 1456 0
 2454 0f46 7B68     		ldr	r3, [r7, #4]
 2455 0f48 FA68     		ldr	r2, [r7, #12]
 2456 0f4a 9A60     		str	r2, [r3, #8]
 2457 0f4c 02E0     		b	.L127
 2458              	.L132:
1457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 2459              		.loc 1 1461 0
 2460 0f4e 7B68     		ldr	r3, [r7, #4]
 2461 0f50 FA68     		ldr	r2, [r7, #12]
 2462 0f52 5A60     		str	r2, [r3, #4]
 2463              	.L127:
1462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2464              		.loc 1 1464 0
 2465 0f54 07F11407 		add	r7, r7, #20
 2466 0f58 BD46     		mov	sp, r7
 2467 0f5a 80BC     		pop	{r7}
 2468 0f5c 7047     		bx	lr
 2469              		.cfi_endproc
 2470              	.LFE131:
 2472 0f5e 00BF     		.align	2
 2473              		.global	CAN_GetITStatus
 2474              		.thumb
 2475              		.thumb_func
 2477              	CAN_GetITStatus:
 2478              	.LFB132:
1465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2479              		.loc 1 1488 0
 2480              		.cfi_startproc
 2481              		@ args = 0, pretend = 0, frame = 16
 2482              		@ frame_needed = 1, uses_anonymous_args = 0
 2483 0f60 80B5     		push	{r7, lr}
 2484              	.LCFI66:
 2485              		.cfi_def_cfa_offset 8
 2486              		.cfi_offset 14, -4
 2487              		.cfi_offset 7, -8
 2488 0f62 84B0     		sub	sp, sp, #16
 2489              	.LCFI67:
 2490              		.cfi_def_cfa_offset 24
 2491 0f64 00AF     		add	r7, sp, #0
 2492              	.LCFI68:
 2493              		.cfi_def_cfa_register 7
 2494 0f66 7860     		str	r0, [r7, #4]
 2495 0f68 3960     		str	r1, [r7, #0]
1489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 2496              		.loc 1 1489 0
 2497 0f6a 4FF00003 		mov	r3, #0
 2498 0f6e FB73     		strb	r3, [r7, #15]
1490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 2499              		.loc 1 1495 0
 2500 0f70 7B68     		ldr	r3, [r7, #4]
 2501 0f72 5B69     		ldr	r3, [r3, #20]
 2502 0f74 1A46     		mov	r2, r3
 2503 0f76 3B68     		ldr	r3, [r7, #0]
 2504 0f78 1340     		ands	r3, r3, r2
 2505 0f7a 002B     		cmp	r3, #0
 2506 0f7c 00F0C480 		beq	.L134
1496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 2507              		.loc 1 1498 0
 2508 0f80 3B68     		ldr	r3, [r7, #0]
 2509 0f82 402B     		cmp	r3, #64
 2510 0f84 6BD0     		beq	.L142
 2511 0f86 402B     		cmp	r3, #64
 2512 0f88 0FD8     		bhi	.L150
 2513 0f8a 042B     		cmp	r3, #4
 2514 0f8c 3FD0     		beq	.L138
 2515 0f8e 042B     		cmp	r3, #4
 2516 0f90 04D8     		bhi	.L151
 2517 0f92 012B     		cmp	r3, #1
 2518 0f94 25D0     		beq	.L136
 2519 0f96 022B     		cmp	r3, #2
 2520 0f98 2FD0     		beq	.L137
 2521 0f9a B1E0     		b	.L135
 2522              	.L151:
 2523 0f9c 102B     		cmp	r3, #16
 2524 0f9e 4AD0     		beq	.L140
 2525 0fa0 202B     		cmp	r3, #32
 2526 0fa2 52D0     		beq	.L141
 2527 0fa4 082B     		cmp	r3, #8
 2528 0fa6 3CD0     		beq	.L139
 2529 0fa8 AAE0     		b	.L135
 2530              	.L150:
 2531 0faa B3F5006F 		cmp	r3, #2048
 2532 0fae 00F09280 		beq	.L146
 2533 0fb2 B3F5006F 		cmp	r3, #2048
 2534 0fb6 09D8     		bhi	.L152
 2535 0fb8 B3F5007F 		cmp	r3, #512
 2536 0fbc 77D0     		beq	.L144
 2537 0fbe B3F5806F 		cmp	r3, #1024
 2538 0fc2 7ED0     		beq	.L145
 2539 0fc4 B3F5807F 		cmp	r3, #256
 2540 0fc8 67D0     		beq	.L143
 2541 0fca 99E0     		b	.L135
 2542              	.L152:
 2543 0fcc B3F5803F 		cmp	r3, #65536
 2544 0fd0 4FD0     		beq	.L148
 2545 0fd2 B3F5003F 		cmp	r3, #131072
 2546 0fd6 56D0     		beq	.L149
 2547 0fd8 B3F5004F 		cmp	r3, #32768
 2548 0fdc 00F08580 		beq	.L147
 2549 0fe0 8EE0     		b	.L135
 2550              	.L136:
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 2551              		.loc 1 1502 0
 2552 0fe2 7B68     		ldr	r3, [r7, #4]
 2553 0fe4 9B68     		ldr	r3, [r3, #8]
 2554 0fe6 1846     		mov	r0, r3
 2555 0fe8 40F20111 		movw	r1, #257
 2556 0fec C0F20101 		movt	r1, 1
 2557 0ff0 00F012F9 		bl	CheckITStatus
 2558 0ff4 0346     		mov	r3, r0
 2559 0ff6 FB73     		strb	r3, [r7, #15]
1503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2560              		.loc 1 1503 0
 2561 0ff8 89E0     		b	.L154
 2562              	.L137:
1504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 2563              		.loc 1 1506 0
 2564 0ffa 7B68     		ldr	r3, [r7, #4]
 2565 0ffc DB68     		ldr	r3, [r3, #12]
 2566 0ffe 1846     		mov	r0, r3
 2567 1000 4FF00301 		mov	r1, #3
 2568 1004 00F008F9 		bl	CheckITStatus
 2569 1008 0346     		mov	r3, r0
 2570 100a FB73     		strb	r3, [r7, #15]
1507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2571              		.loc 1 1507 0
 2572 100c 7FE0     		b	.L154
 2573              	.L138:
1508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 2574              		.loc 1 1510 0
 2575 100e 7B68     		ldr	r3, [r7, #4]
 2576 1010 DB68     		ldr	r3, [r3, #12]
 2577 1012 1846     		mov	r0, r3
 2578 1014 4FF00801 		mov	r1, #8
 2579 1018 00F0FEF8 		bl	CheckITStatus
 2580 101c 0346     		mov	r3, r0
 2581 101e FB73     		strb	r3, [r7, #15]
1511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2582              		.loc 1 1511 0
 2583 1020 75E0     		b	.L154
 2584              	.L139:
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 2585              		.loc 1 1514 0
 2586 1022 7B68     		ldr	r3, [r7, #4]
 2587 1024 DB68     		ldr	r3, [r3, #12]
 2588 1026 1846     		mov	r0, r3
 2589 1028 4FF01001 		mov	r1, #16
 2590 102c 00F0F4F8 		bl	CheckITStatus
 2591 1030 0346     		mov	r3, r0
 2592 1032 FB73     		strb	r3, [r7, #15]
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2593              		.loc 1 1515 0
 2594 1034 6BE0     		b	.L154
 2595              	.L140:
1516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 2596              		.loc 1 1518 0
 2597 1036 7B68     		ldr	r3, [r7, #4]
 2598 1038 1B69     		ldr	r3, [r3, #16]
 2599 103a 1846     		mov	r0, r3
 2600 103c 4FF00301 		mov	r1, #3
 2601 1040 00F0EAF8 		bl	CheckITStatus
 2602 1044 0346     		mov	r3, r0
 2603 1046 FB73     		strb	r3, [r7, #15]
1519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2604              		.loc 1 1519 0
 2605 1048 61E0     		b	.L154
 2606              	.L141:
1520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 2607              		.loc 1 1522 0
 2608 104a 7B68     		ldr	r3, [r7, #4]
 2609 104c 1B69     		ldr	r3, [r3, #16]
 2610 104e 1846     		mov	r0, r3
 2611 1050 4FF00801 		mov	r1, #8
 2612 1054 00F0E0F8 		bl	CheckITStatus
 2613 1058 0346     		mov	r3, r0
 2614 105a FB73     		strb	r3, [r7, #15]
1523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2615              		.loc 1 1523 0
 2616 105c 57E0     		b	.L154
 2617              	.L142:
1524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 2618              		.loc 1 1526 0
 2619 105e 7B68     		ldr	r3, [r7, #4]
 2620 1060 1B69     		ldr	r3, [r3, #16]
 2621 1062 1846     		mov	r0, r3
 2622 1064 4FF01001 		mov	r1, #16
 2623 1068 00F0D6F8 		bl	CheckITStatus
 2624 106c 0346     		mov	r3, r0
 2625 106e FB73     		strb	r3, [r7, #15]
1527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2626              		.loc 1 1527 0
 2627 1070 4DE0     		b	.L154
 2628              	.L148:
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 2629              		.loc 1 1530 0
 2630 1072 7B68     		ldr	r3, [r7, #4]
 2631 1074 5B68     		ldr	r3, [r3, #4]
 2632 1076 1846     		mov	r0, r3
 2633 1078 4FF00801 		mov	r1, #8
 2634 107c 00F0CCF8 		bl	CheckITStatus
 2635 1080 0346     		mov	r3, r0
 2636 1082 FB73     		strb	r3, [r7, #15]
1531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2637              		.loc 1 1531 0
 2638 1084 43E0     		b	.L154
 2639              	.L149:
1532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 2640              		.loc 1 1534 0
 2641 1086 7B68     		ldr	r3, [r7, #4]
 2642 1088 5B68     		ldr	r3, [r3, #4]
 2643 108a 1846     		mov	r0, r3
 2644 108c 4FF01001 		mov	r1, #16
 2645 1090 00F0C2F8 		bl	CheckITStatus
 2646 1094 0346     		mov	r3, r0
 2647 1096 FB73     		strb	r3, [r7, #15]
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2648              		.loc 1 1535 0
 2649 1098 39E0     		b	.L154
 2650              	.L143:
1536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 2651              		.loc 1 1538 0
 2652 109a 7B68     		ldr	r3, [r7, #4]
 2653 109c 9B69     		ldr	r3, [r3, #24]
 2654 109e 1846     		mov	r0, r3
 2655 10a0 4FF00101 		mov	r1, #1
 2656 10a4 00F0B8F8 		bl	CheckITStatus
 2657 10a8 0346     		mov	r3, r0
 2658 10aa FB73     		strb	r3, [r7, #15]
1539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2659              		.loc 1 1539 0
 2660 10ac 2FE0     		b	.L154
 2661              	.L144:
1540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 2662              		.loc 1 1542 0
 2663 10ae 7B68     		ldr	r3, [r7, #4]
 2664 10b0 9B69     		ldr	r3, [r3, #24]
 2665 10b2 1846     		mov	r0, r3
 2666 10b4 4FF00201 		mov	r1, #2
 2667 10b8 00F0AEF8 		bl	CheckITStatus
 2668 10bc 0346     		mov	r3, r0
 2669 10be FB73     		strb	r3, [r7, #15]
1543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2670              		.loc 1 1543 0
 2671 10c0 25E0     		b	.L154
 2672              	.L145:
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 2673              		.loc 1 1546 0
 2674 10c2 7B68     		ldr	r3, [r7, #4]
 2675 10c4 9B69     		ldr	r3, [r3, #24]
 2676 10c6 1846     		mov	r0, r3
 2677 10c8 4FF00401 		mov	r1, #4
 2678 10cc 00F0A4F8 		bl	CheckITStatus
 2679 10d0 0346     		mov	r3, r0
 2680 10d2 FB73     		strb	r3, [r7, #15]
1547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2681              		.loc 1 1547 0
 2682 10d4 1BE0     		b	.L154
 2683              	.L146:
1548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 2684              		.loc 1 1550 0
 2685 10d6 7B68     		ldr	r3, [r7, #4]
 2686 10d8 9B69     		ldr	r3, [r3, #24]
 2687 10da 1846     		mov	r0, r3
 2688 10dc 4FF07001 		mov	r1, #112
 2689 10e0 00F09AF8 		bl	CheckITStatus
 2690 10e4 0346     		mov	r3, r0
 2691 10e6 FB73     		strb	r3, [r7, #15]
1551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2692              		.loc 1 1551 0
 2693 10e8 11E0     		b	.L154
 2694              	.L147:
1552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 2695              		.loc 1 1554 0
 2696 10ea 7B68     		ldr	r3, [r7, #4]
 2697 10ec 5B68     		ldr	r3, [r3, #4]
 2698 10ee 1846     		mov	r0, r3
 2699 10f0 4FF00401 		mov	r1, #4
 2700 10f4 00F090F8 		bl	CheckITStatus
 2701 10f8 0346     		mov	r3, r0
 2702 10fa FB73     		strb	r3, [r7, #15]
1555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2703              		.loc 1 1555 0
 2704 10fc 00BF     		nop
 2705 10fe 06E0     		b	.L154
 2706              	.L135:
1556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 2707              		.loc 1 1558 0
 2708 1100 4FF00003 		mov	r3, #0
 2709 1104 FB73     		strb	r3, [r7, #15]
1559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2710              		.loc 1 1559 0
 2711 1106 02E0     		b	.L154
 2712              	.L134:
1560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
 2713              		.loc 1 1565 0
 2714 1108 4FF00003 		mov	r3, #0
 2715 110c FB73     		strb	r3, [r7, #15]
 2716              	.L154:
1566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
 2717              		.loc 1 1569 0
 2718 110e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2719              		.loc 1 1570 0
 2720 1110 1846     		mov	r0, r3
 2721 1112 07F11007 		add	r7, r7, #16
 2722 1116 BD46     		mov	sp, r7
 2723 1118 80BD     		pop	{r7, pc}
 2724              		.cfi_endproc
 2725              	.LFE132:
 2727 111a 00BF     		.align	2
 2728              		.global	CAN_ClearITPendingBit
 2729              		.thumb
 2730              		.thumb_func
 2732              	CAN_ClearITPendingBit:
 2733              	.LFB133:
1571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2734              		.loc 1 1592 0
 2735              		.cfi_startproc
 2736              		@ args = 0, pretend = 0, frame = 8
 2737              		@ frame_needed = 1, uses_anonymous_args = 0
 2738              		@ link register save eliminated.
 2739 111c 80B4     		push	{r7}
 2740              	.LCFI69:
 2741              		.cfi_def_cfa_offset 4
 2742              		.cfi_offset 7, -4
 2743 111e 83B0     		sub	sp, sp, #12
 2744              	.LCFI70:
 2745              		.cfi_def_cfa_offset 16
 2746 1120 00AF     		add	r7, sp, #0
 2747              	.LCFI71:
 2748              		.cfi_def_cfa_register 7
 2749 1122 7860     		str	r0, [r7, #4]
 2750 1124 3960     		str	r1, [r7, #0]
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2751              		.loc 1 1597 0
 2752 1126 3B68     		ldr	r3, [r7, #0]
 2753 1128 B3F5807F 		cmp	r3, #256
 2754 112c 4CD0     		beq	.L162
 2755 112e B3F5807F 		cmp	r3, #256
 2756 1132 0DD8     		bhi	.L169
 2757 1134 082B     		cmp	r3, #8
 2758 1136 2ED0     		beq	.L159
 2759 1138 082B     		cmp	r3, #8
 2760 113a 04D8     		bhi	.L170
 2761 113c 012B     		cmp	r3, #1
 2762 113e 1ED0     		beq	.L157
 2763 1140 042B     		cmp	r3, #4
 2764 1142 23D0     		beq	.L158
 2765 1144 61E0     		b	.L156
 2766              	.L170:
 2767 1146 202B     		cmp	r3, #32
 2768 1148 2AD0     		beq	.L160
 2769 114a 402B     		cmp	r3, #64
 2770 114c 2DD0     		beq	.L161
 2771 114e 5CE0     		b	.L156
 2772              	.L169:
 2773 1150 B3F5006F 		cmp	r3, #2048
 2774 1154 47D0     		beq	.L165
 2775 1156 B3F5006F 		cmp	r3, #2048
 2776 115a 06D8     		bhi	.L171
 2777 115c B3F5007F 		cmp	r3, #512
 2778 1160 37D0     		beq	.L163
 2779 1162 B3F5806F 		cmp	r3, #1024
 2780 1166 39D0     		beq	.L164
 2781 1168 4FE0     		b	.L156
 2782              	.L171:
 2783 116a B3F5803F 		cmp	r3, #65536
 2784 116e 21D0     		beq	.L167
 2785 1170 B3F5003F 		cmp	r3, #131072
 2786 1174 23D0     		beq	.L168
 2787 1176 B3F5004F 		cmp	r3, #32768
 2788 117a 3DD0     		beq	.L166
 2789 117c 45E0     		b	.L156
 2790              	.L157:
1598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
 2791              		.loc 1 1601 0
 2792 117e 7A68     		ldr	r2, [r7, #4]
 2793 1180 40F20113 		movw	r3, #257
 2794 1184 C0F20103 		movt	r3, 1
 2795 1188 9360     		str	r3, [r2, #8]
1602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2796              		.loc 1 1602 0
 2797 118a 3FE0     		b	.L155
 2798              	.L158:
1603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
 2799              		.loc 1 1605 0
 2800 118c 7B68     		ldr	r3, [r7, #4]
 2801 118e 4FF00802 		mov	r2, #8
 2802 1192 DA60     		str	r2, [r3, #12]
1606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2803              		.loc 1 1606 0
 2804 1194 3AE0     		b	.L155
 2805              	.L159:
1607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
 2806              		.loc 1 1609 0
 2807 1196 7B68     		ldr	r3, [r7, #4]
 2808 1198 4FF01002 		mov	r2, #16
 2809 119c DA60     		str	r2, [r3, #12]
1610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2810              		.loc 1 1610 0
 2811 119e 35E0     		b	.L155
 2812              	.L160:
1611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
 2813              		.loc 1 1613 0
 2814 11a0 7B68     		ldr	r3, [r7, #4]
 2815 11a2 4FF00802 		mov	r2, #8
 2816 11a6 1A61     		str	r2, [r3, #16]
1614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2817              		.loc 1 1614 0
 2818 11a8 30E0     		b	.L155
 2819              	.L161:
1615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
 2820              		.loc 1 1617 0
 2821 11aa 7B68     		ldr	r3, [r7, #4]
 2822 11ac 4FF01002 		mov	r2, #16
 2823 11b0 1A61     		str	r2, [r3, #16]
1618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2824              		.loc 1 1618 0
 2825 11b2 2BE0     		b	.L155
 2826              	.L167:
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
 2827              		.loc 1 1621 0
 2828 11b4 7B68     		ldr	r3, [r7, #4]
 2829 11b6 4FF00802 		mov	r2, #8
 2830 11ba 5A60     		str	r2, [r3, #4]
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2831              		.loc 1 1622 0
 2832 11bc 26E0     		b	.L155
 2833              	.L168:
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
 2834              		.loc 1 1625 0
 2835 11be 7B68     		ldr	r3, [r7, #4]
 2836 11c0 4FF01002 		mov	r2, #16
 2837 11c4 5A60     		str	r2, [r3, #4]
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2838              		.loc 1 1626 0
 2839 11c6 21E0     		b	.L155
 2840              	.L162:
1627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
 2841              		.loc 1 1629 0
 2842 11c8 7B68     		ldr	r3, [r7, #4]
 2843 11ca 4FF00402 		mov	r2, #4
 2844 11ce 5A60     		str	r2, [r3, #4]
1630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2845              		.loc 1 1631 0
 2846 11d0 1CE0     		b	.L155
 2847              	.L163:
1632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2848              		.loc 1 1634 0
 2849 11d2 7B68     		ldr	r3, [r7, #4]
 2850 11d4 4FF00402 		mov	r2, #4
 2851 11d8 5A60     		str	r2, [r3, #4]
1635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2852              		.loc 1 1636 0
 2853 11da 17E0     		b	.L155
 2854              	.L164:
1637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2855              		.loc 1 1639 0
 2856 11dc 7B68     		ldr	r3, [r7, #4]
 2857 11de 4FF00402 		mov	r2, #4
 2858 11e2 5A60     		str	r2, [r3, #4]
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2859              		.loc 1 1641 0
 2860 11e4 12E0     		b	.L155
 2861              	.L165:
1642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2862              		.loc 1 1644 0
 2863 11e6 7B68     		ldr	r3, [r7, #4]
 2864 11e8 4FF00002 		mov	r2, #0
 2865 11ec 9A61     		str	r2, [r3, #24]
1645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2866              		.loc 1 1646 0
 2867 11ee 7B68     		ldr	r3, [r7, #4]
 2868 11f0 4FF00402 		mov	r2, #4
 2869 11f4 5A60     		str	r2, [r3, #4]
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2870              		.loc 1 1647 0
 2871 11f6 09E0     		b	.L155
 2872              	.L166:
1648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2873              		.loc 1 1650 0
 2874 11f8 7B68     		ldr	r3, [r7, #4]
 2875 11fa 4FF00002 		mov	r2, #0
 2876 11fe 9A61     		str	r2, [r3, #24]
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2877              		.loc 1 1652 0
 2878 1200 7B68     		ldr	r3, [r7, #4]
 2879 1202 4FF00402 		mov	r2, #4
 2880 1206 5A60     		str	r2, [r3, #4]
1653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2881              		.loc 1 1654 0
 2882 1208 00E0     		b	.L155
 2883              	.L156:
1655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2884              		.loc 1 1656 0
 2885 120a 00BF     		nop
 2886              	.L155:
1657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2887              		.loc 1 1658 0
 2888 120c 07F10C07 		add	r7, r7, #12
 2889 1210 BD46     		mov	sp, r7
 2890 1212 80BC     		pop	{r7}
 2891 1214 7047     		bx	lr
 2892              		.cfi_endproc
 2893              	.LFE133:
 2895 1216 00BF     		.align	2
 2896              		.thumb
 2897              		.thumb_func
 2899              	CheckITStatus:
 2900              	.LFB134:
1659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2901              		.loc 1 1670 0
 2902              		.cfi_startproc
 2903              		@ args = 0, pretend = 0, frame = 16
 2904              		@ frame_needed = 1, uses_anonymous_args = 0
 2905              		@ link register save eliminated.
 2906 1218 80B4     		push	{r7}
 2907              	.LCFI72:
 2908              		.cfi_def_cfa_offset 4
 2909              		.cfi_offset 7, -4
 2910 121a 85B0     		sub	sp, sp, #20
 2911              	.LCFI73:
 2912              		.cfi_def_cfa_offset 24
 2913 121c 00AF     		add	r7, sp, #0
 2914              	.LCFI74:
 2915              		.cfi_def_cfa_register 7
 2916 121e 7860     		str	r0, [r7, #4]
 2917 1220 3960     		str	r1, [r7, #0]
1671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
 2918              		.loc 1 1671 0
 2919 1222 4FF00003 		mov	r3, #0
 2920 1226 FB73     		strb	r3, [r7, #15]
1672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 2921              		.loc 1 1673 0
 2922 1228 7A68     		ldr	r2, [r7, #4]
 2923 122a 3B68     		ldr	r3, [r7, #0]
 2924 122c 1340     		ands	r3, r3, r2
 2925 122e 002B     		cmp	r3, #0
 2926 1230 03D0     		beq	.L174
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
 2927              		.loc 1 1676 0
 2928 1232 4FF00103 		mov	r3, #1
 2929 1236 FB73     		strb	r3, [r7, #15]
 2930 1238 02E0     		b	.L175
 2931              	.L174:
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 2932              		.loc 1 1681 0
 2933 123a 4FF00003 		mov	r3, #0
 2934 123e FB73     		strb	r3, [r7, #15]
 2935              	.L175:
1682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return pendingbitstatus;
 2936              		.loc 1 1683 0
 2937 1240 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2938              		.loc 1 1684 0
 2939 1242 1846     		mov	r0, r3
 2940 1244 07F11407 		add	r7, r7, #20
 2941 1248 BD46     		mov	sp, r7
 2942 124a 80BC     		pop	{r7}
 2943 124c 7047     		bx	lr
 2944              		.cfi_endproc
 2945              	.LFE134:
 2947              	.Letext0:
 2948              		.file 2 "e:/elektronik/toolchain/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 2949              		.file 3 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Device\\STM32F4xx\\Include/stm3
 2950              		.file 4 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\STM32F4xx_StdPeriph_Driver\\inc/stm32f
 2951              		.file 5 "C:\\Users\\Alex\\git\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_can.c
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:18     .text:00000000 $t
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:23     .text:00000000 CAN_DeInit
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:79     .text:00000050 CAN_Init
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:360    .text:00000210 CAN_FilterInit
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:610    .text:00000430 CAN_StructInit
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:685    .text:0000049c CAN_SlaveStartBank
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:753    .text:0000052c CAN_DBGFreeze
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:805    .text:00000564 CAN_TTComModeCmd
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:893    .text:000005fc CAN_Transmit
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:1155   .text:000007e0 CAN_TransmitStatus
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:1327   .text:000008f4 CAN_CancelTransmit
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:1399   .text:00000944 CAN_Receive
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:1613   .text:00000aec CAN_FIFORelease
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:1665   .text:00000b24 CAN_MessagePending
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:1732   .text:00000b74 CAN_OperatingModeRequest
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:1915   .text:00000c88 CAN_Sleep
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:1969   .text:00000cc8 CAN_WakeUp
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:2044   .text:00000d24 CAN_GetLastErrorCode
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:2087   .text:00000d4c CAN_GetReceiveErrorCounter
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:2129   .text:00000d74 CAN_GetLSBTransmitErrorCounter
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:2172   .text:00000da0 CAN_ITConfig
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:2230   .text:00000de0 CAN_GetFlagStatus
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:2387   .text:00000ee4 CAN_ClearFlag
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:2477   .text:00000f60 CAN_GetITStatus
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:2899   .text:00001218 CheckITStatus
C:\Users\Alex\AppData\Local\Temp\cck1Uprs.s:2732   .text:0000111c CAN_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
