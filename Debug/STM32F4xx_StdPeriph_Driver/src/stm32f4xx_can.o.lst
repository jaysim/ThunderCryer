   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_can.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CAN_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	CAN_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	CAN_DeInit:
  25              	.LFB110:
  26              		.file 1 "../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.0
   6:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    30-September-2011
   7:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  77:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  78:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  79:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  81:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  82:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  83:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  85:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  86:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  87:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  88:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  89:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  91:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  94:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  95:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  97:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  98:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  27              		.loc 1 163 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
  43              		.loc 1 167 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF4C843 		mov	r3, #25600
  46 000e C4F20003 		movt	r3, 16384
  47 0012 9A42     		cmp	r2, r3
  48 0014 0CD1     		bne	.L2
 168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
  49              		.loc 1 170 0
  50 0016 4FF00070 		mov	r0, #33554432
  51 001a 4FF00101 		mov	r1, #1
  52 001e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  53              		.loc 1 172 0
  54 0022 4FF00070 		mov	r0, #33554432
  55 0026 4FF00001 		mov	r1, #0
  56 002a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  57 002e 0BE0     		b	.L1
  58              	.L2:
 173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
  59              		.loc 1 177 0
  60 0030 4FF08060 		mov	r0, #67108864
  61 0034 4FF00101 		mov	r1, #1
  62 0038 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  63              		.loc 1 179 0
  64 003c 4FF08060 		mov	r0, #67108864
  65 0040 4FF00001 		mov	r1, #0
  66 0044 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  67              	.L1:
 180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  68              		.loc 1 181 0
  69 0048 07F10807 		add	r7, r7, #8
  70 004c BD46     		mov	sp, r7
  71 004e 80BD     		pop	{r7, pc}
  72              		.cfi_endproc
  73              	.LFE110:
  75              		.section	.text.CAN_Init,"ax",%progbits
  76              		.align	2
  77              		.global	CAN_Init
  78              		.thumb
  79              		.thumb_func
  81              	CAN_Init:
  82              	.LFB111:
 182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  83              		.loc 1 193 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 16
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88 0000 80B4     		push	{r7}
  89              	.LCFI3:
  90              		.cfi_def_cfa_offset 4
  91              		.cfi_offset 7, -4
  92 0002 85B0     		sub	sp, sp, #20
  93              	.LCFI4:
  94              		.cfi_def_cfa_offset 24
  95 0004 00AF     		add	r7, sp, #0
  96              	.LCFI5:
  97              		.cfi_def_cfa_register 7
  98 0006 7860     		str	r0, [r7, #4]
  99 0008 3960     		str	r1, [r7, #0]
 194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 100              		.loc 1 194 0
 101 000a 4FF00003 		mov	r3, #0
 102 000e FB73     		strb	r3, [r7, #15]
 195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 103              		.loc 1 195 0
 104 0010 4FF00003 		mov	r3, #0
 105 0014 BB60     		str	r3, [r7, #8]
 196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 106              		.loc 1 211 0
 107 0016 7B68     		ldr	r3, [r7, #4]
 108 0018 1B68     		ldr	r3, [r3, #0]
 109 001a 23F00202 		bic	r2, r3, #2
 110 001e 7B68     		ldr	r3, [r7, #4]
 111 0020 1A60     		str	r2, [r3, #0]
 212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 112              		.loc 1 214 0
 113 0022 7B68     		ldr	r3, [r7, #4]
 114 0024 1B68     		ldr	r3, [r3, #0]
 115 0026 43F00102 		orr	r2, r3, #1
 116 002a 7B68     		ldr	r3, [r7, #4]
 117 002c 1A60     		str	r2, [r3, #0]
 215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 118              		.loc 1 217 0
 119 002e 03E0     		b	.L5
 120              	.L7:
 218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 121              		.loc 1 219 0
 122 0030 BB68     		ldr	r3, [r7, #8]
 123 0032 03F10103 		add	r3, r3, #1
 124 0036 BB60     		str	r3, [r7, #8]
 125              	.L5:
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 126              		.loc 1 217 0 discriminator 1
 127 0038 7B68     		ldr	r3, [r7, #4]
 128 003a 5B68     		ldr	r3, [r3, #4]
 129 003c 03F00103 		and	r3, r3, #1
 130 0040 002B     		cmp	r3, #0
 131 0042 04D1     		bne	.L6
 217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 132              		.loc 1 217 0 is_stmt 0 discriminator 2
 133 0044 BA68     		ldr	r2, [r7, #8]
 134 0046 4FF6FF73 		movw	r3, #65535
 135 004a 9A42     		cmp	r2, r3
 136 004c F0D1     		bne	.L7
 137              	.L6:
 220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 138              		.loc 1 223 0 is_stmt 1
 139 004e 7B68     		ldr	r3, [r7, #4]
 140 0050 5B68     		ldr	r3, [r3, #4]
 141 0052 03F00103 		and	r3, r3, #1
 142 0056 002B     		cmp	r3, #0
 143 0058 03D1     		bne	.L8
 224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 144              		.loc 1 225 0
 145 005a 4FF00003 		mov	r3, #0
 146 005e FB73     		strb	r3, [r7, #15]
 147 0060 A7E0     		b	.L9
 148              	.L8:
 226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 149              		.loc 1 230 0
 150 0062 3B68     		ldr	r3, [r7, #0]
 151 0064 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 152 0066 012B     		cmp	r3, #1
 153 0068 06D1     		bne	.L10
 231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 154              		.loc 1 232 0
 155 006a 7B68     		ldr	r3, [r7, #4]
 156 006c 1B68     		ldr	r3, [r3, #0]
 157 006e 43F08002 		orr	r2, r3, #128
 158 0072 7B68     		ldr	r3, [r7, #4]
 159 0074 1A60     		str	r2, [r3, #0]
 160 0076 05E0     		b	.L11
 161              	.L10:
 233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 162              		.loc 1 236 0
 163 0078 7B68     		ldr	r3, [r7, #4]
 164 007a 1B68     		ldr	r3, [r3, #0]
 165 007c 23F08002 		bic	r2, r3, #128
 166 0080 7B68     		ldr	r3, [r7, #4]
 167 0082 1A60     		str	r2, [r3, #0]
 168              	.L11:
 237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 169              		.loc 1 240 0
 170 0084 3B68     		ldr	r3, [r7, #0]
 171 0086 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 172 0088 012B     		cmp	r3, #1
 173 008a 06D1     		bne	.L12
 241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 174              		.loc 1 242 0
 175 008c 7B68     		ldr	r3, [r7, #4]
 176 008e 1B68     		ldr	r3, [r3, #0]
 177 0090 43F04002 		orr	r2, r3, #64
 178 0094 7B68     		ldr	r3, [r7, #4]
 179 0096 1A60     		str	r2, [r3, #0]
 180 0098 05E0     		b	.L13
 181              	.L12:
 243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 182              		.loc 1 246 0
 183 009a 7B68     		ldr	r3, [r7, #4]
 184 009c 1B68     		ldr	r3, [r3, #0]
 185 009e 23F04002 		bic	r2, r3, #64
 186 00a2 7B68     		ldr	r3, [r7, #4]
 187 00a4 1A60     		str	r2, [r3, #0]
 188              	.L13:
 247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 189              		.loc 1 250 0
 190 00a6 3B68     		ldr	r3, [r7, #0]
 191 00a8 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 192 00aa 012B     		cmp	r3, #1
 193 00ac 06D1     		bne	.L14
 251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 194              		.loc 1 252 0
 195 00ae 7B68     		ldr	r3, [r7, #4]
 196 00b0 1B68     		ldr	r3, [r3, #0]
 197 00b2 43F02002 		orr	r2, r3, #32
 198 00b6 7B68     		ldr	r3, [r7, #4]
 199 00b8 1A60     		str	r2, [r3, #0]
 200 00ba 05E0     		b	.L15
 201              	.L14:
 253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 202              		.loc 1 256 0
 203 00bc 7B68     		ldr	r3, [r7, #4]
 204 00be 1B68     		ldr	r3, [r3, #0]
 205 00c0 23F02002 		bic	r2, r3, #32
 206 00c4 7B68     		ldr	r3, [r7, #4]
 207 00c6 1A60     		str	r2, [r3, #0]
 208              	.L15:
 257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 209              		.loc 1 260 0
 210 00c8 3B68     		ldr	r3, [r7, #0]
 211 00ca 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 212 00cc 012B     		cmp	r3, #1
 213 00ce 06D1     		bne	.L16
 261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 214              		.loc 1 262 0
 215 00d0 7B68     		ldr	r3, [r7, #4]
 216 00d2 1B68     		ldr	r3, [r3, #0]
 217 00d4 43F01002 		orr	r2, r3, #16
 218 00d8 7B68     		ldr	r3, [r7, #4]
 219 00da 1A60     		str	r2, [r3, #0]
 220 00dc 05E0     		b	.L17
 221              	.L16:
 263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 222              		.loc 1 266 0
 223 00de 7B68     		ldr	r3, [r7, #4]
 224 00e0 1B68     		ldr	r3, [r3, #0]
 225 00e2 23F01002 		bic	r2, r3, #16
 226 00e6 7B68     		ldr	r3, [r7, #4]
 227 00e8 1A60     		str	r2, [r3, #0]
 228              	.L17:
 267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 229              		.loc 1 270 0
 230 00ea 3B68     		ldr	r3, [r7, #0]
 231 00ec 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 232 00ee 012B     		cmp	r3, #1
 233 00f0 06D1     		bne	.L18
 271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 234              		.loc 1 272 0
 235 00f2 7B68     		ldr	r3, [r7, #4]
 236 00f4 1B68     		ldr	r3, [r3, #0]
 237 00f6 43F00802 		orr	r2, r3, #8
 238 00fa 7B68     		ldr	r3, [r7, #4]
 239 00fc 1A60     		str	r2, [r3, #0]
 240 00fe 05E0     		b	.L19
 241              	.L18:
 273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 242              		.loc 1 276 0
 243 0100 7B68     		ldr	r3, [r7, #4]
 244 0102 1B68     		ldr	r3, [r3, #0]
 245 0104 23F00802 		bic	r2, r3, #8
 246 0108 7B68     		ldr	r3, [r7, #4]
 247 010a 1A60     		str	r2, [r3, #0]
 248              	.L19:
 277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 249              		.loc 1 280 0
 250 010c 3B68     		ldr	r3, [r7, #0]
 251 010e DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 252 0110 012B     		cmp	r3, #1
 253 0112 06D1     		bne	.L20
 281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 254              		.loc 1 282 0
 255 0114 7B68     		ldr	r3, [r7, #4]
 256 0116 1B68     		ldr	r3, [r3, #0]
 257 0118 43F00402 		orr	r2, r3, #4
 258 011c 7B68     		ldr	r3, [r7, #4]
 259 011e 1A60     		str	r2, [r3, #0]
 260 0120 05E0     		b	.L21
 261              	.L20:
 283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 262              		.loc 1 286 0
 263 0122 7B68     		ldr	r3, [r7, #4]
 264 0124 1B68     		ldr	r3, [r3, #0]
 265 0126 23F00402 		bic	r2, r3, #4
 266 012a 7B68     		ldr	r3, [r7, #4]
 267 012c 1A60     		str	r2, [r3, #0]
 268              	.L21:
 287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 269              		.loc 1 290 0
 270 012e 3B68     		ldr	r3, [r7, #0]
 271 0130 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 272 0132 4FEA8372 		lsl	r2, r3, #30
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 273              		.loc 1 291 0
 274 0136 3B68     		ldr	r3, [r7, #0]
 275 0138 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 276 013a 4FEA0363 		lsl	r3, r3, #24
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 277              		.loc 1 290 0
 278 013e 1A43     		orrs	r2, r2, r3
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 279              		.loc 1 292 0
 280 0140 3B68     		ldr	r3, [r7, #0]
 281 0142 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 282 0144 4FEA0343 		lsl	r3, r3, #16
 291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 283              		.loc 1 291 0
 284 0148 1A43     		orrs	r2, r2, r3
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 285              		.loc 1 293 0
 286 014a 3B68     		ldr	r3, [r7, #0]
 287 014c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 288 014e 4FEA0353 		lsl	r3, r3, #20
 292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 289              		.loc 1 292 0
 290 0152 1A43     		orrs	r2, r2, r3
 294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 291              		.loc 1 294 0
 292 0154 3B68     		ldr	r3, [r7, #0]
 293 0156 1B88     		ldrh	r3, [r3, #0]
 294 0158 03F1FF33 		add	r3, r3, #-1
 293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 295              		.loc 1 293 0
 296 015c 1A43     		orrs	r2, r2, r3
 290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 297              		.loc 1 290 0
 298 015e 7B68     		ldr	r3, [r7, #4]
 299 0160 DA61     		str	r2, [r3, #28]
 295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 300              		.loc 1 297 0
 301 0162 7B68     		ldr	r3, [r7, #4]
 302 0164 1B68     		ldr	r3, [r3, #0]
 303 0166 23F00102 		bic	r2, r3, #1
 304 016a 7B68     		ldr	r3, [r7, #4]
 305 016c 1A60     		str	r2, [r3, #0]
 298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 306              		.loc 1 300 0
 307 016e 4FF00003 		mov	r3, #0
 308 0172 BB60     		str	r3, [r7, #8]
 301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 309              		.loc 1 302 0
 310 0174 03E0     		b	.L22
 311              	.L24:
 303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 312              		.loc 1 304 0
 313 0176 BB68     		ldr	r3, [r7, #8]
 314 0178 03F10103 		add	r3, r3, #1
 315 017c BB60     		str	r3, [r7, #8]
 316              	.L22:
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 317              		.loc 1 302 0 discriminator 1
 318 017e 7B68     		ldr	r3, [r7, #4]
 319 0180 5B68     		ldr	r3, [r3, #4]
 320 0182 03F00103 		and	r3, r3, #1
 321 0186 DBB2     		uxtb	r3, r3
 322 0188 002B     		cmp	r3, #0
 323 018a 04D0     		beq	.L23
 302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 324              		.loc 1 302 0 is_stmt 0 discriminator 2
 325 018c BA68     		ldr	r2, [r7, #8]
 326 018e 4FF6FF73 		movw	r3, #65535
 327 0192 9A42     		cmp	r2, r3
 328 0194 EFD1     		bne	.L24
 329              	.L23:
 305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 330              		.loc 1 308 0 is_stmt 1
 331 0196 7B68     		ldr	r3, [r7, #4]
 332 0198 5B68     		ldr	r3, [r3, #4]
 333 019a 03F00103 		and	r3, r3, #1
 334 019e DBB2     		uxtb	r3, r3
 335 01a0 002B     		cmp	r3, #0
 336 01a2 03D0     		beq	.L25
 309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 337              		.loc 1 310 0
 338 01a4 4FF00003 		mov	r3, #0
 339 01a8 FB73     		strb	r3, [r7, #15]
 340 01aa 02E0     		b	.L9
 341              	.L25:
 311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 342              		.loc 1 314 0
 343 01ac 4FF00103 		mov	r3, #1
 344 01b0 FB73     		strb	r3, [r7, #15]
 345              	.L9:
 315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 346              		.loc 1 319 0
 347 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 348              		.loc 1 320 0
 349 01b4 1846     		mov	r0, r3
 350 01b6 07F11407 		add	r7, r7, #20
 351 01ba BD46     		mov	sp, r7
 352 01bc 80BC     		pop	{r7}
 353 01be 7047     		bx	lr
 354              		.cfi_endproc
 355              	.LFE111:
 357              		.section	.text.CAN_FilterInit,"ax",%progbits
 358              		.align	2
 359              		.global	CAN_FilterInit
 360              		.thumb
 361              		.thumb_func
 363              	CAN_FilterInit:
 364              	.LFB112:
 321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 365              		.loc 1 330 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 16
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369              		@ link register save eliminated.
 370 0000 80B4     		push	{r7}
 371              	.LCFI6:
 372              		.cfi_def_cfa_offset 4
 373              		.cfi_offset 7, -4
 374 0002 85B0     		sub	sp, sp, #20
 375              	.LCFI7:
 376              		.cfi_def_cfa_offset 24
 377 0004 00AF     		add	r7, sp, #0
 378              	.LCFI8:
 379              		.cfi_def_cfa_register 7
 380 0006 7860     		str	r0, [r7, #4]
 331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 381              		.loc 1 331 0
 382 0008 4FF00003 		mov	r3, #0
 383 000c FB60     		str	r3, [r7, #12]
 332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 384              		.loc 1 339 0
 385 000e 7B68     		ldr	r3, [r7, #4]
 386 0010 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 387 0012 4FF00102 		mov	r2, #1
 388 0016 02FA03F3 		lsl	r3, r2, r3
 389 001a FB60     		str	r3, [r7, #12]
 340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 390              		.loc 1 342 0
 391 001c 4FF4C843 		mov	r3, #25600
 392 0020 C4F20003 		movt	r3, 16384
 393 0024 4FF4C842 		mov	r2, #25600
 394 0028 C4F20002 		movt	r2, 16384
 395 002c D2F80022 		ldr	r2, [r2, #512]
 396 0030 42F00102 		orr	r2, r2, #1
 397 0034 C3F80022 		str	r2, [r3, #512]
 343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 398              		.loc 1 345 0
 399 0038 4FF4C843 		mov	r3, #25600
 400 003c C4F20003 		movt	r3, 16384
 401 0040 4FF4C842 		mov	r2, #25600
 402 0044 C4F20002 		movt	r2, 16384
 403 0048 D2F81C22 		ldr	r2, [r2, #540]
 404 004c 1146     		mov	r1, r2
 405 004e FA68     		ldr	r2, [r7, #12]
 406 0050 6FEA0202 		mvn	r2, r2
 407 0054 0A40     		ands	r2, r2, r1
 408 0056 C3F81C22 		str	r2, [r3, #540]
 346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 409              		.loc 1 348 0
 410 005a 7B68     		ldr	r3, [r7, #4]
 411 005c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 412 005e 002B     		cmp	r3, #0
 413 0060 34D1     		bne	.L27
 349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 414              		.loc 1 351 0
 415 0062 4FF4C843 		mov	r3, #25600
 416 0066 C4F20003 		movt	r3, 16384
 417 006a 4FF4C842 		mov	r2, #25600
 418 006e C4F20002 		movt	r2, 16384
 419 0072 D2F80C22 		ldr	r2, [r2, #524]
 420 0076 1146     		mov	r1, r2
 421 0078 FA68     		ldr	r2, [r7, #12]
 422 007a 6FEA0202 		mvn	r2, r2
 423 007e 0A40     		ands	r2, r2, r1
 424 0080 C3F80C22 		str	r2, [r3, #524]
 352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 425              		.loc 1 355 0
 426 0084 4FF4C843 		mov	r3, #25600
 427 0088 C4F20003 		movt	r3, 16384
 428 008c 7A68     		ldr	r2, [r7, #4]
 429 008e 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 430              		.loc 1 356 0
 431 0090 7968     		ldr	r1, [r7, #4]
 432 0092 C988     		ldrh	r1, [r1, #6]
 433 0094 4FEA0140 		lsl	r0, r1, #16
 357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 434              		.loc 1 357 0
 435 0098 7968     		ldr	r1, [r7, #4]
 436 009a 4988     		ldrh	r1, [r1, #2]
 356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 437              		.loc 1 356 0
 438 009c 0143     		orrs	r1, r1, r0
 355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 439              		.loc 1 355 0
 440 009e 02F14802 		add	r2, r2, #72
 441 00a2 43F83210 		str	r1, [r3, r2, lsl #3]
 358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 442              		.loc 1 361 0
 443 00a6 4FF4C842 		mov	r2, #25600
 444 00aa C4F20002 		movt	r2, 16384
 445 00ae 7B68     		ldr	r3, [r7, #4]
 446 00b0 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 447              		.loc 1 362 0
 448 00b2 7968     		ldr	r1, [r7, #4]
 449 00b4 8988     		ldrh	r1, [r1, #4]
 450 00b6 4FEA0140 		lsl	r0, r1, #16
 363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 451              		.loc 1 363 0
 452 00ba 7968     		ldr	r1, [r7, #4]
 453 00bc 0988     		ldrh	r1, [r1, #0]
 362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 454              		.loc 1 362 0
 455 00be 0143     		orrs	r1, r1, r0
 361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 456              		.loc 1 361 0
 457 00c0 03F14803 		add	r3, r3, #72
 458 00c4 4FEAC303 		lsl	r3, r3, #3
 459 00c8 D318     		adds	r3, r2, r3
 460 00ca 5960     		str	r1, [r3, #4]
 461              	.L27:
 364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 462              		.loc 1 366 0
 463 00cc 7B68     		ldr	r3, [r7, #4]
 464 00ce 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 465 00d0 012B     		cmp	r3, #1
 466 00d2 32D1     		bne	.L28
 367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 467              		.loc 1 369 0
 468 00d4 4FF4C843 		mov	r3, #25600
 469 00d8 C4F20003 		movt	r3, 16384
 470 00dc 4FF4C842 		mov	r2, #25600
 471 00e0 C4F20002 		movt	r2, 16384
 472 00e4 D2F80C22 		ldr	r2, [r2, #524]
 473 00e8 1146     		mov	r1, r2
 474 00ea FA68     		ldr	r2, [r7, #12]
 475 00ec 0A43     		orrs	r2, r2, r1
 476 00ee C3F80C22 		str	r2, [r3, #524]
 370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 477              		.loc 1 371 0
 478 00f2 4FF4C843 		mov	r3, #25600
 479 00f6 C4F20003 		movt	r3, 16384
 480 00fa 7A68     		ldr	r2, [r7, #4]
 481 00fc 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 482              		.loc 1 372 0
 483 00fe 7968     		ldr	r1, [r7, #4]
 484 0100 0988     		ldrh	r1, [r1, #0]
 485 0102 4FEA0140 		lsl	r0, r1, #16
 373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 486              		.loc 1 373 0
 487 0106 7968     		ldr	r1, [r7, #4]
 488 0108 4988     		ldrh	r1, [r1, #2]
 372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 489              		.loc 1 372 0
 490 010a 0143     		orrs	r1, r1, r0
 371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 491              		.loc 1 371 0
 492 010c 02F14802 		add	r2, r2, #72
 493 0110 43F83210 		str	r1, [r3, r2, lsl #3]
 374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 494              		.loc 1 375 0
 495 0114 4FF4C842 		mov	r2, #25600
 496 0118 C4F20002 		movt	r2, 16384
 497 011c 7B68     		ldr	r3, [r7, #4]
 498 011e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 499              		.loc 1 376 0
 500 0120 7968     		ldr	r1, [r7, #4]
 501 0122 8988     		ldrh	r1, [r1, #4]
 502 0124 4FEA0140 		lsl	r0, r1, #16
 377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 503              		.loc 1 377 0
 504 0128 7968     		ldr	r1, [r7, #4]
 505 012a C988     		ldrh	r1, [r1, #6]
 376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 506              		.loc 1 376 0
 507 012c 0143     		orrs	r1, r1, r0
 375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 508              		.loc 1 375 0
 509 012e 03F14803 		add	r3, r3, #72
 510 0132 4FEAC303 		lsl	r3, r3, #3
 511 0136 D318     		adds	r3, r2, r3
 512 0138 5960     		str	r1, [r3, #4]
 513              	.L28:
 378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 514              		.loc 1 381 0
 515 013a 7B68     		ldr	r3, [r7, #4]
 516 013c DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 517 013e 002B     		cmp	r3, #0
 518 0140 11D1     		bne	.L29
 382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 519              		.loc 1 384 0
 520 0142 4FF4C843 		mov	r3, #25600
 521 0146 C4F20003 		movt	r3, 16384
 522 014a 4FF4C842 		mov	r2, #25600
 523 014e C4F20002 		movt	r2, 16384
 524 0152 D2F80422 		ldr	r2, [r2, #516]
 525 0156 1146     		mov	r1, r2
 526 0158 FA68     		ldr	r2, [r7, #12]
 527 015a 6FEA0202 		mvn	r2, r2
 528 015e 0A40     		ands	r2, r2, r1
 529 0160 C3F80422 		str	r2, [r3, #516]
 530 0164 0EE0     		b	.L30
 531              	.L29:
 385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 532              		.loc 1 389 0
 533 0166 4FF4C843 		mov	r3, #25600
 534 016a C4F20003 		movt	r3, 16384
 535 016e 4FF4C842 		mov	r2, #25600
 536 0172 C4F20002 		movt	r2, 16384
 537 0176 D2F80422 		ldr	r2, [r2, #516]
 538 017a 1146     		mov	r1, r2
 539 017c FA68     		ldr	r2, [r7, #12]
 540 017e 0A43     		orrs	r2, r2, r1
 541 0180 C3F80422 		str	r2, [r3, #516]
 542              	.L30:
 390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 543              		.loc 1 393 0
 544 0184 7B68     		ldr	r3, [r7, #4]
 545 0186 1B89     		ldrh	r3, [r3, #8]
 546 0188 002B     		cmp	r3, #0
 547 018a 10D1     		bne	.L31
 394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 548              		.loc 1 396 0
 549 018c 4FF4C843 		mov	r3, #25600
 550 0190 C4F20003 		movt	r3, 16384
 551 0194 4FF4C842 		mov	r2, #25600
 552 0198 C4F20002 		movt	r2, 16384
 553 019c D2F81422 		ldr	r2, [r2, #532]
 554 01a0 1146     		mov	r1, r2
 555 01a2 FA68     		ldr	r2, [r7, #12]
 556 01a4 6FEA0202 		mvn	r2, r2
 557 01a8 0A40     		ands	r2, r2, r1
 558 01aa C3F81422 		str	r2, [r3, #532]
 559              	.L31:
 397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 560              		.loc 1 399 0
 561 01ae 7B68     		ldr	r3, [r7, #4]
 562 01b0 1B89     		ldrh	r3, [r3, #8]
 563 01b2 012B     		cmp	r3, #1
 564 01b4 0ED1     		bne	.L32
 400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 565              		.loc 1 402 0
 566 01b6 4FF4C843 		mov	r3, #25600
 567 01ba C4F20003 		movt	r3, 16384
 568 01be 4FF4C842 		mov	r2, #25600
 569 01c2 C4F20002 		movt	r2, 16384
 570 01c6 D2F81422 		ldr	r2, [r2, #532]
 571 01ca 1146     		mov	r1, r2
 572 01cc FA68     		ldr	r2, [r7, #12]
 573 01ce 0A43     		orrs	r2, r2, r1
 574 01d0 C3F81422 		str	r2, [r3, #532]
 575              	.L32:
 403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 576              		.loc 1 406 0
 577 01d4 7B68     		ldr	r3, [r7, #4]
 578 01d6 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 579 01d8 012B     		cmp	r3, #1
 580 01da 0ED1     		bne	.L33
 407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 581              		.loc 1 408 0
 582 01dc 4FF4C843 		mov	r3, #25600
 583 01e0 C4F20003 		movt	r3, 16384
 584 01e4 4FF4C842 		mov	r2, #25600
 585 01e8 C4F20002 		movt	r2, 16384
 586 01ec D2F81C22 		ldr	r2, [r2, #540]
 587 01f0 1146     		mov	r1, r2
 588 01f2 FA68     		ldr	r2, [r7, #12]
 589 01f4 0A43     		orrs	r2, r2, r1
 590 01f6 C3F81C22 		str	r2, [r3, #540]
 591              	.L33:
 409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 592              		.loc 1 412 0
 593 01fa 4FF4C843 		mov	r3, #25600
 594 01fe C4F20003 		movt	r3, 16384
 595 0202 4FF4C842 		mov	r2, #25600
 596 0206 C4F20002 		movt	r2, 16384
 597 020a D2F80022 		ldr	r2, [r2, #512]
 598 020e 22F00102 		bic	r2, r2, #1
 599 0212 C3F80022 		str	r2, [r3, #512]
 413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 600              		.loc 1 413 0
 601 0216 07F11407 		add	r7, r7, #20
 602 021a BD46     		mov	sp, r7
 603 021c 80BC     		pop	{r7}
 604 021e 7047     		bx	lr
 605              		.cfi_endproc
 606              	.LFE112:
 608              		.section	.text.CAN_StructInit,"ax",%progbits
 609              		.align	2
 610              		.global	CAN_StructInit
 611              		.thumb
 612              		.thumb_func
 614              	CAN_StructInit:
 615              	.LFB113:
 414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 616              		.loc 1 421 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI9:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 83B0     		sub	sp, sp, #12
 626              	.LCFI10:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI11:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 632              		.loc 1 425 0
 633 0008 7B68     		ldr	r3, [r7, #4]
 634 000a 4FF00002 		mov	r2, #0
 635 000e 9A71     		strb	r2, [r3, #6]
 426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 636              		.loc 1 428 0
 637 0010 7B68     		ldr	r3, [r7, #4]
 638 0012 4FF00002 		mov	r2, #0
 639 0016 DA71     		strb	r2, [r3, #7]
 429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 640              		.loc 1 431 0
 641 0018 7B68     		ldr	r3, [r7, #4]
 642 001a 4FF00002 		mov	r2, #0
 643 001e 1A72     		strb	r2, [r3, #8]
 432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 644              		.loc 1 434 0
 645 0020 7B68     		ldr	r3, [r7, #4]
 646 0022 4FF00002 		mov	r2, #0
 647 0026 5A72     		strb	r2, [r3, #9]
 435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 648              		.loc 1 437 0
 649 0028 7B68     		ldr	r3, [r7, #4]
 650 002a 4FF00002 		mov	r2, #0
 651 002e 9A72     		strb	r2, [r3, #10]
 438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 652              		.loc 1 440 0
 653 0030 7B68     		ldr	r3, [r7, #4]
 654 0032 4FF00002 		mov	r2, #0
 655 0036 DA72     		strb	r2, [r3, #11]
 441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 656              		.loc 1 443 0
 657 0038 7B68     		ldr	r3, [r7, #4]
 658 003a 4FF00002 		mov	r2, #0
 659 003e 9A70     		strb	r2, [r3, #2]
 444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 660              		.loc 1 446 0
 661 0040 7B68     		ldr	r3, [r7, #4]
 662 0042 4FF00002 		mov	r2, #0
 663 0046 DA70     		strb	r2, [r3, #3]
 447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 664              		.loc 1 449 0
 665 0048 7B68     		ldr	r3, [r7, #4]
 666 004a 4FF00302 		mov	r2, #3
 667 004e 1A71     		strb	r2, [r3, #4]
 450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 668              		.loc 1 452 0
 669 0050 7B68     		ldr	r3, [r7, #4]
 670 0052 4FF00202 		mov	r2, #2
 671 0056 5A71     		strb	r2, [r3, #5]
 453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 672              		.loc 1 455 0
 673 0058 7B68     		ldr	r3, [r7, #4]
 674 005a 4FF00102 		mov	r2, #1
 675 005e 1A80     		strh	r2, [r3, #0]	@ movhi
 456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 676              		.loc 1 456 0
 677 0060 07F10C07 		add	r7, r7, #12
 678 0064 BD46     		mov	sp, r7
 679 0066 80BC     		pop	{r7}
 680 0068 7047     		bx	lr
 681              		.cfi_endproc
 682              	.LFE113:
 684 006a 00BF     		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 685              		.align	2
 686              		.global	CAN_SlaveStartBank
 687              		.thumb
 688              		.thumb_func
 690              	CAN_SlaveStartBank:
 691              	.LFB114:
 457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 692              		.loc 1 464 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 697 0000 80B4     		push	{r7}
 698              	.LCFI12:
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 83B0     		sub	sp, sp, #12
 702              	.LCFI13:
 703              		.cfi_def_cfa_offset 16
 704 0004 00AF     		add	r7, sp, #0
 705              	.LCFI14:
 706              		.cfi_def_cfa_register 7
 707 0006 0346     		mov	r3, r0
 708 0008 FB71     		strb	r3, [r7, #7]
 465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 709              		.loc 1 469 0
 710 000a 4FF4C843 		mov	r3, #25600
 711 000e C4F20003 		movt	r3, 16384
 712 0012 4FF4C842 		mov	r2, #25600
 713 0016 C4F20002 		movt	r2, 16384
 714 001a D2F80022 		ldr	r2, [r2, #512]
 715 001e 42F00102 		orr	r2, r2, #1
 716 0022 C3F80022 		str	r2, [r3, #512]
 470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 717              		.loc 1 472 0
 718 0026 4FF4C843 		mov	r3, #25600
 719 002a C4F20003 		movt	r3, 16384
 720 002e 4FF4C842 		mov	r2, #25600
 721 0032 C4F20002 		movt	r2, 16384
 722 0036 D2F80022 		ldr	r2, [r2, #512]
 723 003a 22F47C52 		bic	r2, r2, #16128
 724 003e 22F00E02 		bic	r2, r2, #14
 725 0042 C3F80022 		str	r2, [r3, #512]
 473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 726              		.loc 1 473 0
 727 0046 4FF4C843 		mov	r3, #25600
 728 004a C4F20003 		movt	r3, 16384
 729 004e 4FF4C842 		mov	r2, #25600
 730 0052 C4F20002 		movt	r2, 16384
 731 0056 D2F80022 		ldr	r2, [r2, #512]
 732 005a 1146     		mov	r1, r2
 733 005c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 734 005e 4FEA0222 		lsl	r2, r2, #8
 735 0062 0A43     		orrs	r2, r2, r1
 736 0064 C3F80022 		str	r2, [r3, #512]
 474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 737              		.loc 1 476 0
 738 0068 4FF4C843 		mov	r3, #25600
 739 006c C4F20003 		movt	r3, 16384
 740 0070 4FF4C842 		mov	r2, #25600
 741 0074 C4F20002 		movt	r2, 16384
 742 0078 D2F80022 		ldr	r2, [r2, #512]
 743 007c 22F00102 		bic	r2, r2, #1
 744 0080 C3F80022 		str	r2, [r3, #512]
 477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 745              		.loc 1 477 0
 746 0084 07F10C07 		add	r7, r7, #12
 747 0088 BD46     		mov	sp, r7
 748 008a 80BC     		pop	{r7}
 749 008c 7047     		bx	lr
 750              		.cfi_endproc
 751              	.LFE114:
 753 008e 00BF     		.section	.text.CAN_DBGFreeze,"ax",%progbits
 754              		.align	2
 755              		.global	CAN_DBGFreeze
 756              		.thumb
 757              		.thumb_func
 759              	CAN_DBGFreeze:
 760              	.LFB115:
 478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 761              		.loc 1 489 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 8
 764              		@ frame_needed = 1, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766 0000 80B4     		push	{r7}
 767              	.LCFI15:
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 0002 83B0     		sub	sp, sp, #12
 771              	.LCFI16:
 772              		.cfi_def_cfa_offset 16
 773 0004 00AF     		add	r7, sp, #0
 774              	.LCFI17:
 775              		.cfi_def_cfa_register 7
 776 0006 7860     		str	r0, [r7, #4]
 777 0008 0B46     		mov	r3, r1
 778 000a FB70     		strb	r3, [r7, #3]
 490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 779              		.loc 1 494 0
 780 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 781 000e 002B     		cmp	r3, #0
 782 0010 06D0     		beq	.L37
 495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 783              		.loc 1 497 0
 784 0012 7B68     		ldr	r3, [r7, #4]
 785 0014 1B68     		ldr	r3, [r3, #0]
 786 0016 43F48032 		orr	r2, r3, #65536
 787 001a 7B68     		ldr	r3, [r7, #4]
 788 001c 1A60     		str	r2, [r3, #0]
 789 001e 05E0     		b	.L36
 790              	.L37:
 498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 791              		.loc 1 502 0
 792 0020 7B68     		ldr	r3, [r7, #4]
 793 0022 1B68     		ldr	r3, [r3, #0]
 794 0024 23F48032 		bic	r2, r3, #65536
 795 0028 7B68     		ldr	r3, [r7, #4]
 796 002a 1A60     		str	r2, [r3, #0]
 797              	.L36:
 503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 798              		.loc 1 504 0
 799 002c 07F10C07 		add	r7, r7, #12
 800 0030 BD46     		mov	sp, r7
 801 0032 80BC     		pop	{r7}
 802 0034 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE115:
 806 0036 00BF     		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 807              		.align	2
 808              		.global	CAN_TTComModeCmd
 809              		.thumb
 810              		.thumb_func
 812              	CAN_TTComModeCmd:
 813              	.LFB116:
 505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 814              		.loc 1 519 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 8
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              	.LCFI18:
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 7, -4
 823 0002 83B0     		sub	sp, sp, #12
 824              	.LCFI19:
 825              		.cfi_def_cfa_offset 16
 826 0004 00AF     		add	r7, sp, #0
 827              	.LCFI20:
 828              		.cfi_def_cfa_register 7
 829 0006 7860     		str	r0, [r7, #4]
 830 0008 0B46     		mov	r3, r1
 831 000a FB70     		strb	r3, [r7, #3]
 520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 832              		.loc 1 523 0
 833 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 834 000e 002B     		cmp	r3, #0
 835 0010 1ED0     		beq	.L40
 524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 836              		.loc 1 526 0
 837 0012 7B68     		ldr	r3, [r7, #4]
 838 0014 1B68     		ldr	r3, [r3, #0]
 839 0016 43F08002 		orr	r2, r3, #128
 840 001a 7B68     		ldr	r3, [r7, #4]
 841 001c 1A60     		str	r2, [r3, #0]
 527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 842              		.loc 1 529 0
 843 001e 7B68     		ldr	r3, [r7, #4]
 844 0020 D3F88431 		ldr	r3, [r3, #388]
 845 0024 43F48072 		orr	r2, r3, #256
 846 0028 7B68     		ldr	r3, [r7, #4]
 847 002a C3F88421 		str	r2, [r3, #388]
 530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 848              		.loc 1 530 0
 849 002e 7B68     		ldr	r3, [r7, #4]
 850 0030 D3F89431 		ldr	r3, [r3, #404]
 851 0034 43F48072 		orr	r2, r3, #256
 852 0038 7B68     		ldr	r3, [r7, #4]
 853 003a C3F89421 		str	r2, [r3, #404]
 531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 854              		.loc 1 531 0
 855 003e 7B68     		ldr	r3, [r7, #4]
 856 0040 D3F8A431 		ldr	r3, [r3, #420]
 857 0044 43F48072 		orr	r2, r3, #256
 858 0048 7B68     		ldr	r3, [r7, #4]
 859 004a C3F8A421 		str	r2, [r3, #420]
 860 004e 1DE0     		b	.L39
 861              	.L40:
 532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 862              		.loc 1 536 0
 863 0050 7B68     		ldr	r3, [r7, #4]
 864 0052 1B68     		ldr	r3, [r3, #0]
 865 0054 23F08002 		bic	r2, r3, #128
 866 0058 7B68     		ldr	r3, [r7, #4]
 867 005a 1A60     		str	r2, [r3, #0]
 537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 868              		.loc 1 539 0
 869 005c 7B68     		ldr	r3, [r7, #4]
 870 005e D3F88431 		ldr	r3, [r3, #388]
 871 0062 23F48072 		bic	r2, r3, #256
 872 0066 7B68     		ldr	r3, [r7, #4]
 873 0068 C3F88421 		str	r2, [r3, #388]
 540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 874              		.loc 1 540 0
 875 006c 7B68     		ldr	r3, [r7, #4]
 876 006e D3F89431 		ldr	r3, [r3, #404]
 877 0072 23F48072 		bic	r2, r3, #256
 878 0076 7B68     		ldr	r3, [r7, #4]
 879 0078 C3F89421 		str	r2, [r3, #404]
 541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 880              		.loc 1 541 0
 881 007c 7B68     		ldr	r3, [r7, #4]
 882 007e D3F8A431 		ldr	r3, [r3, #420]
 883 0082 23F48072 		bic	r2, r3, #256
 884 0086 7B68     		ldr	r3, [r7, #4]
 885 0088 C3F8A421 		str	r2, [r3, #420]
 886              	.L39:
 542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 887              		.loc 1 543 0
 888 008c 07F10C07 		add	r7, r7, #12
 889 0090 BD46     		mov	sp, r7
 890 0092 80BC     		pop	{r7}
 891 0094 7047     		bx	lr
 892              		.cfi_endproc
 893              	.LFE116:
 895 0096 00BF     		.section	.text.CAN_Transmit,"ax",%progbits
 896              		.align	2
 897              		.global	CAN_Transmit
 898              		.thumb
 899              		.thumb_func
 901              	CAN_Transmit:
 902              	.LFB117:
 544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 903              		.loc 1 573 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 16
 906              		@ frame_needed = 1, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 908 0000 80B4     		push	{r7}
 909              	.LCFI21:
 910              		.cfi_def_cfa_offset 4
 911              		.cfi_offset 7, -4
 912 0002 85B0     		sub	sp, sp, #20
 913              	.LCFI22:
 914              		.cfi_def_cfa_offset 24
 915 0004 00AF     		add	r7, sp, #0
 916              	.LCFI23:
 917              		.cfi_def_cfa_register 7
 918 0006 7860     		str	r0, [r7, #4]
 919 0008 3960     		str	r1, [r7, #0]
 574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 920              		.loc 1 574 0
 921 000a 4FF00003 		mov	r3, #0
 922 000e FB73     		strb	r3, [r7, #15]
 575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 923              		.loc 1 582 0
 924 0010 7B68     		ldr	r3, [r7, #4]
 925 0012 9B68     		ldr	r3, [r3, #8]
 926 0014 03F08063 		and	r3, r3, #67108864
 927 0018 002B     		cmp	r3, #0
 928 001a 03D0     		beq	.L43
 583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 929              		.loc 1 584 0
 930 001c 4FF00003 		mov	r3, #0
 931 0020 FB73     		strb	r3, [r7, #15]
 932 0022 16E0     		b	.L44
 933              	.L43:
 585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 934              		.loc 1 586 0
 935 0024 7B68     		ldr	r3, [r7, #4]
 936 0026 9B68     		ldr	r3, [r3, #8]
 937 0028 03F00063 		and	r3, r3, #134217728
 938 002c 002B     		cmp	r3, #0
 939 002e 03D0     		beq	.L45
 587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 940              		.loc 1 588 0
 941 0030 4FF00103 		mov	r3, #1
 942 0034 FB73     		strb	r3, [r7, #15]
 943 0036 0CE0     		b	.L44
 944              	.L45:
 589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 945              		.loc 1 590 0
 946 0038 7B68     		ldr	r3, [r7, #4]
 947 003a 9B68     		ldr	r3, [r3, #8]
 948 003c 03F08053 		and	r3, r3, #268435456
 949 0040 002B     		cmp	r3, #0
 950 0042 03D0     		beq	.L46
 591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 951              		.loc 1 592 0
 952 0044 4FF00203 		mov	r3, #2
 953 0048 FB73     		strb	r3, [r7, #15]
 954 004a 02E0     		b	.L44
 955              	.L46:
 593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 956              		.loc 1 596 0
 957 004c 4FF00403 		mov	r3, #4
 958 0050 FB73     		strb	r3, [r7, #15]
 959              	.L44:
 597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 960              		.loc 1 599 0
 961 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 962 0054 042B     		cmp	r3, #4
 963 0056 00F0BD80 		beq	.L47
 600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 964              		.loc 1 602 0
 965 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966 005c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 967 005e 7968     		ldr	r1, [r7, #4]
 968 0060 02F11802 		add	r2, r2, #24
 969 0064 4FEA0212 		lsl	r2, r2, #4
 970 0068 8A18     		adds	r2, r1, r2
 971 006a 1268     		ldr	r2, [r2, #0]
 972 006c 02F00102 		and	r2, r2, #1
 973 0070 7968     		ldr	r1, [r7, #4]
 974 0072 03F11803 		add	r3, r3, #24
 975 0076 4FEA0313 		lsl	r3, r3, #4
 976 007a CB18     		adds	r3, r1, r3
 977 007c 1A60     		str	r2, [r3, #0]
 603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 978              		.loc 1 603 0
 979 007e 3B68     		ldr	r3, [r7, #0]
 980 0080 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 981 0082 002B     		cmp	r3, #0
 982 0084 19D1     		bne	.L48
 604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 983              		.loc 1 606 0
 984 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 985 0088 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 986 008a 7968     		ldr	r1, [r7, #4]
 987 008c 02F11802 		add	r2, r2, #24
 988 0090 4FEA0212 		lsl	r2, r2, #4
 989 0094 8A18     		adds	r2, r1, r2
 990 0096 1268     		ldr	r2, [r2, #0]
 991 0098 1146     		mov	r1, r2
 992 009a 3A68     		ldr	r2, [r7, #0]
 993 009c 1268     		ldr	r2, [r2, #0]
 994 009e 4FEA4250 		lsl	r0, r2, #21
 607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 995              		.loc 1 607 0
 996 00a2 3A68     		ldr	r2, [r7, #0]
 997 00a4 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 998              		.loc 1 606 0
 999 00a6 0243     		orrs	r2, r2, r0
 1000 00a8 0A43     		orrs	r2, r2, r1
 1001 00aa 7968     		ldr	r1, [r7, #4]
 1002 00ac 03F11803 		add	r3, r3, #24
 1003 00b0 4FEA0313 		lsl	r3, r3, #4
 1004 00b4 CB18     		adds	r3, r1, r3
 1005 00b6 1A60     		str	r2, [r3, #0]
 1006 00b8 1BE0     		b	.L49
 1007              	.L48:
 608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1008              		.loc 1 612 0
 1009 00ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1010 00bc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1011 00be 7968     		ldr	r1, [r7, #4]
 1012 00c0 02F11802 		add	r2, r2, #24
 1013 00c4 4FEA0212 		lsl	r2, r2, #4
 1014 00c8 8A18     		adds	r2, r1, r2
 1015 00ca 1268     		ldr	r2, [r2, #0]
 1016 00cc 1146     		mov	r1, r2
 1017 00ce 3A68     		ldr	r2, [r7, #0]
 1018 00d0 5268     		ldr	r2, [r2, #4]
 1019 00d2 4FEAC200 		lsl	r0, r2, #3
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1020              		.loc 1 613 0
 1021 00d6 3A68     		ldr	r2, [r7, #0]
 1022 00d8 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1023              		.loc 1 612 0
 1024 00da 1043     		orrs	r0, r0, r2
 614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 1025              		.loc 1 614 0
 1026 00dc 3A68     		ldr	r2, [r7, #0]
 1027 00de 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1028              		.loc 1 613 0
 1029 00e0 0243     		orrs	r2, r2, r0
 612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1030              		.loc 1 612 0
 1031 00e2 0A43     		orrs	r2, r2, r1
 1032 00e4 7968     		ldr	r1, [r7, #4]
 1033 00e6 03F11803 		add	r3, r3, #24
 1034 00ea 4FEA0313 		lsl	r3, r3, #4
 1035 00ee CB18     		adds	r3, r1, r3
 1036 00f0 1A60     		str	r2, [r3, #0]
 1037              	.L49:
 615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 1038              		.loc 1 618 0
 1039 00f2 3B68     		ldr	r3, [r7, #0]
 1040 00f4 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1041 00f6 03F00F03 		and	r3, r3, #15
 1042 00fa DAB2     		uxtb	r2, r3
 1043 00fc 3B68     		ldr	r3, [r7, #0]
 1044 00fe 9A72     		strb	r2, [r3, #10]
 619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 1045              		.loc 1 619 0
 1046 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1047 0102 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1048 0104 7968     		ldr	r1, [r7, #4]
 1049 0106 02F11802 		add	r2, r2, #24
 1050 010a 4FEA0212 		lsl	r2, r2, #4
 1051 010e 8A18     		adds	r2, r1, r2
 1052 0110 5268     		ldr	r2, [r2, #4]
 1053 0112 22F00F02 		bic	r2, r2, #15
 1054 0116 7968     		ldr	r1, [r7, #4]
 1055 0118 03F11803 		add	r3, r3, #24
 1056 011c 4FEA0313 		lsl	r3, r3, #4
 1057 0120 CB18     		adds	r3, r1, r3
 1058 0122 5A60     		str	r2, [r3, #4]
 620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 1059              		.loc 1 620 0
 1060 0124 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1061 0126 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1062 0128 7968     		ldr	r1, [r7, #4]
 1063 012a 02F11802 		add	r2, r2, #24
 1064 012e 4FEA0212 		lsl	r2, r2, #4
 1065 0132 8A18     		adds	r2, r1, r2
 1066 0134 5268     		ldr	r2, [r2, #4]
 1067 0136 1146     		mov	r1, r2
 1068 0138 3A68     		ldr	r2, [r7, #0]
 1069 013a 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 1070 013c 0A43     		orrs	r2, r2, r1
 1071 013e 7968     		ldr	r1, [r7, #4]
 1072 0140 03F11803 		add	r3, r3, #24
 1073 0144 4FEA0313 		lsl	r3, r3, #4
 1074 0148 CB18     		adds	r3, r1, r3
 1075 014a 5A60     		str	r2, [r3, #4]
 621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1076              		.loc 1 623 0
 1077 014c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1078 014e 3A68     		ldr	r2, [r7, #0]
 1079 0150 927B     		ldrb	r2, [r2, #14]	@ zero_extendqisi2
 1080 0152 4FEA0261 		lsl	r1, r2, #24
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1081              		.loc 1 624 0
 1082 0156 3A68     		ldr	r2, [r7, #0]
 1083 0158 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 1084 015a 4FEA0242 		lsl	r2, r2, #16
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1085              		.loc 1 623 0
 1086 015e 1143     		orrs	r1, r1, r2
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1087              		.loc 1 625 0
 1088 0160 3A68     		ldr	r2, [r7, #0]
 1089 0162 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 1090 0164 4FEA0222 		lsl	r2, r2, #8
 624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1091              		.loc 1 624 0
 1092 0168 1143     		orrs	r1, r1, r2
 626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 1093              		.loc 1 626 0
 1094 016a 3A68     		ldr	r2, [r7, #0]
 1095 016c D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1096              		.loc 1 625 0
 1097 016e 0A43     		orrs	r2, r2, r1
 623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1098              		.loc 1 623 0
 1099 0170 7968     		ldr	r1, [r7, #4]
 1100 0172 4FEA0313 		lsl	r3, r3, #4
 1101 0176 CB18     		adds	r3, r1, r3
 1102 0178 03F5C473 		add	r3, r3, #392
 1103 017c 1A60     		str	r2, [r3, #0]
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1104              		.loc 1 627 0
 1105 017e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1106 0180 3A68     		ldr	r2, [r7, #0]
 1107 0182 927C     		ldrb	r2, [r2, #18]	@ zero_extendqisi2
 1108 0184 4FEA0261 		lsl	r1, r2, #24
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1109              		.loc 1 628 0
 1110 0188 3A68     		ldr	r2, [r7, #0]
 1111 018a 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 1112 018c 4FEA0242 		lsl	r2, r2, #16
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1113              		.loc 1 627 0
 1114 0190 1143     		orrs	r1, r1, r2
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1115              		.loc 1 629 0
 1116 0192 3A68     		ldr	r2, [r7, #0]
 1117 0194 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 1118 0196 4FEA0222 		lsl	r2, r2, #8
 628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1119              		.loc 1 628 0
 1120 019a 1143     		orrs	r1, r1, r2
 630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 1121              		.loc 1 630 0
 1122 019c 3A68     		ldr	r2, [r7, #0]
 1123 019e D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
 629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1124              		.loc 1 629 0
 1125 01a0 0A43     		orrs	r2, r2, r1
 627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1126              		.loc 1 627 0
 1127 01a2 7968     		ldr	r1, [r7, #4]
 1128 01a4 4FEA0313 		lsl	r3, r3, #4
 1129 01a8 CB18     		adds	r3, r1, r3
 1130 01aa 03F5C473 		add	r3, r3, #392
 1131 01ae 5A60     		str	r2, [r3, #4]
 631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 1132              		.loc 1 632 0
 1133 01b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1134 01b2 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1135 01b4 7968     		ldr	r1, [r7, #4]
 1136 01b6 02F11802 		add	r2, r2, #24
 1137 01ba 4FEA0212 		lsl	r2, r2, #4
 1138 01be 8A18     		adds	r2, r1, r2
 1139 01c0 1268     		ldr	r2, [r2, #0]
 1140 01c2 42F00102 		orr	r2, r2, #1
 1141 01c6 7968     		ldr	r1, [r7, #4]
 1142 01c8 03F11803 		add	r3, r3, #24
 1143 01cc 4FEA0313 		lsl	r3, r3, #4
 1144 01d0 CB18     		adds	r3, r1, r3
 1145 01d2 1A60     		str	r2, [r3, #0]
 1146              	.L47:
 633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 1147              		.loc 1 634 0
 1148 01d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1149              		.loc 1 635 0
 1150 01d6 1846     		mov	r0, r3
 1151 01d8 07F11407 		add	r7, r7, #20
 1152 01dc BD46     		mov	sp, r7
 1153 01de 80BC     		pop	{r7}
 1154 01e0 7047     		bx	lr
 1155              		.cfi_endproc
 1156              	.LFE117:
 1158 01e2 00BF     		.section	.text.CAN_TransmitStatus,"ax",%progbits
 1159              		.align	2
 1160              		.global	CAN_TransmitStatus
 1161              		.thumb
 1162              		.thumb_func
 1164              	CAN_TransmitStatus:
 1165              	.LFB118:
 636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1166              		.loc 1 645 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 16
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170              		@ link register save eliminated.
 1171 0000 80B4     		push	{r7}
 1172              	.LCFI24:
 1173              		.cfi_def_cfa_offset 4
 1174              		.cfi_offset 7, -4
 1175 0002 85B0     		sub	sp, sp, #20
 1176              	.LCFI25:
 1177              		.cfi_def_cfa_offset 24
 1178 0004 00AF     		add	r7, sp, #0
 1179              	.LCFI26:
 1180              		.cfi_def_cfa_register 7
 1181 0006 7860     		str	r0, [r7, #4]
 1182 0008 0B46     		mov	r3, r1
 1183 000a FB70     		strb	r3, [r7, #3]
 646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 1184              		.loc 1 646 0
 1185 000c 4FF00003 		mov	r3, #0
 1186 0010 FB60     		str	r3, [r7, #12]
 647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 1187              		.loc 1 652 0
 1188 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1189 0014 012B     		cmp	r3, #1
 1190 0016 0DD0     		beq	.L53
 1191 0018 022B     		cmp	r3, #2
 1192 001a 15D0     		beq	.L54
 1193 001c 002B     		cmp	r3, #0
 1194 001e 1DD1     		bne	.L66
 1195              	.L52:
 653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 1196              		.loc 1 655 0
 1197 0020 7B68     		ldr	r3, [r7, #4]
 1198 0022 9B68     		ldr	r3, [r3, #8]
 1199 0024 1A46     		mov	r2, r3
 1200 0026 4FF00303 		mov	r3, #3
 1201 002a C0F20043 		movt	r3, 1024
 1202 002e 1340     		ands	r3, r3, r2
 1203 0030 FB60     		str	r3, [r7, #12]
 656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1204              		.loc 1 656 0
 1205 0032 17E0     		b	.L55
 1206              	.L53:
 657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 1207              		.loc 1 658 0
 1208 0034 7B68     		ldr	r3, [r7, #4]
 1209 0036 9B68     		ldr	r3, [r3, #8]
 1210 0038 1A46     		mov	r2, r3
 1211 003a 4FF44073 		mov	r3, #768
 1212 003e C0F60003 		movt	r3, 2048
 1213 0042 1340     		ands	r3, r3, r2
 1214 0044 FB60     		str	r3, [r7, #12]
 659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1215              		.loc 1 659 0
 1216 0046 0DE0     		b	.L55
 1217              	.L54:
 660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 1218              		.loc 1 661 0
 1219 0048 7B68     		ldr	r3, [r7, #4]
 1220 004a 9B68     		ldr	r3, [r3, #8]
 1221 004c 1A46     		mov	r2, r3
 1222 004e 4FF00003 		mov	r3, #0
 1223 0052 C1F20303 		movt	r3, 4099
 1224 0056 1340     		ands	r3, r3, r2
 1225 0058 FB60     		str	r3, [r7, #12]
 662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1226              		.loc 1 662 0
 1227 005a 03E0     		b	.L55
 1228              	.L66:
 663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 1229              		.loc 1 664 0
 1230 005c 4FF00003 		mov	r3, #0
 1231 0060 FB60     		str	r3, [r7, #12]
 665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1232              		.loc 1 665 0
 1233 0062 00BF     		nop
 1234              	.L55:
 666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 1235              		.loc 1 667 0
 1236 0064 FB68     		ldr	r3, [r7, #12]
 1237 0066 4FF48072 		mov	r2, #256
 1238 006a C0F60002 		movt	r2, 2048
 1239 006e 9342     		cmp	r3, r2
 1240 0070 2FD0     		beq	.L60
 1241 0072 4FF48072 		mov	r2, #256
 1242 0076 C0F60002 		movt	r2, 2048
 1243 007a 9342     		cmp	r3, r2
 1244 007c 0ED8     		bhi	.L64
 1245 007e 4FF00102 		mov	r2, #1
 1246 0082 C0F20042 		movt	r2, 1024
 1247 0086 9342     		cmp	r3, r2
 1248 0088 1FD0     		beq	.L58
 1249 008a 4FF00302 		mov	r2, #3
 1250 008e C0F20042 		movt	r2, 1024
 1251 0092 9342     		cmp	r3, r2
 1252 0094 25D0     		beq	.L59
 1253 0096 002B     		cmp	r3, #0
 1254 0098 13D0     		beq	.L57
 1255 009a 2EE0     		b	.L56
 1256              	.L64:
 1257 009c 4FF00002 		mov	r2, #0
 1258 00a0 C1F20102 		movt	r2, 4097
 1259 00a4 9342     		cmp	r3, r2
 1260 00a6 18D0     		beq	.L62
 1261 00a8 4FF00002 		mov	r2, #0
 1262 00ac C1F20302 		movt	r2, 4099
 1263 00b0 9342     		cmp	r3, r2
 1264 00b2 1ED0     		beq	.L63
 1265 00b4 4FF44072 		mov	r2, #768
 1266 00b8 C0F60002 		movt	r2, 2048
 1267 00bc 9342     		cmp	r3, r2
 1268 00be 14D0     		beq	.L61
 1269 00c0 1BE0     		b	.L56
 1270              	.L57:
 668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 1271              		.loc 1 670 0
 1272 00c2 4FF00203 		mov	r3, #2
 1273 00c6 FB60     		str	r3, [r7, #12]
 671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1274              		.loc 1 671 0
 1275 00c8 1BE0     		b	.L65
 1276              	.L58:
 672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 1277              		.loc 1 673 0
 1278 00ca 4FF00003 		mov	r3, #0
 1279 00ce FB60     		str	r3, [r7, #12]
 674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1280              		.loc 1 674 0
 1281 00d0 17E0     		b	.L65
 1282              	.L60:
 675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 1283              		.loc 1 675 0
 1284 00d2 4FF00003 		mov	r3, #0
 1285 00d6 FB60     		str	r3, [r7, #12]
 676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1286              		.loc 1 676 0
 1287 00d8 13E0     		b	.L65
 1288              	.L62:
 677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 1289              		.loc 1 677 0
 1290 00da 4FF00003 		mov	r3, #0
 1291 00de FB60     		str	r3, [r7, #12]
 678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1292              		.loc 1 678 0
 1293 00e0 0FE0     		b	.L65
 1294              	.L59:
 679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 1295              		.loc 1 680 0
 1296 00e2 4FF00103 		mov	r3, #1
 1297 00e6 FB60     		str	r3, [r7, #12]
 681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1298              		.loc 1 681 0
 1299 00e8 0BE0     		b	.L65
 1300              	.L61:
 682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 1301              		.loc 1 682 0
 1302 00ea 4FF00103 		mov	r3, #1
 1303 00ee FB60     		str	r3, [r7, #12]
 683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1304              		.loc 1 683 0
 1305 00f0 07E0     		b	.L65
 1306              	.L63:
 684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 1307              		.loc 1 684 0
 1308 00f2 4FF00103 		mov	r3, #1
 1309 00f6 FB60     		str	r3, [r7, #12]
 685:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1310              		.loc 1 685 0
 1311 00f8 03E0     		b	.L65
 1312              	.L56:
 686:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 1313              		.loc 1 686 0
 1314 00fa 4FF00003 		mov	r3, #0
 1315 00fe FB60     		str	r3, [r7, #12]
 687:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1316              		.loc 1 687 0
 1317 0100 00BF     		nop
 1318              	.L65:
 688:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 689:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 1319              		.loc 1 689 0
 1320 0102 FB68     		ldr	r3, [r7, #12]
 1321 0104 DBB2     		uxtb	r3, r3
 690:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1322              		.loc 1 690 0
 1323 0106 1846     		mov	r0, r3
 1324 0108 07F11407 		add	r7, r7, #20
 1325 010c BD46     		mov	sp, r7
 1326 010e 80BC     		pop	{r7}
 1327 0110 7047     		bx	lr
 1328              		.cfi_endproc
 1329              	.LFE118:
 1331 0112 00BF     		.section	.text.CAN_CancelTransmit,"ax",%progbits
 1332              		.align	2
 1333              		.global	CAN_CancelTransmit
 1334              		.thumb
 1335              		.thumb_func
 1337              	CAN_CancelTransmit:
 1338              	.LFB119:
 691:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 692:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 693:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 694:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 697:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 698:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1339              		.loc 1 699 0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 8
 1342              		@ frame_needed = 1, uses_anonymous_args = 0
 1343              		@ link register save eliminated.
 1344 0000 80B4     		push	{r7}
 1345              	.LCFI27:
 1346              		.cfi_def_cfa_offset 4
 1347              		.cfi_offset 7, -4
 1348 0002 83B0     		sub	sp, sp, #12
 1349              	.LCFI28:
 1350              		.cfi_def_cfa_offset 16
 1351 0004 00AF     		add	r7, sp, #0
 1352              	.LCFI29:
 1353              		.cfi_def_cfa_register 7
 1354 0006 7860     		str	r0, [r7, #4]
 1355 0008 0B46     		mov	r3, r1
 1356 000a FB70     		strb	r3, [r7, #3]
 700:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 701:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 704:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 1357              		.loc 1 704 0
 1358 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1359 000e 012B     		cmp	r3, #1
 1360 0010 0AD0     		beq	.L70
 1361 0012 022B     		cmp	r3, #2
 1362 0014 0FD0     		beq	.L71
 1363 0016 002B     		cmp	r3, #0
 1364 0018 14D1     		bne	.L73
 1365              	.L69:
 705:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 706:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 1366              		.loc 1 706 0
 1367 001a 7B68     		ldr	r3, [r7, #4]
 1368 001c 9B68     		ldr	r3, [r3, #8]
 1369 001e 43F08002 		orr	r2, r3, #128
 1370 0022 7B68     		ldr	r3, [r7, #4]
 1371 0024 9A60     		str	r2, [r3, #8]
 707:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1372              		.loc 1 707 0
 1373 0026 0EE0     		b	.L67
 1374              	.L70:
 708:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 1375              		.loc 1 708 0
 1376 0028 7B68     		ldr	r3, [r7, #4]
 1377 002a 9B68     		ldr	r3, [r3, #8]
 1378 002c 43F40042 		orr	r2, r3, #32768
 1379 0030 7B68     		ldr	r3, [r7, #4]
 1380 0032 9A60     		str	r2, [r3, #8]
 709:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1381              		.loc 1 709 0
 1382 0034 07E0     		b	.L67
 1383              	.L71:
 710:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 1384              		.loc 1 710 0
 1385 0036 7B68     		ldr	r3, [r7, #4]
 1386 0038 9B68     		ldr	r3, [r3, #8]
 1387 003a 43F40002 		orr	r2, r3, #8388608
 1388 003e 7B68     		ldr	r3, [r7, #4]
 1389 0040 9A60     		str	r2, [r3, #8]
 711:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1390              		.loc 1 711 0
 1391 0042 00E0     		b	.L67
 1392              	.L73:
 712:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 713:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1393              		.loc 1 713 0
 1394 0044 00BF     		nop
 1395              	.L67:
 714:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 715:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1396              		.loc 1 715 0
 1397 0046 07F10C07 		add	r7, r7, #12
 1398 004a BD46     		mov	sp, r7
 1399 004c 80BC     		pop	{r7}
 1400 004e 7047     		bx	lr
 1401              		.cfi_endproc
 1402              	.LFE119:
 1404              		.section	.text.CAN_Receive,"ax",%progbits
 1405              		.align	2
 1406              		.global	CAN_Receive
 1407              		.thumb
 1408              		.thumb_func
 1410              	CAN_Receive:
 1411              	.LFB120:
 716:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 717:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 718:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 719:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 720:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 721:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 724:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 725:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 726:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 727:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 728:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 729:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 730:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 732:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 733:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 734:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 735:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 736:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 737:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 738:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 744:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 745:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1412              		.loc 1 746 0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 16
 1415              		@ frame_needed = 1, uses_anonymous_args = 0
 1416              		@ link register save eliminated.
 1417 0000 80B4     		push	{r7}
 1418              	.LCFI30:
 1419              		.cfi_def_cfa_offset 4
 1420              		.cfi_offset 7, -4
 1421 0002 85B0     		sub	sp, sp, #20
 1422              	.LCFI31:
 1423              		.cfi_def_cfa_offset 24
 1424 0004 00AF     		add	r7, sp, #0
 1425              	.LCFI32:
 1426              		.cfi_def_cfa_register 7
 1427 0006 F860     		str	r0, [r7, #12]
 1428 0008 0B46     		mov	r3, r1
 1429 000a 7A60     		str	r2, [r7, #4]
 1430 000c FB72     		strb	r3, [r7, #11]
 747:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 748:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 751:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1431              		.loc 1 751 0
 1432 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1433 0010 FA68     		ldr	r2, [r7, #12]
 1434 0012 03F11B03 		add	r3, r3, #27
 1435 0016 4FEA0313 		lsl	r3, r3, #4
 1436 001a D318     		adds	r3, r2, r3
 1437 001c 1B68     		ldr	r3, [r3, #0]
 1438 001e DBB2     		uxtb	r3, r3
 1439 0020 03F00403 		and	r3, r3, #4
 1440 0024 DAB2     		uxtb	r2, r3
 1441 0026 7B68     		ldr	r3, [r7, #4]
 1442 0028 1A72     		strb	r2, [r3, #8]
 752:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1443              		.loc 1 752 0
 1444 002a 7B68     		ldr	r3, [r7, #4]
 1445 002c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1446 002e 002B     		cmp	r3, #0
 1447 0030 0CD1     		bne	.L75
 753:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 754:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 1448              		.loc 1 754 0
 1449 0032 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1450 0034 FA68     		ldr	r2, [r7, #12]
 1451 0036 03F11B03 		add	r3, r3, #27
 1452 003a 4FEA0313 		lsl	r3, r3, #4
 1453 003e D318     		adds	r3, r2, r3
 1454 0040 1B68     		ldr	r3, [r3, #0]
 1455 0042 4FEA5352 		lsr	r2, r3, #21
 1456 0046 7B68     		ldr	r3, [r7, #4]
 1457 0048 1A60     		str	r2, [r3, #0]
 1458 004a 0BE0     		b	.L76
 1459              	.L75:
 755:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 756:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 757:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 758:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 1460              		.loc 1 758 0
 1461 004c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1462 004e FA68     		ldr	r2, [r7, #12]
 1463 0050 03F11B03 		add	r3, r3, #27
 1464 0054 4FEA0313 		lsl	r3, r3, #4
 1465 0058 D318     		adds	r3, r2, r3
 1466 005a 1B68     		ldr	r3, [r3, #0]
 1467 005c 4FEAD302 		lsr	r2, r3, #3
 1468 0060 7B68     		ldr	r3, [r7, #4]
 1469 0062 5A60     		str	r2, [r3, #4]
 1470              	.L76:
 759:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 760:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 761:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1471              		.loc 1 761 0
 1472 0064 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1473 0066 FA68     		ldr	r2, [r7, #12]
 1474 0068 03F11B03 		add	r3, r3, #27
 1475 006c 4FEA0313 		lsl	r3, r3, #4
 1476 0070 D318     		adds	r3, r2, r3
 1477 0072 1B68     		ldr	r3, [r3, #0]
 1478 0074 DBB2     		uxtb	r3, r3
 1479 0076 03F00203 		and	r3, r3, #2
 1480 007a DAB2     		uxtb	r2, r3
 1481 007c 7B68     		ldr	r3, [r7, #4]
 1482 007e 5A72     		strb	r2, [r3, #9]
 762:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 763:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 1483              		.loc 1 763 0
 1484 0080 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1485 0082 FA68     		ldr	r2, [r7, #12]
 1486 0084 03F11B03 		add	r3, r3, #27
 1487 0088 4FEA0313 		lsl	r3, r3, #4
 1488 008c D318     		adds	r3, r2, r3
 1489 008e 5B68     		ldr	r3, [r3, #4]
 1490 0090 DBB2     		uxtb	r3, r3
 1491 0092 03F00F03 		and	r3, r3, #15
 1492 0096 DAB2     		uxtb	r2, r3
 1493 0098 7B68     		ldr	r3, [r7, #4]
 1494 009a 9A72     		strb	r2, [r3, #10]
 764:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 765:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 1495              		.loc 1 765 0
 1496 009c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1497 009e FA68     		ldr	r2, [r7, #12]
 1498 00a0 03F11B03 		add	r3, r3, #27
 1499 00a4 4FEA0313 		lsl	r3, r3, #4
 1500 00a8 D318     		adds	r3, r2, r3
 1501 00aa 5B68     		ldr	r3, [r3, #4]
 1502 00ac 4FEA1323 		lsr	r3, r3, #8
 1503 00b0 DAB2     		uxtb	r2, r3
 1504 00b2 7B68     		ldr	r3, [r7, #4]
 1505 00b4 DA74     		strb	r2, [r3, #19]
 766:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 767:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 1506              		.loc 1 767 0
 1507 00b6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1508 00b8 FA68     		ldr	r2, [r7, #12]
 1509 00ba 4FEA0313 		lsl	r3, r3, #4
 1510 00be D318     		adds	r3, r2, r3
 1511 00c0 03F5DC73 		add	r3, r3, #440
 1512 00c4 1B68     		ldr	r3, [r3, #0]
 1513 00c6 DAB2     		uxtb	r2, r3
 1514 00c8 7B68     		ldr	r3, [r7, #4]
 1515 00ca DA72     		strb	r2, [r3, #11]
 768:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1516              		.loc 1 768 0
 1517 00cc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1518 00ce FA68     		ldr	r2, [r7, #12]
 1519 00d0 4FEA0313 		lsl	r3, r3, #4
 1520 00d4 D318     		adds	r3, r2, r3
 1521 00d6 03F5DC73 		add	r3, r3, #440
 1522 00da 1B68     		ldr	r3, [r3, #0]
 1523 00dc 4FEA1323 		lsr	r3, r3, #8
 1524 00e0 DAB2     		uxtb	r2, r3
 1525 00e2 7B68     		ldr	r3, [r7, #4]
 1526 00e4 1A73     		strb	r2, [r3, #12]
 769:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1527              		.loc 1 769 0
 1528 00e6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1529 00e8 FA68     		ldr	r2, [r7, #12]
 1530 00ea 4FEA0313 		lsl	r3, r3, #4
 1531 00ee D318     		adds	r3, r2, r3
 1532 00f0 03F5DC73 		add	r3, r3, #440
 1533 00f4 1B68     		ldr	r3, [r3, #0]
 1534 00f6 4FEA1343 		lsr	r3, r3, #16
 1535 00fa DAB2     		uxtb	r2, r3
 1536 00fc 7B68     		ldr	r3, [r7, #4]
 1537 00fe 5A73     		strb	r2, [r3, #13]
 770:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1538              		.loc 1 770 0
 1539 0100 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1540 0102 FA68     		ldr	r2, [r7, #12]
 1541 0104 4FEA0313 		lsl	r3, r3, #4
 1542 0108 D318     		adds	r3, r2, r3
 1543 010a 03F5DC73 		add	r3, r3, #440
 1544 010e 1B68     		ldr	r3, [r3, #0]
 1545 0110 4FEA1363 		lsr	r3, r3, #24
 1546 0114 DAB2     		uxtb	r2, r3
 1547 0116 7B68     		ldr	r3, [r7, #4]
 1548 0118 9A73     		strb	r2, [r3, #14]
 771:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1549              		.loc 1 771 0
 1550 011a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1551 011c FA68     		ldr	r2, [r7, #12]
 1552 011e 4FEA0313 		lsl	r3, r3, #4
 1553 0122 D318     		adds	r3, r2, r3
 1554 0124 03F5DC73 		add	r3, r3, #440
 1555 0128 5B68     		ldr	r3, [r3, #4]
 1556 012a DAB2     		uxtb	r2, r3
 1557 012c 7B68     		ldr	r3, [r7, #4]
 1558 012e DA73     		strb	r2, [r3, #15]
 772:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1559              		.loc 1 772 0
 1560 0130 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1561 0132 FA68     		ldr	r2, [r7, #12]
 1562 0134 4FEA0313 		lsl	r3, r3, #4
 1563 0138 D318     		adds	r3, r2, r3
 1564 013a 03F5DC73 		add	r3, r3, #440
 1565 013e 5B68     		ldr	r3, [r3, #4]
 1566 0140 4FEA1323 		lsr	r3, r3, #8
 1567 0144 DAB2     		uxtb	r2, r3
 1568 0146 7B68     		ldr	r3, [r7, #4]
 1569 0148 1A74     		strb	r2, [r3, #16]
 773:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1570              		.loc 1 773 0
 1571 014a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1572 014c FA68     		ldr	r2, [r7, #12]
 1573 014e 4FEA0313 		lsl	r3, r3, #4
 1574 0152 D318     		adds	r3, r2, r3
 1575 0154 03F5DC73 		add	r3, r3, #440
 1576 0158 5B68     		ldr	r3, [r3, #4]
 1577 015a 4FEA1343 		lsr	r3, r3, #16
 1578 015e DAB2     		uxtb	r2, r3
 1579 0160 7B68     		ldr	r3, [r7, #4]
 1580 0162 5A74     		strb	r2, [r3, #17]
 774:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1581              		.loc 1 774 0
 1582 0164 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1583 0166 FA68     		ldr	r2, [r7, #12]
 1584 0168 4FEA0313 		lsl	r3, r3, #4
 1585 016c D318     		adds	r3, r2, r3
 1586 016e 03F5DC73 		add	r3, r3, #440
 1587 0172 5B68     		ldr	r3, [r3, #4]
 1588 0174 4FEA1363 		lsr	r3, r3, #24
 1589 0178 DAB2     		uxtb	r2, r3
 1590 017a 7B68     		ldr	r3, [r7, #4]
 1591 017c 9A74     		strb	r2, [r3, #18]
 775:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 776:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 777:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1592              		.loc 1 777 0
 1593 017e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1594 0180 002B     		cmp	r3, #0
 1595 0182 06D1     		bne	.L77
 778:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 779:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1596              		.loc 1 779 0
 1597 0184 FB68     		ldr	r3, [r7, #12]
 1598 0186 DB68     		ldr	r3, [r3, #12]
 1599 0188 43F02002 		orr	r2, r3, #32
 1600 018c FB68     		ldr	r3, [r7, #12]
 1601 018e DA60     		str	r2, [r3, #12]
 1602 0190 05E0     		b	.L74
 1603              	.L77:
 780:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 781:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 782:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1604              		.loc 1 784 0
 1605 0192 FB68     		ldr	r3, [r7, #12]
 1606 0194 1B69     		ldr	r3, [r3, #16]
 1607 0196 43F02002 		orr	r2, r3, #32
 1608 019a FB68     		ldr	r3, [r7, #12]
 1609 019c 1A61     		str	r2, [r3, #16]
 1610              	.L74:
 785:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1611              		.loc 1 786 0
 1612 019e 07F11407 		add	r7, r7, #20
 1613 01a2 BD46     		mov	sp, r7
 1614 01a4 80BC     		pop	{r7}
 1615 01a6 7047     		bx	lr
 1616              		.cfi_endproc
 1617              	.LFE120:
 1619              		.section	.text.CAN_FIFORelease,"ax",%progbits
 1620              		.align	2
 1621              		.global	CAN_FIFORelease
 1622              		.thumb
 1623              		.thumb_func
 1625              	CAN_FIFORelease:
 1626              	.LFB121:
 787:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 788:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 789:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 793:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 794:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1627              		.loc 1 795 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 8
 1630              		@ frame_needed = 1, uses_anonymous_args = 0
 1631              		@ link register save eliminated.
 1632 0000 80B4     		push	{r7}
 1633              	.LCFI33:
 1634              		.cfi_def_cfa_offset 4
 1635              		.cfi_offset 7, -4
 1636 0002 83B0     		sub	sp, sp, #12
 1637              	.LCFI34:
 1638              		.cfi_def_cfa_offset 16
 1639 0004 00AF     		add	r7, sp, #0
 1640              	.LCFI35:
 1641              		.cfi_def_cfa_register 7
 1642 0006 7860     		str	r0, [r7, #4]
 1643 0008 0B46     		mov	r3, r1
 1644 000a FB70     		strb	r3, [r7, #3]
 796:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 797:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 800:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1645              		.loc 1 800 0
 1646 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1647 000e 002B     		cmp	r3, #0
 1648 0010 06D1     		bne	.L80
 801:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 802:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1649              		.loc 1 802 0
 1650 0012 7B68     		ldr	r3, [r7, #4]
 1651 0014 DB68     		ldr	r3, [r3, #12]
 1652 0016 43F02002 		orr	r2, r3, #32
 1653 001a 7B68     		ldr	r3, [r7, #4]
 1654 001c DA60     		str	r2, [r3, #12]
 1655 001e 05E0     		b	.L79
 1656              	.L80:
 803:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 804:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 805:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1657              		.loc 1 807 0
 1658 0020 7B68     		ldr	r3, [r7, #4]
 1659 0022 1B69     		ldr	r3, [r3, #16]
 1660 0024 43F02002 		orr	r2, r3, #32
 1661 0028 7B68     		ldr	r3, [r7, #4]
 1662 002a 1A61     		str	r2, [r3, #16]
 1663              	.L79:
 808:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1664              		.loc 1 809 0
 1665 002c 07F10C07 		add	r7, r7, #12
 1666 0030 BD46     		mov	sp, r7
 1667 0032 80BC     		pop	{r7}
 1668 0034 7047     		bx	lr
 1669              		.cfi_endproc
 1670              	.LFE121:
 1672 0036 00BF     		.section	.text.CAN_MessagePending,"ax",%progbits
 1673              		.align	2
 1674              		.global	CAN_MessagePending
 1675              		.thumb
 1676              		.thumb_func
 1678              	CAN_MessagePending:
 1679              	.LFB122:
 810:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 811:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 812:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 817:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1680              		.loc 1 818 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 16
 1683              		@ frame_needed = 1, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
 1685 0000 80B4     		push	{r7}
 1686              	.LCFI36:
 1687              		.cfi_def_cfa_offset 4
 1688              		.cfi_offset 7, -4
 1689 0002 85B0     		sub	sp, sp, #20
 1690              	.LCFI37:
 1691              		.cfi_def_cfa_offset 24
 1692 0004 00AF     		add	r7, sp, #0
 1693              	.LCFI38:
 1694              		.cfi_def_cfa_register 7
 1695 0006 7860     		str	r0, [r7, #4]
 1696 0008 0B46     		mov	r3, r1
 1697 000a FB70     		strb	r3, [r7, #3]
 819:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 1698              		.loc 1 819 0
 1699 000c 4FF00003 		mov	r3, #0
 1700 0010 FB73     		strb	r3, [r7, #15]
 820:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 821:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1701              		.loc 1 823 0
 1702 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1703 0014 002B     		cmp	r3, #0
 1704 0016 06D1     		bne	.L83
 824:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 825:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 1705              		.loc 1 825 0
 1706 0018 7B68     		ldr	r3, [r7, #4]
 1707 001a DB68     		ldr	r3, [r3, #12]
 1708 001c DBB2     		uxtb	r3, r3
 1709 001e 03F00303 		and	r3, r3, #3
 1710 0022 FB73     		strb	r3, [r7, #15]
 1711 0024 0CE0     		b	.L84
 1712              	.L83:
 826:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 827:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 1713              		.loc 1 827 0
 1714 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1715 0028 012B     		cmp	r3, #1
 1716 002a 06D1     		bne	.L85
 828:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 829:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 1717              		.loc 1 829 0
 1718 002c 7B68     		ldr	r3, [r7, #4]
 1719 002e 1B69     		ldr	r3, [r3, #16]
 1720 0030 DBB2     		uxtb	r3, r3
 1721 0032 03F00303 		and	r3, r3, #3
 1722 0036 FB73     		strb	r3, [r7, #15]
 1723 0038 02E0     		b	.L84
 1724              	.L85:
 830:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 831:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 832:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 833:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 1725              		.loc 1 833 0
 1726 003a 4FF00003 		mov	r3, #0
 1727 003e FB73     		strb	r3, [r7, #15]
 1728              	.L84:
 834:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 835:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 1729              		.loc 1 835 0
 1730 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1731              		.loc 1 836 0
 1732 0042 1846     		mov	r0, r3
 1733 0044 07F11407 		add	r7, r7, #20
 1734 0048 BD46     		mov	sp, r7
 1735 004a 80BC     		pop	{r7}
 1736 004c 7047     		bx	lr
 1737              		.cfi_endproc
 1738              	.LFE122:
 1740 004e 00BF     		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1741              		.align	2
 1742              		.global	CAN_OperatingModeRequest
 1743              		.thumb
 1744              		.thumb_func
 1746              	CAN_OperatingModeRequest:
 1747              	.LFB123:
 837:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 838:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 839:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 840:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 841:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 842:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 845:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 846:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 847:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 848:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 849:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 851:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 852:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 853:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 854:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 855:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 856:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 857:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 858:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 859:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 860:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 864:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 867:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1748              		.loc 1 868 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 16
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752              		@ link register save eliminated.
 1753 0000 80B4     		push	{r7}
 1754              	.LCFI39:
 1755              		.cfi_def_cfa_offset 4
 1756              		.cfi_offset 7, -4
 1757 0002 85B0     		sub	sp, sp, #20
 1758              	.LCFI40:
 1759              		.cfi_def_cfa_offset 24
 1760 0004 00AF     		add	r7, sp, #0
 1761              	.LCFI41:
 1762              		.cfi_def_cfa_register 7
 1763 0006 7860     		str	r0, [r7, #4]
 1764 0008 0B46     		mov	r3, r1
 1765 000a FB70     		strb	r3, [r7, #3]
 869:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 1766              		.loc 1 869 0
 1767 000c 4FF00003 		mov	r3, #0
 1768 0010 FB73     		strb	r3, [r7, #15]
 870:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 871:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 1769              		.loc 1 872 0
 1770 0012 4FF6FF73 		movw	r3, #65535
 1771 0016 BB60     		str	r3, [r7, #8]
 873:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 874:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 875:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 878:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 1772              		.loc 1 878 0
 1773 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1774 001a 002B     		cmp	r3, #0
 1775 001c 23D1     		bne	.L87
 879:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 880:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 881:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 1776              		.loc 1 881 0
 1777 001e 7B68     		ldr	r3, [r7, #4]
 1778 0020 1B68     		ldr	r3, [r3, #0]
 1779 0022 23F00303 		bic	r3, r3, #3
 1780 0026 43F00102 		orr	r2, r3, #1
 1781 002a 7B68     		ldr	r3, [r7, #4]
 1782 002c 1A60     		str	r2, [r3, #0]
 882:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1783              		.loc 1 884 0
 1784 002e 03E0     		b	.L88
 1785              	.L90:
 885:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 886:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1786              		.loc 1 886 0
 1787 0030 BB68     		ldr	r3, [r7, #8]
 1788 0032 03F1FF33 		add	r3, r3, #-1
 1789 0036 BB60     		str	r3, [r7, #8]
 1790              	.L88:
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1791              		.loc 1 884 0 discriminator 1
 1792 0038 7B68     		ldr	r3, [r7, #4]
 1793 003a 5B68     		ldr	r3, [r3, #4]
 1794 003c 03F00303 		and	r3, r3, #3
 1795 0040 012B     		cmp	r3, #1
 1796 0042 02D0     		beq	.L89
 884:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1797              		.loc 1 884 0 is_stmt 0 discriminator 2
 1798 0044 BB68     		ldr	r3, [r7, #8]
 1799 0046 002B     		cmp	r3, #0
 1800 0048 F2D1     		bne	.L90
 1801              	.L89:
 887:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 888:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 1802              		.loc 1 888 0 is_stmt 1
 1803 004a 7B68     		ldr	r3, [r7, #4]
 1804 004c 5B68     		ldr	r3, [r3, #4]
 1805 004e 03F00303 		and	r3, r3, #3
 1806 0052 012B     		cmp	r3, #1
 1807 0054 03D0     		beq	.L91
 889:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 890:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1808              		.loc 1 890 0
 1809 0056 4FF00003 		mov	r3, #0
 1810 005a FB73     		strb	r3, [r7, #15]
 1811 005c 52E0     		b	.L92
 1812              	.L91:
 891:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 892:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 893:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 894:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1813              		.loc 1 894 0
 1814 005e 4FF00103 		mov	r3, #1
 1815 0062 FB73     		strb	r3, [r7, #15]
 1816 0064 4EE0     		b	.L92
 1817              	.L87:
 895:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 896:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 897:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 1818              		.loc 1 897 0
 1819 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1820 0068 012B     		cmp	r3, #1
 1821 006a 21D1     		bne	.L93
 898:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 899:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 1822              		.loc 1 900 0
 1823 006c 7B68     		ldr	r3, [r7, #4]
 1824 006e 1B68     		ldr	r3, [r3, #0]
 1825 0070 23F00302 		bic	r2, r3, #3
 1826 0074 7B68     		ldr	r3, [r7, #4]
 1827 0076 1A60     		str	r2, [r3, #0]
 901:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 902:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1828              		.loc 1 903 0
 1829 0078 03E0     		b	.L94
 1830              	.L96:
 904:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 905:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1831              		.loc 1 905 0
 1832 007a BB68     		ldr	r3, [r7, #8]
 1833 007c 03F1FF33 		add	r3, r3, #-1
 1834 0080 BB60     		str	r3, [r7, #8]
 1835              	.L94:
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1836              		.loc 1 903 0 discriminator 1
 1837 0082 7B68     		ldr	r3, [r7, #4]
 1838 0084 5B68     		ldr	r3, [r3, #4]
 1839 0086 03F00303 		and	r3, r3, #3
 1840 008a 002B     		cmp	r3, #0
 1841 008c 02D0     		beq	.L95
 903:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1842              		.loc 1 903 0 is_stmt 0 discriminator 2
 1843 008e BB68     		ldr	r3, [r7, #8]
 1844 0090 002B     		cmp	r3, #0
 1845 0092 F2D1     		bne	.L96
 1846              	.L95:
 906:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 907:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 1847              		.loc 1 907 0 is_stmt 1
 1848 0094 7B68     		ldr	r3, [r7, #4]
 1849 0096 5B68     		ldr	r3, [r3, #4]
 1850 0098 03F00303 		and	r3, r3, #3
 1851 009c 002B     		cmp	r3, #0
 1852 009e 03D0     		beq	.L97
 908:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 909:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1853              		.loc 1 909 0
 1854 00a0 4FF00003 		mov	r3, #0
 1855 00a4 FB73     		strb	r3, [r7, #15]
 1856 00a6 2DE0     		b	.L92
 1857              	.L97:
 910:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 911:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 912:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 913:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1858              		.loc 1 913 0
 1859 00a8 4FF00103 		mov	r3, #1
 1860 00ac FB73     		strb	r3, [r7, #15]
 1861 00ae 29E0     		b	.L92
 1862              	.L93:
 914:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 915:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 916:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 1863              		.loc 1 916 0
 1864 00b0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1865 00b2 022B     		cmp	r3, #2
 1866 00b4 23D1     		bne	.L98
 917:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 918:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 919:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1867              		.loc 1 919 0
 1868 00b6 7B68     		ldr	r3, [r7, #4]
 1869 00b8 1B68     		ldr	r3, [r3, #0]
 1870 00ba 23F00303 		bic	r3, r3, #3
 1871 00be 43F00202 		orr	r2, r3, #2
 1872 00c2 7B68     		ldr	r3, [r7, #4]
 1873 00c4 1A60     		str	r2, [r3, #0]
 920:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 921:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1874              		.loc 1 922 0
 1875 00c6 03E0     		b	.L99
 1876              	.L101:
 923:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 924:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1877              		.loc 1 924 0
 1878 00c8 BB68     		ldr	r3, [r7, #8]
 1879 00ca 03F1FF33 		add	r3, r3, #-1
 1880 00ce BB60     		str	r3, [r7, #8]
 1881              	.L99:
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1882              		.loc 1 922 0 discriminator 1
 1883 00d0 7B68     		ldr	r3, [r7, #4]
 1884 00d2 5B68     		ldr	r3, [r3, #4]
 1885 00d4 03F00303 		and	r3, r3, #3
 1886 00d8 022B     		cmp	r3, #2
 1887 00da 02D0     		beq	.L100
 922:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1888              		.loc 1 922 0 is_stmt 0 discriminator 2
 1889 00dc BB68     		ldr	r3, [r7, #8]
 1890 00de 002B     		cmp	r3, #0
 1891 00e0 F2D1     		bne	.L101
 1892              	.L100:
 925:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 926:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 1893              		.loc 1 926 0 is_stmt 1
 1894 00e2 7B68     		ldr	r3, [r7, #4]
 1895 00e4 5B68     		ldr	r3, [r3, #4]
 1896 00e6 03F00303 		and	r3, r3, #3
 1897 00ea 022B     		cmp	r3, #2
 1898 00ec 03D0     		beq	.L102
 927:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 928:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1899              		.loc 1 928 0
 1900 00ee 4FF00003 		mov	r3, #0
 1901 00f2 FB73     		strb	r3, [r7, #15]
 1902 00f4 06E0     		b	.L92
 1903              	.L102:
 929:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 930:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 931:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 932:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1904              		.loc 1 932 0
 1905 00f6 4FF00103 		mov	r3, #1
 1906 00fa FB73     		strb	r3, [r7, #15]
 1907 00fc 02E0     		b	.L92
 1908              	.L98:
 933:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 934:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 935:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 936:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 937:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 1909              		.loc 1 937 0
 1910 00fe 4FF00003 		mov	r3, #0
 1911 0102 FB73     		strb	r3, [r7, #15]
 1912              	.L92:
 938:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 939:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 940:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 1913              		.loc 1 940 0
 1914 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1915              		.loc 1 941 0
 1916 0106 1846     		mov	r0, r3
 1917 0108 07F11407 		add	r7, r7, #20
 1918 010c BD46     		mov	sp, r7
 1919 010e 80BC     		pop	{r7}
 1920 0110 7047     		bx	lr
 1921              		.cfi_endproc
 1922              	.LFE123:
 1924 0112 00BF     		.section	.text.CAN_Sleep,"ax",%progbits
 1925              		.align	2
 1926              		.global	CAN_Sleep
 1927              		.thumb
 1928              		.thumb_func
 1930              	CAN_Sleep:
 1931              	.LFB124:
 942:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 943:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 944:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 948:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1932              		.loc 1 949 0
 1933              		.cfi_startproc
 1934              		@ args = 0, pretend = 0, frame = 16
 1935              		@ frame_needed = 1, uses_anonymous_args = 0
 1936              		@ link register save eliminated.
 1937 0000 80B4     		push	{r7}
 1938              	.LCFI42:
 1939              		.cfi_def_cfa_offset 4
 1940              		.cfi_offset 7, -4
 1941 0002 85B0     		sub	sp, sp, #20
 1942              	.LCFI43:
 1943              		.cfi_def_cfa_offset 24
 1944 0004 00AF     		add	r7, sp, #0
 1945              	.LCFI44:
 1946              		.cfi_def_cfa_register 7
 1947 0006 7860     		str	r0, [r7, #4]
 950:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 1948              		.loc 1 950 0
 1949 0008 4FF00003 		mov	r3, #0
 1950 000c FB73     		strb	r3, [r7, #15]
 951:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 952:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 953:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 955:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 956:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1951              		.loc 1 956 0
 1952 000e 7B68     		ldr	r3, [r7, #4]
 1953 0010 1B68     		ldr	r3, [r3, #0]
 1954 0012 23F00303 		bic	r3, r3, #3
 1955 0016 43F00202 		orr	r2, r3, #2
 1956 001a 7B68     		ldr	r3, [r7, #4]
 1957 001c 1A60     		str	r2, [r3, #0]
 957:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 958:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 959:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 1958              		.loc 1 959 0
 1959 001e 7B68     		ldr	r3, [r7, #4]
 1960 0020 5B68     		ldr	r3, [r3, #4]
 1961 0022 03F00303 		and	r3, r3, #3
 1962 0026 022B     		cmp	r3, #2
 1963 0028 02D1     		bne	.L104
 960:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 961:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 962:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 1964              		.loc 1 962 0
 1965 002a 4FF00103 		mov	r3, #1
 1966 002e FB73     		strb	r3, [r7, #15]
 1967              	.L104:
 963:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 964:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 965:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 1968              		.loc 1 965 0
 1969 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1970              		.loc 1 966 0
 1971 0032 1846     		mov	r0, r3
 1972 0034 07F11407 		add	r7, r7, #20
 1973 0038 BD46     		mov	sp, r7
 1974 003a 80BC     		pop	{r7}
 1975 003c 7047     		bx	lr
 1976              		.cfi_endproc
 1977              	.LFE124:
 1979 003e 00BF     		.section	.text.CAN_WakeUp,"ax",%progbits
 1980              		.align	2
 1981              		.global	CAN_WakeUp
 1982              		.thumb
 1983              		.thumb_func
 1985              	CAN_WakeUp:
 1986              	.LFB125:
 967:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 968:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 969:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 973:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1987              		.loc 1 974 0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 16
 1990              		@ frame_needed = 1, uses_anonymous_args = 0
 1991              		@ link register save eliminated.
 1992 0000 80B4     		push	{r7}
 1993              	.LCFI45:
 1994              		.cfi_def_cfa_offset 4
 1995              		.cfi_offset 7, -4
 1996 0002 85B0     		sub	sp, sp, #20
 1997              	.LCFI46:
 1998              		.cfi_def_cfa_offset 24
 1999 0004 00AF     		add	r7, sp, #0
 2000              	.LCFI47:
 2001              		.cfi_def_cfa_register 7
 2002 0006 7860     		str	r0, [r7, #4]
 975:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 2003              		.loc 1 975 0
 2004 0008 4FF6FF73 		movw	r3, #65535
 2005 000c FB60     		str	r3, [r7, #12]
 976:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 2006              		.loc 1 976 0
 2007 000e 4FF00003 		mov	r3, #0
 2008 0012 FB72     		strb	r3, [r7, #11]
 977:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 978:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 979:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 981:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 982:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 2009              		.loc 1 982 0
 2010 0014 7B68     		ldr	r3, [r7, #4]
 2011 0016 1B68     		ldr	r3, [r3, #0]
 2012 0018 23F00202 		bic	r2, r3, #2
 2013 001c 7B68     		ldr	r3, [r7, #4]
 2014 001e 1A60     		str	r2, [r3, #0]
 983:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 984:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2015              		.loc 1 985 0
 2016 0020 03E0     		b	.L106
 2017              	.L108:
 986:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 987:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 2018              		.loc 1 987 0
 2019 0022 FB68     		ldr	r3, [r7, #12]
 2020 0024 03F1FF33 		add	r3, r3, #-1
 2021 0028 FB60     		str	r3, [r7, #12]
 2022              	.L106:
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2023              		.loc 1 985 0 discriminator 1
 2024 002a 7B68     		ldr	r3, [r7, #4]
 2025 002c 5B68     		ldr	r3, [r3, #4]
 2026 002e 03F00203 		and	r3, r3, #2
 2027 0032 002B     		cmp	r3, #0
 2028 0034 02D0     		beq	.L107
 985:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2029              		.loc 1 985 0 is_stmt 0 discriminator 2
 2030 0036 FB68     		ldr	r3, [r7, #12]
 2031 0038 002B     		cmp	r3, #0
 2032 003a F2D1     		bne	.L108
 2033              	.L107:
 988:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 989:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 2034              		.loc 1 989 0 is_stmt 1
 2035 003c 7B68     		ldr	r3, [r7, #4]
 2036 003e 5B68     		ldr	r3, [r3, #4]
 2037 0040 03F00203 		and	r3, r3, #2
 2038 0044 002B     		cmp	r3, #0
 2039 0046 02D1     		bne	.L109
 990:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 991:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 992:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 2040              		.loc 1 992 0
 2041 0048 4FF00103 		mov	r3, #1
 2042 004c FB72     		strb	r3, [r7, #11]
 2043              	.L109:
 993:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
 995:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 2044              		.loc 1 995 0
 2045 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 996:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2046              		.loc 1 996 0
 2047 0050 1846     		mov	r0, r3
 2048 0052 07F11407 		add	r7, r7, #20
 2049 0056 BD46     		mov	sp, r7
 2050 0058 80BC     		pop	{r7}
 2051 005a 7047     		bx	lr
 2052              		.cfi_endproc
 2053              	.LFE125:
 2055              		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 2056              		.align	2
 2057              		.global	CAN_GetLastErrorCode
 2058              		.thumb
 2059              		.thumb_func
 2061              	CAN_GetLastErrorCode:
 2062              	.LFB126:
 997:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 998:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 999:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1000:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1001:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1002:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1005:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1006:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1007:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1008:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1009:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1010:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1014:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1018:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1019:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1020:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1021:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1022:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1023:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1026:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1035:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2063              		.loc 1 1036 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 16
 2066              		@ frame_needed = 1, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
 2068 0000 80B4     		push	{r7}
 2069              	.LCFI48:
 2070              		.cfi_def_cfa_offset 4
 2071              		.cfi_offset 7, -4
 2072 0002 85B0     		sub	sp, sp, #20
 2073              	.LCFI49:
 2074              		.cfi_def_cfa_offset 24
 2075 0004 00AF     		add	r7, sp, #0
 2076              	.LCFI50:
 2077              		.cfi_def_cfa_register 7
 2078 0006 7860     		str	r0, [r7, #4]
1037:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
 2079              		.loc 1 1037 0
 2080 0008 4FF00003 		mov	r3, #0
 2081 000c FB73     		strb	r3, [r7, #15]
1038:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1039:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1040:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1042:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1043:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 2082              		.loc 1 1043 0
 2083 000e 7B68     		ldr	r3, [r7, #4]
 2084 0010 9B69     		ldr	r3, [r3, #24]
 2085 0012 DBB2     		uxtb	r3, r3
 2086 0014 03F07003 		and	r3, r3, #112
 2087 0018 FB73     		strb	r3, [r7, #15]
1044:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1046:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
 2088              		.loc 1 1046 0
 2089 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1047:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2090              		.loc 1 1047 0
 2091 001c 1846     		mov	r0, r3
 2092 001e 07F11407 		add	r7, r7, #20
 2093 0022 BD46     		mov	sp, r7
 2094 0024 80BC     		pop	{r7}
 2095 0026 7047     		bx	lr
 2096              		.cfi_endproc
 2097              	.LFE126:
 2099              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 2100              		.align	2
 2101              		.global	CAN_GetReceiveErrorCounter
 2102              		.thumb
 2103              		.thumb_func
 2105              	CAN_GetReceiveErrorCounter:
 2106              	.LFB127:
1048:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1049:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1050:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1057:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1060:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2107              		.loc 1 1061 0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 16
 2110              		@ frame_needed = 1, uses_anonymous_args = 0
 2111              		@ link register save eliminated.
 2112 0000 80B4     		push	{r7}
 2113              	.LCFI51:
 2114              		.cfi_def_cfa_offset 4
 2115              		.cfi_offset 7, -4
 2116 0002 85B0     		sub	sp, sp, #20
 2117              	.LCFI52:
 2118              		.cfi_def_cfa_offset 24
 2119 0004 00AF     		add	r7, sp, #0
 2120              	.LCFI53:
 2121              		.cfi_def_cfa_register 7
 2122 0006 7860     		str	r0, [r7, #4]
1062:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2123              		.loc 1 1062 0
 2124 0008 4FF00003 		mov	r3, #0
 2125 000c FB73     		strb	r3, [r7, #15]
1063:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1064:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1065:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1067:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1068:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 2126              		.loc 1 1068 0
 2127 000e 7B68     		ldr	r3, [r7, #4]
 2128 0010 9B69     		ldr	r3, [r3, #24]
 2129 0012 4FEA1363 		lsr	r3, r3, #24
 2130 0016 FB73     		strb	r3, [r7, #15]
1069:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1071:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2131              		.loc 1 1071 0
 2132 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1072:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2133              		.loc 1 1072 0
 2134 001a 1846     		mov	r0, r3
 2135 001c 07F11407 		add	r7, r7, #20
 2136 0020 BD46     		mov	sp, r7
 2137 0022 80BC     		pop	{r7}
 2138 0024 7047     		bx	lr
 2139              		.cfi_endproc
 2140              	.LFE127:
 2142 0026 00BF     		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 2143              		.align	2
 2144              		.global	CAN_GetLSBTransmitErrorCounter
 2145              		.thumb
 2146              		.thumb_func
 2148              	CAN_GetLSBTransmitErrorCounter:
 2149              	.LFB128:
1073:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1074:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1075:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1076:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1080:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2150              		.loc 1 1081 0
 2151              		.cfi_startproc
 2152              		@ args = 0, pretend = 0, frame = 16
 2153              		@ frame_needed = 1, uses_anonymous_args = 0
 2154              		@ link register save eliminated.
 2155 0000 80B4     		push	{r7}
 2156              	.LCFI54:
 2157              		.cfi_def_cfa_offset 4
 2158              		.cfi_offset 7, -4
 2159 0002 85B0     		sub	sp, sp, #20
 2160              	.LCFI55:
 2161              		.cfi_def_cfa_offset 24
 2162 0004 00AF     		add	r7, sp, #0
 2163              	.LCFI56:
 2164              		.cfi_def_cfa_register 7
 2165 0006 7860     		str	r0, [r7, #4]
1082:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2166              		.loc 1 1082 0
 2167 0008 4FF00003 		mov	r3, #0
 2168 000c FB73     		strb	r3, [r7, #15]
1083:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1084:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1085:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1087:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 2169              		.loc 1 1088 0
 2170 000e 7B68     		ldr	r3, [r7, #4]
 2171 0010 9B69     		ldr	r3, [r3, #24]
 2172 0012 03F47F03 		and	r3, r3, #16711680
 2173 0016 4FEA1343 		lsr	r3, r3, #16
 2174 001a FB73     		strb	r3, [r7, #15]
1089:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2175              		.loc 1 1091 0
 2176 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1092:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2177              		.loc 1 1092 0
 2178 001e 1846     		mov	r0, r3
 2179 0020 07F11407 		add	r7, r7, #20
 2180 0024 BD46     		mov	sp, r7
 2181 0026 80BC     		pop	{r7}
 2182 0028 7047     		bx	lr
 2183              		.cfi_endproc
 2184              	.LFE128:
 2186 002a 00BF     		.section	.text.CAN_ITConfig,"ax",%progbits
 2187              		.align	2
 2188              		.global	CAN_ITConfig
 2189              		.thumb
 2190              		.thumb_func
 2192              	CAN_ITConfig:
 2193              	.LFB129:
1093:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1094:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1095:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1096:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1097:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1100:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1101:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1102:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1103:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1104:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1105:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1108:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1111:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1112:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1113:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1116:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1117:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1118:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1119:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1122:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1123:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1124:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1125:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1126:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1127:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1129:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1130:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1131:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1133:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1135:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1136:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1137:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1138:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1140:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1141:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1142:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1143:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1144:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1148:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1151:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1152:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1153:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1157:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1158:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1162:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1164:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1168:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1169:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1171:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1173:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1174:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1175:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1176:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1178:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1179:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1180:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1184:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1185:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1186:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1187:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1190:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1192:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1193:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1194:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1197:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1198:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1199:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1202:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1203:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1204:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1205:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1206:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1210:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1211:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1215:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1216:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1217:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1219:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1222:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1224:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1227:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1229:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1232:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1233:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1236:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1237:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1238:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1241:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1242:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1243:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1244:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1245:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1248:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1252:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1253:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1261:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1262:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1263:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1264:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1265:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1269:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1286:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1287:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2194              		.loc 1 1288 0
 2195              		.cfi_startproc
 2196              		@ args = 0, pretend = 0, frame = 16
 2197              		@ frame_needed = 1, uses_anonymous_args = 0
 2198              		@ link register save eliminated.
 2199 0000 80B4     		push	{r7}
 2200              	.LCFI57:
 2201              		.cfi_def_cfa_offset 4
 2202              		.cfi_offset 7, -4
 2203 0002 85B0     		sub	sp, sp, #20
 2204              	.LCFI58:
 2205              		.cfi_def_cfa_offset 24
 2206 0004 00AF     		add	r7, sp, #0
 2207              	.LCFI59:
 2208              		.cfi_def_cfa_register 7
 2209 0006 F860     		str	r0, [r7, #12]
 2210 0008 B960     		str	r1, [r7, #8]
 2211 000a 1346     		mov	r3, r2
 2212 000c FB71     		strb	r3, [r7, #7]
1289:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1290:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1294:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 2213              		.loc 1 1294 0
 2214 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2215 0010 002B     		cmp	r3, #0
 2216 0012 07D0     		beq	.L114
1295:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1296:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1297:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 2217              		.loc 1 1297 0
 2218 0014 FB68     		ldr	r3, [r7, #12]
 2219 0016 5B69     		ldr	r3, [r3, #20]
 2220 0018 1A46     		mov	r2, r3
 2221 001a BB68     		ldr	r3, [r7, #8]
 2222 001c 1A43     		orrs	r2, r2, r3
 2223 001e FB68     		ldr	r3, [r7, #12]
 2224 0020 5A61     		str	r2, [r3, #20]
 2225 0022 08E0     		b	.L113
 2226              	.L114:
1298:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1299:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1300:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1301:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1302:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 2227              		.loc 1 1302 0
 2228 0024 FB68     		ldr	r3, [r7, #12]
 2229 0026 5B69     		ldr	r3, [r3, #20]
 2230 0028 1A46     		mov	r2, r3
 2231 002a BB68     		ldr	r3, [r7, #8]
 2232 002c 6FEA0303 		mvn	r3, r3
 2233 0030 1A40     		ands	r2, r2, r3
 2234 0032 FB68     		ldr	r3, [r7, #12]
 2235 0034 5A61     		str	r2, [r3, #20]
 2236              	.L113:
1303:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1304:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2237              		.loc 1 1304 0
 2238 0036 07F11407 		add	r7, r7, #20
 2239 003a BD46     		mov	sp, r7
 2240 003c 80BC     		pop	{r7}
 2241 003e 7047     		bx	lr
 2242              		.cfi_endproc
 2243              	.LFE129:
 2245              		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 2246              		.align	2
 2247              		.global	CAN_GetFlagStatus
 2248              		.thumb
 2249              		.thumb_func
 2251              	CAN_GetFlagStatus:
 2252              	.LFB130:
1305:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1306:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1310:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1327:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2253              		.loc 1 1328 0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 16
 2256              		@ frame_needed = 1, uses_anonymous_args = 0
 2257              		@ link register save eliminated.
 2258 0000 80B4     		push	{r7}
 2259              	.LCFI60:
 2260              		.cfi_def_cfa_offset 4
 2261              		.cfi_offset 7, -4
 2262 0002 85B0     		sub	sp, sp, #20
 2263              	.LCFI61:
 2264              		.cfi_def_cfa_offset 24
 2265 0004 00AF     		add	r7, sp, #0
 2266              	.LCFI62:
 2267              		.cfi_def_cfa_register 7
 2268 0006 7860     		str	r0, [r7, #4]
 2269 0008 3960     		str	r1, [r7, #0]
1329:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 2270              		.loc 1 1329 0
 2271 000a 4FF00003 		mov	r3, #0
 2272 000e FB73     		strb	r3, [r7, #15]
1330:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1331:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1332:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1335:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1336:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 2273              		.loc 1 1336 0
 2274 0010 3B68     		ldr	r3, [r7, #0]
 2275 0012 03F47003 		and	r3, r3, #15728640
 2276 0016 002B     		cmp	r3, #0
 2277 0018 12D0     		beq	.L117
1337:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1338:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1339:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2278              		.loc 1 1339 0
 2279 001a 7B68     		ldr	r3, [r7, #4]
 2280 001c 9B69     		ldr	r3, [r3, #24]
 2281 001e 1A46     		mov	r2, r3
 2282 0020 3B68     		ldr	r3, [r7, #0]
 2283 0022 1340     		ands	r3, r3, r2
 2284 0024 23F07F43 		bic	r3, r3, #-16777216
 2285 0028 23F47003 		bic	r3, r3, #15728640
 2286 002c 002B     		cmp	r3, #0
 2287 002e 03D0     		beq	.L118
1340:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1341:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1342:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2288              		.loc 1 1342 0
 2289 0030 4FF00103 		mov	r3, #1
 2290 0034 FB73     		strb	r3, [r7, #15]
 2291 0036 5DE0     		b	.L119
 2292              	.L118:
1343:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1344:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1345:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1346:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1347:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2293              		.loc 1 1347 0
 2294 0038 4FF00003 		mov	r3, #0
 2295 003c FB73     		strb	r3, [r7, #15]
 2296 003e 59E0     		b	.L119
 2297              	.L117:
1348:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1349:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1350:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 2298              		.loc 1 1350 0
 2299 0040 3B68     		ldr	r3, [r7, #0]
 2300 0042 03F08073 		and	r3, r3, #16777216
 2301 0046 002B     		cmp	r3, #0
 2302 0048 12D0     		beq	.L120
1351:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1352:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1353:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2303              		.loc 1 1353 0
 2304 004a 7B68     		ldr	r3, [r7, #4]
 2305 004c 5B68     		ldr	r3, [r3, #4]
 2306 004e 1A46     		mov	r2, r3
 2307 0050 3B68     		ldr	r3, [r7, #0]
 2308 0052 1340     		ands	r3, r3, r2
 2309 0054 23F07F43 		bic	r3, r3, #-16777216
 2310 0058 23F47003 		bic	r3, r3, #15728640
 2311 005c 002B     		cmp	r3, #0
 2312 005e 03D0     		beq	.L121
1354:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1355:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1356:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2313              		.loc 1 1356 0
 2314 0060 4FF00103 		mov	r3, #1
 2315 0064 FB73     		strb	r3, [r7, #15]
 2316 0066 45E0     		b	.L119
 2317              	.L121:
1357:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1358:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1359:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1360:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1361:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2318              		.loc 1 1361 0
 2319 0068 4FF00003 		mov	r3, #0
 2320 006c FB73     		strb	r3, [r7, #15]
 2321 006e 41E0     		b	.L119
 2322              	.L120:
1362:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1363:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1364:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 2323              		.loc 1 1364 0
 2324 0070 3B68     		ldr	r3, [r7, #0]
 2325 0072 03F00063 		and	r3, r3, #134217728
 2326 0076 002B     		cmp	r3, #0
 2327 0078 12D0     		beq	.L122
1365:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1366:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1367:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2328              		.loc 1 1367 0
 2329 007a 7B68     		ldr	r3, [r7, #4]
 2330 007c 9B68     		ldr	r3, [r3, #8]
 2331 007e 1A46     		mov	r2, r3
 2332 0080 3B68     		ldr	r3, [r7, #0]
 2333 0082 1340     		ands	r3, r3, r2
 2334 0084 23F07F43 		bic	r3, r3, #-16777216
 2335 0088 23F47003 		bic	r3, r3, #15728640
 2336 008c 002B     		cmp	r3, #0
 2337 008e 03D0     		beq	.L123
1368:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1369:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1370:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2338              		.loc 1 1370 0
 2339 0090 4FF00103 		mov	r3, #1
 2340 0094 FB73     		strb	r3, [r7, #15]
 2341 0096 2DE0     		b	.L119
 2342              	.L123:
1371:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1372:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1373:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1374:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1375:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2343              		.loc 1 1375 0
 2344 0098 4FF00003 		mov	r3, #0
 2345 009c FB73     		strb	r3, [r7, #15]
 2346 009e 29E0     		b	.L119
 2347              	.L122:
1376:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1377:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1378:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 2348              		.loc 1 1378 0
 2349 00a0 3B68     		ldr	r3, [r7, #0]
 2350 00a2 03F00073 		and	r3, r3, #33554432
 2351 00a6 002B     		cmp	r3, #0
 2352 00a8 12D0     		beq	.L124
1379:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1380:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1381:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2353              		.loc 1 1381 0
 2354 00aa 7B68     		ldr	r3, [r7, #4]
 2355 00ac DB68     		ldr	r3, [r3, #12]
 2356 00ae 1A46     		mov	r2, r3
 2357 00b0 3B68     		ldr	r3, [r7, #0]
 2358 00b2 1340     		ands	r3, r3, r2
 2359 00b4 23F07F43 		bic	r3, r3, #-16777216
 2360 00b8 23F47003 		bic	r3, r3, #15728640
 2361 00bc 002B     		cmp	r3, #0
 2362 00be 03D0     		beq	.L125
1382:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1383:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1384:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2363              		.loc 1 1384 0
 2364 00c0 4FF00103 		mov	r3, #1
 2365 00c4 FB73     		strb	r3, [r7, #15]
 2366 00c6 15E0     		b	.L119
 2367              	.L125:
1385:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1386:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1387:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1388:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1389:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2368              		.loc 1 1389 0
 2369 00c8 4FF00003 		mov	r3, #0
 2370 00cc FB73     		strb	r3, [r7, #15]
 2371 00ce 11E0     		b	.L119
 2372              	.L124:
1390:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1391:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1392:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1394:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1395:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2373              		.loc 1 1395 0
 2374 00d0 7B68     		ldr	r3, [r7, #4]
 2375 00d2 1B69     		ldr	r3, [r3, #16]
 2376 00d4 1A46     		mov	r2, r3
 2377 00d6 3B68     		ldr	r3, [r7, #0]
 2378 00d8 1340     		ands	r3, r3, r2
 2379 00da 23F07F43 		bic	r3, r3, #-16777216
 2380 00de 23F47003 		bic	r3, r3, #15728640
 2381 00e2 002B     		cmp	r3, #0
 2382 00e4 03D0     		beq	.L126
1396:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1397:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1398:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2383              		.loc 1 1398 0
 2384 00e6 4FF00103 		mov	r3, #1
 2385 00ea FB73     		strb	r3, [r7, #15]
 2386 00ec 02E0     		b	.L119
 2387              	.L126:
1399:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1400:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1401:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1402:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1403:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2388              		.loc 1 1403 0
 2389 00ee 4FF00003 		mov	r3, #0
 2390 00f2 FB73     		strb	r3, [r7, #15]
 2391              	.L119:
1404:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1405:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1406:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1407:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
 2392              		.loc 1 1407 0
 2393 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1408:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2394              		.loc 1 1408 0
 2395 00f6 1846     		mov	r0, r3
 2396 00f8 07F11407 		add	r7, r7, #20
 2397 00fc BD46     		mov	sp, r7
 2398 00fe 80BC     		pop	{r7}
 2399 0100 7047     		bx	lr
 2400              		.cfi_endproc
 2401              	.LFE130:
 2403 0102 00BF     		.section	.text.CAN_ClearFlag,"ax",%progbits
 2404              		.align	2
 2405              		.global	CAN_ClearFlag
 2406              		.thumb
 2407              		.thumb_func
 2409              	CAN_ClearFlag:
 2410              	.LFB131:
1409:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1410:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1411:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1415:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1426:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1427:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2411              		.loc 1 1428 0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 16
 2414              		@ frame_needed = 1, uses_anonymous_args = 0
 2415              		@ link register save eliminated.
 2416 0000 80B4     		push	{r7}
 2417              	.LCFI63:
 2418              		.cfi_def_cfa_offset 4
 2419              		.cfi_offset 7, -4
 2420 0002 85B0     		sub	sp, sp, #20
 2421              	.LCFI64:
 2422              		.cfi_def_cfa_offset 24
 2423 0004 00AF     		add	r7, sp, #0
 2424              	.LCFI65:
 2425              		.cfi_def_cfa_register 7
 2426 0006 7860     		str	r0, [r7, #4]
 2427 0008 3960     		str	r1, [r7, #0]
1429:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 2428              		.loc 1 1429 0
 2429 000a 4FF00003 		mov	r3, #0
 2430 000e FB60     		str	r3, [r7, #12]
1430:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1431:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1434:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 2431              		.loc 1 1434 0
 2432 0010 3A68     		ldr	r2, [r7, #0]
 2433 0012 4FF07003 		mov	r3, #112
 2434 0016 C3F2F003 		movt	r3, 12528
 2435 001a 9A42     		cmp	r2, r3
 2436 001c 04D1     		bne	.L128
1435:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1436:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1437:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 2437              		.loc 1 1437 0
 2438 001e 7B68     		ldr	r3, [r7, #4]
 2439 0020 4FF00002 		mov	r2, #0
 2440 0024 9A61     		str	r2, [r3, #24]
 2441 0026 23E0     		b	.L127
 2442              	.L128:
1438:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1439:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1441:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 2443              		.loc 1 1441 0
 2444 0028 3B68     		ldr	r3, [r7, #0]
 2445 002a 23F07F43 		bic	r3, r3, #-16777216
 2446 002e 23F47003 		bic	r3, r3, #15728640
 2447 0032 FB60     		str	r3, [r7, #12]
1442:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1443:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 2448              		.loc 1 1443 0
 2449 0034 3B68     		ldr	r3, [r7, #0]
 2450 0036 03F00073 		and	r3, r3, #33554432
 2451 003a 002B     		cmp	r3, #0
 2452 003c 03D0     		beq	.L130
1444:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1445:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1446:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 2453              		.loc 1 1446 0
 2454 003e 7B68     		ldr	r3, [r7, #4]
 2455 0040 FA68     		ldr	r2, [r7, #12]
 2456 0042 DA60     		str	r2, [r3, #12]
 2457 0044 14E0     		b	.L127
 2458              	.L130:
1447:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1448:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 2459              		.loc 1 1448 0
 2460 0046 3B68     		ldr	r3, [r7, #0]
 2461 0048 03F08063 		and	r3, r3, #67108864
 2462 004c 002B     		cmp	r3, #0
 2463 004e 03D0     		beq	.L131
1449:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1450:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1451:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 2464              		.loc 1 1451 0
 2465 0050 7B68     		ldr	r3, [r7, #4]
 2466 0052 FA68     		ldr	r2, [r7, #12]
 2467 0054 1A61     		str	r2, [r3, #16]
 2468 0056 0BE0     		b	.L127
 2469              	.L131:
1452:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1453:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 2470              		.loc 1 1453 0
 2471 0058 3B68     		ldr	r3, [r7, #0]
 2472 005a 03F00063 		and	r3, r3, #134217728
 2473 005e 002B     		cmp	r3, #0
 2474 0060 03D0     		beq	.L132
1454:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1455:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1456:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 2475              		.loc 1 1456 0
 2476 0062 7B68     		ldr	r3, [r7, #4]
 2477 0064 FA68     		ldr	r2, [r7, #12]
 2478 0066 9A60     		str	r2, [r3, #8]
 2479 0068 02E0     		b	.L127
 2480              	.L132:
1457:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1458:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1460:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1461:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 2481              		.loc 1 1461 0
 2482 006a 7B68     		ldr	r3, [r7, #4]
 2483 006c FA68     		ldr	r2, [r7, #12]
 2484 006e 5A60     		str	r2, [r3, #4]
 2485              	.L127:
1462:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1463:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1464:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2486              		.loc 1 1464 0
 2487 0070 07F11407 		add	r7, r7, #20
 2488 0074 BD46     		mov	sp, r7
 2489 0076 80BC     		pop	{r7}
 2490 0078 7047     		bx	lr
 2491              		.cfi_endproc
 2492              	.LFE131:
 2494 007a 00BF     		.section	.text.CAN_GetITStatus,"ax",%progbits
 2495              		.align	2
 2496              		.global	CAN_GetITStatus
 2497              		.thumb
 2498              		.thumb_func
 2500              	CAN_GetITStatus:
 2501              	.LFB132:
1465:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1466:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1467:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1471:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1487:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2502              		.loc 1 1488 0
 2503              		.cfi_startproc
 2504              		@ args = 0, pretend = 0, frame = 16
 2505              		@ frame_needed = 1, uses_anonymous_args = 0
 2506 0000 80B5     		push	{r7, lr}
 2507              	.LCFI66:
 2508              		.cfi_def_cfa_offset 8
 2509              		.cfi_offset 14, -4
 2510              		.cfi_offset 7, -8
 2511 0002 84B0     		sub	sp, sp, #16
 2512              	.LCFI67:
 2513              		.cfi_def_cfa_offset 24
 2514 0004 00AF     		add	r7, sp, #0
 2515              	.LCFI68:
 2516              		.cfi_def_cfa_register 7
 2517 0006 7860     		str	r0, [r7, #4]
 2518 0008 3960     		str	r1, [r7, #0]
1489:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 2519              		.loc 1 1489 0
 2520 000a 4FF00003 		mov	r3, #0
 2521 000e FB73     		strb	r3, [r7, #15]
1490:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1491:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1494:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1495:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 2522              		.loc 1 1495 0
 2523 0010 7B68     		ldr	r3, [r7, #4]
 2524 0012 5B69     		ldr	r3, [r3, #20]
 2525 0014 1A46     		mov	r2, r3
 2526 0016 3B68     		ldr	r3, [r7, #0]
 2527 0018 1340     		ands	r3, r3, r2
 2528 001a 002B     		cmp	r3, #0
 2529 001c 00F0C480 		beq	.L134
1496:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1497:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 2530              		.loc 1 1498 0
 2531 0020 3B68     		ldr	r3, [r7, #0]
 2532 0022 402B     		cmp	r3, #64
 2533 0024 6BD0     		beq	.L142
 2534 0026 402B     		cmp	r3, #64
 2535 0028 0FD8     		bhi	.L150
 2536 002a 042B     		cmp	r3, #4
 2537 002c 3FD0     		beq	.L138
 2538 002e 042B     		cmp	r3, #4
 2539 0030 04D8     		bhi	.L151
 2540 0032 012B     		cmp	r3, #1
 2541 0034 25D0     		beq	.L136
 2542 0036 022B     		cmp	r3, #2
 2543 0038 2FD0     		beq	.L137
 2544 003a B1E0     		b	.L135
 2545              	.L151:
 2546 003c 102B     		cmp	r3, #16
 2547 003e 4AD0     		beq	.L140
 2548 0040 202B     		cmp	r3, #32
 2549 0042 52D0     		beq	.L141
 2550 0044 082B     		cmp	r3, #8
 2551 0046 3CD0     		beq	.L139
 2552 0048 AAE0     		b	.L135
 2553              	.L150:
 2554 004a B3F5006F 		cmp	r3, #2048
 2555 004e 00F09280 		beq	.L146
 2556 0052 B3F5006F 		cmp	r3, #2048
 2557 0056 09D8     		bhi	.L152
 2558 0058 B3F5007F 		cmp	r3, #512
 2559 005c 77D0     		beq	.L144
 2560 005e B3F5806F 		cmp	r3, #1024
 2561 0062 7ED0     		beq	.L145
 2562 0064 B3F5807F 		cmp	r3, #256
 2563 0068 67D0     		beq	.L143
 2564 006a 99E0     		b	.L135
 2565              	.L152:
 2566 006c B3F5803F 		cmp	r3, #65536
 2567 0070 4FD0     		beq	.L148
 2568 0072 B3F5003F 		cmp	r3, #131072
 2569 0076 56D0     		beq	.L149
 2570 0078 B3F5004F 		cmp	r3, #32768
 2571 007c 00F08580 		beq	.L147
 2572 0080 8EE0     		b	.L135
 2573              	.L136:
1499:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1500:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1501:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 2574              		.loc 1 1502 0
 2575 0082 7B68     		ldr	r3, [r7, #4]
 2576 0084 9B68     		ldr	r3, [r3, #8]
 2577 0086 1846     		mov	r0, r3
 2578 0088 40F20111 		movw	r1, #257
 2579 008c C0F20101 		movt	r1, 1
 2580 0090 FFF7FEFF 		bl	CheckITStatus
 2581 0094 0346     		mov	r3, r0
 2582 0096 FB73     		strb	r3, [r7, #15]
1503:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2583              		.loc 1 1503 0
 2584 0098 89E0     		b	.L154
 2585              	.L137:
1504:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1505:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 2586              		.loc 1 1506 0
 2587 009a 7B68     		ldr	r3, [r7, #4]
 2588 009c DB68     		ldr	r3, [r3, #12]
 2589 009e 1846     		mov	r0, r3
 2590 00a0 4FF00301 		mov	r1, #3
 2591 00a4 FFF7FEFF 		bl	CheckITStatus
 2592 00a8 0346     		mov	r3, r0
 2593 00aa FB73     		strb	r3, [r7, #15]
1507:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2594              		.loc 1 1507 0
 2595 00ac 7FE0     		b	.L154
 2596              	.L138:
1508:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1509:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 2597              		.loc 1 1510 0
 2598 00ae 7B68     		ldr	r3, [r7, #4]
 2599 00b0 DB68     		ldr	r3, [r3, #12]
 2600 00b2 1846     		mov	r0, r3
 2601 00b4 4FF00801 		mov	r1, #8
 2602 00b8 FFF7FEFF 		bl	CheckITStatus
 2603 00bc 0346     		mov	r3, r0
 2604 00be FB73     		strb	r3, [r7, #15]
1511:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2605              		.loc 1 1511 0
 2606 00c0 75E0     		b	.L154
 2607              	.L139:
1512:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1513:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 2608              		.loc 1 1514 0
 2609 00c2 7B68     		ldr	r3, [r7, #4]
 2610 00c4 DB68     		ldr	r3, [r3, #12]
 2611 00c6 1846     		mov	r0, r3
 2612 00c8 4FF01001 		mov	r1, #16
 2613 00cc FFF7FEFF 		bl	CheckITStatus
 2614 00d0 0346     		mov	r3, r0
 2615 00d2 FB73     		strb	r3, [r7, #15]
1515:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2616              		.loc 1 1515 0
 2617 00d4 6BE0     		b	.L154
 2618              	.L140:
1516:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1517:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 2619              		.loc 1 1518 0
 2620 00d6 7B68     		ldr	r3, [r7, #4]
 2621 00d8 1B69     		ldr	r3, [r3, #16]
 2622 00da 1846     		mov	r0, r3
 2623 00dc 4FF00301 		mov	r1, #3
 2624 00e0 FFF7FEFF 		bl	CheckITStatus
 2625 00e4 0346     		mov	r3, r0
 2626 00e6 FB73     		strb	r3, [r7, #15]
1519:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2627              		.loc 1 1519 0
 2628 00e8 61E0     		b	.L154
 2629              	.L141:
1520:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1521:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 2630              		.loc 1 1522 0
 2631 00ea 7B68     		ldr	r3, [r7, #4]
 2632 00ec 1B69     		ldr	r3, [r3, #16]
 2633 00ee 1846     		mov	r0, r3
 2634 00f0 4FF00801 		mov	r1, #8
 2635 00f4 FFF7FEFF 		bl	CheckITStatus
 2636 00f8 0346     		mov	r3, r0
 2637 00fa FB73     		strb	r3, [r7, #15]
1523:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2638              		.loc 1 1523 0
 2639 00fc 57E0     		b	.L154
 2640              	.L142:
1524:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1525:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 2641              		.loc 1 1526 0
 2642 00fe 7B68     		ldr	r3, [r7, #4]
 2643 0100 1B69     		ldr	r3, [r3, #16]
 2644 0102 1846     		mov	r0, r3
 2645 0104 4FF01001 		mov	r1, #16
 2646 0108 FFF7FEFF 		bl	CheckITStatus
 2647 010c 0346     		mov	r3, r0
 2648 010e FB73     		strb	r3, [r7, #15]
1527:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2649              		.loc 1 1527 0
 2650 0110 4DE0     		b	.L154
 2651              	.L148:
1528:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1529:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 2652              		.loc 1 1530 0
 2653 0112 7B68     		ldr	r3, [r7, #4]
 2654 0114 5B68     		ldr	r3, [r3, #4]
 2655 0116 1846     		mov	r0, r3
 2656 0118 4FF00801 		mov	r1, #8
 2657 011c FFF7FEFF 		bl	CheckITStatus
 2658 0120 0346     		mov	r3, r0
 2659 0122 FB73     		strb	r3, [r7, #15]
1531:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2660              		.loc 1 1531 0
 2661 0124 43E0     		b	.L154
 2662              	.L149:
1532:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1533:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 2663              		.loc 1 1534 0
 2664 0126 7B68     		ldr	r3, [r7, #4]
 2665 0128 5B68     		ldr	r3, [r3, #4]
 2666 012a 1846     		mov	r0, r3
 2667 012c 4FF01001 		mov	r1, #16
 2668 0130 FFF7FEFF 		bl	CheckITStatus
 2669 0134 0346     		mov	r3, r0
 2670 0136 FB73     		strb	r3, [r7, #15]
1535:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2671              		.loc 1 1535 0
 2672 0138 39E0     		b	.L154
 2673              	.L143:
1536:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1537:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 2674              		.loc 1 1538 0
 2675 013a 7B68     		ldr	r3, [r7, #4]
 2676 013c 9B69     		ldr	r3, [r3, #24]
 2677 013e 1846     		mov	r0, r3
 2678 0140 4FF00101 		mov	r1, #1
 2679 0144 FFF7FEFF 		bl	CheckITStatus
 2680 0148 0346     		mov	r3, r0
 2681 014a FB73     		strb	r3, [r7, #15]
1539:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2682              		.loc 1 1539 0
 2683 014c 2FE0     		b	.L154
 2684              	.L144:
1540:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1541:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 2685              		.loc 1 1542 0
 2686 014e 7B68     		ldr	r3, [r7, #4]
 2687 0150 9B69     		ldr	r3, [r3, #24]
 2688 0152 1846     		mov	r0, r3
 2689 0154 4FF00201 		mov	r1, #2
 2690 0158 FFF7FEFF 		bl	CheckITStatus
 2691 015c 0346     		mov	r3, r0
 2692 015e FB73     		strb	r3, [r7, #15]
1543:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2693              		.loc 1 1543 0
 2694 0160 25E0     		b	.L154
 2695              	.L145:
1544:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1545:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 2696              		.loc 1 1546 0
 2697 0162 7B68     		ldr	r3, [r7, #4]
 2698 0164 9B69     		ldr	r3, [r3, #24]
 2699 0166 1846     		mov	r0, r3
 2700 0168 4FF00401 		mov	r1, #4
 2701 016c FFF7FEFF 		bl	CheckITStatus
 2702 0170 0346     		mov	r3, r0
 2703 0172 FB73     		strb	r3, [r7, #15]
1547:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2704              		.loc 1 1547 0
 2705 0174 1BE0     		b	.L154
 2706              	.L146:
1548:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1549:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 2707              		.loc 1 1550 0
 2708 0176 7B68     		ldr	r3, [r7, #4]
 2709 0178 9B69     		ldr	r3, [r3, #24]
 2710 017a 1846     		mov	r0, r3
 2711 017c 4FF07001 		mov	r1, #112
 2712 0180 FFF7FEFF 		bl	CheckITStatus
 2713 0184 0346     		mov	r3, r0
 2714 0186 FB73     		strb	r3, [r7, #15]
1551:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2715              		.loc 1 1551 0
 2716 0188 11E0     		b	.L154
 2717              	.L147:
1552:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1553:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 2718              		.loc 1 1554 0
 2719 018a 7B68     		ldr	r3, [r7, #4]
 2720 018c 5B68     		ldr	r3, [r3, #4]
 2721 018e 1846     		mov	r0, r3
 2722 0190 4FF00401 		mov	r1, #4
 2723 0194 FFF7FEFF 		bl	CheckITStatus
 2724 0198 0346     		mov	r3, r0
 2725 019a FB73     		strb	r3, [r7, #15]
1555:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2726              		.loc 1 1555 0
 2727 019c 00BF     		nop
 2728 019e 06E0     		b	.L154
 2729              	.L135:
1556:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1557:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1558:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 2730              		.loc 1 1558 0
 2731 01a0 4FF00003 		mov	r3, #0
 2732 01a4 FB73     		strb	r3, [r7, #15]
1559:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2733              		.loc 1 1559 0
 2734 01a6 02E0     		b	.L154
 2735              	.L134:
1560:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1561:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1562:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1563:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1564:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
 2736              		.loc 1 1565 0
 2737 01a8 4FF00003 		mov	r3, #0
 2738 01ac FB73     		strb	r3, [r7, #15]
 2739              	.L154:
1566:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1567:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1568:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1569:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
 2740              		.loc 1 1569 0
 2741 01ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1570:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2742              		.loc 1 1570 0
 2743 01b0 1846     		mov	r0, r3
 2744 01b2 07F11007 		add	r7, r7, #16
 2745 01b6 BD46     		mov	sp, r7
 2746 01b8 80BD     		pop	{r7, pc}
 2747              		.cfi_endproc
 2748              	.LFE132:
 2750              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 2751              		.align	2
 2752              		.global	CAN_ClearITPendingBit
 2753              		.thumb
 2754              		.thumb_func
 2756              	CAN_ClearITPendingBit:
 2757              	.LFB133:
1571:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1572:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1573:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1577:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1590:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1591:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2758              		.loc 1 1592 0
 2759              		.cfi_startproc
 2760              		@ args = 0, pretend = 0, frame = 8
 2761              		@ frame_needed = 1, uses_anonymous_args = 0
 2762              		@ link register save eliminated.
 2763 0000 80B4     		push	{r7}
 2764              	.LCFI69:
 2765              		.cfi_def_cfa_offset 4
 2766              		.cfi_offset 7, -4
 2767 0002 83B0     		sub	sp, sp, #12
 2768              	.LCFI70:
 2769              		.cfi_def_cfa_offset 16
 2770 0004 00AF     		add	r7, sp, #0
 2771              	.LCFI71:
 2772              		.cfi_def_cfa_register 7
 2773 0006 7860     		str	r0, [r7, #4]
 2774 0008 3960     		str	r1, [r7, #0]
1593:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1594:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1597:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2775              		.loc 1 1597 0
 2776 000a 3B68     		ldr	r3, [r7, #0]
 2777 000c B3F5807F 		cmp	r3, #256
 2778 0010 4CD0     		beq	.L162
 2779 0012 B3F5807F 		cmp	r3, #256
 2780 0016 0DD8     		bhi	.L169
 2781 0018 082B     		cmp	r3, #8
 2782 001a 2ED0     		beq	.L159
 2783 001c 082B     		cmp	r3, #8
 2784 001e 04D8     		bhi	.L170
 2785 0020 012B     		cmp	r3, #1
 2786 0022 1ED0     		beq	.L157
 2787 0024 042B     		cmp	r3, #4
 2788 0026 23D0     		beq	.L158
 2789 0028 61E0     		b	.L156
 2790              	.L170:
 2791 002a 202B     		cmp	r3, #32
 2792 002c 2AD0     		beq	.L160
 2793 002e 402B     		cmp	r3, #64
 2794 0030 2DD0     		beq	.L161
 2795 0032 5CE0     		b	.L156
 2796              	.L169:
 2797 0034 B3F5006F 		cmp	r3, #2048
 2798 0038 47D0     		beq	.L165
 2799 003a B3F5006F 		cmp	r3, #2048
 2800 003e 06D8     		bhi	.L171
 2801 0040 B3F5007F 		cmp	r3, #512
 2802 0044 37D0     		beq	.L163
 2803 0046 B3F5806F 		cmp	r3, #1024
 2804 004a 39D0     		beq	.L164
 2805 004c 4FE0     		b	.L156
 2806              	.L171:
 2807 004e B3F5803F 		cmp	r3, #65536
 2808 0052 21D0     		beq	.L167
 2809 0054 B3F5003F 		cmp	r3, #131072
 2810 0058 23D0     		beq	.L168
 2811 005a B3F5004F 		cmp	r3, #32768
 2812 005e 3DD0     		beq	.L166
 2813 0060 45E0     		b	.L156
 2814              	.L157:
1598:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1599:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1600:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
 2815              		.loc 1 1601 0
 2816 0062 7A68     		ldr	r2, [r7, #4]
 2817 0064 40F20113 		movw	r3, #257
 2818 0068 C0F20103 		movt	r3, 1
 2819 006c 9360     		str	r3, [r2, #8]
1602:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2820              		.loc 1 1602 0
 2821 006e 3FE0     		b	.L155
 2822              	.L158:
1603:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1604:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
 2823              		.loc 1 1605 0
 2824 0070 7B68     		ldr	r3, [r7, #4]
 2825 0072 4FF00802 		mov	r2, #8
 2826 0076 DA60     		str	r2, [r3, #12]
1606:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2827              		.loc 1 1606 0
 2828 0078 3AE0     		b	.L155
 2829              	.L159:
1607:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1608:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
 2830              		.loc 1 1609 0
 2831 007a 7B68     		ldr	r3, [r7, #4]
 2832 007c 4FF01002 		mov	r2, #16
 2833 0080 DA60     		str	r2, [r3, #12]
1610:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2834              		.loc 1 1610 0
 2835 0082 35E0     		b	.L155
 2836              	.L160:
1611:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1612:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
 2837              		.loc 1 1613 0
 2838 0084 7B68     		ldr	r3, [r7, #4]
 2839 0086 4FF00802 		mov	r2, #8
 2840 008a 1A61     		str	r2, [r3, #16]
1614:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2841              		.loc 1 1614 0
 2842 008c 30E0     		b	.L155
 2843              	.L161:
1615:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1616:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
 2844              		.loc 1 1617 0
 2845 008e 7B68     		ldr	r3, [r7, #4]
 2846 0090 4FF01002 		mov	r2, #16
 2847 0094 1A61     		str	r2, [r3, #16]
1618:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2848              		.loc 1 1618 0
 2849 0096 2BE0     		b	.L155
 2850              	.L167:
1619:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1620:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
 2851              		.loc 1 1621 0
 2852 0098 7B68     		ldr	r3, [r7, #4]
 2853 009a 4FF00802 		mov	r2, #8
 2854 009e 5A60     		str	r2, [r3, #4]
1622:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2855              		.loc 1 1622 0
 2856 00a0 26E0     		b	.L155
 2857              	.L168:
1623:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1624:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
 2858              		.loc 1 1625 0
 2859 00a2 7B68     		ldr	r3, [r7, #4]
 2860 00a4 4FF01002 		mov	r2, #16
 2861 00a8 5A60     		str	r2, [r3, #4]
1626:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2862              		.loc 1 1626 0
 2863 00aa 21E0     		b	.L155
 2864              	.L162:
1627:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1628:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
 2865              		.loc 1 1629 0
 2866 00ac 7B68     		ldr	r3, [r7, #4]
 2867 00ae 4FF00402 		mov	r2, #4
 2868 00b2 5A60     		str	r2, [r3, #4]
1630:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2869              		.loc 1 1631 0
 2870 00b4 1CE0     		b	.L155
 2871              	.L163:
1632:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1633:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2872              		.loc 1 1634 0
 2873 00b6 7B68     		ldr	r3, [r7, #4]
 2874 00b8 4FF00402 		mov	r2, #4
 2875 00bc 5A60     		str	r2, [r3, #4]
1635:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2876              		.loc 1 1636 0
 2877 00be 17E0     		b	.L155
 2878              	.L164:
1637:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1638:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2879              		.loc 1 1639 0
 2880 00c0 7B68     		ldr	r3, [r7, #4]
 2881 00c2 4FF00402 		mov	r2, #4
 2882 00c6 5A60     		str	r2, [r3, #4]
1640:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2883              		.loc 1 1641 0
 2884 00c8 12E0     		b	.L155
 2885              	.L165:
1642:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1643:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1644:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2886              		.loc 1 1644 0
 2887 00ca 7B68     		ldr	r3, [r7, #4]
 2888 00cc 4FF00002 		mov	r2, #0
 2889 00d0 9A61     		str	r2, [r3, #24]
1645:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2890              		.loc 1 1646 0
 2891 00d2 7B68     		ldr	r3, [r7, #4]
 2892 00d4 4FF00402 		mov	r2, #4
 2893 00d8 5A60     		str	r2, [r3, #4]
1647:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2894              		.loc 1 1647 0
 2895 00da 09E0     		b	.L155
 2896              	.L166:
1648:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1649:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1650:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 2897              		.loc 1 1650 0
 2898 00dc 7B68     		ldr	r3, [r7, #4]
 2899 00de 4FF00002 		mov	r2, #0
 2900 00e2 9A61     		str	r2, [r3, #24]
1651:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 2901              		.loc 1 1652 0
 2902 00e4 7B68     		ldr	r3, [r7, #4]
 2903 00e6 4FF00402 		mov	r2, #4
 2904 00ea 5A60     		str	r2, [r3, #4]
1653:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2905              		.loc 1 1654 0
 2906 00ec 00E0     		b	.L155
 2907              	.L156:
1655:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1656:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2908              		.loc 1 1656 0
 2909 00ee 00BF     		nop
 2910              	.L155:
1657:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1658:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2911              		.loc 1 1658 0
 2912 00f0 07F10C07 		add	r7, r7, #12
 2913 00f4 BD46     		mov	sp, r7
 2914 00f6 80BC     		pop	{r7}
 2915 00f8 7047     		bx	lr
 2916              		.cfi_endproc
 2917              	.LFE133:
 2919 00fa 00BF     		.section	.text.CheckITStatus,"ax",%progbits
 2920              		.align	2
 2921              		.thumb
 2922              		.thumb_func
 2924              	CheckITStatus:
 2925              	.LFB134:
1659:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1660:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1661:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1662:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1663:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1664:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1669:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2926              		.loc 1 1670 0
 2927              		.cfi_startproc
 2928              		@ args = 0, pretend = 0, frame = 16
 2929              		@ frame_needed = 1, uses_anonymous_args = 0
 2930              		@ link register save eliminated.
 2931 0000 80B4     		push	{r7}
 2932              	.LCFI72:
 2933              		.cfi_def_cfa_offset 4
 2934              		.cfi_offset 7, -4
 2935 0002 85B0     		sub	sp, sp, #20
 2936              	.LCFI73:
 2937              		.cfi_def_cfa_offset 24
 2938 0004 00AF     		add	r7, sp, #0
 2939              	.LCFI74:
 2940              		.cfi_def_cfa_register 7
 2941 0006 7860     		str	r0, [r7, #4]
 2942 0008 3960     		str	r1, [r7, #0]
1671:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
 2943              		.loc 1 1671 0
 2944 000a 4FF00003 		mov	r3, #0
 2945 000e FB73     		strb	r3, [r7, #15]
1672:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1673:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 2946              		.loc 1 1673 0
 2947 0010 7A68     		ldr	r2, [r7, #4]
 2948 0012 3B68     		ldr	r3, [r7, #0]
 2949 0014 1340     		ands	r3, r3, r2
 2950 0016 002B     		cmp	r3, #0
 2951 0018 03D0     		beq	.L174
1674:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1675:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1676:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
 2952              		.loc 1 1676 0
 2953 001a 4FF00103 		mov	r3, #1
 2954 001e FB73     		strb	r3, [r7, #15]
 2955 0020 02E0     		b	.L175
 2956              	.L174:
1677:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1678:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1679:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1680:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1681:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 2957              		.loc 1 1681 0
 2958 0022 4FF00003 		mov	r3, #0
 2959 0026 FB73     		strb	r3, [r7, #15]
 2960              	.L175:
1682:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1683:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return pendingbitstatus;
 2961              		.loc 1 1683 0
 2962 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1684:../STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2963              		.loc 1 1684 0
 2964 002a 1846     		mov	r0, r3
 2965 002c 07F11407 		add	r7, r7, #20
 2966 0030 BD46     		mov	sp, r7
 2967 0032 80BC     		pop	{r7}
 2968 0034 7047     		bx	lr
 2969              		.cfi_endproc
 2970              	.LFE134:
 2972 0036 00BF     		.text
 2973              	.Letext0:
 2974              		.file 2 "d:/elektronik/ides/eclipse/yagarto/lib/gcc/../../arm-none-eabi/sys-include/stdint.h"
 2975              		.file 3 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Devi
 2976              		.file 4 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\STM32F4xx_S
 2977              		.file 5 "C:\\Dokumente und Einstellungen\\brand\\Desktop\\thundercyer-the-alarm-clock\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_can.c
  C:\Temp\cc5hu7RE.s:19     .text.CAN_DeInit:00000000 $t
  C:\Temp\cc5hu7RE.s:24     .text.CAN_DeInit:00000000 CAN_DeInit
  C:\Temp\cc5hu7RE.s:76     .text.CAN_Init:00000000 $t
  C:\Temp\cc5hu7RE.s:81     .text.CAN_Init:00000000 CAN_Init
  C:\Temp\cc5hu7RE.s:358    .text.CAN_FilterInit:00000000 $t
  C:\Temp\cc5hu7RE.s:363    .text.CAN_FilterInit:00000000 CAN_FilterInit
  C:\Temp\cc5hu7RE.s:609    .text.CAN_StructInit:00000000 $t
  C:\Temp\cc5hu7RE.s:614    .text.CAN_StructInit:00000000 CAN_StructInit
  C:\Temp\cc5hu7RE.s:685    .text.CAN_SlaveStartBank:00000000 $t
  C:\Temp\cc5hu7RE.s:690    .text.CAN_SlaveStartBank:00000000 CAN_SlaveStartBank
  C:\Temp\cc5hu7RE.s:754    .text.CAN_DBGFreeze:00000000 $t
  C:\Temp\cc5hu7RE.s:759    .text.CAN_DBGFreeze:00000000 CAN_DBGFreeze
  C:\Temp\cc5hu7RE.s:807    .text.CAN_TTComModeCmd:00000000 $t
  C:\Temp\cc5hu7RE.s:812    .text.CAN_TTComModeCmd:00000000 CAN_TTComModeCmd
  C:\Temp\cc5hu7RE.s:896    .text.CAN_Transmit:00000000 $t
  C:\Temp\cc5hu7RE.s:901    .text.CAN_Transmit:00000000 CAN_Transmit
  C:\Temp\cc5hu7RE.s:1159   .text.CAN_TransmitStatus:00000000 $t
  C:\Temp\cc5hu7RE.s:1164   .text.CAN_TransmitStatus:00000000 CAN_TransmitStatus
  C:\Temp\cc5hu7RE.s:1332   .text.CAN_CancelTransmit:00000000 $t
  C:\Temp\cc5hu7RE.s:1337   .text.CAN_CancelTransmit:00000000 CAN_CancelTransmit
  C:\Temp\cc5hu7RE.s:1405   .text.CAN_Receive:00000000 $t
  C:\Temp\cc5hu7RE.s:1410   .text.CAN_Receive:00000000 CAN_Receive
  C:\Temp\cc5hu7RE.s:1620   .text.CAN_FIFORelease:00000000 $t
  C:\Temp\cc5hu7RE.s:1625   .text.CAN_FIFORelease:00000000 CAN_FIFORelease
  C:\Temp\cc5hu7RE.s:1673   .text.CAN_MessagePending:00000000 $t
  C:\Temp\cc5hu7RE.s:1678   .text.CAN_MessagePending:00000000 CAN_MessagePending
  C:\Temp\cc5hu7RE.s:1741   .text.CAN_OperatingModeRequest:00000000 $t
  C:\Temp\cc5hu7RE.s:1746   .text.CAN_OperatingModeRequest:00000000 CAN_OperatingModeRequest
  C:\Temp\cc5hu7RE.s:1925   .text.CAN_Sleep:00000000 $t
  C:\Temp\cc5hu7RE.s:1930   .text.CAN_Sleep:00000000 CAN_Sleep
  C:\Temp\cc5hu7RE.s:1980   .text.CAN_WakeUp:00000000 $t
  C:\Temp\cc5hu7RE.s:1985   .text.CAN_WakeUp:00000000 CAN_WakeUp
  C:\Temp\cc5hu7RE.s:2056   .text.CAN_GetLastErrorCode:00000000 $t
  C:\Temp\cc5hu7RE.s:2061   .text.CAN_GetLastErrorCode:00000000 CAN_GetLastErrorCode
  C:\Temp\cc5hu7RE.s:2100   .text.CAN_GetReceiveErrorCounter:00000000 $t
  C:\Temp\cc5hu7RE.s:2105   .text.CAN_GetReceiveErrorCounter:00000000 CAN_GetReceiveErrorCounter
  C:\Temp\cc5hu7RE.s:2143   .text.CAN_GetLSBTransmitErrorCounter:00000000 $t
  C:\Temp\cc5hu7RE.s:2148   .text.CAN_GetLSBTransmitErrorCounter:00000000 CAN_GetLSBTransmitErrorCounter
  C:\Temp\cc5hu7RE.s:2187   .text.CAN_ITConfig:00000000 $t
  C:\Temp\cc5hu7RE.s:2192   .text.CAN_ITConfig:00000000 CAN_ITConfig
  C:\Temp\cc5hu7RE.s:2246   .text.CAN_GetFlagStatus:00000000 $t
  C:\Temp\cc5hu7RE.s:2251   .text.CAN_GetFlagStatus:00000000 CAN_GetFlagStatus
  C:\Temp\cc5hu7RE.s:2404   .text.CAN_ClearFlag:00000000 $t
  C:\Temp\cc5hu7RE.s:2409   .text.CAN_ClearFlag:00000000 CAN_ClearFlag
  C:\Temp\cc5hu7RE.s:2495   .text.CAN_GetITStatus:00000000 $t
  C:\Temp\cc5hu7RE.s:2500   .text.CAN_GetITStatus:00000000 CAN_GetITStatus
  C:\Temp\cc5hu7RE.s:2924   .text.CheckITStatus:00000000 CheckITStatus
  C:\Temp\cc5hu7RE.s:2751   .text.CAN_ClearITPendingBit:00000000 $t
  C:\Temp\cc5hu7RE.s:2756   .text.CAN_ClearITPendingBit:00000000 CAN_ClearITPendingBit
  C:\Temp\cc5hu7RE.s:2920   .text.CheckITStatus:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
