   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"syscalls.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__malloc_margin
  20              		.section	.data.__malloc_margin,"aw",%progbits
  21              		.align	2
  24              	__malloc_margin:
  25 0000 00010000 		.word	256
  26              		.comm	__brkval,4,4
  27              		.text
  28              		.align	2
  29              		.global	_exit
  30              		.thumb
  31              		.thumb_func
  33              	_exit:
  34              	.LFB110:
  35              		.file 1 "../syscalls.c"
   1:../syscalls.c **** #include "syscalls.h"
   2:../syscalls.c **** #include "stm32f4xx.h"
   3:../syscalls.c **** #include "FreeRTOS.h"
   4:../syscalls.c **** #include <unistd.h>
   5:../syscalls.c **** #include <stdlib.h>
   6:../syscalls.c **** #include <errno.h>
   7:../syscalls.c **** #include <string.h>
   8:../syscalls.c **** #include <sys/stat.h>
   9:../syscalls.c **** #include <sys/time.h>
  10:../syscalls.c **** 
  11:../syscalls.c **** size_t   __malloc_margin = 256;
  12:../syscalls.c **** char    *__brkval;
  13:../syscalls.c **** 
  14:../syscalls.c **** void _exit(int code)
  15:../syscalls.c **** {
  36              		.loc 1 15 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 8
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40              		@ link register save eliminated.
  41 0000 80B4     		push	{r7}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 4
  44              		.cfi_offset 7, -4
  45 0002 83B0     		sub	sp, sp, #12
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 16
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
  52              	.L2:
  16:../syscalls.c ****     for (;;);
  53              		.loc 1 16 0 discriminator 1
  54 0008 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE110:
  58 000a 00BF     		.align	2
  59              		.global	_read_r
  60              		.thumb
  61              		.thumb_func
  63              	_read_r:
  64              	.LFB111:
  17:../syscalls.c **** }
  18:../syscalls.c **** 
  19:../syscalls.c **** 
  20:../syscalls.c **** ssize_t _read_r(struct _reent *r, int fd, void *ptr, size_t len)
  21:../syscalls.c **** {
  65              		.loc 1 21 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 16
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70 000c 80B4     		push	{r7}
  71              	.LCFI3:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 7, -4
  74 000e 85B0     		sub	sp, sp, #20
  75              	.LCFI4:
  76              		.cfi_def_cfa_offset 24
  77 0010 00AF     		add	r7, sp, #0
  78              	.LCFI5:
  79              		.cfi_def_cfa_register 7
  80 0012 F860     		str	r0, [r7, #12]
  81 0014 B960     		str	r1, [r7, #8]
  82 0016 7A60     		str	r2, [r7, #4]
  83 0018 3B60     		str	r3, [r7, #0]
  22:../syscalls.c ****     //return uart_read_r(r, fd, ptr, len);
  23:../syscalls.c **** 	/**
  24:../syscalls.c **** 	 * printf mapping function
  25:../syscalls.c **** 	 */
  26:../syscalls.c **** 	return 0;
  84              		.loc 1 26 0
  85 001a 4FF00003 		mov	r3, #0
  27:../syscalls.c **** }
  86              		.loc 1 27 0
  87 001e 1846     		mov	r0, r3
  88 0020 07F11407 		add	r7, r7, #20
  89 0024 BD46     		mov	sp, r7
  90 0026 80BC     		pop	{r7}
  91 0028 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE111:
  95 002a 00BF     		.align	2
  96              		.global	_write_r
  97              		.thumb
  98              		.thumb_func
 100              	_write_r:
 101              	.LFB112:
  28:../syscalls.c **** 
  29:../syscalls.c **** 
  30:../syscalls.c **** ssize_t _write_r(struct _reent *r, int fd, const void *ptr, size_t len)
  31:../syscalls.c **** {
 102              		.loc 1 31 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 16
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107 002c 80B4     		push	{r7}
 108              	.LCFI6:
 109              		.cfi_def_cfa_offset 4
 110              		.cfi_offset 7, -4
 111 002e 85B0     		sub	sp, sp, #20
 112              	.LCFI7:
 113              		.cfi_def_cfa_offset 24
 114 0030 00AF     		add	r7, sp, #0
 115              	.LCFI8:
 116              		.cfi_def_cfa_register 7
 117 0032 F860     		str	r0, [r7, #12]
 118 0034 B960     		str	r1, [r7, #8]
 119 0036 7A60     		str	r2, [r7, #4]
 120 0038 3B60     		str	r3, [r7, #0]
  32:../syscalls.c ****     //return uart_write_r(r, fd, ptr, len);
  33:../syscalls.c **** 	/**
  34:../syscalls.c **** 	 * printf maping function
  35:../syscalls.c **** 	 */
  36:../syscalls.c **** 	return 0;
 121              		.loc 1 36 0
 122 003a 4FF00003 		mov	r3, #0
  37:../syscalls.c **** }
 123              		.loc 1 37 0
 124 003e 1846     		mov	r0, r3
 125 0040 07F11407 		add	r7, r7, #20
 126 0044 BD46     		mov	sp, r7
 127 0046 80BC     		pop	{r7}
 128 0048 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE112:
 132 004a 00BF     		.align	2
 133              		.global	_lseek_r
 134              		.thumb
 135              		.thumb_func
 137              	_lseek_r:
 138              	.LFB113:
  38:../syscalls.c **** 
  39:../syscalls.c **** 
  40:../syscalls.c **** off_t _lseek_r(struct _reent *r, int fd, _off_t ptr, int dir)
  41:../syscalls.c **** {
 139              		.loc 1 41 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 16
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 004c 80B4     		push	{r7}
 145              	.LCFI9:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 7, -4
 148 004e 85B0     		sub	sp, sp, #20
 149              	.LCFI10:
 150              		.cfi_def_cfa_offset 24
 151 0050 00AF     		add	r7, sp, #0
 152              	.LCFI11:
 153              		.cfi_def_cfa_register 7
 154 0052 F860     		str	r0, [r7, #12]
 155 0054 B960     		str	r1, [r7, #8]
 156 0056 7A60     		str	r2, [r7, #4]
 157 0058 3B60     		str	r3, [r7, #0]
  42:../syscalls.c **** 
  43:../syscalls.c ****     r->_errno = ENOSYS;
 158              		.loc 1 43 0
 159 005a FB68     		ldr	r3, [r7, #12]
 160 005c 4FF05802 		mov	r2, #88
 161 0060 1A60     		str	r2, [r3, #0]
  44:../syscalls.c ****     return -1;
 162              		.loc 1 44 0
 163 0062 4FF0FF33 		mov	r3, #-1
  45:../syscalls.c **** }
 164              		.loc 1 45 0
 165 0066 1846     		mov	r0, r3
 166 0068 07F11407 		add	r7, r7, #20
 167 006c BD46     		mov	sp, r7
 168 006e 80BC     		pop	{r7}
 169 0070 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE113:
 173 0072 00BF     		.align	2
 174              		.global	_close_r
 175              		.thumb
 176              		.thumb_func
 178              	_close_r:
 179              	.LFB114:
  46:../syscalls.c **** 
  47:../syscalls.c **** 
  48:../syscalls.c **** int _close_r(struct _reent *r, int fd)
  49:../syscalls.c **** {
 180              		.loc 1 49 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 8
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0074 80B4     		push	{r7}
 186              	.LCFI12:
 187              		.cfi_def_cfa_offset 4
 188              		.cfi_offset 7, -4
 189 0076 83B0     		sub	sp, sp, #12
 190              	.LCFI13:
 191              		.cfi_def_cfa_offset 16
 192 0078 00AF     		add	r7, sp, #0
 193              	.LCFI14:
 194              		.cfi_def_cfa_register 7
 195 007a 7860     		str	r0, [r7, #4]
 196 007c 3960     		str	r1, [r7, #0]
  50:../syscalls.c ****     r->_errno = ENOSYS;
 197              		.loc 1 50 0
 198 007e 7B68     		ldr	r3, [r7, #4]
 199 0080 4FF05802 		mov	r2, #88
 200 0084 1A60     		str	r2, [r3, #0]
  51:../syscalls.c ****     return -1;
 201              		.loc 1 51 0
 202 0086 4FF0FF33 		mov	r3, #-1
  52:../syscalls.c **** }
 203              		.loc 1 52 0
 204 008a 1846     		mov	r0, r3
 205 008c 07F10C07 		add	r7, r7, #12
 206 0090 BD46     		mov	sp, r7
 207 0092 80BC     		pop	{r7}
 208 0094 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE114:
 212 0096 00BF     		.align	2
 213              		.global	_fstat_r
 214              		.thumb
 215              		.thumb_func
 217              	_fstat_r:
 218              	.LFB115:
  53:../syscalls.c **** 
  54:../syscalls.c **** 
  55:../syscalls.c **** int _fstat_r(struct _reent *r, int fd, struct stat *st)
  56:../syscalls.c **** {
 219              		.loc 1 56 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 16
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224 0098 80B4     		push	{r7}
 225              	.LCFI15:
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 009a 85B0     		sub	sp, sp, #20
 229              	.LCFI16:
 230              		.cfi_def_cfa_offset 24
 231 009c 00AF     		add	r7, sp, #0
 232              	.LCFI17:
 233              		.cfi_def_cfa_register 7
 234 009e F860     		str	r0, [r7, #12]
 235 00a0 B960     		str	r1, [r7, #8]
 236 00a2 7A60     		str	r2, [r7, #4]
  57:../syscalls.c ****     if ((fd >= STDIN_FILENO) && (fd <= STDERR_FILENO)) {
 237              		.loc 1 57 0
 238 00a4 BB68     		ldr	r3, [r7, #8]
 239 00a6 002B     		cmp	r3, #0
 240 00a8 09DB     		blt	.L8
 241              		.loc 1 57 0 is_stmt 0 discriminator 1
 242 00aa BB68     		ldr	r3, [r7, #8]
 243 00ac 022B     		cmp	r3, #2
 244 00ae 06DC     		bgt	.L8
  58:../syscalls.c ****       st->st_mode = S_IFCHR;
 245              		.loc 1 58 0 is_stmt 1
 246 00b0 7B68     		ldr	r3, [r7, #4]
 247 00b2 4FF40052 		mov	r2, #8192
 248 00b6 5A60     		str	r2, [r3, #4]
  59:../syscalls.c ****       return 0;
 249              		.loc 1 59 0
 250 00b8 4FF00003 		mov	r3, #0
 251 00bc 05E0     		b	.L9
 252              	.L8:
  60:../syscalls.c ****     }
  61:../syscalls.c **** 
  62:../syscalls.c ****     r->_errno = ENOSYS;
 253              		.loc 1 62 0
 254 00be FB68     		ldr	r3, [r7, #12]
 255 00c0 4FF05802 		mov	r2, #88
 256 00c4 1A60     		str	r2, [r3, #0]
  63:../syscalls.c ****     return -1;
 257              		.loc 1 63 0
 258 00c6 4FF0FF33 		mov	r3, #-1
 259              	.L9:
  64:../syscalls.c **** }
 260              		.loc 1 64 0
 261 00ca 1846     		mov	r0, r3
 262 00cc 07F11407 		add	r7, r7, #20
 263 00d0 BD46     		mov	sp, r7
 264 00d2 80BC     		pop	{r7}
 265 00d4 7047     		bx	lr
 266              		.cfi_endproc
 267              	.LFE115:
 269 00d6 00BF     		.align	2
 270              		.global	_isatty_r
 271              		.thumb
 272              		.thumb_func
 274              	_isatty_r:
 275              	.LFB116:
  65:../syscalls.c **** 
  66:../syscalls.c **** 
  67:../syscalls.c **** int _isatty_r(struct _reent *r, int fd)
  68:../syscalls.c **** {
 276              		.loc 1 68 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281 00d8 80B4     		push	{r7}
 282              	.LCFI18:
 283              		.cfi_def_cfa_offset 4
 284              		.cfi_offset 7, -4
 285 00da 83B0     		sub	sp, sp, #12
 286              	.LCFI19:
 287              		.cfi_def_cfa_offset 16
 288 00dc 00AF     		add	r7, sp, #0
 289              	.LCFI20:
 290              		.cfi_def_cfa_register 7
 291 00de 7860     		str	r0, [r7, #4]
 292 00e0 3960     		str	r1, [r7, #0]
  69:../syscalls.c ****     return 1;
 293              		.loc 1 69 0
 294 00e2 4FF00103 		mov	r3, #1
  70:../syscalls.c **** }
 295              		.loc 1 70 0
 296 00e6 1846     		mov	r0, r3
 297 00e8 07F10C07 		add	r7, r7, #12
 298 00ec BD46     		mov	sp, r7
 299 00ee 80BC     		pop	{r7}
 300 00f0 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE116:
 304 00f2 00BF     		.align	2
 305              		.global	_kill_r
 306              		.thumb
 307              		.thumb_func
 309              	_kill_r:
 310              	.LFB117:
  71:../syscalls.c **** 
  72:../syscalls.c **** /** see cpp Library hacks
  73:../syscalls.c **** void *_sbrk_r(struct _reent *r, ptrdiff_t incr)
  74:../syscalls.c **** {
  75:../syscalls.c ****     extern char end;   // provided by the linker script
  76:../syscalls.c **** 
  77:../syscalls.c ****     if (__brkval == 0)
  78:../syscalls.c ****         __brkval = &end;
  79:../syscalls.c **** 
  80:../syscalls.c ****     if (__brkval + incr > (char*)__get_MSP() - __malloc_margin) {
  81:../syscalls.c ****         r->_errno = ENOMEM;
  82:../syscalls.c ****         return (void*)-1;
  83:../syscalls.c ****     }
  84:../syscalls.c **** 
  85:../syscalls.c ****     void *ret = __brkval;
  86:../syscalls.c ****     __brkval += incr;
  87:../syscalls.c **** 
  88:../syscalls.c ****     return ret;
  89:../syscalls.c **** }*/
  90:../syscalls.c **** 
  91:../syscalls.c **** 
  92:../syscalls.c **** int _kill_r(struct _reent *r, int pid, int signal)
  93:../syscalls.c **** {
 311              		.loc 1 93 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 16
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 316 00f4 80B4     		push	{r7}
 317              	.LCFI21:
 318              		.cfi_def_cfa_offset 4
 319              		.cfi_offset 7, -4
 320 00f6 85B0     		sub	sp, sp, #20
 321              	.LCFI22:
 322              		.cfi_def_cfa_offset 24
 323 00f8 00AF     		add	r7, sp, #0
 324              	.LCFI23:
 325              		.cfi_def_cfa_register 7
 326 00fa F860     		str	r0, [r7, #12]
 327 00fc B960     		str	r1, [r7, #8]
 328 00fe 7A60     		str	r2, [r7, #4]
  94:../syscalls.c ****     r->_errno = ENOSYS;
 329              		.loc 1 94 0
 330 0100 FB68     		ldr	r3, [r7, #12]
 331 0102 4FF05802 		mov	r2, #88
 332 0106 1A60     		str	r2, [r3, #0]
  95:../syscalls.c ****     return -1;
 333              		.loc 1 95 0
 334 0108 4FF0FF33 		mov	r3, #-1
  96:../syscalls.c **** }
 335              		.loc 1 96 0
 336 010c 1846     		mov	r0, r3
 337 010e 07F11407 		add	r7, r7, #20
 338 0112 BD46     		mov	sp, r7
 339 0114 80BC     		pop	{r7}
 340 0116 7047     		bx	lr
 341              		.cfi_endproc
 342              	.LFE117:
 344              		.align	2
 345              		.global	_getpid_r
 346              		.thumb
 347              		.thumb_func
 349              	_getpid_r:
 350              	.LFB118:
  97:../syscalls.c **** 
  98:../syscalls.c **** 
  99:../syscalls.c **** int _getpid_r(struct _reent *r)
 100:../syscalls.c **** {
 351              		.loc 1 100 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 8
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0118 80B4     		push	{r7}
 357              	.LCFI24:
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 7, -4
 360 011a 83B0     		sub	sp, sp, #12
 361              	.LCFI25:
 362              		.cfi_def_cfa_offset 16
 363 011c 00AF     		add	r7, sp, #0
 364              	.LCFI26:
 365              		.cfi_def_cfa_register 7
 366 011e 7860     		str	r0, [r7, #4]
 101:../syscalls.c ****     r->_errno = ENOSYS;
 367              		.loc 1 101 0
 368 0120 7B68     		ldr	r3, [r7, #4]
 369 0122 4FF05802 		mov	r2, #88
 370 0126 1A60     		str	r2, [r3, #0]
 102:../syscalls.c ****     return -1;
 371              		.loc 1 102 0
 372 0128 4FF0FF33 		mov	r3, #-1
 103:../syscalls.c **** }
 373              		.loc 1 103 0
 374 012c 1846     		mov	r0, r3
 375 012e 07F10C07 		add	r7, r7, #12
 376 0132 BD46     		mov	sp, r7
 377 0134 80BC     		pop	{r7}
 378 0136 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE118:
 382              		.align	2
 383              		.global	__malloc_lock
 384              		.thumb
 385              		.thumb_func
 387              	__malloc_lock:
 388              	.LFB119:
 104:../syscalls.c **** 
 105:../syscalls.c **** 
 106:../syscalls.c **** void __malloc_lock(struct _reent *r)
 107:../syscalls.c **** {
 389              		.loc 1 107 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 8
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393 0138 80B5     		push	{r7, lr}
 394              	.LCFI27:
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 14, -4
 397              		.cfi_offset 7, -8
 398 013a 82B0     		sub	sp, sp, #8
 399              	.LCFI28:
 400              		.cfi_def_cfa_offset 16
 401 013c 00AF     		add	r7, sp, #0
 402              	.LCFI29:
 403              		.cfi_def_cfa_register 7
 404 013e 7860     		str	r0, [r7, #4]
 108:../syscalls.c ****     vPortEnterCritical();
 405              		.loc 1 108 0
 406 0140 FFF7FEFF 		bl	vPortEnterCritical
 109:../syscalls.c **** }
 407              		.loc 1 109 0
 408 0144 07F10807 		add	r7, r7, #8
 409 0148 BD46     		mov	sp, r7
 410 014a 80BD     		pop	{r7, pc}
 411              		.cfi_endproc
 412              	.LFE119:
 414              		.align	2
 415              		.global	__malloc_unlock
 416              		.thumb
 417              		.thumb_func
 419              	__malloc_unlock:
 420              	.LFB120:
 110:../syscalls.c **** 
 111:../syscalls.c **** 
 112:../syscalls.c **** void __malloc_unlock(struct _reent *r)
 113:../syscalls.c **** {
 421              		.loc 1 113 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 8
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425 014c 80B5     		push	{r7, lr}
 426              	.LCFI30:
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 14, -4
 429              		.cfi_offset 7, -8
 430 014e 82B0     		sub	sp, sp, #8
 431              	.LCFI31:
 432              		.cfi_def_cfa_offset 16
 433 0150 00AF     		add	r7, sp, #0
 434              	.LCFI32:
 435              		.cfi_def_cfa_register 7
 436 0152 7860     		str	r0, [r7, #4]
 114:../syscalls.c ****     vPortExitCritical();
 437              		.loc 1 114 0
 438 0154 FFF7FEFF 		bl	vPortExitCritical
 115:../syscalls.c **** }
 439              		.loc 1 115 0
 440 0158 07F10807 		add	r7, r7, #8
 441 015c BD46     		mov	sp, r7
 442 015e 80BD     		pop	{r7, pc}
 443              		.cfi_endproc
 444              	.LFE120:
 446              	.Letext0:
 447              		.file 2 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 448              		.file 3 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 449              		.file 4 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 450              		.file 5 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 451              		.file 6 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 452              		.file 7 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 453              		.file 8 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 454              		.file 9 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../lib
 455              		.file 10 "d:\\elektronik\\ides\\chibistudio\\tools\\gnu tools arm embedded\\4.6 2012q2\\bin\\../li
 456              		.file 11 "D:\\Elektronik\\Projekte\\thundercyer-the-alarm-clock\\CMSIS\\Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
  C:\TEMP\ccF4gzbh.s:24     .data.__malloc_margin:00000000 __malloc_margin
  C:\TEMP\ccF4gzbh.s:21     .data.__malloc_margin:00000000 $d
                            *COM*:00000004 __brkval
  C:\TEMP\ccF4gzbh.s:28     .text:00000000 $t
  C:\TEMP\ccF4gzbh.s:33     .text:00000000 _exit
  C:\TEMP\ccF4gzbh.s:63     .text:0000000c _read_r
  C:\TEMP\ccF4gzbh.s:100    .text:0000002c _write_r
  C:\TEMP\ccF4gzbh.s:137    .text:0000004c _lseek_r
  C:\TEMP\ccF4gzbh.s:178    .text:00000074 _close_r
  C:\TEMP\ccF4gzbh.s:217    .text:00000098 _fstat_r
  C:\TEMP\ccF4gzbh.s:274    .text:000000d8 _isatty_r
  C:\TEMP\ccF4gzbh.s:309    .text:000000f4 _kill_r
  C:\TEMP\ccF4gzbh.s:349    .text:00000118 _getpid_r
  C:\TEMP\ccF4gzbh.s:387    .text:00000138 __malloc_lock
  C:\TEMP\ccF4gzbh.s:419    .text:0000014c __malloc_unlock
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
